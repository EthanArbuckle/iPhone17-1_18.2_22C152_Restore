void *JavaMathRoundingModeEnum_valueOfWithNSString_(void *a1)
{
  uint64_t v2;
  void *v3;

  if ((atomic_load_explicit(JavaMathRoundingModeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  v2 = 0;
  while (1)
  {
    v3 = (void *)JavaMathRoundingModeEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v3, "name"))) {
      break;
    }
    if (++v2 == 8) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v3;
}

uint64_t JavaMathRoundingModeEnum_class_()
{
  if ((atomic_load_explicit(JavaMathRoundingModeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560A40 != -1) {
    dispatch_once(&qword_100560A40, &stru_1004145E0);
  }
  return qword_100560A38;
}

void sub_10019FE54(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560A38 = IOSClass_fromClass(v1);
}

void *JavaMathBigInteger_initWithInt_withJavaUtilRandom_(uint64_t a1, int a2, void *a3)
{
  *(_DWORD *)(a1 + 24) = -2;
  *(_DWORD *)(a1 + 40) = 0;
  if (a2 < 0)
  {
    v15 = new_JavaLangIllegalArgumentException_initWithNSString_(@"numBits must be non-negative");
    objc_exception_throw(v15);
  }
  char v3 = a2;
  if (a2)
  {
    *(_DWORD *)(a1 + 20) = 1;
    *(_DWORD *)(a1 + 16) = (a2 + 31) >> 5;
    JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithLength:*(int *)(a1 + 16)]);
    LODWORD(v6) = *(_DWORD *)(a1 + 16);
    if ((int)v6 >= 1)
    {
      if (!a3) {
        JreThrowNullPointerException();
      }
      uint64_t v7 = 0;
      do
      {
        unsigned int v8 = [a3 nextInt];
        uint64_t v9 = *(void *)(a1 + 8);
        uint64_t v10 = *(int *)(v9 + 8);
        if (v7 >= v10) {
          IOSArray_throwOutOfBoundsWithMsg(v10, v7);
        }
        *(_DWORD *)(v9 + 12 + 4 * v7++) = v8;
        uint64_t v6 = *(int *)(a1 + 16);
      }
      while (v7 < v6);
    }
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = *(unsigned int *)(v11 + 8);
    int v13 = v6 - 1;
    if (v13 < 0 || v13 >= (int)v12) {
      IOSArray_throwOutOfBoundsWithMsg(v12, v13);
    }
    *(_DWORD *)(v11 + 12 + 4 * v13) >>= -v3;
    return (void *)-[JavaMathBigInteger cutOffLeadingZeroes]_0(a1);
  }
  else
  {
    *(_DWORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 1;
    int v16 = 0;
    return JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithInts:&v16 count:1]);
  }
}

id JavaMathBigInteger_initWithInt_withInt_withJavaUtilRandom_(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  *(_DWORD *)(a1 + 24) = -2;
  *(_DWORD *)(a1 + 40) = 0;
  if ((int)a2 <= 1)
  {
    unsigned int v8 = new_JavaLangArithmeticException_initWithNSString_(@"bitLength < 2");
    objc_exception_throw(v8);
  }
  v5 = JavaMathPrimality_consBigIntegerWithInt_withInt_withJavaUtilRandom_(a2, a3, a4);
  if (!v5) {
    JreThrowNullPointerException();
  }
  *(_DWORD *)(a1 + 20) = v5->sign_;
  *(_DWORD *)(a1 + 16) = v5->numberLength_;
  digits = v5->digits_;
  return JreStrongAssign((id *)(a1 + 8), digits);
}

uint64_t JavaMathBigInteger_initWithNSString_withInt_(uint64_t a1, void *a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 24) = -2;
  *(_DWORD *)(a1 + 40) = 0;
  if (!a2)
  {
    uint64_t v7 = new_JavaLangNullPointerException_init();
    goto LABEL_11;
  }
  if ((a3 - 37) <= 0xFFFFFFDC)
  {
    CFStringRef v8 = @"Radix out of range";
LABEL_10:
    uint64_t v7 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v8);
LABEL_11:
    objc_exception_throw(v7);
  }
  if (![a2 length])
  {
    CFStringRef v8 = @"Zero length BigInteger";
    goto LABEL_10;
  }
  return sub_1001A0E20(a1, a2, a3);
}

void *JavaMathBigInteger_initWithInt_withByteArray_(uint64_t a1, int a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 24) = -2;
  *(_DWORD *)(a1 + 40) = 0;
  if (!a3)
  {
    uint64_t v9 = new_JavaLangNullPointerException_init();
LABEL_16:
    objc_exception_throw(v9);
  }
  if ((a2 - 2) <= 0xFFFFFFFC)
  {
    CFStringRef v8 = @"Invalid signum value";
LABEL_15:
    uint64_t v9 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v8);
    goto LABEL_16;
  }
  if (a2)
  {
    int v4 = *(_DWORD *)(a3 + 8);
    goto LABEL_9;
  }
  v5 = (unsigned char *)(a3 + 12);
  int v4 = *(_DWORD *)(a3 + 8);
  if (a3 + 12 < (unint64_t)(a3 + 12 + v4))
  {
    uint64_t v6 = v4;
    while (!*v5)
    {
      ++v5;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    CFStringRef v8 = @"signum-magnitude mismatch";
    goto LABEL_15;
  }
LABEL_9:
  if (v4)
  {
    *(_DWORD *)(a1 + 20) = a2;
    sub_1001A2BC4(a1, a3);
    return (void *)-[JavaMathBigInteger cutOffLeadingZeroes]_0(a1);
  }
  else
  {
    *(_DWORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 1;
    int v10 = 0;
    return JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithInts:&v10 count:1]);
  }
}

uint64_t JavaMathBigInteger_initWithByteArray_(_DWORD *a1, uint64_t a2)
{
  a1[6] = -2;
  a1[10] = 0;
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = *(unsigned int *)(a2 + 8);
  if (!v3)
  {
    v5 = new_JavaLangNumberFormatException_initWithNSString_(@"Zero length BigInteger");
    objc_exception_throw(v5);
  }
  if ((int)v3 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v3, 0);
  }
  if (*(char *)(a2 + 12) < 0)
  {
    a1[5] = -1;
    sub_1001A30DC((uint64_t)a1, a2);
  }
  else
  {
    a1[5] = 1;
    sub_1001A2BC4((uint64_t)a1, a2);
  }
  return -[JavaMathBigInteger cutOffLeadingZeroes]_0((uint64_t)a1);
}

void *JavaMathBigInteger_initWithInt_withInt_(uint64_t a1, int a2, int a3)
{
  *(_DWORD *)(a1 + 24) = -2;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 20) = a2;
  *(_DWORD *)(a1 + 16) = 1;
  int v4 = a3;
  return JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithInts:&v4 count:1]);
}

void *JavaMathBigInteger_initWithInt_withLong_(_DWORD *a1, int a2, unint64_t a3)
{
  a1[6] = -2;
  a1[10] = 0;
  a1[5] = a2;
  if (HIDWORD(a3))
  {
    a1[4] = 2;
    uint64_t v3 = (id *)(a1 + 2);
    unint64_t v8 = a3;
    int v4 = (uint64_t *)&v8;
    uint64_t v5 = 2;
  }
  else
  {
    a1[4] = 1;
    uint64_t v3 = (id *)(a1 + 2);
    int v7 = a3;
    int v4 = (uint64_t *)&v7;
    uint64_t v5 = 1;
  }
  return JreStrongAssignAndConsume(v3, +[IOSIntArray newArrayWithInts:v4 count:v5]);
}

void *JavaMathBigInteger_initWithInt_withIntArray_(uint64_t a1, int a2, _DWORD *a3)
{
  *(_DWORD *)(a1 + 24) = -2;
  *(_DWORD *)(a1 + 40) = 0;
  if (!a3) {
    JreThrowNullPointerException();
  }
  if (a3[2])
  {
    *(_DWORD *)(a1 + 20) = a2;
    *(_DWORD *)(a1 + 16) = a3[2];
    JreStrongAssign((id *)(a1 + 8), a3);
    return (void *)-[JavaMathBigInteger cutOffLeadingZeroes]_0(a1);
  }
  else
  {
    *(_DWORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 1;
    int v5 = 0;
    return JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithInts:&v5 count:1]);
  }
}

JavaMathBigInteger *JavaMathBigInteger_valueOfWithLong_(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if ((v1 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v1 == -1) {
      return (JavaMathBigInteger *)JavaMathBigInteger_MINUS_ONE_;
    }
    unint64_t v1 = -(uint64_t)v1;
    int v4 = [JavaMathBigInteger alloc];
    int v5 = v4;
    int v6 = -1;
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v1 <= 0xA)
  {
    if (!JavaMathBigInteger_SMALL_VALUES_) {
      JreThrowNullPointerException();
    }
    uint64_t v2 = *(unsigned int *)(JavaMathBigInteger_SMALL_VALUES_ + 8);
    if ((int)v2 <= (int)v1) {
      IOSArray_throwOutOfBoundsWithMsg(v2, v1);
    }
    return *(JavaMathBigInteger **)(JavaMathBigInteger_SMALL_VALUES_ + 24 + 8 * v1);
  }
  int v4 = [JavaMathBigInteger alloc];
  int v5 = v4;
  int v6 = 1;
LABEL_11:
  JavaMathBigInteger_initWithInt_withLong_(v4, v6, v1);
  return v5;
}

void sub_1001A0DFC()
{
}

uint64_t sub_1001A0E20(uint64_t a1, void *a2, uint64_t a3)
{
  if (atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_34;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      goto LABEL_34;
    }
  }
  int v37 = [a2 length];
  unsigned int v6 = [a2 charAtWithInt:0];
  BOOL v7 = v6 == 45;
  if ((atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaMathConversion_digitFitInInt_) {
    goto LABEL_34;
  }
  int v8 = v37 - v7;
  uint64_t v9 = *(unsigned int *)(JavaMathConversion_digitFitInInt_ + 8);
  if ((a3 & 0x80000000) != 0 || (int)v9 <= (int)a3) {
    IOSArray_throwOutOfBoundsWithMsg(v9, a3);
  }
  int v10 = *(_DWORD *)(JavaMathConversion_digitFitInInt_ + 12 + 4 * (int)a3);
  int v11 = v8 / v10;
  int v36 = v10;
  int v12 = v8 % v10;
  if (v8 % v10) {
    ++v11;
  }
  int v13 = +[IOSIntArray arrayWithLength:v11];
  if ((atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaMathConversion_bigRadices_) {
    goto LABEL_34;
  }
  uint64_t v14 = *(unsigned int *)(JavaMathConversion_bigRadices_ + 8);
  int v15 = a3 - 2;
  if ((int)a3 - 2 < 0 || v15 >= (int)v14) {
    IOSArray_throwOutOfBoundsWithMsg(v14, v15);
  }
  unsigned int v34 = v6;
  uint64_t v35 = a1;
  if (v7 >= v37)
  {
    int v17 = 0;
  }
  else
  {
    int v16 = a2;
    int v17 = 0;
    unsigned int v18 = *(_DWORD *)(JavaMathConversion_bigRadices_ + 12 + 4 * ((int)a3 - 2));
    int v19 = v12 ? v12 : v36;
    uint64_t v20 = v19 + v7;
    do
    {
      id v21 = [v16 substring:v7 endIndex:v20];
      unint64_t v28 = JavaLangInteger_parseIntWithNSString_withInt_(v21, a3, v22, v23, v24, v25, v26, v27);
      int v29 = JavaMathMultiplication_multiplyByIntWithIntArray_withInt_withInt_((uint64_t)v13, v17, v18);
      int v30 = JavaMathElementary_inplaceAddWithIntArray_withInt_withInt_((uint64_t)v13, v17, v28);
      uint64_t size = v13->super.size_;
      if (v17 < 0 || v17 >= (int)size) {
        IOSArray_throwOutOfBoundsWithMsg(size, v17);
      }
      *(&v13->super.size_ + v17 + 1) = v30 + v29;
      BOOL v7 = v20;
      uint64_t v20 = (v20 + v36);
      ++v17;
    }
    while ((int)v20 - v36 < v37);
  }
  if (!v35) {
LABEL_34:
  }
    JreThrowNullPointerException();
  if (v34 == 45) {
    int v32 = -1;
  }
  else {
    int v32 = 1;
  }
  *(_DWORD *)(v35 + 20) = v32;
  *(_DWORD *)(v35 + 16) = v17;
  JreStrongAssign((id *)(v35 + 8), v13);
  return -[JavaMathBigInteger cutOffLeadingZeroes]_0(v35);
}

JavaMathBigInteger *new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(int a1, int a2, void *a3)
{
  unsigned int v6 = [JavaMathBigInteger alloc];
  v6->firstNonzeroDigit_ = -2;
  v6->hashCode_ = 0;
  v6->sign_ = a1;
  v6->numberLength_ = a2;
  JreStrongAssign((id *)&v6->digits_, a3);
  return v6;
}

void sub_1001A1CE4()
{
}

JavaMathBigInteger *JavaMathBigInteger_getPowerOfTwoWithInt_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaMathBigInteger_TWO_POWS_) {
    JreThrowNullPointerException();
  }
  uint64_t v2 = *(unsigned int *)(JavaMathBigInteger_TWO_POWS_ + 8);
  if ((int)v2 <= (int)a1)
  {
    int v4 = (int)a1 >> 5;
    int v5 = +[IOSIntArray arrayWithLength:((int)a1 >> 5) + 1];
    uint64_t v6 = (uint64_t)(int)a1 >> 5;
    uint64_t size = v5->super.size_;
    if ((a1 & 0x80000000) != 0 || v4 >= (int)size) {
      IOSArray_throwOutOfBoundsWithMsg(size, v6);
    }
    *(&v5->super.size_ + v6 + 1) = 1 << a1;
    int v8 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(1, v4 + 1, v5);
    return v8;
  }
  else
  {
    if ((a1 & 0x80000000) != 0) {
      IOSArray_throwOutOfBoundsWithMsg(v2, a1);
    }
    return *(JavaMathBigInteger **)(JavaMathBigInteger_TWO_POWS_ + 24 + 8 * (int)a1);
  }
}

JavaMathBigInteger *JavaMathBigInteger_probablePrimeWithInt_withJavaUtilRandom_(uint64_t a1, void *a2)
{
  if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v4 = [JavaMathBigInteger alloc];
  JavaMathBigInteger_initWithInt_withInt_withJavaUtilRandom_((uint64_t)v4, a1, 100, a2);
  return v4;
}

uint64_t sub_1001A2BC4(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = *(unsigned int *)(a2 + 8);
  int v4 = (int)v3 >> 2;
  if ((v3 & 3) != 0) {
    ++v4;
  }
  *(_DWORD *)(a1 + 16) = v4;
  uint64_t result = (uint64_t)JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithLength:*(int *)(a1 + 16)]);
  uint64_t v6 = v3;
  int v7 = v3 - 4;
  if ((int)v3 < 4)
  {
    uint64_t v12 = 0;
    uint64_t v17 = a1;
    unsigned int v18 = &OBJC_IVAR___OrgApacheLuceneCodecsLucene50Lucene50DocValuesProducer_BinaryEntry_format_;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    unsigned int v11 = v3 + ~(v3 & 3);
    uint64_t v12 = (v11 >> 2) + 1;
    uint64_t v13 = (v3 - 1);
    int v14 = v3 - 2;
    uint64_t v15 = a2 + v3;
    int v16 = v3 - 3;
    uint64_t v17 = a1;
    unsigned int v18 = &OBJC_IVAR___OrgApacheLuceneCodecsLucene50Lucene50DocValuesProducer_BinaryEntry_format_;
    do
    {
      uint64_t v19 = v6 + v8;
      uint64_t v20 = *(unsigned int *)(a2 + 8);
      if (v6 + v8 > (int)v20) {
        IOSArray_throwOutOfBoundsWithMsg(v20, v13 + v8);
      }
      if (v19 < 2 || v19 - 2 >= (int)v20) {
        IOSArray_throwOutOfBoundsWithMsg(v20, (v14 + v8));
      }
      if (v19 < 3 || v19 - 3 >= (int)v20) {
        IOSArray_throwOutOfBoundsWithMsg(v20, (v16 + v8));
      }
      if (v19 < 4 || v6 + v8 - 4 >= (int)v20) {
        IOSArray_throwOutOfBoundsWithMsg(v20, (v7 + v8));
      }
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t result = *(int *)(v21 + 8);
      if (v10 >= result) {
        IOSArray_throwOutOfBoundsWithMsg(result, v10);
      }
      *(_DWORD *)(v21 + 12 + v9) = *(unsigned __int8 *)(a2 + 12 + (v13 + v8)) | (*(unsigned __int8 *)(v15 + v8 + 12 - 2) << 8) | (*(unsigned __int8 *)(v15 + v8 + 12 - 3) << 16) | (*(unsigned __int8 *)(v15 + v8 + 12 - 4) << 24);
      v9 += 4;
      v8 -= 4;
      ++v10;
    }
    while ((v11 & 0xFFFFFFFC) + 4 + v8);
    LODWORD(v6) = v6 - v9;
  }
  if ((int)v6 >= 1)
  {
    uint64_t v22 = 0;
    do
    {
      uint64_t v23 = *(void *)(v17 + v18[936]);
      uint64_t v24 = *(unsigned int *)(v23 + 8);
      if ((int)v12 >= (int)v24) {
        IOSArray_throwOutOfBoundsWithMsg(v24, v12);
      }
      int v25 = *(_DWORD *)(v23 + 12 + 4 * v12);
      uint64_t v26 = *(int *)(a2 + 8);
      if (v22 >= v26) {
        IOSArray_throwOutOfBoundsWithMsg(v26, v22);
      }
      uint64_t v27 = *(void *)(v17 + v18[936]);
      uint64_t result = *(unsigned int *)(v27 + 8);
      if ((int)v12 >= (int)result) {
        IOSArray_throwOutOfBoundsWithMsg(result, v12);
      }
      *(_DWORD *)(v27 + 12 + 4 * v12) = (v25 << 8) | *(unsigned __int8 *)(a2 + 12 + v22++);
    }
    while (v6 != v22);
  }
  return result;
}

uint64_t sub_1001A30DC(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v2 = *(_DWORD *)(a2 + 8);
  uint64_t v3 = v2 & 3;
  uint64_t v53 = v2;
  int v4 = v2 >> 2;
  uint64_t v52 = v3;
  if (v3) {
    ++v4;
  }
  *(_DWORD *)(a1 + 16) = v4;
  JreStrongAssignAndConsume((id *)(a1 + 8), +[IOSIntArray newArrayWithLength:*(int *)(a1 + 16)]);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = *(unsigned int *)(v5 + 8);
  int v7 = *(_DWORD *)(a1 + 16) - 1;
  if (v7 < 0 || v7 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v7);
  }
  *(_DWORD *)(v5 + 12 + 4 * v7) = -1;
  int v8 = v53;
  if ((int)v53 < 4)
  {
    uint64_t v11 = 0;
    uint64_t v13 = a2;
    if (!v52) {
      return result;
    }
    goto LABEL_53;
  }
  int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = ((v53 + ~v52) >> 2) + 1;
  uint64_t v12 = (v53 - 1);
  uint64_t v13 = a2;
  uint64_t v14 = -4;
  do
  {
    uint64_t v15 = v53 + v14;
    uint64_t v16 = v53 + v14 + 4;
    uint64_t v17 = *(unsigned int *)(a2 + 8);
    if (v16 > (int)v17) {
      IOSArray_throwOutOfBoundsWithMsg(v17, v12 + v14 + 4);
    }
    if (v16 < 2 || v15 + 2 >= (int)v17) {
      IOSArray_throwOutOfBoundsWithMsg(v17, (v53 - 2 + v14 + 4));
    }
    if (v16 < 3 || v15 + 1 >= (int)v17) {
      IOSArray_throwOutOfBoundsWithMsg(v17, (v53 - 3 + v14 + 4));
    }
    if (v16 < 4 || v53 + v14 >= (int)v17) {
      IOSArray_throwOutOfBoundsWithMsg(v17, (v53 + v14));
    }
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = *(unsigned int *)(v18 + 8);
    if ((int)v10 >= (int)v19) {
      IOSArray_throwOutOfBoundsWithMsg(v19, v10);
    }
    *(_DWORD *)(v18 + 12 + 4 * v10) = *(unsigned __int8 *)(a2 + 12 + (v12 + v14 + 4)) | (*(unsigned __int8 *)(a2 + v53 + v14 + 14) << 8) | (*(unsigned __int8 *)(a2 + v53 + v14 + 13) << 16) | (*(unsigned __int8 *)(a2 + v53 + 12 + v14) << 24);
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t result = *(unsigned int *)(v20 + 8);
    if ((int)v10 >= (int)result) {
      IOSArray_throwOutOfBoundsWithMsg(result, v10);
    }
    if (*(_DWORD *)(v20 + 12 + 4 * v10))
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t result = *(unsigned int *)(v21 + 8);
      if ((int)v10 >= (int)result) {
        IOSArray_throwOutOfBoundsWithMsg(result, v10);
      }
      *(_DWORD *)(*(void *)(a1 + 8) + 12 + 4 * v10) = -*(_DWORD *)(v21 + 12 + 4 * v10);
      *(_DWORD *)(a1 + 24) = v10;
      if ((int)v52 >= (int)v53 + (int)v14)
      {
        uint64_t v11 = v10 + 1;
        int v8 = v53 + v14;
        if (v52) {
          goto LABEL_53;
        }
      }
      else
      {
        int v22 = v14 - 4;
        uint64_t v23 = -v14;
        int v24 = v14 - 3;
        uint64_t v25 = a2 + v14 + 4;
        int v26 = v14 - 2;
        uint64_t v27 = v14 + 0xFFFFFFFFLL;
        uint64_t v11 = v10 + 1;
        do
        {
          uint64_t v28 = v53 + v14;
          uint64_t v29 = *(unsigned int *)(a2 + 8);
          if (v53 + v14 > (int)v29) {
            IOSArray_throwOutOfBoundsWithMsg(v29, v53 + v27);
          }
          if (v28 < 2 || v28 - 2 >= (int)v29) {
            IOSArray_throwOutOfBoundsWithMsg(v29, (v53 + v26));
          }
          if (v28 < 3 || v28 - 3 >= (int)v29) {
            IOSArray_throwOutOfBoundsWithMsg(v29, (v53 + v24));
          }
          uint64_t v30 = v28 - 4;
          if (v28 < 4 || v30 >= (int)v29) {
            IOSArray_throwOutOfBoundsWithMsg(v29, (v53 + v22));
          }
          uint64_t v31 = *(void *)(a1 + 8);
          uint64_t v32 = *(int *)(v31 + 8);
          if (v11 >= v32) {
            IOSArray_throwOutOfBoundsWithMsg(v32, v11);
          }
          *(_DWORD *)(v31 + 12 + v23) = *(unsigned __int8 *)(a2 + 12 + (v53 + v27)) | (*(unsigned __int8 *)(v25 + 12 + v53 - 6) << 8) | (*(unsigned __int8 *)(v25 + 12 + v53 - 7) << 16) | (*(unsigned __int8 *)(v25 + 12 + v53 - 8) << 24);
          uint64_t v33 = *(void *)(a1 + 8);
          uint64_t result = *(unsigned int *)(v33 + 8);
          if (v11 >= (int)result) {
            IOSArray_throwOutOfBoundsWithMsg(result, v11);
          }
          *(_DWORD *)(*(void *)(a1 + 8) + 12 + v23) = ~*(_DWORD *)(v33 + 12 + v23);
          ++v11;
          v27 -= 4;
          v26 -= 4;
          v25 -= 4;
          v24 -= 4;
          v14 -= 4;
          v23 += 4;
          v22 -= 4;
        }
        while (v30 > v52);
        int v8 = v53 - v23;
        if (v52) {
          goto LABEL_53;
        }
      }
      return result;
    }
    v14 -= 4;
    ++v10;
    v9 += 4;
  }
  while (((v53 + ~v52) >> 2) + 1 != v10);
  int v8 = v53 - v9;
  if (!v52) {
    return result;
  }
LABEL_53:
  if (*(_DWORD *)(a1 + 24) == -2)
  {
    if (v8 >= 1)
    {
      for (uint64_t i = 0; i != v8; *(_DWORD *)(v39 + 12 + 4 * (int)v11) = (v37 << 8) | *(unsigned __int8 *)(v13 + 12 + i++))
      {
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v36 = *(unsigned int *)(v35 + 8);
        if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)v36) {
          IOSArray_throwOutOfBoundsWithMsg(v36, v11);
        }
        int v37 = *(_DWORD *)(v35 + 12 + 4 * (int)v11);
        uint64_t v38 = *(int *)(v13 + 8);
        if (i >= v38) {
          IOSArray_throwOutOfBoundsWithMsg(v38, i);
        }
        uint64_t v39 = *(void *)(a1 + 8);
        uint64_t v40 = *(unsigned int *)(v39 + 8);
        if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)v40) {
          IOSArray_throwOutOfBoundsWithMsg(v40, v11);
        }
      }
    }
    uint64_t v48 = *(void *)(a1 + 8);
    uint64_t result = *(unsigned int *)(v48 + 8);
    if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)result) {
      IOSArray_throwOutOfBoundsWithMsg(result, v11);
    }
    uint64_t v49 = *(void *)(a1 + 8);
    int v50 = -*(_DWORD *)(v48 + 12 + 4 * (int)v11);
    if ((v11 & 0x80000000) != 0) {
      goto LABEL_90;
    }
  }
  else
  {
    if (v8 >= 1)
    {
      for (uint64_t j = 0; j != v8; *(_DWORD *)(v46 + 12 + 4 * (int)v11) = (v44 << 8) | *(unsigned __int8 *)(v13 + 12 + j++))
      {
        uint64_t v42 = *(void *)(a1 + 8);
        uint64_t v43 = *(unsigned int *)(v42 + 8);
        if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)v43) {
          IOSArray_throwOutOfBoundsWithMsg(v43, v11);
        }
        int v44 = *(_DWORD *)(v42 + 12 + 4 * (int)v11);
        uint64_t v45 = *(int *)(v13 + 8);
        if (j >= v45) {
          IOSArray_throwOutOfBoundsWithMsg(v45, j);
        }
        uint64_t v46 = *(void *)(a1 + 8);
        uint64_t v47 = *(unsigned int *)(v46 + 8);
        if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)v47) {
          IOSArray_throwOutOfBoundsWithMsg(v47, v11);
        }
      }
    }
    uint64_t v51 = *(void *)(a1 + 8);
    uint64_t result = *(unsigned int *)(v51 + 8);
    if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)result) {
      IOSArray_throwOutOfBoundsWithMsg(result, v11);
    }
    uint64_t v49 = *(void *)(a1 + 8);
    int v50 = ~*(_DWORD *)(v51 + 12 + 4 * (int)v11);
    if ((v11 & 0x80000000) != 0) {
LABEL_90:
    }
      IOSArray_throwOutOfBoundsWithMsg(result, v11);
  }
  if ((int)v11 >= (int)result) {
    goto LABEL_90;
  }
  *(_DWORD *)(v49 + 12 + 4 * (int)v11) = v50;
  return result;
}

void sub_1001A3CF4()
{
}

JavaMathBigInteger *new_JavaMathBigInteger_initWithInt_withInt_(int a1, int a2)
{
  int v4 = [JavaMathBigInteger alloc];
  JavaMathBigInteger_initWithInt_withInt_((uint64_t)v4, a1, a2);
  return v4;
}

JavaMathBigInteger *new_JavaMathBigInteger_initWithInt_withJavaUtilRandom_(int a1, void *a2)
{
  int v4 = [JavaMathBigInteger alloc];
  JavaMathBigInteger_initWithInt_withJavaUtilRandom_((uint64_t)v4, a1, a2);
  return v4;
}

JavaMathBigInteger *new_JavaMathBigInteger_initWithNSString_(void *a1)
{
  int v2 = [JavaMathBigInteger alloc];
  JavaMathBigInteger_initWithNSString_withInt_((uint64_t)v2, a1, 10);
  return v2;
}

JavaMathBigInteger *new_JavaMathBigInteger_initWithInt_withByteArray_(int a1, uint64_t a2)
{
  int v4 = [JavaMathBigInteger alloc];
  JavaMathBigInteger_initWithInt_withByteArray_((uint64_t)v4, a1, a2);
  return v4;
}

JavaMathBigInteger *new_JavaMathBigInteger_initWithInt_withIntArray_(int a1, _DWORD *a2)
{
  int v4 = [JavaMathBigInteger alloc];
  JavaMathBigInteger_initWithInt_withIntArray_((uint64_t)v4, a1, a2);
  return v4;
}

uint64_t JavaMathBigInteger_class_()
{
  if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560A50 != -1) {
    dispatch_once(&qword_100560A50, &stru_1004156F8);
  }
  return qword_100560A48;
}

void sub_1001A4514(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560A48 = IOSClass_fromClass(v1);
}

id JavaLangSystem_setInWithJavaIoInputStream_(void *a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JreStrongAssign(&JavaLangSystem_in_, a1);
}

id JavaLangSystem_setOutWithJavaIoPrintStream_(void *a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JreStrongAssign((id *)&JavaLangSystem_out_, a1);
}

id JavaLangSystem_setErrWithJavaIoPrintStream_(void *a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JreStrongAssign((id *)&JavaLangSystem_err_, a1);
}

uint64_t JavaLangSystem_identityHashCodeWithId_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return a1;
}

id JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(id a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire))
  {
    if (!a1)
    {
LABEL_10:
      uint64_t v13 = objc_alloc_init(JavaLangNullPointerException);
      goto LABEL_14;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_10;
    }
  }
  if (!a3) {
    goto LABEL_10;
  }
  Class = object_getClass(a1);
  Class v11 = object_getClass(a3);
  Class Superclass = class_getSuperclass(Class);
  if (Superclass != (Class)objc_opt_class())
  {
    uint64_t v14 = +[NSString stringWithFormat:@"source of type %@ is not an array", objc_opt_class(), v17];
LABEL_13:
    uint64_t v13 = [[JavaLangArrayStoreException alloc] initWithNSString:v14];
LABEL_14:
    objc_exception_throw(v13);
  }
  if (v11 != Class)
  {
    uint64_t v15 = objc_opt_class();
    uint64_t v14 = +[NSString stringWithFormat:@"source type %@ cannot be copied to array of type %@", v15, objc_opt_class()];
    goto LABEL_13;
  }
  return [a1 arraycopy:a2 destination:a3 dstOffset:a4 length:a5];
}

void JavaLangSystem_exitWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  exit(a1);
}

id JavaLangSystem_getPropertyWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  Properties = (void *)JavaLangSystem_getProperties();
  if (!Properties) {
    JreThrowNullPointerException();
  }
  return [Properties getPropertyWithNSString:a1];
}

id JavaLangSystem_getPropertyWithNSString_withNSString_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  Properties = (void *)JavaLangSystem_getProperties();
  if (!Properties) {
    JreThrowNullPointerException();
  }
  id result = [Properties getPropertyWithNSString:a1];
  if (!result) {
    return (id)a2;
  }
  return result;
}

id JavaLangSystem_setPropertyWithNSString_withNSString_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  Properties = (void *)JavaLangSystem_getProperties();
  if (!Properties) {
    JreThrowNullPointerException();
  }
  id v5 = [Properties setPropertyWithNSString:a1 withNSString:a2];
  objc_opt_class();
  if (v5 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v5;
}

id JavaLangSystem_setPropertiesWithJavaUtilProperties_(void *a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JreStrongAssign((id *)&qword_100560A58, a1);
}

id JavaLangSystem_clearPropertyWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  Properties = (void *)JavaLangSystem_getProperties();
  if (!Properties) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = Properties;
  id v4 = [Properties getPropertyWithNSString:a1];
  [v3 removeWithId:a1];
  return v4;
}

char *JavaLangSystem_getenvWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id result = getenv((const char *)[a1 UTF8String]);
  if (result)
  {
    return (char *)+[NSString stringWithUTF8String:result];
  }
  return result;
}

id JavaLangSystem_load__WithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  Runtime = (void *)JavaLangRuntime_getRuntime();
  if (!Runtime) {
    JreThrowNullPointerException();
  }
  return objc_msgSend(Runtime, "load__WithNSString:", a1);
}

id JavaLangSystem_loadLibraryWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  Runtime = (void *)JavaLangRuntime_getRuntime();
  if (!Runtime) {
    JreThrowNullPointerException();
  }
  return [Runtime loadLibraryWithNSString:a1];
}

id JavaLangSystem_logEWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaUtilLoggingLevel_SEVERE_;
  return sub_1001A508C(v2, a1, 0);
}

id JavaLangSystem_logEWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = JavaUtilLoggingLevel_SEVERE_;
  return sub_1001A508C(v4, a1, a2);
}

id JavaLangSystem_logIWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaUtilLoggingLevel_INFO_;
  return sub_1001A508C(v2, a1, 0);
}

id JavaLangSystem_logIWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = JavaUtilLoggingLevel_INFO_;
  return sub_1001A508C(v4, a1, a2);
}

id JavaLangSystem_logWWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaUtilLoggingLevel_WARNING_;
  return sub_1001A508C(v2, a1, 0);
}

id JavaLangSystem_logWWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = JavaUtilLoggingLevel_WARNING_;
  return sub_1001A508C(v4, a1, a2);
}

id sub_1001A508C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = (void *)qword_100560A60;
  if (!qword_100560A60)
  {
    id LoggerWithNSString = JavaUtilLoggingLogger_getLoggerWithNSString_(@"java.lang.System");
    JreStrongAssign((id *)&qword_100560A60, LoggerWithNSString);
    uint64_t v6 = (void *)qword_100560A60;
    if (!qword_100560A60) {
      JreThrowNullPointerException();
    }
  }
  return [v6 logWithJavaUtilLoggingLevel:a1 withNSString:a2 withJavaLangThrowable:a3];
}

uint64_t JavaLangSystem_currentTimeMillis()
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (uint64_t)((CFAbsoluteTimeGetCurrent() + kCFAbsoluteTimeIntervalSince1970) * 1000.0);
}

uint64_t JavaLangSystem_nanoTime()
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return mach_absolute_time() * dword_100560A68 / *(unsigned int *)algn_100560A6C;
}

uint64_t JavaLangSystem_getProperties()
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560A70 != -1) {
    dispatch_once(&qword_100560A70, &stru_100415E70);
  }
  return qword_100560A58;
}

void sub_1001A5358(id a1)
{
  JreStrongAssignAndConsume((id *)&qword_100560A58, objc_alloc_init(JavaUtilProperties));
  [(id)qword_100560A58 setPropertyWithNSString:@"java.class.path" withNSString:&stru_10048C1F8];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.class.version" withNSString:@"0"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.compiler" withNSString:&stru_10048C1F8];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.ext.dirs" withNSString:&stru_10048C1F8];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.library.path" withNSString:&stru_10048C1F8];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.specification.name" withNSString:@"J2ObjC"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.specification.vendor" withNSString:@"J2ObjC"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.specification.version" withNSString:@"0"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vendor" withNSString:@"J2ObjC"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vendor.url" withNSString:@"http://j2objc.org/"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.version" withNSString:@"0"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vm.name" withNSString:&stru_10048C1F8];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vm.specification.name" withNSString:@"J2ObjC"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vm.specification.vendor" withNSString:@"J2ObjC"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vm.specification.version" withNSString:@"0"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vm.vendor" withNSString:@"J2ObjC"];
  [(id)qword_100560A58 setPropertyWithNSString:@"java.vm.version" withNSString:@"0"];
  objc_msgSend((id)qword_100560A58, "setPropertyWithNSString:withNSString:", @"os.arch", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "J2OBJC_BUILD_ARCH"));
  if (+[NSProcessInfo instancesRespondToSelector:"operatingSystemVersion"])
  {
    uint64_t v1 = +[NSProcessInfo processInfo];
    if (v1) {
      [(NSProcessInfo *)v1 operatingSystemVersion];
    }
    uint64_t v4 = +[NSString stringWithFormat:@"%ld.%ld", 0, 0, v15];
  }
  else
  {
    Class v2 = NSClassFromString(@"UIDevice");
    SEL v3 = NSSelectorFromString(@"currentDevice");
    uint64_t v4 = (NSString *)[-[objc_class performSelector:](v2 performSelector:v3), "performSelector:", NSSelectorFromString(@"systemVersion")];
  }
  [(id)qword_100560A58 setPropertyWithNSString:@"os.version" withNSString:v4];
  [(id)qword_100560A58 setPropertyWithNSString:@"file.separator" withNSString:@"/"];
  [(id)qword_100560A58 setPropertyWithNSString:@"line.separator" withNSString:@"\n"];
  [(id)qword_100560A58 setPropertyWithNSString:@"path.separator" withNSString:@":"];
  [(id)qword_100560A58 setPropertyWithNSString:@"org.xml.sax.driver" withNSString:@"org.xmlpull.v1.sax2.Driver"];
  id v5 = NSHomeDirectory();
  [(id)qword_100560A58 setPropertyWithNSString:@"user.home" withNSString:v5];
  [(id)qword_100560A58 setPropertyWithNSString:@"user.name" withNSString:NSUserName()];
  [(id)qword_100560A58 setPropertyWithNSString:@"os.name" withNSString:@"iPhone"];
  objc_msgSend((id)qword_100560A58, "setPropertyWithNSString:withNSString:", @"user.dir", -[NSString stringByAppendingString:](v5, "stringByAppendingString:", @"/Documents"));
  uint64_t v6 = NSTemporaryDirectory();
  unsigned int v7 = [(NSString *)v6 length];
  uint64_t v8 = v7 - 1;
  if ((int)(v7 - 1) >= 0 && [(NSString *)v6 characterAtIndex:v8] == 47) {
    uint64_t v6 = [(NSString *)v6 substringToIndex:v8];
  }
  [(id)qword_100560A58 setPropertyWithNSString:@"java.io.tmpdir" withNSString:v6];
  objc_msgSend((id)qword_100560A58, "setPropertyWithNSString:withNSString:", @"java.home", -[NSBundle bundlePath](+[NSBundle mainBundle](NSBundle, "mainBundle"), "bundlePath"));
  int v9 = getenv("file_encoding");
  if (v9 || (int v9 = getenv("file.encoding")) != 0)
  {
    uint64_t v10 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v9, +[NSString defaultCStringEncoding]);
    [(id)qword_100560A58 setPropertyWithNSString:@"file.encoding" withNSString:v10];
  }
  Class v11 = +[NSLocale componentsFromLocaleIdentifier:](NSLocale, "componentsFromLocaleIdentifier:", [+[NSLocale currentLocale] localeIdentifier]);
  id v12 = [(NSDictionary *)v11 objectForKey:NSLocaleLanguageCode];
  if (v12) {
    [(id)qword_100560A58 setPropertyWithNSString:@"user.language" withNSString:v12];
  }
  id v13 = [(NSDictionary *)v11 objectForKey:NSLocaleCountryCode];
  if (v13) {
    [(id)qword_100560A58 setPropertyWithNSString:@"user.region" withNSString:v13];
  }
  id v14 = [(NSDictionary *)v11 objectForKey:NSLocaleVariantCode];
  if (v14) {
    [(id)qword_100560A58 setPropertyWithNSString:@"user.variant" withNSString:v14];
  }
}

id JavaLangSystem_getenv()
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v0 = +[NSMutableDictionary dictionary];
  if (*environ)
  {
    int v1 = 1;
    do
    {
      Class v2 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:");
      SEL v3 = (char *)[(NSString *)v2 rangeOfString:@"="];
      if (v3 != (char *)0x7FFFFFFFFFFFFFFFLL) {
        objc_msgSend(v0, "setObject:forKey:", -[NSString substringFromIndex:](v2, "substringFromIndex:", v3 + 1), -[NSString substringToIndex:](v2, "substringToIndex:", v3));
      }
    }
    while (*(void *)(environ + 8 * v1++));
  }
  id v5 = +[NSDictionaryMap mapWithDictionary:v0];
  return +[JavaUtilCollections unmodifiableMapWithJavaUtilMap:v5];
}

CFStringRef JavaLangSystem_lineSeparator()
{
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return @"\n";
}

id JavaUtilGregorianCalendar_initWithInt_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id Default = JavaUtilTimeZone_getDefault();
  int v9 = (void *)JavaUtilLocale_getDefault();
  JavaUtilCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((void *)a1, (uint64_t)Default, v9);
  *(void *)(a1 + 80) = -12219292800000;
  *(_DWORD *)(a1 + 88) = 1582;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a1 + 88) / 100
                       + *(_DWORD *)(a1 + 88) / -400
                       + (*(_DWORD *)(a1 + 88) - 2000) / 400
                       + (*(_DWORD *)(a1 + 88) - 2000) / -100
                       - 2;
  *(_DWORD *)(a1 + 96) = 10;
  *(_DWORD *)(a1 + 100) = 0;
  return [(id)a1 setWithInt:a2 withInt:a3 withInt:a4];
}

id JavaUtilGregorianCalendar_initWithInt_withInt_withInt_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id Default = JavaUtilTimeZone_getDefault();
  id v13 = (void *)JavaUtilLocale_getDefault();
  JavaUtilCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((void *)a1, (uint64_t)Default, v13);
  *(void *)(a1 + 80) = -12219292800000;
  *(_DWORD *)(a1 + 88) = 1582;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a1 + 88) / 100
                       + *(_DWORD *)(a1 + 88) / -400
                       + (*(_DWORD *)(a1 + 88) - 2000) / 400
                       + (*(_DWORD *)(a1 + 88) - 2000) / -100
                       - 2;
  *(_DWORD *)(a1 + 96) = 10;
  *(_DWORD *)(a1 + 100) = 0;
  return [(id)a1 setWithInt:a2 withInt:a3 withInt:a4 withInt:a5 withInt:a6];
}

id JavaUtilGregorianCalendar_initWithInt_withInt_withInt_withInt_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id Default = JavaUtilTimeZone_getDefault();
  uint64_t v15 = (void *)JavaUtilLocale_getDefault();
  JavaUtilCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((void *)a1, (uint64_t)Default, v15);
  *(void *)(a1 + 80) = -12219292800000;
  *(_DWORD *)(a1 + 88) = 1582;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a1 + 88) / 100
                       + *(_DWORD *)(a1 + 88) / -400
                       + (*(_DWORD *)(a1 + 88) - 2000) / 400
                       + (*(_DWORD *)(a1 + 88) - 2000) / -100
                       - 2;
  *(_DWORD *)(a1 + 96) = 10;
  *(_DWORD *)(a1 + 100) = 0;
  return [(id)a1 setWithInt:a2 withInt:a3 withInt:a4 withInt:a5 withInt:a6 withInt:a7];
}

id JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_(uint64_t a1, uint64_t a2, void *a3)
{
  JavaUtilCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((void *)a1, a2, a3);
  *(void *)(a1 + 80) = -12219292800000;
  *(_DWORD *)(a1 + 88) = 1582;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a1 + 88) / 100
                       + *(_DWORD *)(a1 + 88) / -400
                       + (*(_DWORD *)(a1 + 88) - 2000) / 400
                       + (*(_DWORD *)(a1 + 88) - 2000) / -100
                       - 2;
  *(_DWORD *)(a1 + 96) = 10;
  *(_DWORD *)(a1 + 100) = 0;
  uint64_t v4 = JavaLangSystem_currentTimeMillis();
  return [(id)a1 setTimeInMillisWithLong:v4];
}

id JavaUtilGregorianCalendar_initWithBoolean_(uint64_t a1)
{
  id Default = JavaUtilTimeZone_getDefault();
  JavaUtilCalendar_initWithJavaUtilTimeZone_(a1, (uint64_t)Default);
  *(void *)(a1 + 80) = -12219292800000;
  *(_DWORD *)(a1 + 88) = 1582;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a1 + 88) / 100
                       + *(_DWORD *)(a1 + 88) / -400
                       + (*(_DWORD *)(a1 + 88) - 2000) / 400
                       + (*(_DWORD *)(a1 + 88) - 2000) / -100
                       - 2;
  *(_DWORD *)(a1 + 96) = 10;
  *(_DWORD *)(a1 + 100) = 0;
  [(id)a1 setFirstDayOfWeekWithInt:1];
  return [(id)a1 setMinimalDaysInFirstWeekWithInt:1];
}

uint64_t sub_1001A66A4(int a1, uint64_t a2)
{
  if (a2 == 1 && a1)
  {
    if (JavaUtilGregorianCalendar_DaysInMonth_)
    {
      uint64_t v2 = *(unsigned int *)(JavaUtilGregorianCalendar_DaysInMonth_ + 8);
      if ((int)v2 <= 1) {
        IOSArray_throwOutOfBoundsWithMsg(v2, 1);
      }
      return (*(char *)(JavaUtilGregorianCalendar_DaysInMonth_ + 13) + 1);
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  if (!JavaUtilGregorianCalendar_DaysInMonth_) {
    goto LABEL_10;
  }
  uint64_t v4 = *(unsigned int *)(JavaUtilGregorianCalendar_DaysInMonth_ + 8);
  if ((a2 & 0x80000000) != 0 || (int)v4 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v4, a2);
  }
  return *(char *)(JavaUtilGregorianCalendar_DaysInMonth_ + 12 + (int)a2);
}

id sub_1001A675C(uint64_t a1, uint64_t a2)
{
  id v4 = [(id)a1 getTimeZone];
  uint64_t v5 = a2 / 86400000 + ((a2 % 86400000) >> 31);
  if (a2 % 86400000 >= 0) {
    uint64_t v6 = (a2 % 86400000);
  }
  else {
    uint64_t v6 = (a2 % 86400000) + 86400000;
  }
  uint64_t v7 = a2 / 86400000 + ((a2 % 86400000) >> 31);
  if (*(void *)(a1 + 80) > a2) {
    uint64_t v7 = v5 - *(int *)(a1 + 92);
  }
  unint64_t v8 = (unsigned __int128)(v7 * (__int128)0x2CE33E6C02CE33E7) >> 64;
  unint64_t v9 = v8 >> 63;
  unint64_t v10 = v8 >> 6;
  uint64_t v11 = 1970;
  while (1)
  {
    int v12 = v10 + v9;
    if (!v12) {
      break;
    }
    uint64_t v11 = (v12 + v11);
    uint64_t v7 = v5 - sub_1001A9AB4(a1, (int)v11);
    unint64_t v13 = (unsigned __int128)(v7 * (__int128)0x2CE33E6C02CE33E7) >> 64;
    unint64_t v9 = v13 >> 63;
    unint64_t v10 = v13 >> 6;
  }
  if (v7 < 0)
  {
    uint64_t v11 = (v11 - 1);
    v7 += [(id)a1 isLeapYearWithInt:v11] + 365;
    if (v11 == *(_DWORD *)(a1 + 88) && *(void *)(a1 + 80) > a2) {
      LODWORD(v7) = v7 - ((int)v11 / 100 + (int)v11 / -400 - 2);
    }
  }
  if ((int)v11 > 0)
  {
    int v14 = v7 + 1;
    int v15 = v7 + 32;
    if ((int)v7 + 1 >= 0) {
      int v15 = v7 + 1;
    }
    uint64_t v16 = (v15 >> 5);
    int v17 = [(id)a1 isLeapYearWithInt:v11];
    uint64_t v18 = v14 - sub_1001A9C0C(v17, v16);
    if ((int)v18 > (int)sub_1001A66A4(v17, v16))
    {
      uint64_t v18 = v18 - sub_1001A66A4(v17, v16);
      uint64_t v16 = (v16 + 1);
    }
    if (v4)
    {
      int v19 = ((int)v5 - 3) % 7;
      if (v19 < 0 && v5 < 3) {
        v19 += 7;
      }
      return [v4 getOffsetWithInt:1 withInt:v11 withInt:v16 withInt:v18 withInt:(v19 + 1) withInt:v6];
    }
LABEL_31:
    JreThrowNullPointerException();
  }
  if (!v4) {
    goto LABEL_31;
  }
  return [v4 getRawOffset];
}

uint64_t sub_1001A69E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = *(void *)(a1 + 40) % 86400000;
  int v7 = v6 + 86400000;
  if ((int)v6 >= 0) {
    int v7 = *(void *)(a1 + 40) % 86400000;
  }
  uint64_t v8 = a2 / 86400000 + (v6 >> 31);
  uint64_t v9 = (v7 + a3);
  if (v7 + a3 < 0)
  {
    if ((int)v9 <= -86400000) {
      int v10 = -86400000;
    }
    else {
      int v10 = v7 + a3;
    }
    if (v9 >= 0xFAD9A400) {
      int v11 = v7 + a3;
    }
    else {
      int v11 = v9 + 1;
    }
    LODWORD(v12) = (v10 - v11) / 0x5265C00u;
    if (v9 >= 0xFAD9A400) {
      uint64_t v12 = v12;
    }
    else {
      uint64_t v12 = (v12 + 1);
    }
    uint64_t v9 = (v9 + 86400000 * v12 + 86400000);
    v8 += ~v12;
  }
  if (v9 > 0x5265BFF)
  {
    uint64_t v13 = ((int)v9 - 86400000) / 0x5265C00u;
    uint64_t v9 = ((int)v9 - 86400000) % 0x5265C00u;
    v8 += v13 + 1;
  }
  uint64_t v14 = a2 + a3;
  int v15 = sub_1001A9CD0(a1, v8, v14);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    goto LABEL_126;
  }
  int v17 = v15;
  uint64_t v18 = *(unsigned int *)(v16 + 8);
  if ((int)v18 <= 6) {
    IOSArray_throwOutOfBoundsWithMsg(v18, 6);
  }
  *(_DWORD *)(v16 + 36) = v17;
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(unsigned int *)(v19 + 8);
  if ((int)v20 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v20, 1);
  }
  uint64_t v110 = a2;
  if (*(_DWORD *)(v19 + 16) == *(_DWORD *)(a1 + 88) && *(void *)(a1 + 80) <= v14) {
    v17 += *(_DWORD *)(a1 + 96);
  }
  uint64_t v21 = (v17 / 32);
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = *(unsigned int *)(v22 + 8);
  if ((int)v23 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v23, 1);
  }
  int v24 = [(id)a1 isLeapYearWithInt:*(unsigned int *)(v22 + 16)];
  uint64_t v25 = v17 - sub_1001A9C0C(v24, v21);
  int v111 = v24;
  if ((int)v25 <= (int)sub_1001A66A4(v24, v21))
  {
    uint64_t v112 = v25;
  }
  else
  {
    uint64_t v112 = v25 - sub_1001A66A4(v24, v21);
    LODWORD(v21) = v21 + 1;
  }
  int v26 = ((int)v8 - 3) % 7;
  if (v26 < 0 && v8 < 3) {
    v26 += 7;
  }
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = *(unsigned int *)(v28 + 8);
  if ((int)v29 <= 7) {
    IOSArray_throwOutOfBoundsWithMsg(v29, 7);
  }
  *(_DWORD *)(v28 + 40) = v26 + 1;
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = *(unsigned int *)(v30 + 8);
  if ((int)v31 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v31, 1);
  }
  unsigned int v113 = v21;
  if (*(int *)(v30 + 16) < 1)
  {
    unsigned int v37 = 0;
    goto LABEL_39;
  }
  id v32 = [(id)a1 getTimeZone];
  if (!v32) {
LABEL_126:
  }
    JreThrowNullPointerException();
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(a1 + 16);
  uint64_t v35 = *(unsigned int *)(v34 + 8);
  if ((int)v35 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v35, 1);
  }
  uint64_t v36 = *(unsigned int *)(v34 + 16);
  if ((int)v35 <= 7) {
    IOSArray_throwOutOfBoundsWithMsg(v35, 7);
  }
  unsigned int v37 = [v33 getOffsetWithInt:1 withInt:v36 withInt:v113 withInt:v112 withInt:*(unsigned int *)(*(void *)(a1 + 16) + 40) withInt:v9];
LABEL_39:
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v39 = *(unsigned int *)(v38 + 8);
  if ((int)v39 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v39, 1);
  }
  if (*(int *)(v38 + 16) <= 0) {
    int v40 = 0;
  }
  else {
    int v40 = a3;
  }
  int v41 = v37 - v40;
  if ((int)v39 <= 16) {
    IOSArray_throwOutOfBoundsWithMsg(v39, 16);
  }
  *(_DWORD *)(*(void *)(a1 + 16) + 76) = v41;
  if (v37 == v40) {
    goto LABEL_50;
  }
  LODWORD(v9) = v41 + v9;
  if ((int)v9 < 0)
  {
    LODWORD(v9) = v9 + 86400000;
    uint64_t v42 = v8 - 1;
  }
  else
  {
    uint64_t v42 = v8;
    if (v9 > 0x5265BFF)
    {
      LODWORD(v9) = v9 - 86400000;
      uint64_t v42 = v8 + 1;
    }
  }
  if (v8 == v42)
  {
LABEL_50:
    uint64_t v42 = v8;
  }
  else
  {
    uint64_t v43 = v110 - a3 + v41;
    int v44 = sub_1001A9CD0(a1, v42, v43);
    uint64_t v45 = *(void *)(a1 + 16);
    uint64_t v46 = *(unsigned int *)(v45 + 8);
    if ((int)v46 <= 6) {
      IOSArray_throwOutOfBoundsWithMsg(v46, 6);
    }
    *(_DWORD *)(v45 + 36) = v44;
    uint64_t v47 = *(void *)(a1 + 16);
    uint64_t v48 = *(unsigned int *)(v47 + 8);
    if ((int)v48 <= 1) {
      IOSArray_throwOutOfBoundsWithMsg(v48, 1);
    }
    if (*(_DWORD *)(v47 + 16) == *(_DWORD *)(a1 + 88) && *(void *)(a1 + 80) <= v43) {
      v44 += *(_DWORD *)(a1 + 96);
    }
    uint64_t v49 = (v44 / 32);
    uint64_t v50 = *(void *)(a1 + 16);
    uint64_t v51 = *(unsigned int *)(v50 + 8);
    if ((int)v51 <= 1) {
      IOSArray_throwOutOfBoundsWithMsg(v51, 1);
    }
    int v52 = [(id)a1 isLeapYearWithInt:*(unsigned int *)(v50 + 16)];
    int v53 = v44 - sub_1001A9C0C(v52, v49);
    int v111 = v52;
    if (v53 > (int)sub_1001A66A4(v52, v49))
    {
      v53 -= sub_1001A66A4(v52, v49);
      LODWORD(v49) = v49 + 1;
    }
    unsigned int v113 = v49;
    LODWORD(v112) = v53;
    int v54 = ((int)v42 - 3) % 7;
    if (v54 < 0 && v42 < 3) {
      v54 += 7;
    }
    uint64_t v56 = *(void *)(a1 + 16);
    uint64_t v57 = *(unsigned int *)(v56 + 8);
    if ((int)v57 <= 7) {
      IOSArray_throwOutOfBoundsWithMsg(v57, 7);
    }
    *(_DWORD *)(v56 + 40) = v54 + 1;
  }
  uint64_t v58 = *(void *)(a1 + 16);
  uint64_t v59 = *(unsigned int *)(v58 + 8);
  if ((int)v59 <= 14) {
    IOSArray_throwOutOfBoundsWithMsg(v59, 14);
  }
  *(_DWORD *)(v58 + 68) = (int)v9 % 1000;
  uint64_t v60 = *(void *)(a1 + 16);
  uint64_t v61 = *(unsigned int *)(v60 + 8);
  if ((int)v61 < 14) {
    IOSArray_throwOutOfBoundsWithMsg(v61, 13);
  }
  *(_DWORD *)(v60 + 64) = (int)v9 / 1000 % 60;
  uint64_t v62 = *(void *)(a1 + 16);
  uint64_t v63 = *(unsigned int *)(v62 + 8);
  if ((int)v63 <= 12) {
    IOSArray_throwOutOfBoundsWithMsg(v63, 12);
  }
  *(_DWORD *)(v62 + 60) = (int)v9 / 60000 % 60;
  uint64_t v64 = *(void *)(a1 + 16);
  uint64_t v65 = *(unsigned int *)(v64 + 8);
  if ((int)v65 < 12) {
    IOSArray_throwOutOfBoundsWithMsg(v65, 11);
  }
  *(_DWORD *)(v64 + 56) = (int)v9 / 3600000 % 24;
  v66 = *(unsigned int **)(a1 + 16);
  uint64_t v67 = v66[2];
  if ((int)v67 < 12) {
    IOSArray_throwOutOfBoundsWithMsg(v67, 11);
  }
  v66[12] = (int)v66[14] > 11;
  v68 = *(unsigned int **)(a1 + 16);
  uint64_t v69 = v68[2];
  if ((int)v69 <= 11) {
    IOSArray_throwOutOfBoundsWithMsg(v69, 11);
  }
  v68[13] = (int)v68[14] % 12;
  uint64_t v70 = *(void *)(a1 + 16);
  uint64_t v71 = *(unsigned int *)(v70 + 8);
  if ((int)v71 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v71, 1);
  }
  uint64_t v72 = *(void *)(a1 + 16);
  uint64_t v73 = *(unsigned int *)(v72 + 8);
  if (*(int *)(v70 + 16) < 1)
  {
    if ((int)v73 < 1) {
      IOSArray_throwOutOfBoundsWithMsg(v73, 0);
    }
    *(_DWORD *)(v72 + 12) = 0;
    uint64_t v74 = *(void *)(a1 + 16);
    uint64_t v75 = *(unsigned int *)(v74 + 8);
    if ((int)v75 <= 1) {
      IOSArray_throwOutOfBoundsWithMsg(v75, 1);
    }
    *(_DWORD *)(v74 + 16) = 1 - *(_DWORD *)(v74 + 16);
  }
  else
  {
    if ((int)v73 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v73, 0);
    }
    *(_DWORD *)(v72 + 12) = 1;
  }
  uint64_t v76 = *(void *)(a1 + 16);
  uint64_t v77 = *(unsigned int *)(v76 + 8);
  if ((int)v77 <= 2) {
    IOSArray_throwOutOfBoundsWithMsg(v77, 2);
  }
  *(_DWORD *)(v76 + 20) = v113;
  uint64_t v78 = *(void *)(a1 + 16);
  uint64_t v79 = *(unsigned int *)(v78 + 8);
  if ((int)v79 <= 5) {
    IOSArray_throwOutOfBoundsWithMsg(v79, 5);
  }
  *(_DWORD *)(v78 + 32) = v112;
  uint64_t v80 = *(void *)(a1 + 16);
  uint64_t v81 = *(unsigned int *)(v80 + 8);
  if ((int)v81 <= 8) {
    IOSArray_throwOutOfBoundsWithMsg(v81, 8);
  }
  *(_DWORD *)(v80 + 44) = ((int)v112 - 1) / 7 + 1;
  uint64_t v82 = v42 - ((int)v112 + (uint64_t)(int)([(id)a1 getFirstDayOfWeek] - 1)) - 2;
  int v83 = (int)v82 % 7;
  BOOL v84 = (int)v82 % 7 < 0 && v82 < 0;
  int v85 = v83 + 7;
  if (!v84) {
    int v85 = v83;
  }
  uint64_t v86 = *(void *)(a1 + 16);
  uint64_t v87 = *(unsigned int *)(v86 + 8);
  if ((int)v87 <= 4) {
    IOSArray_throwOutOfBoundsWithMsg(v87, 4);
  }
  *(_DWORD *)(v86 + 28) = (v85 + (int)v112 - 1) / 7 + 1;
  uint64_t v88 = *(void *)(a1 + 16);
  uint64_t v89 = *(unsigned int *)(v88 + 8);
  if ((int)v89 <= 6) {
    IOSArray_throwOutOfBoundsWithMsg(v89, 6);
  }
  uint64_t v90 = *(_DWORD *)(v88 + 36) - 1;
  uint64_t v91 = v42 - (v90 + (int)([(id)a1 getFirstDayOfWeek] - 1)) - 3;
  if ((int)v91 % 7 < 0 && v91 < 0) {
    int v93 = (int)v91 % 7 + 7;
  }
  else {
    int v93 = (int)v91 % 7;
  }
  uint64_t v94 = *(void *)(a1 + 16);
  uint64_t v95 = *(unsigned int *)(v94 + 8);
  if ((int)v95 <= 6) {
    IOSArray_throwOutOfBoundsWithMsg(v95, 6);
  }
  int v96 = (v93 + *(_DWORD *)(v94 + 36) - 1) / 7;
  if (7 - v93 >= (int)[(id)a1 getMinimalDaysInFirstWeek]) {
    ++v96;
  }
  v97 = *(unsigned int **)(a1 + 16);
  uint64_t v98 = v97[2];
  if (!v96)
  {
    if ((int)v98 <= 1) {
      IOSArray_throwOutOfBoundsWithMsg(v98, 1);
    }
    if ([(id)a1 isLeapYearWithInt:v97[4] - 1]) {
      int v106 = -2;
    }
    else {
      int v106 = -1;
    }
    int v107 = v106 + v93;
    int v108 = (char)(v107
                - 7
                * (((char)((unsigned __int16)(147 * (char)v107) >> 8) >> 2)
                 + ((((unsigned __int16)(147 * (char)v107) >> 8) & 0x80) >> 7)));
    if ((v107 & v108) >= 0) {
      int v109 = (char)(v107
    }
                  - 7
                  * (((char)((unsigned __int16)(147 * (char)v107) >> 8) >> 2)
                   + ((((unsigned __int16)(147 * (char)v107) >> 8) & 0x80) >> 7)));
    else {
      int v109 = v108 + 7;
    }
    if (7 - v109 < (int)objc_msgSend((id)a1, "getMinimalDaysInFirstWeek", v110)) {
      int v96 = 52;
    }
    else {
      int v96 = 53;
    }
LABEL_124:
    uint64_t v104 = *(void *)(a1 + 16);
    uint64_t result = *(unsigned int *)(v104 + 8);
    if ((int)result <= 3) {
      goto LABEL_147;
    }
    goto LABEL_125;
  }
  if ((int)v98 <= 6) {
    IOSArray_throwOutOfBoundsWithMsg(v98, 6);
  }
  if (v111) {
    int v99 = 367;
  }
  else {
    int v99 = 366;
  }
  if (v111) {
    int v100 = 2;
  }
  else {
    int v100 = 1;
  }
  int v101 = v93 + v100;
  int v102 = (char)(v101
              - 7
              * (((char)((unsigned __int16)(147 * (char)v101) >> 8) >> 2)
               + ((((unsigned __int16)(147 * (char)v101) >> 8) & 0x80) >> 7)));
  if ((v101 & v102) >= 0) {
    int v103 = (char)(v101
  }
                - 7
                * (((char)((unsigned __int16)(147 * (char)v101) >> 8) >> 2)
                 + ((((unsigned __int16)(147 * (char)v101) >> 8) & 0x80) >> 7)));
  else {
    int v103 = v102 + 7;
  }
  if ((int)v97[9] >= v99 - v103)
  {
    if (7 - v103 >= (int)[(id)a1 getMinimalDaysInFirstWeek]) {
      int v96 = 1;
    }
    goto LABEL_124;
  }
  uint64_t v104 = *(void *)(a1 + 16);
  uint64_t result = *(unsigned int *)(v104 + 8);
  if ((int)result <= 3) {
LABEL_147:
  }
    IOSArray_throwOutOfBoundsWithMsg(result, 3);
LABEL_125:
  *(_DWORD *)(v104 + 24) = v96;
  return result;
}

void sub_1001A7850()
{
}

unint64_t sub_1001A9AB4(uint64_t a1, uint64_t a2)
{
  if (a2 < 1970)
  {
    uint64_t v5 = 365 * a2;
    if (*(int *)(a1 + 88) < a2) {
      return v5 + (2000 - a2) / 0x64uLL - 719050 - ((2000 - a2) / 0x190uLL + ((unint64_t)(1972 - a2) >> 2));
    }
    uint64_t v7 = a2 - 1972;
    if (a2 - 1972 < 0) {
      uint64_t v7 = a2 - 1969;
    }
    uint64_t v8 = v5 + (v7 >> 2);
    uint64_t v9 = *(int *)(a1 + 92);
    unint64_t v2 = v8 - 719050;
  }
  else
  {
    unint64_t v2 = 365 * a2 + ((unint64_t)(a2 - 1969) >> 2) - 719050;
    uint64_t v3 = *(int *)(a1 + 88);
    if (v3 < a2) {
      return (a2 - 1601) / 0x190uLL - (a2 - 1901) / 0x64uLL + v2;
    }
    if (v3 == a2)
    {
      uint64_t v6 = 96;
    }
    else if (v3 - 1 == a2)
    {
      uint64_t v6 = 100;
    }
    else
    {
      uint64_t v6 = 92;
    }
    uint64_t v9 = *(int *)(a1 + v6);
  }
  return v2 + v9;
}

uint64_t sub_1001A9C0C(int a1, uint64_t a2)
{
  if ((int)a2 >= 2 && a1)
  {
    if (qword_100560A90)
    {
      uint64_t v2 = *(unsigned int *)(qword_100560A90 + 8);
      if ((int)v2 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v2, a2);
      }
      return (*(_DWORD *)(qword_100560A90 + 12 + 4 * a2) + 1);
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  if (!qword_100560A90) {
    goto LABEL_10;
  }
  uint64_t v4 = *(unsigned int *)(qword_100560A90 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v4 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v4, a2);
  }
  return *(unsigned int *)(qword_100560A90 + 12 + 4 * (int)a2);
}

uint64_t sub_1001A9CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2;
  if (*(void *)(a1 + 80) > a3) {
    uint64_t v5 = a2 - *(int *)(a1 + 92);
  }
  unint64_t v6 = (unsigned __int128)(v5 * (__int128)0x2CE33E6C02CE33E7) >> 64;
  unint64_t v7 = v6 >> 63;
  unint64_t v8 = v6 >> 6;
  LODWORD(v9) = 1970;
  while (1)
  {
    int v10 = v8 + v7;
    if (!v10) {
      break;
    }
    LODWORD(v9) = v10 + v9;
    uint64_t v5 = a2 - sub_1001A9AB4(a1, (int)v9);
    unint64_t v11 = (unsigned __int128)(v5 * (__int128)0x2CE33E6C02CE33E7) >> 64;
    unint64_t v7 = v11 >> 63;
    unint64_t v8 = v11 >> 6;
  }
  if (v5 < 0)
  {
    uint64_t v9 = (v9 - 1);
    LODWORD(v5) = v5 + sub_1001A9ED4((_DWORD *)a1, v9);
  }
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    JreThrowNullPointerException();
  }
  uint64_t v13 = *(unsigned int *)(v12 + 8);
  if ((int)v13 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v13, 1);
  }
  *(_DWORD *)(v12 + 16) = v9;
  return (v5 + 1);
}

uint64_t sub_1001A9DF0(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = *(unsigned int *)(v1 + 8);
  if ((int)v3 < 2) {
    IOSArray_throwOutOfBoundsWithMsg(v3, 1);
  }
  int v4 = [a1 isLeapYearWithInt:*(unsigned int *)(v1 + 16)];
  uint64_t v5 = a1[2];
  uint64_t v6 = *(unsigned int *)(v5 + 8);
  if ((int)v6 <= 2) {
    IOSArray_throwOutOfBoundsWithMsg(v6, 2);
  }
  uint64_t v7 = *(unsigned int *)(v5 + 20);
  return sub_1001A66A4(v4, v7);
}

uint64_t sub_1001A9ED4(_DWORD *a1, uint64_t a2)
{
  int v2 = a2;
  if ([a1 isLeapYearWithInt:a2]) {
    uint64_t result = 366;
  }
  else {
    uint64_t result = 365;
  }
  int v5 = a1[22];
  if (v5 == v2) {
    uint64_t result = (result - a1[24]);
  }
  if (v5 - 1 == v2) {
    return (result - a1[25]);
  }
  return result;
}

JavaUtilGregorianCalendar *new_JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_(uint64_t a1)
{
  int v2 = [JavaUtilGregorianCalendar alloc];
  id Default = (void *)JavaUtilLocale_getDefault();
  JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((uint64_t)v2, a1, Default);
  return v2;
}

JavaUtilGregorianCalendar *new_JavaUtilGregorianCalendar_init()
{
  id v0 = [JavaUtilGregorianCalendar alloc];
  id Default = JavaUtilTimeZone_getDefault();
  int v2 = (void *)JavaUtilLocale_getDefault();
  JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((uint64_t)v0, (uint64_t)Default, v2);
  return v0;
}

JavaUtilGregorianCalendar *new_JavaUtilGregorianCalendar_initWithLong_(uint64_t a1)
{
  int v2 = [JavaUtilGregorianCalendar alloc];
  JavaUtilGregorianCalendar_initWithBoolean_((uint64_t)v2);
  [(JavaUtilCalendar *)v2 setTimeInMillisWithLong:a1];
  return v2;
}

JavaUtilGregorianCalendar *new_JavaUtilGregorianCalendar_initWithJavaUtilLocale_(void *a1)
{
  int v2 = [JavaUtilGregorianCalendar alloc];
  id Default = JavaUtilTimeZone_getDefault();
  JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((uint64_t)v2, (uint64_t)Default, a1);
  return v2;
}

JavaUtilGregorianCalendar *new_JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_(uint64_t a1, void *a2)
{
  int v4 = [JavaUtilGregorianCalendar alloc];
  JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_((uint64_t)v4, a1, a2);
  return v4;
}

JavaUtilGregorianCalendar *new_JavaUtilGregorianCalendar_initWithBoolean_()
{
  id v0 = [JavaUtilGregorianCalendar alloc];
  JavaUtilGregorianCalendar_initWithBoolean_((uint64_t)v0);
  return v0;
}

JavaNioReadOnlyBufferException *new_JavaNioReadOnlyBufferException_init()
{
  id v0 = [JavaNioReadOnlyBufferException alloc];
  JavaLangUnsupportedOperationException_init(v0, v1);
  return v0;
}

void *OrgXmlSaxHelpersParserAdapter_init(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  int v2 = (id *)(a1 + 72);
  id v3 = +[IOSObjectArray newArrayWithLength:3 type:NSString_class_()];
  JreStrongAssignAndConsume(v2, v3);
  JreStrongAssign((id *)(a1 + 80), 0);
  JreStrongAssign((id *)(a1 + 88), 0);
  *(_WORD *)(a1 + 96) = 1;
  *(unsigned char *)(a1 + 98) = 0;
  JreStrongAssign((id *)(a1 + 16), 0);
  JreStrongAssign((id *)(a1 + 24), 0);
  JreStrongAssign((id *)(a1 + 32), 0);
  JreStrongAssign((id *)(a1 + 40), 0);
  JavaLangSystem_getPropertyWithNSString_(@"org.xml.sax.parser");
  id Parser = OrgXmlSaxHelpersParserFactory_makeParser();
  return sub_1001ABAA8((id *)a1, Parser);
}

void *OrgXmlSaxHelpersParserAdapter_initWithOrgXmlSaxParser_(uint64_t a1, void *a2)
{
  *(unsigned char *)(a1 + 64) = 0;
  int v4 = (id *)(a1 + 72);
  id v5 = +[IOSObjectArray newArrayWithLength:3 type:NSString_class_()];
  JreStrongAssignAndConsume(v4, v5);
  JreStrongAssign((id *)(a1 + 80), 0);
  JreStrongAssign((id *)(a1 + 88), 0);
  *(_WORD *)(a1 + 96) = 1;
  *(unsigned char *)(a1 + 98) = 0;
  JreStrongAssign((id *)(a1 + 16), 0);
  JreStrongAssign((id *)(a1 + 24), 0);
  JreStrongAssign((id *)(a1 + 32), 0);
  JreStrongAssign((id *)(a1 + 40), 0);
  return sub_1001ABAA8((id *)a1, a2);
}

void *sub_1001ABAA8(id *a1, void *a2)
{
  if (!a2)
  {
    uint64_t v7 = new_JavaLangNullPointerException_initWithNSString_(@"Parser argument must not be null");
    objc_exception_throw(v7);
  }
  JreStrongAssign(a1 + 10, a2);
  id v3 = new_OrgXmlSaxHelpersAttributesImpl_init();
  JreStrongAssignAndConsume(a1 + 11, v3);
  int v4 = new_OrgXmlSaxHelpersNamespaceSupport_init();
  JreStrongAssignAndConsume(a1 + 6, v4);
  id v5 = [OrgXmlSaxHelpersParserAdapter_AttributeListAdapter alloc];
  objc_storeWeak((id *)&v5->this$0_, a1);
  return JreStrongAssignAndConsume(a1 + 7, v5);
}

uint64_t sub_1001ABC68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(result + 64))
  {
    CFStringRef v8 = JreStrcat("$$C$$", a2, a3, a4, a5, a6, a7, a8, @"Cannot change ");
    uint64_t v9 = new_OrgXmlSaxSAXNotSupportedException_initWithNSString_((uint64_t)v8);
    objc_exception_throw(v9);
  }
  return result;
}

void sub_1001ABED4(void *a1)
{
  objc_begin_catch(a1);
  *(unsigned char *)(v1 + 64) = 0;
  objc_exception_rethrow();
}

void sub_1001ABEE4(_Unwind_Exception *a1)
{
}

void sub_1001AC6A4(_Unwind_Exception *a1)
{
}

IOSObjectArray *sub_1001AC6C0(void *a1, void *a2, uint64_t a3, int a4)
{
  id v5 = (void *)a1[6];
  if (!v5) {
    goto LABEL_7;
  }
  int v15 = (IOSObjectArray *)[v5 processNameWithNSString:a2 withNSStringArray:a1[9] withBoolean:a3];
  if (!v15)
  {
    CFStringRef v16 = JreStrcat("$$", v8, v9, v10, v11, v12, v13, v14, @"Undeclared prefix: ");
    if (a4)
    {
      uint64_t v19 = sub_1001ACA14((uint64_t)a1, (uint64_t)v16);
      objc_exception_throw(v19);
    }
    [a1 reportErrorWithNSString:v16];
    int v15 = +[IOSObjectArray arrayWithLength:3 type:NSString_class_()];
    int v17 = IOSObjectArray_Set((uint64_t)v15, 1, &stru_10048C1F8);
    IOSObjectArray_Set((uint64_t)v15, 0, v17);
    if (a2)
    {
      IOSObjectArray_Set((uint64_t)v15, 2, [a2 intern]);
      return v15;
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  return v15;
}

void sub_1001AC978()
{
}

OrgXmlSaxSAXParseException *sub_1001ACA14(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 8);
  if (v3) {
    int v4 = new_OrgXmlSaxSAXParseException_initWithNSString_withOrgXmlSaxLocator_(a2, v3);
  }
  else {
    int v4 = new_OrgXmlSaxSAXParseException_initWithNSString_withNSString_withNSString_withInt_withInt_(a2, 0, 0, -1, -1);
  }
  return v4;
}

OrgXmlSaxHelpersParserAdapter *new_OrgXmlSaxHelpersParserAdapter_initWithOrgXmlSaxParser_(void *a1)
{
  int v2 = [OrgXmlSaxHelpersParserAdapter alloc];
  OrgXmlSaxHelpersParserAdapter_initWithOrgXmlSaxParser_((uint64_t)v2, a1);
  return v2;
}

double JavaLangStringToReal_parseDblImplWithNSString_withInt_(void *a1, unsigned int a2)
{
  if (qword_100560AA0 != -1) {
    dispatch_once(&qword_100560AA0, &stru_100417AE8);
  }
  uint64_t v4 = qword_100560A98;
  return Java_java_lang_StringToReal_parseDblImpl((uint64_t)J2ObjC_JNIEnv, v4, a1, a2);
}

float JavaLangStringToReal_parseFltImplWithNSString_withInt_(void *a1, unsigned int a2)
{
  if (qword_100560AA0 != -1) {
    dispatch_once(&qword_100560AA0, &stru_100417AE8);
  }
  uint64_t v4 = qword_100560A98;
  return Java_java_lang_StringToReal_parseFltImpl((uint64_t)J2ObjC_JNIEnv, v4, a1, a2);
}

void sub_1001ACF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFStringRef v8 = JreStrcat("$$$$C", a2, a3, a4, a5, a6, a7, a8, @"Invalid ");
  uint64_t v9 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v8);
  objc_exception_throw(v9);
}

JavaLangStringToReal_StringExponentPair *sub_1001ACFB8(__CFString *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = [JavaLangStringToReal_StringExponentPair alloc];
  if (!a2) {
    goto LABEL_56;
  }
  if (!a1) {
    goto LABEL_55;
  }
  uint64_t v13 = v6;
  v6->negative_ = [(__CFString *)a1 charAtWithInt:0] == 45;
  int v14 = a2 - 1;
  unsigned int v15 = [(__CFString *)a1 charAtWithInt:(a2 - 1)] - 68;
  if (v15 <= 0x22 && ((1 << v15) & 0x500000005) != 0)
  {
    a2 = (a2 - 1);
    if (!v14) {
      goto LABEL_56;
    }
  }
  uint64_t v16 = JavaLangMath_maxWithInt_withInt_((uint64_t)[(__CFString *)a1 indexOf:69], (int)[(__CFString *)a1 indexOf:101]);
  uint64_t v17 = a2;
  if (v16 != -1)
  {
    uint64_t v18 = v16;
    uint64_t v19 = (v16 + 1);
    if (v19 == a2) {
      goto LABEL_56;
    }
    unsigned int v20 = [(__CFString *)a1 charAtWithInt:v19];
    if (v20 == 45 || v20 == 43)
    {
      BOOL v21 = v20 == 45;
      uint64_t v19 = (v18 + 2);
    }
    else
    {
      BOOL v21 = 0;
    }
    id v22 = [(__CFString *)a1 substring:v19 endIndex:a2];
    if (!v22) {
      goto LABEL_55;
    }
    uint64_t v23 = v22;
    if ([v22 isEmpty]) {
      goto LABEL_56;
    }
    if ((int)[v23 length] >= 1)
    {
      uint64_t v31 = 0;
      while ([v23 charAtWithInt:v31] - 58 > 0xFFFFFFF5)
      {
        uint64_t v31 = (v31 + 1);
        if ((int)v31 >= (int)[v23 length]) {
          goto LABEL_18;
        }
      }
LABEL_56:
      sub_1001ACF48((uint64_t)a1, a3, v7, v8, v9, v10, v11, v12);
    }
LABEL_18:
    int v32 = JavaLangInteger_parseIntWithNSString_(v23, v24, v25, v26, v27, v28, v29, v30);
    uint64_t v33 = v32;
    if (v21) {
      uint64_t v33 = -(uint64_t)v32;
    }
    v13->e_ = v33;
    uint64_t v17 = v18;
  }
  unsigned int v34 = [(__CFString *)a1 charAtWithInt:0];
  if (v34 == 43)
  {
    LODWORD(a2) = a2 - 1;
    uint64_t v35 = 1;
  }
  else if (v34 == 45)
  {
    LODWORD(a2) = a2 - 1;
    uint64_t v35 = 1;
    v13->negative_ = 1;
  }
  else
  {
    uint64_t v35 = 0;
  }
  if (!a2) {
    goto LABEL_56;
  }
  id v36 = [(__CFString *)a1 indexOf:46];
  if ((v36 & 0x80000000) != 0)
  {
    uint64_t v46 = (__CFString *)[(__CFString *)a1 substring:v35 endIndex:v17];
  }
  else
  {
    int v37 = (int)v36;
    v13->e_ -= (int)v17 + ~v36;
    id v38 = [(__CFString *)a1 substring:v35 endIndex:v36];
    [(__CFString *)a1 substring:(v37 + 1) endIndex:v17];
    uint64_t v46 = (__CFString *)JreStrcat("$$", v39, v40, v41, v42, v43, v44, v45, v38);
  }
  a1 = v46;
  if (!v46) {
    goto LABEL_55;
  }
  unint64_t v47 = (unint64_t)[(__CFString *)v46 length];
  if (!v47) {
    goto LABEL_56;
  }
  uint64_t v48 = 0;
  while (1)
  {
    id v49 = (id)v47;
    uint64_t v50 = v48;
    BOOL v51 = __OFSUB__(v47, 1);
    unint64_t v47 = (v47 - 1);
    if (((v47 & 0x80000000) != 0) ^ v51 | (v47 == 0)) {
      break;
    }
    unsigned int v52 = [(__CFString *)a1 charAtWithInt:v47];
    uint64_t v48 = v50 - 1;
    if (v52 != 48) {
      goto LABEL_37;
    }
  }
  if ((int)v47 < 1)
  {
    unint64_t v47 = 0;
    goto LABEL_43;
  }
LABEL_37:
  int v53 = 1;
  while ([(__CFString *)a1 charAtWithInt:(v53 - 1)] == 48)
  {
    if (v49 == ++v53) {
      goto LABEL_43;
    }
  }
  unint64_t v47 = (v53 - 1);
LABEL_43:
  if (v50 | v47)
  {
    v13->e_ -= v50;
    a1 = (__CFString *)[(__CFString *)a1 substring:v47 endIndex:v49];
  }
  if (!a1) {
LABEL_55:
  }
    JreThrowNullPointerException();
  int v54 = [(__CFString *)a1 length];
  uint64_t e = v13->e_;
  if (v54 >= 53)
  {
    if (e > -360) {
      goto LABEL_51;
    }
    int v56 = JavaLangMath_minWithInt_withInt_((-359 - e), v54 - 1);
    a1 = (__CFString *)[(__CFString *)a1 substring:0 endIndex:(v54 - v56)];
    uint64_t e = v13->e_ + v56;
    v13->e_ = e;
  }
  if (e <= -1025)
  {
    v13->zero_ = 1;
    return v13;
  }
LABEL_51:
  if (e < 1025) {
    JreStrongAssign((id *)&v13->s_, a1);
  }
  else {
    v13->infinity_ = 1;
  }
  return v13;
}

float sub_1001AD398(void *a1, uint64_t a2)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  unsigned int v4 = [a1 length];
  unsigned int v5 = [a1 charAtWithInt:0];
  LODWORD(v11) = 2139095040;
  unsigned int v12 = v4 - 1;
  LODWORD(v13) = 2139095040;
  if (v5 == 45)
  {
    *(float *)&double v11 = -INFINITY;
    unsigned int v14 = 1;
  }
  else
  {
    unsigned int v14 = 0;
  }
  if (v5 == 45) {
    unsigned int v15 = v4 - 1;
  }
  else {
    unsigned int v15 = v4;
  }
  if (v5 == 43) {
    float v16 = INFINITY;
  }
  else {
    float v16 = *(float *)&v11;
  }
  if (v5 == 43) {
    uint64_t v17 = 1;
  }
  else {
    uint64_t v17 = v14;
  }
  if (v5 != 43) {
    unsigned int v12 = v15;
  }
  if (v12 == 3)
  {
    if ((objc_msgSend(a1, "regionMatches:thisOffset:aString:otherOffset:count:", 0, v17, @"NaN", 0, 3, v11, v13) & 1) == 0)goto LABEL_24; {
    return NAN;
    }
  }
  else if (v12 != 8 {
         || (objc_msgSend(a1, "regionMatches:thisOffset:aString:otherOffset:count:", 0, v17, @"Infinity", 0, 8, v11, v13) & 1) == 0)
  }
  {
LABEL_24:
    sub_1001ACF48((uint64_t)a1, a2, v6, v17, v7, v8, v9, v10);
  }
  return v16;
}

double JavaLangStringToReal_parseDoubleWithNSString_(void *a1)
{
  if (!a1) {
    goto LABEL_21;
  }
  uint64_t v1 = (__CFString *)[a1 trim];
  if (!v1) {
    goto LABEL_21;
  }
  int v2 = v1;
  id v3 = [(__CFString *)v1 length];
  uint64_t v10 = (uint64_t)v3;
  if (!v3) {
    goto LABEL_22;
  }
  unsigned int v11 = [(__CFString *)v2 charAtWithInt:(v3 - 1)];
  if (v11 == 121 || v11 == 78) {
    return sub_1001AD398(v2, 1);
  }
  if ([(__CFString *)v2 indexOfString:@"0x"] != -1
    || [(__CFString *)v2 indexOfString:@"0X"] != -1)
  {
    return JavaLangHexStringParser_parseDoubleWithNSString_((uint64_t)v2);
  }
  unsigned int v14 = sub_1001ACFB8(v2, v10, 1);
  if (!v14) {
LABEL_21:
  }
    JreThrowNullPointerException();
  unsigned int v15 = v14;
  if (v14->infinity_ || v14->zero_)
  {
    [(JavaLangStringToReal_StringExponentPair *)v14 specialValue];
    return v12;
  }
  double v16 = JavaLangStringToReal_parseDblImplWithNSString_withInt_(v14->s_, v14->e_);
  if (JavaLangDouble_doubleToRawLongBitsWithDouble_(v16) == -1) {
LABEL_22:
  }
    sub_1001ACF48((uint64_t)v2, 1, v4, v5, v6, v7, v8, v9);
  double result = -v16;
  if (!v15->negative_) {
    return v16;
  }
  return result;
}

void JavaLangStringToReal_parseFloatWithNSString_(void *a1)
{
  if (!a1) {
    goto LABEL_22;
  }
  uint64_t v1 = (__CFString *)[a1 trim];
  if (!v1) {
    goto LABEL_22;
  }
  int v2 = v1;
  id v3 = [(__CFString *)v1 length];
  uint64_t v10 = (uint64_t)v3;
  if (!v3) {
    goto LABEL_23;
  }
  unsigned int v11 = [(__CFString *)v2 charAtWithInt:(v3 - 1)];
  if (v11 == 121 || v11 == 78)
  {
    sub_1001AD398(v2, 0);
    return;
  }
  if ([(__CFString *)v2 indexOfString:@"0x"] != -1
    || [(__CFString *)v2 indexOfString:@"0X"] != -1)
  {
    JavaLangHexStringParser_parseFloatWithNSString_((uint64_t)v2);
    return;
  }
  float v12 = sub_1001ACFB8(v2, v10, 0);
  if (!v12) {
LABEL_22:
  }
    JreThrowNullPointerException();
  if (!v12->infinity_ && !v12->zero_)
  {
    float v13 = JavaLangStringToReal_parseFltImplWithNSString_withInt_(v12->s_, v12->e_);
    if (JavaLangFloat_floatToRawIntBitsWithFloat_(v13) != -1) {
      return;
    }
LABEL_23:
    sub_1001ACF48((uint64_t)v2, 0, v4, v5, v6, v7, v8, v9);
  }
  [(JavaLangStringToReal_StringExponentPair *)v12 specialValue];
}

void sub_1001AD74C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560A98 = IOSClass_fromClass(v1);
}

id JavaUtilLoggingLogManager_init(id *a1)
{
  int v2 = a1 + 1;
  id v3 = new_JavaUtilHashtable_init();
  JreStrongAssignAndConsume(v2, v3);
  uint64_t v4 = new_JavaUtilProperties_init();
  JreStrongAssignAndConsume(a1 + 2, v4);
  uint64_t v5 = new_JavaBeansPropertyChangeSupport_initWithId_(a1);
  JreStrongAssignAndConsume(a1 + 3, v5);
  Runtimuint64_t e = JavaLangRuntime_getRuntime();
  if (!Runtime) {
    JreThrowNullPointerException();
  }
  uint64_t v7 = (void *)Runtime;
  uint64_t v8 = [JavaUtilLoggingLogManager__1 alloc];
  JreStrongAssign((id *)&v8->this$0_, a1);
  JavaLangThread_init((uint64_t)v8);
  uint64_t v9 = v8;
  return [v7 addShutdownHookWithJavaLangThread:v9];
}

void sub_1001AD9B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1001AD9C4(void *a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  do
  {
    if (!v6) {
      goto LABEL_33;
    }
    id v7 = [v6 lastIndexOf:46];
    if (v7 == -1) {
      goto LABEL_9;
    }
    id v6 = [v6 substring:0 endIndex:v7];
    uint64_t v8 = (void *)a1[1];
    if (!v8) {
      goto LABEL_33;
    }
    uint64_t v9 = [v8 getWithId:v6];
    if (v9)
    {
      id LoggerWithNSString = v9;
      goto LABEL_13;
    }
  }
  while (!objc_msgSend(a1, "getPropertyWithNSString:", JreStrcat("$$", v10, v11, v12, v13, v14, v15, v16, v6))
       && !objc_msgSend(a1, "getPropertyWithNSString:", JreStrcat("$$", v17, v18, v19, v20, v21, v22, v23, v6)));
  id LoggerWithNSString = JavaUtilLoggingLogger_getLoggerWithNSString_((uint64_t)v6);
  [a1 setParentWithJavaUtilLoggingLogger:a2 withJavaUtilLoggingLogger:LoggerWithNSString];
  if (!LoggerWithNSString)
  {
LABEL_9:
    int v32 = (void *)a1[1];
    if (!v32) {
      goto LABEL_33;
    }
    id LoggerWithNSString = [v32 getWithId:&stru_10048C1F8];
    if (!LoggerWithNSString) {
      goto LABEL_14;
    }
LABEL_13:
    [a1 setParentWithJavaUtilLoggingLogger:a2 withJavaUtilLoggingLogger:LoggerWithNSString];
  }
LABEL_14:
  CFStringRef v33 = JreStrcat("$C", v25, v26, v27, v28, v29, v30, v31, a3);
  unsigned int v34 = (void *)a1[1];
  if (!v34 || (id v35 = [v34 values], v44 = 0u, v45 = 0u, v46 = 0u, v47 = 0u, !v35)) {
LABEL_33:
  }
    JreThrowNullPointerException();
  id v36 = v35;
  id result = [v35 countByEnumeratingWithState:&v44 objects:v48 count:16];
  if (result)
  {
    id v38 = result;
    uint64_t v39 = *(void *)v45;
    do
    {
      uint64_t v40 = 0;
      do
      {
        if (*(void *)v45 != v39) {
          objc_enumerationMutation(v36);
        }
        uint64_t v41 = *(void **)(*((void *)&v44 + 1) + 8 * (void)v40);
        if (!v41) {
          goto LABEL_33;
        }
        if (LoggerWithNSString == [*(id *)(*((void *)&v44 + 1) + 8 * (void)v40) getParent])
        {
          if (!a3) {
            goto LABEL_33;
          }
          if (![a3 length]) {
            goto LABEL_27;
          }
          id v42 = [v41 getName];
          if (!v42) {
            goto LABEL_33;
          }
          if ([v42 hasPrefix:v33])
          {
LABEL_27:
            [v41 setParentWithJavaUtilLoggingLogger:a2];
            if (LoggerWithNSString)
            {
              uint64_t v43 = (void *)LoggerWithNSString[4];
              if (!v43) {
                goto LABEL_33;
              }
              [v43 removeWithId:v41];
            }
          }
        }
        uint64_t v40 = (char *)v40 + 1;
      }
      while (v38 != v40);
      id result = [v36 countByEnumeratingWithState:&v44 objects:v48 count:16];
      id v38 = result;
    }
    while (result);
  }
  return result;
}

void sub_1001ADC94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001ADCF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001ADF18(_Unwind_Exception *a1)
{
}

void sub_1001ADF38(void *a1)
{
}

id JavaUtilLoggingLogManager_getInstanceByClassWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaUtilLoggingLogManager__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  SystemClassLoader = (void *)JavaLangClassLoader_getSystemClassLoader();
  if (!SystemClassLoader || (id v3 = [SystemClassLoader loadClassWithNSString:a1]) == 0) {
    JreThrowNullPointerException();
  }
  return [v3 newInstance];
}

uint64_t sub_1001AE0E4(uint64_t a1, uint64_t a2)
{
  objc_sync_enter((id)a1);
  [(id)a1 reset];
  uint64_t v4 = *(void **)(a1 + 16);
  if (!v4) {
    JreThrowNullPointerException();
  }
  objc_msgSend(v4, "load__WithJavaIoInputStream:", a2);
  uint64_t v5 = *(void **)(a1 + 8);
  if (!v5) {
    JreThrowNullPointerException();
  }
  id v6 = [v5 getWithId:&stru_10048C1F8];
  if (v6) {
    [v6 setManagerWithJavaUtilLoggingLogManager:a1];
  }
  id v7 = [*(id *)(a1 + 16) getPropertyWithNSString:@"config"];
  if (v7)
  {
    for (uint64_t i = new_JavaUtilStringTokenizer_initWithNSString_withNSString_(v7, @" ");
          [(JavaUtilStringTokenizer *)i hasMoreTokens];
          JavaUtilLoggingLogManager_getInstanceByClassWithNSString_((uint64_t)[(JavaUtilStringTokenizer *)i nextToken]))
    {
      ;
    }
  }
  id v9 = [*(id *)(a1 + 8) values];
  uint64_t v10 = v9;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  if (!v9) {
    JreThrowNullPointerException();
  }
  id v11 = [v9 countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v28;
    do
    {
      for (uint64_t j = 0; j != v11; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v28 != v12) {
          objc_enumerationMutation(v10);
        }
        uint64_t v14 = *(void **)(*((void *)&v27 + 1) + 8 * (void)j);
        if (!v14) {
          JreThrowNullPointerException();
        }
        uint64_t v15 = *(void **)(a1 + 16);
        id v16 = [*(id *)(*((void *)&v27 + 1) + 8 * (void)j) getName];
        id v24 = objc_msgSend(v15, "getPropertyWithNSString:", JreStrcat("$$", v17, v18, v19, v20, v21, v22, v23, v16));
        if (v24) {
          [v14 setLevelWithJavaUtilLoggingLevel:JavaUtilLoggingLevel_parseWithNSString_(v24)];
        }
      }
      id v11 = [v10 countByEnumeratingWithState:&v27 objects:v31 count:16];
    }
    while (v11);
  }
  uint64_t v25 = *(void **)(a1 + 24);
  if (!v25) {
    JreThrowNullPointerException();
  }
  [v25 firePropertyChangeWithNSString:0 withId:0 withId:0];
  return objc_sync_exit((id)a1);
}

void sub_1001AE2FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001AE468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001AE5AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001AE674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001AE890(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void JavaUtilLoggingLogManager_getLoggingMXBean()
{
  if ((atomic_load_explicit(JavaUtilLoggingLogManager__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v0 = new_JavaLangUnsupportedOperationException_init();
  objc_exception_throw(v0);
}

uint64_t JavaUtilLoggingLogManager_getLogManager()
{
  if ((atomic_load_explicit(JavaUtilLoggingLogManager__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaUtilLoggingLogManager_manager_;
}

uint64_t JavaUtilLoggingLogManager_class_()
{
  if ((atomic_load_explicit(JavaUtilLoggingLogManager__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560AB8 != -1) {
    dispatch_once(&qword_100560AB8, &stru_100418270);
  }
  return qword_100560AB0;
}

void sub_1001AEB94(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560AB0 = IOSClass_fromClass(v1);
}

IOSObjectArray *JavaUtilRegexSplitter_fastSplitWithNSString_withNSString_withInt_(void *a1, void *a2, int a3)
{
  if (!a1) {
    goto LABEL_27;
  }
  unsigned int v6 = [a1 length];
  if (!v6) {
    return 0;
  }
  id v7 = [a1 charAtWithInt:0];
  if (v6 != 1)
  {
    id result = 0;
    if (v6 != 2 || v7 != 92) {
      return result;
    }
    id v7 = [a1 charAtWithInt:1];
    if (off_10055C100)
    {
      if ([off_10055C100 indexOf:v7] == -1) {
        return 0;
      }
      goto LABEL_12;
    }
LABEL_27:
    JreThrowNullPointerException();
  }
  if (!off_10055C100) {
    goto LABEL_27;
  }
  if ([off_10055C100 indexOf:v7] != -1) {
    return 0;
  }
LABEL_12:
  if (!a2) {
    goto LABEL_27;
  }
  if ([a2 isEmpty])
  {
    CFStringRef v14 = &stru_10048C1F8;
    return +[IOSObjectArray arrayWithObjects:&v14 count:1 type:NSString_class_()];
  }
  else
  {
    id v9 = new_JavaUtilArrayList_init();
    if (a3 >= 1) {
      signed int v10 = a3;
    }
    else {
      signed int v10 = 0x7FFFFFFF;
    }
    id v11 = [a2 indexOf:v7 fromIndex:0];
    if (v11 == -1)
    {
      uint64_t v13 = 0;
    }
    else
    {
      id v12 = v11;
      uint64_t v13 = 0;
      do
      {
        if ([(JavaUtilArrayList *)v9 size] + 1 >= v10) {
          break;
        }
        -[JavaUtilArrayList addWithId:](v9, "addWithId:", [a2 substring:v13 endIndex:v12]);
        uint64_t v13 = (v12 + 1);
        id v12 = [a2 indexOf:v7 fromIndex:v13];
      }
      while (v12 != -1);
    }
    return (IOSObjectArray *)sub_1001AF0F4(v9, a2, v13, a3);
  }
}

IOSObjectArray *JavaUtilRegexSplitter_splitWithJavaUtilRegexPattern_withNSString_withNSString_withInt_(uint64_t a1, void *a2, void *a3, int a4)
{
  id result = JavaUtilRegexSplitter_fastSplitWithNSString_withNSString_withInt_(a2, a3, a4);
  if (!result)
  {
    if (!a3) {
      JreThrowNullPointerException();
    }
    if ([a3 isEmpty])
    {
      CFStringRef v12 = &stru_10048C1F8;
      return +[IOSObjectArray arrayWithObjects:&v12 count:1 type:NSString_class_()];
    }
    else
    {
      uint64_t v8 = new_JavaUtilArrayList_init();
      if (a4 >= 1) {
        signed int v9 = a4;
      }
      else {
        signed int v9 = 0x7FFFFFFF;
      }
      signed int v10 = new_JavaUtilRegexMatcher_initWithJavaUtilRegexPattern_withJavaLangCharSequence_(a1, (uint64_t)a3);
      uint64_t v11 = 0;
      if ([(JavaUtilRegexMatcher *)v10 find])
      {
        do
        {
          if ([(JavaUtilArrayList *)v8 size] + 1 >= v9) {
            break;
          }
          -[JavaUtilArrayList addWithId:](v8, "addWithId:", objc_msgSend(a3, "substring:endIndex:", v11, -[JavaUtilRegexMatcher start](v10, "start")));
          uint64_t v11 = [(JavaUtilRegexMatcher *)v10 end];
        }
        while ([(JavaUtilRegexMatcher *)v10 find]);
      }
      return (IOSObjectArray *)sub_1001AF0F4(v8, a3, v11, a4);
    }
  }
  return result;
}

id sub_1001AF0F4(void *a1, void *a2, uint64_t a3, int a4)
{
  if (!a2) {
    goto LABEL_18;
  }
  if ((int)[a2 length] <= (int)a3)
  {
    if (a4)
    {
      if (!a1) {
        goto LABEL_18;
      }
      [a1 addWithId:&stru_10048C1F8];
      goto LABEL_15;
    }
    if (!a1) {
      goto LABEL_18;
    }
  }
  else
  {
    if (!a1) {
      goto LABEL_18;
    }
    objc_msgSend(a1, "addWithId:", objc_msgSend(a2, "substring:", a3));
    if (a4) {
      goto LABEL_15;
    }
  }
  unsigned int v8 = [a1 size];
  if ((int)(v8 - 1) >= 0)
  {
    LODWORD(v9) = v8;
    while (1)
    {
      uint64_t v9 = (v9 - 1);
      id v10 = [a1 getWithInt:v9];
      if (!v10) {
        break;
      }
      if ([v10 isEmpty])
      {
        [a1 removeWithInt:v9];
        if ((int)v9 > 0) {
          continue;
        }
      }
      goto LABEL_15;
    }
LABEL_18:
    JreThrowNullPointerException();
  }
LABEL_15:
  uint64_t v11 = +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", (int)[a1 size], NSString_class_());
  return [a1 toArrayWithNSObjectArray:v11];
}

uint64_t JavaUtilRandomAccess_class_()
{
  if (qword_100560AC8 != -1) {
    dispatch_once(&qword_100560AC8, &stru_100418580);
  }
  return qword_100560AC0;
}

void sub_1001AF268(id a1)
{
  qword_100560AC0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilRandomAccess);
}

id JavaUtilLinkedList_init(uint64_t a1)
{
  JavaUtilAbstractSequentialList_init();
  *(_DWORD *)(a1 + 12) = 0;
  int v2 = new_JavaUtilLinkedList_Link_initWithId_withJavaUtilLinkedList_Link_withJavaUtilLinkedList_Link_(0, 0, 0);
  JreStrongAssignAndConsume((id *)(a1 + 16), v2);
  objc_storeWeak((id *)(*(void *)(a1 + 16) + 16), *(id *)(a1 + 16));
  id v3 = *(id **)(a1 + 16);
  return JreStrongAssign(v3 + 3, v3);
}

JavaUtilLinkedList_Link *new_JavaUtilLinkedList_Link_initWithId_withJavaUtilLinkedList_Link_withJavaUtilLinkedList_Link_(void *a1, void *a2, void *a3)
{
  unsigned int v6 = [JavaUtilLinkedList_Link alloc];
  JreStrongAssign(&v6->data_, a1);
  objc_storeWeak((id *)&v6->previous_, a2);
  JreStrongAssign((id *)&v6->next_, a3);
  return v6;
}

id sub_1001AF518(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2
    || (Weak = (id *)objc_loadWeak((id *)(v2 + 16)),
        unsigned int v6 = new_JavaUtilLinkedList_Link_initWithId_withJavaUtilLinkedList_Link_withJavaUtilLinkedList_Link_(a2, Weak, *(void **)(a1 + 16)), objc_storeWeak((id *)(*(void *)(a1 + 16) + 16), v6), !Weak))
  {
    JreThrowNullPointerException();
  }
  id result = JreStrongAssign(Weak + 3, v6);
  ++*(_DWORD *)(a1 + 12);
  ++*(_DWORD *)(a1 + 8);
  return result;
}

id sub_1001AF9DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (!v2
    || (uint64_t v4 = (id *)v2[3],
        uint64_t v5 = new_JavaUtilLinkedList_Link_initWithId_withJavaUtilLinkedList_Link_withJavaUtilLinkedList_Link_(a2, v2, v4), JreStrongAssign((id *)(*(void *)(a1 + 16) + 24), v5), !v4))
  {
    JreThrowNullPointerException();
  }
  id result = objc_storeWeak(v4 + 2, v5);
  ++*(_DWORD *)(a1 + 12);
  ++*(_DWORD *)(a1 + 8);
  return result;
}

void sub_1001AFC24(_Unwind_Exception *a1)
{
}

uint64_t sub_1001B0118(void *a1, void *a2)
{
  uint64_t v4 = [JavaUtilLinkedList_LinkIterator alloc];
  sub_1001B0CD4((uint64_t)v4, a1, 0);
  uint64_t v5 = v4;
  return sub_1001B04E0(a2, v5);
}

uint64_t sub_1001B04E0(void *a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  unsigned int v4 = [a2 hasNext];
  unsigned __int8 v5 = v4;
  if (v4)
  {
    do
    {
      id v6 = [a2 next];
      if (a1)
      {
        if ([a1 isEqual:v6]) {
          goto LABEL_9;
        }
      }
      else if (!v6)
      {
LABEL_9:
        [a2 remove];
        return v5 & 1;
      }
      unsigned __int8 v5 = [a2 hasNext];
    }
    while ((v5 & 1) != 0);
  }
  return v5 & 1;
}

JavaUtilLinkedList *new_JavaUtilLinkedList_init()
{
  id v0 = [JavaUtilLinkedList alloc];
  JavaUtilLinkedList_init((uint64_t)v0);
  return v0;
}

id sub_1001B0CD4(uint64_t a1, void *a2, int a3)
{
  JreStrongAssign((id *)(a1 + 16), a2);
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    goto LABEL_15;
  }
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(v5 + 8);
  if (a3 < 0 || *(_DWORD *)(v5 + 12) < a3)
  {
    uint64_t v13 = new_JavaLangIndexOutOfBoundsException_init();
    objc_exception_throw(v13);
  }
  id result = objc_storeWeak((id *)(a1 + 24), *(id *)(v5 + 16));
  int v7 = *(_DWORD *)(*(void *)(a1 + 16) + 12);
  if (v7 >= 0) {
    int v8 = *(_DWORD *)(*(void *)(a1 + 16) + 12);
  }
  else {
    int v8 = v7 + 1;
  }
  if (a3 >= v8 >> 1)
  {
    while (1)
    {
      *(_DWORD *)(a1 + 8) = v7;
      if (v7 < a3) {
        break;
      }
      Weak = (id *)objc_loadWeak((id *)(a1 + 24));
      if (!Weak) {
        goto LABEL_15;
      }
      id v12 = objc_loadWeak(Weak + 2);
      id result = objc_storeWeak((id *)(a1 + 24), v12);
      int v7 = *(_DWORD *)(a1 + 8) - 1;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 8) = -1;
    if (a3)
    {
      while (1)
      {
        uint64_t v9 = (id *)objc_loadWeak((id *)(a1 + 24));
        if (!v9) {
          break;
        }
        id result = objc_storeWeak((id *)(a1 + 24), v9[3]);
        int v10 = *(_DWORD *)(a1 + 8);
        *(_DWORD *)(a1 + 8) = v10 + 1;
        if (v10 + 2 >= a3) {
          return result;
        }
      }
LABEL_15:
      JreThrowNullPointerException();
    }
  }
  return result;
}

id sub_1001B1384(uint64_t a1, void *a2)
{
  JreStrongAssign((id *)(a1 + 16), a2);
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    JreThrowNullPointerException();
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v3 + 8);
  id result = JreStrongAssign((id *)(a1 + 24), *(void **)(v3 + 16));
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

JavaNioCharSequenceAdapter *JavaNioCharSequenceAdapter_copy__WithJavaNioCharSequenceAdapter_(uint64_t a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = [JavaNioCharSequenceAdapter alloc];
  JavaNioCharSequenceAdapter_initWithJavaLangCharSequence_((uint64_t)v3, v2);
  id result = v3;
  result->super.super.limit_ = *(_DWORD *)(a1 + 12);
  result->super.super.position_ = *(_DWORD *)(a1 + 20);
  result->super.super.mark_ = *(_DWORD *)(a1 + 16);
  return result;
}

id JavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v4 = [a2 length];
  JavaNioCharBuffer_initWithInt_withLong_(a1, (uint64_t)v4, 0, v5, v6, v7, v8, v9);
  return JreStrongAssign((id *)(a1 + 40), a2);
}

JavaNioCharSequenceAdapter *new_JavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(void *a1)
{
  uint64_t v2 = [JavaNioCharSequenceAdapter alloc];
  JavaNioCharSequenceAdapter_initWithJavaLangCharSequence_((uint64_t)v2, a1);
  return v2;
}

id JavaNetProxy_initWithJavaNetProxy_TypeEnum_withJavaNetSocketAddress_(uint64_t a1, void *a2, void *a3)
{
  if (atomic_load_explicit(JavaNetProxy_TypeEnum__initialized, memory_order_acquire))
  {
    if (!a3) {
      goto LABEL_8;
    }
  }
  else
  {
    objc_opt_class();
    if (!a3)
    {
LABEL_8:
      uint64_t v7 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Illegal Proxy.Type or SocketAddress argument");
      objc_exception_throw(v7);
    }
  }
  if ((void *)JavaNetProxy_TypeEnum_values_ == a2) {
    goto LABEL_8;
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  return JreStrongAssign((id *)(a1 + 16), a3);
}

id sub_1001B1C40(uint64_t a1)
{
  if ((atomic_load_explicit(JavaNetProxy_TypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JreStrongAssign((id *)(a1 + 8), (void *)JavaNetProxy_TypeEnum_values_);
  return JreStrongAssign((id *)(a1 + 16), 0);
}

IOSObjectArray *JavaNetProxy_TypeEnum_values()
{
  if ((atomic_load_explicit(JavaNetProxy_TypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaNetProxy_TypeEnum_class_();
  return +[IOSObjectArray arrayWithObjects:&JavaNetProxy_TypeEnum_values_ count:3 type:v0];
}

void *JavaNetProxy_TypeEnum_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaNetProxy_TypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = (void *)JavaNetProxy_TypeEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v3, "name"))) {
      break;
    }
    if (++v2 == 3) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v3;
}

uint64_t JavaNetProxy_TypeEnum_class_()
{
  if ((atomic_load_explicit(JavaNetProxy_TypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560AD8 != -1) {
    dispatch_once(&qword_100560AD8, &stru_100419F20);
  }
  return qword_100560AD0;
}

void sub_1001B21A8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560AD0 = IOSClass_fromClass(v1);
}

id JavaNioSelectorImpl_initWithJavaNioChannelsSpiSelectorProvider_(id *a1, void *a2)
{
  JavaNioChannelsSpiAbstractSelector_initWithJavaNioChannelsSpiSelectorProvider_(a1, a2);
  JreStrongAssignAndConsume(a1 + 5, objc_alloc((Class)NSObject));
  uint64_t v3 = new_JavaUtilHashSet_init();
  JreStrongAssignAndConsume(a1 + 6, v3);
  id v4 = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(a1[6]);
  JreStrongAssign(a1 + 7, v4);
  uint64_t v5 = new_JavaUtilHashSet_init();
  JreStrongAssignAndConsume(a1 + 8, v5);
  id v6 = a1[8];
  uint64_t v7 = [JavaNioSelectorImpl_UnaddableSet alloc];
  JreStrongAssign((id *)&v7->set_, v6);
  JreStrongAssignAndConsume(a1 + 9, v7);
  uint64_t v8 = (void *)LibcoreIoStructPollfd_class_();
  uint64_t v9 = new_JavaUtilUnsafeArrayList_initWithIOSClass_withInt_(v8, 8);
  JreStrongAssignAndConsume(a1 + 12, v9);
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_ || (int v10 = (void **)[(id)LibcoreIoLibcore_os_ pipe], (v11 = v10) == 0)) {
    JreThrowNullPointerException();
  }
  uint64_t v12 = *((unsigned int *)v10 + 2);
  if ((int)v12 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v12, 0);
  }
  JreStrongAssign(a1 + 10, v11[3]);
  uint64_t v13 = *((unsigned int *)v11 + 2);
  if ((int)v13 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v13, 1);
  }
  JreStrongAssign(a1 + 11, v11[4]);
  LibcoreIoIoUtils_setBlockingWithJavaIoFileDescriptor_withBoolean_((uint64_t)a1[10], 0);
  [a1[12] addWithId:new_LibcoreIoStructPollfd_init()];
  return sub_1001B2CF8((uint64_t)a1, 0, a1[10], 1, 0);
}

void sub_1001B2484(_Unwind_Exception *a1)
{
}

void sub_1001B2644(_Unwind_Exception *a1)
{
  objc_sync_exit(v3);
  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B281C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B2924(_Unwind_Exception *a1)
{
  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B2A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B2A58(void *a1, uint64_t a2)
{
  -[JavaNioSelectorImpl checkClosed]_0(a1);
  objc_sync_enter(a1);
  id v4 = (void *)a1[7];
  objc_sync_enter(v4);
  uint64_t v5 = (void *)a1[9];
  objc_sync_enter(v5);
  -[JavaNioSelectorImpl doCancel]_0(a1);
  id v6 = (void *)a1[5];
  objc_sync_enter(v6);
  sub_1001B2D9C((uint64_t)a1);
  objc_sync_exit(v6);
  if (a2) {
    [a1 begin];
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_ || (uint64_t v7 = (void *)a1[12]) == 0) {
    JreThrowNullPointerException();
  }
  int v8 = objc_msgSend((id)LibcoreIoLibcore_os_, "pollWithLibcoreIoStructPollfdArray:withInt:", objc_msgSend(v7, "array"), a2);
  if (a2) {
    [a1 end];
  }
  if (v8 < 1) {
    int v9 = 0;
  }
  else {
    int v9 = sub_1001B2F20((uint64_t)a1);
  }
  uint64_t v10 = v9 - -[JavaNioSelectorImpl doCancel]_0(a1);
  objc_sync_exit(v5);
  objc_sync_exit(v4);
  objc_sync_exit(a1);
  return v10;
}

void sub_1001B2BB8(_Unwind_Exception *a1)
{
  if (v4) {
    objc_end_catch();
  }
  objc_sync_exit(v3);
  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B2C64()
{
}

id sub_1001B2CF8(uint64_t a1, uint64_t a2, void *a3, __int16 a4, void *a5)
{
  uint64_t v5 = *(void **)(a1 + 96);
  if (!v5 || (int v9 = (id *)[v5 getWithInt:a2]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = v9;
  JreStrongAssign(v9 + 1, a3);
  *((_WORD *)v10 + 8) = a4;
  return JreStrongAssign(v10 + 3, a5);
}

id sub_1001B2D9C(uint64_t a1)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v1 = *(void **)(a1 + 48);
  if (!v1) {
LABEL_18:
  }
    JreThrowNullPointerException();
  id result = [*(id *)(a1 + 48) countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (result)
  {
    id v4 = result;
    uint64_t v5 = *(void *)v14;
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v1);
        }
        int v8 = *(void **)(*((void *)&v13 + 1) + 8 * (void)v7);
        if (!v8) {
          goto LABEL_18;
        }
        unsigned __int8 v9 = objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * (void)v7), "interestOpsNoCheck", (void)v13);
        if ((v9 & 0xC) != 0) {
          int v10 = ((v9 & 0x11) != 0) | 4;
        }
        else {
          int v10 = (v9 & 0x11) != 0;
        }
        if (v10)
        {
          id v11 = [v8 channel];
          uint64_t v12 = (void *)JavaNioFileDescriptorChannel_class_();
          if (!v11) {
            goto LABEL_18;
          }
          if (([v12 isInstance:v11] & 1) == 0) {
            JreThrowClassCastException();
          }
          sub_1001B2CF8(a1, v6, [v11 getFD], v10, v8);
          uint64_t v6 = (v6 + 1);
        }
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v4 != v7);
      id result = [v1 countByEnumeratingWithState:&v13 objects:v17 count:16];
      id v4 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_1001B2F20(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 96);
  if (!v2 || (uint64_t v3 = [v2 getWithInt:0]) == 0) {
LABEL_31:
  }
    JreThrowNullPointerException();
  if (v3[9] == 1)
  {
    id v4 = +[IOSByteArray arrayWithLength:8];
    while ((int)LibcoreIoIoBridge_readWithJavaIoFileDescriptor_withByteArray_withInt_withInt_(*(void *)(a1 + 80), (uint64_t)v4, 0, 1) > 0);
  }
  if ((int)[*(id *)(a1 + 96) size] >= 2)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 1;
    while (1)
    {
      uint64_t v7 = (id *)[*(id *)(a1 + 96) getWithInt:v6];
      if (!v7) {
        goto LABEL_31;
      }
      int v8 = v7;
      if (*((_WORD *)v7 + 9))
      {
        if (!v7[1]) {
          return v5;
        }
        id v9 = v7[3];
        objc_opt_class();
        if (!v9)
        {
          JreStrongAssign(v8 + 1, 0);
          JreStrongAssign(v8 + 3, 0);
          JreThrowNullPointerException();
        }
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          JreThrowClassCastException();
        }
        JreStrongAssign(v8 + 1, 0);
        JreStrongAssign(v8 + 3, 0);
        unsigned int v10 = [v9 interestOpsNoCheck];
        int v11 = *((unsigned __int16 *)v8 + 9);
        uint64_t v12 = (v11 & 0x10) != 0 ? v10 : v10 & (v11 << 31 >> 31) & 0x11;
        if ((v11 & 4) != 0)
        {
          char v13 = v10;
          if ([v9 isConnected]) {
            uint64_t v12 = v12 | v13 & 4;
          }
          else {
            uint64_t v12 = v12 | v13 & 8;
          }
        }
        if (v12)
        {
          long long v14 = *(void **)(a1 + 64);
          if (!v14) {
            goto LABEL_31;
          }
          if (![v14 containsWithId:v9])
          {
            [v9 setReadyOpsWithInt:v12];
            [*(id *)(a1 + 64) addWithId:v9];
            goto LABEL_26;
          }
          if ([v9 readyOps] != v12)
          {
            objc_msgSend(v9, "setReadyOpsWithInt:", objc_msgSend(v9, "readyOps") | v12);
LABEL_26:
            uint64_t v5 = (v5 + 1);
          }
        }
      }
      uint64_t v6 = (v6 + 1);
      if ((int)v6 >= (int)[*(id *)(a1 + 96) size]) {
        return v5;
      }
    }
  }
  return 0;
}

void sub_1001B31C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B3284(void *a1)
{
}

JavaNioSelectorImpl *new_JavaNioSelectorImpl_initWithJavaNioChannelsSpiSelectorProvider_(void *a1)
{
  uint64_t v2 = [JavaNioSelectorImpl alloc];
  JavaNioSelectorImpl_initWithJavaNioChannelsSpiSelectorProvider_((id *)&v2->super.super.super.isa, a1);
  return v2;
}

JavaLangIllegalThreadStateException *new_JavaLangIllegalThreadStateException_init()
{
  uint64_t v0 = [JavaLangIllegalThreadStateException alloc];
  JavaLangIllegalArgumentException_init(v0, v1);
  return v0;
}

id JavaNioChannelsSpiAbstractSelectionKey_init(uint64_t a1)
{
  id result = JavaNioChannelsSelectionKey_init(a1);
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

id LibcoreNetUrlFileURLConnection_initWithJavaNetURL_(uint64_t a1, void *a2)
{
  JavaNetURLConnection_initWithJavaNetURL_(a1, a2);
  *(void *)(a1 + 80) = -1;
  if (!a2) {
    JreThrowNullPointerException();
  }
  JreStrongAssign((id *)(a1 + 64), [a2 getFile]);
  id v4 = *(void **)(a1 + 64);
  if (!v4)
  {
    JreStrongAssign((id *)(a1 + 64), &stru_10048C1F8);
    id v4 = *(void **)(a1 + 64);
  }
  uint64_t v5 = LibcoreNetUriCodec_decodeWithNSString_(v4);
  return JreStrongAssign((id *)(a1 + 64), v5);
}

JavaIoByteArrayInputStream *sub_1001B3A18(void *a1)
{
  if (!a1) {
    goto LABEL_10;
  }
  uint64_t v2 = (id *)[a1 list];
  uint64_t v3 = new_JavaIoByteArrayOutputStream_init();
  id v4 = new_JavaIoPrintStream_initWithJavaIoOutputStream_(v3);
  [(JavaIoPrintStream *)v4 printWithNSString:@"<title>Directory Listing</title>\n"];
  [(JavaIoPrintStream *)v4 printWithNSString:@"<base href=\"file:"];
  id v5 = [a1 getPath];
  if (!v5
    || (id v6 = [v5 replace:92 withChar:47],
        [a1 getPath],
        [(JavaIoPrintStream *)v4 printWithNSString:JreStrcat("$$$$", v7, v8, v9, v10, v11, v12, v13, v6)], !v2))
  {
LABEL_10:
    JreThrowNullPointerException();
  }
  if (*((int *)v2 + 2) >= 1)
  {
    uint64_t v21 = 0;
    do
      [(JavaIoPrintStream *)v4 printWithNSString:JreStrcat("$$", v14, v15, v16, v17, v18, v19, v20, v2[v21++ + 3])];
    while (v21 < *((int *)v2 + 2));
  }
  [(JavaIoPrintStream *)v4 close];
  uint64_t v22 = new_JavaIoByteArrayInputStream_initWithByteArray_([(JavaIoByteArrayOutputStream *)v3 toByteArray]);
  return v22;
}

void sub_1001B3BF0(void *a1)
{
}

LibcoreNetUrlFileURLConnection *new_LibcoreNetUrlFileURLConnection_initWithJavaNetURL_(void *a1)
{
  uint64_t v2 = [LibcoreNetUrlFileURLConnection alloc];
  LibcoreNetUrlFileURLConnection_initWithJavaNetURL_((uint64_t)v2, a1);
  return v2;
}

void JreThrowNullPointerException()
{
}

void JreThrowClassCastException()
{
}

id JreStrongAssign(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = *a1;
  *a1 = v3;
  return v3;
}

void *JreStrongAssignAndConsume(id *a1, void *a2)
{
  id v4 = *a1;
  *a1 = a2;
  return a2;
}

id JreVolatileStrongAssign(atomic_ullong *a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)atomic_exchange(a1, (unint64_t)v3);
  return v3;
}

unint64_t JreVolatileStrongAssignAndConsume(atomic_ullong *a1, unint64_t a2)
{
  id v3 = (id)atomic_exchange(a1, a2);
  return a2;
}

void JreReleaseVolatile(id *a1)
{
}

id JreRetainVolatile(id *a1)
{
  return *a1;
}

CFStringRef JreStrcat(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  int v10 = *a1;
  if (*a1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 1;
    do
    {
      if (v10 == 64) {
        ++v11;
      }
      int v13 = *v12++;
      int v10 = v13;
    }
    while (v13);
  }
  __chkstk_darwin();
  uint64_t v15 = (const __CFString **)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = &a9;
  int v16 = sub_1001B40C8(a1, &a9, v15);
  v18[0] = 0;
  v18[1] = 0;
  JreStringBuilder_initWithCapacity((uint64_t)v18, v16);
  uint64_t v19 = &a9;
  sub_1001B4274(a1, (unsigned int *)&a9, v15, v18);
  return JreStringBuilder_toStringAndDealloc((uint64_t)v18);
}

uint64_t sub_1001B40C8(unsigned char *a1, id *a2, const __CFString **a3)
{
  char v3 = *a1;
  if (!*a1) {
    return 0;
  }
  uint64_t v5 = 0;
  id v6 = a1 + 1;
  do
  {
    switch(v3)
    {
      case '@':
        uint64_t v7 = a2++;
        if (*v7)
        {
          CFStringRef v8 = (const __CFString *)[*v7 description];
          *a3 = v8;
          int Length = CFStringGetLength(v8);
        }
        else
        {
          *a3 = 0;
          int Length = 4;
        }
        uint64_t v5 = (Length + v5);
        ++a3;
        break;
      case 'A':
      case 'E':
      case 'G':
      case 'H':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
      case 'P':
      case 'Q':
      case 'R':
        break;
      case 'B':
        uint64_t v5 = (v5 + 4);
        goto LABEL_19;
      case 'C':
        uint64_t v5 = (v5 + 1);
        goto LABEL_19;
      case 'D':
        uint64_t v5 = (v5 + 24);
        goto LABEL_19;
      case 'F':
        uint64_t v5 = (v5 + 15);
        goto LABEL_19;
      case 'I':
        uint64_t v5 = (v5 + 11);
        goto LABEL_19;
      case 'J':
        uint64_t v5 = (v5 + 20);
        goto LABEL_19;
      case 'S':
        uint64_t v5 = (v5 + 6);
LABEL_19:
        ++a2;
        break;
      default:
        if (v3 == 36)
        {
          int v13 = (CFStringRef *)a2++;
          if (*v13) {
            int v14 = CFStringGetLength(*v13);
          }
          else {
            int v14 = 4;
          }
          uint64_t v5 = (v5 + v14);
        }
        else if (v3 == 90)
        {
          int v10 = a2++;
          if (*(_DWORD *)v10) {
            int v11 = 4;
          }
          else {
            int v11 = 5;
          }
          uint64_t v5 = (v11 + v5);
        }
        break;
    }
    int v12 = *v6++;
    char v3 = v12;
  }
  while (v12);
  return v5;
}

void sub_1001B4274(unsigned char *a1, unsigned int *a2, const __CFString **a3, _DWORD *a4)
{
  char v4 = *a1;
  if (*a1)
  {
    uint64_t v7 = a1 + 1;
    while (2)
    {
      switch(v4)
      {
        case '@':
          a2 += 2;
          CFStringRef v11 = *a3++;
          CFStringRef v10 = v11;
          goto LABEL_16;
        case 'A':
        case 'E':
        case 'G':
        case 'H':
        case 'K':
        case 'L':
        case 'M':
        case 'N':
        case 'O':
        case 'P':
        case 'Q':
        case 'R':
          goto LABEL_17;
        case 'B':
        case 'I':
        case 'S':
          CFStringRef v8 = a2;
          a2 += 2;
          IntegralToString_convertInt((uint64_t)a4, *v8);
          goto LABEL_17;
        case 'C':
          int v12 = (__int16 *)a2;
          a2 += 2;
          JreStringBuilder_appendChar(a4, *v12);
          goto LABEL_17;
        case 'D':
          int v13 = (double *)a2;
          a2 += 2;
          RealToString_convertDouble((uint64_t)a4, *v13);
          goto LABEL_17;
        case 'F':
          int v14 = (double *)a2;
          a2 += 2;
          float v15 = *v14;
          RealToString_convertFloat((uint64_t)a4, v15);
          goto LABEL_17;
        case 'J':
          int v16 = (uint64_t *)a2;
          a2 += 2;
          IntegralToString_convertLong((uint64_t)a4, *v16);
          goto LABEL_17;
        default:
          if (v4 == 36)
          {
            uint64_t v17 = (const __CFString **)a2;
            a2 += 2;
            CFStringRef v10 = *v17;
          }
          else
          {
            if (v4 != 90) {
              goto LABEL_17;
            }
            uint64_t v9 = a2;
            a2 += 2;
            if (*v9) {
              CFStringRef v10 = @"true";
            }
            else {
              CFStringRef v10 = @"false";
            }
          }
LABEL_16:
          JreStringBuilder_appendString((uint64_t)a4, v10);
LABEL_17:
          int v18 = *v7++;
          char v4 = v18;
          if (!v18) {
            return;
          }
          continue;
      }
    }
  }
}

CFStringRef JreStrAppendInner(__CFString *a1, unsigned __int8 *a2, id *a3)
{
  int v16 = a3;
  uint64_t v17 = (unsigned int *)a3;
  int v5 = *a2;
  if (*a2)
  {
    uint64_t v6 = 0;
    uint64_t v7 = a2 + 1;
    do
    {
      if (v5 == 64) {
        ++v6;
      }
      int v8 = *v7++;
      int v5 = v8;
    }
    while (v8);
  }
  __chkstk_darwin();
  CFStringRef v10 = (const __CFString **)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v11 = sub_1001B40C8(a2, v16, v10);
  if (a1)
  {
    a1 = (__CFString *)[(__CFString *)a1 description];
    int Length = CFStringGetLength(a1);
  }
  else
  {
    int Length = 4;
  }
  v15[0] = 0;
  v15[1] = 0;
  JreStringBuilder_initWithCapacity((uint64_t)v15, Length + v11);
  JreStringBuilder_appendString((uint64_t)v15, a1);
  sub_1001B4274(a2, v17, v10, v15);
  return JreStringBuilder_toStringAndDealloc((uint64_t)v15);
}

CFStringRef JreStrAppend(__CFString **a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  CFStringRef result = JreStrAppendInner(*a1, a2, &a9);
  *a1 = (__CFString *)result;
  return result;
}

CFStringRef JreStrAppendStrong(__CFString **a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  CFStringRef v10 = (id)JreStrAppendInner(*a1, a2, &a9);
  int v11 = *a1;
  *a1 = (__CFString *)v10;
  return v10;
}

id JavaIoFile_initWithNSString_withNSString_(uint64_t a1, __CFString *a2, void *a3)
{
  if (!a3)
  {
    int v11 = new_JavaLangNullPointerException_initWithNSString_(@"name == null");
    objc_exception_throw(v11);
  }
  if (a2 && ![(__CFString *)a2 isEmpty])
  {
    int v8 = (id *)(a1 + 8);
    if ([a3 isEmpty]) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = (__CFString *)sub_1001B49C4(a2, a3);
    }
    uint64_t v6 = sub_1001B47FC(v9);
    uint64_t v7 = v8;
  }
  else
  {
    uint64_t v6 = sub_1001B47FC(a3);
    uint64_t v7 = (id *)(a1 + 8);
  }
  return JreStrongAssign(v7, v6);
}

id JavaIoFile_initWithJavaNetURI_(uint64_t a1, void *a2)
{
  sub_1001B4AA8(a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  char v4 = sub_1001B47FC([a2 getPath]);
  return JreStrongAssign((id *)(a1 + 8), v4);
}

NSString *sub_1001B47FC(void *a1)
{
  if (atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_28;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
LABEL_28:
    }
      JreThrowNullPointerException();
  }
  uint64_t v2 = (unsigned int *)[a1 toCharArray];
  if (!v2) {
    goto LABEL_28;
  }
  char v3 = v2;
  int v16 = a1;
  uint64_t v4 = v2[2];
  if ((int)v4 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    BOOL v7 = 0;
    while (1)
    {
      uint64_t v8 = (int)v3[2];
      if (v5 >= v8) {
        IOSArray_throwOutOfBoundsWithMsg(v8, v5);
      }
      int v9 = *((unsigned __int16 *)v3 + v5 + 6);
      BOOL v10 = v9 == 47;
      if (v9 != 47) {
        break;
      }
      if (!v7)
      {
        LOWORD(v9) = JavaIoFile_separatorChar_;
        uint64_t v11 = (v6 + 1);
        uint64_t v12 = (int)v6;
LABEL_11:
        uint64_t v13 = v3[2];
        if ((v6 & 0x80000000) != 0 || (int)v6 >= (int)v13) {
          IOSArray_throwOutOfBoundsWithMsg(v13, v6);
        }
        *((_WORD *)v3 + v12 + 6) = v9;
        uint64_t v6 = v11;
      }
      ++v5;
      BOOL v7 = v10;
      if (v4 == v5) {
        goto LABEL_19;
      }
    }
    uint64_t v11 = (v6 + 1);
    uint64_t v12 = (int)v6;
    goto LABEL_11;
  }
  BOOL v10 = 0;
  LODWORD(v6) = 0;
LABEL_19:
  BOOL v14 = (int)v6 > 1 && v10;
  if (v6 - v14 == v4) {
    return (NSString *)v16;
  }
  return +[NSString stringWithCharacters:offset:length:](NSString, "stringWithCharacters:offset:length:", v3, 0);
}

CFStringRef sub_1001B49C4(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_11;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_11;
    }
  }
  int v4 = [a1 length];
  uint64_t v5 = (v4 - 1);
  if (v4 >= 1)
  {
    unsigned int v6 = [a1 charAtWithInt:v5];
    if (v6 == (unsigned __int16)JavaIoFile_separatorChar_) {
      return JreStrcat("$$", v7, v5, v8, v9, v10, v11, v12, a1);
    }
  }
  if (!a2) {
LABEL_11:
  }
    JreThrowNullPointerException();
  if ((int)objc_msgSend(a2, "length", v5) > 0)
  {
    unsigned int v13 = [a2 charAtWithInt:0];
    if (v13 == (unsigned __int16)JavaIoFile_separatorChar_) {
      return JreStrcat("$$", v7, v5, v8, v9, v10, v11, v12, a1);
    }
  }
  return JreStrcat("$C$", v7, v5, v8, v9, v10, v11, v12, a1);
}

id sub_1001B4AA8(void *a1)
{
  if (atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_14;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_14;
    }
  }
  if (([a1 isAbsolute] & 1) == 0)
  {
    uint64_t v12 = @"URI is not absolute: ";
    goto LABEL_22;
  }
  id v9 = [a1 getRawSchemeSpecificPart];
  if (!v9) {
LABEL_14:
  }
    JreThrowNullPointerException();
  if (([v9 hasPrefix:@"/"] & 1) == 0)
  {
    uint64_t v12 = @"URI is not hierarchical: ";
    goto LABEL_22;
  }
  if ((objc_msgSend(@"file", "isEqual:", objc_msgSend(a1, "getScheme")) & 1) == 0)
  {
    uint64_t v12 = @"Expected file scheme in URI: ";
    goto LABEL_22;
  }
  id v10 = [a1 getRawPath];
  if (!v10 || [v10 isEmpty])
  {
    uint64_t v12 = @"Expected non-empty path in URI: ";
    goto LABEL_22;
  }
  if ([a1 getRawAuthority])
  {
    uint64_t v12 = @"Found authority in URI: ";
    goto LABEL_22;
  }
  if ([a1 getRawQuery])
  {
    uint64_t v12 = @"Found query in URI: ";
    goto LABEL_22;
  }
  id result = [a1 getRawFragment];
  if (result)
  {
    uint64_t v12 = @"Found fragment in URI: ";
LABEL_22:
    CFStringRef v13 = JreStrcat("$@", v2, v3, v4, v5, v6, v7, v8, v12);
    BOOL v14 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v13);
    objc_exception_throw(v14);
  }
  return result;
}

id sub_1001B4BEC(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = (void *)LibcoreIoLibcore_os_;
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = *(void *)(a1 + 8);
  return [v4 canAccessWithNSString:v5 withInt:a2];
}

void sub_1001B4D68(void *a1)
{
}

JavaIoFile *new_JavaIoFile_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaIoFile alloc];
  uint64_t v3 = sub_1001B47FC(a1);
  JreStrongAssign((id *)&v2->path_, v3);
  return v2;
}

BOOL sub_1001B5534(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
    return 0;
  }
  if (!a1) {
    return 0;
  }
LABEL_3:
  uint64_t v4 = +[NSDate dateWithTimeIntervalSince1970:(double)a2 / 1000.0];
  uint64_t v5 = +[NSMutableDictionary dictionaryWithCapacity:1];
  [(NSMutableDictionary *)v5 setObject:v4 forKey:NSFileModificationDate];
  uint64_t v6 = +[NSFileManager defaultManager];
  return [(NSFileManager *)v6 setAttributes:v5 ofItemAtPath:a1 error:0];
}

BOOL sub_1001B5634(uint64_t a1, int a2, int a3)
{
  if (!*(void *)(a1 + 8)) {
    return 0;
  }
  uint64_t v6 = [+[NSFileManager defaultManager] attributesOfItemAtPath:*(void *)(a1 + 8) error:0];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  unsigned int v8 = [(NSDictionary *)v6 filePosixPermissions];
  if (a3) {
    uint64_t v9 = v8 | a2;
  }
  else {
    uint64_t v9 = v8 & ~a2;
  }
  id v10 = +[NSNumber numberWithInt:v9];
  id v11 = objc_alloc_init((Class)NSMutableDictionary);
  [v11 addEntriesFromDictionary:v7];
  [v11 setObject:v10 forKey:NSFilePosixPermissions];
  BOOL v12 = [+[NSFileManager defaultManager] setAttributes:v11 ofItemAtPath:*(void *)(a1 + 8) error:0];

  return v12;
}

IOSObjectArray *sub_1001B57CC(void *a1)
{
  if ((atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (![a1 length]) {
    return 0;
  }
  uint64_t v2 = [+[NSFileManager defaultManager] contentsOfDirectoryAtPath:a1 error:0];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = NSString_class_();
  return +[IOSObjectArray arrayWithNSArray:v3 type:v4];
}

IOSObjectArray *sub_1001B59B8(void *a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v4 = *(int *)(a2 + 8);
  uint64_t v5 = +[IOSObjectArray arrayWithLength:v4 type:JavaIoFile_class_()];
  if ((int)v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(int *)(a2 + 8);
      if (v6 >= v7) {
        IOSArray_throwOutOfBoundsWithMsg(v7, v6);
      }
      unsigned int v8 = new_JavaIoFile_initWithJavaIoFile_withNSString_(a1, *(void **)(a2 + 24 + 8 * v6));
      IOSObjectArray_SetAndConsume((uint64_t)v5, v6++, v8);
    }
    while (v4 != v6);
  }
  return v5;
}

void sub_1001B5C1C(void *a1)
{
}

void sub_1001B5DE0(_Unwind_Exception *a1)
{
}

void sub_1001B5E5C(void *a1)
{
}

JavaIoFile *JavaIoFile_createTempFileWithNSString_withNSString_(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaIoFile_createTempFileWithNSString_withNSString_withJavaIoFile_(a1, a2, 0);
}

JavaIoFile *JavaIoFile_createTempFileWithNSString_withNSString_withJavaIoFile_(void *a1, uint64_t a2, JavaIoFile *a3)
{
  if ((atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_10;
  }
LABEL_3:
  if ((int)[a1 length] <= 2)
  {
    int v16 = new_JavaLangIllegalArgumentException_initWithNSString_(@"prefix must be at least 3 characters");
    objc_exception_throw(v16);
  }
  if (!a3)
  {
    id PropertyWithNSString_withNSString = JavaLangSystem_getPropertyWithNSString_withNSString_(@"java.io.tmpdir", @".");
    a3 = new_JavaIoFile_initWithNSString_(PropertyWithNSString_withNSString);
  }
  do
  {
    if (!qword_100560AE8) {
      goto LABEL_10;
    }
    [(id)qword_100560AE8 nextInt];
    CFStringRef v13 = (__CFString *)JreStrcat("$I$", v6, v7, v8, v9, v10, v11, v12, a1);
    BOOL v14 = new_JavaIoFile_initWithJavaIoFile_withNSString_(a3, v13);
  }
  while (![(JavaIoFile *)v14 createNewFile]);
  return v14;
}

void sub_1001B6070(void *a1)
{
}

JavaIoFile *new_JavaIoFile_initWithJavaIoFile_withNSString_(void *a1, void *a2)
{
  uint64_t v4 = [JavaIoFile alloc];
  if (a1) {
    uint64_t v5 = (__CFString *)[a1 getPath];
  }
  else {
    uint64_t v5 = 0;
  }
  JavaIoFile_initWithNSString_withNSString_((uint64_t)v4, v5, a2);
  return v4;
}

JavaIoFile *new_JavaIoFile_initWithNSString_withNSString_(__CFString *a1, void *a2)
{
  uint64_t v4 = [JavaIoFile alloc];
  JavaIoFile_initWithNSString_withNSString_((uint64_t)v4, a1, a2);
  return v4;
}

IOSObjectArray *JavaIoFile_listRoots()
{
  if ((atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v1 = new_JavaIoFile_initWithNSString_(@"/");
  return +[IOSObjectArray arrayWithObjects:&v1 count:1 type:JavaIoFile_class_()];
}

uint64_t JavaIoFile_class_()
{
  if ((atomic_load_explicit(JavaIoFile__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560AF8 != -1) {
    dispatch_once(&qword_100560AF8, &stru_10041BCF8);
  }
  return qword_100560AF0;
}

void sub_1001B6944(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560AF0 = IOSClass_fromClass(v1);
}

JavaSecurityPrivilegedActionException *new_JavaSecurityPrivilegedActionException_initWithJavaLangException_(uint64_t a1)
{
  uint64_t v2 = [JavaSecurityPrivilegedActionException alloc];
  JavaLangException_initWithJavaLangThrowable_(v2, a1);
  return v2;
}

BOOL JavaUtilGrego_isLeapYearWithInt_(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a1 & 3) != 0) {
    return 0;
  }
  HIDWORD(v3) = -1030792151 * a1 + 85899344;
  LODWORD(v3) = HIDWORD(v3);
  if ((v3 >> 2) > 0x28F5C28) {
    return 1;
  }
  HIDWORD(v4) = -1030792151 * a1 + 85899344;
  LODWORD(v4) = HIDWORD(v4);
  return (v4 >> 4) < 0xA3D70B;
}

uint64_t JavaUtilGrego_monthLengthWithInt_withInt_(int a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = qword_100560B00;
  if (!qword_100560B00) {
    JreThrowNullPointerException();
  }
  if (JavaUtilGrego_isLeapYearWithInt_(a1)) {
    int v5 = 12;
  }
  else {
    int v5 = 0;
  }
  uint64_t v6 = *(unsigned int *)(v4 + 8);
  uint64_t v7 = (v5 + a2);
  if ((int)v7 < 0 || (int)v7 >= (int)v6) {
    IOSArray_throwOutOfBoundsWithMsg(v6, v7);
  }
  return *(unsigned int *)(v4 + 12 + 4 * (int)v7);
}

uint64_t JavaUtilGrego_previousMonthLengthWithInt_withInt_(int a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a2 < 1) {
    return 31;
  }
  return JavaUtilGrego_monthLengthWithInt_withInt_(a1, a2 - 1);
}

uint64_t JavaUtilGrego_fieldsToDayWithInt_withInt_withInt_(int a1, int a2, int a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = JavaUtilGrego_floorDivideWithLong_withLong_(a1 - 1, 4);
  uint64_t v7 = JavaUtilGrego_floorDivideWithLong_withLong_(a1 - 1, 400);
  uint64_t v8 = JavaUtilGrego_floorDivideWithLong_withLong_(a1 - 1, 100);
  uint64_t v9 = qword_100560B08;
  if (!qword_100560B08) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = v8;
  if (JavaUtilGrego_isLeapYearWithInt_(a1)) {
    int v11 = 12;
  }
  else {
    int v11 = 0;
  }
  uint64_t v12 = *(unsigned int *)(v9 + 8);
  uint64_t v13 = (v11 + a2);
  if ((int)v13 < 0 || (int)v13 >= (int)v12) {
    IOSArray_throwOutOfBoundsWithMsg(v12, v13);
  }
  return 365 * (a1 - 1) + (uint64_t)a3 + v6 + v7 - v10 - 719163 + *(int *)(v9 + 12 + 4 * (int)v13);
}

uint64_t JavaUtilGrego_dayOfWeekWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = +[IOSLongArray arrayWithLength:1];
  sub_1001B73C4(a1 + 5, 7, (uint64_t)v2);
  uint64_t size = v2->super.size_;
  if ((int)size <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(size, 0);
  }
  unsigned int v4 = v2->buffer_[0];
  if (v4) {
    return v4;
  }
  else {
    return 7;
  }
}

IOSIntArray *JavaUtilGrego_dayToFieldsWithLong_withIntArray_(uint64_t a1, IOSIntArray *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!a2 || a2->super.size_ <= 4) {
    a2 = +[IOSIntArray arrayWithLength:5];
  }
  unsigned int v4 = +[IOSLongArray arrayWithLength:1];
  int v5 = sub_1001B73C4(a1 + 719162, 146097, (uint64_t)v4);
  uint64_t size = v4->super.size_;
  if ((int)size <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(size, 0);
  }
  uint64_t v7 = sub_1001B73C4(v4->buffer_[0], 36524, (uint64_t)v4);
  uint64_t v8 = v4->super.size_;
  if ((int)v8 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v8, 0);
  }
  int v9 = sub_1001B73C4(v4->buffer_[0], 1461, (uint64_t)v4);
  uint64_t v10 = v4->super.size_;
  if ((int)v10 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v10, 0);
  }
  uint64_t v11 = sub_1001B73C4(v4->buffer_[0], 365, (uint64_t)v4);
  int v12 = 400 * v5 + 100 * v7 + 4 * v9 + v11;
  uint64_t v13 = v4->super.size_;
  if ((int)v13 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v13, 0);
  }
  int v14 = v4->buffer_[0];
  BOOL v15 = v7 != 4 && v11 != 4;
  int v16 = v15 + v12;
  if (v7 != 4 && v11 != 4) {
    int v17 = v14;
  }
  else {
    int v17 = 365;
  }
  BOOL isLeapYearWithInt = JavaUtilGrego_isLeapYearWithInt_(v15 + v12);
  if (isLeapYearWithInt) {
    int v19 = 60;
  }
  else {
    int v19 = 59;
  }
  if (isLeapYearWithInt) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  if (v17 >= v19) {
    int v21 = v20;
  }
  else {
    int v21 = 0;
  }
  if (!qword_100560B08) {
    goto LABEL_37;
  }
  uint64_t v22 = 1497972245 * (12 * (v21 + v17) + 6);
  int v23 = (v22 >> 39) + ((unint64_t)v22 >> 63);
  int v24 = v23 + 12;
  if (!isLeapYearWithInt) {
    int v24 = v23;
  }
  uint64_t v25 = v24;
  uint64_t v26 = *(unsigned int *)(qword_100560B08 + 8);
  if (v24 < 0 || v24 >= (int)v26) {
    IOSArray_throwOutOfBoundsWithMsg(v26, v24);
  }
  int v27 = ((int)a1 + 719164) % 7;
  int v28 = v27 >= 1 ? ((int)a1 + 719164) % 7 : v27 + 7;
  if (!a2) {
LABEL_37:
  }
    JreThrowNullPointerException();
  int v29 = *(_DWORD *)(qword_100560B08 + 12 + 4 * v25);
  uint64_t v30 = a2->super.size_;
  if ((int)v30 < 1) {
    IOSArray_throwOutOfBoundsWithMsg(v30, 0);
  }
  int v31 = v17 + 1;
  *(&a2->super.size_ + 1) = v16;
  uint64_t v32 = a2->super.size_;
  if ((int)v32 < 2) {
    IOSArray_throwOutOfBoundsWithMsg(v32, 1);
  }
  a2->buffer_[0] = v23;
  uint64_t v33 = a2->super.size_;
  if ((int)v33 < 3) {
    IOSArray_throwOutOfBoundsWithMsg(v33, 2);
  }
  a2->buffer_[1] = v31 - v29;
  uint64_t v34 = a2->super.size_;
  if ((int)v34 < 4) {
    IOSArray_throwOutOfBoundsWithMsg(v34, 3);
  }
  a2->buffer_[2] = v28;
  uint64_t v35 = a2->super.size_;
  if ((int)v35 <= 4) {
    IOSArray_throwOutOfBoundsWithMsg(v35, 4);
  }
  a2->buffer_[3] = v31;
  return a2;
}

IOSIntArray *JavaUtilGrego_timeToFieldsWithLong_withIntArray_(uint64_t a1, IOSIntArray *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!a2 || a2->super.size_ <= 5) {
    a2 = +[IOSIntArray arrayWithLength:6];
  }
  unsigned int v4 = +[IOSLongArray arrayWithLength:1];
  uint64_t v5 = sub_1001B73C4(a1, 86400000, (uint64_t)v4);
  JavaUtilGrego_dayToFieldsWithLong_withIntArray_(v5, a2);
  uint64_t size = v4->super.size_;
  if ((int)size <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(size, 0);
  }
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v7 = a2->super.size_;
  if ((int)v7 <= 5) {
    IOSArray_throwOutOfBoundsWithMsg(v7, 5);
  }
  a2->buffer_[4] = v4->buffer_[0];
  return a2;
}

uint64_t JavaUtilGrego_floorDivideWithLong_withLong_(uint64_t a1, uint64_t a2)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire))
  {
    if ((a1 & 0x8000000000000000) == 0) {
      return a1 / a2;
    }
  }
  else
  {
    objc_opt_class();
    if ((a1 & 0x8000000000000000) == 0) {
      return a1 / a2;
    }
  }
  return (a1 + 1) / a2 - 1;
}

uint64_t sub_1001B73C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire))
  {
    if ((a1 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    if (a3)
    {
      uint64_t v6 = (a1 + 1) / a2 - 1;
      uint64_t v7 = a1 - v6 * a2;
      uint64_t v8 = *(unsigned int *)(a3 + 8);
      if ((int)v8 > 0) {
        goto LABEL_5;
      }
LABEL_9:
      IOSArray_throwOutOfBoundsWithMsg(v8, 0);
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (a1 < 0) {
    goto LABEL_7;
  }
LABEL_3:
  if (!a3) {
    goto LABEL_10;
  }
  uint64_t v6 = a1 / a2;
  uint64_t v7 = a1 % a2;
  uint64_t v8 = *(unsigned int *)(a3 + 8);
  if ((int)v8 < 1) {
    goto LABEL_9;
  }
LABEL_5:
  *(void *)(a3 + 16) = v7;
  return v6;
}

uint64_t JavaUtilGrego_getDayOfWeekInMonthWithInt_withInt_withInt_(int a1, int a2, int a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilGrego__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a3 - 22) > 6)
  {
    if ((a3 - 29) < 7) {
      return 0xFFFFFFFFLL;
    }
    else {
      return ((a3 + 6) / 7);
    }
  }
  else if (a3 + 7 > (int)JavaUtilGrego_monthLengthWithInt_withInt_(a1, a2))
  {
    return 0xFFFFFFFFLL;
  }
  else
  {
    return 4;
  }
}

JavaUtilZipCheckedOutputStream *new_JavaUtilZipCheckedOutputStream_initWithJavaIoOutputStream_withJavaUtilZipChecksum_(void *a1, void *a2)
{
  unsigned int v4 = [JavaUtilZipCheckedOutputStream alloc];
  JavaIoFilterOutputStream_initWithJavaIoOutputStream_((uint64_t)v4, a1);
  JreStrongAssign((id *)&v4->check_, a2);
  return v4;
}

JavaNioChannelsAlreadyBoundException *new_JavaNioChannelsAlreadyBoundException_init()
{
  uint64_t v0 = [JavaNioChannelsAlreadyBoundException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

IOSByteArray *sub_1001B7944(id *a1, void *a2)
{
  id v4 = [a1 charset];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (v4)
    {
      uint64_t v13 = new_JavaNioCharsetUnsupportedCharsetException_initWithNSString_((__CFString *)[v4 name]);
      objc_exception_throw(v13);
    }
    goto LABEL_25;
  }
  uint64_t v5 = (unsigned int *)a1[8];
  if (!v5)
  {
    objc_opt_class();
    if (!v4) {
      goto LABEL_25;
    }
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_21;
    }
    if ([v4 nsEncoding] == (id)10)
    {
      if (!a2) {
        goto LABEL_25;
      }
      uint64_t v7 = +[IOSCharArray arrayWithLength:](IOSCharArray, "arrayWithLength:", (int)([a2 remaining] + 1));
      uint64_t size = v7->super.size_;
      if ((int)size <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(size, 0);
      }
      *((_WORD *)&v7->super.size_ + 2) = -257;
      uint64_t v6 = 1;
      goto LABEL_14;
    }
    if (a2)
    {
      uint64_t v7 = +[IOSCharArray arrayWithLength:](IOSCharArray, "arrayWithLength:", (int)[a2 remaining]);
      uint64_t v6 = 0;
      if (v7) {
        goto LABEL_14;
      }
    }
LABEL_25:
    JreThrowNullPointerException();
  }
  if (!a2) {
    goto LABEL_25;
  }
  uint64_t v6 = v5[2];
  uint64_t v7 = +[IOSCharArray arrayWithLength:](IOSCharArray, "arrayWithLength:", (int)([a2 remaining] + v6));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a1[8], 0, v7, 0, *((unsigned int *)a1[8] + 2));
  JreStrongAssign(a1 + 8, 0);
  if (!v7) {
    goto LABEL_25;
  }
LABEL_14:
  [a2 getWithCharArray:v7 withInt:v6 withInt:(v7->super.size_ - v6)];
  objc_opt_class();
  if (!v4) {
    goto LABEL_25;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_21:
  }
    JreThrowClassCastException();
  int v9 = sub_1001B7DB0((uint64_t)v7, (uint64_t)[v4 nsEncoding]);
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v10 = v9;
  if (v9->super.size_) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v7;
  }
  JreStrongAssign(a1 + 8, v11);
  return v10;
}

IOSByteArray *sub_1001B7DB0(uint64_t a1, uint64_t a2)
{
  if (a2 == 10) {
    uint64_t v2 = 2415919360;
  }
  else {
    uint64_t v2 = a2;
  }
  unint64_t v3 = [+[NSString stringWithCharacters:a1 + 12 length:*(int *)(a1 + 8)] dataUsingEncoding:v2 allowLossyConversion:0];
  id v4 = [(NSData *)v3 bytes];
  uint64_t v5 = (int)[(NSData *)v3 length];
  return +[IOSByteArray arrayWithBytes:v4 count:v5];
}

JavaNioCharsetIOSCharsetEncoder *new_JavaNioCharsetIOSCharsetEncoder_initWithJavaNioCharsetCharset_withFloat_(void *a1, float a2)
{
  id v4 = [JavaNioCharsetIOSCharsetEncoder alloc];
  char v6 = 63;
  JavaNioCharsetCharsetEncoder_initWithJavaNioCharsetCharset_withFloat_withFloat_withByteArray_((uint64_t)v4, a1, +[IOSByteArray arrayWithBytes:&v6 count:1], a2, a2);
  return v4;
}

uint64_t LibcoreIcuTimeZoneNames_getDisplayNameWithNSStringArray2_withNSString_withBoolean_withInt_(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if ((atomic_load_explicit(LibcoreIcuTimeZoneNames__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v18 = a2;
  uint64_t v8 = +[IOSObjectArray arrayWithObjects:&v18 count:1 type:NSString_class_()];
  uint64_t v9 = JavaUtilArrays_binarySearchWithNSObjectArray_withId_withJavaUtilComparator_(a1, (uint64_t)v8, (void *)qword_100560B20);
  if ((v9 & 0x80000000) != 0) {
    return 0;
  }
  if (!a1) {
    goto LABEL_22;
  }
  uint64_t v10 = v9;
  uint64_t v11 = v9;
  uint64_t v12 = *(unsigned int *)(a1 + 8);
  if ((int)v10 >= (int)v12) {
    IOSArray_throwOutOfBoundsWithMsg(v12, v10);
  }
  uint64_t v13 = *(void *)(a1 + 24 + 8 * v11);
  if (a3)
  {
    if (a4 == 1)
    {
      if (v13)
      {
        uint64_t v14 = *(unsigned int *)(v13 + 8);
        uint64_t v15 = 3;
        if ((int)v14 <= 3)
        {
          uint64_t v16 = 3;
          goto LABEL_25;
        }
        return *(void *)(v13 + 24 + 8 * v15);
      }
LABEL_22:
      JreThrowNullPointerException();
    }
    if (!v13) {
      goto LABEL_22;
    }
    uint64_t v14 = *(unsigned int *)(v13 + 8);
    uint64_t v15 = 4;
    if ((int)v14 <= 4)
    {
      uint64_t v16 = 4;
      goto LABEL_25;
    }
  }
  else if (a4 == 1)
  {
    if (!v13) {
      goto LABEL_22;
    }
    uint64_t v14 = *(unsigned int *)(v13 + 8);
    uint64_t v15 = 1;
    if ((int)v14 <= 1)
    {
      uint64_t v16 = 1;
      goto LABEL_25;
    }
  }
  else
  {
    if (!v13) {
      goto LABEL_22;
    }
    uint64_t v14 = *(unsigned int *)(v13 + 8);
    uint64_t v15 = 2;
    if ((int)v14 <= 2)
    {
      uint64_t v16 = 2;
LABEL_25:
      IOSArray_throwOutOfBoundsWithMsg(v14, v16);
    }
  }
  return *(void *)(v13 + 24 + 8 * v15);
}

id LibcoreIcuTimeZoneNames_getZoneStringsWithJavaUtilLocale_(uint64_t a1)
{
  uint64_t Default = a1;
  if (atomic_load_explicit(LibcoreIcuTimeZoneNames__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  objc_opt_class();
  if (!Default) {
LABEL_3:
  }
    uint64_t Default = JavaUtilLocale_getDefault();
LABEL_4:
  uint64_t v2 = (void *)qword_100560B18;
  if (!qword_100560B18) {
    JreThrowNullPointerException();
  }
  return [v2 getWithId:Default];
}

uint64_t sub_1001B82DC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (atomic_load_explicit(LibcoreIcuTimeZoneNames__initialized, memory_order_acquire))
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_8:
    JreThrowNullPointerException();
  }
  id result = objc_opt_class();
  if (!a2) {
    goto LABEL_8;
  }
LABEL_3:
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
      id result = (uint64_t)sub_1001B8390(v3, *(void **)(a2 + 24 + 8 * v4++));
    while (v4 < *(int *)(a2 + 8));
  }
  return result;
}

id sub_1001B8390(uint64_t a1, void *a2)
{
  if ((atomic_load_explicit(LibcoreIcuTimeZoneNames__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:a1];
  uint64_t v5 = +[NSTimeZone timeZoneWithName:](NSTimeZone, "timeZoneWithName:", [a2 objectAtIndex:0]);
  objc_msgSend(a2, "replaceObjectAtIndex:withObject:", 1, -[NSTimeZone localizedName:locale:](v5, "localizedName:locale:", 0, v4));
  objc_msgSend(a2, "replaceObjectAtIndex:withObject:", 2, -[NSTimeZone localizedName:locale:](v5, "localizedName:locale:", 1, v4));
  objc_msgSend(a2, "replaceObjectAtIndex:withObject:", 3, -[NSTimeZone localizedName:locale:](v5, "localizedName:locale:", 2, v4));
  char v6 = [(NSTimeZone *)v5 localizedName:3 locale:v4];
  return [a2 replaceObjectAtIndex:4 withObject:v6];
}

void *LibcoreIcuTimeZoneNames_ZoneStringsCache_init(uint64_t a1)
{
  if ((atomic_load_explicit(LibcoreIcuTimeZoneNames__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100560B10) {
    JreThrowNullPointerException();
  }
  LibcoreUtilBasicLruCache_initWithInt_(a1, *(_DWORD *)(qword_100560B10 + 8));
  uint64_t v2 = new_JavaUtilHashMap_init();
  return JreStrongAssignAndConsume((id *)(a1 + 20), v2);
}

uint64_t sub_1001B88B4(uint64_t a1, uint64_t a2)
{
  objc_sync_enter((id)a1);
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = a2 + 8 * v4;
      for (uint64_t i = 1; i != 5; ++i)
      {
        uint64_t v7 = *(unsigned int *)(a2 + 8);
        if ((int)v4 >= (int)v7) {
          IOSArray_throwOutOfBoundsWithMsg(v7, v4);
        }
        uint64_t v8 = *(void *)(v5 + 24);
        if (!v8) {
          JreThrowNullPointerException();
        }
        uint64_t v9 = *(int *)(v8 + 8);
        if (i >= v9) {
          IOSArray_throwOutOfBoundsWithMsg(v9, i);
        }
        uint64_t v10 = *(void **)(a1 + 20);
        if (!v10) {
LABEL_23:
        }
          JreThrowNullPointerException();
        uint64_t v11 = *(void *)(v8 + 24 + 8 * i);
        id v12 = [v10 getWithId:v11];
        if (v12)
        {
          uint64_t v13 = *(unsigned int *)(a2 + 8);
          if ((int)v4 >= (int)v13) {
            IOSArray_throwOutOfBoundsWithMsg(v13, v4);
          }
          uint64_t v14 = *(void *)(v5 + 24);
          if (!v14) {
            goto LABEL_23;
          }
          IOSObjectArray_Set(v14, i, v12);
        }
        else
        {
          [*(id *)(a1 + 20) putWithId:v11 withId:v11];
        }
      }
      uint64_t v4 = (v4 + 1);
    }
    while ((int)v4 < *(_DWORD *)(a2 + 8));
  }
  return objc_sync_exit((id)a1);
}

void sub_1001B8A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B8B64()
{
}

uint64_t JavaNioByteOrder_nativeOrder()
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return qword_100560B28;
}

LibcoreUtilMutableLong *new_LibcoreUtilMutableLong_initWithLong_(int64_t a1)
{
  id result = [LibcoreUtilMutableLong alloc];
  result->value_ = a1;
  return result;
}

unint64_t JavaIoBufferedInputStream_initWithJavaIoInputStream_withInt_(uint64_t a1, void *a2, int a3)
{
  JavaIoFilterInputStream_initWithJavaIoInputStream_(a1, a2);
  *(_DWORD *)(a1 + 32) = -1;
  if (a3 <= 0)
  {
    uint64_t v7 = new_JavaLangIllegalArgumentException_initWithNSString_(@"size <= 0");
    objc_exception_throw(v7);
  }
  id v5 = +[IOSByteArray newArrayWithLength:a3];
  return JreVolatileStrongAssignAndConsume((atomic_ullong *)(a1 + 16), (unint64_t)v5);
}

void sub_1001B8F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B8F6C()
{
  uint64_t v0 = new_JavaIoIOException_initWithNSString_(@"BufferedInputStream is closed");
  objc_exception_throw(v0);
}

id sub_1001B902C(uint64_t a1, void *a2, unsigned int *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if (v6 != -1)
  {
    int v7 = *(_DWORD *)(a1 + 28);
    if (*(_DWORD *)(a1 + 36) - (int)v6 < v7)
    {
      if (v6)
      {
        if ((int)v6 >= 1)
        {
          if (!a3) {
            goto LABEL_20;
          }
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a3, v6, a3, 0, a3[2] - v6);
        }
      }
      else
      {
        if (!a3) {
          goto LABEL_20;
        }
        int v10 = a3[2];
        if (v7 > v10)
        {
          int v11 = 2 * v10;
          if (v11 < v7) {
            int v7 = v11;
          }
          id v12 = +[IOSByteArray arrayWithLength:v7];
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v3, 0, v12, 0, v3[2]);
          uint64_t v3 = (unsigned int *)JreVolatileStrongAssign((atomic_ullong *)(a1 + 16), v12);
        }
      }
      *(_DWORD *)(a1 + 36) -= *(_DWORD *)(a1 + 32);
      *(_DWORD *)(a1 + 32) = 0;
      *(_DWORD *)(a1 + 24) = 0;
      if (a2 && v3)
      {
        id v9 = [a2 readWithByteArray:v3 withInt:*(unsigned int *)(a1 + 36) withInt:v3[2] - *(_DWORD *)(a1 + 36)];
        LODWORD(result) = *(_DWORD *)(a1 + 36) + (v9 & ~((int)v9 >> 31));
        goto LABEL_18;
      }
LABEL_20:
      JreThrowNullPointerException();
    }
  }
  if (!a2) {
    goto LABEL_20;
  }
  id result = [a2 readWithByteArray:a3];
  if ((int)result < 1) {
    return result;
  }
  *(_DWORD *)(a1 + 32) = -1;
  *(_DWORD *)(a1 + 36) = 0;
  id v9 = result;
LABEL_18:
  *(_DWORD *)(a1 + 24) = result;
  return v9;
}

void sub_1001B937C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B95E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B969C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001B97EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoBufferedInputStream *new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(void *a1)
{
  uint64_t v2 = [JavaIoBufferedInputStream alloc];
  JavaIoBufferedInputStream_initWithJavaIoInputStream_withInt_((uint64_t)v2, a1, 0x2000);
  return v2;
}

uint64_t sub_1001B9948(int a1)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = (a1 - 1) | ((a1 - 1) >> 1) | (((a1 - 1) | ((a1 - 1) >> 1)) >> 2);
  unsigned int v3 = v2 | (v2 >> 4) | ((v2 | (v2 >> 4)) >> 8);
  int v4 = v3 | HIWORD(v3);
  if (v4 < 0x40000000) {
    unsigned int v5 = v4 + 1;
  }
  else {
    unsigned int v5 = 0x40000000;
  }
  if (v4 < 0) {
    return 1;
  }
  else {
    return v5;
  }
}

id JavaUtilConcurrentConcurrentHashMap_comparableClassForWithId_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (![(id)JavaLangComparable_class_() isInstance:a1]) {
    return 0;
  }
  if (!a1) {
LABEL_25:
  }
    JreThrowNullPointerException();
  id v2 = [a1 getClass];
  if (v2 != (id)NSString_class_())
  {
    unsigned int v3 = (int *)[v2 getGenericInterfaces];
    if (v3)
    {
      int v4 = v3;
      if (v3[2] >= 1)
      {
        uint64_t v5 = 0;
        while (1)
        {
          uint64_t v6 = (void *)JavaLangReflectParameterizedType_class_();
          uint64_t v7 = v4[2];
          if (v5 >= v7) {
            IOSArray_throwOutOfBoundsWithMsg(v7, v5);
          }
          uint64_t v8 = *(void **)&v4[2 * v5 + 6];
          if ([v6 isInstance:v8])
          {
            id v9 = (void *)JavaLangReflectParameterizedType_class_();
            if (v8 && ([v9 isInstance:v8] & 1) == 0) {
              JreThrowClassCastException();
            }
            id v10 = [v8 getRawType];
            if (v10 == (id)JavaLangComparable_class_())
            {
              if (!v8) {
                goto LABEL_25;
              }
              int v11 = (id *)[v8 getActualTypeArguments];
              if (v11)
              {
                if (*((_DWORD *)v11 + 2) == 1 && v11[3] == v2) {
                  return v2;
                }
              }
            }
          }
          if (++v5 >= v4[2]) {
            return 0;
          }
        }
      }
    }
    return 0;
  }
  return v2;
}

id JavaUtilConcurrentConcurrentHashMap_compareComparablesWithIOSClass_withId_withId_(id a1, void *a2, void *a3)
{
  if (atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire))
  {
    if (!a3) {
      return 0;
    }
  }
  else
  {
    objc_opt_class();
    if (!a3) {
      return 0;
    }
  }
  if ([a3 getClass] != a1) {
    return 0;
  }
  uint64_t v7 = (void *)JavaLangComparable_class_();
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (([v7 isInstance:a2] & 1) == 0) {
    JreThrowClassCastException();
  }
  return [a2 compareToWithId:a3];
}

id JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100560B40) {
    JreThrowNullPointerException();
  }
  id v4 = [(id)qword_100560B40 getObjectVolatileWithId:a1 withLong:((uint64_t)a2 << dword_100560B78) + qword_100560B70];
  objc_opt_class();
  if (v4 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v4;
}

id JavaUtilConcurrentConcurrentHashMap_casTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_Node_(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v8 = (void *)qword_100560B40;
  if (!qword_100560B40) {
    JreThrowNullPointerException();
  }
  uint64_t v9 = ((uint64_t)a2 << dword_100560B78) + qword_100560B70;
  return [v8 compareAndSwapObjectWithId:a1 withLong:v9 withId:a3 withId:a4];
}

id JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_(uint64_t a1, int a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = (void *)qword_100560B40;
  if (!qword_100560B40) {
    JreThrowNullPointerException();
  }
  uint64_t v7 = ((uint64_t)a2 << dword_100560B78) + qword_100560B70;
  return [v6 putOrderedObjectWithId:a1 withLong:v7 withId:a3];
}

uint64_t JavaUtilConcurrentConcurrentHashMap_initWithInt_(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  JavaUtilAbstractMap_init(a1, a2);
  if ((v2 & 0x80000000) != 0)
  {
    uint64_t v5 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v5);
  }
  if (v2 >> 29) {
    uint64_t result = 0x40000000;
  }
  else {
    uint64_t result = sub_1001B9948(v2 + (v2 >> 1) + 1);
  }
  atomic_store(result, (unsigned int *)(a1 + 48));
  return result;
}

uint64_t JavaUtilConcurrentConcurrentHashMap_initWithInt_withFloat_withInt_(uint64_t a1, uint64_t a2, unsigned int a3, float a4)
{
  unsigned int v6 = a2;
  JavaUtilAbstractMap_init(a1, a2);
  if ((v6 & 0x80000000) != 0 || (a4 > 0.0 ? (BOOL v8 = (int)a3 <= 0) : (BOOL v8 = 1), v8))
  {
    uint64_t v14 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v14);
  }
  if (v6 <= a3) {
    unsigned int v9 = a3;
  }
  else {
    unsigned int v9 = v6;
  }
  double v10 = (float)((float)v9 / a4) + 1.0;
  unint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
  if (v10 < 0.0) {
    unint64_t v11 = 0x8000000000000000;
  }
  if ((uint64_t)v10 == 0x8000000000000000) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = (uint64_t)v10;
  }
  if (v12 <= 0x3FFFFFFF) {
    uint64_t result = sub_1001B9948(v12);
  }
  else {
    uint64_t result = 0x40000000;
  }
  atomic_store(result, (unsigned int *)(a1 + 48));
  return result;
}

JavaUtilConcurrentConcurrentHashMap_Traverser *new_JavaUtilConcurrentConcurrentHashMap_Traverser_initWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withInt_withInt_(void *a1, int a2, int a3, int a4)
{
  BOOL v8 = [JavaUtilConcurrentConcurrentHashMap_Traverser alloc];
  JreStrongAssign((id *)&v8->tab_, a1);
  v8->index_ = a3;
  v8->baseIndex_ = a3;
  v8->baseLimit_ = a4;
  v8->baseSize_ = a2;
  JreStrongAssign((id *)&v8->next_, 0);
  return v8;
}

unint64_t sub_1001BA500(uint64_t a1, void *a2, void *a3, char a4)
{
  if (!a2 || !a3)
  {
    uint64_t v25 = new_JavaLangNullPointerException_init();
    objc_exception_throw(v25);
  }
  unsigned int v6 = [a2 hash];
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v7 = v6 & 0x7FFFFFFF ^ HIWORD(v6);
  uint64_t v8 = atomic_load((unint64_t *)(a1 + 24));
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            if (v8)
            {
              int v9 = *(_DWORD *)(v8 + 8);
              if (v9) {
                break;
              }
            }
            uint64_t v8 = (uint64_t)sub_1001BC740(a1);
          }
          int v10 = (v9 - 1) & v7;
          unint64_t v11 = (char *)JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(v8, v10);
          if (v11) {
            break;
          }
          uint64_t v14 = new_JavaUtilConcurrentConcurrentHashMap_Node_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_(v7, a2, a3, 0);
          if (JavaUtilConcurrentConcurrentHashMap_casTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_Node_(v8, v10, 0, (uint64_t)v14))
          {
            int v20 = 0;
LABEL_31:
            sub_1001BB1FC(a1, 1uLL, v20);
            return 0;
          }
        }
        uint64_t v12 = v11;
        int v13 = *((_DWORD *)v11 + 2);
        if (v13 != -1879048193) {
          break;
        }
        uint64_t v8 = sub_1001BB070(a1, v8, (uint64_t)v11);
      }
      objc_sync_enter(v11);
      if (JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(v8, v10) != v12) {
        goto LABEL_11;
      }
      if ((v13 & 0x80000000) == 0) {
        break;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();
        if ((isKindOfClass & 1) == 0) {
          JreThrowClassCastException();
        }
        uint64_t v22 = sub_1001BC100((uint64_t)v12, v7, a2, a3);
        if (v22)
        {
          int v23 = (unint64_t *)(v22 + 24);
          unint64_t v18 = atomic_load(v23);
          if ((a4 & 1) == 0) {
            JreVolatileStrongAssign((atomic_ullong *)v23, a3);
          }
        }
        else
        {
          unint64_t v18 = 0;
        }
        objc_sync_exit(v12);
        int v20 = 2;
        if (!v18) {
          goto LABEL_31;
        }
        return v18;
      }
LABEL_11:
      objc_sync_exit(v12);
    }
    int v20 = 1;
    for (uint64_t i = v12; ; uint64_t i = (char *)*((void *)i + 4))
    {
      if (*((_DWORD *)i + 2) == v7)
      {
        uint64_t v16 = (void *)*((void *)i + 2);
        if (v16 == a2 || v16 && objc_msgSend(a2, "isEqual:")) {
          break;
        }
      }
      if (!*((void *)i + 4))
      {
        int v17 = new_JavaUtilConcurrentConcurrentHashMap_Node_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_(v7, a2, a3, 0);
        JreStrongAssignAndConsume((id *)i + 4, v17);
        unint64_t v18 = 0;
        goto LABEL_28;
      }
      ++v20;
    }
    int v19 = (atomic_ullong *)(i + 24);
    unint64_t v18 = atomic_load((unint64_t *)i + 3);
    if ((a4 & 1) == 0) {
      JreVolatileStrongAssign(v19, a3);
    }
LABEL_28:
    objc_sync_exit(v12);
  }
  while (!v20);
  if (v20 >= 8) {
    sub_1001BD010((_DWORD *)a1, v8, v10);
  }
  if (!v18) {
    goto LABEL_31;
  }
  return v18;
}

void sub_1001BA7DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BA950(uint64_t result, int a2)
{
  uint64_t v2 = result;
  if (a2 > 0x1FFFFFFF)
  {
    int v3 = 0x40000000;
  }
  else
  {
    uint64_t result = sub_1001B9948(a2 + (a2 >> 1) + 1);
    int v3 = result;
  }
  for (uint64_t i = atomic_load((unsigned int *)(v2 + 48)); (i & 0x80000000) == 0; uint64_t i = atomic_load((unsigned int *)(v2 + 48)))
  {
    uint64_t v5 = atomic_load((unint64_t *)(v2 + 24));
    if (v5 && (uint64_t result = *(unsigned int *)(v5 + 8), result))
    {
      if (v3 <= (int)i || (int)result > 0x3FFFFFFF) {
        return result;
      }
      unint64_t v6 = atomic_load((unint64_t *)(v2 + 24));
      if (v5 == v6)
      {
        int v7 = JavaUtilConcurrentConcurrentHashMap_resizeStampWithInt_(result);
        if (!qword_100560B40) {
          goto LABEL_28;
        }
        uint64_t result = (uint64_t)[(id)qword_100560B40 compareAndSwapIntWithId:v2 withLong:qword_100560B48 withInt:i withInt:((v7 << dword_100560B34) + 2)];
        if (result) {
          uint64_t result = sub_1001BC8FC(v2, v5, 0);
        }
      }
    }
    else
    {
      if ((int)i <= v3) {
        uint64_t v8 = v3;
      }
      else {
        uint64_t v8 = i;
      }
      if (!qword_100560B40) {
LABEL_28:
      }
        JreThrowNullPointerException();
      uint64_t result = (uint64_t)[(id)qword_100560B40 compareAndSwapIntWithId:v2 withLong:qword_100560B48 withInt:i withInt:0xFFFFFFFFLL];
      if (result)
      {
        unint64_t v9 = atomic_load((unint64_t *)(v2 + 24));
        if (v9 == v5)
        {
          if (qword_100560B98 != -1) {
            dispatch_once(&qword_100560B98, &stru_10041EBF8);
          }
          int v10 = +[IOSObjectArray arrayWithLength:v8 type:qword_100560B90];
          objc_opt_class();
          if (v10 && (objc_opt_isKindOfClass() & 1) == 0) {
            JreThrowClassCastException();
          }
          uint64_t result = (uint64_t)JreVolatileStrongAssign((atomic_ullong *)(v2 + 24), v10);
          LODWORD(i) = v8 - (v8 >> 2);
        }
        atomic_store(i, (unsigned int *)(v2 + 48));
      }
    }
  }
  return result;
}

void sub_1001BAB48()
{
}

void sub_1001BAB68(_Unwind_Exception *a1)
{
}

unint64_t sub_1001BAB8C(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  unsigned int v8 = [a2 hash];
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v9 = atomic_load((unint64_t *)(a1 + 24));
  if (!v9) {
    return 0;
  }
  int v28 = a4;
  int v29 = a3;
  uint64_t v10 = v8 & 0x7FFFFFFF ^ HIWORD(v8);
  while (1)
  {
    while (1)
    {
      int v11 = *(_DWORD *)(v9 + 8);
      if (!v11) {
        return 0;
      }
      int v12 = (v11 - 1) & v10;
      int v13 = (unint64_t *)JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(v9, v12);
      if (!v13) {
        return 0;
      }
      uint64_t v14 = v13;
      int v15 = *((_DWORD *)v13 + 2);
      if (v15 != -1879048193) {
        break;
      }
      unint64_t v9 = sub_1001BB070(a1, v9, (uint64_t)v13);
      if (!v9) {
        return 0;
      }
    }
    objc_sync_enter(v13);
    if (JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(v9, v12) == v14) {
      break;
    }
LABEL_14:
    objc_sync_exit(v14);
  }
  if ((v15 & 0x80000000) == 0)
  {
    uint64_t v16 = 0;
    int v17 = v14;
    unint64_t v18 = v29;
    while (1)
    {
      int v19 = v16;
      uint64_t v16 = v17;
      if (*((_DWORD *)v17 + 2) == v10)
      {
        int v20 = (void *)v17[2];
        if (v20 == a2 || v20 && objc_msgSend(a2, "isEqual:")) {
          break;
        }
      }
      int v17 = (unint64_t *)v16[4];
      if (!v17) {
        goto LABEL_37;
      }
    }
    unint64_t v24 = atomic_load(v16 + 3);
    if (!v28 || (void *)v24 == v28 || v24 && [v28 isEqual:v24])
    {
      if (v29)
      {
        JreVolatileStrongAssign((atomic_ullong *)v16 + 3, v29);
      }
      else if (v19)
      {
        JreStrongAssign((id *)v19 + 4, (void *)v16[4]);
      }
      else
      {
        JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_(v9, v12, v16[4]);
      }
      goto LABEL_45;
    }
    goto LABEL_37;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_14;
  }
  objc_opt_class();
  unint64_t v18 = a3;
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  uint64_t v21 = v14[5];
  if (!v21
    || (uint64_t v22 = sub_1001BE550(v21, v10, a2, 0), (v23 = v22) == 0)
    || (unint64_t v24 = atomic_load((unint64_t *)(v22 + 24)), v28)
    && (void *)v24 != v28
    && (!v24 || ![v28 isEqual:v24]))
  {
LABEL_37:
    objc_sync_exit(v14);
    return 0;
  }
  if (a3)
  {
    JreVolatileStrongAssign((atomic_ullong *)(v23 + 24), a3);
  }
  else if (sub_1001BED24((uint64_t)v14, v23))
  {
    uint64_t v26 = atomic_load(v14 + 6);
    int v27 = JavaUtilConcurrentConcurrentHashMap_untreeifyWithJavaUtilConcurrentConcurrentHashMap_Node_(v26);
    JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_(v9, v12, (uint64_t)v27);
  }
LABEL_45:
  objc_sync_exit(v14);
  if (v24 && !v18) {
    sub_1001BB1FC(a1, 0xFFFFFFFFFFFFFFFFLL, -1);
  }
  return v24;
}

void sub_1001BAE78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001BB054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_1001BB070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return atomic_load((unint64_t *)(a1 + 24));
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return atomic_load((unint64_t *)(a1 + 24));
  }
  objc_opt_class();
  if (!a3) {
LABEL_22:
  }
    JreThrowNullPointerException();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  unint64_t v6 = *(IOSObjectArray **)(a3 + 40);
  if (!v6) {
    return atomic_load((unint64_t *)(a1 + 24));
  }
  int v7 = JavaUtilConcurrentConcurrentHashMap_resizeStampWithInt_(*(_DWORD *)(a2 + 8));
  while (1)
  {
    unint64_t v8 = atomic_load((unint64_t *)(a1 + 32));
    if (v6 != (IOSObjectArray *)v8) {
      return (unint64_t)v6;
    }
    unint64_t v9 = atomic_load((unint64_t *)(a1 + 24));
    if (v9 != a2) {
      return (unint64_t)v6;
    }
    uint64_t v10 = atomic_load((unsigned int *)(a1 + 48));
    if ((v10 & 0x80000000) == 0) {
      return (unint64_t)v6;
    }
    if (v10 == v7 + 1 || v10 >> dword_100560B34 != v7) {
      return (unint64_t)v6;
    }
    if (v10 == dword_100560B30 + v7) {
      return (unint64_t)v6;
    }
    int v12 = atomic_load((unsigned int *)(a1 + 52));
    if (v12 < 1) {
      return (unint64_t)v6;
    }
    if (!qword_100560B40) {
      goto LABEL_22;
    }
    if ([(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B48 withInt:v10 withInt:(v10 + 1)])
    {
      sub_1001BC8FC(a1, a2, v6);
      return (unint64_t)v6;
    }
  }
}

int64_t sub_1001BB1FC(uint64_t a1, unint64_t a2, int a3)
{
  unint64_t v6 = atomic_load((unint64_t *)(a1 + 64));
  if (!v6)
  {
    unint64_t v7 = atomic_load((unint64_t *)(a1 + 40));
    if (!qword_100560B40) {
      goto LABEL_45;
    }
    int64_t v8 = v7 + a2;
    int64_t result = (int64_t)objc_msgSend((id)qword_100560B40, "compareAndSwapLongWithId:withLong:withLong:withLong:", a1, qword_100560B58);
    if (result)
    {
      if (a3 < 0) {
        return result;
      }
      goto LABEL_18;
    }
  }
  if (!JavaUtilConcurrentConcurrentHashMap_threadCounterHashCode_) {
    goto LABEL_45;
  }
  uint64_t v10 = (JavaUtilConcurrentConcurrentHashMap_CounterHashCode *)[(id)JavaUtilConcurrentConcurrentHashMap_threadCounterHashCode_ get];
  int v11 = v10;
  if (v6) {
    BOOL v12 = v10 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12) {
    goto LABEL_20;
  }
  uint64_t v13 = *(unsigned int *)(v6 + 8);
  if ((int)v13 - 1 < 0) {
    goto LABEL_20;
  }
  uint64_t v14 = v11->code_ & (v13 - 1);
  if ((int)v14 >= (int)v13) {
    IOSArray_throwOutOfBoundsWithMsg(v13, v14);
  }
  uint64_t v15 = *(void *)(v6 + 24 + 8 * v14);
  if (!v15)
  {
LABEL_20:
    char v18 = 1;
    goto LABEL_21;
  }
  unint64_t v16 = atomic_load((unint64_t *)(v15 + 64));
  if (!qword_100560B40) {
LABEL_45:
  }
    JreThrowNullPointerException();
  int64_t result = (int64_t)[(id)qword_100560B40 compareAndSwapLongWithId:v15 withLong:qword_100560B68 withLong:v16 withLong:v16 + a2];
  if (result)
  {
    if (a3 < 2) {
      return result;
    }
    int64_t result = -[JavaUtilConcurrentConcurrentHashMap sumCount]_0(a1);
    int64_t v8 = result;
LABEL_18:
    uint64_t v17 = atomic_load((unsigned int *)(a1 + 48));
    if (v8 < (int)v17) {
      return result;
    }
    while (1)
    {
      unint64_t v19 = atomic_load((unint64_t *)(a1 + 24));
      if (!v19) {
        return result;
      }
      int64_t result = *(unsigned int *)(v19 + 8);
      if ((int)result > 0x3FFFFFFF) {
        return result;
      }
      int64_t result = JavaUtilConcurrentConcurrentHashMap_resizeStampWithInt_(result);
      if ((v17 & 0x80000000) == 0) {
        break;
      }
      if (v17 == result + 1 || v17 >> dword_100560B34 != result) {
        return result;
      }
      if (v17 == dword_100560B30 + result) {
        return result;
      }
      unint64_t v24 = atomic_load((unint64_t *)(a1 + 32));
      if (!v24) {
        return result;
      }
      int v25 = atomic_load((unsigned int *)(a1 + 52));
      if (v25 < 1) {
        return result;
      }
      if (!qword_100560B40) {
        goto LABEL_45;
      }
      if ([(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B48 withInt:v17 withInt:(v17 + 1)])
      {
        uint64_t v20 = a1;
        uint64_t v21 = v19;
        uint64_t v22 = (IOSObjectArray *)v24;
LABEL_42:
        sub_1001BC8FC(v20, v21, v22);
      }
LABEL_43:
      int64_t result = -[JavaUtilConcurrentConcurrentHashMap sumCount]_0(a1);
      uint64_t v17 = atomic_load((unsigned int *)(a1 + 48));
      if (result < (int)v17) {
        return result;
      }
    }
    if (!qword_100560B40) {
      goto LABEL_45;
    }
    if (![(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B48 withInt:v17 withInt:((result << dword_100560B34) + 2)])goto LABEL_43; {
    uint64_t v20 = a1;
    }
    uint64_t v21 = v19;
    uint64_t v22 = 0;
    goto LABEL_42;
  }
  char v18 = 0;
LABEL_21:
  return (int64_t)sub_1001BD2C8(a1, a2, v11, v18);
}

void sub_1001BB4D8()
{
}

JavaUtilConcurrentConcurrentHashMap_KeySetView *new_JavaUtilConcurrentConcurrentHashMap_KeySetView_initWithJavaUtilConcurrentConcurrentHashMap_withId_(void *a1, void *a2)
{
  id v4 = [JavaUtilConcurrentConcurrentHashMap_KeySetView alloc];
  objc_storeWeak((id *)&v4->super.map_, a1);
  JreStrongAssign(&v4->value_, a2);
  return v4;
}

JavaUtilConcurrentConcurrentHashMap_Node *new_JavaUtilConcurrentConcurrentHashMap_Node_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_(int a1, void *a2, void *a3, void *a4)
{
  int64_t v8 = [JavaUtilConcurrentConcurrentHashMap_Node alloc];
  v8->hash__ = a1;
  JreStrongAssign(&v8->key_, a2);
  JreVolatileStrongAssign((atomic_ullong *)&v8->val_, a3);
  JreStrongAssign((id *)&v8->next_, a4);
  return v8;
}

uint64_t sub_1001BC100(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = 0;
  char v8 = 0;
  uint64_t v9 = *(void *)(a1 + 40);
  do
  {
    if (!v9)
    {
      uint64_t v22 = [JavaUtilConcurrentConcurrentHashMap_TreeNode alloc];
      JavaUtilConcurrentConcurrentHashMap_TreeNode_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v22, a2, a3, a4, 0, 0);
      uint64_t v23 = JreStrongAssignAndConsume((id *)(a1 + 40), v22);
      JreVolatileStrongAssign((atomic_ullong *)(a1 + 48), v23);
      return 0;
    }
    uint64_t v10 = v9;
    int v11 = *(_DWORD *)(v9 + 8);
    if (v11 > (int)a2) {
      goto LABEL_4;
    }
    if (v11 < (int)a2) {
      goto LABEL_20;
    }
    uint64_t v13 = *(void **)(v10 + 16);
    if (v13 == a3) {
      return v10;
    }
    if (v13)
    {
      if (!a3) {
        JreThrowNullPointerException();
      }
      if ([a3 isEqual:*(void *)(v10 + 16)]) {
        return v10;
      }
    }
    if (!v7 && (id v7 = JavaUtilConcurrentConcurrentHashMap_comparableClassForWithId_(a3)) == 0
      || (int v14 = JavaUtilConcurrentConcurrentHashMap_compareComparablesWithIOSClass_withId_withId_(v7, a3, v13)) == 0)
    {
      if ((v8 & 1) == 0)
      {
        uint64_t v15 = *(void *)(v10 + 48);
        if (v15)
        {
          uint64_t v16 = sub_1001BE550(v15, a2, a3, v7);
          if (v16) {
            return v16;
          }
        }
        uint64_t v17 = *(void *)(v10 + 56);
        if (v17)
        {
          uint64_t v16 = sub_1001BE550(v17, a2, a3, v7);
          if (v16) {
            return v16;
          }
        }
      }
      int v14 = JavaUtilConcurrentConcurrentHashMap_TreeBin_tieBreakOrderWithId_withId_(a3, v13);
      char v8 = 1;
    }
    if (v14 < 1) {
LABEL_4:
    }
      BOOL v12 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_TreeNode_left_;
    else {
LABEL_20:
    }
      BOOL v12 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_TreeNode_right_;
    uint64_t v9 = *(void *)(v10 + *v12);
  }
  while (v9);
  char v18 = (id *)atomic_load((unint64_t *)(a1 + 48));
  unint64_t v19 = [JavaUtilConcurrentConcurrentHashMap_TreeNode alloc];
  JavaUtilConcurrentConcurrentHashMap_TreeNode_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v19, a2, a3, a4, v18, (void *)v10);
  uint64_t v20 = v19;
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 48), v20);
  if (v18) {
    JreStrongAssign(v18 + 8, v20);
  }
  JreStrongAssign((id *)(v10 + *v12), v20);
  if (*(unsigned char *)(v10 + 72))
  {
    sub_1001BE9EC(a1);
    uint64_t v21 = JavaUtilConcurrentConcurrentHashMap_TreeBin_balanceInsertionWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(*(void ***)(a1 + 40), (uint64_t)v20);
    JreStrongAssign((id *)(a1 + 40), v21);
    uint64_t v10 = 0;
    atomic_store(0, (unsigned int *)(a1 + 64));
  }
  else
  {
    uint64_t v10 = 0;
    v20->red_ = 1;
  }
  return v10;
}

void sub_1001BC3A8(void *a1)
{
  objc_begin_catch(a1);
  atomic_store(0, (unsigned int *)(v1 + 64));
  objc_exception_rethrow();
}

void sub_1001BC3C4(_Unwind_Exception *a1)
{
}

JavaUtilConcurrentConcurrentHashMap_KeySetView *JavaUtilConcurrentConcurrentHashMap_newKeySetWithInt_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = [JavaUtilConcurrentConcurrentHashMap alloc];
  JavaUtilConcurrentConcurrentHashMap_initWithInt_((uint64_t)v2, a1);
  int v3 = v2;
  if ((atomic_load_explicit(JavaLangBoolean__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = new_JavaUtilConcurrentConcurrentHashMap_KeySetView_initWithJavaUtilConcurrentConcurrentHashMap_withId_(v3, (void *)JavaLangBoolean_TRUE__);
  return v4;
}

uint64_t JavaUtilConcurrentConcurrentHashMap_resizeStampWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (1 << (dword_10055C218 - 1)) | JavaLangInteger_numberOfLeadingZerosWithInt_(a1);
}

IOSObjectArray *sub_1001BC740(uint64_t a1)
{
  while (1)
  {
    uint64_t v2 = (IOSObjectArray *)atomic_load((unint64_t *)(a1 + 24));
    if (v2)
    {
      if (v2->super.size_) {
        break;
      }
    }
    uint64_t v3 = atomic_load((unsigned int *)(a1 + 48));
    if ((v3 & 0x80000000) != 0)
    {
      JavaLangThread_yield();
    }
    else
    {
      if (!qword_100560B40) {
        JreThrowNullPointerException();
      }
      if ([(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B48 withInt:v3 withInt:0xFFFFFFFFLL])
      {
        uint64_t v2 = (IOSObjectArray *)atomic_load((unint64_t *)(a1 + 24));
        if (!v2 || !v2->super.size_)
        {
          if (v3) {
            uint64_t v4 = v3;
          }
          else {
            uint64_t v4 = 16;
          }
          if (qword_100560B98 != -1) {
            dispatch_once(&qword_100560B98, &stru_10041EBF8);
          }
          uint64_t v2 = +[IOSObjectArray arrayWithLength:v4 type:qword_100560B90];
          objc_opt_class();
          if (v2 && (objc_opt_isKindOfClass() & 1) == 0) {
            JreThrowClassCastException();
          }
          JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), v2);
          LODWORD(v3) = v4 - (v4 >> 2);
        }
        atomic_store(v3, (unsigned int *)(a1 + 48));
        return v2;
      }
    }
  }
  return v2;
}

void sub_1001BC8A0()
{
}

void sub_1001BC8BC(_Unwind_Exception *a1)
{
}

uint64_t sub_1001BC8FC(uint64_t a1, uint64_t a2, IOSObjectArray *a3)
{
  if (!a2) {
LABEL_93:
  }
    JreThrowNullPointerException();
  uint64_t v3 = a3;
  unsigned int v5 = *(_DWORD *)(a2 + 8);
  signed int v6 = (v5 >> 3) / JavaUtilConcurrentConcurrentHashMap_NCPU_;
  if (JavaUtilConcurrentConcurrentHashMap_NCPU_ < 2) {
    signed int v6 = *(_DWORD *)(a2 + 8);
  }
  if (v6 <= 16) {
    int v7 = 16;
  }
  else {
    int v7 = v6;
  }
  if (!a3)
  {
    if (qword_100560B98 != -1) {
      dispatch_once(&qword_100560B98, &stru_10041EBF8);
    }
    uint64_t v3 = +[IOSObjectArray arrayWithLength:(int)(2 * v5) type:qword_100560B90];
    objc_opt_class();
    if (!v3)
    {
      JreVolatileStrongAssign((atomic_ullong *)(a1 + 32), 0);
      atomic_store(v5, (unsigned int *)(a1 + 52));
      JreThrowNullPointerException();
    }
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    JreVolatileStrongAssign((atomic_ullong *)(a1 + 32), v3);
    atomic_store(v5, (unsigned int *)(a1 + 52));
  }
  int size = v3->super.size_;
  char v8 = [JavaUtilConcurrentConcurrentHashMap_ForwardingNode alloc];
  int v53 = v3;
  JavaUtilConcurrentConcurrentHashMap_ForwardingNode_initWithJavaUtilConcurrentConcurrentHashMap_NodeArray_((uint64_t)v8, v3);
  uint64_t v58 = v8;
  char v9 = 0;
  int v10 = 0;
  int v11 = 0;
  LOBYTE(v12) = 1;
  int v61 = v7;
  while (1)
  {
    while (1)
    {
      if (v12)
      {
        --v10;
        uint64_t v13 = &qword_100560000;
        while (!((v10 >= v11) | v9 & 1))
        {
          int v14 = atomic_load((unsigned int *)(a1 + 52));
          int v15 = v14 - 1;
          if (v14 < 1)
          {
            int v10 = -1;
            goto LABEL_34;
          }
          if (!qword_100560B40) {
            goto LABEL_93;
          }
          if (v14 <= v61) {
            int v16 = 0;
          }
          else {
            int v16 = v14 - v61;
          }
          --v10;
          if (objc_msgSend((id)qword_100560B40, "compareAndSwapIntWithId:withLong:withInt:withInt:", a1, qword_100560B50))
          {
            int v10 = v15;
            int v11 = v16;
            break;
          }
        }
      }
      else
      {
        uint64_t v13 = &qword_100560000;
      }
      if (v10 < 0) {
        break;
      }
      if (v10 >= (int)v5) {
        break;
      }
      int v17 = v10 + v5;
      if ((int)(v10 + v5) >= size) {
        break;
      }
      char v18 = (JavaUtilConcurrentConcurrentHashMap_Node *)JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(a2, v10);
      if (v18)
      {
        unint64_t v19 = v18;
        int hash = v18->hash__;
        LOBYTE(v12) = 1;
        if (hash != -1879048193)
        {
          objc_sync_enter(v18);
          if (JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(a2, v10) != v19)goto LABEL_31; {
          if ((hash & 0x80000000) == 0)
          }
          {
            int v25 = hash & v5;
            next = v19->next_;
            unsigned int v52 = v19;
            if (next)
            {
              int v27 = v19;
              do
              {
                int v28 = next->hash__ & v5;
                if (v28 != v25) {
                  int v27 = next;
                }
                next = next->next_;
                int v25 = v28;
              }
              while (next);
              if (v28) {
                int v29 = 0;
              }
              else {
                int v29 = v27;
              }
              if (v28) {
                uint64_t v30 = v27;
              }
              else {
                uint64_t v30 = 0;
              }
              while (v19 != v27)
              {
                int v31 = v19->hash__;
                id key = v19->key_;
                uint64_t v33 = (void *)atomic_load((unint64_t *)&v19->val_);
                if ((v31 & v5) != 0) {
                  uint64_t v30 = new_JavaUtilConcurrentConcurrentHashMap_Node_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_(v31, key, v33, v30);
                }
                else {
                  int v29 = new_JavaUtilConcurrentConcurrentHashMap_Node_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_(v31, key, v33, v29);
                }
                unint64_t v19 = v19->next_;
              }
            }
            else
            {
              if (v25) {
                int v29 = 0;
              }
              else {
                int v29 = v19;
              }
              if (v25) {
                uint64_t v30 = v19;
              }
              else {
                uint64_t v30 = 0;
              }
            }
            JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_((uint64_t)v53, v10, (uint64_t)v29);
            JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_((uint64_t)v53, v10 + v5, (uint64_t)v30);
            JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_(a2, v10, (uint64_t)v58);
            goto LABEL_90;
          }
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
LABEL_31:
            LOBYTE(v12) = 0;
            goto LABEL_91;
          }
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            JreThrowClassCastException();
          }
          unsigned int v52 = v19;
          unint64_t v34 = atomic_load((unint64_t *)&v19[1].hash__);
          if (!v34)
          {
            int v60 = 0;
            int v55 = 0;
            p_isa = 0;
            uint64_t v46 = 0;
            uint64_t v45 = a2;
            goto LABEL_80;
          }
          int v55 = 0;
          unsigned int v56 = v5;
          int v60 = 0;
          uint64_t v62 = 0;
          p_isa = 0;
          uint64_t v59 = 0;
          int v54 = 0;
          do
          {
            int v35 = *(_DWORD *)(v34 + 8);
            id v36 = *(void **)(v34 + 16);
            int v37 = (void *)atomic_load((unint64_t *)(v34 + 24));
            id v38 = [JavaUtilConcurrentConcurrentHashMap_TreeNode alloc];
            JavaUtilConcurrentConcurrentHashMap_TreeNode_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v38, v35, v36, v37, 0, 0);
            uint64_t v39 = v38;
            p_prev = (id *)&v39->prev_;
            if ((v35 & v56) != 0)
            {
              id v41 = JreStrongAssign(p_prev, v62);
              id v42 = v39;
              if (v41)
              {
                if (!v62) {
                  goto LABEL_94;
                }
                JreStrongAssign(v62 + 4, v39);
                id v42 = (JavaUtilConcurrentConcurrentHashMap_TreeNode *)p_isa;
              }
              ++v60;
              p_isa = (void **)&v42->super.super.isa;
              uint64_t v62 = (id *)&v39->super.super.isa;
            }
            else
            {
              id v43 = JreStrongAssign(p_prev, v59);
              long long v44 = v39;
              if (v43)
              {
                if (!v59) {
LABEL_94:
                }
                  JreThrowNullPointerException();
                JreStrongAssign(v59 + 4, v39);
                long long v44 = (JavaUtilConcurrentConcurrentHashMap_TreeNode *)v54;
              }
              ++v55;
              int v54 = (void **)&v44->super.super.isa;
              uint64_t v59 = (id *)&v39->super.super.isa;
            }
            unint64_t v34 = *(void *)(v34 + 32);
          }
          while (v34);
          uint64_t v45 = a2;
          if (v55 < 7)
          {
            unsigned int v5 = v56;
            uint64_t v46 = (uint64_t)v54;
LABEL_80:
            long long v47 = JavaUtilConcurrentConcurrentHashMap_untreeifyWithJavaUtilConcurrentConcurrentHashMap_Node_(v46);
            goto LABEL_83;
          }
          unsigned int v5 = v56;
          if (!v60)
          {
            long long v47 = v52;
LABEL_87:
            BOOL v51 = JavaUtilConcurrentConcurrentHashMap_untreeifyWithJavaUtilConcurrentConcurrentHashMap_Node_((uint64_t)p_isa);
LABEL_88:
            uint64_t v49 = (uint64_t)v51;
            goto LABEL_89;
          }
          uint64_t v48 = [JavaUtilConcurrentConcurrentHashMap_TreeBin alloc];
          JavaUtilConcurrentConcurrentHashMap_TreeBin_initWithJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v48, v54);
          long long v47 = v48;
          int v55 = 1;
LABEL_83:
          uint64_t v49 = (uint64_t)v52;
          if (v60 <= 6) {
            goto LABEL_87;
          }
          if (v55)
          {
            uint64_t v50 = [JavaUtilConcurrentConcurrentHashMap_TreeBin alloc];
            JavaUtilConcurrentConcurrentHashMap_TreeBin_initWithJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v50, p_isa);
            BOOL v51 = v50;
            goto LABEL_88;
          }
LABEL_89:
          JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_((uint64_t)v53, v10, (uint64_t)v47);
          JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_((uint64_t)v53, v17, v49);
          JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_(v45, v10, (uint64_t)v58);
LABEL_90:
          LOBYTE(v12) = 1;
          unint64_t v19 = v52;
LABEL_91:
          objc_sync_exit(v19);
        }
      }
      else
      {
        LOBYTE(v12) = JavaUtilConcurrentConcurrentHashMap_casTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_Node_(a2, v10, 0, (uint64_t)v58);
      }
    }
LABEL_34:
    if (v9) {
      break;
    }
    uint64_t v21 = v13;
    uint64_t v22 = atomic_load((unsigned int *)(a1 + 48));
    uint64_t v23 = (void *)v21[360];
    if (!v23) {
      goto LABEL_93;
    }
    unsigned int v12 = [v23 compareAndSwapIntWithId:a1 withLong:qword_100560B48 withInt:v22 withInt:(v22 - 1)];
    char v9 = v12;
    if (v12)
    {
      uint64_t result = JavaUtilConcurrentConcurrentHashMap_resizeStampWithInt_(v5);
      char v9 = v12;
      int v10 = v5;
      if (v22 - 2 != result << dword_100560B34) {
        return result;
      }
    }
  }
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 32), 0);
  uint64_t result = (uint64_t)JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), v53);
  atomic_store(2 * v5 - (v5 >> 1), (unsigned int *)(a1 + 48));
  return result;
}

void sub_1001BCF70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  objc_sync_exit(v32);
  _Unwind_Resume(a1);
}

_DWORD *sub_1001BD010(_DWORD *result, uint64_t a2, int a3)
{
  if (a2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    if (v4 > 63)
    {
      uint64_t result = JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(a2, a3);
      if (result)
      {
        signed int v6 = result;
        if ((result[2] & 0x80000000) == 0)
        {
          objc_sync_enter(result);
          if (JavaUtilConcurrentConcurrentHashMap_tabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_(a2, a3) == v6)
          {
            int v7 = 0;
            char v8 = 0;
            int v16 = v6;
            do
            {
              int v9 = v6[2];
              int v10 = (void *)*((void *)v6 + 2);
              int v11 = (void *)atomic_load((unint64_t *)v6 + 3);
              unsigned int v12 = [JavaUtilConcurrentConcurrentHashMap_TreeNode alloc];
              JavaUtilConcurrentConcurrentHashMap_TreeNode_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v12, v9, v10, v11, 0, 0);
              uint64_t v13 = v12;
              int v14 = v13;
              if (JreStrongAssign(v13 + 8, v7))
              {
                if (!v7) {
                  JreThrowNullPointerException();
                }
                JreStrongAssign(v7 + 4, v13);
                int v14 = v8;
              }
              signed int v6 = (_DWORD *)*((void *)v6 + 4);
              int v7 = v13;
              char v8 = v14;
            }
            while (v6);
            signed int v6 = v16;
            int v15 = [JavaUtilConcurrentConcurrentHashMap_TreeBin alloc];
            JavaUtilConcurrentConcurrentHashMap_TreeBin_initWithJavaUtilConcurrentConcurrentHashMap_TreeNode_((uint64_t)v15, v14);
            JavaUtilConcurrentConcurrentHashMap_setTabAtWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withJavaUtilConcurrentConcurrentHashMap_Node_(a2, a3, (uint64_t)v15);
          }
          return (_DWORD *)objc_sync_exit(v6);
        }
      }
    }
    else
    {
      return (_DWORD *)sub_1001BA950((uint64_t)result, 2 * v4);
    }
  }
  return result;
}

void sub_1001BD1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

JavaUtilConcurrentConcurrentHashMap_Node *JavaUtilConcurrentConcurrentHashMap_untreeifyWithJavaUtilConcurrentConcurrentHashMap_Node_(uint64_t a1)
{
  uint64_t v1 = a1;
  if (atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
    return 0;
  }
  objc_opt_class();
  if (!v1) {
    return 0;
  }
LABEL_3:
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  do
  {
    int v4 = *(_DWORD *)(v1 + 8);
    unsigned int v5 = *(void **)(v1 + 16);
    signed int v6 = (void *)atomic_load((unint64_t *)(v1 + 24));
    uint64_t result = new_JavaUtilConcurrentConcurrentHashMap_Node_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_(v4, v5, v6, 0);
    char v8 = result;
    if (v2)
    {
      JreStrongAssign((id *)&v2->next_, result);
      uint64_t result = v3;
    }
    uint64_t v1 = *(void *)(v1 + 32);
    uint64_t v2 = v8;
    uint64_t v3 = result;
  }
  while (v1);
  return result;
}

id sub_1001BD2C8(uint64_t a1, unint64_t a2, JavaUtilConcurrentConcurrentHashMap_CounterHashCode *a3, char a4)
{
  if (a3)
  {
    uint64_t v40 = a3;
    coduint64_t e = a3->code_;
  }
  else
  {
    int v7 = [JavaUtilConcurrentConcurrentHashMap_CounterHashCode alloc];
    if (!JavaUtilConcurrentConcurrentHashMap_counterHashCodeGenerator_) {
      goto LABEL_63;
    }
    unsigned int v8 = [(id)JavaUtilConcurrentConcurrentHashMap_counterHashCodeGenerator_ addAndGetWithInt:1640531527];
    coduint64_t e = v8 <= 1 ? 1 : v8;
    v7->code_ = code;
    if (!JavaUtilConcurrentConcurrentHashMap_threadCounterHashCode_) {
      goto LABEL_63;
    }
    uint64_t v40 = v7;
    [(id)JavaUtilConcurrentConcurrentHashMap_threadCounterHashCode_ setWithId:v7];
  }
  int v9 = 0;
  while (1)
  {
    while (1)
    {
      unint64_t v10 = atomic_load((unint64_t *)(a1 + 64));
      if (!v10) {
        break;
      }
      uint64_t v11 = *(unsigned int *)(v10 + 8);
      if ((int)v11 < 1) {
        break;
      }
      uint64_t v12 = *(void *)(v10 + 24 + 8 * ((v11 - 1) & code));
      if (v12)
      {
        if (a4)
        {
          unint64_t v28 = atomic_load((unint64_t *)(v12 + 64));
          if (!qword_100560B40) {
            goto LABEL_63;
          }
          id result = [(id)qword_100560B40 compareAndSwapLongWithId:v12 withLong:qword_100560B68 withLong:v28 withLong:v28 + a2];
          if (result) {
            goto LABEL_61;
          }
          unint64_t v29 = atomic_load((unint64_t *)(a1 + 64));
          BOOL v30 = v29 == v10 && (int)v11 < JavaUtilConcurrentConcurrentHashMap_NCPU_;
          int v31 = !v30;
          if (!v30 || ((v9 ^ 1) & 1) != 0)
          {
            int v9 = v31 ^ 1;
            goto LABEL_56;
          }
          unsigned int v32 = atomic_load((unsigned int *)(a1 + 56));
          if (v32
            || ![(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B60 withInt:0 withInt:1])
          {
            goto LABEL_56;
          }
          unint64_t v33 = atomic_load((unint64_t *)(a1 + 64));
          if (v33 == v10)
          {
            if (qword_100560BD8 != -1) {
              dispatch_once(&qword_100560BD8, &stru_100420F98);
            }
            unint64_t v34 = +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", 2 * (int)v11, qword_100560BD0, v40);
            for (uint64_t i = 0; i != v11; ++i)
            {
              uint64_t v36 = *(int *)(v10 + 8);
              if (i >= v36) {
                IOSArray_throwOutOfBoundsWithMsg(v36, i);
              }
              IOSObjectArray_Set((uint64_t)v34, i, *(void **)(v10 + 24 + 8 * i));
            }
            JreVolatileStrongAssign((atomic_ullong *)(a1 + 64), v34);
          }
          int v9 = 0;
          atomic_store(0, (unsigned int *)(a1 + 56));
          a4 = 1;
        }
        else
        {
LABEL_56:
          a4 = 1;
LABEL_31:
          unsigned int v27 = code ^ (code << 13) ^ ((code ^ (code << 13)) >> 17);
          coduint64_t e = v27 ^ (32 * v27);
        }
      }
      else
      {
        if (atomic_load((unsigned int *)(a1 + 56))) {
          goto LABEL_30;
        }
        int v14 = [JavaUtilConcurrentConcurrentHashMap_CounterCell alloc];
        atomic_store(a2, (unint64_t *)&v14->value_);
        int v15 = v14;
        if (atomic_load((unsigned int *)(a1 + 56))) {
          goto LABEL_30;
        }
        int v17 = v15;
        if (!qword_100560B40) {
          goto LABEL_63;
        }
        if (![(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B60 withInt:0 withInt:1])
        {
LABEL_30:
          int v9 = 0;
          goto LABEL_31;
        }
        uint64_t v18 = atomic_load((unint64_t *)(a1 + 64));
        if (v18)
        {
          int v19 = *(_DWORD *)(v18 + 8);
          BOOL v20 = __OFSUB__(v19, 1);
          int v21 = v19 - 1;
          if (v21 < 0 == v20)
          {
            uint64_t v22 = v21 & code;
            if (!*(void *)(v18 + 24 + 8 * v22))
            {
              id result = IOSObjectArray_Set(v18, v22, v17);
              goto LABEL_60;
            }
          }
        }
LABEL_26:
        atomic_store(0, (unsigned int *)(a1 + 56));
      }
    }
    if (!atomic_load((unsigned int *)(a1 + 56)))
    {
      unint64_t v24 = atomic_load((unint64_t *)(a1 + 64));
      if (v24 == v10)
      {
        if (!qword_100560B40) {
          goto LABEL_63;
        }
        if ([(id)qword_100560B40 compareAndSwapIntWithId:a1 withLong:qword_100560B60 withInt:0 withInt:1])break; {
      }
        }
    }
    unint64_t v26 = atomic_load((unint64_t *)(a1 + 40));
    if (!qword_100560B40) {
      goto LABEL_63;
    }
    id result = [(id)qword_100560B40 compareAndSwapLongWithId:a1 withLong:qword_100560B58 withLong:v26 withLong:v26 + a2];
    if (result) {
      goto LABEL_61;
    }
  }
  unint64_t v25 = atomic_load((unint64_t *)(a1 + 64));
  if (v25 != v10) {
    goto LABEL_26;
  }
  if (qword_100560BD8 != -1) {
    dispatch_once(&qword_100560BD8, &stru_100420F98);
  }
  id v38 = +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", 2, qword_100560BD0, v40);
  uint64_t v39 = [JavaUtilConcurrentConcurrentHashMap_CounterCell alloc];
  atomic_store(a2, (unint64_t *)&v39->value_);
  IOSObjectArray_SetAndConsume((uint64_t)v38, code & 1, v39);
  id result = JreVolatileStrongAssign((atomic_ullong *)(a1 + 64), v38);
LABEL_60:
  atomic_store(0, (unsigned int *)(a1 + 56));
LABEL_61:
  if (!v40) {
LABEL_63:
  }
    JreThrowNullPointerException();
  v40->code_ = code;
  return result;
}

void sub_1001BD750(void *a1)
{
  objc_begin_catch(a1);
  atomic_store(0, (unsigned int *)(v1 + *(int *)(v2 + 36)));
  objc_exception_rethrow();
}

void sub_1001BD764()
{
}

void sub_1001BD7B4()
{
}

void sub_1001BDCA8(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    uint64_t v3 = new_JavaLangError_initWithJavaLangThrowable_(v2);
    objc_exception_throw(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001BDCF0()
{
}

JavaUtilConcurrentConcurrentHashMap *new_JavaUtilConcurrentConcurrentHashMap_init()
{
  uint64_t v0 = [JavaUtilConcurrentConcurrentHashMap alloc];
  JavaUtilAbstractMap_init(v0, v1);
  return v0;
}

JavaUtilConcurrentConcurrentHashMap_KeySetView *JavaUtilConcurrentConcurrentHashMap_newKeySet()
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = [JavaUtilConcurrentConcurrentHashMap alloc];
  JavaUtilAbstractMap_init(v0, v1);
  id v2 = v0;
  if ((atomic_load_explicit(JavaLangBoolean__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v3 = new_JavaUtilConcurrentConcurrentHashMap_KeySetView_initWithJavaUtilConcurrentConcurrentHashMap_withId_(v2, (void *)JavaLangBoolean_TRUE__);
  return v3;
}

uint64_t JavaUtilConcurrentConcurrentHashMap_class_()
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560B88 != -1) {
    dispatch_once(&qword_100560B88, &stru_10041E908);
  }
  return qword_100560B80;
}

void sub_1001BDE40(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560B80 = IOSClass_fromClass(v1);
}

void sub_1001BE17C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560B90 = IOSClass_fromClass(v1);
}

void sub_1001BE1F4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560BA0 = IOSClass_fromClass(v1);
}

id JavaUtilConcurrentConcurrentHashMap_ForwardingNode_initWithJavaUtilConcurrentConcurrentHashMap_NodeArray_(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 8) = -1879048193;
  JreStrongAssign((id *)(a1 + 16), 0);
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), 0);
  JreStrongAssign((id *)(a1 + 32), 0);
  return JreStrongAssign((id *)(a1 + 40), a2);
}

id JavaUtilConcurrentConcurrentHashMap_ReservationNode_init(uint64_t a1)
{
  *(_DWORD *)(a1 + 8) = -2147483647;
  JreStrongAssign((id *)(a1 + 16), 0);
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), 0);
  return JreStrongAssign((id *)(a1 + 32), 0);
}

id JavaUtilConcurrentConcurrentHashMap_TreeNode_initWithInt_withId_withId_withJavaUtilConcurrentConcurrentHashMap_Node_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(uint64_t a1, int a2, void *a3, void *a4, void *a5, void *a6)
{
  *(_DWORD *)(a1 + 8) = a2;
  JreStrongAssign((id *)(a1 + 16), a3);
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), a4);
  JreStrongAssign((id *)(a1 + 32), a5);
  return JreStrongAssign((id *)(a1 + 40), a6);
}

uint64_t sub_1001BE550(uint64_t a1, uint64_t a2, void *a3, id a4)
{
  if (!a3) {
    return 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)(a1 + 48);
    int v9 = *(_DWORD *)(a1 + 8);
    if (v9 <= (int)a2)
    {
      uint64_t v10 = *(void *)(a1 + 56);
      if (v9 < (int)a2) {
        goto LABEL_15;
      }
      uint64_t v11 = *(void **)(a1 + 16);
      if (v11 == a3 || v11 && ([a3 isEqual:*(void *)(a1 + 16)] & 1) != 0) {
        return a1;
      }
      if (!v8)
      {
LABEL_15:
        uint64_t v8 = v10;
        goto LABEL_16;
      }
      if (v10)
      {
        if (a4 || (a4 = JavaUtilConcurrentConcurrentHashMap_comparableClassForWithId_(a3)) != 0)
        {
          int v12 = JavaUtilConcurrentConcurrentHashMap_compareComparablesWithIOSClass_withId_withId_(a4, a3, v11);
          if (v12)
          {
            if (v12 >= 0) {
              uint64_t v8 = v10;
            }
            goto LABEL_16;
          }
        }
        uint64_t v13 = sub_1001BE550(v10, a2, a3, a4);
        if (v13) {
          return v13;
        }
      }
    }
LABEL_16:
    a1 = v8;
    if (!v8) {
      return a1;
    }
  }
}

uint64_t JavaUtilConcurrentConcurrentHashMap_TreeBin_tieBreakOrderWithId_withId_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_6:
    int v6 = JavaLangSystem_identityHashCodeWithId_((uint64_t)a1);
    if (v6 > (int)JavaLangSystem_identityHashCodeWithId_((uint64_t)a2)) {
      return 1;
    }
    else {
      return 0xFFFFFFFFLL;
    }
  }
  if (!a1) {
    goto LABEL_6;
  }
LABEL_3:
  if (!a2) {
    goto LABEL_6;
  }
  id v4 = objc_msgSend(objc_msgSend(a1, "getClass"), "getName");
  if (!v4) {
    JreThrowNullPointerException();
  }
  uint64_t result = (uint64_t)objc_msgSend(v4, "compareToWithId:", objc_msgSend(objc_msgSend(a2, "getClass"), "getName"));
  if (!result) {
    goto LABEL_6;
  }
  return result;
}

id JavaUtilConcurrentConcurrentHashMap_TreeBin_initWithJavaUtilConcurrentConcurrentHashMap_TreeNode_(uint64_t a1, void **a2)
{
  *(_DWORD *)(a1 + 8) = 0x80000000;
  JreStrongAssign((id *)(a1 + 16), 0);
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), 0);
  JreStrongAssign((id *)(a1 + 32), 0);
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 48), a2);
  id v4 = 0;
  if (a2)
  {
    do
    {
      unsigned int v5 = (void **)a2[4];
      objc_opt_class();
      if (v5 && (objc_opt_isKindOfClass() & 1) == 0) {
        JreThrowClassCastException();
      }
      id v6 = JreStrongAssign(a2 + 7, 0);
      JreStrongAssign(a2 + 6, v6);
      if (v4)
      {
        id v7 = 0;
        uint64_t v8 = a2[2];
        int v9 = *((_DWORD *)a2 + 2);
        uint64_t v10 = v4;
        do
        {
          uint64_t v11 = v10;
          int v12 = *((_DWORD *)v10 + 2);
          if (v12 <= v9)
          {
            if (v12 >= v9)
            {
              int v14 = v11[2];
              if (!v7 && (id v7 = JavaUtilConcurrentConcurrentHashMap_comparableClassForWithId_(v8)) == 0
                || (int v13 = JavaUtilConcurrentConcurrentHashMap_compareComparablesWithIOSClass_withId_withId_(v7, v8, v14)) == 0)
              {
                int v13 = JavaUtilConcurrentConcurrentHashMap_TreeBin_tieBreakOrderWithId_withId_(v8, v14);
              }
            }
            else
            {
              int v13 = 1;
            }
          }
          else
          {
            int v13 = -1;
          }
          if (v13 >= 1) {
            int v15 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_TreeNode_right_;
          }
          else {
            int v15 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_TreeNode_left_;
          }
          uint64_t v10 = *(void ***)((char *)v11 + *v15);
        }
        while (v10);
        JreStrongAssign(a2 + 5, v11);
        JreStrongAssign((void **)((char *)v11 + *v15), a2);
        a2 = JavaUtilConcurrentConcurrentHashMap_TreeBin_balanceInsertionWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(v4, (uint64_t)a2);
      }
      else
      {
        JreStrongAssign(a2 + 5, 0);
        *((unsigned char *)a2 + 72) = 0;
      }
      id v4 = a2;
      a2 = v5;
    }
    while (v5);
  }
  return JreStrongAssign((id *)(a1 + 40), v4);
}

id sub_1001BE9EC(uint64_t a1)
{
  if (!qword_100560BB0) {
    JreThrowNullPointerException();
  }
  id result = [(id)qword_100560BB0 compareAndSwapIntWithId:a1 withLong:qword_100560BB8 withInt:0 withInt:1];
  if ((result & 1) == 0)
  {
    return sub_1001BEA70(a1);
  }
  return result;
}

id sub_1001BEA70(uint64_t a1)
{
  char v2 = 0;
LABEL_2:
  char v3 = v2;
  do
  {
    while (1)
    {
      uint64_t v4 = atomic_load((unsigned int *)(a1 + 64));
      if ((v4 & 0xFFFFFFFD) == 0) {
        break;
      }
      if ((v4 & 2) != 0)
      {
        char v2 = 0;
        if (v3)
        {
          JavaUtilConcurrentLocksLockSupport_parkWithId_(a1);
          char v2 = 1;
        }
        goto LABEL_2;
      }
      if (!qword_100560BB0) {
        goto LABEL_18;
      }
      if ([(id)qword_100560BB0 compareAndSwapIntWithId:a1 withLong:qword_100560BB8 withInt:v4 withInt:v4 | 2])
      {
        id v6 = JavaLangThread_currentThread();
        JreVolatileStrongAssign((atomic_ullong *)(a1 + 56), v6);
        char v2 = 1;
        goto LABEL_2;
      }
    }
    if (!qword_100560BB0) {
LABEL_18:
    }
      JreThrowNullPointerException();
    id result = objc_msgSend((id)qword_100560BB0, "compareAndSwapIntWithId:withLong:withInt:withInt:", a1, qword_100560BB8);
  }
  while (!result);
  if (v3)
  {
    return JreVolatileStrongAssign((atomic_ullong *)(a1 + 56), 0);
  }
  return result;
}

void sub_1001BECD8(_Unwind_Exception *exception_object)
{
  if (v1) {
    objc_end_catch();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001BED24(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v4 = *(id **)(a2 + 32);
  objc_opt_class();
  if (v4 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  unsigned int v5 = *(id **)(a2 + 64);
  if (v5)
  {
    JreStrongAssign(v5 + 4, v4);
    if (!v4) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 48), v4);
  if (v4) {
LABEL_6:
  }
    JreStrongAssign(v4 + 8, v5);
LABEL_7:
  unint64_t v6 = atomic_load((unint64_t *)(a1 + 48));
  id v7 = (id *)(a1 + 40);
  if (!v6)
  {
    JreStrongAssign(v7, 0);
    return 1;
  }
  uint64_t v8 = (void **)*v7;
  if (!*v7) {
    return 1;
  }
  if (!v8[7]) {
    return 1;
  }
  int v9 = v8[6];
  if (!v9 || !v9[6]) {
    return 1;
  }
  sub_1001BE9EC(a1);
  uint64_t v10 = *(id **)(a2 + 48);
  uint64_t v11 = *(id **)(a2 + 56);
  if (!v10 || !v11)
  {
    if (v11) {
      BOOL v20 = *(id **)(a2 + 56);
    }
    else {
      BOOL v20 = (id *)a2;
    }
    if (v10) {
      int v21 = *(id **)(a2 + 48);
    }
    else {
      int v21 = v20;
    }
    goto LABEL_49;
  }
  uint64_t v12 = *(void *)(a2 + 56);
  do
  {
    uint64_t v13 = v12;
    uint64_t v12 = *(void *)(v12 + 48);
  }
  while (v12);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 72);
  *(unsigned char *)(v13 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a2 + 72) = v14;
  int v15 = *(id **)(v13 + 56);
  int v16 = (id *)(a2 + 40);
  BOOL v30 = *(id **)(a2 + 40);
  if ((id *)v13 == v11)
  {
    JreStrongAssign(v16, v11);
    JreStrongAssign(v11 + 7, (void *)a2);
  }
  else
  {
    int v17 = *(id **)(v13 + 40);
    if (JreStrongAssign(v16, v17))
    {
      if (!v17) {
        JreThrowNullPointerException();
      }
      uint64_t v18 = v17 + 6;
      if ((id)v13 != v17[6]) {
        uint64_t v18 = v17 + 7;
      }
      JreStrongAssign(v18, (void *)a2);
    }
    if (JreStrongAssign((id *)(v13 + 56), v11)) {
      JreStrongAssign(v11 + 5, (void *)v13);
    }
  }
  JreStrongAssign((id *)(a2 + 48), 0);
  if (JreStrongAssign((id *)(a2 + 56), v15))
  {
    if (!v15) {
      goto LABEL_67;
    }
    JreStrongAssign(v15 + 5, (void *)a2);
  }
  if (JreStrongAssign((id *)(v13 + 48), v10)) {
    JreStrongAssign(v10 + 5, (void *)v13);
  }
  if (JreStrongAssign((id *)(v13 + 40), v30))
  {
    if (v30)
    {
      uint64_t v22 = v30 + 6;
      if (v30[6] != (id)a2) {
        uint64_t v22 = v30 + 7;
      }
      JreStrongAssign(v22, (void *)v13);
      goto LABEL_46;
    }
LABEL_67:
    JreThrowNullPointerException();
  }
  uint64_t v8 = (void **)v13;
LABEL_46:
  if (v15) {
    int v21 = v15;
  }
  else {
    int v21 = (id *)a2;
  }
LABEL_49:
  if (v21 == (id *)a2)
  {
    unint64_t v24 = v8;
  }
  else
  {
    uint64_t v23 = (char *)JreStrongAssign(v21 + 5, *(void **)(a2 + 40));
    unint64_t v24 = v21;
    if (v23)
    {
      unint64_t v25 = (id *)(v23 + 48);
      if (*((void *)v23 + 6) != a2) {
        unint64_t v25 = (id *)(v23 + 56);
      }
      JreStrongAssign(v25, v21);
      unint64_t v24 = v8;
    }
    id v26 = JreStrongAssign((id *)(a2 + 40), 0);
    id v27 = JreStrongAssign((id *)(a2 + 56), v26);
    JreStrongAssign((id *)(a2 + 48), v27);
  }
  if (!*(unsigned char *)(a2 + 72)) {
    unint64_t v24 = JavaUtilConcurrentConcurrentHashMap_TreeBin_balanceDeletionWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(v24, (uint64_t)v21);
  }
  JreStrongAssign((id *)(a1 + 40), v24);
  if (v21 == (id *)a2)
  {
    uint64_t v28 = *(void *)(a2 + 40);
    if (v28)
    {
      unint64_t v29 = (id *)(v28 + 48);
      if (*(void *)(v28 + 48) == a2 || (unint64_t v29 = (id *)(v28 + 56), *(void *)(v28 + 56) == a2)) {
        JreStrongAssign(v29, 0);
      }
      JreStrongAssign((id *)(a2 + 40), 0);
    }
  }
  uint64_t result = 0;
  atomic_store(0, (unsigned int *)(a1 + 64));
  return result;
}

void sub_1001BF148(void *a1)
{
  objc_begin_catch(a1);
  atomic_store(0, (unsigned int *)(v1 + 64));
  objc_exception_rethrow();
}

void sub_1001BF174(_Unwind_Exception *a1)
{
}

void **JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateLeftWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(void **a1, void **a2)
{
  if (atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire))
  {
    if (!a2) {
      return a1;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      return a1;
    }
  }
  uint64_t v4 = (void **)a2[7];
  if (v4)
  {
    unsigned int v5 = (id *)JreStrongAssign(a2 + 7, v4[6]);
    if (v5) {
      JreStrongAssign(v5 + 5, a2);
    }
    unint64_t v6 = (char *)JreStrongAssign(v4 + 5, a2[5]);
    if (v6)
    {
      if (*((void ***)v6 + 6) == a2) {
        id v7 = (id *)(v6 + 48);
      }
      else {
        id v7 = (id *)(v6 + 56);
      }
      JreStrongAssign(v7, v4);
    }
    else
    {
      *((unsigned char *)v4 + 72) = 0;
      a1 = v4;
    }
    JreStrongAssign(v4 + 6, a2);
    JreStrongAssign(a2 + 5, v4);
  }
  return a1;
}

void **JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateRightWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(void **a1, void **a2)
{
  if (atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire))
  {
    if (!a2) {
      return a1;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      return a1;
    }
  }
  uint64_t v4 = (void **)a2[6];
  if (v4)
  {
    unsigned int v5 = (id *)JreStrongAssign(a2 + 6, v4[7]);
    if (v5) {
      JreStrongAssign(v5 + 5, a2);
    }
    unint64_t v6 = (char *)JreStrongAssign(v4 + 5, a2[5]);
    if (v6)
    {
      if (*((void ***)v6 + 7) == a2) {
        id v7 = (id *)(v6 + 56);
      }
      else {
        id v7 = (id *)(v6 + 48);
      }
      JreStrongAssign(v7, v4);
    }
    else
    {
      *((unsigned char *)v4 + 72) = 0;
      a1 = v4;
    }
    JreStrongAssign(v4 + 7, a2);
    JreStrongAssign(a2 + 5, v4);
  }
  return a1;
}

void **JavaUtilConcurrentConcurrentHashMap_TreeBin_balanceInsertionWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(void **a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire))
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_30:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!v2) {
    goto LABEL_30;
  }
LABEL_3:
  *(unsigned char *)(v2 + 72) = 1;
  for (uint64_t i = *(void *)(v2 + 40); i; uint64_t i = *(void *)(i + 40))
  {
    if (!*(unsigned char *)(i + 72)) {
      return a1;
    }
    uint64_t v5 = *(void *)(i + 40);
    if (!v5) {
      return a1;
    }
    uint64_t v6 = *(void *)(v5 + 48);
    if (i == v6)
    {
      uint64_t v6 = *(void *)(v5 + 56);
      if (!v6 || !*(unsigned char *)(v6 + 72))
      {
        if (v2 == *(void *)(i + 56))
        {
          a1 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateLeftWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)i);
          uint64_t v9 = *(void *)(i + 40);
          if (!v9) {
            goto LABEL_19;
          }
          uint64_t v5 = *(void *)(v9 + 40);
          *(unsigned char *)(v9 + 72) = 0;
          if (!v5) {
            goto LABEL_19;
          }
        }
        else
        {
          *(unsigned char *)(i + 72) = 0;
          uint64_t i = v2;
        }
        *(unsigned char *)(v5 + 72) = 1;
        id v7 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateRightWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v5);
LABEL_18:
        a1 = v7;
        goto LABEL_19;
      }
    }
    else if (!v6 || !*(unsigned char *)(v6 + 72))
    {
      if (v2 == *(void *)(i + 48))
      {
        a1 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateRightWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)i);
        uint64_t v8 = *(void *)(i + 40);
        if (!v8) {
          goto LABEL_19;
        }
        uint64_t v5 = *(void *)(v8 + 40);
        *(unsigned char *)(v8 + 72) = 0;
        if (!v5) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)(i + 72) = 0;
        uint64_t i = v2;
      }
      *(unsigned char *)(v5 + 72) = 1;
      id v7 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateLeftWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v5);
      goto LABEL_18;
    }
    *(unsigned char *)(v6 + 72) = 0;
    *(unsigned char *)(i + 72) = 0;
    *(unsigned char *)(v5 + 72) = 1;
    uint64_t i = v5;
LABEL_19:
    uint64_t v2 = i;
  }
  *(unsigned char *)(v2 + 72) = 0;
  return (void **)v2;
}

void **JavaUtilConcurrentConcurrentHashMap_TreeBin_balanceDeletionWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(void **a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire))
  {
    if (!a2) {
      return a1;
    }
  }
  else
  {
    objc_opt_class();
    if (!v2) {
      return a1;
    }
  }
  if ((void **)v2 == a1) {
    return a1;
  }
  while (1)
  {
    uint64_t v4 = *(void *)(v2 + 40);
    if (!v4)
    {
      *(unsigned char *)(v2 + 72) = 0;
      return (void **)v2;
    }
    if (*(unsigned char *)(v2 + 72))
    {
      *(unsigned char *)(v2 + 72) = 0;
      return a1;
    }
    uint64_t v5 = *(void *)(v4 + 48);
    if (v5 == v2) {
      break;
    }
    if (!v5) {
      goto LABEL_25;
    }
    if (*(unsigned char *)(v5 + 72))
    {
      *(unsigned char *)(v5 + 72) = 0;
      *(unsigned char *)(v4 + 72) = 1;
      a1 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateRightWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v4);
      uint64_t v4 = *(void *)(v2 + 40);
      if (!v4) {
        return a1;
      }
      uint64_t v5 = *(void *)(v4 + 48);
      if (!v5) {
        goto LABEL_25;
      }
    }
    uint64_t v6 = *(void *)(v5 + 48);
    uint64_t v7 = *(void *)(v5 + 56);
    if (v6 && *(unsigned char *)(v6 + 72)) {
      goto LABEL_34;
    }
    if (v7 && *(unsigned char *)(v7 + 72))
    {
      if (v6 && *(unsigned char *)(v6 + 72)) {
        goto LABEL_34;
      }
      *(unsigned char *)(v7 + 72) = 0;
      *(unsigned char *)(v5 + 72) = 1;
      a1 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateLeftWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v5);
      uint64_t v4 = *(void *)(v2 + 40);
      if (!v4) {
        return a1;
      }
      uint64_t v5 = *(void *)(v4 + 48);
      if (v5)
      {
LABEL_34:
        *(unsigned char *)(v5 + 72) = *(unsigned char *)(v4 + 72);
        uint64_t v11 = *(void *)(v5 + 48);
        if (v11) {
          *(unsigned char *)(v11 + 72) = 0;
        }
      }
      *(unsigned char *)(v4 + 72) = 0;
      return JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateRightWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v4);
    }
LABEL_24:
    *(unsigned char *)(v5 + 72) = 1;
LABEL_25:
    uint64_t v2 = v4;
    if ((void **)v4 == a1) {
      return a1;
    }
  }
  uint64_t v5 = *(void *)(v4 + 56);
  if (!v5) {
    goto LABEL_25;
  }
  if (*(unsigned char *)(v5 + 72))
  {
    *(unsigned char *)(v5 + 72) = 0;
    *(unsigned char *)(v4 + 72) = 1;
    a1 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateLeftWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v4);
    uint64_t v4 = *(void *)(v2 + 40);
    if (!v4) {
      return a1;
    }
    uint64_t v5 = *(void *)(v4 + 56);
    if (!v5) {
      goto LABEL_25;
    }
  }
  uint64_t v8 = *(void *)(v5 + 48);
  uint64_t v9 = *(void *)(v5 + 56);
  if (v9 && *(unsigned char *)(v9 + 72)) {
    goto LABEL_43;
  }
  if (!v8 || !*(unsigned char *)(v8 + 72)) {
    goto LABEL_24;
  }
  if (v9 && *(unsigned char *)(v9 + 72)) {
    goto LABEL_43;
  }
  *(unsigned char *)(v8 + 72) = 0;
  *(unsigned char *)(v5 + 72) = 1;
  a1 = JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateRightWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v5);
  uint64_t v4 = *(void *)(v2 + 40);
  if (!v4) {
    return a1;
  }
  uint64_t v5 = *(void *)(v4 + 56);
  if (v5)
  {
LABEL_43:
    *(unsigned char *)(v5 + 72) = *(unsigned char *)(v4 + 72);
    uint64_t v12 = *(void *)(v5 + 56);
    if (v12) {
      *(unsigned char *)(v12 + 72) = 0;
    }
  }
  *(unsigned char *)(v4 + 72) = 0;
  return JavaUtilConcurrentConcurrentHashMap_TreeBin_rotateLeftWithJavaUtilConcurrentConcurrentHashMap_TreeNode_withJavaUtilConcurrentConcurrentHashMap_TreeNode_(a1, (void **)v4);
}

uint64_t JavaUtilConcurrentConcurrentHashMap_TreeBin_checkInvariantsWithJavaUtilConcurrentConcurrentHashMap_TreeNode_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_31:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_31;
  }
LABEL_3:
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 32);
  objc_opt_class();
  if (v6 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  if (v5 && *(void *)(v5 + 32) != a1
    || v6 && *(void *)(v6 + 64) != a1
    || v2 && *(void *)(v2 + 48) != a1 && *(void *)(v2 + 56) != a1
    || v3 && (*(void *)(v3 + 40) != a1 || *(_DWORD *)(v3 + 8) > *(_DWORD *)(a1 + 8))
    || v4 && (*(void *)(v4 + 40) != a1 || *(_DWORD *)(v4 + 8) < *(_DWORD *)(a1 + 8)))
  {
    return 0;
  }
  if (v3 && *(unsigned char *)(a1 + 72))
  {
    if (v4 && *(unsigned char *)(v3 + 72) && *(unsigned char *)(v4 + 72)) {
      return 0;
    }
LABEL_26:
    uint64_t result = JavaUtilConcurrentConcurrentHashMap_TreeBin_checkInvariantsWithJavaUtilConcurrentConcurrentHashMap_TreeNode_(v3);
    if (!result) {
      return result;
    }
    goto LABEL_27;
  }
  if (v3) {
    goto LABEL_26;
  }
LABEL_27:
  if (!v4) {
    return 1;
  }
  uint64_t result = JavaUtilConcurrentConcurrentHashMap_TreeBin_checkInvariantsWithJavaUtilConcurrentConcurrentHashMap_TreeNode_(v4);
  if (result) {
    return 1;
  }
  return result;
}

void sub_1001BFB94()
{
}

void sub_1001BFBB8()
{
}

uint64_t JavaUtilConcurrentConcurrentHashMap_TreeBin_class_()
{
  if ((atomic_load_explicit(JavaUtilConcurrentConcurrentHashMap_TreeBin__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560BC8 != -1) {
    dispatch_once(&qword_100560BC8, &stru_10041F610);
  }
  return qword_100560BC0;
}

void sub_1001BFC38(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560BC0 = IOSClass_fromClass(v1);
}

id sub_1001BFD34(uint64_t a1, void *a2, int a3, int a4)
{
  uint64_t v10 = *(JavaUtilConcurrentConcurrentHashMap_TableStack **)(a1 + 32);
  uint64_t v8 = (id *)(a1 + 32);
  uint64_t v9 = v10;
  if (v10)
  {
    JreStrongAssign(v8, v9->next_);
  }
  else
  {
    uint64_t v9 = [JavaUtilConcurrentConcurrentHashMap_TableStack alloc];
    if (!v9) {
      JreThrowNullPointerException();
    }
  }
  JreStrongAssign((id *)&v9->tab_, a2);
  v9->length_ = a4;
  v9->index_ = a3;
  JreStrongAssign((id *)&v9->next_, *(void **)(a1 + 24));
  return JreStrongAssign((id *)(a1 + 24), v9);
}

char *sub_1001BFDDC(char *result, int a2)
{
  uint64_t v2 = result;
  uint64_t v3 = (id *)(result + 24);
  uint64_t v4 = *((void *)result + 3);
  if (v4)
  {
    while (1)
    {
      int v5 = *(_DWORD *)(v4 + 8);
      int v6 = *((_DWORD *)v2 + 10) + v5;
      *((_DWORD *)v2 + 10) = v6;
      if (v6 < a2) {
        break;
      }
      *((_DWORD *)v2 + 10) = *(_DWORD *)(v4 + 12);
      JreStrongAssign((id *)v2 + 1, *(void **)(v4 + 16));
      JreStrongAssign((id *)(v4 + 16), 0);
      uint64_t v7 = *(void **)(v4 + 24);
      JreStrongAssign((id *)(v4 + 24), *((void **)v2 + 4));
      JreStrongAssign(v3, v7);
      uint64_t result = (char *)JreStrongAssign((id *)v2 + 4, (void *)v4);
      uint64_t v4 = *((void *)v2 + 3);
      a2 = v5;
      if (!v4) {
        goto LABEL_6;
      }
    }
  }
  else
  {
    int v5 = a2;
LABEL_6:
    int v8 = *((_DWORD *)v2 + 10) + *((_DWORD *)v2 + 13);
    *((_DWORD *)v2 + 10) = v8;
    if (v8 >= v5)
    {
      int v9 = *((_DWORD *)v2 + 11) + 1;
      *((_DWORD *)v2 + 10) = v9;
      *((_DWORD *)v2 + 11) = v9;
    }
  }
  return result;
}

id JavaUtilConcurrentConcurrentHashMap_BaseIterator_initWithJavaUtilConcurrentConcurrentHashMap_NodeArray_withInt_withInt_withInt_withJavaUtilConcurrentConcurrentHashMap_(uint64_t a1, void *a2, int a3, int a4, int a5, void *a6)
{
  JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 44) = a4;
  *(_DWORD *)(a1 + 48) = a5;
  *(_DWORD *)(a1 + 52) = a3;
  JreStrongAssign((id *)(a1 + 16), 0);
  JreStrongAssign((id *)(a1 + 56), a6);
  return -[JavaUtilConcurrentConcurrentHashMap_Traverser advance]_0(a1);
}

JavaUtilConcurrentConcurrentHashMap_MapEntry *new_JavaUtilConcurrentConcurrentHashMap_MapEntry_initWithId_withId_withJavaUtilConcurrentConcurrentHashMap_(void *a1, void *a2, void *a3)
{
  int v6 = [JavaUtilConcurrentConcurrentHashMap_MapEntry alloc];
  JreStrongAssign(&v6->key_, a1);
  JreStrongAssign(&v6->val_, a2);
  JreStrongAssign((id *)&v6->map_, a3);
  return v6;
}

uint64_t sub_1001C0C4C(void *a1, void *a2)
{
  if (a2 == a1) {
    return 1;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v4 = [a2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (!v4) {
    return 1;
  }
  id v5 = v4;
  uint64_t v6 = *(void *)v10;
  while (2)
  {
    for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v10 != v6) {
        objc_enumerationMutation(a2);
      }
      if (!*(void *)(*((void *)&v9 + 1) + 8 * i)) {
        return 0;
      }
      uint64_t result = (uint64_t)[a1 containsWithId:(void)v9];
      if (!result) {
        return result;
      }
    }
    id v5 = [a2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    uint64_t result = 1;
    if (v5) {
      continue;
    }
    break;
  }
  return result;
}

void sub_1001C1AEC(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560BD0 = IOSClass_fromClass(v1);
}

id JavaUtilPriorityQueue_initWithInt_withJavaUtilComparator_(uint64_t a1, int a2, void *a3)
{
  JavaUtilAbstractQueue_init();
  if (a2 <= 0)
  {
    CFStringRef v15 = JreStrcat("$I", v6, v7, v8, v9, v10, v11, v12, @"initialCapacity < 1: ");
    int v16 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v15);
    objc_exception_throw(v16);
  }
  uint64_t v13 = sub_1001C2580(a2);
  JreStrongAssign((id *)(a1 + 24), v13);
  return JreStrongAssign((id *)(a1 + 16), a3);
}

id JavaUtilPriorityQueue_initWithJavaUtilCollection_(void *a1, id *a2)
{
  JavaUtilAbstractQueue_init();
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (!a2 || (objc_opt_isKindOfClass() & 1) != 0)
    {
      return sub_1001C26D8((uint64_t)a1, a2);
    }
LABEL_16:
    JreThrowClassCastException();
  }
  if ([(id)JavaUtilSortedSet_class_() isInstance:a2])
  {
    id v5 = (void *)JavaUtilSortedSet_class_();
    if (a2 && ([v5 isInstance:a2] & 1) == 0) {
      goto LABEL_16;
    }
    return sub_1001C2794((uint64_t)a1, a2);
  }
  else
  {
    sub_1001C2B68((uint64_t)a1, a2);
    return [a1 addAllWithJavaUtilCollection:a2];
  }
}

id *sub_1001C1F9C(id *result, int a2)
{
  uint64_t v2 = result[3];
  if (!v2) {
    JreThrowNullPointerException();
  }
  if (v2[2] < a2)
  {
    uint64_t v3 = result;
    id v4 = sub_1001C2580(2 * a2);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v3[3], 0, v4, 0, *((unsigned int *)v3[3] + 2));
    return (id *)JreStrongAssign(v3 + 3, v4);
  }
  return result;
}

void *sub_1001C2048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    JreThrowNullPointerException();
  }
  unsigned int v3 = a2;
  uint64_t v5 = (int)a2;
  uint64_t v6 = *(unsigned int *)(v2 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v6 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v6, a2);
  }
  uint64_t v7 = *(void **)(v2 + 24 + 8 * (int)a2);
  if ((int)a2 >= 1)
  {
    while (1)
    {
      unsigned int v8 = v3 - 1;
      uint64_t v5 = (v3 - 1) >> 1;
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(unsigned int *)(v9 + 8);
      if ((int)v5 >= (int)v10) {
        IOSArray_throwOutOfBoundsWithMsg(v10, v8 >> 1);
      }
      uint64_t v11 = *(void **)(v9 + 24 + 8 * v5);
      if ((int)sub_1001C2880(a1, v11, (uint64_t)v7) < 1) {
        break;
      }
      IOSObjectArray_Set(*(void *)(a1 + 24), v3, v11);
      unsigned int v3 = v8 >> 1;
      if (v8 <= 1) {
        goto LABEL_11;
      }
    }
    LODWORD(v5) = v3;
LABEL_11:
    uint64_t v5 = v5;
  }
  uint64_t v12 = *(void *)(a1 + 24);
  return IOSObjectArray_Set(v12, v5, v7);
}

uint64_t sub_1001C220C(uint64_t a1, uint64_t a2)
{
  --*(_DWORD *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    JreThrowNullPointerException();
  }
  int v5 = *(_DWORD *)(a1 + 8);
  if (v5 < 0 || (uint64_t v6 = *(void *)(a1 + 24), v5 >= *(_DWORD *)(v2 + 8))) {
    IOSArray_throwOutOfBoundsWithMsg(*(unsigned int *)(v2 + 8), v5);
  }
  uint64_t v7 = *(void **)(v2 + 24 + 8 * v5);
  IOSObjectArray_Set(v6, (int)a2, v7);
  sub_1001C291C(a1, a2);
  IOSObjectArray_Set(*(void *)(a1 + 24), *(int *)(a1 + 8), 0);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t result = *(unsigned int *)(v8 + 8);
  if ((a2 & 0x80000000) != 0 || (int)result <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(result, a2);
  }
  if (v7 == *(void **)(v8 + 24 + 8 * (int)a2))
  {
    return (uint64_t)sub_1001C2048(a1, a2);
  }
  return result;
}

IOSObjectArray *sub_1001C2580(int a1)
{
  uint64_t v1 = +[IOSObjectArray arrayWithLength:a1 type:NSObject_class_()];
  objc_opt_class();
  if (v1 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v1;
}

id sub_1001C26D8(uint64_t a1, id *a2)
{
  sub_1001C2B68(a1, a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v4 = [a2 comparator];
  int v5 = (void *)JavaUtilComparator_class_();
  if (v4 && ([v5 isInstance:v4] & 1) == 0) {
    JreThrowClassCastException();
  }
  JreStrongAssign((id *)(a1 + 16), v4);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a2[3], 0, *(void **)(a1 + 24), 0, (uint64_t)[a2 size]);
  id result = [a2 size];
  *(_DWORD *)(a1 + 8) = result;
  return result;
}

id sub_1001C2794(uint64_t a1, void *a2)
{
  sub_1001C2B68(a1, a2);
  if (!a2) {
    goto LABEL_9;
  }
  id v4 = [a2 comparator];
  int v5 = (void *)JavaUtilComparator_class_();
  if (v4)
  {
    if (([v5 isInstance:v4] & 1) == 0) {
      JreThrowClassCastException();
    }
  }
  JreStrongAssign((id *)(a1 + 16), v4);
  id v6 = [a2 iterator];
  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  id result = [v6 hasNext];
  if (result)
  {
    while (1)
    {
      uint64_t v9 = *(void *)(a1 + 24);
      if (!v9) {
        break;
      }
      uint64_t v10 = *(int *)(a1 + 8);
      *(_DWORD *)(a1 + 8) = v10 + 1;
      IOSObjectArray_Set(v9, v10, [v7 next]);
      id result = [v7 hasNext];
      if ((result & 1) == 0) {
        return result;
      }
    }
LABEL_9:
    JreThrowNullPointerException();
  }
  return result;
}

id sub_1001C2880(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = *(void **)(a1 + 16);
  if (v5)
  {
    return [v5 compareWithId:a2 withId:a3];
  }
  else
  {
    uint64_t v7 = (void *)JavaLangComparable_class_();
    if (!a2) {
      JreThrowNullPointerException();
    }
    if (([v7 isInstance:a2] & 1) == 0) {
      JreThrowClassCastException();
    }
    return [a2 compareToWithId:a3];
  }
}

void *sub_1001C291C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    JreThrowNullPointerException();
  }
  int v3 = a2;
  uint64_t v5 = (int)a2;
  uint64_t v6 = *(unsigned int *)(v2 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v6 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v6, a2);
  }
  int v21 = *(void **)(v2 + 24 + 8 * (int)a2);
  uint64_t v7 = (2 * a2) | 1u;
  int v8 = *(_DWORD *)(a1 + 8);
  if ((int)v7 < v8)
  {
    int v9 = 2 * a2;
    while (1)
    {
      int v10 = v9 + 2;
      if (v9 + 2 >= v8)
      {
        uint64_t v14 = v7;
      }
      else
      {
        uint64_t v11 = *(void *)(a1 + 24);
        uint64_t v12 = *(unsigned int *)(v11 + 8);
        if (v10 < 0 || v10 >= (int)v12) {
          IOSArray_throwOutOfBoundsWithMsg(v12, (v9 + 2));
        }
        uint64_t v13 = *(void **)(v11 + 24 + 8 * v10);
        if (v9 < 0 || (int)v7 >= (int)v12) {
          IOSArray_throwOutOfBoundsWithMsg(v12, v7);
        }
        uint64_t v14 = (int)sub_1001C2880(a1, v13, *(void *)(*(void *)(a1 + 24) + 24 + 8 * (int)v7)) >= 0
            ? v7
            : v10;
      }
      uint64_t v15 = *(void *)(a1 + 24);
      uint64_t v16 = *(unsigned int *)(v15 + 8);
      if ((v14 & 0x80000000) != 0 || (int)v14 >= (int)v16) {
        IOSArray_throwOutOfBoundsWithMsg(v16, v14);
      }
      uint64_t v5 = (int)v14;
      if ((int)sub_1001C2880(a1, v21, *(void *)(v15 + 24 + 8 * (int)v14)) <= 0) {
        break;
      }
      uint64_t v17 = *(void *)(a1 + 24);
      uint64_t v18 = *(unsigned int *)(v17 + 8);
      if ((v14 & 0x80000000) != 0 || (int)v14 >= (int)v18) {
        IOSArray_throwOutOfBoundsWithMsg(v18, v14);
      }
      IOSObjectArray_Set(*(void *)(a1 + 24), v3, *(void **)(v17 + 24 + 8 * (int)v14));
      int v9 = 2 * v14;
      uint64_t v7 = (2 * v14) | 1u;
      int v8 = *(_DWORD *)(a1 + 8);
      int v3 = v14;
      if ((int)v7 >= v8) {
        goto LABEL_27;
      }
    }
    uint64_t v5 = v3;
  }
LABEL_27:
  uint64_t v19 = *(void *)(a1 + 24);
  return IOSObjectArray_Set(v19, v5, v21);
}

id sub_1001C2B68(uint64_t a1, void *a2)
{
  if (!a2)
  {
    int v9 = new_JavaLangNullPointerException_initWithNSString_(@"c == null");
    objc_exception_throw(v9);
  }
  if ([a2 isEmpty])
  {
    int v4 = 1;
  }
  else
  {
    double v5 = JavaLangMath_ceilWithDouble_((double)(int)[a2 size] * 1.1);
    if (v5 < 0.0) {
      unsigned int v6 = 0x80000000;
    }
    else {
      unsigned int v6 = 0x7FFFFFFF;
    }
    if ((int)v5 == 0x80000000) {
      int v4 = v6;
    }
    else {
      int v4 = (int)v5;
    }
  }
  uint64_t v7 = sub_1001C2580(v4);
  return JreStrongAssign((id *)(a1 + 24), v7);
}

JavaUtilPriorityQueue *new_JavaUtilPriorityQueue_init()
{
  uint64_t v0 = [JavaUtilPriorityQueue alloc];
  JavaUtilPriorityQueue_initWithInt_withJavaUtilComparator_((uint64_t)v0, 11, 0);
  return v0;
}

id JavaIoFilterInputStream_initWithJavaIoInputStream_(uint64_t a1, void *a2)
{
  JavaIoInputStream_init();
  return JreVolatileStrongAssign((atomic_ullong *)(a1 + 8), a2);
}

void sub_1001C2FE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C3108(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaIoRandomAccessFile_initWithJavaIoFile_withNSString_(uint64_t a1, void *a2, void *a3)
{
  *(unsigned char *)(a1 + 16) = 0;
  unsigned int v6 = (id *)(a1 + 40);
  uint64_t v7 = DalvikSystemCloseGuard_get();
  JreStrongAssign(v6, v7);
  JreStrongAssignAndConsume((id *)(a1 + 48), +[IOSByteArray newArrayWithLength:8]);
  if (!a3) {
    goto LABEL_20;
  }
  if ([a3 isEqual:@"r"])
  {
    uint64_t v8 = 0;
  }
  else
  {
    if (([a3 isEqual:@"rw"] & 1) == 0
      && ([a3 isEqual:@"rws"] & 1) == 0
      && ![a3 isEqual:@"rwd"])
    {
      CFStringRef v19 = JreStrcat("$$", v9, v10, v11, v12, v13, v14, v15, @"Invalid mode: ");
      BOOL v20 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v19);
      objc_exception_throw(v20);
    }
    if ([a3 isEqual:@"rws"])
    {
      *(unsigned char *)(a1 + 16) = 1;
      uint64_t v8 = 514;
    }
    else
    {
      uint64_t v8 = [a3 isEqual:@"rwd"] ? 642 : 514;
    }
  }
  *(_DWORD *)(a1 + 32) = v8;
  if (!a2) {
    goto LABEL_20;
  }
  uint64_t v16 = (id *)(a1 + 8);
  id v17 = LibcoreIoIoBridge_openWithNSString_withInt_((uint64_t)[a2 getAbsolutePath], v8);
  JreStrongAssign((id *)(a1 + 8), v17);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*v16) {
      JreThrowNullPointerException();
    }
    [*v16 sync];
  }
  id v18 = *v6;
  if (!*v6) {
LABEL_20:
  }
    JreThrowNullPointerException();
  return [v18 openWithNSString:@"close"];
}

void sub_1001C34B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C3554(_Unwind_Exception *a1)
{
}

void sub_1001C35E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C3664()
{
}

void sub_1001C3694()
{
}

void sub_1001C3744(_Unwind_Exception *a1)
{
}

uint64_t sub_1001C3A94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t result = JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a2 + 8), a3, a4);
  if ((int)v4 >= 1)
  {
    do
    {
      uint64_t result = (uint64_t)[a1 readWithByteArray:a2 withInt:v5 withInt:v4];
      if ((result & 0x80000000) != 0)
      {
        uint64_t v10 = new_JavaIoEOFException_init();
        objc_exception_throw(v10);
      }
      uint64_t v5 = (result + v5);
      BOOL v9 = __OFSUB__(v4, result);
      uint64_t v4 = (v4 - result);
    }
    while (!(((int)v4 < 0) ^ v9 | (v4 == 0)));
  }
  return result;
}

void sub_1001C3DE8(_Unwind_Exception *a1)
{
}

void sub_1001C3EF0(_Unwind_Exception *a1)
{
}

id sub_1001C41A4(void *a1, __int16 a2)
{
  uint64_t v4 = a1[6];
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  LibcoreIoMemory_pokeShortWithByteArray_withInt_withShort_withJavaNioByteOrder_(v4, 0, a2, JavaNioByteOrder_BIG_ENDIAN__);
  uint64_t v5 = a1[6];
  return [a1 writeWithByteArray:v5 withInt:0 withInt:2];
}

id sub_1001C42C0(void *a1, unint64_t a2)
{
  uint64_t v4 = a1[6];
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  LibcoreIoMemory_pokeLongWithByteArray_withInt_withLong_withJavaNioByteOrder_(v4, 0, a2, JavaNioByteOrder_BIG_ENDIAN__);
  uint64_t v5 = a1[6];
  return [a1 writeWithByteArray:v5 withInt:0 withInt:8];
}

id sub_1001C4388(void *a1, unsigned int a2)
{
  uint64_t v4 = a1[6];
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  LibcoreIoMemory_pokeIntWithByteArray_withInt_withInt_withJavaNioByteOrder_(v4, 0, a2, JavaNioByteOrder_BIG_ENDIAN__);
  uint64_t v5 = a1[6];
  return [a1 writeWithByteArray:v5 withInt:0 withInt:4];
}

JavaIoRandomAccessFile *new_JavaIoRandomAccessFile_initWithJavaIoFile_withNSString_(void *a1, void *a2)
{
  uint64_t v4 = [JavaIoRandomAccessFile alloc];
  JavaIoRandomAccessFile_initWithJavaIoFile_withNSString_((uint64_t)v4, a1, a2);
  return v4;
}

id JavaUtilArrayList_initWithInt_(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  JavaUtilAbstractList_init(a1, a2);
  if ((v2 & 0x80000000) != 0)
  {
    CFStringRef v13 = JreStrcat("$I", v4, v5, v6, v7, v8, v9, v10, @"capacity < 0: ");
    uint64_t v14 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v13);
    objc_exception_throw(v14);
  }
  if (v2)
  {
    uint64_t v11 = +[IOSObjectArray arrayWithLength:v2 type:NSObject_class_()];
  }
  else
  {
    if ((atomic_load_explicit(LibcoreUtilEmptyArray__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v11 = (IOSObjectArray *)LibcoreUtilEmptyArray_OBJECT_;
  }
  return JreStrongAssign((id *)(a1 + 16), v11);
}

id JavaUtilArrayList_init(uint64_t a1, uint64_t a2)
{
  JavaUtilAbstractList_init(a1, a2);
  if ((atomic_load_explicit(LibcoreUtilEmptyArray__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v3 = (void *)LibcoreUtilEmptyArray_OBJECT_;
  return JreStrongAssign((id *)(a1 + 16), v3);
}

id JavaUtilArrayList_initWithJavaUtilCollection_(uint64_t a1, void *a2)
{
  JavaUtilAbstractList_init(a1, a2);
  if (!a2)
  {
    uint64_t v10 = new_JavaLangNullPointerException_initWithNSString_(@"collection == null");
    objc_exception_throw(v10);
  }
  uint64_t v4 = (int *)[a2 toArray];
  if (!v4) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = v4;
  id v6 = [v4 getClass];
  uint64_t v7 = NSObject_class_();
  if (v6 != (id)IOSClass_arrayType(v7, 1u))
  {
    uint64_t v8 = +[IOSObjectArray arrayWithLength:v5[2] type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v5, 0, v8, 0, v5[2]);
    uint64_t v5 = (int *)v8;
  }
  id result = JreStrongAssign((id *)(a1 + 16), v5);
  *(_DWORD *)(a1 + 12) = v5[2];
  return result;
}

void JavaUtilArrayList_throwIndexOutOfBoundsExceptionWithInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFStringRef v8 = JreStrcat("$I$I", a2, a3, a4, a5, a6, a7, a8, @"Invalid index ");
  uint64_t v9 = new_JavaLangIndexOutOfBoundsException_initWithNSString_((uint64_t)v8);
  objc_exception_throw(v9);
}

void sub_1001C4E58(_Unwind_Exception *a1)
{
}

JavaUtilArrayList *new_JavaUtilArrayList_initWithInt_(uint64_t a1)
{
  unsigned int v2 = [JavaUtilArrayList alloc];
  JavaUtilArrayList_initWithInt_((uint64_t)v2, a1);
  return v2;
}

JavaUtilArrayList *new_JavaUtilArrayList_init()
{
  uint64_t v0 = [JavaUtilArrayList alloc];
  JavaUtilArrayList_init((uint64_t)v0, v1);
  return v0;
}

JavaUtilArrayList *new_JavaUtilArrayList_initWithJavaUtilCollection_(void *a1)
{
  unsigned int v2 = [JavaUtilArrayList alloc];
  JavaUtilArrayList_initWithJavaUtilCollection_((uint64_t)v2, a1);
  return v2;
}

uint64_t JavaUtilArrayList_class_()
{
  if (qword_100560BE8 != -1) {
    dispatch_once(&qword_100560BE8, &stru_100422D30);
  }
  return qword_100560BE0;
}

void sub_1001C60C8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560BE0 = IOSClass_fromClass(v1);
}

void sub_1001C674C(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  *(void *)outCount = 0;
  CFStringRef v8 = (NSMethodSignature *)class_copyMethodList(*(Class *)(a1 + 8), &outCount[1]);
  sub_1001C6DFC(v8, outCount[1], a2, a3, 0, a4);
  Class = object_getClass(*(id *)(a1 + 8));
  uint64_t v10 = (NSMethodSignature *)class_copyMethodList(Class, outCount);
  sub_1001C6DFC(v10, outCount[0], a2, a3, 1, a4);
  free(v8);
  free(v10);
}

JavaLangReflectMethod *sub_1001C6804(uint64_t a1, uint64_t a2, SEL aSelector, uint64_t a4)
{
  CFStringRef v8 = NSStringFromSelector(aSelector);
  if ([(NSString *)v8 isEqualToString:@"init"]) {
    return 0;
  }
  if ([(NSString *)v8 hasPrefix:@"initWith"]) {
    return 0;
  }
  id v9 = [*(id *)(a1 + 32) findMethodMetadata:v8];
  if (*(void *)(a1 + 32))
  {
    if (!v9) {
      return 0;
    }
  }
  uint64_t v11 = *(void *)(a1 + 40);
  return +[JavaLangReflectMethod methodWithMethodSignature:a2 selector:aSelector class:v11 isStatic:a4 metadata:v9];
}

IOSObjectArray *getConstructorsImpl(void *a1, int a2)
{
  id v4 = [a1 getMetadata];
  id v5 = +[NSMutableDictionary dictionary];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001C699C;
  v7[3] = &unk_100422F68;
  v7[4] = v4;
  v7[5] = a1;
  sub_1001C674C((uint64_t)a1, v5, a2, (uint64_t)v7);
  return +[IOSObjectArray arrayWithNSArray:type:](IOSObjectArray, "arrayWithNSArray:type:", [v5 allValues], JavaLangReflectConstructor_class_());
}

id sub_1001C699C(uint64_t a1, uint64_t a2, SEL aSelector)
{
  id v6 = NSStringFromSelector(aSelector);
  if (![(NSString *)v6 isEqualToString:@"init"]
    && ![(NSString *)v6 hasPrefix:@"initWith"])
  {
    return 0;
  }
  id v7 = [*(id *)(a1 + 32) findMethodMetadata:NSStringFromSelector(aSelector)];
  if (*(void *)(a1 + 32))
  {
    if (!v7) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + 40);
  return +[JavaLangReflectConstructor constructorWithMethodSignature:a2 selector:aSelector class:v9 metadata:v7];
}

id sub_1001C6BD0(objc_class **a1, void *a2)
{
  InstanceMethod = JreFindInstanceMethod(a1[1], (const char *)[a2 UTF8String]);
  if (!InstanceMethod
    || (id v5 = InstanceMethod,
        Description = method_getDescription(InstanceMethod),
        (id v7 = JreSignatureOrNull((uint64_t)Description)) == 0))
  {
    objc_exception_throw(objc_alloc_init(JavaLangNoSuchMethodException));
  }
  CFStringRef v8 = v7;
  id v9 = [a1 getMetadata];
  Namuint64_t e = method_getName(v5);
  id v11 = [v9 findMethodMetadata:a2];
  return +[JavaLangReflectConstructor constructorWithMethodSignature:v8 selector:Name class:a1 metadata:v11];
}

void sub_1001C6D84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

NSMethodSignature *sub_1001C6DFC(NSMethodSignature *result, unsigned int a2, void *a3, int a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    id v9 = result;
    uint64_t v10 = 0;
    uint64_t v11 = a2;
    do
    {
      isa = v9[v10].super.isa;
      Namuint64_t e = method_getName(isa);
      uint64_t v14 = NSStringFromSelector(Name);
      id result = (NSMethodSignature *)[a3 objectForKey:v14];
      if (!result)
      {
        Description = method_getDescription(isa);
        id result = JreSignatureOrNull((uint64_t)Description);
        if (result)
        {
          id result = (NSMethodSignature *)(*(uint64_t (**)(uint64_t, NSMethodSignature *, const char *, uint64_t))(a6 + 16))(a6, result, Name, a5);
          if (result)
          {
            uint64_t v16 = result;
            if (!a4
              || (id result = (NSMethodSignature *)[(NSMethodSignature *)result getModifiers],
                  (result & 1) != 0))
            {
              id result = (NSMethodSignature *)validTypeEncoding((const char *)objc_msgSend(objc_msgSend(v16, "signature"), "methodReturnType"));
              if (result)
              {
                id v17 = objc_msgSend(objc_msgSend(v16, "signature"), "numberOfArguments");
                if ((unint64_t)v17 < 3)
                {
LABEL_15:
                  id result = (NSMethodSignature *)[a3 setObject:v16 forKey:v14];
                }
                else
                {
                  id v18 = v17;
                  uint64_t v19 = 2;
                  while (1)
                  {
                    id result = (NSMethodSignature *)validTypeEncoding((const char *)objc_msgSend(objc_msgSend(v16, "signature"), "getArgumentTypeAtIndex:", v19));
                    if ((result & 1) == 0) {
                      break;
                    }
                    if (v18 == (id)++v19) {
                      goto LABEL_15;
                    }
                  }
                }
              }
            }
          }
        }
      }
      ++v10;
    }
    while (v10 != v11);
  }
  return result;
}

JavaNioMemoryBlock_MemoryMappedBlock *JavaNioMemoryBlock_mmapWithJavaIoFileDescriptor_withLong_withLong_withJavaNioChannelsFileChannel_MapMode_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    if (a3 > 0x7FFFFFFF || a2 > 0x7FFFFFFF || (a3 | a2) < 0)
    {
      CFStringRef v18 = JreStrcat("$J$J", a2, a3, a4, a5, a6, a7, a8, @"offset=");
      uint64_t v19 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v18);
      objc_exception_throw(v19);
    }
    if ((atomic_load_explicit(JavaNioChannelsFileChannel_MapMode__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (JavaNioChannelsFileChannel_MapMode_PRIVATE_ == a4)
    {
      uint64_t v12 = 3;
      uint64_t v13 = 2;
    }
    else
    {
      if ((atomic_load_explicit(JavaNioChannelsFileChannel_MapMode__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      if (JavaNioChannelsFileChannel_MapMode_READ_ONLY_ == a4) {
        uint64_t v12 = 1;
      }
      else {
        uint64_t v12 = 3;
      }
      uint64_t v13 = 1;
    }
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    id v16 = [(id)LibcoreIoLibcore_os_ mmapWithLong:0 withLong:a3 withInt:v12 withInt:v13 withJavaIoFileDescriptor:a1 withLong:a2];
    id v17 = [JavaNioMemoryBlock_MemoryMappedBlock alloc];
    v17->super.address_ = (int64_t)v16;
    v17->super.size_ = a3;
    return v17;
  }
  else
  {
    uint64_t v14 = [JavaNioMemoryBlock alloc];
    v14->address_ = 0;
    v14->size_ = 0;
    return (JavaNioMemoryBlock_MemoryMappedBlock *)v14;
  }
}

void sub_1001C7140(_Unwind_Exception *a1)
{
}

JavaNioMemoryBlock_NonMovableHeapBlock *JavaNioMemoryBlock_allocateWithInt_(int a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = +[IOSByteArray arrayWithLength:a1];
  int v3 = [[JavaNioMemoryBlock_NonMovableHeapBlock alloc] initWithByteArray:v2 withLong:&v2->super.size_ + 1 withLong:v1];
  return v3;
}

JavaNioMemoryBlock_UnmanagedBlock *JavaNioMemoryBlock_wrapFromJniWithLong_withLong_(int64_t a1, int64_t a2)
{
  id v4 = [JavaNioMemoryBlock_UnmanagedBlock alloc];
  v4->super.address_ = a1;
  v4->super.size_ = a2;
  return v4;
}

void sub_1001C768C()
{
}

void sub_1001C76B4()
{
}

JavaNioCharsetCoderResult *JavaNioCharsetCoderResult_malformedForLengthWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaNioCharsetCoderResult__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = (void *)JavaNioCharsetCoderResult_class_();
  objc_sync_enter(v2);
  if (a1 < 1)
  {
    CFStringRef v15 = JreStrcat("$I", v3, v4, v5, v6, v7, v8, v9, @"length <= 0: ");
    id v16 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v15);
    objc_exception_throw(v16);
  }
  uint64_t v10 = JavaLangInteger_valueOfWithInt_(a1);
  uint64_t v11 = (void *)qword_100560BF0;
  objc_sync_enter((id)qword_100560BF0);
  if (!qword_100560BF0) {
    JreThrowNullPointerException();
  }
  uint64_t v12 = (JavaNioCharsetCoderResult *)[(id)qword_100560BF0 getWithId:v10];
  if (!v12)
  {
    uint64_t v13 = [JavaNioCharsetCoderResult alloc];
    v13->type_ = 3;
    v13->length_ = a1;
    uint64_t v12 = v13;
    [(id)qword_100560BF0 putWithId:v10 withId:v12];
  }
  objc_sync_exit(v11);
  objc_sync_exit(v2);
  return v12;
}

void sub_1001C7938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaNioCharsetCoderResult *JavaNioCharsetCoderResult_unmappableForLengthWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaNioCharsetCoderResult__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = (void *)JavaNioCharsetCoderResult_class_();
  objc_sync_enter(v2);
  if (a1 < 1)
  {
    CFStringRef v15 = JreStrcat("$I", v3, v4, v5, v6, v7, v8, v9, @"length <= 0: ");
    id v16 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v15);
    objc_exception_throw(v16);
  }
  uint64_t v10 = JavaLangInteger_valueOfWithInt_(a1);
  uint64_t v11 = (void *)qword_100560BF8;
  objc_sync_enter((id)qword_100560BF8);
  if (!qword_100560BF8) {
    JreThrowNullPointerException();
  }
  uint64_t v12 = (JavaNioCharsetCoderResult *)[(id)qword_100560BF8 getWithId:v10];
  if (!v12)
  {
    uint64_t v13 = [JavaNioCharsetCoderResult alloc];
    v13->type_ = 4;
    v13->length_ = a1;
    uint64_t v12 = v13;
    [(id)qword_100560BF8 putWithId:v10 withId:v12];
  }
  objc_sync_exit(v11);
  objc_sync_exit(v2);
  return v12;
}

void sub_1001C7A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNioCharsetCoderResult_class_()
{
  if ((atomic_load_explicit(JavaNioCharsetCoderResult__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560C08 != -1) {
    dispatch_once(&qword_100560C08, &stru_100423DF0);
  }
  return qword_100560C00;
}

void sub_1001C7DD0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560C00 = IOSClass_fromClass(v1);
}

id JavaNioCharsetCharset_initWithNSString_withNSStringArray_(uint64_t a1, __CFString *a2, uint64_t a3)
{
  sub_1001C7ED8(a2);
  JreStrongAssign((id *)(a1 + 8), a2);
  uint64_t v6 = (id *)(a1 + 16);
  uint64_t v7 = new_JavaUtilHashSet_init();
  id result = JreStrongAssignAndConsume((id *)(a1 + 16), v7);
  if (a3)
  {
    uint64_t v9 = (__CFString **)(a3 + 24);
    unint64_t v10 = a3 + 24 + 8 * *(int *)(a3 + 8);
    while ((unint64_t)v9 < v10)
    {
      uint64_t v11 = *v9++;
      sub_1001C7ED8(v11);
      id result = [*v6 addWithId:v11];
    }
  }
  return result;
}

uint64_t sub_1001C7ED8(__CFString *a1)
{
  if (atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_10;
  }
LABEL_3:
  if ([(__CFString *)a1 isEmpty]) {
    goto LABEL_11;
  }
  uint64_t result = (uint64_t)[(__CFString *)a1 length];
  int v3 = result;
  if ((int)result >= 1)
  {
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t result = sub_1001C7F84((int)[(__CFString *)a1 charAtWithInt:v4]);
      if ((result & 1) == 0) {
        break;
      }
      uint64_t v4 = (v4 + 1);
      if (v3 == v4) {
        return result;
      }
    }
LABEL_11:
    uint64_t v5 = new_JavaNioCharsetIllegalCharsetNameException_initWithNSString_(a1);
    objc_exception_throw(v5);
  }
  return result;
}

uint64_t sub_1001C7F84(int a1)
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  BOOL v4 = (a1 - 48) < 0xB || (a1 - 45) < 2 || a1 == 95;
  return (a1 & 0xFFFFFFDF) - 65 < 0x1A || v4;
}

id sub_1001C8004(uint64_t a1, void *a2)
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  BOOL v4 = (void *)qword_100560C10;
  objc_sync_enter((id)qword_100560C10);
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (!qword_100560C10) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = a2[1];
  id v6 = [(id)qword_100560C10 getWithId:v5];
  if (v6) {
    id v7 = v6;
  }
  else {
    id v7 = a2;
  }
  [(id)qword_100560C10 putWithId:v5 withId:v7];
  [(id)qword_100560C10 putWithId:a1 withId:v7];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v8 = (void *)a2[2];
  if (!v8) {
    JreThrowNullPointerException();
  }
  id v9 = [v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v9)
  {
    uint64_t v10 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v8);
        }
        objc_msgSend((id)qword_100560C10, "putWithId:withId:", *(void *)(*((void *)&v13 + 1) + 8 * i), v7, (void)v13);
      }
      id v9 = [v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
  objc_sync_exit(v4);
  return v7;
}

void sub_1001C8198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaNioCharsetCharset_forNameWithNSString_(__CFString *a1)
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = (void *)qword_100560C10;
  objc_sync_enter((id)qword_100560C10);
  if (!qword_100560C10) {
    JreThrowNullPointerException();
  }
  id v3 = [(id)qword_100560C10 getWithId:a1];
  objc_sync_exit(v2);
  if (v3) {
    return v3;
  }
  if (!a1)
  {
    id v6 = new_JavaNioCharsetIllegalCharsetNameException_initWithNSString_(0);
    goto LABEL_14;
  }
  sub_1001C7ED8(a1);
  uint64_t v5 = JavaNioCharsetIOSCharset_charsetForNameWithNSString_(a1);
  if (!v5)
  {
    id v6 = new_JavaNioCharsetUnsupportedCharsetException_initWithNSString_(a1);
LABEL_14:
    objc_exception_throw(v6);
  }
  return sub_1001C8004((uint64_t)a1, v5);
}

void sub_1001C82A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaNioCharsetCharset_forNameUEEWithNSString_(__CFString *a1)
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaNioCharsetCharset_forNameWithNSString_(a1);
}

uint64_t JavaNioCharsetCharset_isSupportedWithNSString_(__CFString *a1)
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JavaNioCharsetCharset_forNameWithNSString_(a1);
  return 1;
}

void sub_1001C83A8(void *a1)
{
}

id sub_1001C84A0(void *a1, uint64_t a2)
{
  id v3 = [a1 newEncoder];
  if (!v3) {
    goto LABEL_9;
  }
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [v3 onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_];
  if (!v4) {
    goto LABEL_9;
  }
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v5 = [v4 onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_];
  if (!v5) {
LABEL_9:
  }
    JreThrowNullPointerException();
  return [v5 encodeWithJavaNioCharBuffer:a2];
}

void sub_1001C8584(_Unwind_Exception *a1)
{
}

void sub_1001C86B8(_Unwind_Exception *a1)
{
}

JavaUtilCollections_UnmodifiableSortedMap *JavaNioCharsetCharset_availableCharsets()
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&NSString__initialized);
  if ((v0 & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v1 = new_JavaUtilTreeMap_initWithJavaUtilComparator_(NSString_CASE_INSENSITIVE_ORDER_);
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id AvailableCharsetNames = JavaNioCharsetIOSCharset_getAvailableCharsetNames();
  if (!AvailableCharsetNames) {
LABEL_15:
  }
    JreThrowNullPointerException();
  id v3 = AvailableCharsetNames;
  id v4 = [AvailableCharsetNames countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = JavaNioCharsetIOSCharset_charsetForNameWithNSString_(*(void **)(*((void *)&v10 + 1) + 8 * (void)v7));
        if (!v8) {
          goto LABEL_15;
        }
        -[JavaUtilTreeMap putWithId:withId:](v1, "putWithId:withId:", v8[1], v8, (void)v10);
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }
  return JavaUtilCollections_unmodifiableSortedMapWithJavaUtilSortedMap_(v1);
}

uint64_t JavaNioCharsetCharset_defaultCharset()
{
  if ((atomic_load_explicit(JavaNioCharsetCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaNioCharsetIOSCharset__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaNioCharsetIOSCharset_DEFAULT_CHARSET_;
}

JavaLangUnsupportedOperationException *new_JavaLangUnsupportedOperationException_init()
{
  unsigned __int8 v0 = [JavaLangUnsupportedOperationException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaLangUnsupportedOperationException *new_JavaLangUnsupportedOperationException_initWithNSString_(uint64_t a1)
{
  unsigned int v2 = [JavaLangUnsupportedOperationException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

void *JavaIoBufferedReader_initWithJavaIoReader_withInt_(uint64_t a1, void *a2, int a3)
{
  JavaIoReader_initWithId_(a1, a2);
  *(_DWORD *)(a1 + 40) = -1;
  *(_DWORD *)(a1 + 44) = -1;
  if (a3 <= 0)
  {
    uint64_t v8 = new_JavaLangIllegalArgumentException_initWithNSString_(@"size <= 0");
    objc_exception_throw(v8);
  }
  JreStrongAssign((id *)(a1 + 16), a2);
  id v6 = +[IOSCharArray newArrayWithLength:a3];
  return JreStrongAssignAndConsume((id *)(a1 + 24), v6);
}

void sub_1001C8DC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1001C8DD8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  if (v2 != -1)
  {
    int v3 = *(_DWORD *)(a1 + 44);
    if (*(_DWORD *)(a1 + 32) - (int)v2 < v3)
    {
      if (v2)
      {
        if ((int)v2 >= 1)
        {
          id v4 = *(_DWORD **)(a1 + 24);
          if (!v4) {
            goto LABEL_21;
          }
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v4, v2, v4, 0, (v4[2] - v2));
          *(_DWORD *)(a1 + 32) -= *(_DWORD *)(a1 + 40);
          *(_DWORD *)(a1 + 36) -= *(_DWORD *)(a1 + 40);
          *(_DWORD *)(a1 + 40) = 0;
        }
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 24);
        if (!v8) {
          goto LABEL_21;
        }
        int v9 = *(_DWORD *)(v8 + 8);
        if (v3 > v9)
        {
          int v10 = 2 * v9;
          if (v10 < v3) {
            int v3 = v10;
          }
          long long v11 = +[IOSCharArray arrayWithLength:v3];
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 24), 0, v11, 0, *(unsigned int *)(*(void *)(a1 + 24) + 8));
          JreStrongAssign((id *)(a1 + 24), v11);
        }
      }
      long long v12 = *(void **)(a1 + 16);
      if (v12 && *(void *)(a1 + 24))
      {
        id result = objc_msgSend(v12, "readWithCharArray:withInt:withInt:");
        if (result != -1) {
          *(_DWORD *)(a1 + 36) += result;
        }
        return result;
      }
LABEL_21:
      JreThrowNullPointerException();
    }
  }
  id v5 = *(void **)(a1 + 16);
  if (!v5) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (!v6) {
    goto LABEL_21;
  }
  id result = [v5 readWithCharArray:v6 withInt:0 withInt:*(unsigned int *)(v6 + 8)];
  if ((int)result >= 1)
  {
    *(_DWORD *)(a1 + 40) = -1;
    *(_DWORD *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 36) = result;
  }
  return result;
}

void sub_1001C90C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C91A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C9488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

uint64_t sub_1001C94B0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a1 + 36) || (uint64_t result = (uint64_t)sub_1001C8DD8(a1), result != -1))
  {
    uint64_t v3 = *(void *)(a1 + 24);
    if (!v3) {
      JreThrowNullPointerException();
    }
    int v4 = *(_DWORD *)(a1 + 32);
    uint64_t result = *(unsigned int *)(v3 + 8);
    if (v4 < 0 || v4 >= (int)result) {
      IOSArray_throwOutOfBoundsWithMsg(result, v4);
    }
    if (*(_WORD *)(v3 + 12 + 2 * v4) == 10) {
      ++*(_DWORD *)(a1 + 32);
    }
  }
  return result;
}

void sub_1001C9870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1001C9940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C99F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001C9B1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoBufferedReader *new_JavaIoBufferedReader_initWithJavaIoReader_(void *a1)
{
  uint64_t v2 = [JavaIoBufferedReader alloc];
  JavaIoBufferedReader_initWithJavaIoReader_withInt_((uint64_t)v2, a1, 0x2000);
  return v2;
}

JavaLangSecurityException *new_JavaLangSecurityException_init()
{
  unsigned __int8 v0 = [JavaLangSecurityException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaLangSecurityException *new_JavaLangSecurityException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangSecurityException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

JavaLangSecurityException *new_JavaLangSecurityException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  int v4 = [JavaLangSecurityException alloc];
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

uint64_t JavaLangReflectWildcardType_class_()
{
  if (qword_100560C20 != -1) {
    dispatch_once(&qword_100560C20, &stru_100425018);
  }
  return qword_100560C18;
}

void sub_1001C9FDC(id a1)
{
  qword_100560C18 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangReflectWildcardType);
}

uint64_t JavaIoFlushable_class_()
{
  if (qword_100560C30 != -1) {
    dispatch_once(&qword_100560C30, &stru_1004250D8);
  }
  return qword_100560C28;
}

void sub_1001CA054(id a1)
{
  qword_100560C28 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaIoFlushable);
}

uint64_t JavaUtilCollections_binarySearchWithJavaUtilList_withId_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_31:
    CFStringRef v18 = new_JavaLangNullPointerException_initWithNSString_(@"list == null");
    objc_exception_throw(v18);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_31;
  }
LABEL_3:
  if ([a1 isEmpty]) {
    return 0xFFFFFFFFLL;
  }
  if ([(id)JavaUtilRandomAccess_class_() isInstance:a1])
  {
    unsigned int v5 = [a1 size];
    signed int v6 = v5 - 1;
    if ((int)(v5 - 1) < 0)
    {
      LODWORD(v4) = v5;
      int v10 = -1;
    }
    else
    {
      signed int v7 = 0;
      do
      {
        uint64_t v4 = (v6 + v7) >> 1;
        id v8 = [a1 getWithInt:v4];
        if (!v8) {
          goto LABEL_29;
        }
        int v9 = [v8 compareToWithId:a2];
        if (-v9 < 1)
        {
          if (!v9) {
            return v4;
          }
          signed int v6 = v4 - 1;
        }
        else
        {
          signed int v7 = v4 + 1;
        }
      }
      while (v7 <= v6);
      if (v9 <= 0) {
        int v10 = -2;
      }
      else {
        int v10 = -1;
      }
    }
    return (v10 - v4);
  }
  else
  {
    id v11 = [a1 listIterator];
    if (!v11) {
LABEL_29:
    }
      JreThrowNullPointerException();
    long long v12 = v11;
    do
    {
      if (([v12 hasNext] & 1) == 0) {
        return ~(unint64_t)[a1 size];
      }
      id v13 = [v12 next];
      if (!v13) {
        goto LABEL_29;
      }
      unsigned int v14 = [v13 compareToWithId:a2];
    }
    while (v14 > 0x80000000);
    unsigned int v15 = v14;
    unsigned int v16 = [v12 previousIndex];
    if (v15) {
      return ~v16;
    }
    else {
      return v16;
    }
  }
}

uint64_t JavaUtilCollections_binarySearchWithJavaUtilList_withId_withJavaUtilComparator_(void *a1, uint64_t a2, void *a3)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a3) {
      goto LABEL_3;
    }
  }
  else
  {
    objc_opt_class();
    if (a3)
    {
LABEL_3:
      if ([(id)JavaUtilRandomAccess_class_() isInstance:a1])
      {
        if (a1)
        {
          unsigned int v6 = [a1 size];
          signed int v7 = v6 - 1;
          if ((int)(v6 - 1) < 0)
          {
            LODWORD(v9) = v6;
            int v11 = -1;
          }
          else
          {
            signed int v8 = 0;
            do
            {
              uint64_t v9 = (v7 + v8) >> 1;
              int v10 = objc_msgSend(a3, "compareWithId:withId:", objc_msgSend(a1, "getWithInt:", v9), a2);
              if (-v10 < 1)
              {
                if (!v10) {
                  return v9;
                }
                signed int v7 = v9 - 1;
              }
              else
              {
                signed int v8 = v9 + 1;
              }
            }
            while (v8 <= v7);
            if (v10 <= 0) {
              int v11 = -2;
            }
            else {
              int v11 = -1;
            }
          }
          return (v11 - v9);
        }
      }
      else if (a1)
      {
        id v12 = [a1 listIterator];
        if (v12)
        {
          id v13 = v12;
          do
          {
            if (([v13 hasNext] & 1) == 0) {
              return ~(unint64_t)[a1 size];
            }
            unsigned int v14 = objc_msgSend(a3, "compareWithId:withId:", objc_msgSend(v13, "next"), a2);
          }
          while (v14 > 0x80000000);
          unsigned int v15 = v14;
          unsigned int v16 = [v13 previousIndex];
          if (v15) {
            return ~v16;
          }
          else {
            return v16;
          }
        }
      }
      JreThrowNullPointerException();
    }
  }
  CFStringRef v18 = (void *)JavaUtilList_class_();
  if (a1 && ([v18 isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  return JavaUtilCollections_binarySearchWithJavaUtilList_withId_(a1, a2);
}

id JavaUtilCollections_copy__WithJavaUtilList_withJavaUtilList_(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_12;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_12;
    }
  }
  int v4 = [a1 size];
  if (!a2) {
    goto LABEL_12;
  }
  if (v4 < (int)[a2 size])
  {
    [a1 size];
    [a2 size];
    CFStringRef v16 = JreStrcat("$I$I", v9, v10, v11, v12, v13, v14, v15, @"destination.size() < source.size(): ");
    id v17 = new_JavaLangIndexOutOfBoundsException_initWithNSString_((uint64_t)v16);
    objc_exception_throw(v17);
  }
  id v5 = [a2 iterator];
  id v6 = [a1 listIterator];
  if (!v5) {
LABEL_12:
  }
    JreThrowNullPointerException();
  signed int v7 = v6;
  id result = [v5 hasNext];
  if (result)
  {
    do
    {
      if (!v7) {
        JreThrowNullPointerException();
      }
      [v7 next];
      objc_msgSend(v7, "setWithId:", objc_msgSend(v5, "next"));
      id result = [v5 hasNext];
    }
    while ((result & 1) != 0);
  }
  return result;
}

#error "1001CA514: call analysis failed (funcsize=19)"

void sub_1001CA528()
{
}

JavaUtilCollections_$3 *JavaUtilCollections_enumerationWithJavaUtilCollection_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = [JavaUtilCollections__3 alloc];
  sub_1001D4A4C((uint64_t)v2, a1);
  return v2;
}

id JavaUtilCollections_fillWithJavaUtilList_withId_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_8;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
LABEL_8:
    }
      JreThrowNullPointerException();
  }
  id v4 = [a1 listIterator];
  if (!v4) {
    goto LABEL_8;
  }
  id v5 = v4;
  id result = [v4 hasNext];
  if (result)
  {
    do
    {
      [v5 next];
      [v5 setWithId:a2];
      id result = [v5 hasNext];
    }
    while ((result & 1) != 0);
  }
  return result;
}

id JavaUtilCollections_maxWithJavaUtilCollection_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_11;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_11;
    }
  }
  id v2 = [a1 iterator];
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  id v4 = [v2 next];
  if ([v3 hasNext])
  {
    while (1)
    {
      id v5 = [v3 next];
      if (!v4) {
        break;
      }
      id v6 = v5;
      if ((int)[v4 compareToWithId:v5] < 0) {
        id v4 = v6;
      }
      if (([v3 hasNext] & 1) == 0) {
        return v4;
      }
    }
LABEL_11:
    JreThrowNullPointerException();
  }
  return v4;
}

id JavaUtilCollections_maxWithJavaUtilCollection_withJavaUtilComparator_(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    objc_opt_class();
    if (a2)
    {
LABEL_3:
      if (!a1 || (id v4 = [a1 iterator]) == 0) {
        JreThrowNullPointerException();
      }
      id v5 = v4;
      id v6 = [v4 next];
      if ([v5 hasNext])
      {
        do
        {
          id v7 = [v5 next];
          if ((int)[a2 compareWithId:v6 withId:v7] < 0) {
            id v6 = v7;
          }
        }
        while (([v5 hasNext] & 1) != 0);
      }
      return v6;
    }
  }
  uint64_t v9 = (void *)JavaUtilCollection_class_();
  if (a1 && ([v9 isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  return JavaUtilCollections_maxWithJavaUtilCollection_(a1);
}

id JavaUtilCollections_minWithJavaUtilCollection_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_11;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_11;
    }
  }
  id v2 = [a1 iterator];
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  id v4 = [v2 next];
  if ([v3 hasNext])
  {
    while (1)
    {
      id v5 = [v3 next];
      if (!v4) {
        break;
      }
      id v6 = v5;
      if ((int)[v4 compareToWithId:v5] > 0) {
        id v4 = v6;
      }
      if (([v3 hasNext] & 1) == 0) {
        return v4;
      }
    }
LABEL_11:
    JreThrowNullPointerException();
  }
  return v4;
}

id JavaUtilCollections_minWithJavaUtilCollection_withJavaUtilComparator_(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else
  {
    objc_opt_class();
    if (a2)
    {
LABEL_3:
      if (!a1 || (id v4 = [a1 iterator]) == 0) {
        JreThrowNullPointerException();
      }
      id v5 = v4;
      id v6 = [v4 next];
      if ([v5 hasNext])
      {
        do
        {
          id v7 = [v5 next];
          if ((int)[a2 compareWithId:v6 withId:v7] > 0) {
            id v6 = v7;
          }
        }
        while (([v5 hasNext] & 1) != 0);
      }
      return v6;
    }
  }
  uint64_t v9 = (void *)JavaUtilCollection_class_();
  if (a1 && ([v9 isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  return JavaUtilCollections_minWithJavaUtilCollection_(a1);
}

JavaUtilCollections_CopiesList *JavaUtilCollections_nCopiesWithInt_withId_(uint64_t a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [JavaUtilCollections_CopiesList alloc];
  sub_1001CD1F0((uint64_t)v4, a1, a2);
  return v4;
}

uint64_t JavaUtilCollections_reverseWithJavaUtilList_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_18;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_18;
    }
  }
  id v2 = [a1 size];
  id v3 = [a1 listIterator];
  id v4 = (void *)JavaUtilListIterator_class_();
  if (v3 && ([v4 isInstance:v3] & 1) == 0
    || (id v5 = [a1 listIteratorWithInt:v2], result = JavaUtilListIterator_class_(), v5)
    && (uint64_t result = (uint64_t)[(id)result isInstance:v5], (result & 1) == 0))
  {
    JreThrowClassCastException();
  }
  if ((int)v2 >= 0) {
    int v7 = (int)v2;
  }
  else {
    int v7 = v2 + 1;
  }
  if ((int)v2 >= 2)
  {
    if (v3)
    {
      int v8 = v7 >> 1;
      while (1)
      {
        id v9 = [v3 next];
        if (!v5) {
          break;
        }
        id v10 = v9;
        objc_msgSend(v3, "setWithId:", objc_msgSend(v5, "previous"));
        uint64_t result = (uint64_t)[v5 setWithId:v10];
        if (!--v8) {
          return result;
        }
      }
    }
LABEL_18:
    JreThrowNullPointerException();
  }
  return result;
}

JavaUtilCollections_ReverseComparator2 *JavaUtilCollections_reverseOrderWithJavaUtilComparator_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
  }
  else
  {
    objc_opt_class();
    if (a1)
    {
LABEL_3:
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          JreThrowClassCastException();
        }
        return (JavaUtilCollections_ReverseComparator2 *)a1[1];
      }
      else
      {
        id v3 = [JavaUtilCollections_ReverseComparator2 alloc];
        JreStrongAssign((id *)&v3->cmp_, a1);
        return v3;
      }
    }
  }
  return (JavaUtilCollections_ReverseComparator2 *)JavaUtilCollections_reverseOrder();
}

id JavaUtilCollections_shuffleWithJavaUtilList_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = new_JavaUtilRandom_init();
  return JavaUtilCollections_shuffleWithJavaUtilList_withJavaUtilRandom_(a1, v2);
}

id JavaUtilCollections_shuffleWithJavaUtilList_withJavaUtilRandom_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = (void *)JavaUtilList_class_();
  if (a1 && ([v4 isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  if ([(id)JavaUtilRandomAccess_class_() isInstance:a1])
  {
    if (a1)
    {
      id result = [a1 size];
      if ((int)result - 1 < 1) {
        return result;
      }
      if (a2)
      {
        int v6 = (int)result;
        do
        {
          uint64_t v7 = (v6 - 1);
          id v8 = objc_msgSend(a2, "nextIntWithInt:");
          id result = objc_msgSend(a1, "setWithInt:withId:", v8, objc_msgSend(a1, "setWithInt:withId:", v7, objc_msgSend(a1, "getWithInt:", v8)));
          int v6 = v7;
        }
        while (v7 > 1);
        return result;
      }
    }
    goto LABEL_32;
  }
  if (!a1) {
    goto LABEL_32;
  }
  id v9 = (unsigned int *)[a1 toArray];
  if (!v9) {
    goto LABEL_32;
  }
  uint64_t v10 = (uint64_t)v9;
  uint64_t v11 = v9[2];
  uint64_t v12 = (v11 - 1);
  if ((int)v12 >= 1)
  {
    if (!a2) {
      goto LABEL_32;
    }
    do
    {
      uint64_t v13 = (uint64_t)[a2 nextIntWithInt:v11];
      uint64_t v14 = *(int *)(v10 + 8);
      if (v12 >= v14) {
        IOSArray_throwOutOfBoundsWithMsg(v14, (v11 - 1));
      }
      uint64_t v15 = *(void **)(v10 + 24 + 8 * v12);
      if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v14) {
        IOSArray_throwOutOfBoundsWithMsg(v14, v13);
      }
      IOSObjectArray_Set(v10, v12, *(void **)(v10 + 24 + 8 * (int)v13));
      IOSObjectArray_Set(v10, (int)v13, v15);
      --v12;
      int v16 = v11 - 2;
      uint64_t v11 = (v11 - 1);
    }
    while (v16 > 0);
  }
  id v17 = [a1 listIterator];
  if (!v17) {
LABEL_32:
  }
    JreThrowNullPointerException();
  CFStringRef v18 = v17;
  id result = [v17 hasNext];
  if (result)
  {
    int v19 = 0;
    do
    {
      [v18 next];
      uint64_t v20 = *(unsigned int *)(v10 + 8);
      if (v19 < 0 || v19 >= (int)v20) {
        IOSArray_throwOutOfBoundsWithMsg(v20, v19);
      }
      [v18 setWithId:*(void *)(v10 + 24 + 8 * v19)];
      id result = [v18 hasNext];
      ++v19;
    }
    while ((result & 1) != 0);
  }
  return result;
}

JavaUtilCollections_SingletonSet *JavaUtilCollections_singletonWithId_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = [JavaUtilCollections_SingletonSet alloc];
  JavaUtilAbstractSet_init(v2, v3);
  JreStrongAssign(&v2->element_, a1);
  return v2;
}

JavaUtilCollections_SingletonList *JavaUtilCollections_singletonListWithId_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = [JavaUtilCollections_SingletonList alloc];
  JavaUtilAbstractList_init(v2, v3);
  JreStrongAssign(&v2->element_, a1);
  return v2;
}

JavaUtilCollections_SingletonMap *JavaUtilCollections_singletonMapWithId_withId_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [JavaUtilCollections_SingletonMap alloc];
  sub_1001CDBC4((uint64_t)v4, a1, a2);
  return v4;
}

id JavaUtilCollections_sortWithJavaUtilList_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_17;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_17;
    }
  }
  id v2 = [a1 toArray];
  JavaUtilArrays_sortWithNSObjectArray_(v2);
  id v3 = [a1 listIterator];
  if (!v3) {
    goto LABEL_17;
  }
  id v4 = v3;
  id result = [v3 hasNext];
  if (result)
  {
    uint64_t v6 = 0;
    while (1)
    {
      [v4 next];
      if (!v2) {
        break;
      }
      uint64_t v7 = *((unsigned int *)v2 + 2);
      if ((v6 & 0x80000000) != 0 || (int)v6 >= (int)v7) {
        IOSArray_throwOutOfBoundsWithMsg(v7, v6);
      }
      uint64_t v8 = v2[(int)v6 + 3];
      id v9 = (void *)JavaLangComparable_class_();
      if (v8)
      {
        if (([v9 isInstance:v8] & 1) == 0) {
          JreThrowClassCastException();
        }
      }
      [v4 setWithId:v8];
      id result = [v4 hasNext];
      uint64_t v6 = (v6 + 1);
      if ((result & 1) == 0) {
        return result;
      }
    }
LABEL_17:
    JreThrowNullPointerException();
  }
  return result;
}

id JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_16;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_16;
    }
  }
  id v4 = +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", (int)[a1 size], NSObject_class_());
  objc_opt_class();
  if (v4 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  id v5 = [a1 toArrayWithNSObjectArray:v4];
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(v5, a2);
  id v6 = [a1 listIterator];
  if (!v6) {
LABEL_16:
  }
    JreThrowNullPointerException();
  uint64_t v7 = v6;
  id result = [v6 hasNext];
  if (result)
  {
    uint64_t v9 = 0;
    while (1)
    {
      [v7 next];
      if (!v5) {
        break;
      }
      uint64_t v10 = *((unsigned int *)v5 + 2);
      if ((v9 & 0x80000000) != 0 || (int)v9 >= (int)v10) {
        IOSArray_throwOutOfBoundsWithMsg(v10, v9);
      }
      [v7 setWithId:v5[(int)v9 + 3]];
      id result = [v7 hasNext];
      uint64_t v9 = (v9 + 1);
      if ((result & 1) == 0) {
        return result;
      }
    }
    goto LABEL_16;
  }
  return result;
}

id JavaUtilCollections_swapWithJavaUtilList_withInt_withInt_(void *a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v8 = new_JavaLangNullPointerException_initWithNSString_(@"list == null");
    goto LABEL_16;
  }
  if (!a1) {
    goto LABEL_13;
  }
LABEL_3:
  id result = [a1 size];
  if ((a2 & 0x80000000) != 0 || (int)result <= (int)a3 || (a3 & 0x80000000) != 0 || (int)result <= (int)a2)
  {
    uint64_t v8 = new_JavaLangIndexOutOfBoundsException_init();
LABEL_16:
    objc_exception_throw(v8);
  }
  if (a2 != a3)
  {
    if (([(id)JavaUtilList_class_() isInstance:a1] & 1) == 0) {
      JreThrowClassCastException();
    }
    id v7 = objc_msgSend(a1, "setWithInt:withId:", a2, objc_msgSend(a1, "getWithInt:", a3));
    return [a1 setWithInt:a3 withId:v7];
  }
  return result;
}

BOOL JavaUtilCollections_replaceAllWithJavaUtilList_withId_withId_(void *a1, uint64_t a2, uint64_t a3)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  id v6 = [a1 indexOfWithId:a2];
  int v7 = (int)v6;
  if ((v6 & 0x80000000) == 0)
  {
    id v8 = v6;
    do
    {
      [a1 setWithInt:v8 withId:a3];
      id v8 = [a1 indexOfWithId:a2];
    }
    while ((v8 & 0x80000000) == 0);
  }
  return v7 >= 0;
}

id JavaUtilCollections_rotateWithJavaUtilList_withInt_(void *a1, int a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = (void *)JavaUtilList_class_();
  if (!a1) {
    JreThrowNullPointerException();
  }
  if (([v4 isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  id result = [a1 size];
  if (result)
  {
    id v6 = result;
    int v7 = a2 % (int)result;
    int v8 = a2 <= 0 ? (int)result : 0;
    int v9 = v7 + v8;
    if (v7 + v8 && result != v9)
    {
      if ([(id)JavaUtilRandomAccess_class_() isInstance:a1])
      {
        id result = [a1 getWithInt:0];
        if ((int)v6 >= 1)
        {
          id v11 = result;
          int v12 = 0;
          unsigned int v13 = 0;
          int v14 = (int)v6;
          do
          {
            unsigned int v13 = (int)(v13 + v9) % (int)v6;
            id result = [a1 setWithInt:v13 withId:v11];
            if (v13 == v12)
            {
              unsigned int v13 = v12 + 1;
              id result = [a1 getWithInt:(v12 + 1)];
              id v11 = result;
              ++v12;
            }
            else
            {
              id v11 = result;
            }
            --v14;
          }
          while (v14);
        }
      }
      else
      {
        uint64_t v15 = (((int)v6 - v9) % (int)v6);
        id v16 = [a1 subListWithInt:0 withInt:v15];
        id v17 = [a1 subListWithInt:v15 withInt:v6];
        JavaUtilCollections_reverseWithJavaUtilList_(v16);
        JavaUtilCollections_reverseWithJavaUtilList_(v17);
        return (id)JavaUtilCollections_reverseWithJavaUtilList_(a1);
      }
    }
  }
  return result;
}

uint64_t JavaUtilCollections_indexOfSubListWithJavaUtilList_withJavaUtilList_(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_30;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_30;
    }
  }
  unsigned int v4 = [a1 size];
  if (!a2) {
    goto LABEL_30;
  }
  int v5 = v4;
  signed int v6 = [a2 size];
  if (v6 > v5) {
    return 0xFFFFFFFFLL;
  }
  signed int v8 = v6;
  if (!v6) {
    return 0;
  }
  id v9 = [a2 getWithInt:0];
  uint64_t result = (uint64_t)[a1 indexOfWithId:v9];
  if (result == -1) {
    return result;
  }
  for (uint64_t i = result; ; uint64_t i = (i + 1))
  {
    uint64_t result = 0xFFFFFFFFLL;
    if (v5 <= (int)i || v5 - (int)i < v8) {
      return result;
    }
    id v11 = [a1 listIteratorWithInt:i];
    int v12 = v11;
    if (!v9) {
      break;
    }
    if (!v11) {
      goto LABEL_30;
    }
    if (objc_msgSend(v9, "isEqual:", objc_msgSend(v11, "next"))) {
      goto LABEL_18;
    }
LABEL_17:
    ;
  }
  if (!v11) {
    goto LABEL_30;
  }
  if ([v11 next]) {
    goto LABEL_17;
  }
LABEL_18:
  id v13 = [a2 listIteratorWithInt:1];
  if (!v13) {
LABEL_30:
  }
    JreThrowNullPointerException();
  int v14 = v13;
  if (![v13 hasNext]) {
    return i;
  }
  while (1)
  {
    id v15 = [v14 next];
    if (![v12 hasNext]) {
      return 0xFFFFFFFFLL;
    }
    id v16 = [v12 next];
    if (v15)
    {
      if (![v15 isEqual:v16]) {
        goto LABEL_17;
      }
    }
    else if (v16)
    {
      goto LABEL_17;
    }
    if (([v14 hasNext] & 1) == 0) {
      return i;
    }
  }
}

uint64_t JavaUtilCollections_lastIndexOfSubListWithJavaUtilList_withJavaUtilList_(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_32;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      goto LABEL_32;
    }
  }
  unsigned int v4 = [a2 size];
  if (!a1) {
    goto LABEL_32;
  }
  int v5 = v4;
  uint64_t result = (uint64_t)[a1 size];
  if (v5 > (int)result) {
    return 0xFFFFFFFFLL;
  }
  if (v5)
  {
    id v7 = [a2 getWithInt:(v5 - 1)];
    int v8 = [a1 lastIndexOfWithId:v7];
    uint64_t result = 0xFFFFFFFFLL;
    if ((v8 & 0x80000000) == 0 && v8 + 1 >= v5)
    {
      while (1)
      {
        id v9 = objc_msgSend(a1, "listIteratorWithInt:");
        uint64_t v10 = v9;
        if (v7)
        {
          if (!v9) {
            goto LABEL_32;
          }
          if (objc_msgSend(v7, "isEqual:", objc_msgSend(v9, "previous"))) {
            goto LABEL_19;
          }
        }
        else
        {
          if (!v9) {
            goto LABEL_32;
          }
          if (![v9 previous])
          {
LABEL_19:
            id v12 = [a2 listIteratorWithInt:(v5 - 1)];
            if (v12)
            {
              id v13 = v12;
              if ([v12 hasPrevious])
              {
                while (1)
                {
                  id v14 = [v13 previous];
                  if (![v10 hasPrevious]) {
                    return 0xFFFFFFFFLL;
                  }
                  id v15 = [v10 previous];
                  if (v14)
                  {
                    if (![v14 isEqual:v15]) {
                      goto LABEL_15;
                    }
                  }
                  else if (v15)
                  {
                    goto LABEL_15;
                  }
                  if (([v13 hasPrevious] & 1) == 0) {
                    goto LABEL_27;
                  }
                }
              }
              else
              {
LABEL_27:
                return (uint64_t)[v10 nextIndex];
              }
            }
LABEL_32:
            JreThrowNullPointerException();
          }
        }
LABEL_15:
        uint64_t result = 0xFFFFFFFFLL;
        if (v8 >= 1 && v8-- >= v5) {
          continue;
        }
        return result;
      }
    }
  }
  return result;
}

JavaUtilArrayList *JavaUtilCollections_listWithJavaUtilEnumeration_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = new_JavaUtilArrayList_init();
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v3 = v2;
  if ([a1 hasMoreElements])
  {
    do
      -[JavaUtilArrayList addWithId:](v3, "addWithId:", [a1 nextElement]);
    while (([a1 hasMoreElements] & 1) != 0);
  }
  return v3;
}

JavaUtilCollections_SynchronizedCollection *JavaUtilCollections_synchronizedCollectionWithJavaUtilCollection_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"collection == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  id v2 = [JavaUtilCollections_SynchronizedCollection alloc];
  JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_((uint64_t)v2, a1);
  return v2;
}

JavaUtilCollections_SynchronizedRandomAccessList *JavaUtilCollections_synchronizedListWithJavaUtilList_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_10:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"list == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_10;
  }
LABEL_3:
  if ([(id)JavaUtilRandomAccess_class_() isInstance:a1]) {
    id v2 = new_JavaUtilCollections_SynchronizedRandomAccessList_initWithJavaUtilList_(a1);
  }
  else {
    id v2 = (JavaUtilCollections_SynchronizedRandomAccessList *)new_JavaUtilCollections_SynchronizedList_initWithJavaUtilList_(a1);
  }
  return v2;
}

JavaUtilCollections_SynchronizedMap *JavaUtilCollections_synchronizedMapWithJavaUtilMap_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"map == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  id v2 = [JavaUtilCollections_SynchronizedMap alloc];
  JavaUtilCollections_SynchronizedMap_initWithJavaUtilMap_((uint64_t)v2, a1);
  return v2;
}

JavaUtilCollections_SynchronizedSet *JavaUtilCollections_synchronizedSetWithJavaUtilSet_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"set == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  id v2 = [JavaUtilCollections_SynchronizedSet alloc];
  JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_((uint64_t)v2, a1);
  return v2;
}

JavaUtilCollections_SynchronizedSortedMap *JavaUtilCollections_synchronizedSortedMapWithJavaUtilSortedMap_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"map == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  id v2 = new_JavaUtilCollections_SynchronizedSortedMap_initWithJavaUtilSortedMap_(a1);
  return v2;
}

JavaUtilCollections_SynchronizedSortedSet *JavaUtilCollections_synchronizedSortedSetWithJavaUtilSortedSet_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"set == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  id v2 = new_JavaUtilCollections_SynchronizedSortedSet_initWithJavaUtilSortedSet_(a1);
  return v2;
}

JavaUtilCollections_UnmodifiableCollection *JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"collection == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  if (([(id)JavaUtilCollection_class_() isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  id v2 = [JavaUtilCollections_UnmodifiableCollection alloc];
  JreStrongAssign((id *)&v2->c_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableRandomAccessList *JavaUtilCollections_unmodifiableListWithJavaUtilList_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_12:
    signed int v6 = new_JavaLangNullPointerException_initWithNSString_(@"list == null");
    objc_exception_throw(v6);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_12;
  }
LABEL_3:
  unsigned int v2 = [(id)JavaUtilRandomAccess_class_() isInstance:a1];
  unsigned __int8 v3 = [(id)JavaUtilList_class_() isInstance:a1];
  if (v2)
  {
    if (v3)
    {
      unsigned int v4 = sub_1001CCDC0(a1);
      goto LABEL_8;
    }
LABEL_13:
    JreThrowClassCastException();
  }
  if ((v3 & 1) == 0) {
    goto LABEL_13;
  }
  unsigned int v4 = (JavaUtilCollections_UnmodifiableRandomAccessList *)sub_1001CCE14(a1);
LABEL_8:
  return v4;
}

JavaUtilCollections_UnmodifiableMap *JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"map == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  if (([(id)JavaUtilMap_class_() isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  unsigned int v2 = [JavaUtilCollections_UnmodifiableMap alloc];
  JreStrongAssign((id *)&v2->m_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableSet *JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"set == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  if (([(id)JavaUtilSet_class_() isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  unsigned int v2 = [JavaUtilCollections_UnmodifiableSet alloc];
  JreStrongAssign((id *)&v2->super.c_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableSortedMap *JavaUtilCollections_unmodifiableSortedMapWithJavaUtilSortedMap_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"map == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  if (([(id)JavaUtilSortedMap_class_() isInstance:a1] & 1) == 0) {
    JreThrowClassCastException();
  }
  unsigned int v2 = sub_1001CCE68(a1);
  return v2;
}

JavaUtilCollections_UnmodifiableSortedSet *JavaUtilCollections_unmodifiableSortedSetWithJavaUtilSortedSet_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v4 = new_JavaLangNullPointerException_initWithNSString_(@"set == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  unsigned int v2 = sub_1001CCEBC(a1);
  return v2;
}

uint64_t JavaUtilCollections_frequencyWithJavaUtilCollection_withId_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_17:
    id v9 = new_JavaLangNullPointerException_initWithNSString_(@"c == null");
    objc_exception_throw(v9);
  }
  if (!a1) {
    goto LABEL_17;
  }
LABEL_3:
  if (([a1 isEmpty] & 1) == 0)
  {
    id v4 = [a1 iterator];
    if (!v4) {
      JreThrowNullPointerException();
    }
    int v5 = v4;
    if ([v4 hasNext])
    {
      uint64_t v6 = 0;
      while (1)
      {
        id v7 = [v5 next];
        if (!a2) {
          break;
        }
        if ([a2 isEqual:v7]) {
          goto LABEL_9;
        }
LABEL_10:
        if (([v5 hasNext] & 1) == 0) {
          return v6;
        }
      }
      if (v7) {
        goto LABEL_10;
      }
LABEL_9:
      uint64_t v6 = (v6 + 1);
      goto LABEL_10;
    }
  }
  return 0;
}

JavaUtilCollections_CheckedCollection *JavaUtilCollections_checkedCollectionWithJavaUtilCollection_withIOSClass_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [JavaUtilCollections_CheckedCollection alloc];
  sub_1001D298C((uint64_t)v4, a1, a2);
  return v4;
}

JavaUtilCollections_CheckedMap *JavaUtilCollections_checkedMapWithJavaUtilMap_withIOSClass_withIOSClass_(void *a1, void *a2, void *a3)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = [JavaUtilCollections_CheckedMap alloc];
  sub_1001D36C8((id *)&v6->super.isa, a1, a2, a3);
  return v6;
}

id *JavaUtilCollections_checkedListWithJavaUtilList_withIOSClass_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v4 = [(id)JavaUtilRandomAccess_class_() isInstance:a1];
  int v5 = off_1003F0F28;
  if (!v4) {
    int v5 = off_1003F0F20;
  }
  uint64_t v6 = (id *)objc_alloc(*v5);
  sub_1001D298C((uint64_t)v6, a1, a2);
  JreStrongAssign(v6 + 3, a1);
  return v6;
}

JavaUtilCollections_CheckedSet *JavaUtilCollections_checkedSetWithJavaUtilSet_withIOSClass_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v4 = [JavaUtilCollections_CheckedSet alloc];
  sub_1001D298C((uint64_t)v4, a1, a2);
  return v4;
}

JavaUtilCollections_CheckedSortedMap *JavaUtilCollections_checkedSortedMapWithJavaUtilSortedMap_withIOSClass_withIOSClass_(void *a1, void *a2, void *a3)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = sub_1001CD0F8(a1, a2, a3);
  return v6;
}

JavaUtilCollections_CheckedSortedSet *JavaUtilCollections_checkedSortedSetWithJavaUtilSortedSet_withIOSClass_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v4 = sub_1001CD160(a1, a2);
  return v4;
}

uint64_t JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_11;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      goto LABEL_11;
    }
  }
  if (*(int *)(a2 + 8) >= 1)
  {
    int v4 = 0;
    uint64_t v5 = 0;
    while (a1)
    {
      v4 |= [a1 addWithId:*(void *)(a2 + 24 + 8 * v5++)];
      if (v5 >= *(int *)(a2 + 8)) {
        return v4 & 1;
      }
    }
LABEL_11:
    JreThrowNullPointerException();
  }
  LOBYTE(v4) = 0;
  return v4 & 1;
}

uint64_t JavaUtilCollections_disjointWithJavaUtilCollection_withJavaUtilCollection_(void *a1, void *a2)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ([(id)JavaUtilSet_class_() isInstance:a1]
    && ![(id)JavaUtilSet_class_() isInstance:a2])
  {
    if (!a2) {
      goto LABEL_20;
    }
  }
  else
  {
    if (!a2 || (unsigned int v4 = [a2 size], !a1)) {
LABEL_20:
    }
      JreThrowNullPointerException();
    signed int v5 = v4;
    signed int v6 = [a1 size];
    if (v5 <= v6) {
      id v7 = a2;
    }
    else {
      id v7 = a1;
    }
    if (v5 <= v6) {
      a2 = a1;
    }
    a1 = v7;
  }
  id v8 = [a2 iterator];
  if (!v8) {
    goto LABEL_20;
  }
  id v9 = v8;
  do
  {
    unsigned int v10 = [v9 hasNext];
    if ((v10 & 1) == 0) {
      break;
    }
    if (!a1) {
      goto LABEL_20;
    }
  }
  while (!objc_msgSend(a1, "containsWithId:", objc_msgSend(v9, "next")));
  return v10 ^ 1;
}

void *JavaUtilCollections_checkTypeWithId_withIOSClass_(void *a1, void *a2)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (!a1) {
      return a1;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      return a1;
    }
  }
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (([a2 isInstance:a1] & 1) == 0)
  {
    [a1 getClass];
    CFStringRef v12 = JreStrcat("$@$@", v5, v6, v7, v8, v9, v10, v11, @"Attempt to insert element of type ");
    id v13 = new_JavaLangClassCastException_initWithNSString_((uint64_t)v12);
    objc_exception_throw(v13);
  }
  return a1;
}

JavaUtilCollections_SetFromMap *JavaUtilCollections_newSetFromMapWithJavaUtilMap_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  if (![a1 isEmpty])
  {
    unsigned int v4 = new_JavaLangIllegalArgumentException_initWithNSString_(@"map not empty");
    objc_exception_throw(v4);
  }
  unsigned int v2 = [JavaUtilCollections_SetFromMap alloc];
  sub_1001D202C((uint64_t)v2, a1);
  return v2;
}

JavaUtilCollections_AsLIFOQueue *JavaUtilCollections_asLifoQueueWithJavaUtilDeque_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = [JavaUtilCollections_AsLIFOQueue alloc];
  JavaUtilAbstractQueue_init(v2, v3);
  JreStrongAssign((id *)&v2->q_, a1);
  return v2;
}

uint64_t JavaUtilCollections_secondaryHashWithId_(void *a1)
{
  if (atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  int v2 = [a1 hash];
  return sub_1001CC9E4(v2);
}

uint64_t JavaUtilCollections_secondaryIdentityHashWithId_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v2 = JavaLangSystem_identityHashCodeWithId_(a1);
  return sub_1001CC9E4(v2);
}

uint64_t sub_1001CC9E4(int a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = 9 * ((((a1 << 15) ^ 0xFFFFCD7D) + a1) ^ ((((a1 << 15) ^ 0xFFFFCD7D) + a1) >> 10));
  return (16389 * (v2 ^ (v2 >> 6))) ^ ((16389 * (v2 ^ (v2 >> 6))) >> 16);
}

uint64_t JavaUtilCollections_roundUpToPowerOfTwoWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = (a1 - 1) | ((a1 - 1) >> 1) | (((a1 - 1) | ((a1 - 1) >> 1)) >> 2);
  unsigned int v3 = v2 | (v2 >> 4) | ((v2 | (v2 >> 4)) >> 8);
  return (v3 | HIWORD(v3)) + 1;
}

uint64_t JavaUtilCollections_reverseOrder()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilCollections_ReverseComparator__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return qword_100560C48;
}

JavaUtilCollections_SynchronizedRandomAccessList *new_JavaUtilCollections_SynchronizedRandomAccessList_initWithJavaUtilList_(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_SynchronizedRandomAccessList alloc];
  JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_((uint64_t)v2, a1);
  JreStrongAssign((id *)&v2->super.list_, a1);
  return v2;
}

JavaUtilCollections_SynchronizedList *new_JavaUtilCollections_SynchronizedList_initWithJavaUtilList_(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_SynchronizedList alloc];
  JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_((uint64_t)v2, a1);
  JreStrongAssign((id *)&v2->list_, a1);
  return v2;
}

JavaUtilCollections_SynchronizedSortedMap *new_JavaUtilCollections_SynchronizedSortedMap_initWithJavaUtilSortedMap_(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_SynchronizedSortedMap alloc];
  JavaUtilCollections_SynchronizedMap_initWithJavaUtilMap_((uint64_t)v2, a1);
  JreStrongAssign((id *)&v2->sm_, a1);
  return v2;
}

JavaUtilCollections_SynchronizedSortedSet *new_JavaUtilCollections_SynchronizedSortedSet_initWithJavaUtilSortedSet_(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_SynchronizedSortedSet alloc];
  JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_((uint64_t)v2, a1);
  JreStrongAssign((id *)&v2->ss_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableRandomAccessList *sub_1001CCDC0(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_UnmodifiableRandomAccessList alloc];
  JreStrongAssign((id *)&v2->super.super.c_, a1);
  JreStrongAssign((id *)&v2->super.list_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableList *sub_1001CCE14(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_UnmodifiableList alloc];
  JreStrongAssign((id *)&v2->super.c_, a1);
  JreStrongAssign((id *)&v2->list_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableSortedMap *sub_1001CCE68(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_UnmodifiableSortedMap alloc];
  JreStrongAssign((id *)&v2->super.m_, a1);
  JreStrongAssign((id *)&v2->sm_, a1);
  return v2;
}

JavaUtilCollections_UnmodifiableSortedSet *sub_1001CCEBC(void *a1)
{
  unsigned int v2 = [JavaUtilCollections_UnmodifiableSortedSet alloc];
  JreStrongAssign((id *)&v2->super.super.c_, a1);
  JreStrongAssign((id *)&v2->ss_, a1);
  return v2;
}

uint64_t JavaUtilCollections_emptyList()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaUtilCollections_EMPTY_LIST_;
}

uint64_t JavaUtilCollections_emptySet()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaUtilCollections_EMPTY_SET_;
}

uint64_t JavaUtilCollections_emptyMap()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaUtilCollections_EMPTY_MAP_;
}

uint64_t JavaUtilCollections_emptyEnumeration()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = qword_100560C40;
  uint64_t v1 = (void *)JavaUtilEnumeration_class_();
  if (v0 && ([v1 isInstance:v0] & 1) == 0) {
    JreThrowClassCastException();
  }
  return v0;
}

uint64_t JavaUtilCollections_emptyIterator()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = qword_100560C38;
  uint64_t v1 = (void *)JavaUtilIterator_class_();
  if (v0 && ([v1 isInstance:v0] & 1) == 0) {
    JreThrowClassCastException();
  }
  return v0;
}

id JavaUtilCollections_emptyListIterator()
{
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaUtilCollections__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)JavaUtilCollections_EMPTY_LIST_;
  if (!JavaUtilCollections_EMPTY_LIST_) {
    JreThrowNullPointerException();
  }
  return [v0 listIterator];
}

JavaUtilCollections_CheckedSortedMap *sub_1001CD0F8(void *a1, void *a2, void *a3)
{
  uint64_t v6 = [JavaUtilCollections_CheckedSortedMap alloc];
  sub_1001D36C8((id *)&v6->super.super.isa, a1, a2, a3);
  JreStrongAssign((id *)&v6->sm_, a1);
  return v6;
}

JavaUtilCollections_CheckedSortedSet *sub_1001CD160(void *a1, void *a2)
{
  unsigned int v4 = [JavaUtilCollections_CheckedSortedSet alloc];
  sub_1001D298C((uint64_t)v4, a1, a2);
  JreStrongAssign((id *)&v4->ss_, a1);
  return v4;
}

id sub_1001CD1F0(uint64_t a1, uint64_t a2, void *a3)
{
  int v4 = a2;
  JavaUtilAbstractList_init(a1, a2);
  if (v4 < 0)
  {
    CFStringRef v14 = JreStrcat("$I", v6, v7, v8, v9, v10, v11, v12, @"length < 0: ");
    id v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
    objc_exception_throw(v15);
  }
  *(_DWORD *)(a1 + 12) = v4;
  return JreStrongAssign((id *)(a1 + 16), a3);
}

id sub_1001CDBC4(uint64_t a1, void *a2, void *a3)
{
  JavaUtilAbstractMap_init(a1, a2);
  JreStrongAssign((id *)(a1 + 24), a2);
  return JreStrongAssign((id *)(a1 + 32), a3);
}

void *JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_(uint64_t a1, void *a2)
{
  JreStrongAssign((id *)(a1 + 8), a2);
  id v3 = objc_alloc((Class)NSObject);
  return JreStrongAssignAndConsume((id *)(a1 + 16), v3);
}

void sub_1001CE1F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE26C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE2D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE348(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE3BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE4F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE56C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE5E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE6A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE70C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CE7E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilCollections_SynchronizedCollection *new_JavaUtilCollections_SynchronizedCollection_initWithJavaUtilCollection_withId_(void *a1, void *a2)
{
  int v4 = [JavaUtilCollections_SynchronizedCollection alloc];
  JreStrongAssign((id *)&v4->c_, a1);
  JreStrongAssign(&v4->mutex_, a2);
  return v4;
}

id JavaUtilCollections_SynchronizedList_initWithJavaUtilList_withId_(id *a1, void *a2, void *a3)
{
  JreStrongAssign(a1 + 1, a2);
  JreStrongAssign(a1 + 2, a3);
  return JreStrongAssign(a1 + 3, a2);
}

void sub_1001CEA10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEB10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEB8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CED74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEEC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEF34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CEFB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF02C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF0B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF1C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF3E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *JavaUtilCollections_SynchronizedMap_initWithJavaUtilMap_(uint64_t a1, void *a2)
{
  JreStrongAssign((id *)(a1 + 16), a2);
  id v3 = objc_alloc((Class)NSObject);
  return JreStrongAssignAndConsume((id *)(a1 + 8), v3);
}

void sub_1001CF55C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF5D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF6B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilCollections_SynchronizedSet *new_JavaUtilCollections_SynchronizedSet_initWithJavaUtilSet_withId_(void *a1, void *a2)
{
  int v4 = [JavaUtilCollections_SynchronizedSet alloc];
  JreStrongAssign((id *)&v4->super.c_, a1);
  JreStrongAssign(&v4->super.mutex_, a2);
  return v4;
}

void sub_1001CF780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF8BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CF9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFA20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFAF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFB68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFBCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFC34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFD74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFDD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001CFE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaUtilCollections_SynchronizedSortedMap_initWithJavaUtilSortedMap_withId_(id *a1, void *a2, void *a3)
{
  JreStrongAssign(a1 + 2, a2);
  JreStrongAssign(a1 + 1, a3);
  return JreStrongAssign(a1 + 3, a2);
}

void sub_1001CFFA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D000C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D00B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D0120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D01D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D0278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D02E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaUtilCollections_SynchronizedSortedSet_initWithJavaUtilSortedSet_withId_(id *a1, void *a2, void *a3)
{
  JreStrongAssign(a1 + 1, a2);
  JreStrongAssign(a1 + 2, a3);
  return JreStrongAssign(a1 + 3, a2);
}

void sub_1001D0484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D04F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D0598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D0604(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D06B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D075C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D07C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1001D202C(uint64_t a1, void *a2)
{
  JavaUtilAbstractSet_init(a1, a2);
  JreStrongAssign((id *)(a1 + 8), a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v4 = [a2 keySet];
  return JreStrongAssign((id *)(a1 + 16), v4);
}

id sub_1001D298C(uint64_t a1, void *a2, void *a3)
{
  if (!a2)
  {
    CFStringRef v6 = @"c == null";
    goto LABEL_8;
  }
  if (!a3)
  {
    CFStringRef v6 = @"type == null";
LABEL_8:
    uint64_t v7 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v6);
    objc_exception_throw(v7);
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  return JreStrongAssign((id *)(a1 + 16), a3);
}

JavaUtilCollections_CheckedListIterator *sub_1001D2B10(void *a1, void *a2)
{
  id v4 = [JavaUtilCollections_CheckedListIterator alloc];
  JreStrongAssign((id *)&v4->i_, a1);
  JreStrongAssign((id *)&v4->type_, a2);
  return v4;
}

id sub_1001D36C8(id *a1, void *a2, void *a3, void *a4)
{
  if (!a2)
  {
    CFStringRef v8 = @"m == null";
    goto LABEL_10;
  }
  if (!a3)
  {
    CFStringRef v8 = @"keyType == null";
    goto LABEL_10;
  }
  if (!a4)
  {
    CFStringRef v8 = @"valueType == null";
LABEL_10:
    uint64_t v9 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v8);
    objc_exception_throw(v9);
  }
  JreStrongAssign(a1 + 1, a2);
  JreStrongAssign(a1 + 2, a3);
  return JreStrongAssign(a1 + 3, a4);
}

id sub_1001D3CA0(uint64_t a1, void *a2, void *a3)
{
  if (!a2)
  {
    CFStringRef v6 = new_JavaLangNullPointerException_initWithNSString_(@"e == null");
    objc_exception_throw(v6);
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  return JreStrongAssign((id *)(a1 + 16), a3);
}

id sub_1001D4A4C(uint64_t a1, void *a2)
{
  JreStrongAssign((id *)(a1 + 16), a2);
  id v3 = *(void **)(a1 + 16);
  if (!v3) {
    JreThrowNullPointerException();
  }
  id v4 = [v3 iterator];
  return JreStrongAssign((id *)(a1 + 8), v4);
}

id OrgXmlSaxSAXParseException_initWithNSString_withOrgXmlSaxLocator_(uint64_t a1, uint64_t a2, void *a3)
{
  OrgXmlSaxSAXException_initWithNSString_(a1, a2);
  if (a3)
  {
    id v5 = [a3 getPublicId];
    id v6 = [a3 getSystemId];
    unsigned int v7 = [a3 getLineNumber];
    unsigned int v8 = [a3 getColumnNumber];
  }
  else
  {
    id v5 = 0;
    id v6 = 0;
    unsigned int v7 = -1;
    unsigned int v8 = -1;
  }
  JreStrongAssign((id *)(a1 + 96), v5);
  id result = JreStrongAssign((id *)(a1 + 104), v6);
  *(_DWORD *)(a1 + 112) = v7;
  *(_DWORD *)(a1 + 116) = v8;
  return result;
}

id OrgXmlSaxSAXParseException_initWithNSString_withOrgXmlSaxLocator_withJavaLangException_(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  OrgXmlSaxSAXException_initWithNSString_withJavaLangException_(a1, a2, a4);
  if (a3)
  {
    id v6 = [a3 getPublicId];
    id v7 = [a3 getSystemId];
    unsigned int v8 = [a3 getLineNumber];
    unsigned int v9 = [a3 getColumnNumber];
  }
  else
  {
    id v6 = 0;
    id v7 = 0;
    unsigned int v8 = -1;
    unsigned int v9 = -1;
  }
  JreStrongAssign((id *)(a1 + 96), v6);
  id result = JreStrongAssign((id *)(a1 + 104), v7);
  *(_DWORD *)(a1 + 112) = v8;
  *(_DWORD *)(a1 + 116) = v9;
  return result;
}

id OrgXmlSaxSAXParseException_initWithNSString_withNSString_withNSString_withInt_withInt_(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, int a6)
{
  OrgXmlSaxSAXException_initWithNSString_(a1, a2);
  JreStrongAssign((id *)(a1 + 96), a3);
  id result = JreStrongAssign((id *)(a1 + 104), a4);
  *(_DWORD *)(a1 + 112) = a5;
  *(_DWORD *)(a1 + 116) = a6;
  return result;
}

id OrgXmlSaxSAXParseException_initWithNSString_withNSString_withNSString_withInt_withInt_withJavaLangException_(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, int a6, void *a7)
{
  OrgXmlSaxSAXException_initWithNSString_withJavaLangException_(a1, a2, a7);
  JreStrongAssign((id *)(a1 + 96), a3);
  id result = JreStrongAssign((id *)(a1 + 104), a4);
  *(_DWORD *)(a1 + 112) = a5;
  *(_DWORD *)(a1 + 116) = a6;
  return result;
}

OrgXmlSaxSAXParseException *new_OrgXmlSaxSAXParseException_initWithNSString_withOrgXmlSaxLocator_(uint64_t a1, void *a2)
{
  id v4 = [OrgXmlSaxSAXParseException alloc];
  OrgXmlSaxSAXParseException_initWithNSString_withOrgXmlSaxLocator_((uint64_t)v4, a1, a2);
  return v4;
}

OrgXmlSaxSAXParseException *new_OrgXmlSaxSAXParseException_initWithNSString_withNSString_withNSString_withInt_withInt_(uint64_t a1, void *a2, void *a3, int a4, int a5)
{
  uint64_t v10 = [OrgXmlSaxSAXParseException alloc];
  OrgXmlSaxSAXParseException_initWithNSString_withNSString_withNSString_withInt_withInt_((uint64_t)v10, a1, a2, a3, a4, a5);
  return v10;
}

uint64_t JavaLangReflectConstructor_class_()
{
  if (qword_100560C58 != -1) {
    dispatch_once(&qword_100560C58, &stru_10042D230);
  }
  return qword_100560C50;
}

void sub_1001D5670(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560C50 = IOSClass_fromClass(v1);
}

id JavaUtilEventObject_initWithId_(uint64_t a1, void *a2)
{
  if (!a2)
  {
    id v5 = new_JavaLangIllegalArgumentException_initWithNSString_(@"source == null");
    objc_exception_throw(v5);
  }
  id v3 = (id *)(a1 + 8);
  return JreStrongAssign(v3, a2);
}

id JavaNetInetAddress_initWithInt_withByteArray_withNSString_(uint64_t a1, int a2, void *a3, void *a4)
{
  *(_DWORD *)(a1 + 24) = a2;
  JreStrongAssign((id *)(a1 + 8), a3);
  return JreStrongAssign((id *)(a1 + 16), a4);
}

id JavaNetInetAddress_getAllByNameWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = sub_1001D5A64(a1);
  if (!v2) {
    JreThrowNullPointerException();
  }
  return [(IOSArray *)v2 clone];
}

IOSObjectArray *sub_1001D5A64(void *a1)
{
  if (atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire))
  {
    if (!a1)
    {
LABEL_4:
      return +[JavaNetInetAddress loopbackAddresses]_0();
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_4;
    }
  }
  if ([a1 isEmpty]) {
    goto LABEL_4;
  }
  uint64_t v3 = sub_1001D5D60(a1);
  if (v3)
  {
    id v4 = sub_1001D5C84(a1, v3);
    if (!v4)
    {
      CFStringRef v13 = JreStrcat("$$", v5, v6, v7, v8, v9, v10, v11, @"Deprecated IPv4 address format: ");
      CFStringRef v14 = new_JavaNetUnknownHostException_initWithNSString_((uint64_t)v13);
      objc_exception_throw(v14);
    }
    id v15 = v4;
    return +[IOSObjectArray arrayWithObjects:&v15 count:1 type:JavaNetInetAddress_class_()];
  }
  else
  {
    uint64_t v12 = (void *)sub_1001D61CC(a1);
    if (!v12) {
      JreThrowNullPointerException();
    }
    return (IOSObjectArray *)[v12 clone];
  }
}

id sub_1001D5BDC(_DWORD *a1, void *a2)
{
  if (atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_11:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_11;
  }
LABEL_3:
  int v4 = a1[2];
  if (v4 == 16)
  {
    uint64_t v5 = new_JavaNetInet6Address_initWithByteArray_withNSString_withInt_(a1, a2, 0);
  }
  else
  {
    if (v4 != 4) {
      sub_1001D6C5C((uint64_t)a1);
    }
    uint64_t v5 = new_JavaNetInet4Address_initWithByteArray_withNSString_(a1, a2);
  }
  return v5;
}

id sub_1001D5C84(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return (id)a2;
  }
  if (!a1) {
    goto LABEL_13;
  }
  if ([a1 indexOf:58] != -1) {
    return (id)a2;
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v5 = (void *)LibcoreIoLibcore_os_;
  if (!LibcoreIoLibcore_os_) {
LABEL_13:
  }
    JreThrowNullPointerException();
  return objc_msgSend(v5, "inet_ptonWithInt:withNSString:", 2, a1);
}

uint64_t sub_1001D5D60(void *a1)
{
  id v1 = a1;
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (v1) {
      goto LABEL_3;
    }
LABEL_14:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_14;
  }
LABEL_3:
  if ([v1 hasPrefix:@"["]
    && [v1 hasSuffix:@"]"]
    && [v1 indexOf:58] != -1)
  {
    id v1 = objc_msgSend(v1, "substring:endIndex:", 1, objc_msgSend(v1, "length") - 1);
  }
  uint64_t v2 = new_LibcoreIoStructAddrinfo_init();
  v2->ai_flags_ = 4;
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = (unsigned int *)[(id)LibcoreIoLibcore_os_ getaddrinfoWithNSString:v1 withLibcoreIoStructAddrinfo:v2];
  int v4 = v3;
  if (!v3) {
    return 0;
  }
  uint64_t v5 = v3[2];
  if ((int)v5 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v5, 0);
  }
  return *((void *)v4 + 3);
}

IOSClass *JavaNetInetAddress_getByNameWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = sub_1001D5A64(a1);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  uint64_t size = v2->super.size_;
  if ((int)size <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(size, 0);
  }
  return v3->elementType_;
}

id sub_1001D6044(uint64_t a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id ThreadPolicy = DalvikSystemBlockGuard_getThreadPolicy();
  if (!ThreadPolicy) {
    JreThrowNullPointerException();
  }
  [ThreadPolicy onNetwork];
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_
    || (id v3 = [(id)LibcoreIoLibcore_os_ getnameinfoWithJavaNetInetAddress:a1 withInt:4], !a1)
    || (int v4 = v3, (v5 = *(void **)(a1 + 8)) == 0))
  {
    JreThrowNullPointerException();
  }
  return sub_1001D5BDC([v5 clone], v4);
}

void sub_1001D6120(_Unwind_Exception *a1)
{
}

uint64_t sub_1001D61CC(void *a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id ThreadPolicy = DalvikSystemBlockGuard_getThreadPolicy();
  if (!ThreadPolicy || ([ThreadPolicy onNetwork], !qword_100560C60)) {
    JreThrowNullPointerException();
  }
  id v3 = [(id)qword_100560C60 getWithNSString:a1];
  if (v3)
  {
    uint64_t v4 = (uint64_t)v3;
    uint64_t v5 = JavaNetInetAddress_class_();
    if (!objc_msgSend((id)IOSClass_arrayType(v5, 1u), "isInstance:", v4))
    {
      objc_opt_class();
      uint64_t v12 = sub_1000BC6CC(v4);
      CFStringRef v13 = new_JavaNetUnknownHostException_initWithNSString_(v12);
      objc_exception_throw(v13);
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
  }
  else
  {
    uint64_t v6 = new_LibcoreIoStructAddrinfo_init();
    v6->ai_flags_ = 1024;
    v6->ai_family_ = 0;
    v6->ai_socktype_ = 1;
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    uint64_t v7 = (char *)[(id)LibcoreIoLibcore_os_ getaddrinfoWithNSString:a1 withLibcoreIoStructAddrinfo:v6];
    uint64_t v4 = (uint64_t)v7;
    if (!v7) {
      JreThrowNullPointerException();
    }
    uint64_t v8 = (uint64_t *)(v7 + 24);
    unint64_t v9 = (unint64_t)&v7[8 * *((int *)v7 + 2) + 24];
    while ((unint64_t)v8 < v9)
    {
      uint64_t v10 = *v8;
      if (!*v8) {
        JreThrowNullPointerException();
      }
      ++v8;
      JreStrongAssign((id *)(v10 + 16), a1);
    }
    [(id)qword_100560C60 putWithNSString:a1 withJavaNetInetAddressArray:v4];
  }
  return v4;
}

#error "1001D64B0: call analysis failed (funcsize=71)"

void sub_1001D64FC()
{
}

uint64_t JavaNetInetAddress_isNumericWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t result = sub_1001D5D60(a1);
  if (result) {
    return sub_1001D5C84(a1, result) != 0;
  }
  return result;
}

id JavaNetInetAddress_parseNumericAddressWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire))
  {
    if (!a1)
    {
LABEL_4:
      if ((atomic_load_explicit(JavaNetInet6Address__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      return (id)JavaNetInet6Address_LOOPBACK_;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_4;
    }
  }
  if ([a1 isEmpty]) {
    goto LABEL_4;
  }
  uint64_t v3 = sub_1001D5D60(a1);
  id result = sub_1001D5C84(a1, v3);
  if (!result)
  {
    CFStringRef v11 = JreStrcat("$$", v4, v5, v6, v7, v8, v9, v10, @"Not a numeric address: ");
    uint64_t v12 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v11);
    objc_exception_throw(v12);
  }
  return result;
}

uint64_t sub_1001D6958(uint64_t a1, JavaNetInet6Address *a2, int a3)
{
  id v6 = LibcoreIoIoBridge_socketWithBoolean_(1);
  uint64_t v7 = v6;
  if (a2) {
    LibcoreIoIoBridge_bindWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_((uint64_t)v6, a2, 0);
  }
  LibcoreIoIoBridge_connectWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_withInt_((uint64_t)v7, a1, 7, a3);
  LibcoreIoIoBridge_closeSocketWithJavaIoFileDescriptor_(v7);
  return 1;
}

id JavaNetInetAddress_getByAddressWithByteArray_(_DWORD *a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaNetInetAddress_getByAddressWithNSString_withByteArray_withInt_(0, a1, 0);
}

id JavaNetInetAddress_getByAddressWithNSString_withByteArray_(void *a1, _DWORD *a2)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaNetInetAddress_getByAddressWithNSString_withByteArray_withInt_(a1, a2, 0);
}

id JavaNetInetAddress_getByAddressWithNSString_withByteArray_withInt_(void *a1, _DWORD *a2, int a3)
{
  if (atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire))
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v10 = new_JavaNetUnknownHostException_initWithNSString_(@"ipAddress == null");
    objc_exception_throw(v10);
  }
  objc_opt_class();
  if (!a2) {
    goto LABEL_14;
  }
LABEL_3:
  int v6 = a2[2];
  if (v6 != 16)
  {
    if (v6 != 4) {
      sub_1001D6C5C((uint64_t)a2);
    }
    uint64_t v7 = (IOSByteArray *)[a2 clone];
    goto LABEL_8;
  }
  if (sub_1001D6CC8((uint64_t)a2))
  {
    uint64_t v7 = sub_1001D6DE4((uint64_t)a2);
LABEL_8:
    uint64_t v8 = new_JavaNetInet4Address_initWithByteArray_withNSString_(v7, a1);
    goto LABEL_10;
  }
  uint64_t v8 = new_JavaNetInet6Address_initWithByteArray_withNSString_withInt_([a2 clone], a1, a3);
LABEL_10:
  return v8;
}

void sub_1001D6C5C(uint64_t a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JavaUtilArrays_toStringWithByteArray_(a1);
  CFStringRef v9 = JreStrcat("$$", v2, v3, v4, v5, v6, v7, v8, @"Address is neither 4 or 16 bytes: ");
  uint64_t v10 = new_JavaNetUnknownHostException_initWithNSString_((uint64_t)v9);
  objc_exception_throw(v10);
}

BOOL sub_1001D6CC8(uint64_t a1)
{
  if (atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire))
  {
    if (!a1) {
      return 0;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      return 0;
    }
  }
  if (*(_DWORD *)(a1 + 8) == 16)
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(int *)(a1 + 8);
      if (v2 >= v3) {
        IOSArray_throwOutOfBoundsWithMsg(v3, v2);
      }
      if (*(unsigned char *)(a1 + 12 + v2)) {
        break;
      }
      if (++v2 == 10)
      {
        uint64_t v4 = *(unsigned int *)(a1 + 8);
        if ((int)v4 <= 10) {
          IOSArray_throwOutOfBoundsWithMsg(v4, 10);
        }
        if (*(unsigned __int8 *)(a1 + 22) == 255)
        {
          uint64_t v6 = *(unsigned int *)(a1 + 8);
          if ((int)v6 <= 11) {
            IOSArray_throwOutOfBoundsWithMsg(v6, 11);
          }
          return *(unsigned __int8 *)(a1 + 23) == 255;
        }
        return 0;
      }
    }
  }
  return 0;
}

void sub_1001D6DD4()
{
}

IOSByteArray *sub_1001D6DE4(uint64_t a1)
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = +[IOSByteArray arrayWithLength:4];
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  for (uint64_t i = 0; i != 4; ++i)
  {
    uint64_t v5 = *(int *)(a1 + 8);
    if (i + 12 >= v5) {
      IOSArray_throwOutOfBoundsWithMsg(v5, (i + 12));
    }
    uint64_t size = v3->super.size_;
    if (i >= size) {
      IOSArray_throwOutOfBoundsWithMsg(size, i);
    }
    *((unsigned char *)&v3->super.size_ + i + 4) = *(unsigned char *)(a1 + 24 + i);
  }
  return v3;
}

JavaNetInetAddress *new_JavaNetInetAddress_initWithInt_withByteArray_withNSString_(int a1, void *a2, void *a3)
{
  uint64_t v6 = [JavaNetInetAddress alloc];
  v6->family_ = a1;
  JreStrongAssign((id *)&v6->ipaddress_, a2);
  JreStrongAssign((id *)&v6->hostName_, a3);
  return v6;
}

uint64_t JavaNetInetAddress_getLocalHost()
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_ || (uint64_t v0 = (void **)[(id)LibcoreIoLibcore_os_ uname]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v1 = sub_1001D61CC(v0[2]);
  uint64_t v2 = v1;
  if (!v1) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = *(unsigned int *)(v1 + 8);
  if ((int)v3 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v3, 0);
  }
  return *(void *)(v2 + 24);
}

void sub_1001D73E0(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);
    uint64_t v3 = sub_1001D61CC(@"127.0.0.1");
    if (qword_100560C60)
    {
      [(id)qword_100560C60 putWithNSString:v2 withJavaNetInetAddressArray:v3];
      if (v3)
      {
        uint64_t v4 = *(unsigned int *)(v3 + 8);
        if ((int)v4 > 0)
        {
          objc_end_catch();
          JUMPOUT(0x1001D7394);
        }
        IOSArray_throwOutOfBoundsWithMsg(v4, 0);
      }
    }
    JreThrowNullPointerException();
  }
  _Unwind_Resume(exception_object);
}

void sub_1001D748C()
{
}

id JavaNetInetAddress_clearDnsCache()
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)qword_100560C60;
  if (!qword_100560C60) {
    JreThrowNullPointerException();
  }
  return [v0 clear];
}

uint64_t JavaNetInetAddress_getLoopbackAddress()
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaNetInet6Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaNetInet6Address_LOOPBACK_;
}

uint64_t JavaNetInetAddress_class_()
{
  if ((atomic_load_explicit(JavaNetInetAddress__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560C78 != -1) {
    dispatch_once(&qword_100560C78, &stru_10042DE58);
  }
  return qword_100560C70;
}

void sub_1001D75B8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560C70 = IOSClass_fromClass(v1);
}

id sub_1001D76E8(uint64_t a1, void *a2, void *a3, void *a4, int a5, void *a6, void *a7)
{
  JreStrongAssign((id *)(a1 + 104), a2);
  JreStrongAssign((id *)(a1 + 112), a3);
  JreStrongAssign((id *)(a1 + 120), a4);
  *(_DWORD *)(a1 + 128) = a5;
  JreStrongAssign((id *)(a1 + 136), a6);
  JreStrongAssign((id *)(a1 + 144), a7);
  return JavaLangThread_init(a1);
}

JavaNioChannelsCancelledKeyException *new_JavaNioChannelsCancelledKeyException_init()
{
  uint64_t v0 = [JavaNioChannelsCancelledKeyException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

void sub_1001D7BD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D7D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D7DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaLangRefReferenceQueue_addWithJavaLangRefReference_(unint64_t *a1)
{
  if ((atomic_load_explicit(JavaLangRefReferenceQueue__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)JavaLangRefReferenceQueue_class_();
  objc_sync_enter(v2);
  if (JavaLangRefReferenceQueue_unenqueued_)
  {
    uint64_t v3 = (void *)atomic_load((unint64_t *)(JavaLangRefReferenceQueue_unenqueued_ + 32));
    if (!a1) {
      JreThrowNullPointerException();
    }
    uint64_t v4 = (atomic_ullong *)(JavaLangRefReferenceQueue_unenqueued_ + 32);
    uint64_t v5 = (void *)atomic_load(a1 + 4);
    JreVolatileStrongAssign(v4, v5);
    JreVolatileStrongAssign((atomic_ullong *)a1 + 4, v3);
  }
  else
  {
    JreStrongAssign((id *)&JavaLangRefReferenceQueue_unenqueued_, a1);
  }
  [(id)JavaLangRefReferenceQueue_class_() notifyAll];
  return objc_sync_exit(v2);
}

void sub_1001D7EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaLangRefReferenceQueue *new_JavaLangRefReferenceQueue_init()
{
  uint64_t v0 = [JavaLangRefReferenceQueue alloc];
  uint64_t v1 = new_JavaLangRefWeakReference_initWithId_withJavaLangRefReferenceQueue_(0, 0);
  JreStrongAssignAndConsume((id *)&v0->SENTINEL_, v1);
  return v0;
}

uint64_t JavaLangRefReferenceQueue_class_()
{
  if ((atomic_load_explicit(JavaLangRefReferenceQueue__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560C88 != -1) {
    dispatch_once(&qword_100560C88, &stru_10042E2E0);
  }
  return qword_100560C80;
}

void sub_1001D8034(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560C80 = IOSClass_fromClass(v1);
}

JavaUtilCurrency *JavaUtilCurrency_getInstanceWithNSString_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCurrency__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)qword_100560C90;
  objc_sync_enter((id)qword_100560C90);
  if (!qword_100560C90) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = (JavaUtilCurrency *)[(id)qword_100560C90 getWithId:a1];
  if (!v3)
  {
    uint64_t v4 = [JavaUtilCurrency alloc];
    JreStrongAssign((id *)&v4->currencyCode_, a1);
    uint64_t v3 = v4;
    [(id)qword_100560C90 putWithId:a1 withId:v3];
  }
  objc_sync_exit(v2);
  return v3;
}

void sub_1001D8154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilCurrency *JavaUtilCurrency_getInstanceWithJavaUtilLocale_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCurrency__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)qword_100560C98;
  objc_sync_enter((id)qword_100560C98);
  if (!qword_100560C98) {
    JreThrowNullPointerException();
  }
  InstanceWithNSString = (JavaUtilCurrency *)[(id)qword_100560C98 getWithId:a1];
  if (!InstanceWithNSString)
  {
    if (!a1) {
      JreThrowNullPointerException();
    }
    id v4 = [a1 getCountry];
    id v5 = [a1 getVariant];
    uint64_t v6 = v5;
    if (!v5) {
      JreThrowNullPointerException();
    }
    if (([v5 isEmpty] & 1) == 0
      && (([v6 isEqual:@"EURO"] & 1) != 0
       || ([v6 isEqual:@"HK"] & 1) != 0
       || [v6 isEqual:@"PREEURO"]))
    {
      JreStrcat("$C$", v7, v8, v9, v10, v11, v12, v13, v4);
    }
    id CurrencyCodeWithNSString = LibcoreIcuICU_getCurrencyCodeWithNSString_((uint64_t)[a1 description]);
    uint64_t v22 = CurrencyCodeWithNSString;
    if (!CurrencyCodeWithNSString)
    {
      CFStringRef v24 = JreStrcat("$@", v15, v16, v17, v18, v19, v20, v21, @"Unsupported ISO 3166 country: ");
      unint64_t v25 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v24);
      objc_exception_throw(v25);
    }
    if ([CurrencyCodeWithNSString isEqual:@"XXX"])
    {
      InstanceWithNSString = 0;
    }
    else
    {
      InstanceWithNSString = JavaUtilCurrency_getInstanceWithNSString_(v22);
      [(id)qword_100560C98 putWithId:a1 withId:InstanceWithNSString];
    }
  }
  objc_sync_exit(v2);
  return InstanceWithNSString;
}

void sub_1001D8308(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilLinkedHashSet *JavaUtilCurrency_getAvailableCurrencies()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCurrency__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = new_JavaUtilLinkedHashSet_init();
  AvailableCurrencyCodes = LibcoreIcuICU_getAvailableCurrencyCodes();
  if (!AvailableCurrencyCodes) {
    JreThrowNullPointerException();
  }
  p_elementTypuint64_t e = (void **)&AvailableCurrencyCodes->elementType_;
  unint64_t v3 = (unint64_t)&(&AvailableCurrencyCodes->elementType_)[AvailableCurrencyCodes->super.size_];
  while ((unint64_t)p_elementType < v3)
  {
    id v4 = *p_elementType++;
    [(JavaUtilHashSet *)v0 addWithId:JavaUtilCurrency_getInstanceWithNSString_(v4)];
  }
  return v0;
}

void *JavaIoReader_init(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 8);
  id v2 = objc_alloc((Class)NSObject);
  return JreStrongAssignAndConsume(v1, v2);
}

id JavaIoReader_initWithId_(uint64_t a1, void *a2)
{
  if (!a2)
  {
    id v5 = new_JavaLangNullPointerException_initWithNSString_(@"lock == null");
    objc_exception_throw(v5);
  }
  unint64_t v3 = (id *)(a1 + 8);
  return JreStrongAssign(v3, a2);
}

void sub_1001D87EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001D8968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaLangStringIndexOutOfBoundsException_initWithNSString_withInt_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  [a2 length];
  CFStringRef v10 = JreStrcat("$I$I", v3, v4, v5, v6, v7, v8, v9, @"length=");
  return JavaLangIndexOutOfBoundsException_initWithNSString_(a1, v10);
}

uint64_t JavaLangStringIndexOutOfBoundsException_initWithNSString_withInt_withInt_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  [a2 length];
  CFStringRef v10 = JreStrcat("$I$I$I", v3, v4, v5, v6, v7, v8, v9, @"length=");
  return JavaLangIndexOutOfBoundsException_initWithNSString_(a1, v10);
}

JavaLangStringIndexOutOfBoundsException *new_JavaLangStringIndexOutOfBoundsException_initWithNSString_withInt_withInt_(void *a1)
{
  uint64_t v2 = [JavaLangStringIndexOutOfBoundsException alloc];
  JavaLangStringIndexOutOfBoundsException_initWithNSString_withInt_withInt_((uint64_t)v2, a1);
  return v2;
}

id JavaBeansPropertyChangeSupport_initWithId_(uint64_t a1, void *a2)
{
  uint64_t v4 = (id *)(a1 + 16);
  uint64_t v5 = new_JavaUtilConcurrentCopyOnWriteArrayList_init();
  JreStrongAssignAndConsume(v4, v5);
  if (!a2)
  {
    uint64_t v7 = new_JavaLangNullPointerException_initWithNSString_(@"sourceBean == null");
    objc_exception_throw(v7);
  }
  return JreStrongAssign((id *)(a1 + 8), a2);
}

uint64_t sub_1001D9008(id a1, id a2, id a3)
{
  while (1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      break;
    }
    objc_opt_class();
    if (!a3) {
      goto LABEL_17;
    }
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_16;
    }
    id v6 = [a3 getPropertyName];
    a3 = [a3 getListener];
    if (!a1)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        return 0;
      }
      objc_opt_class();
      if (!a2) {
LABEL_17:
      }
        JreThrowNullPointerException();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_16:
      }
        JreThrowClassCastException();
      a1 = [a2 getPropertyName];
      a2 = [a2 getListener];
    }
    char v7 = LibcoreUtilObjects_equalWithId_withId_((uint64_t)a1, (uint64_t)v6);
    a1 = 0;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  if (a1) {
    return 0;
  }
  return LibcoreUtilObjects_equalWithId_withId_((uint64_t)a2, (uint64_t)a3);
}

JavaBeansPropertyChangeSupport *new_JavaBeansPropertyChangeSupport_initWithId_(void *a1)
{
  uint64_t v2 = [JavaBeansPropertyChangeSupport alloc];
  JavaBeansPropertyChangeSupport_initWithId_((uint64_t)v2, a1);
  return v2;
}

uint64_t JavaUtilSet_class_()
{
  if (qword_100560CB0 != -1) {
    dispatch_once(&qword_100560CB0, &stru_10042F3A0);
  }
  return qword_100560CA8;
}

void sub_1001DA12C(id a1)
{
  qword_100560CA8 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilSet);
}

void Java_java_util_regex_Pattern_closeImpl(int a1, int a2, URegularExpression *regexp)
{
}

URegularExpression *Java_java_util_regex_Pattern_compileImpl(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  UErrorCode status = U_ZERO_ERROR;
  uint32_t v5 = a4 | 0x200;
  memset(&pe, 0, sizeof(pe));
  pe.offset = -1;
  int32_t v6 = [a3 length];
  if (v6)
  {
    __chkstk_darwin();
    uint64_t v8 = (const UChar *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFF0));
    objc_msgSend(a3, "getCharacters:range:", v8, 0, v6);
    id result = uregex_open(v8, v6, v5, &pe, &status);
  }
  else
  {
    UChar pattern = 0;
    id result = uregex_open(&pattern, -1, v5, &pe, &status);
  }
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    CFStringRef v10 = [[JavaUtilRegexPatternSyntaxException alloc] initWithNSString:sub_1001DA2B4(status) withNSString:a3 withInt:pe.offset];
    objc_exception_throw(v10);
  }
  return result;
}

NSString *sub_1001DA2B4(UErrorCode a1)
{
  if ((a1 - 66304) < 0x14) {
    return (NSString *)*((void *)&off_10042F3C0 + a1 - 66304);
  }
  uint64_t v2 = u_errorName(a1);
  return +[NSString stringWithUTF8String:v2];
}

id sub_1001DA454(uint64_t a1, void *a2, int a3, void *a4, void *a5)
{
  CFStringRef v10 = (id *)(a1 + 40);
  uint64_t v11 = new_JavaUtilLinkedList_init();
  JreStrongAssignAndConsume(v10, v11);
  JreStrongAssign((id *)(a1 + 48), 0);
  JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = a3;
  JreStrongAssign((id *)(a1 + 32), a4);
  return JreStrongAssign((id *)(a1 + 24), a5);
}

JavaNetNetworkInterface *JavaNetNetworkInterface_getByNameWithNSString_(void *a1)
{
  if (!a1)
  {
    uint64_t v8 = new_JavaLangNullPointerException_initWithNSString_(@"interfaceName == null");
    objc_exception_throw(v8);
  }
  signed int v2 = if_nametoindex((const char *)[a1 UTF8String]);
  if (v2 < 1) {
    return 0;
  }
  int v3 = v2;
  uint64_t v4 = new_JavaUtilArrayList_init();
  uint32_t v5 = new_JavaUtilArrayList_init();
  sub_1001DAFB8(a1, v3, v4, v5);
  sub_1001DB374((uint64_t)a1, v4, v5);
  int32_t v6 = [JavaNetNetworkInterface alloc];
  sub_1001DA454((uint64_t)v6, a1, v3, v4, v5);
  return v6;
}

void sub_1001DA62C(uint64_t a1)
{
  signed int v2 = new_JavaNetSocketException_init();
  [(JavaLangThrowable *)v2 initCauseWithJavaLangThrowable:a1];
  objc_exception_throw(v2);
}

uint64_t JavaNetNetworkInterface_getByInetAddressWithJavaNetInetAddress_(uint64_t a1)
{
  if (!a1)
  {
    uint64_t v11 = new_JavaLangNullPointerException_initWithNSString_(@"address == null");
    objc_exception_throw(v11);
  }
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  signed int v2 = +[JavaNetNetworkInterface getNetworkInterfacesList]_0();
  if (!v2) {
LABEL_15:
  }
    JreThrowNullPointerException();
  int v3 = v2;
  id v4 = [(JavaUtilArrayList *)v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v12 + 1) + 8 * (void)v7);
        if (!v8) {
          goto LABEL_15;
        }
        uint64_t v9 = *(void **)(v8 + 32);
        if (!v9) {
          goto LABEL_15;
        }
        if (objc_msgSend(v9, "containsWithId:", a1, (void)v12)) {
          return v8;
        }
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [(JavaUtilArrayList *)v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }
  return 0;
}

JavaNetNetworkInterface *JavaNetNetworkInterface_getByIndexWithInt_(uint64_t a1)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  id result = (JavaNetNetworkInterface *)objc_msgSend((id)LibcoreIoLibcore_os_, "if_indextonameWithInt:", a1);
  if (result)
  {
    return JavaNetNetworkInterface_getByNameWithNSString_(result);
  }
  return result;
}

BOOL sub_1001DAAEC(uint64_t a1, int a2)
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v10 = 0;
  int v3 = (const char *)[*(id *)(a1 + 8) UTF8String];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001DB8A0;
  v6[3] = &unk_10042F5E0;
  v6[4] = &v7;
  sub_1001DAD88(v3, (uint64_t)v6);
  BOOL v4 = (v8[3] & a2) != 0;
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_1001DABA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001DACB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001DACD0(uint64_t a1, uint64_t a2)
{
}

void sub_1001DACE0(uint64_t a1)
{
}

uint64_t sub_1001DACEC(uint64_t a1, uint64_t a2)
{
  signed int v2 = *(unsigned char **)(a2 + 24);
  if (v2[1] != 18 || v2[6] != 6) {
    return 1;
  }
  BOOL v4 = &v2[v2[5]];
  id v5 = +[IOSByteArray arrayWithLength:6];
  uint64_t result = 0;
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = v5;
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) + 12;
  __int16 v8 = *((_WORD *)v4 + 6);
  *(_DWORD *)uint64_t v7 = *((_DWORD *)v4 + 2);
  *(_WORD *)(v7 + 4) = v8;
  return result;
}

void sub_1001DAD88(const char *a1, uint64_t a2)
{
  __int16 v8 = 0;
  if (getifaddrs(&v8) < 0)
  {
    uint64_t v6 = __error();
    uint64_t v7 = sub_1001DAF24(@"getifaddrs", *v6);
    objc_exception_throw(v7);
  }
  BOOL v4 = v8;
  if (v8)
  {
    do
    {
      if ((!a1 || !strcmp(v4->ifa_name, a1)) && !(*(unsigned int (**)(uint64_t, ifaddrs *))(a2 + 16))(a2, v4)) {
        break;
      }
      BOOL v4 = v4->ifa_next;
    }
    while (v4);
    id v5 = v8;
  }
  else
  {
    id v5 = 0;
  }
  freeifaddrs(v5);
}

JavaNetSocketException *sub_1001DAF24(void *a1, unsigned int a2)
{
  signed int v2 = new_LibcoreIoErrnoException_initWithNSString_withInt_(a1, a2);
  int v3 = new_JavaNetSocketException_initWithJavaLangThrowable_(v2);
  return v3;
}

IOSByteArray *sub_1001DAFB8(void *a1, int a2, void *a3, void *a4)
{
  uint64_t result = sub_1001DB0F0(a1);
  if (result)
  {
    __int16 v8 = result;
    if (result->super.size_ >= 1)
    {
      uint64_t v9 = 0;
      do
      {
        int v10 = +[IOSByteArray arrayWithLength:16];
        uint64_t v11 = +[IOSByteArray arrayWithLength:16];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v8, v9, v10, 0, 16);
        uint64_t v12 = (v9 + 16);
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v8, v12, v11, 0, 16);
        long long v13 = new_JavaNetInet6Address_initWithByteArray_withNSString_withInt_(v10, 0, a2);
        if (!a3 || (long long v14 = v13, [a3 addWithId:v13], !a4)) {
          JreThrowNullPointerException();
        }
        signed __int16 v15 = sub_1001DB288((uint64_t)v11);
        uint64_t result = (IOSByteArray *)objc_msgSend(a4, "addWithId:", new_JavaNetInterfaceAddress_initWithJavaNetInet6Address_withShort_(v14, v15));
        uint64_t v9 = (v12 + 16);
      }
      while ((int)v9 < v8->super.size_);
    }
  }
  return result;
}

IOSByteArray *sub_1001DB0F0(void *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v1 = (const char *)[a1 UTF8String];
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  int v11 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001DBDFC;
  v7[3] = &unk_10042F5E0;
  v7[4] = &v8;
  sub_1001DAD88(v1, (uint64_t)v7);
  int v2 = *((_DWORD *)v9 + 6);
  if (v2)
  {
    int v3 = +[IOSByteArray arrayWithLength:32 * v2];
    v6[0] = 0;
    v6[1] = v6;
    v6[2] = 0x3010000000;
    v6[4] = v3;
    void v6[5] = 0;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1001DBE2C;
    v5[3] = &unk_10042F5E0;
    v5[4] = v6;
    sub_1001DAD88(v1, (uint64_t)v5);
    _Block_object_dispose(v6, 8);
  }
  else
  {
    int v3 = 0;
  }
  _Block_object_dispose(&v8, 8);
  return v3;
}

void sub_1001DB250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v6 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DB288(uint64_t a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v2 = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  uint64_t v4 = v3 & ~((int)v3 >> 31);
  uint64_t v5 = v4;
  LODWORD(v6) = -8;
  while (v4 != v2)
  {
    uint64_t v7 = v2 + 1;
    int v8 = *(unsigned __int8 *)(a1 + 12 + v2);
    uint64_t v6 = (v6 + 8);
    ++v2;
    if (v8 != 255)
    {
      uint64_t v5 = v7;
      goto LABEL_7;
    }
  }
  uint64_t v6 = (8 * v4);
LABEL_7:
  if (v5 != v3)
  {
    if ((int)v5 >= (int)v3) {
      IOSArray_throwOutOfBoundsWithMsg(v3, v5);
    }
    uint64_t v9 = v6 | 7;
    int v10 = 7;
    while (((*(char *)(a1 + 12 + (int)v5) >> v10) & 1) != 0)
    {
      uint64_t v6 = (v6 + 1);
      if (!--v10) {
        return v9;
      }
    }
  }
  return v6;
}

id sub_1001DB374(uint64_t a1, void *a2, void *a3)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  id v6 = [(id)LibcoreIoLibcore_os_ socketWithInt:2 withInt:2 withInt:0];
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v7 = [(id)LibcoreIoLibcore_os_ ioctlInetAddressWithJavaIoFileDescriptor:v6 withInt:3223349537 withNSString:a1];
  if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v8 = [(id)LibcoreIoLibcore_os_ ioctlInetAddressWithJavaIoFileDescriptor:v6 withInt:3223349539 withNSString:a1];
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v9 = [(id)LibcoreIoLibcore_os_ ioctlInetAddressWithJavaIoFileDescriptor:v6 withInt:3223349541 withNSString:a1];
  if (!v8) {
    goto LABEL_27;
  }
  uint64_t v10 = (uint64_t)v9;
  if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v11 = [v8 isEqual:JavaNetInet4Address_ANY_];
  char v12 = v11;
  id v13 = v11 ? 0 : v8;
  if (!a2 || ([a2 addWithId:v7], !a3)) {
LABEL_27:
  }
    JreThrowNullPointerException();
  objc_opt_class();
  if (v7 && (objc_opt_isKindOfClass() & 1) == 0
    || (objc_opt_class(), (v12 & 1) == 0) && (objc_opt_isKindOfClass() & 1) == 0
    || (objc_opt_class(), v10) && (objc_opt_isKindOfClass() & 1) == 0)
  {
    JreThrowClassCastException();
  }
  objc_msgSend(a3, "addWithId:", new_JavaNetInterfaceAddress_initWithJavaNetInet4Address_withJavaNetInet4Address_withJavaNetInet4Address_(v7, v13, v10));
  return LibcoreIoIoUtils_closeQuietlyWithJavaIoFileDescriptor_(v6);
}

void sub_1001DB604(void *a1, int a2)
{
  objc_end_catch();
  if (a2 == 3)
  {
    uint64_t v4 = objc_begin_catch(a1);
    if (v4)
    {
      int v5 = v4[21];
      if (v5 == 49 || v5 == 102)
      {
        objc_end_catch();
        JUMPOUT(0x1001DB50CLL);
      }
      sub_1001DA62C((uint64_t)v4);
    }
    JreThrowNullPointerException();
  }
  if (a2 != 2)
  {
    objc_begin_catch(a1);
    JUMPOUT(0x1001DB510);
  }
  id v6 = objc_begin_catch(a1);
  sub_1001DA62C((uint64_t)v6);
}

void sub_1001DB6C4()
{
}

JavaNetNetworkInterface *JavaNetNetworkInterface_forUnboundMulticastSocket()
{
  if ((atomic_load_explicit(JavaNetInet6Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v5 = JavaNetInet6Address_ANY_;
  uint64_t v0 = +[IOSObjectArray arrayWithObjects:&v5 count:1 type:JavaNetInetAddress_class_()];
  uint64_t v1 = JavaUtilArrays_asListWithNSObjectArray_(v0);
  uint64_t v2 = (void *)JavaUtilCollections_emptyList();
  uint64_t v3 = [JavaNetNetworkInterface alloc];
  sub_1001DA454((uint64_t)v3, 0, -1, v1, v2);
  return v3;
}

uint64_t JavaNetNetworkInterface_class_()
{
  if (qword_100560CC0 != -1) {
    dispatch_once(&qword_100560CC0, &stru_10042FDF0);
  }
  return qword_100560CB8;
}

void sub_1001DB874(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560CB8 = IOSClass_fromClass(v1);
}

uint64_t sub_1001DB8A0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = *(_DWORD *)(a2 + 16);
  return 0;
}

uint64_t sub_1001DBDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  if (v2 && *(unsigned char *)(v2 + 1) == 30) {
    ++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  return 1;
}

uint64_t sub_1001DBE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  if (v2 && *(unsigned char *)(v2 + 1) == 30)
  {
    uint64_t v3 = *(void *)(a2 + 32);
    *(_OWORD *)(*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 32)
              + 12
              + 32 * *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) = *(_OWORD *)(v2 + 8);
    if (v3) {
      *(_OWORD *)(*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 32)
    }
                + 12
                + 32 * *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)
                + 16) = *(_OWORD *)(v3 + 8);
    ++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  }
  return 1;
}

id sub_1001DC43C(void *a1, uint64_t a2)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v4 = [a1 length];
  if ((int)v4 > (int)a2)
  {
    while (JavaLangCharacter_isWhitespaceWithChar_((UChar32)[a1 charAtWithInt:a2]))
    {
      a2 = (a2 + 1);
      if (v4 == a2) {
        return v4;
      }
    }
  }
  return (id)a2;
}

double JavaTextChoiceFormat_nextDoubleWithDouble_(double a1)
{
  if (a1 == INFINITY) {
    return INFINITY;
  }
  if (a1 == 0.0) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = JavaLangDouble_doubleToLongBitsWithDouble_(a1);
  }
  if (a1 >= 0.0) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = v3 - 1;
  }
  return JavaLangDouble_longBitsToDoubleWithLong_(v4);
}

double JavaTextChoiceFormat_previousDoubleWithDouble_(double a1)
{
  if (a1 == -INFINITY) {
    return -INFINITY;
  }
  if (a1 == 0.0) {
    uint64_t v3 = 0x8000000000000000;
  }
  else {
    uint64_t v3 = JavaLangDouble_doubleToLongBitsWithDouble_(a1);
  }
  if (a1 <= 0.0) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = v3 - 1;
  }
  return JavaLangDouble_longBitsToDoubleWithLong_(v4);
}

JavaTextChoiceFormat *new_JavaTextChoiceFormat_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaTextChoiceFormat alloc];
  JavaTextNumberFormat_init((uint64_t)v2, v3);
  [(JavaTextChoiceFormat *)v2 applyPatternWithNSString:a1];
  return v2;
}

id DalvikSystemCloseGuard_setReporterWithDalvikSystemCloseGuard_Reporter_(void *a1)
{
  if (atomic_load_explicit(DalvikSystemCloseGuard__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v3 = new_JavaLangNullPointerException_initWithNSString_(@"reporter == null");
    objc_exception_throw(v3);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  return JreVolatileStrongAssign(&qword_100560CD8, a1);
}

DalvikSystemCloseGuard *DalvikSystemCloseGuard_get()
{
  if ((atomic_load_explicit(DalvikSystemCloseGuard__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned __int8 v0 = atomic_load(byte_100560CD0);
  if ((v0 & 1) == 0) {
    return (DalvikSystemCloseGuard *)qword_100560CC8;
  }
  uint64_t v2 = [DalvikSystemCloseGuard alloc];
  return v2;
}

void *JavaNioIoVec_initWithJavaNioByteBufferArray_withInt_withInt_withJavaNioIoVec_DirectionEnum_(uint64_t a1, void *a2, int a3, int a4, void *a5)
{
  JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 20) = a4;
  JreStrongAssign((id *)(a1 + 48), a5);
  id v9 = +[IOSObjectArray newArrayWithLength:a4 type:NSObject_class_()];
  JreStrongAssignAndConsume((id *)(a1 + 24), v9);
  JreStrongAssignAndConsume((id *)(a1 + 32), +[IOSIntArray newArrayWithLength:a4]);
  id v10 = +[IOSIntArray newArrayWithLength:a4];
  return JreStrongAssignAndConsume((id *)(a1 + 40), v10);
}

void sub_1001DD68C(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    if (v2) {
      objc_exception_throw([v2 rethrowAsIOException]);
    }
    JreThrowNullPointerException();
  }
  _Unwind_Resume(exception_object);
}

void sub_1001DD6BC()
{
}

JavaNioIoVec *new_JavaNioIoVec_initWithJavaNioByteBufferArray_withInt_withInt_withJavaNioIoVec_DirectionEnum_(void *a1, int a2, int a3, void *a4)
{
  id v8 = [JavaNioIoVec alloc];
  JavaNioIoVec_initWithJavaNioByteBufferArray_withInt_withInt_withJavaNioIoVec_DirectionEnum_((uint64_t)v8, a1, a2, a3, a4);
  return v8;
}

IOSObjectArray *JavaNioIoVec_DirectionEnum_values()
{
  if ((atomic_load_explicit(JavaNioIoVec_DirectionEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaNioIoVec_DirectionEnum_class_();
  return +[IOSObjectArray arrayWithObjects:&JavaNioIoVec_DirectionEnum_values_ count:2 type:v0];
}

void *JavaNioIoVec_DirectionEnum_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaNioIoVec_DirectionEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = 0;
  for (char i = 1; ; char i = 0)
  {
    char v4 = i;
    uint64_t v5 = (void *)JavaNioIoVec_DirectionEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v5, "name"))) {
      break;
    }
    uint64_t v2 = 1;
    if ((v4 & 1) == 0) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v5;
}

uint64_t JavaNioIoVec_DirectionEnum_class_()
{
  if ((atomic_load_explicit(JavaNioIoVec_DirectionEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560CE8 != -1) {
    dispatch_once(&qword_100560CE8, &stru_100430A30);
  }
  return qword_100560CE0;
}

void sub_1001DDBC0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560CE0 = IOSClass_fromClass(v1);
}

JavaNetSocketPermission *new_JavaNetSocketPermission_initWithNSString_withNSString_()
{
  uint64_t v0 = [JavaNetSocketPermission alloc];
  JavaSecurityPermission_initWithNSString_(v0, &stru_10048C1F8);
  return v0;
}

id JavaMathPrimality_nextProbablePrimeWithJavaMathBigInteger_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaMathPrimality__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100560CF0) {
    goto LABEL_76;
  }
  p_superclass = JavaLangHexStringParser.superclass;
  uint64_t v3 = +[IOSIntArray arrayWithLength:*(int *)(qword_100560CF0 + 8)];
  char v4 = +[IOSBooleanArray arrayWithLength:1024];
  if (!a1) {
    goto LABEL_76;
  }
  uint64_t v5 = (uint64_t)v4;
  if (*(_DWORD *)(a1 + 16) == 1)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      goto LABEL_76;
    }
    uint64_t v7 = *(unsigned int *)(v6 + 8);
    if ((int)v7 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v7, 0);
    }
    if ((*(_DWORD *)(v6 + 12) & 0x80000000) == 0)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = *(unsigned int *)(v8 + 8);
      if ((int)v9 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v9, 0);
      }
      uint64_t v10 = *(unsigned int *)(qword_100560CF0 + 8);
      if ((int)v10 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v10, (int)v10 - 1);
      }
      p_superclass = (__objc2_class **)(JavaLangHexStringParser + 8);
      if (*(_DWORD *)(v8 + 12) < *(_DWORD *)(qword_100560CF0 + 12 + 4 * ((int)v10 - 1)))
      {
        LODWORD(v11) = -1;
        do
        {
          uint64_t v12 = *(void *)(a1 + 8);
          uint64_t v13 = *(unsigned int *)(v12 + 8);
          if ((int)v13 <= 0) {
            IOSArray_throwOutOfBoundsWithMsg(v13, 0);
          }
          int v14 = v11 + 1;
          int v15 = *(_DWORD *)(v12 + 12);
          uint64_t v16 = *(unsigned int *)(qword_100560CF0 + 8);
          if (v11 + 1 < 0 || v14 >= (int)v16) {
            IOSArray_throwOutOfBoundsWithMsg(v16, (v11 + 1));
          }
          uint64_t v11 = (v11 + 1);
        }
        while (v15 >= *(_DWORD *)(qword_100560CF0 + 12 + 4 * v14));
        if (qword_100560CF8)
        {
          uint64_t v46 = *(unsigned int *)(qword_100560CF8 + 8);
          if (v14 < 0 || (int)v11 >= (int)v46) {
            IOSArray_throwOutOfBoundsWithMsg(v46, v11);
          }
          return *(id *)(qword_100560CF8 + 24 + 8 * v14);
        }
        goto LABEL_76;
      }
    }
  }
  uint64_t v17 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(1, *(_DWORD *)(a1 + 16), [p_superclass + 499 arrayWithLength:*(_DWORD *)(a1 + 16) + 1]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), 0, v17->digits_, 0, *(unsigned int *)(a1 + 16));
  if ([(id)a1 testBitWithInt:0])
  {
    JavaMathElementary_inplaceAddWithJavaMathBigInteger_withInt_((uint64_t)v17, 2uLL);
    uint64_t v18 = v17;
  }
  else
  {
    digits = v17->digits_;
    if (!digits) {
      goto LABEL_76;
    }
    uint64_t v18 = v17;
    uint64_t size = digits->super.size_;
    if ((int)size <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(size, 0);
    }
    *(&digits->super.size_ + 1) |= 1u;
  }
  unsigned int v21 = [(JavaMathBigInteger *)v18 bitLength];
  uint64_t v22 = qword_100560D00;
  if (!qword_100560D00) {
LABEL_76:
  }
    JreThrowNullPointerException();
  signed int v23 = v21;
  int v24 = 2;
  while (1)
  {
    int v25 = v24;
    uint64_t v26 = *(unsigned int *)(v22 + 8);
    if (v24 < 0 || v24 >= (int)v26) {
      IOSArray_throwOutOfBoundsWithMsg(v26, v24);
    }
    if (v23 >= *(_DWORD *)(v22 + 12 + 4 * v24)) {
      break;
    }
    ++v24;
    uint64_t v22 = qword_100560D00;
    if (!qword_100560D00) {
      goto LABEL_76;
    }
  }
  uint64_t v27 = qword_100560CF0;
  if (*(int *)(qword_100560CF0 + 8) >= 1)
  {
    uint64_t v28 = 0;
    do
    {
      int v29 = JavaMathDivision_remainderWithJavaMathBigInteger_withInt_((uint64_t)v18, *(_DWORD *)(v27 + 12 + 4 * v28));
      uint64_t v30 = v3->super.size_;
      if (v28 >= v30) {
        IOSArray_throwOutOfBoundsWithMsg(v30, v28);
      }
      *(&v3->super.size_ + ++v28) = v29 - 1024;
      uint64_t v27 = qword_100560CF0;
    }
    while (v28 < *(int *)(qword_100560CF0 + 8));
  }
LABEL_39:
  JavaUtilArrays_fillWithBooleanArray_withBoolean_(v5, 0);
  uint64_t v31 = qword_100560CF0;
  if (*(int *)(qword_100560CF0 + 8) >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      uint64_t v33 = v3->super.size_;
      if (v32 >= v33) {
        IOSArray_throwOutOfBoundsWithMsg(v33, v32);
      }
      uint64_t v34 = *(int *)(v31 + 8);
      if (v32 >= v34) {
        IOSArray_throwOutOfBoundsWithMsg(v34, v32);
      }
      int v35 = *(_DWORD *)(v31 + 12 + 4 * v32);
      uint64_t v36 = v3->super.size_;
      if (v32 >= v36) {
        IOSArray_throwOutOfBoundsWithMsg(v36, v32);
      }
      *(&v3->super.size_ + v32 + 1) = (*(&v3->super.size_ + v32 + 1) + 1024) % v35;
      uint64_t v37 = v3->super.size_;
      if (v32 >= v37) {
        IOSArray_throwOutOfBoundsWithMsg(v37, v32);
      }
      int v38 = *(&v3->super.size_ + v32 + 1);
      if (!v38) {
        goto LABEL_84;
      }
      uint64_t v39 = *(int *)(qword_100560CF0 + 8);
      if (v32 >= v39) {
        IOSArray_throwOutOfBoundsWithMsg(v39, v32);
      }
      uint64_t v40 = v3->super.size_;
      if (v32 >= v40) {
        IOSArray_throwOutOfBoundsWithMsg(v40, v32);
      }
      int v38 = *(_DWORD *)(qword_100560CF0 + 12 + 4 * v32) - *(&v3->super.size_ + v32 + 1);
      if (v38 <= 1023)
      {
LABEL_84:
        do
        {
          uint64_t v41 = *(unsigned int *)(v5 + 8);
          if (v38 < 0 || v38 >= (int)v41) {
            IOSArray_throwOutOfBoundsWithMsg(v41, v38);
          }
          *(unsigned char *)(v5 + 12 + v38) = 1;
          uint64_t v42 = *(int *)(qword_100560CF0 + 8);
          if (v32 >= v42) {
            IOSArray_throwOutOfBoundsWithMsg(v42, v32);
          }
          v38 += *(_DWORD *)(qword_100560CF0 + 12 + 4 * v32);
        }
        while (v38 < 1024);
      }
      ++v32;
      uint64_t v31 = qword_100560CF0;
    }
    while (v32 < *(int *)(qword_100560CF0 + 8));
  }
  int64_t v43 = 0;
  while (1)
  {
    uint64_t v44 = *(int *)(v5 + 8);
    if (v43 >= v44) {
      IOSArray_throwOutOfBoundsWithMsg(v44, v43);
    }
    if (!*(unsigned char *)(v5 + 12 + v43))
    {
      id v45 = [(JavaMathBigInteger *)v18 copy];
      JavaMathElementary_inplaceAddWithJavaMathBigInteger_withInt_((uint64_t)v45, v43);
      if (sub_1001DE8AC(v45, v25)) {
        return v45;
      }
    }
    if (++v43 == 1024)
    {
      JavaMathElementary_inplaceAddWithJavaMathBigInteger_withInt_((uint64_t)v18, 0x400uLL);
      goto LABEL_39;
    }
  }
}

JavaMathBigInteger *JavaMathPrimality_consBigIntegerWithInt_withInt_withJavaUtilRandom_(uint64_t a1, int a2, void *a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaMathPrimality__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((int)a1 > 10)
  {
    int v29 = -(int)a1 & 0x1F;
    int v31 = ((int)a1 + 31) >> 5;
    int v14 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(1, v31, +[IOSIntArray arrayWithLength:(uint64_t)((int)a1 + 31) >> 5]);
    uint64_t v16 = ((uint64_t)((int)a1 + 31) >> 5) - 1;
    int v28 = a1 + 31;
    while (v14->numberLength_ < 1)
    {
LABEL_25:
      digits = v14->digits_;
      if (!digits) {
        goto LABEL_37;
      }
      uint64_t size = digits->super.size_;
      if (v28 < 32 || v31 > (int)size) {
        IOSArray_throwOutOfBoundsWithMsg(size, v16);
      }
      *(&digits->super.size_ + v16 + 1) |= 0x80000000;
      int v24 = v14->digits_;
      uint64_t v25 = v24->super.size_;
      if (v31 > (int)v25) {
        IOSArray_throwOutOfBoundsWithMsg(v25, v16);
      }
      *(&v24->super.size_ + v16 + 1) = *(&v24->super.size_ + v16 + 1) >> v29;
      uint64_t v26 = v14->digits_;
      uint64_t v27 = v26->super.size_;
      if ((int)v27 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v27, 0);
      }
      *(&v26->super.size_ + 1) |= 1u;
      if (JavaMathPrimality_isProbablePrimeWithJavaMathBigInteger_withInt_((uint64_t)v14, a2)) {
        return v14;
      }
    }
    if (a3)
    {
      uint64_t v17 = 0;
      while (1)
      {
        unsigned int v18 = [a3 nextInt];
        uint64_t v19 = v14->digits_;
        if (!v19) {
          break;
        }
        unsigned int v20 = v18;
        uint64_t v21 = v19->super.size_;
        if (v17 >= v21) {
          IOSArray_throwOutOfBoundsWithMsg(v21, v17);
        }
        *(&v19->super.size_ + ++v17) = v20;
        if (v17 >= v14->numberLength_) {
          goto LABEL_25;
        }
      }
    }
LABEL_37:
    JreThrowNullPointerException();
  }
  if (!qword_100560D08) {
    goto LABEL_37;
  }
  uint64_t v5 = *(unsigned int *)(qword_100560D08 + 8);
  if ((a1 & 0x80000000) != 0 || (int)v5 <= (int)a1) {
    IOSArray_throwOutOfBoundsWithMsg(v5, a1);
  }
  uint64_t v6 = qword_100560CF8;
  if (!qword_100560CF8) {
    goto LABEL_37;
  }
  uint64_t v7 = *(unsigned int **)(qword_100560D08 + 24 + 8 * (int)a1);
  if (!v7) {
    goto LABEL_37;
  }
  uint64_t v8 = v7[2];
  if ((int)v8 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v8, 0);
  }
  if (!a3) {
    goto LABEL_37;
  }
  unsigned int v9 = v7[3];
  uint64_t v10 = v7[2];
  if ((int)v10 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v10, 1);
  }
  unsigned int v11 = [a3 nextIntWithInt:v7[4]];
  uint64_t v12 = *(unsigned int *)(v6 + 8);
  int v13 = v11 + v9;
  if (v13 < 0 || v13 >= (int)v12) {
    IOSArray_throwOutOfBoundsWithMsg(v12, v13);
  }
  return *(JavaMathBigInteger **)(v6 + 24 + 8 * v13);
}

unint64_t JavaMathPrimality_isProbablePrimeWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaMathPrimality__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v4 = a2 - 1;
  if (a2 < 1) {
    return 1;
  }
  if (!a1) {
    goto LABEL_23;
  }
  if (*(_DWORD *)(a1 + 16) == 1)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      goto LABEL_23;
    }
    uint64_t v6 = *(unsigned int *)(v5 + 8);
    if ((int)v6 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v6, 0);
    }
    if (*(_DWORD *)(v5 + 12) == 2) {
      return 1;
    }
  }
  unsigned int v8 = [(id)a1 testBitWithInt:0];
  unint64_t result = 0;
  if (!v8) {
    return result;
  }
  if (*(_DWORD *)(a1 + 16) == 1)
  {
    uint64_t v9 = *(void *)(a1 + 8);
    if (!v9) {
      goto LABEL_23;
    }
    uint64_t v10 = *(unsigned int *)(v9 + 8);
    if ((int)v10 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v10, 0);
    }
    if (*(_DWORD *)(v9 + 12) <= 0x3FFu)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = *(unsigned int *)(v11 + 8);
      if ((int)v12 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v12, 0);
      }
      return (int)JavaUtilArrays_binarySearchWithIntArray_withInt_(qword_100560CF0, *(_DWORD *)(v11 + 12)) >= 0;
    }
  }
  uint64_t v13 = qword_100560CF0;
  if (!qword_100560CF0) {
    goto LABEL_23;
  }
  uint64_t v14 = 1;
  while (v14 < *(int *)(v13 + 8))
  {
    unint64_t result = JavaMathDivision_remainderArrayByIntWithIntArray_withInt_withInt_(*(void *)(a1 + 8), *(_DWORD *)(a1 + 16), *(_DWORD *)(v13 + 12 + 4 * v14));
    if (!result) {
      return result;
    }
    ++v14;
    uint64_t v13 = qword_100560CF0;
    if (!qword_100560CF0) {
      goto LABEL_23;
    }
  }
  unsigned int v15 = [(id)a1 bitLength];
  uint64_t v16 = qword_100560D00;
  if (!qword_100560D00) {
LABEL_23:
  }
    JreThrowNullPointerException();
  signed int v17 = v15;
  int v18 = 2;
  while (1)
  {
    uint64_t v19 = *(unsigned int *)(v16 + 8);
    if (v18 < 0 || v18 >= (int)v19) {
      IOSArray_throwOutOfBoundsWithMsg(v19, v18);
    }
    if (v17 >= *(_DWORD *)(v16 + 12 + 4 * v18)) {
      break;
    }
    ++v18;
    uint64_t v16 = qword_100560D00;
    if (!qword_100560D00) {
      goto LABEL_23;
    }
  }
  int v20 = JavaLangMath_minWithInt_withInt_(v18, (v4 >> 1) + 1);
  return sub_1001DE8AC((void *)a1, v20);
}

void sub_1001DE898()
{
}

BOOL sub_1001DE8AC(void *a1, int a2)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaMathPrimality__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_34;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_34;
    }
  }
  if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [a1 subtractWithJavaMathBigInteger:JavaMathBigInteger_ONE_];
  if (!v4) {
LABEL_34:
  }
    JreThrowNullPointerException();
  uint64_t v5 = v4;
  int v6 = [v4 bitLength];
  id v7 = [v5 getLowestSetBit];
  id v22 = [v5 shiftRightWithInt:v7];
  unsigned int v8 = new_JavaUtilRandom_init();
  if (a2 >= 1)
  {
    uint64_t v9 = v8;
    uint64_t v10 = 0;
    BOOL v11 = 0;
    LODWORD(v21) = v7 - 1;
    HIDWORD(v21) = v7;
    unint64_t v12 = a2;
    while (qword_100560CF0)
    {
      if (v10 >= *(int *)(qword_100560CF0 + 8))
      {
        do
        {
          do
            uint64_t v14 = new_JavaMathBigInteger_initWithInt_withJavaUtilRandom_(v6, v9);
          while (([(JavaMathBigInteger *)v14 compareToWithId:a1] & 0x80000000) == 0);
        }
        while (!v14->sign_ || [(JavaMathBigInteger *)v14 isOne]);
      }
      else
      {
        if (!qword_100560CF8) {
          goto LABEL_34;
        }
        uint64_t v13 = *(int *)(qword_100560CF8 + 8);
        if (v10 >= v13) {
          IOSArray_throwOutOfBoundsWithMsg(v13, v10);
        }
        uint64_t v14 = *(JavaMathBigInteger **)(qword_100560CF8 + 24 + 8 * v10);
        if (!v14) {
          goto LABEL_34;
        }
      }
      id v15 = -[JavaMathBigInteger modPowWithJavaMathBigInteger:withJavaMathBigInteger:](v14, "modPowWithJavaMathBigInteger:withJavaMathBigInteger:", v22, a1, v21);
      if (!v15) {
        goto LABEL_34;
      }
      uint64_t v16 = v15;
      if (([v15 isOne] & 1) != 0
        || ([v16 isEqual:v5] & 1) != 0)
      {
        goto LABEL_37;
      }
      if (SHIDWORD(v21) >= 2)
      {
        int v17 = v21;
        do
        {
          if (([v16 isEqual:v5] & 1) == 0)
          {
            id v18 = [v16 multiplyWithJavaMathBigInteger:v16];
            if (!v18) {
              goto LABEL_34;
            }
            id v19 = [v18 modWithJavaMathBigInteger:a1];
            if (!v19) {
              goto LABEL_34;
            }
            uint64_t v16 = v19;
            if ([v19 isOne]) {
              return v11;
            }
          }
        }
        while (--v17);
      }
      if ([v16 isEqual:v5])
      {
LABEL_37:
        BOOL v11 = ++v10 >= v12;
        if (v10 != v12) {
          continue;
        }
      }
      return v11;
    }
    goto LABEL_34;
  }
  return 1;
}

JavaNioByteBufferAsDoubleBuffer *JavaNioByteBufferAsDoubleBuffer_asDoubleBufferWithJavaNioByteBuffer_(void *a1)
{
  if (!a1 || (uint64_t v2 = (uint64_t *)[a1 slice]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, "orderWithJavaNioByteOrder:", objc_msgSend(a1, "order"));
  id v4 = [JavaNioByteBufferAsDoubleBuffer alloc];
  sub_1001DEEE4((uint64_t)v4, v3);
  return v4;
}

id sub_1001DEEE4(uint64_t a1, uint64_t *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  signed int v4 = [a2 capacity];
  JavaNioDoubleBuffer_initWithInt_withLong_(a1, (v4 / 8), a2[4], v5, v6, v7, v8, v9);
  JreStrongAssign((id *)(a1 + 40), a2);
  uint64_t v10 = *(void **)(a1 + 40);
  return [v10 clear];
}

JavaNioChannelsClosedByInterruptException *new_JavaNioChannelsClosedByInterruptException_init()
{
  uint64_t v0 = [JavaNioChannelsClosedByInterruptException alloc];
  JavaNioChannelsAsynchronousCloseException_init(v0, v1);
  return v0;
}

id JavaLangStackTraceElement_initWithLong_(uint64_t a1, uint64_t a2)
{
  JreStrongAssign((id *)(a1 + 8), 0);
  JreStrongAssign((id *)(a1 + 16), 0);
  id result = JreStrongAssign((id *)(a1 + 24), 0);
  *(_DWORD *)(a1 + 32) = -1;
  *(void *)(a1 + 40) = a2;
  return result;
}

uint64_t JavaLangStackTraceElement_class_()
{
  if (qword_100560D18 != -1) {
    dispatch_once(&qword_100560D18, &stru_100431680);
  }
  return qword_100560D10;
}

void sub_1001DFEB8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560D10 = IOSClass_fromClass(v1);
}

CFStringRef sub_1001DFEE4(char *a1, unsigned __int8 a2, uint64_t a3)
{
  if (strchr(a1, a2))
  {
    uint64_t v5 = strstr(a1, "With");
    if (v5) {
      char *v5 = 0;
    }
  }
  if (!strcmp(a1, "init")) {
    return @"<init>";
  }
  if (!strcmp(a1, "initialize")) {
    return @"<clinit>";
  }
  id v6 = objc_alloc((Class)NSString);
  return (const __CFString *)[v6 initWithCString:a1 encoding:a3];
}

LibcoreReflectWildcardTypeImpl *new_LibcoreReflectWildcardTypeImpl_initWithLibcoreReflectListOfTypes_withLibcoreReflectListOfTypes_(void *a1, void *a2)
{
  signed int v4 = [LibcoreReflectWildcardTypeImpl alloc];
  JreStrongAssign((id *)&v4->extendsBound_, a1);
  JreStrongAssign((id *)&v4->superBound_, a2);
  return v4;
}

id LibcoreIoIoUtils_closeWithJavaIoFileDescriptor_(id result)
{
  if (result)
  {
    id v1 = result;
    id result = [result valid];
    if (result)
    {
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      if (!LibcoreIoLibcore_os_) {
        JreThrowNullPointerException();
      }
      return [(id)LibcoreIoLibcore_os_ closeWithJavaIoFileDescriptor:v1];
    }
  }
  return result;
}

void sub_1001E0394()
{
}

void sub_1001E03C4()
{
}

id LibcoreIoIoUtils_closeQuietlyWithJavaLangAutoCloseable_(id result)
{
  if (result) {
    return [result close];
  }
  return result;
}

id LibcoreIoIoUtils_closeQuietlyWithJavaIoFileDescriptor_(void *a1)
{
  return LibcoreIoIoUtils_closeWithJavaIoFileDescriptor_(a1);
}

void sub_1001E0478(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
}

id LibcoreIoIoUtils_closeQuietlyWithJavaNetSocket_(id result)
{
  if (result) {
    return [result close];
  }
  return result;
}

void sub_1001E04B8(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
}

id LibcoreIoIoUtils_setBlockingWithJavaIoFileDescriptor_withBoolean_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  unsigned int v4 = [(id)LibcoreIoLibcore_os_ fcntlVoidWithJavaIoFileDescriptor:a1 withInt:3];
  if (a2) {
    int v5 = 0;
  }
  else {
    int v5 = 4;
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return [(id)LibcoreIoLibcore_os_ fcntlLongWithJavaIoFileDescriptor:a1 withInt:4 withLong:(int)(v4 & 0xFFFFFFFB | v5)];
}

void sub_1001E05C8(_Unwind_Exception *a1)
{
}

JavaIoByteArrayOutputStream *sub_1001E0648(void *a1)
{
  uint64_t v1 = new_JavaIoFileInputStream_initWithNSString_(a1);
  uint64_t v2 = new_JavaIoByteArrayOutputStream_init();
  for (char i = +[IOSByteArray arrayWithLength:0x2000];
        ;
        [(JavaIoByteArrayOutputStream *)v2 writeWithByteArray:i withInt:0 withInt:v4])
  {
    id v4 = (id)[(JavaIoInputStream *)v1 readWithByteArray:i];
    if (v4 == -1) {
      break;
    }
  }
  LibcoreIoIoUtils_closeQuietlyWithJavaLangAutoCloseable_(v1);
  return v2;
}

void sub_1001E06E0(void *a1)
{
}

char *LibcoreIoIoUtils_deleteContentsWithJavaIoFile_(void *a1)
{
  if (!a1) {
LABEL_12:
  }
    JreThrowNullPointerException();
  id result = (char *)[a1 listFiles];
  if (!result)
  {
    CFStringRef v22 = JreStrcat("$@", v2, v3, v4, v5, v6, v7, v8, @"not a directory: ");
    uint64_t v21 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v22);
LABEL_10:
    objc_exception_throw(v21);
  }
  uint64_t v9 = (void **)(result + 24);
  unint64_t v10 = (unint64_t)&result[8 * *((int *)result + 2) + 24];
  while ((unint64_t)v9 < v10)
  {
    unint64_t v12 = *v9++;
    BOOL v11 = v12;
    if (!v12) {
      goto LABEL_12;
    }
    if ([v11 isDirectory]) {
      LibcoreIoIoUtils_deleteContentsWithJavaIoFile_(v11);
    }
    id result = (char *)[v11 delete];
    if ((result & 1) == 0)
    {
      CFStringRef v20 = JreStrcat("$@", v13, v14, v15, v16, v17, v18, v19, @"failed to delete file: ");
      uint64_t v21 = new_JavaIoIOException_initWithNSString_((uint64_t)v20);
      goto LABEL_10;
    }
  }
  return result;
}

uint64_t LibcoreIoIoUtils_canOpenReadOnlyWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  id v2 = [(id)LibcoreIoLibcore_os_ openWithNSString:a1 withInt:0 withInt:0];
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  [(id)LibcoreIoLibcore_os_ closeWithJavaIoFileDescriptor:v2];
  return 1;
}

void LibcoreIoIoUtils_throwInterruptedIoException()
{
  uint64_t v0 = JavaLangThread_currentThread();
  if (v0)
  {
    [(JavaLangThread *)v0 interrupt];
    uint64_t v1 = new_JavaIoInterruptedIOException_init();
    objc_exception_throw(v1);
  }
  JreThrowNullPointerException();
}

id JavaUtilHashMap_init(uint64_t a1, uint64_t a2)
{
  JavaUtilAbstractMap_init(a1, a2);
  uint64_t v3 = (void *)qword_100560D20;
  objc_opt_class();
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  id result = JreStrongAssign((id *)(a1 + 24), v3);
  *(_DWORD *)(a1 + 48) = -1;
  return result;
}

id JavaUtilHashMap_initWithInt_(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = a2;
  JavaUtilAbstractMap_init(a1, a2);
  if ((v2 & 0x80000000) != 0)
  {
    CFStringRef v14 = JreStrcat("$I", v4, v5, v6, v7, v8, v9, v10, @"Capacity: ");
    uint64_t v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
    objc_exception_throw(v15);
  }
  if (v2)
  {
    if (v2 >= 4)
    {
      int v11 = 0x40000000;
      if (v2 <= 0x40000000) {
        int v11 = JavaUtilCollections_roundUpToPowerOfTwoWithInt_(v2);
      }
    }
    else
    {
      int v11 = 4;
    }
    return (id)sub_1001E0F54(a1, v11);
  }
  else
  {
    unint64_t v12 = (void *)qword_100560D20;
    objc_opt_class();
    if (v12 && (objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    id result = JreStrongAssign((id *)(a1 + 24), v12);
    *(_DWORD *)(a1 + 48) = -1;
  }
  return result;
}

uint64_t JavaUtilHashMap_initWithInt_withFloat_(uint64_t a1, uint64_t a2, float a3)
{
  JavaUtilHashMap_initWithInt_(a1, a2);
  if (a3 <= 0.0 || (uint64_t result = JavaLangFloat_isNaNWithFloat_(), result))
  {
    CFStringRef v12 = JreStrcat("$F", v4, v5, v6, v7, v8, v9, v10, @"Load factor: ");
    uint64_t v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
    objc_exception_throw(v13);
  }
  return result;
}

id JavaUtilHashMap_initWithJavaUtilMap_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v4 = [a2 size];
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v5 = v4 + (v4 >> 1);
  if (v5 >= 0x40000000) {
    uint64_t v6 = 0x40000000;
  }
  else {
    uint64_t v6 = v5;
  }
  JavaUtilHashMap_initWithInt_(a1, v6);
  return sub_1001E0C24(a1, a2);
}

id sub_1001E0C24(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24) == qword_100560D20) {
    -[JavaUtilHashMap doubleCapacity]_0(a1);
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  if (!a2 || (id v4 = objc_msgSend(a2, "entrySet", (void)v11)) == 0) {
LABEL_14:
  }
    JreThrowNullPointerException();
  unsigned int v5 = v4;
  id result = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (result)
  {
    id v7 = result;
    uint64_t v8 = *(void *)v12;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v9);
        if (!v10) {
          goto LABEL_14;
        }
        sub_1001E170C(a1, [*(id *)(*((void *)&v11 + 1) + 8 * (void)v9) getKey], objc_msgSend(v10, "getValue"));
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id result = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      id v7 = result;
    }
    while (result);
  }
  return result;
}

uint64_t JavaUtilHashMap_capacityForInitSizeWithInt_(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = a1 + (a1 >> 1);
  if (v2 >= 0x40000000) {
    return 0x40000000;
  }
  else {
    return v2;
  }
}

void sub_1001E0F1C()
{
}

void sub_1001E0F44()
{
}

uint64_t sub_1001E0F54(uint64_t a1, int a2)
{
  if (qword_100560D38 != -1) {
    dispatch_once(&qword_100560D38, &stru_100432860);
  }
  JreStrongAssignAndConsume((id *)(a1 + 24), +[IOSObjectArray newArrayWithLength:a2 type:qword_100560D30]);
  *(_DWORD *)(a1 + 48) = (a2 >> 1) + (a2 >> 2);
  return *(void *)(a1 + 24);
}

uint64_t sub_1001E1524(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    objc_msgSend((id)a1, "preModifyWithJavaUtilHashMap_HashMapEntry:", *(void *)(a1 + 32));
    uint64_t v5 = *(void *)(v4 + 16);
    JreStrongAssign((id *)(v4 + 16), a2);
  }
  else
  {
    [(id)a1 addNewEntryForNullKeyWithId:a2];
    uint64_t v5 = 0;
    ++*(_DWORD *)(a1 + 40);
    ++*(_DWORD *)(a1 + 44);
  }
  return v5;
}

id sub_1001E170C(uint64_t a1, void *a2, void *a3)
{
  if (a2)
  {
    uint64_t v6 = JavaUtilCollections_secondaryHashWithId_(a2);
    uint64_t v7 = *(void *)(a1 + 24);
    int v8 = (*(_DWORD *)(v7 + 8) - 1) & v6;
    uint64_t v9 = *(void *)(v7 + 24 + 8 * v8);
    if (v9)
    {
      uint64_t v10 = *(void *)(v7 + 24 + 8 * v8);
      while (*(_DWORD *)(v10 + 24) != v6 || ![a2 isEqual:*(void *)(v10 + 8)])
      {
        uint64_t v10 = *(void *)(v10 + 32);
        if (!v10) {
          goto LABEL_7;
        }
      }
      long long v13 = (id *)(v10 + 16);
      goto LABEL_11;
    }
LABEL_7:
    id result = objc_msgSend((id)a1, "constructorNewRetainedEntryWithId:withId:withInt:withJavaUtilHashMap_HashMapEntry:", a2, a3, v6, v9);
    *(void *)(v7 + 24 + 8 * v8) = result;
LABEL_15:
    ++*(_DWORD *)(a1 + 40);
    return result;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12)
  {
    id result = objc_msgSend((id)a1, "constructorNewRetainedEntryWithId:withId:withInt:withJavaUtilHashMap_HashMapEntry:", 0, a3, 0, 0);
    *(void *)(a1 + 32) = result;
    goto LABEL_15;
  }
  long long v13 = (id *)(v12 + 16);
LABEL_11:
  return JreStrongAssign(v13, a3);
}

JavaUtilHashMap_HashMapEntry *new_JavaUtilHashMap_HashMapEntry_initWithId_withId_withInt_withJavaUtilHashMap_HashMapEntry_(void *a1, void *a2, int a3, void *a4)
{
  int v8 = [JavaUtilHashMap_HashMapEntry alloc];
  JreStrongAssign(&v8->key_, a1);
  JreStrongAssign(&v8->value_, a2);
  v8->hash__ = a3;
  JreStrongAssign((id *)&v8->next_, a4);
  return v8;
}

void sub_1001E1A90(uint64_t a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilHashMap__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a2 + (a2 >> 1)) >= 0x40000000) {
    int v4 = 0x40000000;
  }
  else {
    int v4 = a2 + (a2 >> 1);
  }
  int v5 = JavaUtilCollections_roundUpToPowerOfTwoWithInt_(v4);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(unsigned int *)(v6 + 8);
  if (v5 > (int)v7)
  {
    int v8 = v5;
    if (v5 == 2 * v7)
    {
      -[JavaUtilHashMap doubleCapacity]_0(a1);
    }
    else
    {
      uint64_t v9 = sub_1001E0F54(a1, v5);
      if (*(_DWORD *)(a1 + 40))
      {
        if ((int)v7 >= 1)
        {
          for (uint64_t i = 0; i != v7; ++i)
          {
            uint64_t v11 = *(void *)(v6 + 24 + 8 * i);
            if (v11)
            {
              do
              {
                uint64_t v12 = *(void *)(v11 + 32);
                int v13 = *(_DWORD *)(v11 + 24) & (v8 - 1);
                uint64_t v14 = *(void *)(v9 + 24 + 8 * v13);
                *(void *)(v9 + 24 + 8 * v13) = v11;
                *(void *)(v11 + 32) = v14;
                uint64_t v11 = v12;
              }
              while (v12);
            }
          }
        }
        size_t v15 = 8 * *(int *)(v6 + 8);
        bzero((void *)(v6 + 24), v15);
      }
    }
  }
}

uint64_t sub_1001E1F90(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    int v7 = JavaUtilCollections_secondaryHashWithId_(a2);
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      JreThrowNullPointerException();
    }
    int v9 = v7;
    uint64_t v10 = *(unsigned int *)(v8 + 8);
    int v11 = (v10 - 1) & v9;
    if (v11 < 0 != v6 || v11 >= (int)v10) {
      IOSArray_throwOutOfBoundsWithMsg(v10, v11);
    }
    uint64_t v13 = *(void *)(v8 + 24 + 8 * v11);
    if (v13)
    {
      while (*(_DWORD *)(v13 + 24) != v9 || ([a2 isEqual:*(void *)(v13 + 8)] & 1) == 0)
      {
        uint64_t v13 = *(void *)(v13 + 32);
        if (!v13) {
          return 0;
        }
      }
      goto LABEL_14;
    }
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    return 0;
  }
LABEL_14:
  uint64_t v14 = *(void *)(v13 + 16);
  return LibcoreUtilObjects_equalWithId_withId_(a3, v14);
}

uint64_t sub_1001E20A8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    int v6 = JavaUtilCollections_secondaryHashWithId_(a2);
    uint64_t v7 = *(void *)(a1 + 24);
    int v8 = (*(_DWORD *)(v7 + 8) - 1) & v6;
    uint64_t v9 = *(void *)(v7 + 24 + 8 * v8);
    if (v9)
    {
      int v10 = v6;
      int v11 = 0;
      uint64_t v12 = v8;
      while (1)
      {
        uint64_t v13 = (uint64_t *)v9;
        if (*(_DWORD *)(v9 + 24) == v10)
        {
          if ([a2 isEqual:*(void *)(v9 + 8)]) {
            break;
          }
        }
        uint64_t v9 = v13[4];
        int v11 = v13;
        if (!v9) {
          return v9 & v8;
        }
      }
      if (LibcoreUtilObjects_equalWithId_withId_(a3, v13[2]))
      {
        if (v11) {
          uint64_t v16 = v11 + 4;
        }
        else {
          uint64_t v16 = (void *)(v7 + 24 + 8 * v12);
        }
        *uint64_t v16 = v13[4];
        v13[4] = 0;
        uint64_t v17 = v13;
        ++*(_DWORD *)(a1 + 44);
        --*(_DWORD *)(a1 + 40);
        objc_msgSend((id)a1, "postRemoveWithJavaUtilHashMap_HashMapEntry:", v13);
        LODWORD(v9) = 1;
        int v8 = 1;
      }
      else
      {
        int v8 = 0;
        LODWORD(v9) = 1;
      }
    }
    return v9 & v8;
  }
  else
  {
    uint64_t v15 = *(void *)(a1 + 32);
    if (v15)
    {
      uint64_t result = LibcoreUtilObjects_equalWithId_withId_(a3, *(void *)(v15 + 16));
      if (result)
      {
        JreStrongAssign((id *)(a1 + 32), 0);
        ++*(_DWORD *)(a1 + 44);
        --*(_DWORD *)(a1 + 40);
        objc_msgSend((id)a1, "postRemoveWithJavaUtilHashMap_HashMapEntry:", v15);
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

JavaUtilHashMap *new_JavaUtilHashMap_init()
{
  uint64_t v0 = [JavaUtilHashMap alloc];
  JavaUtilHashMap_init((uint64_t)v0, v1);
  return v0;
}

JavaUtilHashMap *new_JavaUtilHashMap_initWithInt_(uint64_t a1)
{
  unsigned int v2 = [JavaUtilHashMap alloc];
  JavaUtilHashMap_initWithInt_((uint64_t)v2, a1);
  return v2;
}

JavaUtilHashMap *new_JavaUtilHashMap_initWithInt_withFloat_(uint64_t a1, float a2)
{
  int v4 = [JavaUtilHashMap alloc];
  JavaUtilHashMap_initWithInt_withFloat_((uint64_t)v4, a1, a2);
  return v4;
}

JavaUtilHashMap *new_JavaUtilHashMap_initWithJavaUtilMap_(void *a1)
{
  unsigned int v2 = [JavaUtilHashMap alloc];
  JavaUtilHashMap_initWithJavaUtilMap_((uint64_t)v2, a1);
  return v2;
}

id JavaUtilHashMap_HashMapEntry_initWithId_withId_withInt_withJavaUtilHashMap_HashMapEntry_(uint64_t a1, void *a2, void *a3, int a4, void *a5)
{
  JreStrongAssign((id *)(a1 + 8), a2);
  JreStrongAssign((id *)(a1 + 16), a3);
  *(_DWORD *)(a1 + 24) = a4;
  return JreStrongAssign((id *)(a1 + 32), a5);
}

void sub_1001E2C34(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560D30 = IOSClass_fromClass(v1);
}

id sub_1001E2C8C(uint64_t a1, uint64_t a2)
{
  JreStrongAssign((id *)(a1 + 8), (void *)a2);
  id result = JreStrongAssign((id *)(a1 + 24), *(void **)(a2 + 32));
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 44);
  if (!*(void *)(a1 + 24))
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (!v5) {
      JreThrowNullPointerException();
    }
    int v6 = *(_DWORD *)(a1 + 16);
    uint64_t v7 = (unsigned int *)(v5 + 8);
    if (v6 >= *(_DWORD *)(v5 + 8))
    {
LABEL_10:
      uint64_t v9 = 0;
    }
    else
    {
      while (1)
      {
        *(_DWORD *)(a1 + 16) = v6 + 1;
        uint64_t v8 = *v7;
        if (v6 < 0 || v6 >= (int)v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, v6);
        }
        uint64_t v9 = *(void **)(v5 + 24 + 8 * v6);
        if (v9) {
          break;
        }
        int v6 = *(_DWORD *)(a1 + 16);
        uint64_t v7 = (unsigned int *)(v5 + 8);
        if (v6 >= *(_DWORD *)(v5 + 8)) {
          goto LABEL_10;
        }
      }
    }
    return JreStrongAssign((id *)(a1 + 24), v9);
  }
  return result;
}

double JavaLangMath_absWithDouble_(double a1)
{
  uint64_t v1 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1) & 0x7FFFFFFFFFFFFFFFLL;
  return JavaLangDouble_longBitsToDoubleWithLong_(v1);
}

float JavaLangMath_absWithFloat_(float a1)
{
  int v1 = JavaLangFloat_floatToRawIntBitsWithFloat_(a1) & 0x7FFFFFFF;
  return JavaLangFloat_intBitsToFloatWithInt_(v1);
}

uint64_t JavaLangMath_absWithInt_(uint64_t result)
{
  if ((int)result >= 0) {
    return result;
  }
  else {
    return -(int)result;
  }
}

uint64_t JavaLangMath_absWithLong_(uint64_t result)
{
  if (result < 0) {
    return -result;
  }
  return result;
}

double JavaLangMath_ceilWithDouble_(double a1)
{
  return ceil(a1);
}

double JavaLangMath_floorWithDouble_(double a1)
{
  return floor(a1);
}

void JavaLangMath_maxWithFloat_withFloat_(float a1, float a2)
{
  if (a1 <= a2 && a1 >= a2 && a1 == a2) {
    JavaLangFloat_floatToRawIntBitsWithFloat_(a1);
  }
}

uint64_t JavaLangMath_maxWithInt_withInt_(uint64_t result, int a2)
{
  if ((int)result <= a2) {
    return a2;
  }
  else {
    return result;
  }
}

uint64_t JavaLangMath_maxWithLong_withLong_(uint64_t result, uint64_t a2)
{
  if (result <= a2) {
    return a2;
  }
  return result;
}

float JavaLangMath_minWithFloat_withFloat_(float a1, float a2)
{
  float v2 = a2;
  if (a1 <= a2)
  {
    if (a1 >= a2)
    {
      if (a1 == a2)
      {
        if (JavaLangFloat_floatToRawIntBitsWithFloat_(a1) == 0x80000000) {
          return -0.0;
        }
      }
      else
      {
        return NAN;
      }
    }
    else
    {
      return a1;
    }
  }
  return v2;
}

uint64_t JavaLangMath_minWithInt_withInt_(uint64_t result, int a2)
{
  if ((int)result >= a2) {
    return a2;
  }
  else {
    return result;
  }
}

uint64_t JavaLangMath_minWithLong_withLong_(uint64_t result, uint64_t a2)
{
  if (result >= a2) {
    return a2;
  }
  return result;
}

unint64_t JavaLangMath_roundWithDouble_(double a1)
{
  double v1 = a1 + 0.5;
  unint64_t v2 = vcvtmd_s64_f64(v1);
  unint64_t v3 = 0x7FFFFFFFFFFFFFFFLL;
  if (floor(v1) < 0.0) {
    unint64_t v3 = 0x8000000000000000;
  }
  if (v2 == 0x8000000000000000) {
    return v3;
  }
  else {
    return v2;
  }
}

uint64_t JavaLangMath_roundWithFloat_(float a1)
{
  float v1 = a1 + 0.5;
  unsigned int v2 = vcvtms_s32_f32(v1);
  if (floorf(v1) < 0.0) {
    unsigned int v3 = 0x80000000;
  }
  else {
    unsigned int v3 = 0x7FFFFFFF;
  }
  if (v2 == 0x80000000) {
    return v3;
  }
  else {
    return v2;
  }
}

uint64_t JavaLangMath_signumWithDouble_()
{
  return JavaLangDouble_isNaNWithDouble_();
}

uint64_t JavaLangMath_signumWithFloat_()
{
  return JavaLangFloat_isNaNWithFloat_();
}

double JavaLangMath_sqrtWithDouble_(double a1)
{
  return sqrt(a1);
}

id JavaLangMath_setRandomSeedInternalWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangMath_NoImagePreloadHolder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = (void *)qword_100560D40;
  if (!qword_100560D40) {
    JreThrowNullPointerException();
  }
  return [v2 setSeedWithLong:a1];
}

double JavaLangMath_toRadiansWithDouble_(double a1)
{
  return a1 / 180.0 * 3.14159265;
}

double JavaLangMath_toDegreesWithDouble_(double a1)
{
  return a1 * 180.0 / 3.14159265;
}

void JavaLangMath_ulpWithDouble_(double a1)
{
  if (!JavaLangDouble_isInfiniteWithDouble_(a1) && a1 != 1.79769313e308 && a1 != -1.79769313e308)
  {
    uint64_t v3 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
    double v4 = JavaLangDouble_longBitsToDoubleWithLong_(v3 & 0x7FFFFFFFFFFFFFFFLL);
    nextafter(v4, 1.79769313e308);
  }
}

float JavaLangMath_ulpWithFloat_(float a1)
{
  if (JavaLangFloat_isNaNWithFloat_()) {
    return NAN;
  }
  if (JavaLangFloat_isInfiniteWithFloat_(a1)) {
    return INFINITY;
  }
  if (a1 == 3.4028e38 || a1 == -3.4028e38) {
    return 2.0282e31;
  }
  int v5 = JavaLangFloat_floatToRawIntBitsWithFloat_(a1);
  float v6 = JavaLangFloat_intBitsToFloatWithInt_(v5 & 0x7FFFFFFF);
  int v7 = JavaLangFloat_floatToRawIntBitsWithFloat_(v6);
  int v8 = JavaLangFloat_floatToRawIntBitsWithFloat_(3.4028e38);
  if ((v7 & 0x7FFFFFFF) != 0)
  {
    if (v7 > 0 != v7 > v8) {
      int v9 = v7 + 1;
    }
    else {
      int v9 = v7 - 1;
    }
    return JavaLangFloat_intBitsToFloatWithInt_(v9) - v6;
  }
  else
  {
    unsigned int v10 = v8 & 0x80000000 | 1;
    return JavaLangFloat_intBitsToFloatWithInt_(v10);
  }
}

double JavaLangMath_copySignWithDouble_withDouble_(double a1, double a2)
{
  uint64_t v3 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  unint64_t v4 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a2) & 0x8000000000000000 | v3 & 0x7FFFFFFFFFFFFFFFLL;
  return JavaLangDouble_longBitsToDoubleWithLong_(v4);
}

float JavaLangMath_copySignWithFloat_withFloat_(float a1, float a2)
{
  int v3 = JavaLangFloat_floatToRawIntBitsWithFloat_(a1);
  int v4 = JavaLangFloat_floatToRawIntBitsWithFloat_(a2) & 0x80000000 | v3 & 0x7FFFFFFF;
  return JavaLangFloat_intBitsToFloatWithInt_(v4);
}

uint64_t JavaLangMath_getExponentWithFloat_(float a1)
{
  return (JavaLangFloat_floatToRawIntBitsWithFloat_(a1) >> 23) - 127;
}

uint64_t JavaLangMath_getExponentWithDouble_(double a1)
{
  return (((unint64_t)JavaLangDouble_doubleToRawLongBitsWithDouble_(a1) >> 52) & 0x7FF) - 1023;
}

float JavaLangMath_nextAfterWithFloat_withDouble_(float a1, double a2)
{
  if (JavaLangFloat_isNaNWithFloat_() & 1) != 0 || (JavaLangDouble_isNaNWithDouble_())
  {
    int v4 = 2143289344;
    return *(float *)&v4;
  }
  if (a1 == 0.0 && a2 == 0.0) {
    return a2;
  }
  double v6 = a1;
  if (a1 == COERCE_FLOAT(1) && v6 > a2 || a1 == COERCE_FLOAT(-2147483647) && v6 < a2)
  {
    float result = -0.0;
    if (a1 > 0.0) {
      return 0.0;
    }
    return result;
  }
  BOOL isInfiniteWithFloat = JavaLangFloat_isInfiniteWithFloat_(a1);
  if (v6 != a2 && isInfiniteWithFloat)
  {
    BOOL v8 = a1 <= 0.0;
    float result = -3.4028e38;
    float v9 = 3.4028e38;
    goto LABEL_28;
  }
  BOOL v10 = a1 == -3.4028e38;
  if (v6 <= a2) {
    BOOL v10 = 0;
  }
  if (v6 < a2 && a1 == 3.4028e38 || v10)
  {
    BOOL v8 = a1 <= 0.0;
    float result = -INFINITY;
    float v9 = INFINITY;
LABEL_28:
    if (!v8) {
      return v9;
    }
    return result;
  }
  if (v6 >= a2)
  {
    if (v6 <= a2) {
      return a2;
    }
    if (a1 > 0.0) {
      goto LABEL_37;
    }
    if (a1 >= 0.0)
    {
      int v4 = -2147483647;
      return *(float *)&v4;
    }
LABEL_39:
    int v13 = JavaLangFloat_floatToIntBitsWithFloat_(a1) + 1;
    goto LABEL_40;
  }
  if (a1 > 0.0) {
    goto LABEL_39;
  }
  if (a1 >= 0.0)
  {
    int v4 = 1;
    return *(float *)&v4;
  }
LABEL_37:
  int v13 = JavaLangFloat_floatToIntBitsWithFloat_(a1) - 1;
LABEL_40:
  return JavaLangFloat_intBitsToFloatWithInt_(v13);
}

double JavaLangMath_nextUpWithDouble_(double a1)
{
  if (JavaLangDouble_isNaNWithDouble_())
  {
    uint64_t v2 = 0x7FF8000000000000;
    return *(double *)&v2;
  }
  double result = INFINITY;
  if (a1 != INFINITY)
  {
    if (a1 == 0.0)
    {
      uint64_t v2 = 1;
      return *(double *)&v2;
    }
    uint64_t v4 = JavaLangDouble_doubleToLongBitsWithDouble_(a1);
    if (a1 > 0.0) {
      uint64_t v5 = v4 + 1;
    }
    else {
      uint64_t v5 = v4 - 1;
    }
    return JavaLangDouble_longBitsToDoubleWithLong_(v5);
  }
  return result;
}

float JavaLangMath_nextUpWithFloat_(float a1)
{
  if (JavaLangFloat_isNaNWithFloat_())
  {
    int v2 = 2143289344;
    return *(float *)&v2;
  }
  float result = INFINITY;
  if (a1 != INFINITY)
  {
    if (a1 == 0.0)
    {
      int v2 = 1;
      return *(float *)&v2;
    }
    int v4 = JavaLangFloat_floatToIntBitsWithFloat_(a1);
    if (a1 > 0.0) {
      int v5 = v4 + 1;
    }
    else {
      int v5 = v4 - 1;
    }
    return JavaLangFloat_intBitsToFloatWithInt_(v5);
  }
  return result;
}

double JavaLangMath_scalbWithDouble_withInt_(int a1, double a2)
{
  if (JavaLangDouble_isNaNWithDouble_()) {
    return a2;
  }
  isInfiniteWithDoubluint64_t e = JavaLangDouble_isInfiniteWithDouble_(a2);
  if (a2 == 0.0 || isInfiniteWithDouble) {
    return a2;
  }
  unint64_t v5 = JavaLangDouble_doubleToLongBitsWithDouble_(a2);
  int v6 = JavaLangLong_numberOfLeadingZerosWithLong_(v5 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v7 = (v6 - 12) & ~((v6 - 12) >> 31);
  uint64_t v8 = ((v5 >> 52) & 0x7FF) + a1 - v7 - 1023;
  if (v8 >= 1024)
  {
    if (a2 <= 0.0) {
      return -INFINITY;
    }
    else {
      return INFINITY;
    }
  }
  if (v8 > -1023)
  {
    uint64_t v15 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a2);
    double v16 = JavaLangDouble_longBitsToDoubleWithLong_(v15 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v17 = (v8 << 52) + 0x3FF0000000000000;
    uint64_t v18 = (v5 << (v7 + 1)) & 0xFFFFFFFFFFFFFLL | v17;
    uint64_t v19 = v17 | v5 & 0xFFFFFFFFFFFFFLL;
    if (v16 >= 2.22507386e-308) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = v18;
    }
  }
  else
  {
    uint64_t v10 = v8 + (v7 + 1023);
    uint64_t v11 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a2);
    double v12 = JavaLangDouble_longBitsToDoubleWithLong_(v11 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v13 = v5 & 0xFFFFFFFFFFFFFLL;
    if (v12 >= 2.22507386e-308)
    {
      v13 |= 0x10000000000000uLL;
      uint64_t v14 = v10 - 1;
    }
    else
    {
      uint64_t v14 = v10;
    }
    uint64_t v20 = sub_1001E48E8(v13, v14);
  }
  unint64_t v21 = v20 | v5 & 0x8000000000000000;
  return JavaLangDouble_longBitsToDoubleWithLong_(v21);
}

float JavaLangMath_scalbWithFloat_withInt_(int a1, float a2)
{
  if (JavaLangFloat_isNaNWithFloat_()) {
    return a2;
  }
  BOOL isInfiniteWithFloat = JavaLangFloat_isInfiniteWithFloat_(a2);
  if (a2 == 0.0 || isInfiniteWithFloat) {
    return a2;
  }
  unsigned int v5 = JavaLangFloat_floatToIntBitsWithFloat_(a2);
  int v6 = JavaLangInteger_numberOfLeadingZerosWithInt_(v5 & 0x7FFFFFFF);
  int v7 = (v6 - 9) & ~((v6 - 9) >> 31);
  int v8 = a1 + (v5 >> 23) - v7 - 127;
  if (v8 >= 128)
  {
    if (a2 <= 0.0) {
      return -INFINITY;
    }
    else {
      return INFINITY;
    }
  }
  if (v8 > -127)
  {
    int v15 = JavaLangFloat_floatToRawIntBitsWithFloat_(a2);
    float v16 = JavaLangFloat_intBitsToFloatWithInt_(v15 & 0x7FFFFFFF);
    int v17 = (v8 << 23) + 1065353216;
    int v18 = v17 | (v5 << (v7 + 1)) & 0x7FFFFF;
    int v19 = v17 | v5 & 0x7FFFFF;
    if (v16 >= 1.1755e-38) {
      int v20 = v19;
    }
    else {
      int v20 = v18;
    }
  }
  else
  {
    int v10 = (v5 >> 23) + a1;
    int v11 = JavaLangFloat_floatToRawIntBitsWithFloat_(a2);
    float v12 = JavaLangFloat_intBitsToFloatWithInt_(v11 & 0x7FFFFFFF);
    signed int v13 = v5 & 0x7FFFFF;
    if (v12 >= 1.1755e-38)
    {
      v13 |= 0x800000u;
      int v14 = v10 - 1;
    }
    else
    {
      int v14 = v10;
    }
    int v20 = sub_1001E4844(v13, v14);
  }
  unsigned int v21 = v20 | v5 & 0x80000000;
  return JavaLangFloat_intBitsToFloatWithInt_(v21);
}

uint64_t sub_1001E4844(signed int a1, int a2)
{
  if (a2 >= 1) {
    return (a1 << a2);
  }
  if ((int)JavaLangInteger_numberOfLeadingZerosWithInt_(a1 & 0x7FFFFFFF) > a2 + 32) {
    return 0;
  }
  uint64_t v4 = (a1 >> -(char)a2);
  int v5 = ~a2;
  if ((a1 >> v5))
  {
    if ((int)JavaLangInteger_numberOfTrailingZerosWithInt_(a1) < v5) {
      LODWORD(v4) = v4 + 1;
    }
    return v4
         + ((JavaLangInteger_numberOfTrailingZerosWithInt_(a1) == v5) & v4);
  }
  return v4;
}

uint64_t sub_1001E48E8(uint64_t a1, uint64_t a2)
{
  if (a2 >= 1) {
    return a1 << a2;
  }
  if (a2 + 64 < (int)JavaLangLong_numberOfLeadingZerosWithLong_(a1 & 0x7FFFFFFFFFFFFFFFLL)) {
    return 0;
  }
  uint64_t v4 = a1 >> -(char)a2;
  uint64_t v5 = ~a2;
  if (((unint64_t)a1 >> v5))
  {
    if ((int)JavaLangLong_numberOfTrailingZerosWithLong_(a1) < v5) {
      ++v4;
    }
    v4 += ((int)JavaLangLong_numberOfTrailingZerosWithLong_(a1) == v5) & v4;
  }
  return v4;
}

double JavaLangMath_random()
{
  if (qword_100560D50 != -1) {
    dispatch_once(&qword_100560D50, &stru_100433F10);
  }
  uint64_t v0 = (void *)qword_100560D48;
  objc_sync_enter((id)qword_100560D48);
  if ((atomic_load_explicit(JavaLangMath_NoImagePreloadHolder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100560D40) {
    JreThrowNullPointerException();
  }
  [(id)qword_100560D40 nextDouble];
  double v2 = v1;
  objc_sync_exit(v0);
  return v2;
}

void sub_1001E4A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaLangMath_randomIntInternal()
{
  if ((atomic_load_explicit(JavaLangMath_NoImagePreloadHolder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)qword_100560D40;
  if (!qword_100560D40) {
    JreThrowNullPointerException();
  }
  return [v0 nextInt];
}

void sub_1001E4AA0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560D48 = IOSClass_fromClass(v1);
}

id JavaUtilPropertyResourceBundle_initWithJavaIoInputStream_(uint64_t a1, uint64_t a2)
{
  JavaUtilResourceBundle_init(a1);
  if (!a2)
  {
    int v7 = new_JavaLangNullPointerException_initWithNSString_(@"stream == null");
    objc_exception_throw(v7);
  }
  uint64_t v4 = new_JavaUtilProperties_init();
  JreStrongAssignAndConsume((id *)(a1 + 32), v4);
  uint64_t v5 = *(void **)(a1 + 32);
  return objc_msgSend(v5, "load__WithJavaIoInputStream:", a2);
}

id JavaUtilPropertyResourceBundle_initWithJavaIoReader_(uint64_t a1, uint64_t a2)
{
  JavaUtilResourceBundle_init(a1);
  uint64_t v4 = new_JavaUtilProperties_init();
  JreStrongAssignAndConsume((id *)(a1 + 32), v4);
  uint64_t v5 = *(void **)(a1 + 32);
  return objc_msgSend(v5, "load__WithJavaIoReader:", a2);
}

id sub_1001E4CB0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (!v1) {
    JreThrowNullPointerException();
  }
  id v2 = [v1 propertyNames];
  int v3 = (void *)JavaUtilEnumeration_class_();
  if (v2 && ([v3 isInstance:v2] & 1) == 0) {
    JreThrowClassCastException();
  }
  return v2;
}

JavaUtilPropertyResourceBundle *new_JavaUtilPropertyResourceBundle_initWithJavaIoReader_(uint64_t a1)
{
  id v2 = [JavaUtilPropertyResourceBundle alloc];
  JavaUtilPropertyResourceBundle_initWithJavaIoReader_((uint64_t)v2, a1);
  return v2;
}

uint64_t sub_1001E4E5C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  if (!*(void *)(a1 + 32))
  {
    do
    {
      int v3 = *(void **)(a1 + 24);
      if (v3)
      {
        uint64_t result = (uint64_t)[v3 hasMoreElements];
        if (!result) {
          return result;
        }
        id v5 = [*(id *)(a1 + 24) nextElement];
        int v6 = *(void **)(*(void *)(a1 + 8) + 32);
        if (v6) {
          continue;
        }
      }
      JreThrowNullPointerException();
    }
    while (([v6 containsKeyWithId:v5] & 1) != 0);
    JreStrongAssign(v1, v5);
  }
  return 1;
}

id sub_1001E4FE4(id *a1, void *a2)
{
  JreStrongAssign(a1 + 1, a2);
  id v4 = sub_1001E4CB0((uint64_t)a2);
  JreStrongAssign(a1 + 2, v4);
  id v5 = (void *)a2[1];
  if (!v5) {
    JreThrowNullPointerException();
  }
  id v6 = [v5 getKeys];
  return JreStrongAssign(a1 + 3, v6);
}

id JavaNetDatagramSocket_initWithInt_(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = -1;
  *(_WORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  sub_100159298(a2, v4, v5, v6, v7, v8, v9, v10);
  if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v11 = JavaNetInet4Address_ANY_;
  return [(id)a1 createSocketWithInt:a2 withJavaNetInetAddress:v11];
}

id JavaNetDatagramSocket_initWithInt_withJavaNetInetAddress_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 24) = -1;
  *(_WORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  sub_100159298(a2, v6, v7, v8, v9, v10, v11, v12);
  if (!a3)
  {
    if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    a3 = JavaNetInet4Address_ANY_;
  }
  return [(id)a1 createSocketWithInt:a2 withJavaNetInetAddress:a3];
}

void sub_1001E5500(void *a1)
{
}

void sub_1001E560C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E56A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E5744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E57F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E5A34(_Unwind_Exception *a1)
{
}

void sub_1001E5AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E5B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E5C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNetDatagramSocket_setDatagramSocketImplFactoryWithJavaNetDatagramSocketImplFactory_(void *a1)
{
  if (qword_100560D60 != -1) {
    dispatch_once(&qword_100560D60, &stru_100434EF8);
  }
  id v2 = (void *)qword_100560D58;
  objc_sync_enter((id)qword_100560D58);
  if (JavaNetDatagramSocket_factory_)
  {
    uint64_t v4 = new_JavaNetSocketException_initWithNSString_(@"Factory already set");
    objc_exception_throw(v4);
  }
  JreStrongAssign((id *)&JavaNetDatagramSocket_factory_, a1);
  return objc_sync_exit(v2);
}

void sub_1001E5CE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaNetDatagramSocket_initWithJavaNetDatagramSocketImpl_(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 24) = -1;
  *(_WORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  if (!a2)
  {
    uint64_t v5 = new_JavaLangNullPointerException_initWithNSString_(@"socketImpl == null");
    objc_exception_throw(v5);
  }
  return JreStrongAssign((id *)(a1 + 8), a2);
}

id JavaNetDatagramSocket_initWithJavaNetSocketAddress_(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 24) = -1;
  *(_WORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  if (a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      [a2 getClass];
      CFStringRef v20 = JreStrcat("$@", v13, v14, v15, v16, v17, v18, v19, @"Local address not an InetSocketAddress: ");
      unsigned int v21 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v20);
      objc_exception_throw(v21);
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    id v4 = [a2 getPort];
    sub_100159298((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11);
  }
  if (JavaNetDatagramSocket_factory_) {
    uint64_t v12 = (JavaNetPlainDatagramSocketImpl *)[(id)JavaNetDatagramSocket_factory_ createDatagramSocketImpl];
  }
  else {
    uint64_t v12 = new_JavaNetPlainDatagramSocketImpl_init();
  }
  JreStrongAssign((id *)(a1 + 8), v12);
  [*(id *)(a1 + 8) create];
  if (a2) {
    [(id)a1 bindWithJavaNetSocketAddress:a2];
  }
  return [(id)a1 setBroadcastWithBoolean:1];
}

void sub_1001E623C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001E6790(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560D58 = IOSClass_fromClass(v1);
}

id JavaUtilTreeMap_init(uint64_t a1, uint64_t a2)
{
  JavaUtilAbstractMap_init(a1, a2);
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  int v3 = (void *)qword_100560D68;
  id v4 = (void *)JavaUtilComparator_class_();
  if (v3 && ([v4 isInstance:v3] & 1) == 0) {
    JreThrowClassCastException();
  }
  return JreStrongAssign((id *)(a1 + 24), v3);
}

id JavaUtilTreeMap_initWithJavaUtilMap_(void *a1, void *a2)
{
  JavaUtilTreeMap_init((uint64_t)a1, (uint64_t)a2);
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  if (!a2 || (id v4 = objc_msgSend(a2, "entrySet", (void)v11)) == 0) {
LABEL_12:
  }
    JreThrowNullPointerException();
  uint64_t v5 = v4;
  id result = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (result)
  {
    id v7 = result;
    uint64_t v8 = *(void *)v12;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v9);
        if (!v10) {
          goto LABEL_12;
        }
        objc_msgSend(a1, "putInternalWithId:withId:", objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * (void)v9), "getKey"), objc_msgSend(v10, "getValue"));
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id result = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      id v7 = result;
    }
    while (result);
  }
  return result;
}

id JavaUtilTreeMap_initWithJavaUtilComparator_(uint64_t a1, void *a2)
{
  id v2 = a2;
  JavaUtilAbstractMap_init(a1, a2);
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  id v4 = (id *)(a1 + 24);
  if (!v2)
  {
    id v2 = (void *)qword_100560D68;
    uint64_t v5 = (void *)JavaUtilComparator_class_();
    if (v2)
    {
      if (([v5 isInstance:v2] & 1) == 0) {
        JreThrowClassCastException();
      }
    }
  }
  return JreStrongAssign(v4, v2);
}

id JavaUtilTreeMap_initWithJavaUtilSortedMap_(id *a1, void *a2)
{
  JavaUtilAbstractMap_init(a1, a2);
  *((_DWORD *)a1 + 10) = 0;
  *((_DWORD *)a1 + 11) = 0;
  if (!a2) {
    goto LABEL_17;
  }
  id v4 = [a2 comparator];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = a1 + 3;
  }
  else
  {
    uint64_t v7 = qword_100560D68;
    uint64_t v8 = (void *)JavaUtilComparator_class_();
    if (v7 && ([v8 isInstance:v7] & 1) == 0) {
      JreThrowClassCastException();
    }
    uint64_t v6 = a1 + 3;
    uint64_t v5 = (void *)v7;
  }
  JreStrongAssign(v6, v5);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v9 = objc_msgSend(a2, "entrySet", 0);
  if (!v9) {
LABEL_17:
  }
    JreThrowNullPointerException();
  uint64_t v10 = v9;
  id result = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (result)
  {
    id v12 = result;
    uint64_t v13 = *(void *)v17;
    do
    {
      long long v14 = 0;
      do
      {
        if (*(void *)v17 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v15 = *(void **)(*((void *)&v16 + 1) + 8 * (void)v14);
        if (!v15) {
          goto LABEL_17;
        }
        objc_msgSend(a1, "putInternalWithId:withId:", objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * (void)v14), "getKey"), objc_msgSend(v15, "getValue"));
        long long v14 = (char *)v14 + 1;
      }
      while (v12 != v14);
      id result = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
      id v12 = result;
    }
    while (result);
  }
  return result;
}

void sub_1001E6D44(_Unwind_Exception *a1)
{
}

JavaUtilTreeMap_Node *new_JavaUtilTreeMap_Node_initWithJavaUtilTreeMap_Node_withId_(void *a1, void *a2)
{
  id v4 = [JavaUtilTreeMap_Node alloc];
  objc_storeWeak((id *)&v4->parent_, a1);
  JreStrongAssign(&v4->key_, a2);
  v4->height_ = 1;
  return v4;
}

uint64_t sub_1001E7258(uint64_t result, uint64_t a2, int a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = result;
    do
    {
      uint64_t v6 = *(void *)(v4 + 16);
      if (v6) {
        id result = *(unsigned int *)(v6 + 48);
      }
      else {
        id result = 0;
      }
      uint64_t v7 = *(void *)(v4 + 24);
      if (v7) {
        int v8 = *(_DWORD *)(v7 + 48);
      }
      else {
        int v8 = 0;
      }
      if (result - v8 == 2)
      {
        if (!v6) {
LABEL_43:
        }
          JreThrowNullPointerException();
        uint64_t v13 = *(void *)(v6 + 24);
        if (v13) {
          LODWORD(v13) = *(_DWORD *)(v13 + 48);
        }
        uint64_t v14 = *(void *)(v6 + 16);
        if (v14) {
          LODWORD(v14) = *(_DWORD *)(v14 + 48);
        }
        int v15 = v14 - v13;
        if (v15) {
          int v16 = 1;
        }
        else {
          int v16 = a3;
        }
        if (v15 != 1 && v16) {
          sub_1001E774C(v5, v6);
        }
        id result = sub_1001E7838(v5, v4);
        if (a3) {
          return result;
        }
      }
      else if (result - v8 == -2)
      {
        if (!v7) {
          goto LABEL_43;
        }
        uint64_t v9 = *(void *)(v7 + 24);
        if (v9) {
          LODWORD(v9) = *(_DWORD *)(v9 + 48);
        }
        uint64_t v10 = *(void *)(v7 + 16);
        if (v10) {
          LODWORD(v10) = *(_DWORD *)(v10 + 48);
        }
        int v11 = v10 - v9;
        if (v11) {
          int v12 = 1;
        }
        else {
          int v12 = a3;
        }
        if (v11 != -1)
        {
          if (v12) {
            sub_1001E7838(v5, *(void *)(v4 + 24));
          }
        }
        id result = sub_1001E774C(v5, v4);
        if (a3) {
          return result;
        }
      }
      else if (result == v8)
      {
        *(_DWORD *)(v4 + 48) = result + 1;
        if (a3) {
          return result;
        }
      }
      else
      {
        id result = JavaLangMath_maxWithInt_withInt_(result, v8);
        *(_DWORD *)(v4 + 48) = result + 1;
        if (!a3) {
          return result;
        }
      }
      id result = (uint64_t)objc_loadWeak((id *)(v4 + 8));
      uint64_t v4 = result;
    }
    while (result);
  }
  return result;
}

id sub_1001E7648(uint64_t a1, id *a2, id *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v6 = a2 + 1;
  Weak = (id *)objc_loadWeak(a2 + 1);
  objc_storeWeak(v6, 0);
  if (a3) {
    objc_storeWeak(a3 + 1, Weak);
  }
  if (Weak)
  {
    int v8 = Weak + 2;
    if (Weak[2] != a2) {
      int v8 = Weak + 3;
    }
  }
  else
  {
    int v8 = (id *)(a1 + 32);
  }
  return JreStrongAssign(v8, a3);
}

uint64_t sub_1001E774C(uint64_t a1, uint64_t a2)
{
  if (!a2 || (uint64_t v4 = *(void *)(a2 + 24)) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  JreStrongAssign((id *)(a2 + 24), (void *)v6);
  if (v6) {
    objc_storeWeak((id *)(v6 + 8), (id)a2);
  }
  sub_1001E7648(a1, (id *)a2, (id *)v4);
  JreStrongAssign((id *)(v4 + 16), (void *)a2);
  objc_storeWeak((id *)(a2 + 8), (id)v4);
  if (v5)
  {
    uint64_t v8 = *(unsigned int *)(v5 + 48);
    if (v6)
    {
LABEL_7:
      int v9 = *(_DWORD *)(v6 + 48);
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (v6) {
      goto LABEL_7;
    }
  }
  int v9 = 0;
LABEL_10:
  uint64_t v10 = JavaLangMath_maxWithInt_withInt_(v8, v9) + 1;
  *(_DWORD *)(a2 + 48) = v10;
  if (v7) {
    int v11 = *(_DWORD *)(v7 + 48);
  }
  else {
    int v11 = 0;
  }
  uint64_t result = JavaLangMath_maxWithInt_withInt_(v10, v11);
  *(_DWORD *)(v4 + 48) = result + 1;
  return result;
}

uint64_t sub_1001E7838(uint64_t a1, uint64_t a2)
{
  if (!a2 || (uint64_t v4 = *(void *)(a2 + 16)) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(v4 + 16);
  JreStrongAssign((id *)(a2 + 16), (void *)v6);
  if (v6) {
    objc_storeWeak((id *)(v6 + 8), (id)a2);
  }
  sub_1001E7648(a1, (id *)a2, (id *)v4);
  JreStrongAssign((id *)(v4 + 24), (void *)a2);
  objc_storeWeak((id *)(a2 + 8), (id)v4);
  if (v5)
  {
    uint64_t v8 = *(unsigned int *)(v5 + 48);
    if (v6)
    {
LABEL_7:
      int v9 = *(_DWORD *)(v6 + 48);
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (v6) {
      goto LABEL_7;
    }
  }
  int v9 = 0;
LABEL_10:
  uint64_t v10 = JavaLangMath_maxWithInt_withInt_(v8, v9) + 1;
  *(_DWORD *)(a2 + 48) = v10;
  if (v7) {
    int v11 = *(_DWORD *)(v7 + 48);
  }
  else {
    int v11 = 0;
  }
  uint64_t result = JavaLangMath_maxWithInt_withInt_(v10, v11);
  *(_DWORD *)(v4 + 48) = result + 1;
  return result;
}

JavaUtilTreeMap_EntrySet *new_JavaUtilTreeMap_EntrySet_initWithJavaUtilTreeMap_(void *a1)
{
  id v2 = [JavaUtilTreeMap_EntrySet alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractSet_init(v2, v3);
  return v2;
}

JavaUtilTreeMap_KeySet *new_JavaUtilTreeMap_KeySet_initWithJavaUtilTreeMap_(void *a1)
{
  id v2 = [JavaUtilTreeMap_KeySet alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractSet_init(v2, v3);
  return v2;
}

JavaUtilTreeMap_ValuesCollection *new_JavaUtilTreeMap_ValuesCollection_initWithJavaUtilTreeMap_(void *a1)
{
  id v2 = [JavaUtilTreeMap_ValuesCollection alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractCollection_init(v2, v3);
  return v2;
}

uint64_t JavaUtilTreeMap_countWithJavaUtilIterator_(void *a1)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = 0;
  if ([a1 hasNext])
  {
    do
    {
      [a1 next];
      uint64_t v2 = (v2 + 1);
    }
    while (([a1 hasNext] & 1) != 0);
  }
  return v2;
}

JavaUtilTreeMap *new_JavaUtilTreeMap_init()
{
  uint64_t v0 = [JavaUtilTreeMap alloc];
  JavaUtilTreeMap_init((uint64_t)v0, v1);
  return v0;
}

JavaUtilTreeMap *new_JavaUtilTreeMap_initWithJavaUtilComparator_(void *a1)
{
  uint64_t v2 = [JavaUtilTreeMap alloc];
  JavaUtilTreeMap_initWithJavaUtilComparator_((uint64_t)v2, a1);
  return v2;
}

JavaUtilTreeMap *new_JavaUtilTreeMap_initWithJavaUtilSortedMap_(void *a1)
{
  uint64_t v2 = [JavaUtilTreeMap alloc];
  JavaUtilTreeMap_initWithJavaUtilSortedMap_((id *)&v2->super.super.isa, a1);
  return v2;
}

IOSObjectArray *JavaUtilTreeMap_RelationEnum_values()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaUtilTreeMap_RelationEnum_class_();
  return +[IOSObjectArray arrayWithObjects:&JavaUtilTreeMap_RelationEnum_values_ count:6 type:v0];
}

void *JavaUtilTreeMap_RelationEnum_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = (void *)JavaUtilTreeMap_RelationEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v3, "name"))) {
      break;
    }
    if (++v2 == 6) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v3;
}

uint64_t JavaUtilTreeMap_RelationEnum_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560D78 != -1) {
    dispatch_once(&qword_100560D78, &stru_100435E20);
  }
  return qword_100560D70;
}

void sub_1001E90CC(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560D70 = IOSClass_fromClass(v1);
}

unint64_t sub_1001E9AA8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, int a5, int a6)
{
  if (*a2)
  {
    int v11 = (char *)a2[3];
  }
  else
  {
    int v11 = (char *)a2[4];
    *a2 = 1;
    a2[2] = a1 + 44;
  }
  uint64_t v13 = (char *)a2[5];
  a2[1] = a3;
  if (v11) {
    BOOL v14 = a4 == 0;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    uint64_t v16 = 0;
    while (1)
    {
      if (a5 == 1)
      {
        uint64_t v18 = 32;
      }
      else
      {
        long long v17 = v11;
        if (a5 != 2) {
          goto LABEL_15;
        }
        uint64_t v18 = 40;
      }
      long long v17 = *(char **)&v11[v18];
LABEL_15:
      *(void *)(a3 + 8 * v16) = v17;
      unint64_t v15 = v16 + 1;
      if (v11 == v13)
      {
        int v11 = 0;
        goto LABEL_23;
      }
      if (a6)
      {
        int v11 = (char *)[v11 next];
        if (!v11) {
          goto LABEL_23;
        }
      }
      else
      {
        int v11 = (char *)[v11 prev];
        if (!v11) {
          goto LABEL_23;
        }
      }
      ++v16;
      if (v15 >= a4) {
        goto LABEL_23;
      }
    }
  }
  unint64_t v15 = 0;
LABEL_23:
  a2[3] = v11;
  return v15;
}

id sub_1001E9BF8(uint64_t a1, uint64_t a2, void *a3)
{
  Weak = objc_loadWeak((id *)(a2 + 8));
  JreStrongAssign((id *)(a1 + 32), Weak);
  *(_DWORD *)(a1 + 24) = Weak[11];
  return JreStrongAssign((id *)(a1 + 8), a3);
}

id sub_1001EA59C(uint64_t a1, uint64_t a2, void *a3)
{
  Weak = objc_loadWeak((id *)(a2 + 8));
  JreStrongAssign((id *)(a1 + 32), Weak);
  *(_DWORD *)(a1 + 24) = Weak[11];
  return JreStrongAssign((id *)(a1 + 8), a3);
}

id sub_1001EA8D4(uint64_t a1, uint64_t a2, void *a3)
{
  Weak = objc_loadWeak((id *)(a2 + 8));
  JreStrongAssign((id *)(a1 + 32), Weak);
  *(_DWORD *)(a1 + 24) = Weak[11];
  return JreStrongAssign((id *)(a1 + 8), a3);
}

IOSObjectArray *JavaUtilTreeMap_BoundEnum_values()
{
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaUtilTreeMap_BoundEnum_class_();
  return +[IOSObjectArray arrayWithObjects:&JavaUtilTreeMap_BoundEnum_values_ count:3 type:v0];
}

void *JavaUtilTreeMap_BoundEnum_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = (void *)JavaUtilTreeMap_BoundEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v3, "name"))) {
      break;
    }
    if (++v2 == 3) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v3;
}

uint64_t JavaUtilTreeMap_BoundEnum_class_()
{
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560D88 != -1) {
    dispatch_once(&qword_100560D88, &stru_100437170);
  }
  return qword_100560D80;
}

void sub_1001EAC0C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560D80 = IOSClass_fromClass(v1);
}

id JavaUtilTreeMap_BoundedMap_initWithJavaUtilTreeMap_withBoolean_withId_withJavaUtilTreeMap_BoundEnum_withId_withJavaUtilTreeMap_BoundEnum_(uint64_t a1, void *a2, char a3, void *a4, void *a5, void *a6, void *a7)
{
  JreStrongAssign((id *)(a1 + 24), a2);
  JavaUtilAbstractMap_init(a1, v14);
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((void *)qword_100563F20 != a5)
  {
    if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if ((void *)qword_100563F20 != a7)
    {
      unint64_t v15 = (void *)a2[3];
      if (v15)
      {
        if ((int)[v15 compareWithId:a4 withId:a6] >= 1)
        {
          CFStringRef v23 = JreStrcat("@$@", v16, v17, v18, v19, v20, v21, v22, a4);
          int v24 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v23);
          objc_exception_throw(v24);
        }
        goto LABEL_21;
      }
LABEL_24:
      JreThrowNullPointerException();
    }
  }
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((void *)qword_100563F20 != a5)
  {
    uint64_t v25 = (void *)a2[3];
    if (!v25) {
      goto LABEL_24;
    }
    uint64_t v26 = a4;
    uint64_t v27 = a4;
    goto LABEL_20;
  }
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((void *)qword_100563F20 != a7)
  {
    uint64_t v25 = (void *)a2[3];
    if (!v25) {
      goto LABEL_24;
    }
    uint64_t v26 = a6;
    uint64_t v27 = a6;
LABEL_20:
    [v25 compareWithId:v26 withId:v27];
  }
LABEL_21:
  *(unsigned char *)(a1 + 32) = a3;
  JreStrongAssign((id *)(a1 + 40), a4);
  JreStrongAssign((id *)(a1 + 48), a5);
  JreStrongAssign((id *)(a1 + 56), a6);
  return JreStrongAssign((id *)(a1 + 64), a7);
}

void *sub_1001EB060(uint64_t a1, int a2)
{
  if (*(unsigned __int8 *)(a1 + 32) == a2)
  {
    unsigned int v3 = [*(id *)(a1 + 48) ordinal];
    if (v3)
    {
      if (v3 != 1)
      {
        if (v3 == 2)
        {
          uint64_t v4 = *(void **)(*(void *)(a1 + 24) + 32);
          if (!v4)
          {
            int v12 = 0;
LABEL_20:
            if (atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire))
            {
              if (v12)
              {
LABEL_22:
                uint64_t v13 = (uint64_t *)(a1 + 64);
                uint64_t v14 = qword_100563F20;
                goto LABEL_34;
              }
            }
            else
            {
              objc_opt_class();
              if (v12) {
                goto LABEL_22;
              }
            }
            return 0;
          }
          id v5 = [v4 first];
LABEL_19:
          int v12 = v5;
          goto LABEL_20;
        }
LABEL_43:
        uint64_t v19 = new_JavaLangAssertionError_init();
        objc_exception_throw(v19);
      }
      int v9 = *(void **)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 40);
      if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)objc_opt_class(); {
      uint64_t v11 = qword_100563F08;
      }
    }
    else
    {
      int v9 = *(void **)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 40);
      if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)objc_opt_class(); {
      uint64_t v11 = qword_100563F00;
      }
    }
    id v5 = objc_msgSend(v9, "findWithId:withJavaUtilTreeMap_RelationEnum:", v10, v11);
    goto LABEL_19;
  }
  unsigned int v6 = [*(id *)(a1 + 64) ordinal];
  if (!v6)
  {
    unint64_t v15 = *(void **)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 56);
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v17 = qword_100563EE8;
    goto LABEL_29;
  }
  if (v6 == 1)
  {
    unint64_t v15 = *(void **)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 56);
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v17 = JavaUtilTreeMap_RelationEnum_values_[0];
LABEL_29:
    id v8 = objc_msgSend(v15, "findWithId:withJavaUtilTreeMap_RelationEnum:", v16, v17);
    goto LABEL_30;
  }
  if (v6 != 2) {
    goto LABEL_43;
  }
  uint64_t v7 = *(void **)(*(void *)(a1 + 24) + 32);
  if (v7)
  {
    id v8 = [v7 last];
LABEL_30:
    int v12 = v8;
    goto LABEL_31;
  }
  int v12 = 0;
LABEL_31:
  uint64_t v14 = *(void *)(a1 + 48);
  if (atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire))
  {
    if (!v12) {
      return 0;
    }
  }
  else
  {
    objc_opt_class();
    if (!v12) {
      return 0;
    }
  }
  uint64_t v13 = &qword_100563F20;
LABEL_34:
  if (sub_1001EB5F4((void *)a1, (uint64_t)[v12 getKey], v14, *v13)) {
    return v12;
  }
  else {
    return 0;
  }
}

JavaLangIllegalArgumentException *sub_1001EB49C(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (!a3 || ([a3 leftCapWithId:*(void *)(a1 + 40)], !a4)) {
    JreThrowNullPointerException();
  }
  [a4 rightCapWithId:*(void *)(a1 + 56)];
  CFStringRef v14 = JreStrcat("@$$$$", v7, v8, v9, v10, v11, v12, v13, a2);
  unint64_t v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
  return v15;
}

uint64_t sub_1001EB5F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaUtilTreeMap_BoundEnum_values_[0] == a3)
  {
    uint64_t v9 = *(void **)(a1[3] + 24);
    if (!v9) {
      goto LABEL_24;
    }
    if (([v9 compareWithId:a2 withId:a1[5]] & 0x80000000) != 0) {
      return 0;
    }
  }
  else
  {
    if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (qword_100563F18 == a3)
    {
      uint64_t v8 = *(void **)(a1[3] + 24);
      if (!v8) {
        goto LABEL_24;
      }
      if ((int)[v8 compareWithId:a2 withId:a1[5]] < 1) {
        return 0;
      }
    }
  }
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaUtilTreeMap_BoundEnum_values_[0] == a4)
  {
    uint64_t v12 = *(void **)(a1[3] + 24);
    if (v12) {
      return (int)[v12 compareWithId:a2 withId:a1[7]] <= 0;
    }
LABEL_24:
    JreThrowNullPointerException();
  }
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100563F18 != a4) {
    return 1;
  }
  uint64_t v10 = *(void **)(a1[3] + 24);
  if (!v10) {
    goto LABEL_24;
  }
  return ([v10 compareWithId:a2 withId:a1[7]] & 0x80000000) != 0;
}

id sub_1001EBA00(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    goto LABEL_57;
  }
  id v5 = [a3 forOrderWithBoolean:*(unsigned __int8 *)(a1 + 32)];
  unsigned int v6 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_keySet_ConcurrentHashMap_;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 64);
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v9 = &qword_100563000;
  if (v8 != qword_100563F20)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)
    {
      objc_opt_class();
      unsigned int v6 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_keySet_ConcurrentHashMap_;
    }
    if (v5 == (id)JavaUtilTreeMap_RelationEnum_values_[0]) {
      goto LABEL_11;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (v5 == (id)qword_100563EE8)
    {
LABEL_11:
      uint64_t v10 = *(void **)(*(void *)(a1 + 24) + 24);
      if (!v10) {
        goto LABEL_57;
      }
      int v11 = [v10 compareWithId:*(void *)(a1 + 56) withId:a2];
      if (v11 <= 0)
      {
        int v17 = v11;
        a2 = *(void *)(a1 + 56);
        uint64_t v18 = *(void *)(a1 + 64);
        if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        if (v18 == qword_100563F18)
        {
          uint64_t v9 = &qword_100563000;
          if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)objc_opt_class(); {
          id v5 = (id)JavaUtilTreeMap_RelationEnum_values_[0];
          }
        }
        else
        {
          uint64_t v9 = &qword_100563000;
          if (v17 < 0)
          {
            if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)objc_opt_class(); {
            id v5 = (id)qword_100563EE8;
            }
          }
        }
      }
      else
      {
        uint64_t v9 = &qword_100563000;
      }
      if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v8 = v9[484];
      unsigned int v6 = &OBJC_IVAR___JavaUtilConcurrentConcurrentHashMap_keySet_ConcurrentHashMap_;
    }
  }
  uint64_t v12 = *(void *)(a1 + v6[243]);
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (v12 != v9[484])
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (v5 == (id)qword_100563F00) {
      goto LABEL_26;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (v5 == (id)qword_100563F08)
    {
LABEL_26:
      uint64_t v13 = *(void **)(*(void *)(a1 + 24) + 24);
      if (v13)
      {
        unsigned int v14 = [v13 compareWithId:*(void *)(a1 + 40) withId:a2];
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v15 = v14;
          a2 = *(void *)(a1 + 40);
          uint64_t v16 = *(void *)(a1 + v6[243]);
          if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          if (v16 == qword_100563F18)
          {
            if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)objc_opt_class(); {
            id v5 = (id)qword_100563F08;
            }
          }
          else if (v15)
          {
            if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilTreeMap_RelationEnum__initialized, memory_order_acquire) & 1) == 0)objc_opt_class(); {
            id v5 = (id)qword_100563F00;
            }
          }
        }
        if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v7 = v9[484];
        goto LABEL_49;
      }
LABEL_57:
      JreThrowNullPointerException();
    }
  }
LABEL_49:
  id result = objc_msgSend(*(id *)(a1 + 24), "findWithId:withJavaUtilTreeMap_RelationEnum:", a2, v5);
  if (result)
  {
    id v20 = result;
    if (sub_1001EB5F4((void *)a1, (uint64_t)[result getKey], v7, v8)) {
      return v20;
    }
    else {
      return 0;
    }
  }
  return result;
}

JavaUtilTreeMap_BoundedMap_BoundedEntrySet *new_JavaUtilTreeMap_BoundedMap_BoundedEntrySet_initWithJavaUtilTreeMap_BoundedMap_(void *a1)
{
  uint64_t v2 = [JavaUtilTreeMap_BoundedMap_BoundedEntrySet alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractSet_init(v2, v3);
  return v2;
}

JavaUtilTreeMap_BoundedMap_BoundedKeySet *new_JavaUtilTreeMap_BoundedMap_BoundedKeySet_initWithJavaUtilTreeMap_BoundedMap_(void *a1)
{
  uint64_t v2 = [JavaUtilTreeMap_BoundedMap_BoundedKeySet alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractSet_init(v2, v3);
  return v2;
}

JavaUtilTreeMap_BoundedMap_BoundedValuesCollection *new_JavaUtilTreeMap_BoundedMap_BoundedValuesCollection_initWithJavaUtilTreeMap_BoundedMap_(void *a1)
{
  uint64_t v2 = [JavaUtilTreeMap_BoundedMap_BoundedValuesCollection alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractCollection_init(v2, v3);
  return v2;
}

JavaUtilTreeMap_BoundedMap *sub_1001EC6DC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  if (*(unsigned char *)(a1 + 32)) {
    unsigned int v6 = a4;
  }
  else {
    unsigned int v6 = a2;
  }
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v7 = a5;
  }
  else {
    uint64_t v7 = a3;
  }
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = a5;
  }
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a4;
  }
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (v8 == (void *)qword_100563F20)
  {
    uint64_t v9 = *(void **)(a1 + 40);
    uint64_t v8 = *(void **)(a1 + 48);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 48);
    if (v8 == (void *)v10)
    {
      if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v10 = JavaUtilTreeMap_BoundEnum_values_[0];
    }
    if ((sub_1001EB5F4((void *)a1, (uint64_t)v9, v10, *(void *)(a1 + 64)) & 1) == 0)
    {
      int v11 = *(void **)(a1 + 64);
      uint64_t v12 = a1;
      uint64_t v13 = v6;
      unsigned int v14 = (void *)v10;
      goto LABEL_32;
    }
  }
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (v7 == (void *)qword_100563F20)
  {
    unsigned int v6 = *(void **)(a1 + 56);
    uint64_t v7 = *(void **)(a1 + 64);
  }
  else
  {
    uint64_t v15 = *(void *)(a1 + 64);
    if (v7 == (void *)v15)
    {
      if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v15 = JavaUtilTreeMap_BoundEnum_values_[0];
    }
    if ((sub_1001EB5F4((void *)a1, (uint64_t)v6, *(void *)(a1 + 48), v15) & 1) == 0)
    {
      unsigned int v14 = *(void **)(a1 + 48);
      uint64_t v12 = a1;
      uint64_t v13 = v6;
      int v11 = (void *)v15;
LABEL_32:
      uint64_t v16 = sub_1001EB49C(v12, v13, v14, v11);
      objc_exception_throw(v16);
    }
  }
  int v17 = *(void **)(a1 + 24);
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v19 = [JavaUtilTreeMap_BoundedMap alloc];
  JavaUtilTreeMap_BoundedMap_initWithJavaUtilTreeMap_withBoolean_withId_withJavaUtilTreeMap_BoundEnum_withId_withJavaUtilTreeMap_BoundEnum_((uint64_t)v19, v17, v18, v9, v8, v6, v7);
  return v19;
}

id JavaUtilTreeMap_BoundedMap_BoundedIterator_initWithJavaUtilTreeMap_BoundedMap_withJavaUtilTreeMap_Node_(uint64_t a1, void *a2, void *a3)
{
  JreStrongAssign((id *)(a1 + 40), a2);
  unsigned int v6 = (_DWORD *)a2[3];
  JreStrongAssign((id *)(a1 + 32), v6);
  *(_DWORD *)(a1 + 24) = v6[11];
  return JreStrongAssign((id *)(a1 + 8), a3);
}

id sub_1001ED528(uint64_t a1, id *a2, void *a3)
{
  JreStrongAssign((id *)(a1 + 48), a2);
  Weak = objc_loadWeak(a2 + 1);
  return JavaUtilTreeMap_BoundedMap_BoundedIterator_initWithJavaUtilTreeMap_BoundedMap_withJavaUtilTreeMap_Node_(a1, Weak, a3);
}

id sub_1001EDF94(uint64_t a1, id *a2, void *a3)
{
  JreStrongAssign((id *)(a1 + 48), a2);
  Weak = objc_loadWeak(a2 + 1);
  return JavaUtilTreeMap_BoundedMap_BoundedIterator_initWithJavaUtilTreeMap_BoundedMap_withJavaUtilTreeMap_Node_(a1, Weak, a3);
}

id sub_1001EE0F4(uint64_t a1, id *a2, void *a3)
{
  JreStrongAssign((id *)(a1 + 48), a2);
  Weak = objc_loadWeak(a2 + 1);
  return JavaUtilTreeMap_BoundedMap_BoundedIterator_initWithJavaUtilTreeMap_BoundedMap_withJavaUtilTreeMap_Node_(a1, Weak, a3);
}

id sub_1001EE4A4(uint64_t a1, id *a2, void *a3)
{
  JreStrongAssign((id *)(a1 + 48), a2);
  Weak = objc_loadWeak(a2 + 1);
  return JavaUtilTreeMap_BoundedMap_BoundedIterator_initWithJavaUtilTreeMap_BoundedMap_withJavaUtilTreeMap_Node_(a1, Weak, a3);
}

uint64_t JavaUtilTreeMap_NavigableSubMap_initWithJavaUtilTreeMap_withId_withJavaUtilTreeMap_BoundEnum_withId_withJavaUtilTreeMap_BoundEnum_(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  JavaUtilAbstractMap_init(a1, a2);
  JreStrongAssign((id *)(a1 + 24), a2);
  JreStrongAssign((id *)(a1 + 32), a3);
  uint64_t result = (uint64_t)JreStrongAssign((id *)(a1 + 40), a5);
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    uint64_t result = objc_opt_class();
  }
  *(unsigned char *)(a1 + 48) = qword_100563F20 == a4;
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    uint64_t result = objc_opt_class();
  }
  *(unsigned char *)(a1 + 49) = qword_100563F20 == a6;
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    uint64_t result = objc_opt_class();
  }
  *(unsigned char *)(a1 + 50) = JavaUtilTreeMap_BoundEnum_values_[0] == a4;
  if ((atomic_load_explicit(JavaUtilTreeMap_BoundEnum__initialized, memory_order_acquire) & 1) == 0) {
    uint64_t result = objc_opt_class();
  }
  *(unsigned char *)(a1 + 51) = JavaUtilTreeMap_BoundEnum_values_[0] == a6;
  return result;
}

JavaNetInet6Address *JavaNetInet6Address_getByAddressWithNSString_withByteArray_withInt_(void *a1, _DWORD *a2, int a3)
{
  if (atomic_load_explicit(JavaNetInet6Address__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_8;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2)
    {
LABEL_8:
      JavaUtilArrays_toStringWithByteArray_((uint64_t)a2);
      CFStringRef v15 = JreStrcat("$$", v8, v9, v10, v11, v12, v13, v14, @"Not an IPv6 address: ");
      uint64_t v16 = new_JavaNetUnknownHostException_initWithNSString_((uint64_t)v15);
      objc_exception_throw(v16);
    }
  }
  if (a2[2] != 16) {
    goto LABEL_8;
  }
  unsigned int v6 = new_JavaNetInet6Address_initWithByteArray_withNSString_withInt_(a2, a1, a3 & ~(a3 >> 31));
  return v6;
}

JavaNetInet6Address *JavaNetInet6Address_getByAddressWithNSString_withByteArray_withJavaNetNetworkInterface_(void *a1, _DWORD *a2, void *a3)
{
  if ((atomic_load_explicit(JavaNetInet6Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v6 = JavaNetInet6Address_getByAddressWithNSString_withByteArray_withInt_(a1, a2, 0);
  if (a3)
  {
    id v7 = [a3 getInetAddresses];
    if (v7)
    {
      uint64_t v8 = v7;
      if ([v7 hasMoreElements])
      {
        while (1)
        {
          uint64_t v9 = [v8 nextElement];
          if (!v9) {
            goto LABEL_17;
          }
          uint64_t v10 = v9;
          uint64_t v11 = [v9 getAddress];
          if (!v11) {
            goto LABEL_17;
          }
          if (v11[2] == 16)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0) {
              JreThrowClassCastException();
            }
            if (sub_1001EEEF4(v10, v6)) {
              break;
            }
          }
          if (([v8 hasMoreElements] & 1) == 0) {
            goto LABEL_12;
          }
        }
        if (v6)
        {
          *((unsigned char *)&v6->super.family_ + 4) = 1;
          *(_DWORD *)&v6->scope_id_set_ = v10[8];
          LOBYTE(v6->scope_id_) = 1;
          JreStrongAssign((id *)(&v6->scope_ifname_set_ + 4), [a3 getName]);
LABEL_13:
          if (!*((unsigned char *)&v6->super.family_ + 4))
          {
            JavaUtilArrays_toStringWithByteArray_((uint64_t)a2);
            CFStringRef v20 = JreStrcat("$$", v13, v14, v15, v16, v17, v18, v19, @"Scope id not found for address: ");
            uint64_t v21 = new_JavaNetUnknownHostException_initWithNSString_((uint64_t)v20);
            objc_exception_throw(v21);
          }
          return v6;
        }
      }
      else
      {
LABEL_12:
        if (v6) {
          goto LABEL_13;
        }
      }
    }
LABEL_17:
    JreThrowNullPointerException();
  }
  return v6;
}

BOOL sub_1001EEEF4(void *a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return [a2 isSiteLocalAddress]
      && ([a1 isSiteLocalAddress] & 1) != 0
      || [a2 isLinkLocalAddress]
      && ([a1 isLinkLocalAddress] & 1) != 0
      || ([a2 isSiteLocalAddress] & 1) == 0
      && ![a2 isLinkLocalAddress];
}

void sub_1001EF12C()
{
}

void sub_1001EF238()
{
}

void sub_1001EF2FC()
{
}

void sub_1001EF3C0()
{
}

void sub_1001EF484()
{
}

void sub_1001EF548()
{
}

void sub_1001EF678()
{
}

JavaNetInet6Address *new_JavaNetInet6Address_initWithByteArray_withNSString_withInt_(void *a1, void *a2, int a3)
{
  unsigned int v6 = [JavaNetInet6Address alloc];
  JavaNetInetAddress_initWithInt_withByteArray_withNSString_((uint64_t)v6, 30, a1, a2);
  *(_DWORD *)&v6->scope_id_set_ = a3;
  *((unsigned char *)&v6->super.family_ + 4) = a3 != 0;
  return v6;
}

JavaTextSimpleDateFormat *sub_1001F00E0(uint64_t a1, void *a2, void *a3)
{
  if (!a2 || (unsigned int v6 = [a2 length], !a3)) {
    JreThrowNullPointerException();
  }
  int v7 = v6;
  id v8 = [a3 getIndex];
  if ((int)v8 >= v7
    || (int v9 = (int)v8, v10 = [a2 charAtWithInt:v8], v11 = v10, v10 != 44) && v10 != 125)
  {
    uint64_t v37 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Missing element format");
    objc_exception_throw(v37);
  }
  [a3 setIndexWithInt:(v9 + 1)];
  if (v11 == 125) {
    return 0;
  }
  v42[0] = off_10043A480;
  v42[1] = off_10043A490;
  uint64_t v13 = +[IOSObjectArray arrayWithObjects:v42 count:4 type:NSString_class_()];
  unsigned int v14 = sub_1001F1D1C(a2, a3, 0, (uint64_t)v13);
  if (v14 == -1)
  {
    int v38 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown element format");
    objc_exception_throw(v38);
  }
  uint64_t v15 = new_JavaLangStringBuffer_init();
  unsigned int v16 = objc_msgSend(a2, "charAtWithInt:", objc_msgSend(a3, "getIndex") - 1);
  if (v14 >= 2)
  {
    if (v14 == 2)
    {
      if (v16 == 125)
      {
        return (JavaTextSimpleDateFormat *)JavaTextNumberFormat_getInstanceWithJavaUtilLocale_(*(void *)(a1 + 8));
      }
      else
      {
        long long v39 = off_10043A4C0;
        CFStringRef v40 = @"integer";
        uint64_t v33 = +[IOSObjectArray arrayWithObjects:&v39 count:3 type:NSString_class_()];
        int v34 = sub_1001F1D1C(a2, a3, 1, (uint64_t)v33);
        if (v34 == 1)
        {
          return (JavaTextSimpleDateFormat *)JavaTextNumberFormat_getPercentInstanceWithJavaUtilLocale_(*(void **)(a1 + 8));
        }
        else if (v34)
        {
          if (v34 == -1)
          {
            JavaTextFormat_upToWithQuotesWithNSString_withJavaTextParsePosition_withJavaLangStringBuffer_withChar_withChar_(a2, a3, v15, 125, 123);
            int v35 = [(JavaLangStringBuffer *)v15 description];
            uint64_t v36 = new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(*(void **)(a1 + 8));
            return (JavaTextSimpleDateFormat *)new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_((uint64_t)v35, v36);
          }
          else
          {
            return (JavaTextSimpleDateFormat *)JavaTextNumberFormat_getIntegerInstanceWithJavaUtilLocale_(*(void **)(a1 + 8));
          }
        }
        else
        {
          return (JavaTextSimpleDateFormat *)JavaTextNumberFormat_getCurrencyInstanceWithJavaUtilLocale_(*(void **)(a1 + 8));
        }
      }
    }
    else
    {
      JavaTextFormat_upToWithQuotesWithNSString_withJavaTextParsePosition_withJavaLangStringBuffer_withChar_withChar_(a2, a3, v15, 125, 123);
      return (JavaTextSimpleDateFormat *)new_JavaTextChoiceFormat_initWithNSString_((uint64_t)[(JavaLangStringBuffer *)v15 description]);
    }
  }
  else if (v16 == 125)
  {
    CFStringRef v23 = *(void **)(a1 + 8);
    if (v14 == 1) {
      return JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(2, v23, v17, v18, v19, v20, v21, v22);
    }
    else {
      return JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(2, v23, v17, v18, v19, v20, v21, v22);
    }
  }
  else
  {
    v41[0] = off_10043A4A0;
    v41[1] = off_10043A4B0;
    int v24 = +[IOSObjectArray arrayWithObjects:v41 count:4 type:NSString_class_()];
    uint64_t v25 = sub_1001F1D1C(a2, a3, 1, (uint64_t)v24);
    if (v25 == -1)
    {
      JavaTextFormat_upToWithQuotesWithNSString_withJavaTextParsePosition_withJavaLangStringBuffer_withChar_withChar_(a2, a3, v15, 125, 123);
      return new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_([(JavaLangStringBuffer *)v15 description], *(void **)(a1 + 8));
    }
    else
    {
      uint64_t v32 = *(void **)(a1 + 8);
      if (v14 == 1) {
        return JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(v25, v32, v26, v27, v28, v29, v30, v31);
      }
      else {
        return JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(v25, v32, v26, v27, v28, v29, v30, v31);
      }
    }
  }
}

void *sub_1001F0970(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  unsigned int v52 = new_JavaTextFieldPosition_initWithInt_(0);
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0x80000000) == 0)
  {
    if (a3)
    {
      uint64_t v10 = 0;
      int v53 = a5;
      uint64_t v54 = a2;
      while (1)
      {
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          goto LABEL_63;
        }
        uint64_t v12 = *(unsigned int *)(v11 + 8);
        if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v12) {
          IOSArray_throwOutOfBoundsWithMsg(v12, v10);
        }
        [a3 appendWithNSString:*(void *)(v11 + 24 + 8 * (int)v10)];
        id v13 = [a3 length];
        if (!a2) {
          break;
        }
        uint64_t v14 = *(void *)(a1 + 24);
        if (!v14) {
          goto LABEL_63;
        }
        uint64_t v15 = *(unsigned int *)(v14 + 8);
        if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v15) {
          IOSArray_throwOutOfBoundsWithMsg(v15, v10);
        }
        uint64_t v16 = *(unsigned int *)(a2 + 8);
        if (*(_DWORD *)(v14 + 12 + 4 * (int)v10) >= (int)v16) {
          break;
        }
        uint64_t v17 = *(void *)(a1 + 24);
        uint64_t v18 = *(unsigned int *)(v17 + 8);
        if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v18) {
          IOSArray_throwOutOfBoundsWithMsg(v18, v10);
        }
        int v19 = *(_DWORD *)(v17 + 12 + 4 * (int)v10);
        if (v19 < 0 || v19 >= (int)v16) {
          IOSArray_throwOutOfBoundsWithMsg(v16, v19);
        }
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20) {
          goto LABEL_63;
        }
        uint64_t v21 = *(void *)(a2 + 24 + 8 * v19);
        uint64_t v22 = *(unsigned int *)(v20 + 8);
        if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v22) {
          IOSArray_throwOutOfBoundsWithMsg(v22, v10);
        }
        CFStringRef v23 = *(void **)(v20 + 24 + 8 * (int)v10);
        if (v23 && v21) {
          goto LABEL_32;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          Instancuint64_t e = JavaTextNumberFormat_getInstance();
LABEL_31:
          CFStringRef v23 = Instance;
LABEL_32:
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            if (!v23) {
              goto LABEL_63;
            }
            int v38 = new_JavaTextMessageFormat_initWithNSString_((uint64_t)[v23 formatWithId:v21]);
            [(JavaTextMessageFormat *)v38 setLocaleWithJavaUtilLocale:*(void *)(a1 + 8)];
            sub_1001F0970(v38, a2, a3, v52, 0);
          }
          else
          {
            if (!v23) {
              goto LABEL_63;
            }
            [v23 formatWithId:v21 withJavaLangStringBuffer:a3 withJavaTextFieldPosition:v52];
          }
          id v39 = objc_msgSend(a3, "length", v52);
          uint64_t v40 = *(void *)(a1 + 24);
          if (!v40) {
            goto LABEL_63;
          }
          uint64_t v41 = (uint64_t)v39;
          uint64_t v42 = *(unsigned int *)(v40 + 8);
          if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v42) {
            IOSArray_throwOutOfBoundsWithMsg(v42, v10);
          }
          sub_1001F0EBC(v13, v41, *(_DWORD *)(v40 + 12 + 4 * (int)v10), a4, v53);
          int64_t v43 = v23;
          a5 = v53;
          sub_1001F100C(v43, v21, (int)v13, v53);
LABEL_41:
          a2 = v54;
          goto LABEL_42;
        }
        objc_opt_class();
        uint64_t isKindOfClass = objc_opt_isKindOfClass();
        if (isKindOfClass)
        {
          Instancuint64_t e = JavaTextDateFormat_getInstance(isKindOfClass, v31, v32, v33, v34, v35, v36, v37);
          goto LABEL_31;
        }
        [a3 appendWithId:v21];
        id v44 = [a3 length];
        uint64_t v45 = *(void *)(a1 + 24);
        if (!v45) {
          goto LABEL_63;
        }
        uint64_t v46 = (uint64_t)v44;
        uint64_t v47 = *(unsigned int *)(v45 + 8);
        if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v47) {
          IOSArray_throwOutOfBoundsWithMsg(v47, v10);
        }
        a5 = v53;
        sub_1001F0EBC(v13, v46, *(_DWORD *)(v45 + 12 + 4 * (int)v10), a4, v53);
LABEL_42:
        uint64_t v10 = (v10 + 1);
        int v9 = *(_DWORD *)(a1 + 40);
        if ((int)v10 > v9) {
          goto LABEL_57;
        }
      }
      objc_msgSend(a3, "appendWithChar:", 123, v52);
      uint64_t v25 = *(void *)(a1 + 24);
      if (!v25) {
        goto LABEL_63;
      }
      uint64_t v26 = *(unsigned int *)(v25 + 8);
      if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v26) {
        IOSArray_throwOutOfBoundsWithMsg(v26, v10);
      }
      [a3 appendWithInt:*(unsigned int *)(v25 + 12 + 4 * (int)v10)];
      [a3 appendWithChar:125];
      id v27 = [a3 length];
      uint64_t v28 = *(void *)(a1 + 24);
      uint64_t v29 = *(unsigned int *)(v28 + 8);
      if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v29) {
        IOSArray_throwOutOfBoundsWithMsg(v29, v10);
      }
      sub_1001F0EBC(v13, (uint64_t)v27, *(_DWORD *)(v28 + 12 + 4 * (int)v10), a4, a5);
      goto LABEL_41;
    }
LABEL_63:
    JreThrowNullPointerException();
  }
LABEL_57:
  uint64_t v48 = *(void *)(a1 + 16);
  if (!v48) {
    goto LABEL_63;
  }
  uint64_t v49 = v9 + 1;
  uint64_t v50 = *(unsigned int *)(v48 + 8);
  if ((int)v49 < (int)v50)
  {
    if (!a3) {
      goto LABEL_63;
    }
    if (v9 <= -2) {
      IOSArray_throwOutOfBoundsWithMsg(v50, v9 + 1);
    }
    [a3 appendWithNSString:*(void *)(v48 + 24 + 8 * v49)];
  }
  return a3;
}

id sub_1001F0EBC(id result, uint64_t a2, int a3, void *a4, void *a5)
{
  id v6 = result;
  if (a5)
  {
    if ((atomic_load_explicit(JavaTextMessageFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    int v9 = (void *)JavaTextMessageFormat_Field_ARGUMENT_;
    uint64_t v10 = JavaLangInteger_valueOfWithInt_(a3);
    uint64_t v11 = sub_1001F3388((int)v6, a2, v9, v10);
    return [a5 addWithId:v11];
  }
  else if (a4)
  {
    uint64_t result = [a4 getFieldAttribute];
    id v13 = result;
    if ((atomic_load_explicit(JavaTextMessageFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
      uint64_t result = (id)objc_opt_class();
    }
    if (v13 == (id)JavaTextMessageFormat_Field_ARGUMENT_)
    {
      uint64_t result = [a4 getEndIndex];
      if (!result)
      {
        [a4 setBeginIndexWithInt:v6];
        return [a4 setEndIndexWithInt:a2];
      }
    }
  }
  return result;
}

id sub_1001F100C(id result, uint64_t a2, int a3, void *a4)
{
  if (a4)
  {
    if (!result) {
      goto LABEL_16;
    }
    id v6 = [result formatToCharacterIteratorWithId:a2];
    if (!v6) {
      goto LABEL_16;
    }
    int v7 = v6;
    unsigned int v8 = [v6 getIndex];
    uint64_t result = [v7 getEndIndex];
    if (v8 != result)
    {
      while (1)
      {
        unsigned int v9 = [v7 getRunStart];
        id v10 = [v7 getRunLimit];
        id v11 = [v7 getAttributes];
        if (!v11) {
          break;
        }
        id v12 = [v11 keySet];
        if (!v12) {
          break;
        }
        id v13 = [v12 iterator];
        if (!v13) {
          break;
        }
        uint64_t v14 = v13;
        if ([v13 hasNext])
        {
          int v15 = v9 + a3;
          do
          {
            id v16 = [v14 next];
            objc_opt_class();
            if (v16)
            {
              if ((objc_opt_isKindOfClass() & 1) == 0) {
                JreThrowClassCastException();
              }
            }
            objc_msgSend(a4, "addWithId:", sub_1001F3388(v15, (int)v10 + a3, v16, objc_msgSend(v7, "getAttributeWithJavaTextAttributedCharacterIterator_Attribute:", v16)));
          }
          while (([v14 hasNext] & 1) != 0);
        }
        [v7 setIndexWithInt:v10];
        unsigned int v17 = [v7 getIndex];
        uint64_t result = [v7 getEndIndex];
        if (v17 == result) {
          return result;
        }
      }
LABEL_16:
      JreThrowNullPointerException();
    }
  }
  return result;
}

JavaTextMessageFormat *JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(uint64_t a1, uint64_t a2)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaTextMessageFormat__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_8;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      goto LABEL_8;
    }
  }
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if (!*(void *)(a2 + 24 + 8 * v4)) {
        IOSObjectArray_Set(a2, v4, @"null");
      }
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
LABEL_8:
  id v5 = new_JavaTextMessageFormat_initWithNSString_(a1);
  return [(JavaTextFormat *)v5 formatWithId:a2];
}

uint64_t sub_1001F1D1C(void *a1, void *a2, char a3, uint64_t a4)
{
  if (!a1) {
    goto LABEL_29;
  }
  id v8 = [a1 length];
  if (!a2) {
    goto LABEL_29;
  }
  unint64_t v9 = (unint64_t)v8;
  unint64_t v10 = (unint64_t)[a2 getIndex];
  if ((int)v10 < (int)v9)
  {
    while (JavaLangCharacter_isWhitespaceWithChar_((UChar32)[a1 charAtWithInt:v10]))
    {
      unint64_t v10 = (v10 + 1);
      if (v9 == v10)
      {
        unint64_t v10 = v9;
        break;
      }
    }
  }
  if (!a4) {
    goto LABEL_29;
  }
  LODWORD(v11) = *(_DWORD *)(a4 + 8);
  do
  {
    uint64_t v11 = (v11 - 1);
    if ((int)v11 < 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v12 = *(unsigned int *)(a4 + 8);
    if ((int)v11 >= (int)v12) {
      IOSArray_throwOutOfBoundsWithMsg(v12, v11);
    }
    if (!*(void *)(a4 + 24 + 8 * v11)) {
      goto LABEL_29;
    }
  }
  while (!objc_msgSend(a1, "regionMatches:thisOffset:aString:otherOffset:count:", 1, v10, *(void *)(a4 + 24 + 8 * v11), 0, objc_msgSend(*(id *)(a4 + 24 + 8 * v11), "length")));
  uint64_t v13 = *(unsigned int *)(a4 + 8);
  if ((int)v11 >= (int)v13) {
    IOSArray_throwOutOfBoundsWithMsg(v13, v11);
  }
  uint64_t v14 = *(void **)(a4 + 24 + 8 * v11);
  if (!v14) {
LABEL_29:
  }
    JreThrowNullPointerException();
  for (uint64_t i = v10 + [v14 length]; (int)i < (int)v9; uint64_t i = (i + 1))
  {
    if (!JavaLangCharacter_isWhitespaceWithChar_((UChar32)[a1 charAtWithInt:i]))
    {
      unsigned int v16 = [a1 charAtWithInt:i];
      if (v16 == 44) {
        char v17 = a3;
      }
      else {
        char v17 = 1;
      }
      if (v16 == 125 || (v17 & 1) == 0)
      {
        [a2 setIndexWithInt:(i + 1)];
        return v11;
      }
      return 0xFFFFFFFFLL;
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_1001F2228()
{
}

id sub_1001F2248(uint64_t a1, void *a2, void *a3)
{
  if (!a2 || ([a2 appendWithNSString:@",number"], !a3)) {
    JreThrowNullPointerException();
  }
  if ([a3 isEqual:JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(*(void **)(a1 + 8))])return 0; {
  if ([a3 isEqual:JavaTextNumberFormat_getIntegerInstanceWithJavaUtilLocale_(*(void **)(a1 + 8))])
  }
  {
    CFStringRef v6 = @",integer";
LABEL_10:
    [a2 appendWithNSString:v6];
    return 0;
  }
  if ([a3 isEqual:JavaTextNumberFormat_getCurrencyInstanceWithJavaUtilLocale_(*(void **)(a1 + 8))])
  {
    CFStringRef v6 = @",currency";
    goto LABEL_10;
  }
  if ([a3 isEqual:JavaTextNumberFormat_getPercentInstanceWithJavaUtilLocale_(*(void **)(a1 + 8))])
  {
    CFStringRef v6 = @",percent";
    goto LABEL_10;
  }
  [a2 appendWithChar:44];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return [a3 toPattern];
}

id sub_1001F2390(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a3) {
    goto LABEL_32;
  }
  if (objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(2, *(void **)(a1 + 8), (uint64_t)a3, a4, a5, a6, a7, a8)))
  {
    if (a2)
    {
      CFStringRef v17 = @",time";
LABEL_26:
      [a2 appendWithNSString:v17];
      return 0;
    }
    goto LABEL_32;
  }
  if (objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(2, *(void **)(a1 + 8), v11, v12, v13, v14, v15, v16)))
  {
    if (a2)
    {
      CFStringRef v17 = @",date";
      goto LABEL_26;
    }
LABEL_32:
    JreThrowNullPointerException();
  }
  if (objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(3, *(void **)(a1 + 8), v18, v19, v20, v21, v22, v23)))
  {
    if (a2)
    {
      CFStringRef v17 = @",time,short";
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  if (objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(3, *(void **)(a1 + 8), v24, v25, v26, v27, v28, v29)))
  {
    if (a2)
    {
      CFStringRef v17 = @",date,short";
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  if (objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(1, *(void **)(a1 + 8), v30, v31, v32, v33, v34, v35)))
  {
    if (a2)
    {
      CFStringRef v17 = @",time,long";
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  id v42 = objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(1, *(void **)(a1 + 8), v36, v37, v38, v39, v40, v41));
  if (v42)
  {
    if (a2)
    {
      CFStringRef v17 = @",date,long";
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  id v49 = objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_((uint64_t)v42, *(void **)(a1 + 8), v43, v44, v45, v46, v47, v48));
  if (v49)
  {
    if (a2)
    {
      CFStringRef v17 = @",time,full";
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  if (objc_msgSend(a3, "isEqual:", JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_((uint64_t)v49, *(void **)(a1 + 8), v50, v51, v52, v53, v54, v55)))
  {
    if (a2)
    {
      CFStringRef v17 = @",date,full";
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  if (!a2) {
    goto LABEL_32;
  }
  [a2 appendWithNSString:@",date,"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return [a3 toPattern];
}

id sub_1001F28F4(void *a1, void *a2)
{
  if (!a2) {
LABEL_11:
  }
    JreThrowNullPointerException();
  id result = [a2 length];
  int v5 = (int)result;
  if ((int)result >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      id v7 = [a2 charAtWithInt:v6];
      uint64_t v8 = (uint64_t)v7;
      if (v7 == 125 || v7 == 123)
      {
        if (!a1) {
          goto LABEL_11;
        }
        [a1 appendWithChar:39];
        [a1 appendWithChar:v8];
        uint64_t v8 = 39;
      }
      else if (!a1)
      {
        goto LABEL_11;
      }
      id result = [a1 appendWithChar:v8];
      uint64_t v6 = (v6 + 1);
    }
    while (v5 != v6);
  }
  return result;
}

JavaTextMessageFormat *new_JavaTextMessageFormat_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaTextMessageFormat alloc];
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  JavaTextFormat_init(v2, v4);
  JreStrongAssign((id *)&v2->locale_, Default);
  [(JavaTextMessageFormat *)v2 applyPatternWithNSString:a1];
  return v2;
}

JavaTextMessageFormat_FieldContainer *sub_1001F3388(int a1, int a2, void *a3, void *a4)
{
  uint64_t v8 = [JavaTextMessageFormat_FieldContainer alloc];
  v8->start_ = a1;
  v8->end_ = a2;
  JreStrongAssign((id *)&v8->attribute_, a3);
  JreStrongAssign(&v8->value_, a4);
  return v8;
}

uint64_t JavaLangReflectTypeVariable_class_()
{
  if (qword_100560DA8 != -1) {
    dispatch_once(&qword_100560DA8, &stru_10043A5D8);
  }
  return qword_100560DA0;
}

void sub_1001F3444(id a1)
{
  qword_100560DA0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangReflectTypeVariable);
}

id JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withBoolean_(uint64_t a1, uint64_t a2, int a3)
{
  JavaNioChannelsSocketChannel_initWithJavaNioChannelsSpiSelectorProvider_();
  JreStrongAssign((id *)(a1 + 63), 0);
  JreStrongAssign((id *)(a1 + 71), 0);
  JreStrongAssign((id *)(a1 + 79), 0);
  *(_DWORD *)(a1 + 91) = -1;
  atomic_store(0, (unsigned __int8 *)(a1 + 95));
  JreStrongAssignAndConsume((id *)(a1 + 103), objc_alloc((Class)NSObject));
  JreStrongAssignAndConsume((id *)(a1 + 111), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 91) = 0;
  if (a3) {
    int v5 = (JavaIoFileDescriptor *)LibcoreIoIoBridge_socketWithBoolean_(1);
  }
  else {
    int v5 = new_JavaIoFileDescriptor_init();
  }
  return JreStrongAssign((id *)(a1 + 55), v5);
}

id JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withJavaIoFileDescriptor_(uint64_t a1, uint64_t a2, void *a3)
{
  JavaNioChannelsSocketChannel_initWithJavaNioChannelsSpiSelectorProvider_();
  JreStrongAssign((id *)(a1 + 63), 0);
  JreStrongAssign((id *)(a1 + 71), 0);
  JreStrongAssign((id *)(a1 + 79), 0);
  *(_DWORD *)(a1 + 91) = -1;
  atomic_store(0, (unsigned __int8 *)(a1 + 95));
  JreStrongAssignAndConsume((id *)(a1 + 103), objc_alloc((Class)NSObject));
  JreStrongAssignAndConsume((id *)(a1 + 111), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 91) = 2;
  return JreStrongAssign((id *)(a1 + 55), a3);
}

void sub_1001F3958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001F3AB8(_Unwind_Exception *a1)
{
}

void sub_1001F3B54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001F3E24()
{
}

void sub_1001F3ED4()
{
}

void sub_1001F3F60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *JavaNioSocketChannelImpl_validateAddressWithJavaNetSocketAddress_(void *a1)
{
  if (!a1)
  {
    uint64_t v3 = new_JavaLangIllegalArgumentException_initWithNSString_(@"socketAddress == null");
    goto LABEL_10;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v3 = new_JavaNioChannelsUnsupportedAddressTypeException_init();
    goto LABEL_10;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  if ([a1 isUnresolved])
  {
    uint64_t v3 = new_JavaNioChannelsUnresolvedAddressException_init();
LABEL_10:
    objc_exception_throw(v3);
  }
  return a1;
}

BOOL sub_1001F4004(void *a1, void *a2)
{
  if ([a1 isBlocking]) {
    return 0;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  if (!a2) {
    goto LABEL_9;
  }
  uint64_t v3 = [a2 getCause];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }
  objc_opt_class();
  if (!v3) {
LABEL_9:
  }
    JreThrowNullPointerException();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v3[21] == 36;
}

void sub_1001F42E0(_Unwind_Exception *a1)
{
}

void sub_1001F4370()
{
}

void sub_1001F4458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001F446C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + 103);
  objc_sync_enter(v4);
  if ([(id)a1 isBlocking]) {
    [(id)a1 begin];
  }
  uint64_t v5 = LibcoreIoIoBridge_recvfromWithBoolean_withJavaIoFileDescriptor_withJavaNioByteBuffer_withInt_withJavaNetDatagramPacket_withBoolean_(1, *(void *)(a1 + 55), (uint64_t)a2, 0, 0, 0);
  if ((int)v5 >= 1)
  {
    if (!a2) {
      JreThrowNullPointerException();
    }
    objc_msgSend(a2, "positionWithInt:", objc_msgSend(a2, "position") + v5);
  }
  if ([(id)a1 isBlocking]) {
    [(id)a1 endWithBoolean:(int)v5 > 0];
  }
  objc_sync_exit(v4);
  return v5;
}

void sub_1001F4568(_Unwind_Exception *a1)
{
  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001F4590(void *a1)
{
}

id sub_1001F479C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + 111);
  objc_sync_enter(v4);
  if (!a2) {
    JreThrowNullPointerException();
  }
  if ([a2 hasRemaining])
  {
    if ([(id)a1 isBlocking]) {
      [(id)a1 begin];
    }
    id v5 = LibcoreIoIoBridge_sendtoWithJavaIoFileDescriptor_withJavaNioByteBuffer_withInt_withJavaNetInetAddress_withInt_(*(void *)(a1 + 55), a2, 0, 0, 0);
    if ((int)v5 >= 1) {
      objc_msgSend(a2, "positionWithInt:", objc_msgSend(a2, "position") + v5);
    }
    if ([(id)a1 isBlocking]) {
      [(id)a1 endWithBoolean:(int)v5 >= 0];
    }
  }
  else
  {
    id v5 = 0;
  }
  objc_sync_exit(v4);
  return v5;
}

void sub_1001F48A0(_Unwind_Exception *a1)
{
  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001F4B50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaNioSocketChannelImpl *new_JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_(uint64_t a1)
{
  uint64_t v2 = [JavaNioSocketChannelImpl alloc];
  JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withBoolean_((uint64_t)v2, a1, 1);
  return v2;
}

JavaNioSocketChannelImpl *new_JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withBoolean_(uint64_t a1, int a2)
{
  uint64_t v4 = [JavaNioSocketChannelImpl alloc];
  JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withBoolean_((uint64_t)v4, a1, a2);
  return v4;
}

JavaNioSocketChannelImpl *new_JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withJavaIoFileDescriptor_(uint64_t a1, void *a2)
{
  uint64_t v4 = [JavaNioSocketChannelImpl alloc];
  JavaNioSocketChannelImpl_initWithJavaNioChannelsSpiSelectorProvider_withJavaIoFileDescriptor_((uint64_t)v4, a1, a2);
  return v4;
}

id sub_1001F4D98(id *a1, void *a2, uint64_t a3)
{
  JavaNetSocket_initWithJavaNetSocketImpl_((uint64_t)a1, a2);
  objc_storeWeak(a1 + 8, a2);
  objc_storeWeak(a1 + 7, (id)a3);
  JavaNetSocketUtils_setCreatedWithJavaNetSocket_((uint64_t)a1);
  if (!a3) {
    goto LABEL_11;
  }
  unsigned __int8 v6 = atomic_load((unsigned __int8 *)(a3 + 95));
  if (v6) {
    [a1 onBindWithJavaNetInetAddress:*(void *)(a3 + 79) withInt:*(unsigned int *)(a3 + 87)];
  }
  if ([(id)a3 isConnected])
  {
    id v7 = *(void **)(a3 + 71);
    if (v7)
    {
      objc_msgSend(a1, "onConnectWithJavaNetInetAddress:withInt:", objc_msgSend(v7, "getAddress"), objc_msgSend(*(id *)(a3 + 71), "getPort"));
      goto LABEL_7;
    }
LABEL_11:
    JreThrowNullPointerException();
  }
LABEL_7:
  id result = [(id)a3 isOpen];
  if ((result & 1) == 0)
  {
    return [a1 onClose];
  }
  return result;
}

void sub_1001F5118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaIoIOException_initWithJavaLangThrowable_(uint64_t a1, id a2)
{
  id v2 = a2;
  if (a2) {
    a2 = [a2 description];
  }
  return JavaLangException_initWithNSString_withJavaLangThrowable_(a1, a2, v2);
}

JavaIoIOException *new_JavaIoIOException_init()
{
  uint64_t v0 = [JavaIoIOException alloc];
  JavaLangException_init(v0, v1);
  return v0;
}

JavaIoIOException *new_JavaIoIOException_initWithNSString_(uint64_t a1)
{
  id v2 = [JavaIoIOException alloc];
  JavaLangException_initWithNSString_(v2, a1);
  return v2;
}

JavaIoIOException *new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [JavaIoIOException alloc];
  JavaLangException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

JavaIoIOException *new_JavaIoIOException_initWithJavaLangThrowable_(void *a1)
{
  id v2 = [JavaIoIOException alloc];
  if (a1) {
    id v3 = [a1 description];
  }
  else {
    id v3 = 0;
  }
  JavaLangException_initWithNSString_withJavaLangThrowable_(v2, v3, a1);
  return v2;
}

LibcoreIoStructFlock *new_LibcoreIoStructFlock_init()
{
  return [LibcoreIoStructFlock alloc];
}

uint64_t JavaUtilMap_class_()
{
  if (qword_100560DB8 != -1) {
    dispatch_once(&qword_100560DB8, &stru_10043BBD8);
  }
  return qword_100560DB0;
}

void sub_1001F5B28(id a1)
{
  qword_100560DB0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilMap);
}

uint64_t JavaUtilMap_Entry_class_()
{
  if (qword_100560DC8 != -1) {
    dispatch_once(&qword_100560DC8, &stru_10043BD58);
  }
  return qword_100560DC0;
}

void sub_1001F5BA0(id a1)
{
  qword_100560DC0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilMap_Entry);
}

void *sub_1001F64D4(uint64_t a1, _DWORD *a2)
{
  *(_DWORD *)(a1 + 16) = 7;
  *(_DWORD *)(a1 + 32) = 0;
  JreStrongAssign((id *)(a1 + 8), a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v4 = a2[2];
  if (v4 >= 512) {
    uint64_t v5 = 256;
  }
  else {
    uint64_t v5 = v4 >> 1;
  }
  unsigned __int8 v6 = +[IOSObjectArray arrayWithLength:v5 type:NSObject_class_()];
  JreStrongAssign((id *)(a1 + 24), v6);
  if (v4 >= 120)
  {
    if (v4 >= 0x606)
    {
      if (v4 >= 0x1D16F) {
        uint64_t v7 = 40;
      }
      else {
        uint64_t v7 = 19;
      }
    }
    else
    {
      uint64_t v7 = 10;
    }
  }
  else
  {
    uint64_t v7 = 5;
  }
  JreStrongAssignAndConsume((id *)(a1 + 40), +[IOSIntArray newArrayWithLength:v7]);
  id v8 = +[IOSIntArray newArrayWithLength:v7];
  return JreStrongAssignAndConsume((id *)(a1 + 48), v8);
}

unsigned int *JavaUtilComparableTimSort_sortWithNSObjectArray_(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v8 = a1[2];
  return JavaUtilComparableTimSort_sortWithNSObjectArray_withInt_withInt_(a1, 0, v8, a4, a5, a6, a7, a8);
}

unsigned int *JavaUtilComparableTimSort_sortWithNSObjectArray_withInt_withInt_(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  int v8 = a3;
  uint64_t v9 = a2;
  id result = (unsigned int *)JavaUtilArrays_checkStartAndEndWithInt_withInt_withInt_(a1[2], a2, a3, a4, a5, a6, a7, a8);
  unsigned int v12 = v8 - v9;
  if (v8 - (int)v9 >= 2)
  {
    if (v12 > 0x1F)
    {
      uint64_t v14 = [JavaUtilComparableTimSort alloc];
      sub_1001F64D4((uint64_t)v14, a1);
      uint64_t v15 = v14;
      int v16 = 0;
      unsigned int v17 = v8 - v9;
      do
      {
        v16 |= v17 & 1;
        unsigned int v18 = v17 >> 1;
        BOOL v19 = v17 > 0x3F;
        v17 >>= 1;
      }
      while (v19);
      signed int v20 = v16 + v18;
      do
      {
        int v21 = sub_1001F6A68(a1, v9, v8);
        int v22 = v21;
        if (v21 >= v20)
        {
          uint64_t v24 = (v21 + v9);
        }
        else
        {
          if ((int)v12 >= v20) {
            unsigned int v23 = v20;
          }
          else {
            unsigned int v23 = v12;
          }
          uint64_t v24 = v9 + v23;
          sub_1001F6838(a1, v9, v9 + v23, v21 + v9);
          int v22 = v23;
        }
        sub_1001F6E0C((uint64_t)v15, v9, v22);
        sub_1001F6EE8((uint64_t)v15);
        uint64_t v9 = v24;
        v12 -= v22;
      }
      while (v12);
      return sub_1001F7100(v15);
    }
    else
    {
      int v13 = sub_1001F6A68(a1, v9, v8) + v9;
      return sub_1001F6838(a1, v9, v8, v13);
    }
  }
  return result;
}

unsigned int *sub_1001F6838(unsigned int *result, uint64_t a2, int a3, int a4)
{
  if (a4 == a2) {
    int v4 = a4 + 1;
  }
  else {
    int v4 = a4;
  }
  if (v4 < a3)
  {
    uint64_t v5 = result;
    if (!result) {
LABEL_41:
    }
      JreThrowNullPointerException();
    uint64_t v6 = v4;
    uint64_t v7 = (int)a2;
    uint64_t v8 = a3;
    while (1)
    {
      uint64_t v9 = v5[2];
      if (v6 < 0 || v6 >= (int)v9) {
        IOSArray_throwOutOfBoundsWithMsg(v9, v6);
      }
      unint64_t v10 = *(void **)&v5[2 * v6 + 6];
      uint64_t v11 = (void *)JavaLangComparable_class_();
      if (!v10) {
        break;
      }
      if (([v11 isInstance:v10] & 1) == 0) {
        JreThrowClassCastException();
      }
      if (v6 <= v7) {
        goto LABEL_23;
      }
      uint64_t v12 = v7;
      int v13 = v6;
      LODWORD(v14) = a2;
      do
      {
        uint64_t v15 = (v13 + v14) >> 1;
        uint64_t v16 = v5[2];
        if ((int)v15 >= (int)v16) {
          IOSArray_throwOutOfBoundsWithMsg(v16, (v13 + v14) >> 1);
        }
        int v17 = [v10 compareToWithId:*(void *)&v5[2 * v15 + 6]];
        if (v17 >= 0) {
          uint64_t v14 = (v15 + 1);
        }
        else {
          uint64_t v14 = v14;
        }
        if (v17 < 0) {
          int v13 = v15;
        }
      }
      while ((int)v14 < v13);
      uint64_t v7 = v12;
LABEL_24:
      uint64_t v18 = (v6 - v14);
      if (v18 == 2)
      {
        uint64_t v20 = v5[2];
        int v21 = v14 + 1;
        uint64_t v19 = (int)v14 + 1;
        if ((int)v14 + 1 < 0 || v21 >= (int)v20) {
          IOSArray_throwOutOfBoundsWithMsg(v20, v21);
        }
        IOSObjectArray_Set((uint64_t)v5, (int)v14 + 2, *(void **)&v5[2 * v19 + 6]);
        goto LABEL_30;
      }
      if (v18 == 1)
      {
        uint64_t v19 = (int)v14 + 1;
LABEL_30:
        uint64_t v22 = v5[2];
        if ((v14 & 0x80000000) != 0 || (int)v14 >= (int)v22) {
          IOSArray_throwOutOfBoundsWithMsg(v22, v14);
        }
        uint64_t v14 = (int)v14;
        IOSObjectArray_Set((uint64_t)v5, v19, *(void **)&v5[2 * (int)v14 + 6]);
        goto LABEL_34;
      }
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v5, v14, v5, (v14 + 1), v18);
      uint64_t v14 = (int)v14;
LABEL_34:
      id result = (unsigned int *)IOSObjectArray_Set((uint64_t)v5, v14, v10);
      if (++v6 >= v8) {
        return result;
      }
    }
    if (v6 > v7) {
      goto LABEL_41;
    }
LABEL_23:
    uint64_t v14 = a2;
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1001F6A68(unsigned int *a1, uint64_t a2, int a3)
{
  uint64_t v4 = (a2 + 1);
  if (v4 == a3) {
    return 1;
  }
  if (!a1) {
    goto LABEL_42;
  }
  uint64_t v8 = a1[2];
  if ((v4 & 0x80000000) != 0 || (int)v4 >= (int)v8) {
    IOSArray_throwOutOfBoundsWithMsg(v8, v4);
  }
  uint64_t v9 = *(void **)&a1[2 * (int)v4 + 6];
  unint64_t v10 = (void *)JavaLangComparable_class_();
  if (!v9) {
LABEL_42:
  }
    JreThrowNullPointerException();
  if (([v10 isInstance:v9] & 1) == 0) {
LABEL_39:
  }
    JreThrowClassCastException();
  LODWORD(v11) = a2 + 2;
  uint64_t v12 = a1[2];
  if ((a2 & 0x80000000) != 0 || (int)v12 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v12, a2);
  }
  if (([v9 compareToWithId:*(void *)&a1[2 * (int)a2 + 6]] & 0x80000000) != 0)
  {
    LODWORD(v18) = a2 + 2;
    if ((int)v11 < a3)
    {
      uint64_t v18 = (int)v11;
      do
      {
        uint64_t v19 = a1[2];
        if (v18 < 0 || v18 >= (int)v19) {
          IOSArray_throwOutOfBoundsWithMsg(v19, v18);
        }
        uint64_t v20 = *(void **)&a1[2 * v18 + 6];
        int v21 = (void *)JavaLangComparable_class_();
        if (!v20) {
          goto LABEL_42;
        }
        if (([v21 isInstance:v20] & 1) == 0) {
          goto LABEL_39;
        }
        uint64_t v22 = a1[2];
        int v23 = v18 - 1;
        if ((int)v18 - 1 < 0 || v23 >= (int)v22) {
          IOSArray_throwOutOfBoundsWithMsg(v22, v23);
        }
        if (([v20 compareToWithId:*(void *)&a1[2 * (int)v18 + 4]] & 0x80000000) == 0) {
          goto LABEL_37;
        }
        ++v18;
      }
      while (a3 != v18);
      LODWORD(v18) = a3;
    }
LABEL_37:
    sub_1001F6CD0(a1, a2, v18);
    LODWORD(v11) = v18;
  }
  else if ((int)v11 < a3)
  {
    uint64_t v11 = (int)v11;
    do
    {
      uint64_t v13 = a1[2];
      if (v11 < 0 || v11 >= (int)v13) {
        IOSArray_throwOutOfBoundsWithMsg(v13, v11);
      }
      uint64_t v14 = *(void **)&a1[2 * v11 + 6];
      uint64_t v15 = (void *)JavaLangComparable_class_();
      if (!v14) {
        goto LABEL_42;
      }
      if (([v15 isInstance:v14] & 1) == 0) {
        goto LABEL_39;
      }
      uint64_t v16 = a1[2];
      int v17 = v11 - 1;
      if ((int)v11 - 1 < 0 || v17 >= (int)v16) {
        IOSArray_throwOutOfBoundsWithMsg(v16, v17);
      }
      if (([v14 compareToWithId:*(void *)&a1[2 * (int)v11 + 4]] & 0x80000000) != 0) {
        return (v11 - a2);
      }
      ++v11;
    }
    while (a3 != v11);
    LODWORD(v11) = a3;
  }
  return (v11 - a2);
}

void *sub_1001F6CD0(void *result, int a2, int a3)
{
  if (a3 - 1 > a2)
  {
    uint64_t v3 = (uint64_t)result;
    if (!result) {
      JreThrowNullPointerException();
    }
    uint64_t v4 = a3 - 1;
    uint64_t v5 = a2;
    do
    {
      uint64_t v6 = *(unsigned int *)(v3 + 8);
      if (v5 < 0 || v5 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v5);
      }
      uint64_t v7 = *(void **)(v3 + 24 + 8 * v5);
      if (v4 < 0 || v4 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v4);
      }
      IOSObjectArray_Set(v3, v5, *(void **)(v3 + 24 + 8 * v4));
      id result = IOSObjectArray_Set(v3, v4--, v7);
      ++v5;
    }
    while (v5 < v4);
  }
  return result;
}

uint64_t sub_1001F6E0C(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (!v3) {
    goto LABEL_8;
  }
  int v5 = *(_DWORD *)(a1 + 32);
  uint64_t v6 = *(unsigned int *)(v3 + 8);
  if (v5 < 0 || v5 >= (int)v6) {
    IOSArray_throwOutOfBoundsWithMsg(v6, v5);
  }
  *(_DWORD *)(v3 + 12 + 4 * v5) = a2;
  uint64_t v7 = *(void *)(a1 + 48);
  if (!v7) {
LABEL_8:
  }
    JreThrowNullPointerException();
  int v8 = *(_DWORD *)(a1 + 32);
  uint64_t result = *(unsigned int *)(v7 + 8);
  if (v8 < 0 || v8 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v8);
  }
  *(_DWORD *)(v7 + 12 + 4 * v8) = a3;
  ++*(_DWORD *)(a1 + 32);
  return result;
}

uint64_t sub_1001F6EE8(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 32);
  if (v1 >= 2)
  {
    uint64_t v2 = result;
    do
    {
      uint64_t v3 = *(void *)(v2 + 48);
      uint64_t v4 = (v1 - 2);
      if (v1 == 2) {
        goto LABEL_9;
      }
      if (!v3) {
        goto LABEL_29;
      }
      uint64_t v5 = (v1 - 3);
      uint64_t v6 = *(unsigned int *)(v3 + 8);
      if ((int)v5 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 3));
      }
      if ((int)v4 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 2));
      }
      uint64_t v7 = (v1 - 1);
      if (v1 > (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 1));
      }
      if (*(_DWORD *)(v3 + 12 + 4 * v5) > *(_DWORD *)(v3 + 12 + 4 * v7) + *(_DWORD *)(v3 + 12 + 4 * v4))
      {
LABEL_9:
        if (!v3) {
LABEL_29:
        }
          JreThrowNullPointerException();
        uint64_t result = *(unsigned int *)(v3 + 8);
        if ((int)v4 >= (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, (v1 - 2));
        }
        if (v1 > (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, (v1 - 1));
        }
        if (*(_DWORD *)(v3 + 12 + 4 * v4) > *(_DWORD *)(v3 + 12 + 4 * (v1 - 1))) {
          return result;
        }
      }
      else
      {
        uint64_t v8 = *(unsigned int *)(v3 + 8);
        if ((int)v5 >= (int)v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, (v1 - 3));
        }
        if (v1 > (int)v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, (v1 - 1));
        }
        if (*(_DWORD *)(v3 + 12 + 4 * v5) >= *(_DWORD *)(v3 + 12 + 4 * v7)) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v5;
        }
      }
      uint64_t result = (uint64_t)sub_1001F7200(v2, v4);
      int v1 = *(_DWORD *)(v2 + 32);
    }
    while (v1 > 1);
  }
  return result;
}

_DWORD *sub_1001F7100(_DWORD *result)
{
  int v1 = result[8];
  if (v1 >= 2)
  {
    uint64_t v2 = (uint64_t)result;
    do
    {
      if (v1 == 2)
      {
        uint64_t v3 = 0;
      }
      else
      {
        uint64_t v4 = *(void *)(v2 + 48);
        if (!v4) {
          JreThrowNullPointerException();
        }
        uint64_t v5 = (v1 - 3);
        uint64_t v6 = *(unsigned int *)(v4 + 8);
        if ((int)v5 >= (int)v6) {
          IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 3));
        }
        if (v1 > (int)v6) {
          IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 1));
        }
        if (*(_DWORD *)(v4 + 12 + 4 * v5) >= *(_DWORD *)(*(void *)(v2 + 48) + 12 + 4 * (v1 - 1))) {
          uint64_t v3 = (v1 - 2);
        }
        else {
          uint64_t v3 = v5;
        }
      }
      uint64_t result = sub_1001F7200(v2, v3);
      int v1 = *(_DWORD *)(v2 + 32);
    }
    while (v1 > 1);
  }
  return result;
}

id sub_1001F7200(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (!v2) {
    goto LABEL_42;
  }
  uint64_t v4 = *(unsigned int *)(v2 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v4 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v4, a2);
  }
  uint64_t v5 = *(void *)(a1 + 48);
  if (!v5) {
    goto LABEL_42;
  }
  int v6 = *(_DWORD *)(v2 + 12 + 4 * (int)a2);
  uint64_t v7 = *(unsigned int *)(v5 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v7 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v7, a2);
  }
  int v8 = *(_DWORD *)(v5 + 12 + 4 * (int)a2);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(unsigned int *)(v9 + 8);
  int v11 = a2 + 1;
  uint64_t v12 = (int)a2 + 1;
  if ((int)a2 + 1 < 0 || v11 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v11);
  }
  uint64_t v13 = *(int *)(v9 + 12 + 4 * v12);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(unsigned int *)(v14 + 8);
  if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v15) {
    IOSArray_throwOutOfBoundsWithMsg(v15, v12);
  }
  int v16 = *(_DWORD *)(v14 + 12 + 4 * v12);
  if ((a2 & 0x80000000) != 0 || (int)v15 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v15, a2);
  }
  *(_DWORD *)(*(void *)(a1 + 48) + 12 + 4 * (int)a2) = v16 + v8;
  int v17 = *(_DWORD *)(a1 + 32);
  if (v17 - 3 == a2)
  {
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v19 = *(unsigned int *)(v18 + 8);
    int v20 = a2 + 2;
    uint64_t v21 = (int)a2 + 2;
    if ((int)a2 + 2 < 0 || v20 >= (int)v19) {
      IOSArray_throwOutOfBoundsWithMsg(v19, v20);
    }
    int v22 = *(_DWORD *)(v18 + 12 + 4 * v21);
    if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v19) {
      IOSArray_throwOutOfBoundsWithMsg(v19, v12);
    }
    *(_DWORD *)(*(void *)(a1 + 40) + 12 + 4 * v12) = v22;
    uint64_t v23 = *(void *)(a1 + 48);
    uint64_t v24 = *(unsigned int *)(v23 + 8);
    if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v24) {
      IOSArray_throwOutOfBoundsWithMsg(v24, v21);
    }
    int v25 = *(_DWORD *)(v23 + 12 + 4 * v21);
    if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v24) {
      IOSArray_throwOutOfBoundsWithMsg(v24, v12);
    }
    *(_DWORD *)(v23 + 12 + 4 * v12) = v25;
    int v17 = *(_DWORD *)(a1 + 32);
  }
  *(_DWORD *)(a1 + 32) = v17 - 1;
  uint64_t v26 = *(void *)(a1 + 8);
  if (!v26) {
LABEL_42:
  }
    JreThrowNullPointerException();
  uint64_t v27 = *(unsigned int *)(v26 + 8);
  if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v27) {
    IOSArray_throwOutOfBoundsWithMsg(v27, v13);
  }
  uint64_t v28 = *(void **)(v26 + 24 + 8 * v13);
  uint64_t v29 = (void *)JavaLangComparable_class_();
  if (v28 && ([v29 isInstance:v28] & 1) == 0) {
    goto LABEL_49;
  }
  id result = (id)sub_1001F78DC(v28, *(void *)(a1 + 8), v6, v8, 0);
  uint64_t v31 = (v8 - result);
  if (v8 == result) {
    return result;
  }
  int v32 = (int)result;
  uint64_t v33 = *(void *)(a1 + 8);
  uint64_t v34 = *(unsigned int *)(v33 + 8);
  int v35 = v6 + v8 - 1;
  if (v35 < 0 || v35 >= (int)v34) {
    IOSArray_throwOutOfBoundsWithMsg(v34, v35);
  }
  uint64_t v36 = *(void **)(v33 + 24 + 8 * v35);
  uint64_t v37 = (void *)JavaLangComparable_class_();
  if (v36)
  {
    if (([v37 isInstance:v36] & 1) == 0) {
LABEL_49:
    }
      JreThrowClassCastException();
  }
  id result = (id)sub_1001F7650(v36, *(void *)(a1 + 8), v13, v16, v16 - 1);
  if (result)
  {
    uint64_t v38 = (v32 + v6);
    if ((int)v31 <= (int)result)
    {
      return sub_1001F7B50(a1, v38, v31, v13, (int)result);
    }
    else
    {
      return sub_1001F81E0(a1, v38, v31, v13, (uint64_t)result);
    }
  }
  return result;
}

uint64_t sub_1001F7650(void *a1, uint64_t a2, int a3, int a4, int a5)
{
  if (!a1 || !a2) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = *(unsigned int *)(a2 + 8);
  int v11 = a5 + a3;
  uint64_t v12 = a5 + a3;
  if (a5 + a3 < 0 || v11 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v11);
  }
  if ((int)[a1 compareToWithId:*(void *)(a2 + 24 + 8 * v12)] < 1)
  {
    int v19 = a5 + 1;
    int v20 = 1;
    if (a5 + 1 <= 1)
    {
      int v22 = 0;
    }
    else
    {
      int v21 = 0;
      while (1)
      {
        int v22 = v20;
        uint64_t v23 = *(unsigned int *)(a2 + 8);
        int v24 = v12 - v20;
        if (v24 < 0 || v24 >= (int)v23) {
          IOSArray_throwOutOfBoundsWithMsg(v23, v24);
        }
        if ((int)[a1 compareToWithId:*(void *)(a2 + 24 + 8 * v24)] > 0) {
          break;
        }
        if ((2 * v22) <= 0x7FFFFFFE) {
          int v20 = (2 * v22) | 1;
        }
        else {
          int v20 = v19;
        }
        int v21 = v22;
        if (v20 >= v19) {
          goto LABEL_36;
        }
      }
      int v20 = v22;
      int v22 = v21;
    }
LABEL_36:
    if (v20 >= v19) {
      int v20 = v19;
    }
    int v26 = a5 - v20;
    uint64_t v27 = (a5 - v22);
  }
  else
  {
    int v13 = a4 - a5;
    int v14 = 1;
    if (a4 - a5 < 2)
    {
      int v16 = 0;
    }
    else
    {
      int v15 = 0;
      while (1)
      {
        int v16 = v14;
        uint64_t v17 = *(unsigned int *)(a2 + 8);
        int v18 = v14 + v12;
        if (v18 < 0 || v18 >= (int)v17) {
          IOSArray_throwOutOfBoundsWithMsg(v17, v18);
        }
        if ((int)[a1 compareToWithId:*(void *)(a2 + 24 + 8 * v18)] < 1) {
          break;
        }
        if ((2 * v16) <= 0x7FFFFFFE) {
          int v14 = (2 * v16) | 1;
        }
        else {
          int v14 = v13;
        }
        int v15 = v16;
        if (v14 >= v13) {
          goto LABEL_31;
        }
      }
      int v14 = v16;
      int v16 = v15;
    }
LABEL_31:
    if (v14 >= v13) {
      int v25 = v13;
    }
    else {
      int v25 = v14;
    }
    int v26 = v16 + a5;
    uint64_t v27 = (v25 + a5);
  }
  int v28 = v26 + 1;
  while (v28 < (int)v27)
  {
    unsigned int v29 = v28 + ((v27 - v28) >> 1);
    uint64_t v30 = *(unsigned int *)(a2 + 8);
    int v31 = v29 + a3;
    if ((int)(v29 + a3) < 0 || v31 >= (int)v30) {
      IOSArray_throwOutOfBoundsWithMsg(v30, v31);
    }
    int v32 = [a1 compareToWithId:*(void *)(a2 + 24 + 8 * (int)(v29 + a3))];
    if (v32 <= 0) {
      uint64_t v27 = v29;
    }
    else {
      uint64_t v27 = v27;
    }
    if (v32 > 0) {
      int v28 = v29 + 1;
    }
  }
  return v27;
}

uint64_t sub_1001F78DC(void *a1, uint64_t a2, int a3, int a4, int a5)
{
  if (!a1 || !a2) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = *(unsigned int *)(a2 + 8);
  int v11 = a5 + a3;
  uint64_t v12 = a5 + a3;
  if (a5 + a3 < 0 || v11 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v11);
  }
  if (([a1 compareToWithId:*(void *)(a2 + 24 + 8 * v12)] & 0x80000000) != 0)
  {
    int v19 = a5 + 1;
    int v20 = 1;
    if (a5 + 1 < 2)
    {
      int v21 = 0;
    }
    else
    {
      int v21 = 0;
      while (1)
      {
        int v22 = v20;
        uint64_t v23 = *(unsigned int *)(a2 + 8);
        int v24 = v12 - v20;
        if (v24 < 0 || v24 >= (int)v23) {
          IOSArray_throwOutOfBoundsWithMsg(v23, v24);
        }
        if (([a1 compareToWithId:*(void *)(a2 + 24 + 8 * v24)] & 0x80000000) == 0) {
          break;
        }
        if ((2 * v22) <= 0x7FFFFFFE) {
          int v20 = (2 * v22) | 1;
        }
        else {
          int v20 = v19;
        }
        int v21 = v22;
        if (v20 >= v19) {
          goto LABEL_36;
        }
      }
      int v20 = v22;
    }
LABEL_36:
    if (v20 >= v19) {
      int v20 = v19;
    }
    int v26 = a5 - v20;
    uint64_t v27 = (a5 - v21);
  }
  else
  {
    int v13 = a4 - a5;
    int v14 = 1;
    if (a4 - a5 < 2)
    {
      int v15 = 0;
    }
    else
    {
      int v15 = 0;
      while (1)
      {
        int v16 = v14;
        uint64_t v17 = *(unsigned int *)(a2 + 8);
        int v18 = v14 + v12;
        if (v18 < 0 || v18 >= (int)v17) {
          IOSArray_throwOutOfBoundsWithMsg(v17, v18);
        }
        if (([a1 compareToWithId:*(void *)(a2 + 24 + 8 * v18)] & 0x80000000) != 0) {
          break;
        }
        if ((2 * v16) <= 0x7FFFFFFE) {
          int v14 = (2 * v16) | 1;
        }
        else {
          int v14 = v13;
        }
        int v15 = v16;
        if (v14 >= v13) {
          goto LABEL_31;
        }
      }
      int v14 = v16;
    }
LABEL_31:
    if (v14 >= v13) {
      int v25 = v13;
    }
    else {
      int v25 = v14;
    }
    int v26 = v15 + a5;
    uint64_t v27 = (v25 + a5);
  }
  int v28 = v26 + 1;
  while (v28 < (int)v27)
  {
    unsigned int v29 = v28 + ((v27 - v28) >> 1);
    uint64_t v30 = *(unsigned int *)(a2 + 8);
    int v31 = v29 + a3;
    if ((int)(v29 + a3) < 0 || v31 >= (int)v30) {
      IOSArray_throwOutOfBoundsWithMsg(v30, v31);
    }
    if ((int)[a1 compareToWithId:*(void *)(a2 + 24 + 8 * (int)(v29 + a3))] < 0)
    {
      uint64_t v27 = v29;
    }
    else
    {
      int v28 = v29 + 1;
      uint64_t v27 = v27;
    }
  }
  return v27;
}

id sub_1001F7B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(unsigned int **)(a1 + 8);
  uint64_t v57 = (unsigned int *)sub_1001F88D4(a1, a3);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, a2, v57, 0, v7);
  if (!v9) {
LABEL_80:
  }
    JreThrowNullPointerException();
  int v10 = a2 + 1;
  uint64_t v54 = (uint64_t)v9;
  uint64_t v11 = v9[2];
  if ((a4 & 0x80000000) != 0 || (int)v11 <= (int)a4) {
    IOSArray_throwOutOfBoundsWithMsg(v11, a4);
  }
  IOSObjectArray_Set((uint64_t)v9, (int)a2, *(void **)&v9[2 * (int)a4 + 6]);
  if (a5 == 1)
  {
    int v16 = v57;
    uint64_t v17 = 0;
    int v18 = v9;
    uint64_t v19 = (a2 + 1);
LABEL_10:
    return JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v16, v17, v18, v19, v7);
  }
  uint64_t v12 = (a4 + 1);
  if (v7 != 1)
  {
    unsigned int v53 = a5 - 1;
    uint64_t v21 = 0;
    int v56 = *(_DWORD *)(a1 + 16);
LABEL_14:
    LODWORD(v22) = 0;
    int v23 = 0;
    do
    {
      int v55 = v23;
      uint64_t v24 = v9[2];
      if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v24) {
        IOSArray_throwOutOfBoundsWithMsg(v24, v12);
      }
      uint64_t v25 = (int)v12;
      int v26 = *(void **)&v9[2 * (int)v12 + 6];
      uint64_t v27 = (void *)JavaLangComparable_class_();
      if (!v26) {
        goto LABEL_80;
      }
      if (([v27 isInstance:v26] & 1) == 0) {
LABEL_79:
      }
        JreThrowClassCastException();
      if (!v57) {
        goto LABEL_80;
      }
      uint64_t v28 = v57[2];
      if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v28) {
        IOSArray_throwOutOfBoundsWithMsg(v28, v21);
      }
      uint64_t v29 = (int)v21;
      uint64_t v58 = (v10 + 1);
      if (([v26 compareToWithId:*(void *)&v57[2 * (int)v21 + 6]] & 0x80000000) != 0)
      {
        uint64_t v9 = (unsigned int *)v54;
        uint64_t v32 = *(unsigned int *)(v54 + 8);
        if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v32) {
          IOSArray_throwOutOfBoundsWithMsg(v32, v12);
        }
        uint64_t v12 = (v12 + 1);
        IOSObjectArray_Set(v54, v10, *(void **)(v54 + 24 + 8 * v25));
        uint64_t v22 = 0;
        if (!--v53)
        {
          uint64_t v38 = (v10 + 1);
          goto LABEL_68;
        }
        int v23 = v55 + 1;
      }
      else
      {
        uint64_t v30 = v57[2];
        if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v30) {
          IOSArray_throwOutOfBoundsWithMsg(v30, v21);
        }
        uint64_t v21 = (v21 + 1);
        int v31 = *(void **)&v57[2 * v29 + 6];
        uint64_t v9 = (unsigned int *)v54;
        IOSObjectArray_Set(v54, v10, v31);
        uint64_t v7 = (v7 - 1);
        if (v7 == 1)
        {
          uint64_t v22 = v53;
LABEL_64:
          int v48 = v56;
          if (v56 <= 1) {
            int v48 = 1;
          }
          *(_DWORD *)(a1 + 16) = v48;
          uint64_t v38 = v58;
          goto LABEL_73;
        }
        int v23 = 0;
        LODWORD(v22) = v22 + 1;
      }
      ++v10;
    }
    while ((int)(v23 | v22) < v56);
    uint64_t v22 = v53;
    while (1)
    {
      uint64_t v33 = v22;
      uint64_t v34 = v9[2];
      if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v34) {
        IOSArray_throwOutOfBoundsWithMsg(v34, v12);
      }
      uint64_t v35 = (int)v12;
      uint64_t v36 = *(void **)&v9[2 * (int)v12 + 6];
      uint64_t v37 = (void *)JavaLangComparable_class_();
      LODWORD(v38) = v58;
      if (v36 && ([v37 isInstance:v36] & 1) == 0) {
        goto LABEL_79;
      }
      uint64_t v39 = sub_1001F78DC(v36, (uint64_t)v57, v21, v7, 0);
      if (v39)
      {
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v57, v21, v9, v58, v39);
        uint64_t v38 = (v39 + v58);
        uint64_t v21 = (v39 + v21);
        uint64_t v7 = (v7 - v39);
        if ((int)v7 < 2) {
          break;
        }
      }
      uint64_t v40 = v9[2];
      if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v40) {
        IOSArray_throwOutOfBoundsWithMsg(v40, v12);
      }
      int v41 = v38;
      uint64_t v38 = (v38 + 1);
      uint64_t v12 = (v12 + 1);
      IOSObjectArray_Set((uint64_t)v9, v41, *(void **)&v9[2 * v35 + 6]);
      uint64_t v22 = (v33 - 1);
      if (v33 == 1) {
        goto LABEL_68;
      }
      uint64_t v42 = v57[2];
      if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v42) {
        IOSArray_throwOutOfBoundsWithMsg(v42, v21);
      }
      uint64_t v43 = (int)v21;
      uint64_t v44 = *(void **)&v57[2 * (int)v21 + 6];
      uint64_t v45 = (void *)JavaLangComparable_class_();
      if (v44 && ([v45 isInstance:v44] & 1) == 0) {
        goto LABEL_79;
      }
      uint64_t v46 = sub_1001F7650(v44, (uint64_t)v9, v12, v22, 0);
      if (v46)
      {
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, v12, v9, v38, v46);
        uint64_t v38 = (v46 + v38);
        uint64_t v12 = (v46 + v12);
        uint64_t v22 = (v22 - v46);
        if (!v22) {
          goto LABEL_68;
        }
      }
      uint64_t v47 = v57[2];
      if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v47) {
        IOSArray_throwOutOfBoundsWithMsg(v47, v21);
      }
      uint64_t v58 = (v38 + 1);
      uint64_t v21 = (v21 + 1);
      IOSObjectArray_Set((uint64_t)v9, (int)v38, *(void **)&v57[2 * v43 + 6]);
      uint64_t v7 = (v7 - 1);
      if (v7 == 1) {
        goto LABEL_64;
      }
      --v56;
      if ((int)v39 <= 6 && (int)v46 <= 6)
      {
        unsigned int v53 = v22;
        int v56 = (v56 & ~(v56 >> 31)) + 2;
        int v10 = v38 + 1;
        goto LABEL_14;
      }
    }
    uint64_t v22 = v33;
LABEL_68:
    int v49 = v56;
    if (v56 <= 1) {
      int v49 = 1;
    }
    *(_DWORD *)(a1 + 16) = v49;
    if (v7 == 1)
    {
LABEL_73:
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, v12, v9, v38, v22);
      uint64_t v13 = (int)v22 + (int)v38;
      uint64_t v50 = v57[2];
      if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v50) {
        IOSArray_throwOutOfBoundsWithMsg(v50, (int)v21);
      }
      int v15 = *(void **)&v57[2 * (int)v21 + 6];
      goto LABEL_76;
    }
    int v16 = v57;
    if (!v7)
    {
      uint64_t v51 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Comparison method violates its general contract!");
      objc_exception_throw(v51);
    }
    uint64_t v17 = v21;
    int v18 = v9;
    uint64_t v19 = v38;
    goto LABEL_10;
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, v12, v9, (a2 + 1), (a5 - 1));
  if (!v57) {
    goto LABEL_80;
  }
  uint64_t v13 = a5 + (int)a2;
  uint64_t v14 = v57[2];
  if ((int)v14 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v14, 0);
  }
  int v15 = (void *)*((void *)v57 + 3);
LABEL_76:
  return IOSObjectArray_Set((uint64_t)v9, v13, v15);
}

id sub_1001F81E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  uint64_t v9 = *(void **)(a1 + 8);
  int v10 = (unsigned int *)sub_1001F88D4(a1, a5);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, a4, v10, 0, v5);
  if (!v9) {
    goto LABEL_83;
  }
  uint64_t v11 = (a3 + a2 - 1);
  uint64_t v12 = (uint64_t)v9;
  int v13 = v5 + a4;
  uint64_t v14 = (int)v5 + (int)a4 - 1;
  uint64_t v67 = (unsigned int *)v12;
  uint64_t v15 = *(unsigned int *)(v12 + 8);
  if ((v11 & 0x80000000) != 0 || (int)v11 >= (int)v15) {
    IOSArray_throwOutOfBoundsWithMsg(v15, v11);
  }
  uint64_t v16 = (v5 - 1);
  int v17 = v13 - 2;
  int v18 = (unsigned int *)v12;
  IOSObjectArray_Set(v12, v14, *(void **)(v12 + 24 + 8 * (int)v11));
  unsigned int v63 = a3 - 1;
  if (a3 == 1)
  {
    uint64_t v22 = (v17 - v16);
    goto LABEL_10;
  }
  if (v5 == 1)
  {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v67, a2, v67, v17 - v63 + 1, v63);
    if (v10)
    {
      uint64_t v19 = (int)(v17 - v63);
      uint64_t v20 = v10[2];
      if ((int)v16 >= (int)v20) {
        IOSArray_throwOutOfBoundsWithMsg(v20, v16);
      }
      uint64_t v21 = *(void **)&v10[2 * v16 + 6];
LABEL_78:
      return IOSObjectArray_Set((uint64_t)v67, v19, v21);
    }
LABEL_83:
    JreThrowNullPointerException();
  }
  if (!v10) {
    goto LABEL_83;
  }
  int v62 = a2;
  uint64_t v24 = (a3 + a2 - 2);
  int v66 = *(_DWORD *)(a1 + 16);
LABEL_15:
  int v25 = 0;
  LODWORD(v26) = 0;
  int v27 = v17;
  do
  {
    int v64 = v25;
    uint64_t v28 = v10[2];
    if ((v16 & 0x80000000) != 0 || (int)v16 >= (int)v28) {
      IOSArray_throwOutOfBoundsWithMsg(v28, v16);
    }
    uint64_t v29 = (int)v16;
    uint64_t v30 = *(void **)&v10[2 * (int)v16 + 6];
    int v31 = (void *)JavaLangComparable_class_();
    if (!v30) {
      goto LABEL_83;
    }
    if (([v31 isInstance:v30] & 1) == 0) {
LABEL_82:
    }
      JreThrowClassCastException();
    int v32 = v5;
    uint64_t v33 = v18[2];
    if ((v24 & 0x80000000) != 0 || (int)v24 >= (int)v33) {
      IOSArray_throwOutOfBoundsWithMsg(v33, v24);
    }
    uint64_t v34 = (int)v24;
    int v68 = v27 - 1;
    if (([v30 compareToWithId:*(void *)&v67[2 * (int)v24 + 6]] & 0x80000000) != 0)
    {
      uint64_t v36 = v67[2];
      if ((v24 & 0x80000000) != 0 || (int)v24 >= (int)v36) {
        IOSArray_throwOutOfBoundsWithMsg(v36, v24);
      }
      uint64_t v24 = (v24 - 1);
      uint64_t v37 = *(void **)&v67[2 * v34 + 6];
      int v18 = v67;
      IOSObjectArray_Set((uint64_t)v67, v27, v37);
      uint64_t v26 = 0;
      if (!--v63) {
        goto LABEL_69;
      }
      int v25 = v64 + 1;
    }
    else
    {
      uint64_t v35 = v10[2];
      if ((v16 & 0x80000000) != 0 || (int)v16 >= (int)v35) {
        IOSArray_throwOutOfBoundsWithMsg(v35, v16);
      }
      uint64_t v16 = (v16 - 1);
      int v18 = v67;
      IOSObjectArray_Set((uint64_t)v67, v27, *(void **)&v10[2 * v29 + 6]);
      uint64_t v5 = (v5 - 1);
      if (v32 == 2)
      {
        uint64_t v26 = v63;
        int v46 = v27 - 1;
LABEL_65:
        int v57 = v66;
        if (v66 <= 1) {
          int v57 = 1;
        }
        *(_DWORD *)(a1 + 16) = v57;
        goto LABEL_75;
      }
      int v25 = 0;
      LODWORD(v26) = v26 + 1;
    }
    --v27;
  }
  while ((int)(v26 | v25) < v66);
  uint64_t v26 = v63;
  while (1)
  {
    uint64_t v38 = v10[2];
    if ((v16 & 0x80000000) != 0 || (int)v16 >= (int)v38) {
      IOSArray_throwOutOfBoundsWithMsg(v38, v16);
    }
    uint64_t v39 = (int)v16;
    uint64_t v40 = *(void **)&v10[2 * (int)v16 + 6];
    int v41 = (void *)JavaLangComparable_class_();
    if (v40 && ([v41 isInstance:v40] & 1) == 0) {
      goto LABEL_82;
    }
    uint64_t v42 = sub_1001F78DC(v40, (uint64_t)v18, v62, v26, (int)v26 - 1);
    uint64_t v43 = (v26 - v42);
    if (v26 != v42)
    {
      uint64_t v44 = v42;
      uint64_t v24 = (v24 - v43);
      v68 -= v43;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v18, (v24 + 1), v18, (v68 + 1), v43);
      if (!v44)
      {
        uint64_t v26 = 0;
LABEL_69:
        int v46 = v68;
        goto LABEL_70;
      }
      uint64_t v26 = v44;
    }
    uint64_t v45 = v10[2];
    if ((v16 & 0x80000000) != 0 || (int)v16 >= (int)v45) {
      IOSArray_throwOutOfBoundsWithMsg(v45, v16);
    }
    int v46 = v68 - 1;
    uint64_t v16 = (v16 - 1);
    IOSObjectArray_Set((uint64_t)v18, v68, *(void **)&v10[2 * v39 + 6]);
    int v47 = v5 - 1;
    if (v5 == 2) {
      goto LABEL_65;
    }
    int v65 = v43;
    uint64_t v48 = v26;
    uint64_t v49 = v18[2];
    if ((v24 & 0x80000000) != 0 || (int)v24 >= (int)v49) {
      IOSArray_throwOutOfBoundsWithMsg(v49, v24);
    }
    uint64_t v50 = (int)v24;
    uint64_t v51 = *(void **)&v18[2 * (int)v24 + 6];
    uint64_t v52 = (void *)JavaLangComparable_class_();
    if (v51 && ([v52 isInstance:v51] & 1) == 0) {
      goto LABEL_82;
    }
    uint64_t v53 = sub_1001F7650(v51, (uint64_t)v10, 0, (int)v5 - 1, (int)v5 - 2);
    uint64_t v5 = (v5 - 1);
    uint64_t v54 = (v47 - v53);
    if (v54)
    {
      uint64_t v55 = v53;
      v46 -= v54;
      uint64_t v16 = (v16 - v54);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v10, (v16 + 1), v18, (v46 + 1), v54);
      uint64_t v5 = v55;
      if ((int)v55 < 2) {
        break;
      }
    }
    uint64_t v56 = v18[2];
    if ((v24 & 0x80000000) != 0 || (int)v24 >= (int)v56) {
      IOSArray_throwOutOfBoundsWithMsg(v56, v24);
    }
    int v68 = v46 - 1;
    uint64_t v24 = (v24 - 1);
    IOSObjectArray_Set((uint64_t)v18, v46, *(void **)&v18[2 * v50 + 6]);
    uint64_t v26 = (v48 - 1);
    if (v48 == 1) {
      goto LABEL_69;
    }
    --v66;
    if (v65 <= 6 && (int)v54 <= 6)
    {
      unsigned int v63 = v48 - 1;
      int v66 = (v66 & ~(v66 >> 31)) + 2;
      int v17 = v46 - 1;
      goto LABEL_15;
    }
  }
  uint64_t v26 = v48;
  uint64_t v5 = v55;
LABEL_70:
  int v58 = v66;
  if (v66 <= 1) {
    int v58 = 1;
  }
  *(_DWORD *)(a1 + 16) = v58;
  if (v5 == 1)
  {
LABEL_75:
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v67, (v24 - v26 + 1), v67, (v46 - v26 + 1), v26);
    uint64_t v19 = v46 - (int)v26;
    uint64_t v59 = v10[2];
    if ((v16 & 0x80000000) != 0 || (int)v16 >= (int)v59) {
      IOSArray_throwOutOfBoundsWithMsg(v59, (int)v16);
    }
    uint64_t v21 = *(void **)&v10[2 * (int)v16 + 6];
    goto LABEL_78;
  }
  if (!v5)
  {
    int v60 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Comparison method violates its general contract!");
    objc_exception_throw(v60);
  }
  uint64_t v22 = (v46 - v5 + 1);
LABEL_10:
  return JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v10, 0, v18, v22, v5);
}

id sub_1001F88D4(uint64_t a1, int a2)
{
  uint64_t v3 = (id *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(v2 + 8) < a2)
  {
    int v4 = a2 | (a2 >> 1) | ((a2 | (a2 >> 1)) >> 2);
    int v5 = v4 | (v4 >> 4) | ((v4 | (v4 >> 4)) >> 8);
    uint64_t v6 = (v5 | (v5 >> 16)) + 1;
    if ((int)v6 < 0)
    {
LABEL_6:
      int v8 = +[IOSObjectArray arrayWithLength:a2 type:NSObject_class_()];
      JreStrongAssign(v3, v8);
      return *v3;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7)
    {
      a2 = JavaLangMath_minWithInt_withInt_(v6, *(_DWORD *)(v7 + 8) >> 1);
      goto LABEL_6;
    }
LABEL_8:
    JreThrowNullPointerException();
  }
  return (id)v2;
}

uint64_t JavaIoCloseable_class_()
{
  if (qword_100560DD8 != -1) {
    dispatch_once(&qword_100560DD8, &stru_10043C3B8);
  }
  return qword_100560DD0;
}

void sub_1001F8A4C(id a1)
{
  qword_100560DD0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaIoCloseable);
}

uint64_t JavaTextNumberFormat_init(uint64_t a1, uint64_t a2)
{
  uint64_t result = JavaTextFormat_init(a1, a2);
  *(unsigned char *)(a1 + 8) = 1;
  *(unsigned char *)(a1 + 9) = 0;
  *(_DWORD *)(a1 + 12) = 40;
  *(_DWORD *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 20) = 3;
  *(_DWORD *)(a1 + 24) = 0;
  return result;
}

JavaTextDecimalFormat *JavaTextNumberFormat_getCurrencyInstanceWithJavaUtilLocale_(void *a1)
{
  uint64_t v2 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a1);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = new_JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v2->currencyPattern_, a1);
  return v3;
}

JavaTextDecimalFormat *JavaTextNumberFormat_getIntegerInstanceWithJavaUtilLocale_(void *a1)
{
  uint64_t v2 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a1);
  if (!v2
    || (uint64_t v3 = new_JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v2->integerPattern_, a1)) == 0)
  {
    JreThrowNullPointerException();
  }
  int v4 = v3;
  [(JavaTextDecimalFormat *)v3 setParseIntegerOnlyWithBoolean:1];
  return v4;
}

JavaTextDecimalFormat *JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(void *a1)
{
  uint64_t v2 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a1);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = new_JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v2->numberPattern_, a1);
  return v3;
}

JavaTextDecimalFormat *JavaTextNumberFormat_getPercentInstanceWithJavaUtilLocale_(void *a1)
{
  uint64_t v2 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a1);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = new_JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v2->percentPattern_, a1);
  return v3;
}

void sub_1001F9440(void *a1)
{
}

JavaTextDecimalFormat *JavaTextNumberFormat_getInstance()
{
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  return JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(Default);
}

JavaTextFieldPosition *new_JavaTextFieldPosition_initWithInt_(int a1)
{
  uint64_t result = [JavaTextFieldPosition alloc];
  result->field_ = a1;
  return result;
}

JavaTextFieldPosition *new_JavaTextFieldPosition_initWithJavaTextFormat_Field_(void *a1)
{
  uint64_t v2 = [JavaTextFieldPosition alloc];
  JreStrongAssign((id *)&v2->attribute_, a1);
  v2->field_ = -1;
  return v2;
}

id LibcoreIcuNativeDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(id *a1, void *a2, void *a3)
{
  JreStrongAssign(a1 + 4, 0);
  if (!a3) {
    JreThrowNullPointerException();
  }
  id v17 = [a3 getCurrencySymbol];
  __int16 v16 = (unsigned __int16)[a3 getDecimalSeparator];
  [a3 getDigit];
  id v15 = [a3 getExponentSeparator];
  __int16 v5 = (unsigned __int16)[a3 getGroupingSeparator];
  id v6 = [a3 getInfinity];
  id v7 = [a3 getInternationalCurrencySymbol];
  __int16 v8 = (unsigned __int16)[a3 getMinusSign];
  __int16 v9 = (unsigned __int16)[a3 getMonetaryDecimalSeparator];
  id v10 = [a3 getNaN];
  [a3 getPatternSeparator];
  unsigned __int16 v11 = (unsigned __int16)[a3 getPercent];
  HIWORD(v14) = (unsigned __int16)[a3 getPerMill];
  LOWORD(v14) = v11;
  id v12 = sub_1001FB374(a2, (uint64_t)v17, v16, (uint64_t)v15, v5, (uint64_t)v6, (uint64_t)v7, v8, v9, (uint64_t)v10, v14, (__int16)[a3 getZeroDigit]);
  JreStrongAssign(a1 + 1, v12);
  JreStrongAssign(a1 + 2, a2);
  return [a1 setMultiplierWithInt:1];
}

void sub_1001F9C54()
{
}

void sub_1001F9CCC()
{
}

id LibcoreIcuNativeDecimalFormat_initWithNSString_withLibcoreIcuLocaleData_(id *a1, void *a2, uint64_t a3)
{
  JreStrongAssign(a1 + 4, 0);
  if (!a3) {
    JreThrowNullPointerException();
  }
  id v6 = sub_1001FB374(a2, *(void *)(a3 + 264), *(_WORD *)(a3 + 226), *(void *)(a3 + 240), *(_WORD *)(a3 + 228), *(void *)(a3 + 248), *(void *)(a3 + 272), *(_WORD *)(a3 + 238), *(_WORD *)(a3 + 236), *(void *)(a3 + 256), *(_DWORD *)(a3 + 232), *(_WORD *)(a3 + 224));
  JreStrongAssign(a1 + 1, v6);
  return JreStrongAssign(a1 + 2, a2);
}

void sub_1001F9EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001F9F30(_Unwind_Exception *a1)
{
}

void sub_1001FA020(_Unwind_Exception *a1)
{
}

id sub_1001FA394(void *a1, uint64_t a2, __int16 a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, __int16 a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v15 = WORD2(a11);
  uint64_t v16 = a10;
  __int16 v20 = a3;
  __int16 v19 = a5;
  __int16 v18 = a8;
  [a1 setCurrencySymbol:a2];
  objc_msgSend(a1, "setDecimalSeparator:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v20, 1));
  [a1 setExponentSymbol:a4];
  objc_msgSend(a1, "setGroupingSeparator:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v19, 1));
  [a1 setPositiveInfinitySymbol:a6];
  [a1 setInternationalCurrencySymbol:a7];
  objc_msgSend(a1, "setNegativePrefix:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &v18, 1));
  objc_msgSend(a1, "setCurrencyGroupingSeparator:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &a9, 1));
  [a1 setNotANumberSymbol:v16];
  objc_msgSend(a1, "setPercentSymbol:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", &a11, 1));
  id result = objc_msgSend(a1, "setPerMillSymbol:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", (char *)&a11 + 2, 1));
  if (v15 != 48) {
    return objc_msgSend(a1, "setZeroSymbol:", +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", (char *)&a11 + 4, 1));
  }
  return result;
}

IOSCharArray *sub_1001FA724(void *a1, uint64_t a2)
{
  [a1 setAllowsFloats:0];
  id v4 = [a1 positiveFormat];
  if (([v4 hasPrefix:@"%"] & 1) != 0
    || [v4 hasSuffix:@"%"])
  {
    [a1 setNumberStyle:3];
    uint64_t v5 = (uint64_t)((double)a2 * 100.0);
  }
  else
  {
    if (([v4 hasPrefix:@"¤"] & 1) != 0
      || [v4 hasSuffix:@"¤"])
    {
      id v6 = a1;
      uint64_t v7 = 2;
    }
    else
    {
      id v6 = a1;
      uint64_t v7 = 0;
    }
    [v6 setNumberStyle:v7];
    uint64_t v5 = a2;
  }
  id v8 = objc_msgSend(objc_msgSend(a1, "stringFromNumber:", +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", v5)), "stringByReplacingOccurrencesOfString:withString:", @" ", @" ");
  return +[IOSCharArray arrayWithNSString:v8];
}

IOSCharArray *sub_1001FA8A4(void *a1, double a2)
{
  [a1 setAllowsFloats:1];
  id v4 = [a1 positiveFormat];
  if (([v4 hasPrefix:@"%"] & 1) != 0
    || [v4 hasSuffix:@"%"])
  {
    [a1 setNumberStyle:3];
    double v5 = a2 * 100.0;
  }
  else
  {
    if (([v4 hasPrefix:@"¤"] & 1) != 0
      || [v4 hasSuffix:@"¤"])
    {
      id v6 = a1;
      uint64_t v7 = 2;
    }
    else
    {
      id v6 = a1;
      uint64_t v7 = 0;
    }
    [v6 setNumberStyle:v7];
    double v5 = a2;
  }
  id v8 = objc_msgSend(objc_msgSend(a1, "stringFromNumber:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v5)), "stringByReplacingOccurrencesOfString:withString:", @" ", @" ");
  return +[IOSCharArray arrayWithNSString:v8];
}

id sub_1001FA9FC(void *a1, void *a2)
{
  return sub_1001FB4A4(a1, a2);
}

JavaLangLong *sub_1001FAE60(void *a1, void *a2, void *a3)
{
  signed int v6 = [a3 getIndex];
  uint64_t v7 = v6;
  id v8 = (char *)[a2 length];
  int v9 = v8 - v6;
  uint64_t v16 = v6;
  id v17 = &v8[-v6];
  if (v8 != (char *)v6)
  {
    unint64_t v10 = (unint64_t)v8;
    if (([a1 allowsFloats] & 1) == 0
      && [a2 characterAtIndex:v6] == 48)
    {
      if (v10 <= v6 + 1)
      {
LABEL_8:
        [a3 setIndexWithInt:(v7 + v9)];
        return JavaLangLong_valueOfWithLong_(0);
      }
      uint64_t v11 = v6 + 1;
      while ([a2 characterAtIndex:v11] == 48)
      {
        if (v10 == ++v11) {
          goto LABEL_8;
        }
      }
    }
  }
  id v18 = 0;
  uint64_t v15 = 0;
  if (![a1 getObjectValue:&v18 forString:a2 range:&v16 error:&v15] || v15)
  {
    [a3 setErrorIndexWithInt:v7];
    return 0;
  }
  else
  {
    [a3 setIndexWithInt:(v7 + v17)];
    [v18 doubleValue];
    if (fmod(v13, 1.0) == 0.0)
    {
      return JavaLangLong_valueOfWithLong_((int64_t)[v18 longLongValue]);
    }
    else
    {
      [v18 doubleValue];
      return (JavaLangLong *)JavaLangDouble_valueOfWithDouble_(v14);
    }
  }
}

id sub_1001FB374(void *a1, uint64_t a2, __int16 a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, __int16 a8, __int16 a9, uint64_t a10, int a11, __int16 a12)
{
  id v16 = objc_alloc_init((Class)NSNumberFormatter);
  sub_1001FB4A4(v16, a1);
  WORD2(v19) = a12;
  LODWORD(v19) = a11;
  LOWORD(v18) = a9;
  sub_1001FA394(v16, a2, a3, a4, a5, a6, a7, a8, v18, a10, v19);
  return v16;
}

id sub_1001FB4A4(void *a1, void *a2)
{
  id v3 = [a2 componentsSeparatedByString:@";"];
  objc_msgSend(a1, "setPositiveFormat:", objc_msgSend(v3, "objectAtIndex:", 0));
  id result = [v3 count];
  if ((unint64_t)result >= 2)
  {
    id v5 = [v3 objectAtIndex:1];
    return [a1 setNegativeFormat:v5];
  }
  return result;
}

LibcoreIcuNativeDecimalFormat *new_LibcoreIcuNativeDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(void *a1, void *a2)
{
  id v4 = [LibcoreIcuNativeDecimalFormat alloc];
  LibcoreIcuNativeDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_((id *)&v4->super.isa, a1, a2);
  return v4;
}

LibcoreIcuNativeDecimalFormat *new_LibcoreIcuNativeDecimalFormat_initWithNSString_withLibcoreIcuLocaleData_(void *a1, uint64_t a2)
{
  id v4 = [LibcoreIcuNativeDecimalFormat alloc];
  LibcoreIcuNativeDecimalFormat_initWithNSString_withLibcoreIcuLocaleData_((id *)&v4->super.isa, a1, a2);
  return v4;
}

uint64_t sub_1001FB6D8(void *a1)
{
  if (atomic_load_explicit(LibcoreIcuNativeDecimalFormat_FieldPositionIterator__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_11;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_11;
    }
  }
  uint64_t v2 = (uint64_t)[a1 getField];
  if (v2 >= 2)
  {
    id v3 = [a1 getFieldAttribute];
    if (!v3) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v4 = qword_100560DE0;
    if (qword_100560DE0)
    {
      id v5 = v3;
      uint64_t v2 = 0;
      while (v2 < *(int *)(v4 + 8))
      {
        signed int v6 = *(void **)(v4 + 24 + 8 * v2);
        if (!v6) {
          goto LABEL_11;
        }
        if ([v6 isEqual:v5]) {
          return v2;
        }
        ++v2;
        uint64_t v4 = qword_100560DE0;
        if (!qword_100560DE0) {
          goto LABEL_11;
        }
      }
      return 0xFFFFFFFFLL;
    }
LABEL_11:
    JreThrowNullPointerException();
  }
  return v2;
}

uint64_t sub_1001FB8DC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  if (!v1 || (int v2 = *(_DWORD *)(result + 16), v2 < 0) || v2 == *(_DWORD *)(v1 + 8))
  {
    id v3 = new_JavaUtilNoSuchElementException_init();
    objc_exception_throw(v3);
  }
  return result;
}

void *FillInStackTraceInternal(uint64_t a1)
{
  memset(v5, 0, 512);
  *(_DWORD *)(a1 + 80) = backtrace((void **)v5, 128);
  size_t v2 = (8 * *(_DWORD *)(a1 + 80));
  id v3 = malloc_type_malloc(v2, 0xC6DD3F77uLL);
  *(void *)(a1 + 72) = v3;
  return memcpy(v3, v5, v2);
}

id JavaLangThrowable_init(void *a1)
{
  return JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(a1, 0, 0, 1, 1);
}

id JavaLangThrowable_initWithNSString_(void *a1, void *a2)
{
  return JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(a1, a2, 0, 1, 1);
}

id JavaLangThrowable_initWithNSString_withJavaLangThrowable_(void *a1, void *a2, void *a3)
{
  return JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(a1, a2, a3, 1, 1);
}

id JavaLangThrowable_initWithJavaLangThrowable_(void *a1, id a2)
{
  size_t v2 = a2;
  if (a2) {
    a2 = [a2 description];
  }
  return JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(a1, a2, v2, 1, 1);
}

id JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(void *a1, void *a2, void *a3, int a4, int a5)
{
  objc_msgSend(a1, "initWithName:reason:userInfo:", objc_msgSend((id)objc_opt_class(), "description"), a2, 0);
  a1[5] = a3;
  id v10 = a2;
  id result = 0;
  a1[6] = v10;
  if (a4)
  {
    if (qword_100560DF0 != -1) {
      dispatch_once(&qword_100560DF0, &stru_10043E4C8);
    }
    id result = +[IOSObjectArray newArrayWithLength:0 type:qword_100560DE8];
  }
  a1[8] = result;
  if (a5)
  {
    return FillInStackTraceInternal((uint64_t)a1);
  }
  return result;
}

JavaLangThrowable *new_JavaLangThrowable_init()
{
  uint64_t v0 = [JavaLangThrowable alloc];
  JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(v0, 0, 0, 1, 1);
  return v0;
}

JavaLangThrowable *new_JavaLangThrowable_initWithNSString_(void *a1)
{
  size_t v2 = [JavaLangThrowable alloc];
  JavaLangThrowable_initWithNSString_withJavaLangThrowable_withBoolean_withBoolean_(v2, a1, 0, 1, 1);
  return v2;
}

void sub_1001FC400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001FC454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001FC848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001FC9C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaLangThrowable_class_()
{
  if (qword_100560DF0 != -1) {
    dispatch_once(&qword_100560DF0, &stru_10043E4C8);
  }
  return qword_100560DE8;
}

void sub_1001FCBF0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560DE8 = IOSClass_fromClass(v1);
}

JavaLangIllegalMonitorStateException *new_JavaLangIllegalMonitorStateException_init()
{
  uint64_t v0 = [JavaLangIllegalMonitorStateException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

uint64_t JavaUtilSortedMap_class_()
{
  if (qword_100560E00 != -1) {
    dispatch_once(&qword_100560E00, &stru_10043E780);
  }
  return qword_100560DF8;
}

void sub_1001FCD00(id a1)
{
  qword_100560DF8 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilSortedMap);
}

JavaIoUTFDataFormatException *new_JavaIoUTFDataFormatException_initWithNSString_(uint64_t a1)
{
  size_t v2 = [JavaIoUTFDataFormatException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

void sub_1001FCFC8(id a1)
{
  qword_100560E08 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangAnnotationTarget);
}

JavaNioChannelsUnsupportedAddressTypeException *new_JavaNioChannelsUnsupportedAddressTypeException_init()
{
  uint64_t v0 = [JavaNioChannelsUnsupportedAddressTypeException alloc];
  JavaLangIllegalArgumentException_init(v0, v1);
  return v0;
}

JavaNioCharArrayBuffer *JavaNioCharBuffer_allocateWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v10 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    uint64_t v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v10);
    objc_exception_throw(v11);
  }
  id v8 = new_JavaNioCharArrayBuffer_initWithCharArray_((unsigned int *)+[IOSCharArray arrayWithLength:a1]);
  return v8;
}

JavaNioCharArrayBuffer *JavaNioCharBuffer_wrapWithCharArray_(unsigned int *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  int v1 = a1[2];
  return JavaNioCharBuffer_wrapWithCharArray_withInt_withInt_(a1, 0, v1);
}

JavaNioCharArrayBuffer *JavaNioCharBuffer_wrapWithCharArray_withInt_withInt_(unsigned int *a1, int a2, int a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(a1[2], a2, a3);
  id result = new_JavaNioCharArrayBuffer_initWithCharArray_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3 + a2;
  return result;
}

JavaNioCharSequenceAdapter *JavaNioCharBuffer_wrapWithJavaLangCharSequence_(void *a1)
{
  int v1 = new_JavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(a1);
  return v1;
}

JavaNioCharSequenceAdapter *JavaNioCharBuffer_wrapWithJavaLangCharSequence_withInt_withInt_(void *a1, int a2, int a3)
{
  if (a2 < 0 || a3 < a2)
  {
    if (a1)
    {
LABEL_7:
      [a1 length];
      CFStringRef v14 = JreStrcat("$I$I$I", v7, v8, v9, v10, v11, v12, v13, @"cs.length()=");
      uint64_t v15 = new_JavaLangIndexOutOfBoundsException_initWithNSString_((uint64_t)v14);
      objc_exception_throw(v15);
    }
LABEL_8:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_8;
  }
  if ((int)[a1 length] < a3) {
    goto LABEL_7;
  }
  id result = new_JavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3;
  return result;
}

uint64_t JavaNioCharBuffer_initWithInt_withLong_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaNioBuffer_initWithInt_withInt_withLong_(a1, 1, a2, a3, a5, a6, a7, a8);
}

JavaNioChannelsOverlappingFileLockException *new_JavaNioChannelsOverlappingFileLockException_init()
{
  uint64_t v0 = [JavaNioChannelsOverlappingFileLockException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

OrgXmlSaxSAXNotRecognizedException *new_OrgXmlSaxSAXNotRecognizedException_initWithNSString_(uint64_t a1)
{
  size_t v2 = [OrgXmlSaxSAXNotRecognizedException alloc];
  OrgXmlSaxSAXException_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

JavaMathBigInteger *JavaMathMultiplication_multiplyWithJavaMathBigInteger_withJavaMathBigInteger_(int *a1, int *a2)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaMathMultiplication_karatsubaWithJavaMathBigInteger_withJavaMathBigInteger_(a1, a2);
}

JavaMathBigInteger *JavaMathMultiplication_karatsubaWithJavaMathBigInteger_withJavaMathBigInteger_(int *a1, int *a2)
{
  if (atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_26;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      goto LABEL_26;
    }
  }
  if (!a1) {
    goto LABEL_26;
  }
  int v4 = a2[4];
  int v5 = a1[4];
  if (v4 <= v5) {
    signed int v6 = a2;
  }
  else {
    signed int v6 = a1;
  }
  if (v4 > v5) {
    a1 = a2;
  }
  if (v6[4] <= 62)
  {
    return JavaMathMultiplication_multiplyPAPWithJavaMathBigInteger_withJavaMathBigInteger_((uint64_t)a1, (uint64_t)v6);
  }
  uint64_t v8 = (16 * a1[4]) & 0xFFFFFFE0;
  id v9 = [a1 shiftRightWithInt:v8];
  id v10 = [v6 shiftRightWithInt:v8];
  if (!v9) {
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(a1, "subtractWithJavaMathBigInteger:", objc_msgSend(v9, "shiftLeftWithInt:", v8));
  if (!v11) {
    goto LABEL_26;
  }
  id v13 = v12;
  id v14 = objc_msgSend(v6, "subtractWithJavaMathBigInteger:", objc_msgSend(v11, "shiftLeftWithInt:", v8));
  uint64_t v15 = (void *)JavaMathMultiplication_karatsubaWithJavaMathBigInteger_withJavaMathBigInteger_(v9, v11);
  uint64_t v16 = JavaMathMultiplication_karatsubaWithJavaMathBigInteger_withJavaMathBigInteger_(v13, v14);
  id v17 = [v9 subtractWithJavaMathBigInteger:v13];
  if (!v14
    || (uint64_t v18 = (void *)JavaMathMultiplication_karatsubaWithJavaMathBigInteger_withJavaMathBigInteger_(v17, [v14 subtractWithJavaMathBigInteger:v11])) == 0|| (v19 = objc_msgSend(v18, "addWithJavaMathBigInteger:", v15)) == 0|| (v20 = objc_msgSend(v19, "addWithJavaMathBigInteger:", v16)) == 0|| (v21 = objc_msgSend(v20, "shiftLeftWithInt:", v8), !v15)|| (v22 = v21, (v23 = objc_msgSend(v15, "shiftLeftWithInt:", (2 * v8))) == 0)|| (v24 = objc_msgSend(v23, "addWithJavaMathBigInteger:", v22)) == 0)
  {
LABEL_26:
    JreThrowNullPointerException();
  }
  return (JavaMathBigInteger *)[v24 addWithJavaMathBigInteger:v16];
}

JavaMathBigInteger *JavaMathMultiplication_multiplyPAPWithJavaMathBigInteger_withJavaMathBigInteger_(uint64_t a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_21;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_21;
    }
  }
  if (!a2) {
    goto LABEL_21;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  int v6 = v5 + v4;
  if (*(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20)) {
    int v7 = 1;
  }
  else {
    int v7 = -1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v6 != 2)
  {
    uint64_t v15 = *(void *)(a2 + 8);
    uint64_t v16 = +[IOSIntArray arrayWithLength:v6];
    JavaMathMultiplication_multArraysPAPWithIntArray_withInt_withIntArray_withInt_withIntArray_(v8, v4, v15, v5, (uint64_t)v16);
    id v14 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v7, (int)v5 + (int)v4, v16);
    [(JavaMathBigInteger *)v14 cutOffLeadingZeroes];
    return v14;
  }
  if (!v8) {
LABEL_21:
  }
    JreThrowNullPointerException();
  uint64_t v9 = *(unsigned int *)(v8 + 8);
  if ((int)v9 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v9, 0);
  }
  unsigned int v10 = *(_DWORD *)(v8 + 12);
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(unsigned int *)(v11 + 8);
  if ((int)v12 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v12, 0);
  }
  unsigned int v13 = *(_DWORD *)(v11 + 12);
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!is_mul_ok(v13, v10))
  {
    unint64_t v19 = v13 * (unint64_t)v10;
    return new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v7, 2, +[IOSIntArray arrayWithInts:&v19 count:2]);
  }
  uint64_t v18 = new_JavaMathBigInteger_initWithInt_withInt_(v7, v13 * v10);
  return v18;
}

uint64_t JavaMathMultiplication_multArraysPAPWithIntArray_withInt_withIntArray_withInt_withIntArray_(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = result;
  if (atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire))
  {
    if (!a2) {
      return result;
    }
  }
  else
  {
    id result = objc_opt_class();
    if (!a2) {
      return result;
    }
  }
  if (!a4) {
    return result;
  }
  if (a2 == 1)
  {
    if (v9)
    {
      uint64_t v10 = *(unsigned int *)(v9 + 8);
      if ((int)v10 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v10, 0);
      }
      int v11 = sub_1001FEB68(a5, a3, a4, *(_DWORD *)(v9 + 12));
      if (a5)
      {
        int v12 = v11;
        id result = *(unsigned int *)(a5 + 8);
        if ((a4 & 0x80000000) != 0 || (int)result <= (int)a4) {
          IOSArray_throwOutOfBoundsWithMsg(result, a4);
        }
        *(_DWORD *)(a5 + 12 + 4 * (int)a4) = v12;
        return result;
      }
    }
LABEL_24:
    JreThrowNullPointerException();
  }
  if (a4 == 1)
  {
    if (!a3) {
      goto LABEL_24;
    }
    uint64_t v13 = *(unsigned int *)(a3 + 8);
    if ((int)v13 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v13, 0);
    }
    int v14 = sub_1001FEB68(a5, v9, a2, *(_DWORD *)(a3 + 12));
    if (!a5) {
      goto LABEL_24;
    }
    int v15 = v14;
    id result = *(unsigned int *)(a5 + 8);
    if ((a2 & 0x80000000) != 0 || (int)result <= (int)a2) {
      IOSArray_throwOutOfBoundsWithMsg(result, a2);
    }
    *(_DWORD *)(a5 + 12 + 4 * (int)a2) = v15;
  }
  else
  {
    return JavaMathMultiplication_multPAPWithIntArray_withIntArray_withIntArray_withInt_withInt_(v9, a3, a5, a2, a4);
  }
  return result;
}

uint64_t JavaMathMultiplication_multPAPWithIntArray_withIntArray_withIntArray_withInt_withInt_(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v8 = result;
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0)
  {
    int v26 = a5;
    uint64_t v27 = result;
    id result = objc_opt_class();
    uint64_t v8 = v27;
    a5 = v26;
  }
  if (v8 == a2 && a4 == a5)
  {
    return JavaMathMultiplication_squareWithIntArray_withInt_withIntArray_(v8, a4, a3);
  }
  else if ((int)a4 >= 1)
  {
    if (v8)
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = a4;
      uint64_t v12 = a5;
      uint64_t v32 = a4;
      uint64_t v33 = a5;
      while (1)
      {
        uint64_t v13 = *(int *)(v8 + 8);
        if (v10 >= v13) {
          IOSArray_throwOutOfBoundsWithMsg(v13, v10);
        }
        if (a5 >= 1) {
          break;
        }
        if (!a3) {
          goto LABEL_37;
        }
        LODWORD(v15) = 0;
LABEL_30:
        id result = *(unsigned int *)(a3 + 8);
        int v25 = v10 + a5;
        if ((int)v10 + a5 < 0 || v25 >= (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v25);
        }
        *(_DWORD *)(a3 + 12 + 4 * v25) = v15;
        ++v10;
        v9 += (uint64_t)&_mh_execute_header;
        if (v10 == v11) {
          return result;
        }
      }
      if (a2)
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0;
        unsigned int v16 = *(_DWORD *)(v8 + 12 + 4 * v10);
        uint64_t v17 = v9;
        while (1)
        {
          uint64_t v18 = *(int *)(a2 + 8);
          if (v14 >= v18) {
            IOSArray_throwOutOfBoundsWithMsg(v18, v14);
          }
          if (!a3) {
            break;
          }
          unsigned int v19 = *(_DWORD *)(a2 + 12 + 4 * v14);
          uint64_t v20 = v10 + v14;
          uint64_t v21 = *(unsigned int *)(a3 + 8);
          if (v10 + v14 < 0 || (int)v21 <= (int)v20) {
            IOSArray_throwOutOfBoundsWithMsg(v21, v10 + v14);
          }
          uint64_t v22 = *(unsigned int *)(a3 + 12 + 4 * (v17 >> 32));
          if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0)
          {
            int v29 = a5;
            uint64_t v28 = v8;
            uint64_t v30 = v9;
            uint64_t v31 = v10;
            objc_opt_class();
            uint64_t v11 = v32;
            uint64_t v12 = v33;
            uint64_t v9 = v30;
            uint64_t v10 = v31;
            uint64_t v8 = v28;
            a5 = v29;
          }
          uint64_t v23 = *(unsigned int *)(a3 + 8);
          if ((v20 & 0x80000000) != 0 || (int)v23 <= (int)v20) {
            IOSArray_throwOutOfBoundsWithMsg(v23, v20);
          }
          unint64_t v24 = v15 + v19 * (unint64_t)v16 + v22;
          *(_DWORD *)(a3 + 12 + 4 * (v17 >> 32)) = v24;
          unint64_t v15 = HIDWORD(v24);
          ++v14;
          v17 += (uint64_t)&_mh_execute_header;
          if (v12 == v14) {
            goto LABEL_30;
          }
        }
      }
    }
LABEL_37:
    JreThrowNullPointerException();
  }
  return result;
}

unint64_t sub_1001FEB68(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a3 < 1) {
    return 0;
  }
  if (!a2) {
LABEL_18:
  }
    JreThrowNullPointerException();
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  do
  {
    uint64_t v10 = *(int *)(a2 + 8);
    if (v8 >= v10) {
      IOSArray_throwOutOfBoundsWithMsg(v10, v8);
    }
    unsigned int v11 = *(_DWORD *)(a2 + 12 + 4 * v8);
    if (atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire))
    {
      if (!a1) {
        goto LABEL_18;
      }
    }
    else
    {
      objc_opt_class();
      if (!a1) {
        goto LABEL_18;
      }
    }
    uint64_t v12 = *(int *)(a1 + 8);
    if (v8 >= v12) {
      IOSArray_throwOutOfBoundsWithMsg(v12, v8);
    }
    unint64_t v13 = v9 + v11 * (unint64_t)a4;
    *(_DWORD *)(a1 + 12 + 4 * v8) = v13;
    unint64_t v9 = HIDWORD(v13);
    ++v8;
  }
  while (a3 != v8);
  return v9;
}

unint64_t JavaMathMultiplication_multiplyByIntWithIntArray_withInt_withInt_(uint64_t a1, int a2, unsigned int a3)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return sub_1001FEB68(a1, a1, a2, a3);
}

JavaMathBigInteger *JavaMathMultiplication_multiplyByPositiveIntWithJavaMathBigInteger_withInt_(uint64_t a1, unsigned int a2)
{
  if (atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_22;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_22;
    }
  }
  int v4 = *(_DWORD *)(a1 + 20);
  if (!v4)
  {
    if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    return (JavaMathBigInteger *)JavaMathBigInteger_ZERO_;
  }
  uint64_t v5 = *(int *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 8);
  if (v5 != 1)
  {
    uint64_t v10 = +[IOSIntArray arrayWithLength:(int)v5 + 1];
    int v11 = sub_1001FEB68((uint64_t)v10, v6, v5, a2);
    uint64_t size = v10->super.size_;
    if ((v5 & 0x80000000) != 0 || (int)v5 >= (int)size) {
      IOSArray_throwOutOfBoundsWithMsg(size, v5);
    }
    *(&v10->super.size_ + v5 + 1) = v11;
    unint64_t v9 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v4, (int)v5 + 1, v10);
    [(JavaMathBigInteger *)v9 cutOffLeadingZeroes];
    return v9;
  }
  if (!v6) {
LABEL_22:
  }
    JreThrowNullPointerException();
  uint64_t v7 = *(unsigned int *)(v6 + 8);
  if ((int)v7 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v7, 0);
  }
  unsigned int v8 = *(_DWORD *)(v6 + 12);
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!is_mul_ok(v8, a2))
  {
    unint64_t v15 = v8 * (unint64_t)a2;
    return new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v4, 2, +[IOSIntArray arrayWithInts:&v15 count:2]);
  }
  uint64_t v14 = new_JavaMathBigInteger_initWithInt_withInt_(v4, v8 * a2);
  return v14;
}

id JavaMathMultiplication_powWithJavaMathBigInteger_withInt_(JavaMathBigInteger *a1, int a2)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = (id)JavaMathBigInteger_ONE_;
  if (a2 >= 2)
  {
    while (1)
    {
      if (a2)
      {
        if (!v4) {
          break;
        }
        id v4 = [v4 multiplyWithJavaMathBigInteger:a1];
      }
      if (!a1) {
        break;
      }
      numberint Length = a1->numberLength_;
      if (numberLength == 1)
      {
        uint64_t v6 = [(JavaMathBigInteger *)a1 multiplyWithJavaMathBigInteger:a1];
      }
      else
      {
        uint64_t digits = (uint64_t)a1->digits_;
        unsigned int v8 = +[IOSIntArray arrayWithLength:(int)(2 * numberLength)];
        JavaMathMultiplication_squareWithIntArray_withInt_withIntArray_(digits, numberLength, (uint64_t)v8);
        uint64_t v6 = new_JavaMathBigInteger_initWithInt_withIntArray_(1, v8);
      }
      a1 = v6;
      BOOL v9 = a2 > 3;
      a2 = a2 >> 1;
      if (!v9) {
        goto LABEL_14;
      }
    }
LABEL_18:
    JreThrowNullPointerException();
  }
LABEL_14:
  if (!v4) {
    goto LABEL_18;
  }
  return [v4 multiplyWithJavaMathBigInteger:a1];
}

uint64_t JavaMathMultiplication_squareWithIntArray_withInt_withIntArray_(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0)
  {
    unsigned int v44 = a2;
    objc_opt_class();
    a2 = v44;
    uint64_t v4 = a1;
  }
  if ((int)a2 <= 0)
  {
    JavaMathBitLevel_shiftLeftOneBitWithIntArray_withIntArray_withInt_(a3, a3, 2 * a2);
    return a3;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v4 + 4;
  uint64_t v7 = 1;
  uint64_t v8 = 1;
  unint64_t v9 = a2;
  uint64_t v10 = -(uint64_t)a2;
  unint64_t v53 = a2;
  unsigned int v52 = a2;
  uint64_t v51 = v10;
  do
  {
    uint64_t v11 = v5 + 1;
    if (v5 + 1 < v9)
    {
      if (v4)
      {
        uint64_t v12 = 0;
        unint64_t v13 = 0;
        uint64_t v14 = v10 + v8;
        uint64_t v15 = v4 + 4 * v5;
        while (1)
        {
          uint64_t v16 = *(unsigned int *)(v4 + 8);
          if (v5 >= (int)v16) {
            IOSArray_throwOutOfBoundsWithMsg(v16, v5);
          }
          unsigned int v17 = *(_DWORD *)(v15 + 12);
          if (v8 + v12 >= (int)v16) {
            IOSArray_throwOutOfBoundsWithMsg(v16, (v8 + v12));
          }
          if (!a3) {
            break;
          }
          unsigned int v18 = *(_DWORD *)(v6 + 12 + 4 * v12);
          uint64_t v19 = v7 + v12;
          uint64_t v20 = *(unsigned int *)(a3 + 8);
          if (v7 + v12 < 0 || (int)v19 >= (int)v20) {
            IOSArray_throwOutOfBoundsWithMsg(v20, v7 + v12);
          }
          uint64_t v21 = *(unsigned int *)(a3 + 12 + 4 * (int)v19);
          if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0)
          {
            uint64_t v45 = v4;
            uint64_t v46 = v8;
            uint64_t v48 = v6;
            uint64_t v49 = v7;
            uint64_t v47 = v11;
            uint64_t v50 = v5;
            objc_opt_class();
            uint64_t v5 = v50;
            uint64_t v10 = v51;
            uint64_t v8 = v46;
            uint64_t v11 = v47;
            uint64_t v6 = v48;
            uint64_t v7 = v49;
            a2 = v52;
            unint64_t v9 = v53;
            uint64_t v4 = v45;
          }
          uint64_t v22 = *(unsigned int *)(a3 + 8);
          if ((v19 & 0x80000000) != 0 || (int)v19 >= (int)v22) {
            IOSArray_throwOutOfBoundsWithMsg(v22, v19);
          }
          unint64_t v23 = v13 + v18 * (unint64_t)v17 + v21;
          *(_DWORD *)(a3 + 12 + 4 * (int)v19) = v23;
          unint64_t v13 = HIDWORD(v23);
          ++v12;
          if (!(v14 + v12)) {
            goto LABEL_25;
          }
        }
      }
LABEL_52:
      JreThrowNullPointerException();
    }
    if (!a3) {
      goto LABEL_52;
    }
    LODWORD(v13) = 0;
LABEL_25:
    uint64_t v24 = *(unsigned int *)(a3 + 8);
    int v25 = v5 + a2;
    if ((int)(v5 + a2) < 0 || v25 >= (int)v24) {
      IOSArray_throwOutOfBoundsWithMsg(v24, v25);
    }
    *(_DWORD *)(a3 + 12 + 4 * (int)(v5 + a2)) = v13;
    ++v8;
    v7 += 2;
    v6 += 4;
    uint64_t v5 = v11;
  }
  while (v11 != v9);
  uint64_t v26 = v4;
  JavaMathBitLevel_shiftLeftOneBitWithIntArray_withIntArray_withInt_(a3, a3, 2 * a2);
  if (!v26) {
    goto LABEL_52;
  }
  uint64_t v27 = v26;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  unint64_t v30 = 0;
  unint64_t v31 = v53;
  do
  {
    uint64_t v32 = *(unsigned int *)(v27 + 8);
    if (v28 >= (int)v32) {
      IOSArray_throwOutOfBoundsWithMsg(v32, v28);
    }
    unsigned int v33 = *(_DWORD *)(v27 + 12 + 4 * v28);
    uint64_t v34 = *(unsigned int *)(a3 + 8);
    if ((v29 & 0x80000000) != 0 || (int)v29 >= (int)v34) {
      IOSArray_throwOutOfBoundsWithMsg(v34, v29);
    }
    uint64_t v35 = *(unsigned int *)(a3 + 12 + 4 * (int)v29);
    if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0)
    {
      objc_opt_class();
      unint64_t v31 = v53;
      uint64_t v27 = v26;
    }
    uint64_t v36 = *(unsigned int *)(a3 + 8);
    if ((v29 & 0x80000000) != 0 || (int)v29 >= (int)v36) {
      IOSArray_throwOutOfBoundsWithMsg(v36, v29);
    }
    unint64_t v37 = v30 + v33 * (unint64_t)v33 + v35;
    *(_DWORD *)(a3 + 12 + 4 * (int)v29) = v37;
    int v38 = v29 + 1;
    uint64_t v39 = (int)v29 + 1;
    uint64_t v40 = *(unsigned int *)(a3 + 8);
    if ((v29 & 0x80000000) != 0 || v38 >= (int)v40) {
      IOSArray_throwOutOfBoundsWithMsg(v40, v38);
    }
    if ((v29 & 0x80000000) != 0 || (int)v39 >= (int)v40) {
      IOSArray_throwOutOfBoundsWithMsg(v40, v39);
    }
    unint64_t v41 = HIDWORD(v37) + *(unsigned int *)(a3 + 12 + 4 * v39);
    *(_DWORD *)(a3 + 12 + 4 * v39) = v41;
    unint64_t v30 = HIDWORD(v41);
    ++v28;
    uint64_t v29 = (v29 + 2);
  }
  while (v31 != v28);
  return a3;
}

JavaMathBigInteger *JavaMathMultiplication_multiplyByTenPowWithJavaMathBigInteger_withLong_(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaMathMultiplication_tenPows_) {
    goto LABEL_14;
  }
  uint64_t v4 = *(int *)(JavaMathMultiplication_tenPows_ + 8);
  if (v4 > a2)
  {
    if ((a2 & 0x80000000) != 0 || (int)v4 <= (int)a2) {
      IOSArray_throwOutOfBoundsWithMsg(v4, (int)a2);
    }
    unsigned int v5 = *(_DWORD *)(JavaMathMultiplication_tenPows_ + 12 + 4 * (int)a2);
    return JavaMathMultiplication_multiplyByPositiveIntWithJavaMathBigInteger_withInt_((uint64_t)a1, v5);
  }
  if (!a1) {
LABEL_14:
  }
    JreThrowNullPointerException();
  id v7 = JavaMathMultiplication_powerOf10WithLong_(a2);
  return (JavaMathBigInteger *)[a1 multiplyWithJavaMathBigInteger:v7];
}

id JavaMathMultiplication_powerOf10WithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaMathMultiplication_bigTenPows_) {
    goto LABEL_45;
  }
  uint64_t v2 = *(int *)(JavaMathMultiplication_bigTenPows_ + 8);
  if (v2 > a1)
  {
    if ((a1 & 0x80000000) != 0 || (int)v2 <= (int)a1) {
      IOSArray_throwOutOfBoundsWithMsg(v2, a1);
    }
    return *(id *)(JavaMathMultiplication_bigTenPows_ + 24 + 8 * (int)a1);
  }
  if (a1 <= 50)
  {
    if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v4 = (void *)JavaMathBigInteger_TEN_;
    if (JavaMathBigInteger_TEN_)
    {
      return [v4 powWithInt:a1];
    }
    goto LABEL_45;
  }
  if ((unint64_t)a1 <= 0x3E8)
  {
    uint64_t v5 = JavaMathMultiplication_bigFivePows_;
    if (!JavaMathMultiplication_bigFivePows_) {
      goto LABEL_45;
    }
    goto LABEL_20;
  }
  uint64_t v5 = JavaMathMultiplication_bigFivePows_;
  if (!((unint64_t)a1 >> 31))
  {
    if (!JavaMathMultiplication_bigFivePows_) {
      goto LABEL_45;
    }
LABEL_20:
    uint64_t v6 = *(unsigned int *)(v5 + 8);
    if ((int)v6 <= 1) {
      IOSArray_throwOutOfBoundsWithMsg(v6, 1);
    }
    id v7 = *(void **)(v5 + 32);
    if (!v7) {
      goto LABEL_45;
    }
    id v8 = [v7 powWithInt:a1];
    if (!v8) {
      goto LABEL_45;
    }
    unint64_t v9 = a1;
    goto LABEL_42;
  }
  if (!JavaMathMultiplication_bigFivePows_) {
    goto LABEL_45;
  }
  uint64_t v10 = *(unsigned int *)(JavaMathMultiplication_bigFivePows_ + 8);
  if ((int)v10 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v10, 1);
  }
  uint64_t v11 = *(void **)(JavaMathMultiplication_bigFivePows_ + 32);
  if (!v11) {
    goto LABEL_45;
  }
  id v12 = [v11 powWithInt:0x7FFFFFFFLL];
  id v13 = v12;
  if ((unint64_t)a1 >= 0xFFFFFFFF)
  {
    uint64_t v14 = a1;
    id v15 = v12;
    while (v15)
    {
      id v15 = [v15 multiplyWithJavaMathBigInteger:v13];
      v14 -= 0x7FFFFFFFLL;
      if (v14 <= 4294967294) {
        goto LABEL_33;
      }
    }
    goto LABEL_45;
  }
  id v15 = v12;
LABEL_33:
  if (!v15) {
    goto LABEL_45;
  }
  uint64_t v16 = *(unsigned int *)(JavaMathMultiplication_bigFivePows_ + 8);
  if ((int)v16 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v16, 1);
  }
  unsigned int v17 = *(void **)(JavaMathMultiplication_bigFivePows_ + 32);
  if (!v17
    || (unint64_t v18 = a1 % 0x7FFFFFFFuLL,
        (id v19 = objc_msgSend(v15, "multiplyWithJavaMathBigInteger:", objc_msgSend(v17, "powWithInt:", v18))) == 0))
  {
LABEL_45:
    JreThrowNullPointerException();
  }
  id v8 = [v19 shiftLeftWithInt:0x7FFFFFFFLL];
  if ((unint64_t)a1 >= 0xFFFFFFFF)
  {
    while (v8)
    {
      id v8 = [v8 shiftLeftWithInt:0x7FFFFFFFLL];
      a1 -= 0x7FFFFFFFLL;
      if (a1 <= 4294967294) {
        goto LABEL_40;
      }
    }
    goto LABEL_45;
  }
LABEL_40:
  if (!v8) {
    goto LABEL_45;
  }
  unint64_t v9 = v18;
LABEL_42:
  return [v8 shiftLeftWithInt:v9];
}

JavaMathBigInteger *JavaMathMultiplication_multiplyByFivePowWithJavaMathBigInteger_withInt_(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaMathMultiplication_fivePows_) {
    goto LABEL_21;
  }
  uint64_t v4 = *(unsigned int *)(JavaMathMultiplication_fivePows_ + 8);
  if ((int)v4 > (int)a2)
  {
    if ((a2 & 0x80000000) != 0) {
      IOSArray_throwOutOfBoundsWithMsg(v4, a2);
    }
    unsigned int v5 = *(_DWORD *)(JavaMathMultiplication_fivePows_ + 12 + 4 * (int)a2);
    return JavaMathMultiplication_multiplyByPositiveIntWithJavaMathBigInteger_withInt_((uint64_t)a1, v5);
  }
  if (!JavaMathMultiplication_bigFivePows_) {
    goto LABEL_21;
  }
  uint64_t v7 = *(unsigned int *)(JavaMathMultiplication_bigFivePows_ + 8);
  if ((int)v7 > (int)a2)
  {
    if (a1)
    {
      if ((a2 & 0x80000000) != 0) {
        IOSArray_throwOutOfBoundsWithMsg(v7, a2);
      }
      id v8 = *(id *)(JavaMathMultiplication_bigFivePows_ + 24 + 8 * (int)a2);
      goto LABEL_18;
    }
LABEL_21:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_21;
  }
  if ((int)v7 <= 1) {
    IOSArray_throwOutOfBoundsWithMsg(v7, 1);
  }
  unint64_t v9 = *(void **)(JavaMathMultiplication_bigFivePows_ + 32);
  if (!v9) {
    goto LABEL_21;
  }
  id v8 = [v9 powWithInt:a2];
LABEL_18:
  return (JavaMathBigInteger *)[a1 multiplyWithJavaMathBigInteger:v8];
}

unint64_t JavaMathMultiplication_unsignedMultAddAddWithInt_withInt_withInt_withInt_(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)
{
  if ((atomic_load_explicit(JavaMathMultiplication__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return a3 + a2 * (unint64_t)a1 + a4;
}

JavaUtilZipDataFormatException *new_JavaUtilZipDataFormatException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaUtilZipDataFormatException alloc];
  JavaLangException_initWithNSString_(v2, a1);
  return v2;
}

id JavaUtilUnsafeArrayList_initWithIOSClass_withInt_(uint64_t a1, void *a2, int a3)
{
  JavaUtilAbstractList_init(a1, a2);
  uint64_t v6 = JavaLangReflectArray_newInstanceWithIOSClass_withInt_(a2, a3);
  objc_opt_class();
  if (v6 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  JreStrongAssign((id *)(a1 + 24), v6);
  return JreStrongAssign((id *)(a1 + 16), a2);
}

JavaUtilUnsafeArrayList *new_JavaUtilUnsafeArrayList_initWithIOSClass_withInt_(void *a1, int a2)
{
  uint64_t v4 = [JavaUtilUnsafeArrayList alloc];
  JavaUtilUnsafeArrayList_initWithIOSClass_withInt_((uint64_t)v4, a1, a2);
  return v4;
}

JavaSecurityAllPermission *new_JavaSecurityAllPermission_init()
{
  uint64_t v0 = [JavaSecurityAllPermission alloc];
  JavaSecurityPermission_initWithNSString_(v0, &stru_10048C1F8);
  return v0;
}

JavaUtilLoggingLevel *JavaUtilLoggingLevel_parseWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_28:
    uint64_t v22 = new_JavaLangNullPointerException_initWithNSString_(@"name == null");
    objc_exception_throw(v22);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_28;
  }
LABEL_3:
  uint64_t v2 = (void *)qword_100560E18;
  objc_sync_enter((id)qword_100560E18);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v3 = (void *)qword_100560E18;
  if (!qword_100560E18) {
LABEL_25:
  }
    JreThrowNullPointerException();
  id v4 = [(id)qword_100560E18 countByEnumeratingWithState:&v27 objects:v32 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v5) {
          objc_enumerationMutation(v3);
        }
        uint64_t v7 = *(void *)(*((void *)&v27 + 1) + 8 * i);
        if (!v7) {
          goto LABEL_25;
        }
        if (objc_msgSend(a1, "isEqual:", objc_msgSend(*(id *)(*((void *)&v27 + 1) + 8 * i), "getName")))goto LABEL_23; {
      }
        }
      id v4 = [v3 countByEnumeratingWithState:&v27 objects:v32 count:16];
    }
    while (v4);
  }
  objc_sync_exit(v2);
  int v15 = JavaLangInteger_parseIntWithNSString_(a1, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v2 = (void *)qword_100560E18;
  objc_sync_enter((id)qword_100560E18);
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v16 = (void *)qword_100560E18;
  id v17 = [(id)qword_100560E18 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v17)
  {
    uint64_t v18 = *(void *)v24;
LABEL_15:
    uint64_t v19 = 0;
    while (1)
    {
      if (*(void *)v24 != v18) {
        objc_enumerationMutation(v16);
      }
      uint64_t v7 = *(void *)(*((void *)&v23 + 1) + 8 * v19);
      if (!v7) {
        JreThrowNullPointerException();
      }
      if (v15 == *(_DWORD *)(v7 + 16)) {
        break;
      }
      if (v17 == (id)++v19)
      {
        id v17 = [v16 countByEnumeratingWithState:&v23 objects:v31 count:16];
        if (v17) {
          goto LABEL_15;
        }
        goto LABEL_22;
      }
    }
LABEL_23:
    objc_sync_exit(v2);
  }
  else
  {
LABEL_22:
    objc_sync_exit(v2);
    uint64_t v20 = [JavaUtilLoggingLevel alloc];
    JavaUtilLoggingLevel_initWithNSString_withInt_withNSString_((uint64_t)v20, a1, v15, 0);
    return v20;
  }
  return (JavaUtilLoggingLevel *)v7;
}

void sub_10020099C()
{
}

void sub_1002009B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaUtilLoggingLevel_initWithNSString_withInt_withNSString_(uint64_t a1, void *a2, int a3, __CFString *a4)
{
  if (!a2)
  {
    uint64_t v12 = new_JavaLangNullPointerException_initWithNSString_(@"name == null");
    objc_exception_throw(v12);
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = a3;
  JreStrongAssign((id *)(a1 + 24), a4);
  if (a4)
  {
    uint64_t Default = (JavaUtilLocale *)JavaUtilLocale_getDefault();
    SystemClassLoader = (__CFString *)JavaLangClassLoader_getSystemClassLoader();
    BundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader = JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_(a4, Default, SystemClassLoader);
    JreStrongAssign((id *)(a1 + 32), BundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader);
  }
  uint64_t v10 = (void *)qword_100560E18;
  objc_sync_enter((id)qword_100560E18);
  if (!qword_100560E18) {
    JreThrowNullPointerException();
  }
  [(id)qword_100560E18 addWithId:a1];
  return objc_sync_exit(v10);
}

void sub_100200CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100200DAC(void *a1)
{
}

void sub_1002010D8(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  CFStringRef v8 = JreStrcat("$$C", v1, v2, v3, v4, v5, v6, v7, @"Cannot parse name '");
  uint64_t v9 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v8);
  objc_exception_throw(v9);
}

uint64_t JavaSecurityBasicPermission_initWithNSString_withNSString_(uint64_t a1)
{
  return JavaSecurityPermission_initWithNSString_(a1, &stru_10048C1F8);
}

id sub_100201230(void *a1, uint64_t a2)
{
  uint64_t v4 = new_JavaLangStringBuffer_init();
  id v5 = [a1 formatWithId:a2 withJavaLangStringBuffer:v4 withJavaTextFieldPosition:new_JavaTextFieldPosition_initWithInt_(0)];
  if (!v5) {
    JreThrowNullPointerException();
  }
  return [v5 description];
}

BOOL JavaTextFormat_upToWithNSString_withJavaTextParsePosition_withJavaLangStringBuffer_withChar_(void *a1, void *a2, void *a3, int a4)
{
  if (!a2 || (id v8 = [a2 getIndex], !a1)) {
LABEL_18:
  }
    JreThrowNullPointerException();
  unint64_t v9 = (unint64_t)v8;
  id v10 = [a1 length];
  if ((int)v9 < (int)v10)
  {
    char v11 = 0;
    BOOL v12 = 0;
    BOOL v13 = 1;
    while (1)
    {
      id v14 = [a1 charAtWithInt:v9];
      BOOL v15 = v14 == 39;
      if (v14 == 39)
      {
        if (v12)
        {
          if (!a3) {
            goto LABEL_18;
          }
          [a3 appendWithChar:39];
        }
        v11 ^= 1u;
      }
      else
      {
        if (!((v14 != a4) | v11 & 1))
        {
          unint64_t v9 = (v9 + 1);
          goto LABEL_17;
        }
        if (!a3) {
          goto LABEL_18;
        }
        [a3 appendWithChar:v14];
      }
      unint64_t v9 = (v9 + 1);
      BOOL v13 = (int)v9 < (int)v10;
      BOOL v12 = v15;
      if (v10 == v9)
      {
        unint64_t v9 = (unint64_t)v10;
        goto LABEL_17;
      }
    }
  }
  BOOL v13 = 0;
LABEL_17:
  [a2 setIndexWithInt:v9];
  return v13;
}

uint64_t JavaTextFormat_upToWithQuotesWithNSString_withJavaTextParsePosition_withJavaLangStringBuffer_withChar_withChar_(void *a1, void *a2, void *a3, int a4, int a5)
{
  if (!a2 || (id v10 = [a2 getIndex], !a1)) {
LABEL_14:
  }
    JreThrowNullPointerException();
  unint64_t v11 = (unint64_t)v10;
  int v12 = [a1 length];
  if ((int)v11 >= v12)
  {
LABEL_12:
    id v17 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Unmatched braces in the pattern");
    objc_exception_throw(v17);
  }
  int v13 = 0;
  int v14 = 1;
  while (1)
  {
    id v15 = [a1 charAtWithInt:v11];
    v13 ^= v15 == 39;
    if ((v13 & 1) == 0) {
      break;
    }
LABEL_10:
    if (!a3) {
      goto LABEL_14;
    }
    unint64_t v11 = (v11 + 1);
    [a3 appendWithChar:v15];
    if (v12 == v11) {
      goto LABEL_12;
    }
  }
  int v16 = v14 - (v15 == a4);
  if (v16)
  {
    if (v15 == a5) {
      int v14 = v16 + 1;
    }
    else {
      v14 -= v15 == a4;
    }
    goto LABEL_10;
  }
  [a2 setIndexWithInt:(v11 + 1)];
  return 1;
}

uint64_t JavaTextFormat_class_()
{
  if (qword_100560E28 != -1) {
    dispatch_once(&qword_100560E28, &stru_100440D58);
  }
  return qword_100560E20;
}

void sub_10020165C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560E20 = IOSClass_fromClass(v1);
}

uint64_t JavaTextFormat_Field_class_()
{
  if (qword_100560E38 != -1) {
    dispatch_once(&qword_100560E38, &stru_100440E50);
  }
  return qword_100560E30;
}

void sub_100201708(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560E30 = IOSClass_fromClass(v1);
}

JavaLangInterruptedException *new_JavaLangInterruptedException_init()
{
  uint64_t v0 = [JavaLangInterruptedException alloc];
  JavaLangException_init(v0, v1);
  return v0;
}

id JavaUtilHashtable_init(uint64_t a1)
{
  JavaUtilDictionary_init();
  uint64_t v2 = (void *)qword_100560E40;
  objc_opt_class();
  if (v2 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  id result = JreStrongAssign((id *)(a1 + 8), v2);
  *(_DWORD *)(a1 + 24) = -1;
  return result;
}

IOSObjectArray *JavaUtilHashtable_initWithInt_(uint64_t a1, unsigned int a2)
{
  JavaUtilDictionary_init();
  if ((a2 & 0x80000000) != 0)
  {
    CFStringRef v14 = JreStrcat("$I", v4, v5, v6, v7, v8, v9, v10, @"Capacity: ");
    id v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
    objc_exception_throw(v15);
  }
  if (a2)
  {
    if (a2 >= 4)
    {
      int v11 = 0x40000000;
      if (a2 <= 0x40000000) {
        int v11 = JavaUtilCollections_roundUpToPowerOfTwoWithInt_(a2);
      }
    }
    else
    {
      int v11 = 4;
    }
    return sub_100201DD0(a1, v11);
  }
  else
  {
    int v12 = (void *)qword_100560E40;
    objc_opt_class();
    if (v12 && (objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    id result = (IOSObjectArray *)JreStrongAssign((id *)(a1 + 8), v12);
    *(_DWORD *)(a1 + 24) = -1;
  }
  return result;
}

uint64_t JavaUtilHashtable_initWithInt_withFloat_(uint64_t a1, unsigned int a2, float a3)
{
  JavaUtilHashtable_initWithInt_(a1, a2);
  if (a3 <= 0.0 || (uint64_t result = JavaLangFloat_isNaNWithFloat_(), result))
  {
    CFStringRef v12 = JreStrcat("$F", v4, v5, v6, v7, v8, v9, v10, @"Load factor: ");
    int v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
    objc_exception_throw(v13);
  }
  return result;
}

id JavaUtilHashtable_initWithJavaUtilMap_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v4 = [a2 size];
  if ((atomic_load_explicit(JavaUtilHashtable__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((v4 + (v4 >> 1)) >= 0x40000000) {
    unsigned int v5 = 0x40000000;
  }
  else {
    unsigned int v5 = v4 + (v4 >> 1);
  }
  JavaUtilHashtable_initWithInt_(a1, v5);
  return sub_100201AEC(a1, a2);
}

id sub_100201AEC(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 8) == qword_100560E40) {
    -[JavaUtilHashtable doubleCapacity]_0(a1);
  }
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  if (!a2 || (id v4 = objc_msgSend(a2, "entrySet", (void)v11)) == 0) {
LABEL_14:
  }
    JreThrowNullPointerException();
  unsigned int v5 = v4;
  id result = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (result)
  {
    id v7 = result;
    uint64_t v8 = *(void *)v12;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v9);
        if (!v10) {
          goto LABEL_14;
        }
        sub_10020267C(a1, [*(id *)(*((void *)&v11 + 1) + 8 * (void)v9) getKey], objc_msgSend(v10, "getValue"));
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id result = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      id v7 = result;
    }
    while (result);
  }
  return result;
}

void sub_100201DB0(_Unwind_Exception *a1)
{
  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

IOSObjectArray *sub_100201DD0(uint64_t a1, int a2)
{
  uint64_t v4 = a2;
  if (qword_100560E58 != -1) {
    dispatch_once(&qword_100560E58, &stru_100441BF8);
  }
  unsigned int v5 = +[IOSObjectArray arrayWithLength:v4 type:qword_100560E50];
  objc_opt_class();
  if (v5 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  JreStrongAssign((id *)(a1 + 8), v5);
  *(_DWORD *)(a1 + 24) = (a2 >> 1) + (a2 >> 2);
  return v5;
}

void sub_100202010(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilHashtable_HashtableEntry *sub_1002025F8(void *a1, void *a2, int a3, void *a4)
{
  uint64_t v8 = [JavaUtilHashtable_HashtableEntry alloc];
  JreStrongAssign(&v8->key_, a1);
  JreStrongAssign(&v8->value_, a2);
  v8->hash__ = a3;
  JreStrongAssign((id *)&v8->next_, a4);
  return v8;
}

id sub_10020267C(uint64_t a1, void *a2, void *a3)
{
  if (!a2)
  {
    CFStringRef v18 = @"key == null";
    goto LABEL_21;
  }
  if (!a3)
  {
    CFStringRef v18 = @"value == null";
LABEL_21:
    uint64_t v19 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v18);
    objc_exception_throw(v19);
  }
  int v7 = JavaUtilCollections_secondaryHashWithId_(a2);
  uint64_t v8 = *(void *)(a1 + 8);
  if (!v8) {
    JreThrowNullPointerException();
  }
  int v9 = v7;
  uint64_t v10 = *(unsigned int *)(v8 + 8);
  int v11 = (v10 - 1) & v9;
  uint64_t v12 = v11;
  if (v11 < 0 != v6 || v11 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v11);
  }
  long long v14 = *(void **)(v8 + 24 + 8 * v11);
  if (v14)
  {
    uint64_t v15 = *(void *)(v8 + 24 + 8 * v11);
    while (*(_DWORD *)(v15 + 24) != v9 || ![a2 isEqual:*(void *)(v15 + 8)])
    {
      uint64_t v15 = *(void *)(v15 + 32);
      if (!v15) {
        goto LABEL_14;
      }
    }
    return JreStrongAssign((id *)(v15 + 16), a3);
  }
  else
  {
LABEL_14:
    int v16 = sub_1002025F8(a2, a3, v9, v14);
    id result = IOSObjectArray_SetAndConsume(v8, v12, v16);
    ++*(_DWORD *)(a1 + 16);
  }
  return result;
}

void sub_100202934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100202954(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(JavaUtilHashtable__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a2 + (a2 >> 1)) >= 0x40000000) {
    int v4 = 0x40000000;
  }
  else {
    int v4 = a2 + (a2 >> 1);
  }
  uint64_t result = JavaUtilCollections_roundUpToPowerOfTwoWithInt_(v4);
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
LABEL_27:
  }
    JreThrowNullPointerException();
  int v7 = result;
  uint64_t v17 = *(unsigned int *)(v6 + 8);
  if ((int)result > (int)v17)
  {
    [(id)a1 rehash];
    if (v7 == 2 * v17)
    {
      return (uint64_t)-[JavaUtilHashtable doubleCapacity]_0(a1);
    }
    else
    {
      uint64_t result = (uint64_t)sub_100201DD0(a1, v7);
      if (*(_DWORD *)(a1 + 16) && (int)v17 >= 1)
      {
        uint64_t v8 = result;
        uint64_t v9 = 0;
        uint64_t v10 = v7 - 1;
        uint64_t v16 = v6;
        do
        {
          uint64_t result = *(int *)(v6 + 8);
          if (v9 >= result) {
            IOSArray_throwOutOfBoundsWithMsg(result, v9);
          }
          uint64_t v11 = *(void *)(v6 + 24 + 8 * v9);
          if (v11)
          {
            if (!v8) {
              goto LABEL_27;
            }
            do
            {
              uint64_t v12 = *(void *)(v11 + 32);
              unint64_t v13 = *(int *)(v11 + 24) & (unint64_t)v10;
              uint64_t v14 = *(unsigned int *)(v8 + 8);
              if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v14) {
                IOSArray_throwOutOfBoundsWithMsg(v14, *(int *)(v11 + 24) & (unint64_t)v10);
              }
              uint64_t v15 = *(void **)(v8 + 24 + 8 * v13);
              IOSObjectArray_Set(v8, *(int *)(v11 + 24) & (unint64_t)v10, (void *)v11);
              uint64_t result = (uint64_t)JreStrongAssign((id *)(v11 + 32), v15);
              uint64_t v11 = v12;
            }
            while (v12);
          }
          ++v9;
          uint64_t v6 = v16;
        }
        while (v9 != v17);
      }
    }
  }
  return result;
}

void sub_100202CA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100202FDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100202FFC(void *a1, void *a2, uint64_t a3)
{
  objc_sync_enter(a1);
  int v7 = JavaUtilCollections_secondaryHashWithId_(a2);
  uint64_t v8 = a1[1];
  if (!v8) {
    JreThrowNullPointerException();
  }
  int v9 = v7;
  uint64_t v10 = *(unsigned int *)(v8 + 8);
  int v11 = (v10 - 1) & v9;
  if (v11 < 0 != v6 || v11 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v11);
  }
  uint64_t v13 = *(void *)(v8 + 24 + 8 * v11);
  if (v13)
  {
    while (1)
    {
      if (*(_DWORD *)(v13 + 24) == v9)
      {
        uint64_t v14 = *(void **)(v13 + 8);
        if (!v14) {
          goto LABEL_16;
        }
        if ([v14 isEqual:a2]) {
          break;
        }
      }
      uint64_t v13 = *(void *)(v13 + 32);
      if (!v13) {
        goto LABEL_12;
      }
    }
    uint64_t v16 = *(void **)(v13 + 16);
    if (!v16) {
LABEL_16:
    }
      JreThrowNullPointerException();
    id v15 = [v16 isEqual:a3];
  }
  else
  {
LABEL_12:
    id v15 = 0;
  }
  objc_sync_exit(a1);
  return v15;
}

void sub_1002030FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100203128(uint64_t a1, void *a2, uint64_t a3)
{
  objc_sync_enter((id)a1);
  int v7 = JavaUtilCollections_secondaryHashWithId_(a2);
  uint64_t v9 = *(void *)(a1 + 8);
  if (!v9) {
    JreThrowNullPointerException();
  }
  int v10 = v7;
  uint64_t v11 = *(unsigned int *)(v9 + 8);
  int v12 = (v11 - 1) & v10;
  uint64_t v13 = v12;
  if (v12 < 0 != v6 || v12 >= (int)v11) {
    IOSArray_throwOutOfBoundsWithMsg(v11, v12);
  }
  uint64_t v15 = *(void *)(v9 + 24 + 8 * v12);
  if (v15)
  {
    uint64_t v16 = 0;
    while (1)
    {
      uint64_t v17 = v15;
      if (*(_DWORD *)(v15 + 24) == v10)
      {
        CFStringRef v18 = *(void **)(v15 + 8);
        if (!v18) {
          goto LABEL_21;
        }
        if ([v18 isEqual:a2]) {
          break;
        }
      }
      uint64_t v15 = *(void *)(v17 + 32);
      uint64_t v16 = v17;
      if (!v15) {
        goto LABEL_13;
      }
    }
    uint64_t v21 = *(void **)(v17 + 16);
    if (!v21) {
LABEL_21:
    }
      JreThrowNullPointerException();
    if ([v21 isEqual:a3])
    {
      if (v16) {
        JreStrongAssign((id *)(v16 + 32), *(void **)(v17 + 32));
      }
      else {
        IOSObjectArray_Set(v9, v13, *(void **)(v17 + 32));
      }
      ++*(_DWORD *)(a1 + 20);
      --*(_DWORD *)(a1 + 16);
      LODWORD(v15) = 1;
      int v8 = 1;
    }
    else
    {
      int v8 = 0;
      LODWORD(v15) = 1;
    }
  }
LABEL_13:
  uint64_t v19 = v15 & v8;
  objc_sync_exit((id)a1);
  return v19;
}

void sub_10020329C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100203360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002034EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100203678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020389C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilHashtable *new_JavaUtilHashtable_init()
{
  uint64_t v0 = [JavaUtilHashtable alloc];
  JavaUtilHashtable_init((uint64_t)v0);
  return v0;
}

void sub_100203E30(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560E50 = IOSClass_fromClass(v1);
}

id sub_100203E88(uint64_t a1, uint64_t a2)
{
  JreStrongAssign((id *)(a1 + 8), (void *)a2);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4) {
    JreThrowNullPointerException();
  }
  int v5 = *(_DWORD *)(a1 + 16);
  char v6 = (unsigned int *)(v4 + 8);
  if (v5 >= *(_DWORD *)(v4 + 8))
  {
LABEL_9:
    int v8 = 0;
  }
  else
  {
    while (1)
    {
      *(_DWORD *)(a1 + 16) = v5 + 1;
      uint64_t v7 = *v6;
      if (v5 < 0 || v5 >= (int)v7) {
        IOSArray_throwOutOfBoundsWithMsg(v7, v5);
      }
      int v8 = *(void **)(v4 + 24 + 8 * v5);
      if (v8) {
        break;
      }
      int v5 = *(_DWORD *)(a1 + 16);
      char v6 = (unsigned int *)(v4 + 8);
      if (v5 >= *(_DWORD *)(v4 + 8)) {
        goto LABEL_9;
      }
    }
  }
  return JreStrongAssign((id *)(a1 + 24), v8);
}

void sub_1002045D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020469C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020472C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002047BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020484C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002048CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020494C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002049CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100204A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100204CB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100204D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100204DB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100204E48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002051D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100205268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002052F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100205388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100205434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002054B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100205544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaLangLong_compareWithLong_withLong_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 < a2) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a1 != a2;
  }
}

void sub_1002057B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  CFStringRef v8 = JreStrcat("$$C", a2, a3, a4, a5, a6, a7, a8, @"Invalid long: \"");
  uint64_t v9 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v8);
  objc_exception_throw(v9);
}

double JavaLangLong_decodeWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_26:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_26;
  }
LABEL_3:
  unsigned int v9 = [a1 length];
  if (!v9) {
    goto LABEL_27;
  }
  unsigned int v10 = [a1 charAtWithInt:0];
  unsigned int v11 = v10;
  if (v10 == 45 || v10 == 43)
  {
    if (v9 != 1)
    {
      uint64_t v12 = 1;
      unsigned int v10 = [a1 charAtWithInt:1];
      goto LABEL_9;
    }
LABEL_27:
    sub_1002057B4((uint64_t)a1, v2, v3, v4, v5, v6, v7, v8);
  }
  uint64_t v12 = 0;
LABEL_9:
  if (v10 == 35)
  {
    uint64_t v12 = (v12 + 1);
    int v14 = 16;
  }
  else if (v10 == 48)
  {
    if (v12 + 1 == v9)
    {
      int64_t v13 = 0;
      goto LABEL_22;
    }
    unsigned int v15 = [a1 charAtWithInt:(v12 + 1)];
    if ((v15 & 0xFFFFFFDF) == 0x58) {
      uint64_t v12 = v12 | 2;
    }
    else {
      uint64_t v12 = (v12 + 1);
    }
    if ((v15 & 0xFFFFFFDF) == 0x58) {
      int v14 = 16;
    }
    else {
      int v14 = 8;
    }
  }
  else
  {
    int v14 = 10;
  }
  int64_t v13 = sub_100205DA4(a1, v12, v14, v11 == 45);
LABEL_22:
  JavaLangLong_valueOfWithLong_(v13);
  return result;
}

void JavaLangLong_getLongWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire))
  {
    if (!a1) {
      return;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      return;
    }
  }
  if ([a1 length])
  {
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)a1);
    if (PropertyWithNSString) {
      JavaLangLong_decodeWithNSString_(PropertyWithNSString);
    }
  }
}

void JavaLangLong_getLongWithNSString_withLong_(void *a1, int64_t a2)
{
  if (atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_7;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_7;
    }
  }
  if ([a1 length])
  {
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)a1);
    if (PropertyWithNSString)
    {
      JavaLangLong_decodeWithNSString_(PropertyWithNSString);
      return;
    }
  }
LABEL_7:
  JavaLangLong_valueOfWithLong_(a2);
}

uint64_t JavaLangLong_getLongWithNSString_withJavaLangLong_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire))
  {
    if (!a1) {
      return a2;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      return a2;
    }
  }
  if ([a1 length])
  {
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)a1);
    if (PropertyWithNSString)
    {
      JavaLangLong_decodeWithNSString_(PropertyWithNSString);
      return v5;
    }
  }
  return a2;
}

uint64_t JavaLangLong_parseLongWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangLong_parseLongWithNSString_withInt_(a1, 10, a3, a4, a5, a6, a7, a8);
}

uint64_t JavaLangLong_parseLongWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((v8 - 37) <= 0xFFFFFFDC)
  {
    CFStringRef v15 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Invalid radix: ");
    uint64_t v16 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v15);
    objc_exception_throw(v16);
  }
  if (!a1
    || [a1 isEmpty]
    || ((unsigned int v10 = [a1 charAtWithInt:0], v11 = v10, v10 != 45)
      ? (BOOL v12 = v10 == 43)
      : (BOOL v12 = 1),
        !v12 ? (uint64_t v13 = 0) : (uint64_t v13 = 1),
        v13 == [a1 length]))
  {
    sub_1002057B4((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return sub_100205DA4(a1, v13, v8, v11 == 45);
}

uint64_t sub_100205DA4(void *a1, uint64_t a2, int a3, char a4)
{
  if (atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_15:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_15;
  }
LABEL_3:
  int v8 = [a1 length];
  uint64_t v16 = 0;
  if ((int)a2 <= v8) {
    int v17 = v8;
  }
  else {
    int v17 = a2;
  }
  while (v17 != a2)
  {
    int v18 = JavaLangCharacter_digitWithChar_withInt_((UChar32)[a1 charAtWithInt:a2], a3);
    if (v18 != -1 && (uint64_t)0x8000000000000000 / a3 <= v16)
    {
      a2 = (a2 + 1);
      BOOL v19 = v16 * a3 - v18 <= v16;
      uint64_t v16 = v16 * a3 - v18;
      if (v19) {
        continue;
      }
    }
    goto LABEL_16;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = -v16;
    if (v16 < 0) {
LABEL_16:
    }
      sub_1002057B4((uint64_t)a1, v9, v10, v11, v12, v13, v14, v15);
  }
  return v16;
}

uint64_t JavaLangLong_parsePositiveLongWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangLong_parsePositiveLongWithNSString_withInt_(a1, 10, a3, a4, a5, a6, a7, a8);
}

uint64_t JavaLangLong_parsePositiveLongWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((v8 - 37) <= 0xFFFFFFDC)
  {
    CFStringRef v11 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Invalid radix: ");
    uint64_t v12 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v11);
    objc_exception_throw(v12);
  }
  if (!a1 || ![a1 length]) {
    sub_1002057B4((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return sub_100205DA4(a1, 0, v8, 0);
}

NSString *JavaLangLong_toBinaryStringWithLong_(unint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_longToBinaryStringWithLong_(a1);
}

NSString *JavaLangLong_toHexStringWithLong_(unint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_longToHexStringWithLong_(a1);
}

NSString *JavaLangLong_toOctalStringWithLong_(unint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_longToOctalStringWithLong_(a1);
}

CFStringRef JavaLangLong_toStringWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_longToStringWithLong_(a1);
}

CFStringRef JavaLangLong_toStringWithLong_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_longToStringWithLong_withInt_(a1, a2);
}

JavaLangLong *JavaLangLong_valueOfWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int64_t v9 = JavaLangLong_parseLongWithNSString_(a1, a2, a3, a4, a5, a6, a7, a8);
  return JavaLangLong_valueOfWithLong_(v9);
}

JavaLangLong *JavaLangLong_valueOfWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int64_t v10 = JavaLangLong_parseLongWithNSString_withInt_(a1, a2, a3, a4, a5, a6, a7, a8);
  return JavaLangLong_valueOfWithLong_(v10);
}

unint64_t JavaLangLong_highestOneBitWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = a1 | (a1 >> 1) | ((a1 | (a1 >> 1)) >> 2);
  uint64_t v3 = v2 | (v2 >> 4) | ((v2 | (v2 >> 4)) >> 8);
  unint64_t v4 = v3 | (v3 >> 16) | ((v3 | (v3 >> 16)) >> 32);
  return v4 - (v4 >> 1);
}

uint64_t JavaLangLong_numberOfLeadingZerosWithLong_(unint64_t a1)
{
  if (atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire))
  {
    if ((a1 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
    return 0;
  }
  objc_opt_class();
  if ((a1 & 0x8000000000000000) != 0) {
    return 0;
  }
LABEL_3:
  if (!a1) {
    return 64;
  }
  unint64_t v2 = HIDWORD(a1);
  if (HIDWORD(a1))
  {
    int v3 = 1;
  }
  else
  {
    LODWORD(v2) = a1;
    int v3 = 33;
  }
  if (v2 < 0x10000)
  {
    LODWORD(v2) = v2 << 16;
    v3 |= 0x10u;
  }
  unsigned int v4 = BYTE3(v2);
  if (!BYTE3(v2)) {
    LODWORD(v2) = v2 << 8;
  }
  if (!v4) {
    v3 |= 8u;
  }
  unsigned int v5 = v2 >> 28;
  if (!(v2 >> 28)) {
    LODWORD(v2) = 16 * v2;
  }
  if (!v5) {
    v3 |= 4u;
  }
  unsigned int v6 = v2 >> 30;
  if (!(v2 >> 30)) {
    LODWORD(v2) = 4 * v2;
  }
  if (!v6) {
    v3 += 2;
  }
  return (v3 + ((int)v2 >> 31));
}

uint64_t JavaLangLong_numberOfTrailingZerosWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
    return JavaLangInteger_numberOfTrailingZerosWithInt_(HIDWORD(a1)) + 32;
  }
  if (!a1) {
    return JavaLangInteger_numberOfTrailingZerosWithInt_(HIDWORD(a1)) + 32;
  }
LABEL_3:
  return JavaLangInteger_numberOfTrailingZerosWithInt_(a1);
}

uint64_t JavaLangLong_bitCountWithLong_(unint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = (((a1 - ((a1 >> 1) & 0x5555555555555555)) >> 2) & 0x3333333333333333)
     + ((a1 - ((a1 >> 1) & 0x5555555555555555)) & 0x3333333333333333);
  LODWORD(v2) = (((HIDWORD(v2) + v2) >> 4) & 0xF0F0F0F)
              + ((HIDWORD(v2) + v2) & 0xF0F0F0F)
              + (((((HIDWORD(v2) + v2) >> 4) & 0xF0F0F0F) + ((HIDWORD(v2) + v2) & 0xF0F0F0F)) >> 8);
  return (v2 + WORD1(v2)) & 0x7F;
}

unint64_t JavaLangLong_reverseBytesWithLong_(unint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return bswap64(a1);
}

uint64_t JavaLangLong_signumWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 < 0) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a1 != 0;
  }
}

JavaLangLong *JavaLangLong_valueOfWithLong_(int64_t a1)
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 == (char)a1)
  {
    if (!qword_100560E60) {
      JreThrowNullPointerException();
    }
    uint64_t v4 = a1 + 128;
    uint64_t v5 = *(unsigned int *)(qword_100560E60 + 8);
    if ((int)v5 <= (int)v4) {
      IOSArray_throwOutOfBoundsWithMsg(v5, v4);
    }
    return *(JavaLangLong **)(qword_100560E60 + 24 + 8 * v4);
  }
  else
  {
    unint64_t v2 = [JavaLangLong alloc];
    v2->value_ = a1;
    return v2;
  }
}

uint64_t JavaLangLong_class_()
{
  if ((atomic_load_explicit(JavaLangLong__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560E70 != -1) {
    dispatch_once(&qword_100560E70, &stru_100443590);
  }
  return qword_100560E68;
}

void sub_100206954(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560E68 = IOSClass_fromClass(v1);
}

JavaNetInetUnixAddress *sockaddrToInetAddress(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = *(unsigned __int8 *)(a1 + 1);
  if (v4 == 1)
  {
    uint64_t v5 = a1 + 2;
    int v7 = strlen((const char *)(a1 + 2));
    unsigned int v8 = 0;
    int v9 = 0;
    uint64_t v10 = v7;
    if (!a2) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v4 == 2)
  {
    int v9 = 0;
    uint64_t v5 = a1 + 4;
    unsigned int v8 = bswap32(*(unsigned __int16 *)(a1 + 2)) >> 16;
    uint64_t v10 = 4;
    if (!a2) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v4 != 30) {
    objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:+[NSString stringWithFormat:@"sockaddrToInetAddress unsupported ss_family: %i", v4]]);
  }
  uint64_t v5 = a1 + 8;
  if (!*(_DWORD *)(a1 + 8) && !*(_DWORD *)(a1 + 12) && *(_DWORD *)(a1 + 16) == -65536)
  {
    memset((char *)&v13[1] + 12, 0, 100);
    v13[0] = *(_OWORD *)a1;
    *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)(a1 + 12);
    BYTE1(v13[0]) = 2;
    WORD1(v13[0]) = *(_WORD *)(a1 + 2);
    DWORD1(v13[0]) = *(_DWORD *)(a1 + 20);
    return (JavaNetInetUnixAddress *)sockaddrToInetAddress(v13, a2);
  }
  unsigned int v8 = bswap32(*(unsigned __int16 *)(a1 + 2)) >> 16;
  int v9 = *(_DWORD *)(a1 + 24);
  uint64_t v10 = 16;
  if (a2) {
LABEL_11:
  }
    *a2 = v8;
LABEL_12:
  CFStringRef v11 = +[IOSByteArray arrayWithBytes:v5 count:v10];
  if (*(unsigned char *)(a1 + 1) == 1)
  {
    uint64_t v12 = [[JavaNetInetUnixAddress alloc] initWithByteArray:v11];
    return v12;
  }
  else
  {
    return (JavaNetInetUnixAddress *)JavaNetInetAddress_getByAddressWithNSString_withByteArray_withInt_(0, v11, v9);
  }
}

id sub_100206BC0(id *a1, unsigned int a2, uint64_t a3, int *a4, int a5)
{
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *a4 = 0;
  if (!a1) {
    JreThrowNullPointerException();
  }
  id result = [a1 getFamily];
  *(unsigned char *)(a3 + 1) = (_BYTE)result;
  if (result <= 1u)
  {
    if (!(_BYTE)result)
    {
      int v12 = 1;
      goto LABEL_19;
    }
    if (result == 1)
    {
      if (*((_DWORD *)a1[1] + 2) < 0x68u)
      {
        *(_OWORD *)(a3 + 2) = 0u;
        uint64_t v11 = a3 + 2;
        *(void *)(v11 + 96) = 0;
        *(_OWORD *)(v11 + 64) = 0u;
        *(_OWORD *)(v11 + 80) = 0u;
        *(_OWORD *)(v11 + 32) = 0u;
        *(_OWORD *)(v11 + 48) = 0u;
        *(_OWORD *)(v11 + 16) = 0u;
        id result = objc_msgSend(a1[1], "getBytes:length:", v11);
        int v12 = 104;
        goto LABEL_19;
      }
      uint64_t v13 = +[NSString stringWithFormat:@"inetAddressToSockaddr path too long for AF_UNIX: %d", *((unsigned int *)a1[1] + 2)];
LABEL_23:
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:v13]);
    }
LABEL_22:
    uint64_t v13 = +[NSString stringWithFormat:@"inetAddressToSockaddr bad family: %i", result];
    goto LABEL_23;
  }
  if (result != 2 && result != 30) {
    goto LABEL_22;
  }
  *(_WORD *)(a3 + 2) = bswap32(a2) >> 16;
  if (result == 30)
  {
    [a1[1] getBytes:a3 + 8 length:16];
    id result = [a1 getScopeId];
    *(_DWORD *)(a3 + 24) = result;
  }
  else
  {
    if (!a5)
    {
      id result = [a1[1] getBytes:a3 + 4 length:4];
      int v12 = 16;
      goto LABEL_19;
    }
    *(unsigned char *)(a3 + 1) = 30;
    id result = [a1[1] getBytes:a3 + 20 length:4];
    if (*(_DWORD *)(a3 + 8) || *(_DWORD *)(a3 + 12) || *(void *)(a3 + 16)) {
      *(_WORD *)(a3 + 18) = -1;
    }
  }
  int v12 = 28;
LABEL_19:
  *a4 = v12;
  return result;
}

const char *absolutePath(void *a1)
{
  id v1 = a1;
  if (![a1 length]) {
    return "";
  }
  if ([v1 characterAtIndex:0] != 47)
  {
    unint64_t v2 = [[JavaIoFile alloc] initWithNSString:v1];
    id v1 = [(JavaIoFile *)v2 getAbsolutePath];
  }
  return (const char *)[v1 fileSystemRepresentation];
}

uint64_t sub_100206E80(void *a1, uint64_t a2)
{
  if (a2 == -1)
  {
    uint64_t v4 = __error();
    uint64_t v5 = new_LibcoreIoErrnoException_initWithNSString_withInt_(a1, *v4);
    objc_exception_throw(v5);
  }
  return a2;
}

BOOL sub_100207038(int a1, uint64_t a2, uint64_t a3)
{
  BOOL v3 = 1;
  if (a1 != -1)
  {
    if (a2)
    {
      int v8 = 0;
      uint64_t v5 = sockaddrToInetAddress(a3, (unsigned int *)&v8);
      BOOL v3 = v5 != 0;
      if (v5)
      {
        unsigned int v6 = v5;
        sub_10020B3E4(a2, (uint64_t)v6, v8);
      }
    }
  }
  return v3;
}

LibcoreIoStructStat *sub_100207A80(int *a1)
{
  id v1 = [[LibcoreIoStructStat alloc] initWithLong:*a1 withLong:*((void *)a1 + 1) withInt:*((unsigned __int16 *)a1 + 2) withLong:*((unsigned __int16 *)a1 + 3) withInt:a1[4] withInt:a1[5] withLong:a1[6] withLong:*((void *)a1 + 12) withLong:*((void *)a1 + 4) withLong:*((void *)a1 + 6) withLong:*((void *)a1 + 8) withLong:a1[28] withLong:*((void *)a1 + 13)];
  return v1;
}

BOOL sub_10020868C(void *a1, uint64_t a2)
{
  if (a1)
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    strncpy((char *)a2, (const char *)[a1 UTF8String], 0x10uLL);
    *(unsigned char *)(a2 + 15) = 0;
  }
  return a1 != 0;
}

LibcoreIoStructStat *sub_100208874(LibcoreIoStructStat *result, char a2)
{
  if (result)
  {
    BOOL v3 = absolutePath(result);
    memset(&v7, 0, sizeof(v7));
    if (a2)
    {
      uint64_t v4 = @"lstat";
      while (lstat(v3, &v7) == -1)
      {
        if (*__error() != 4) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      uint64_t v4 = @"stat";
      while (stat(v3, &v7) == -1)
      {
        if (*__error() != 4)
        {
LABEL_10:
          uint64_t v5 = __error();
          unsigned int v6 = new_LibcoreIoErrnoException_initWithNSString_withInt_(v4, *v5);
          objc_exception_throw(v6);
        }
      }
    }
    return sub_100207A80(&v7.st_dev);
  }
  return result;
}

uint64_t sub_10020910C(void *a1, uint64_t a2, int a3, int a4, off_t a5)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
    if ((int)v10 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v10, 0);
    }
    uint64_t v11 = a2 + 12;
    if (a2 == -12) {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v11 = *(void *)(a2 + 32);
    if (!v11) {
      return 0xFFFFFFFFLL;
    }
  }
  size_t v12 = a4;
  uint64_t v13 = (void *)(v11 + a3);
  do
    ssize_t v14 = pread((int)[a1 getInt$], v13, v12, a5);
  while (v14 == -1 && *__error() == 4);
  sub_100206E80(@"pread", v14);
  return v14;
}

uint64_t sub_100209328(void *a1, uint64_t a2, int a3, int a4, off_t a5)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
    if ((int)v10 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v10, 0);
    }
    uint64_t v11 = a2 + 12;
    if (a2 == -12) {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v11 = *(void *)(a2 + 32);
    if (!v11) {
      return 0xFFFFFFFFLL;
    }
  }
  if (a5 + a4 < 0)
  {
    uint64_t v15 = new_LibcoreIoErrnoException_initWithNSString_withInt_(@"pwrite", 0x22u);
    objc_exception_throw(v15);
  }
  size_t v12 = (const void *)(v11 + a3);
  do
    ssize_t v13 = pwrite((int)[a1 getInt$], v12, a4, a5);
  while (v13 == -1 && *__error() == 4);
  sub_100206E80(@"pwrite", v13);
  return v13;
}

uint64_t sub_100209554(void *a1, uint64_t a2, int a3, int a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v8 = *(unsigned int *)(a2 + 8);
    if ((int)v8 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v8, 0);
    }
    uint64_t v9 = a2 + 12;
    if (a2 == -12) {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v9 = *(void *)(a2 + 32);
    if (!v9) {
      return 0xFFFFFFFFLL;
    }
  }
  size_t v10 = a4;
  uint64_t v11 = (void *)(v9 + a3);
  do
    ssize_t v12 = read((int)[a1 getInt$], v11, v10);
  while (v12 == -1 && *__error() == 4);
  sub_100206E80(@"read", v12);
  return v12;
}

uint64_t sub_100209A3C(void *a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v12 = *(unsigned int *)(a2 + 8);
    if ((int)v12 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v12, 0);
    }
    uint64_t v13 = a2 + 12;
    if (a2 == -12) {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13) {
      return 0xFFFFFFFFLL;
    }
  }
  int v25 = 128;
  memset(v26, 0, 64);
  if (a6) {
    ssize_t v14 = (sockaddr *)v26;
  }
  else {
    ssize_t v14 = 0;
  }
  if (a6) {
    uint64_t v15 = (socklen_t *)&v25;
  }
  else {
    uint64_t v15 = 0;
  }
  memset(&v26[4], 0, 64);
  uint64_t v16 = (void *)(v13 + a3);
  while (1)
  {
    id v17 = [a1 getInt$];
    int v18 = (int)v17;
    LibcoreIoAsynchronousCloseMonitor_newAsynchronousSocketCloseMonitorWithInt_((uint64_t)v17);
    ssize_t v19 = recvfrom(v18, v16, a4, a5, v14, v15);
    if (v19 != -1) {
      break;
    }
    if ([a1 getInt$] == -1)
    {
      uint64_t v22 = [[JavaNetSocketException alloc] initWithNSString:@"Socket closed"];
LABEL_25:
      objc_exception_throw(v22);
    }
    if (*__error() != 4)
    {
      uint64_t v20 = +[NSString stringWithFormat:@"%s", "recvfrom"];
      uint64_t v21 = __error();
      uint64_t v22 = (JavaNetSocketException *)new_LibcoreIoErrnoException_initWithNSString_withInt_(v20, *v21);
      goto LABEL_25;
    }
  }
  ssize_t v23 = v19;
  sub_100207038(v19, a6, (uint64_t)v26);
  return v23;
}

ssize_t sub_100209F64(void *a1, uint64_t a2, int a3, int a4, int a5, id *a6, unsigned int a7)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v14 = *(unsigned int *)(a2 + 8);
    if ((int)v14 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v14, 0);
    }
    uint64_t v15 = a2 + 12;
    if (a2 == -12) {
      return 0xFFFFFFFFLL;
    }
LABEL_8:
    memset(v25, 0, sizeof(v25));
    socklen_t v24 = 0;
    if (a6)
    {
      uint64_t v16 = (const sockaddr *)v25;
      sub_100206BC0(a6, a7, (uint64_t)v25, (int *)&v24, 1);
    }
    else
    {
      uint64_t v16 = 0;
    }
    int v18 = (const void *)(v15 + a3);
    while (1)
    {
      id v19 = [a1 getInt$];
      int v20 = (int)v19;
      LibcoreIoAsynchronousCloseMonitor_newAsynchronousSocketCloseMonitorWithInt_((uint64_t)v19);
      ssize_t result = sendto(v20, v18, a4, a5, v16, v24);
      if (result != -1) {
        return result;
      }
      if ([a1 getInt$] == -1) {
        break;
      }
      if (*__error() != 4)
      {
        uint64_t v21 = +[NSString stringWithFormat:@"%s", "sendto"];
        uint64_t v22 = __error();
        ssize_t v23 = (JavaNetSocketException *)new_LibcoreIoErrnoException_initWithNSString_withInt_(v21, *v22);
        goto LABEL_21;
      }
    }
    ssize_t v23 = [[JavaNetSocketException alloc] initWithNSString:@"Socket closed"];
LABEL_21:
    objc_exception_throw(v23);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v15 = *(void *)(a2 + 32);
    if (v15) {
      goto LABEL_8;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_10020AFC8(void *a1, uint64_t a2, int a3, int a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v8 = *(unsigned int *)(a2 + 8);
    if ((int)v8 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v8, 0);
    }
    uint64_t v9 = a2 + 12;
    if (a2 == -12) {
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v9 = *(void *)(a2 + 32);
    if (!v9) {
      return 0xFFFFFFFFLL;
    }
  }
  size_t v10 = a4;
  uint64_t v11 = (const void *)(v9 + a3);
  do
    ssize_t v12 = write((int)[a1 getInt$], v11, v10);
  while (v12 == -1 && *__error() == 4);
  sub_100206E80(@"write", v12);
  return v12;
}

id sub_10020B3E4(uint64_t a1, uint64_t a2, int a3)
{
  id v6 = [(id)JavaNetInetSocketAddress_class_() getDeclaredField:@"addr"];
  stat v7 = v6;
  if (!v6) {
    JreThrowNullPointerException();
  }
  [v6 setAccessibleWithBoolean:1];
  [v7 setWithId:a1 withId:a2];
  id v8 = [(id)JavaNetInetSocketAddress_class_() getDeclaredField:@"port"];
  uint64_t v9 = v8;
  if (!v8) {
    JreThrowNullPointerException();
  }
  [v8 setAccessibleWithBoolean:1];
  return [v9 setWithId:a1 withId:JavaLangInteger_valueOfWithInt_(a3)];
}

void sub_10020B494(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    BOOL v3 = new_JavaLangAssertionError_initWithId_(v2);
    objc_exception_throw(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10020B4BC()
{
}

LibcoreIoPosix *new_LibcoreIoPosix_init()
{
  return [LibcoreIoPosix alloc];
}

id DalvikSystemBlockGuard_setThreadPolicyWithDalvikSystemBlockGuard_Policy_(uint64_t a1)
{
  if (atomic_load_explicit(DalvikSystemBlockGuard__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t v4 = new_JavaLangNullPointerException_initWithNSString_(@"policy == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  id v2 = (void *)qword_100560E78;
  if (!qword_100560E78) {
    JreThrowNullPointerException();
  }
  return [v2 setWithId:a1];
}

id DalvikSystemBlockGuard_getThreadPolicy()
{
  if ((atomic_load_explicit(DalvikSystemBlockGuard__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)qword_100560E78;
  if (!qword_100560E78) {
    JreThrowNullPointerException();
  }
  return [v0 get];
}

id JavaNioNioUtils_freeDirectBufferWithJavaNioByteBuffer_(id result)
{
  if (result)
  {
    id v1 = result;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    return [v1 free];
  }
  return result;
}

id JavaNioNioUtils_getFDWithJavaNioChannelsFileChannel_(void *a1)
{
  objc_opt_class();
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return [a1 getFD];
}

JavaNioFileChannelImpl *JavaNioNioUtils_newFileChannelWithId_withJavaIoFileDescriptor_withInt_(void *a1, void *a2, int a3)
{
  BOOL v3 = new_JavaNioFileChannelImpl_initWithId_withJavaIoFileDescriptor_withInt_(a1, a2, a3);
  return v3;
}

uint64_t JavaNioNioUtils_unsafeArrayWithJavaNioByteBuffer_(uint64_t a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return *(void *)(a1 + 48);
}

uint64_t JavaNioNioUtils_unsafeArrayOffsetWithJavaNioByteBuffer_(uint64_t a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return *(unsigned int *)(a1 + 56);
}

id JavaNioNioUtils_setSocketOptionWithJavaNioFileDescriptorChannel_withJavaUtilSet_withJavaNetSocketOption_withId_(void *a1, void *a2, void *a3, uint64_t a4)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v17 = new_JavaLangIllegalArgumentException_initWithNSString_(@"SocketOption must come from StandardSocketOptions");
    goto LABEL_17;
  }
  if (!a2) {
    goto LABEL_12;
  }
  if (([a2 containsWithId:a3] & 1) == 0)
  {
    CFStringRef v18 = JreStrcat("@$", v8, v9, v10, v11, v12, v13, v14, a3);
    id v17 = new_JavaLangUnsupportedOperationException_initWithNSString_((uint64_t)v18);
    goto LABEL_17;
  }
  if (!a1 || (id v15 = [a1 getFD]) == 0) {
LABEL_12:
  }
    JreThrowNullPointerException();
  if (([v15 valid] & 1) == 0)
  {
    id v17 = new_JavaNioChannelsClosedChannelException_init();
LABEL_17:
    objc_exception_throw(v17);
  }
  objc_opt_class();
  if (!a3) {
    goto LABEL_12;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  id v16 = [a1 getFD];
  return [a3 setValueWithJavaIoFileDescriptor:v16 withId:a4];
}

id JavaNioNioUtils_getSocketOptionWithJavaNioFileDescriptorChannel_withJavaUtilSet_withJavaNetSocketOption_(void *a1, void *a2, void *a3)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v15 = new_JavaLangIllegalArgumentException_initWithNSString_(@"SocketOption must come from StandardSocketOptions");
    goto LABEL_17;
  }
  if (!a2) {
    goto LABEL_12;
  }
  if (([a2 containsWithId:a3] & 1) == 0)
  {
    CFStringRef v16 = JreStrcat("@$", v6, v7, v8, v9, v10, v11, v12, a3);
    id v15 = new_JavaLangUnsupportedOperationException_initWithNSString_((uint64_t)v16);
    goto LABEL_17;
  }
  if (!a1 || (id v13 = [a1 getFD]) == 0) {
LABEL_12:
  }
    JreThrowNullPointerException();
  if (([v13 valid] & 1) == 0)
  {
    id v15 = new_JavaNioChannelsClosedChannelException_init();
LABEL_17:
    objc_exception_throw(v15);
  }
  objc_opt_class();
  if (!a3) {
    goto LABEL_12;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  id v14 = [a1 getFD];
  return [a3 getValueWithJavaIoFileDescriptor:v14];
}

uint64_t JavaUtilFormattable_class_()
{
  if (qword_100560E88 != -1) {
    dispatch_once(&qword_100560E88, &stru_1004452B0);
  }
  return qword_100560E80;
}

void sub_10020BD70(id a1)
{
  qword_100560E80 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilFormattable);
}

id JavaNetServerSocket_init(uint64_t a1)
{
  if (JavaNetServerSocket_factory_) {
    id v2 = (JavaNetPlainServerSocketImpl *)[(id)JavaNetServerSocket_factory_ createSocketImpl];
  }
  else {
    id v2 = new_JavaNetPlainServerSocketImpl_init();
  }
  JreStrongAssign((id *)(a1 + 8), v2);
  BOOL v3 = *(void **)(a1 + 8);
  return [v3 createWithBoolean:1];
}

uint64_t JavaNetServerSocket_initWithInt_(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v10 = JavaNetInet4Address_ANY_;
  return JavaNetServerSocket_initWithInt_withInt_withJavaNetInetAddress_(a1, a2, 50, v10, a5, a6, a7, a8);
}

uint64_t JavaNetServerSocket_initWithInt_withInt_(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v11 = JavaNetInet4Address_ANY_;
  return JavaNetServerSocket_initWithInt_withInt_withJavaNetInetAddress_(a1, a2, a3, v11, a5, a6, a7, a8);
}

uint64_t JavaNetServerSocket_initWithInt_withInt_withJavaNetInetAddress_(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a4;
  int v9 = a3;
  sub_100159298(a2, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v12 = a1 + 1;
  if (JavaNetServerSocket_factory_) {
    id v13 = (JavaNetPlainServerSocketImpl *)[(id)JavaNetServerSocket_factory_ createSocketImpl];
  }
  else {
    id v13 = new_JavaNetPlainServerSocketImpl_init();
  }
  JreStrongAssign(a1 + 1, v13);
  if (!v8)
  {
    if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v8 = JavaNetInet4Address_ANY_;
  }
  objc_sync_enter(a1);
  [a1[1] createWithBoolean:1];
  [*v12 bindWithJavaNetInetAddress:v8 withInt:a2];
  sub_10020C0E0((uint64_t)a1);
  if (v9 <= 0) {
    uint64_t v14 = 50;
  }
  else {
    uint64_t v14 = v9;
  }
  [*v12 listenWithInt:v14];
  return objc_sync_exit(a1);
}

void sub_10020C090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10020C0E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    JreThrowNullPointerException();
  }
  BOOL v3 = (id *)(a1 + 24);
  id SocketLocalAddressWithJavaIoFileDescriptor = LibcoreIoIoBridge_getSocketLocalAddressWithJavaIoFileDescriptor_(*(void *)(v1 + 24));
  id result = JreStrongAssign(v3, SocketLocalAddressWithJavaIoFileDescriptor);
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_10020C204(void *a1, void *a2)
{
  objc_sync_enter(a1);
  uint64_t v4 = (void *)a1[1];
  if (v4) {
    BOOL v5 = a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    JreThrowNullPointerException();
  }
  [v4 acceptWithJavaNetSocketImpl:a2[1]];
  [a2 accepted];
  return objc_sync_exit(a1);
}

void sub_10020C274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020C3D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNetServerSocket_setSocketFactoryWithJavaNetSocketImplFactory_(void *a1)
{
  if (qword_100560E98 != -1) {
    dispatch_once(&qword_100560E98, &stru_1004459D0);
  }
  id v2 = (void *)qword_100560E90;
  objc_sync_enter((id)qword_100560E90);
  if (JavaNetServerSocket_factory_)
  {
    uint64_t v4 = new_JavaNetSocketException_initWithNSString_(@"Factory already set");
    objc_exception_throw(v4);
  }
  JreStrongAssign((id *)&JavaNetServerSocket_factory_, a1);
  return objc_sync_exit(v2);
}

void sub_10020C49C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020C540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020C828(_Unwind_Exception *a1)
{
  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020CAD4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560E90 = IOSClass_fromClass(v1);
}

void *JavaTextSimpleDateFormat_init(uint64_t a1)
{
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  sub_10020D044(a1, Default);
  BOOL v3 = (__CFString *)+[JavaTextSimpleDateFormat defaultPattern]_0();
  JreStrongAssign((id *)(a1 + 24), v3);
  uint64_t v4 = (void *)JavaUtilLocale_getDefault();
  BOOL v5 = new_JavaTextDateFormatSymbols_initWithJavaUtilLocale_(v4);
  return JreStrongAssignAndConsume((id *)(a1 + 32), v5);
}

id sub_10020CCC8(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id result = [a1 length];
  int v3 = (int)result;
  if ((int)result >= 1)
  {
    uint64_t v4 = 0;
    int v5 = 0;
    char v6 = 0;
    int v7 = -1;
    do
    {
      id result = [a1 charAtWithInt:v4];
      if (result == 39)
      {
        if (v5 >= 1)
        {
          id result = sub_10020CE10((unsigned __int16)v7);
          int v5 = 0;
        }
        if (v7 == 39) {
          int v7 = -1;
        }
        else {
          int v7 = 39;
        }
        v6 ^= 1u;
      }
      else if ((v6 & 1) == 0 {
             && ((int v8 = (int)result, v7 == result) || (result & 0xFFFFFFDF) - 65 <= 0x19))
      }
      {
        if (v7 == result)
        {
          char v6 = 0;
          ++v5;
        }
        else
        {
          if (v5 >= 1) {
            id result = sub_10020CE10((unsigned __int16)v7);
          }
          char v6 = 0;
          int v5 = 1;
          int v7 = v8;
        }
      }
      else
      {
        if (v5 >= 1)
        {
          id result = sub_10020CE10((unsigned __int16)v7);
          int v5 = 0;
        }
        int v7 = -1;
      }
      uint64_t v4 = (v4 + 1);
    }
    while (v3 != v4);
    if (v5 > 0) {
      id result = sub_10020CE10((unsigned __int16)v7);
    }
    if (v6)
    {
      int v9 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Unterminated quote");
      objc_exception_throw(v9);
    }
  }
  return result;
}

id sub_10020CE10(uint64_t a1)
{
  if (!JavaTextSimpleDateFormat_PATTERN_CHARS_) {
    JreThrowNullPointerException();
  }
  id result = [JavaTextSimpleDateFormat_PATTERN_CHARS_ indexOf:a1];
  if (result == -1)
  {
    CFStringRef v9 = JreStrcat("$CC", v2, v3, v4, v5, v6, v7, v8, @"Unknown pattern character '");
    uint64_t v10 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v9);
    objc_exception_throw(v10);
  }
  return result;
}

id JavaTextSimpleDateFormat_initWithNSString_withJavaTextDateFormatSymbols_(uint64_t a1, void *a2, void *a3)
{
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  sub_10020D044(a1, Default);
  sub_10020CCC8(a2);
  JreStrongAssign((id *)(a1 + 24), a2);
  if (!a3) {
    JreThrowNullPointerException();
  }
  id v7 = [a3 clone];
  objc_opt_class();
  if (v7 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return JreStrongAssign((id *)(a1 + 32), v7);
}

void *JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(uint64_t a1, void *a2, void *a3)
{
  sub_10020D044(a1, a3);
  sub_10020CCC8(a2);
  JreStrongAssign((id *)(a1 + 24), a2);
  uint64_t v6 = new_JavaTextDateFormatSymbols_initWithJavaUtilLocale_(a3);
  return JreStrongAssignAndConsume((id *)(a1 + 32), v6);
}

id sub_10020D044(uint64_t a1, void *a2)
{
  JavaTextDateFormat_init();
  InstanceWithJavaUtilLocaluint64_t e = (void *)JavaTextNumberFormat_getInstanceWithJavaUtilLocale_(a2);
  JreStrongAssign((id *)(a1 + 16), InstanceWithJavaUtilLocale);
  uint64_t v5 = *(void **)(a1 + 16);
  if (!v5) {
    JreThrowNullPointerException();
  }
  [v5 setParseIntegerOnlyWithBoolean:1];
  [*(id *)(a1 + 16) setGroupingUsedWithBoolean:0];
  uint64_t v6 = new_JavaUtilGregorianCalendar_initWithJavaUtilLocale_(a2);
  JreStrongAssignAndConsume((id *)(a1 + 8), v6);
  [*(id *)(a1 + 8) addWithInt:1 withInt:4294967216];
  *(_DWORD *)(a1 + 40) = [*(id *)(a1 + 8) getWithInt:1];
  id v7 = [*(id *)(a1 + 8) getTime];
  return JreStrongAssign((id *)(a1 + 48), v7);
}

NSString *sub_10020D1BC(void *a1, void *a2, void *a3, int a4)
{
  if (atomic_load_explicit(JavaTextSimpleDateFormat__initialized, memory_order_acquire))
  {
    if (a4) {
      goto LABEL_7;
    }
  }
  else
  {
    objc_opt_class();
    if (a4) {
      goto LABEL_7;
    }
  }
  if (!a2) {
    goto LABEL_24;
  }
  if ([a2 isEqual:a3]) {
    return (NSString *)a1;
  }
LABEL_7:
  CFStringRef v9 = new_JavaLangStringBuilder_init();
  if (!a1) {
LABEL_24:
  }
    JreThrowNullPointerException();
  uint64_t v10 = v9;
  int v11 = [a1 length];
  if (v11 >= 1)
  {
    uint64_t v12 = 0;
    int v13 = 0;
    do
    {
      while (1)
      {
        id v14 = [a1 charAtWithInt:v12];
        v13 ^= v14 == 39;
        if ((v13 & 1) == 0) {
          break;
        }
        [(JavaLangStringBuilder *)v10 appendWithChar:v14];
        uint64_t v12 = (v12 + 1);
        if (v12 == v11)
        {
          CFStringRef v25 = @"Unterminated quote";
          goto LABEL_25;
        }
      }
      if (!a2) {
        goto LABEL_24;
      }
      id v15 = [a2 indexOf:v14];
      if (v15 == -1)
      {
        if (a4 && (unsigned __int16)(((unsigned __int16)v14 & 0xFFDF) - 65) <= 0x19u)
        {
          CFStringRef v25 = JreStrcat("$C$$C", v16, v17, v18, v19, v20, v21, v22, @"Invalid pattern character '");
LABEL_25:
          long long v26 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v25);
          objc_exception_throw(v26);
        }
        socklen_t v24 = v10;
        id v23 = v14;
      }
      else
      {
        if (!a3) {
          goto LABEL_24;
        }
        id v23 = [a3 charAtWithInt:v15];
        socklen_t v24 = v10;
      }
      [(JavaLangStringBuilder *)v24 appendWithChar:v23];
      uint64_t v12 = (v12 + 1);
    }
    while (v12 != v11);
  }
  return [(JavaLangStringBuilder *)v10 description];
}

id sub_10020D6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = new_JavaLangStringBuffer_init();
  uint64_t v5 = new_JavaUtilArrayList_init();
  sub_10020D864(a1, a2, v4, 0, v5);
  uint64_t v6 = new_JavaTextAttributedString_initWithNSString_([(JavaLangStringBuffer *)v4 description]);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = [(JavaUtilArrayList *)v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v5);
        }
        int v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        if (!v11) {
          JreThrowNullPointerException();
        }
        id v12 = [*(id *)(*((void *)&v14 + 1) + 8 * i) getFieldAttribute];
        -[JavaTextAttributedString addAttributeWithJavaTextAttributedCharacterIterator_Attribute:withId:withInt:withInt:](v6, "addAttributeWithJavaTextAttributedCharacterIterator_Attribute:withId:withInt:withInt:", v12, v12, [v11 getBeginIndex], objc_msgSend(v11, "getEndIndex"));
      }
      id v8 = [(JavaUtilArrayList *)v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }
  return [(JavaTextAttributedString *)v6 getIterator];
}

void *sub_10020D864(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v6 = *(void **)(a1 + 8);
  if (!v6) {
    goto LABEL_34;
  }
  [v6 setTimeWithJavaUtilDate:a2];
  if (a4)
  {
    [a4 setBeginIndexWithInt:0];
    [a4 setEndIndexWithInt:0];
  }
  uint64_t v9 = *(void **)(a1 + 24);
  if (!v9) {
LABEL_34:
  }
    JreThrowNullPointerException();
  int v10 = [v9 length];
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    char v13 = 0;
    int v14 = -1;
    do
    {
      id v15 = [*(id *)(a1 + 24) charAtWithInt:v11];
      if (v15 == 39)
      {
        if ((int)v12 >= 1)
        {
          sub_10020DA84(a1, a3, a4, a5, (unsigned __int16)v14, v12);
          uint64_t v12 = 0;
        }
        if (v14 == 39)
        {
          if (!a3) {
            goto LABEL_34;
          }
          [a3 appendWithChar:39];
          int v14 = -1;
        }
        else
        {
          int v14 = 39;
        }
        v13 ^= 1u;
      }
      else
      {
        id v16 = v15;
        if ((v13 & 1) != 0
          || (v14 != v15 ? (BOOL v17 = (unsigned __int16)(((unsigned __int16)v15 & 0xFFDF) - 65) > 0x19u) : (BOOL v17 = 0),
              v17))
        {
          if ((int)v12 >= 1)
          {
            sub_10020DA84(a1, a3, a4, a5, (unsigned __int16)v14, v12);
            uint64_t v12 = 0;
          }
          if (!a3) {
            goto LABEL_34;
          }
          [a3 appendWithChar:v16];
          int v14 = -1;
        }
        else if (v14 == v15)
        {
          char v13 = 0;
          uint64_t v12 = (v12 + 1);
        }
        else
        {
          if ((int)v12 >= 1) {
            sub_10020DA84(a1, a3, a4, a5, (unsigned __int16)v14, v12);
          }
          char v13 = 0;
          uint64_t v12 = 1;
          int v14 = (int)v16;
        }
      }
      uint64_t v11 = (v11 + 1);
    }
    while (v10 != v11);
    if ((int)v12 > 0) {
      sub_10020DA84(a1, a3, a4, a5, (unsigned __int16)v14, v12);
    }
  }
  return a3;
}

id sub_10020DA84(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (!JavaTextSimpleDateFormat_PATTERN_CHARS_) {
    goto LABEL_95;
  }
  unsigned int v11 = [JavaTextSimpleDateFormat_PATTERN_CHARS_ indexOf:a5];
  if (v11 == -1)
  {
    CFStringRef v55 = JreStrcat("$CC", v12, v13, v14, v15, v16, v17, v18, @"Unknown pattern character '");
    uint64_t v56 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v55);
    objc_exception_throw(v56);
  }
  if (!a2) {
LABEL_95:
  }
    JreThrowNullPointerException();
  unsigned int v19 = v11;
  id v20 = [a2 length];
  switch(v19)
  {
    case 0u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v21 = *(void *)(a1 + 32);
      if (!v21) {
        goto LABEL_95;
      }
      uint64_t v22 = *(void *)(v21 + 16);
      if (!v22) {
        goto LABEL_95;
      }
      id v23 = *(void **)(a1 + 8);
      if (!v23) {
        goto LABEL_95;
      }
      id v24 = (id)JavaTextDateFormat_Field_ERA_;
      uint64_t v25 = 0;
      goto LABEL_69;
    case 1u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      long long v26 = *(void **)(a1 + 8);
      if (!v26) {
        goto LABEL_95;
      }
      id v24 = (id)JavaTextDateFormat_Field_YEAR_;
      signed int v27 = [v26 getWithInt:1];
      unsigned int v28 = v27;
      if (a6 != 2) {
        goto LABEL_48;
      }
      unsigned int v28 = v27 % 100;
      uint64_t v29 = a1;
      uint64_t v30 = (uint64_t)a2;
      uint64_t v31 = 2;
      goto LABEL_49;
    case 2u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v24 = (id)JavaTextDateFormat_Field_MONTH_;
      uint64_t v32 = a1;
      unsigned int v33 = a2;
      uint64_t v34 = a6;
      int v35 = 0;
      goto LABEL_90;
    case 3u:
      uint64_t v36 = &JavaTextDateFormat_Field_DAY_OF_MONTH_;
      uint64_t v37 = 5;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 4u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      int v38 = *(void **)(a1 + 8);
      if (!v38) {
        goto LABEL_95;
      }
      id v24 = (id)JavaTextDateFormat_Field_HOUR_OF_DAY1_;
      unsigned int v39 = [v38 getWithInt:11];
      BOOL v40 = v39 == 0;
      int v41 = 24;
      goto LABEL_76;
    case 5u:
      uint64_t v36 = &JavaTextDateFormat_Field_HOUR_OF_DAY0_;
      uint64_t v37 = 11;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 6u:
      uint64_t v36 = &JavaTextDateFormat_Field_MINUTE_;
      uint64_t v37 = 12;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 7u:
      uint64_t v36 = &JavaTextDateFormat_Field_SECOND_;
      uint64_t v37 = 13;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 8u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v42 = *(void **)(a1 + 8);
      if (!v42) {
        goto LABEL_95;
      }
      id v24 = (id)JavaTextDateFormat_Field_MILLISECOND_;
      sub_10020E714(a1, (uint64_t)a2, a6, (int)[v42 getWithInt:14]);
      goto LABEL_50;
    case 9u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v24 = (id)JavaTextDateFormat_Field_DAY_OF_WEEK_;
      uint64_t v43 = a1;
      unsigned int v44 = a2;
      int v45 = a6;
      int v46 = 0;
      goto LABEL_94;
    case 0xAu:
      uint64_t v36 = &JavaTextDateFormat_Field_DAY_OF_YEAR_;
      uint64_t v37 = 6;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 0xBu:
      uint64_t v36 = &JavaTextDateFormat_Field_DAY_OF_WEEK_IN_MONTH_;
      uint64_t v37 = 8;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 0xCu:
      uint64_t v36 = &JavaTextDateFormat_Field_WEEK_OF_YEAR_;
      uint64_t v37 = 3;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        goto LABEL_80;
      }
      goto LABEL_46;
    case 0xDu:
      uint64_t v36 = &JavaTextDateFormat_Field_WEEK_OF_MONTH_;
      uint64_t v37 = 4;
      if (atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire)) {
        goto LABEL_46;
      }
      goto LABEL_80;
    case 0xEu:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v51 = *(void *)(a1 + 32);
      if (!v51) {
        goto LABEL_95;
      }
      uint64_t v22 = *(void *)(v51 + 8);
      if (!v22) {
        goto LABEL_95;
      }
      id v23 = *(void **)(a1 + 8);
      if (!v23) {
        goto LABEL_95;
      }
      id v24 = (id)JavaTextDateFormat_Field_AM_PM_;
      uint64_t v25 = 9;
LABEL_69:
      int v52 = [v23 getWithInt:v25];
      uint64_t v53 = *(unsigned int *)(v22 + 8);
      if (v52 < 0 || v52 >= (int)v53) {
        IOSArray_throwOutOfBoundsWithMsg(v53, v52);
      }
      [a2 appendWithNSString:*(void *)(v22 + 24 + 8 * v52)];
      goto LABEL_50;
    case 0xFu:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v54 = *(void **)(a1 + 8);
      if (!v54) {
        goto LABEL_95;
      }
      id v24 = (id)JavaTextDateFormat_Field_HOUR1_;
      unsigned int v39 = [v54 getWithInt:10];
      BOOL v40 = v39 == 0;
      int v41 = 12;
LABEL_76:
      if (v40) {
        unsigned int v28 = v41;
      }
      else {
        unsigned int v28 = v39;
      }
      goto LABEL_48;
    case 0x10u:
      uint64_t v36 = &JavaTextDateFormat_Field_HOUR0_;
      uint64_t v37 = 10;
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
LABEL_80:
      }
        objc_opt_class();
LABEL_46:
      uint64_t v47 = *(void **)(a1 + 8);
      if (!v47) {
        goto LABEL_95;
      }
      id v24 = (id)*v36;
      unsigned int v28 = [v47 getWithInt:v37];
LABEL_48:
      uint64_t v29 = a1;
      uint64_t v30 = (uint64_t)a2;
      uint64_t v31 = a6;
LABEL_49:
      sub_10020E874(v29, v30, v31, v28);
LABEL_50:
      if (a4)
      {
        uint64_t v48 = new_JavaTextFieldPosition_initWithJavaTextFormat_Field_(v24);
        [(JavaTextFieldPosition *)v48 setBeginIndexWithInt:v20];
        -[JavaTextFieldPosition setEndIndexWithInt:](v48, "setEndIndexWithInt:", [a2 length]);
        return [a4 addWithId:v48];
      }
      if (!a3) {
        goto LABEL_95;
      }
      if ([a3 getFieldAttribute] == v24
        || (id result = [a3 getFieldAttribute]) == 0
        && (id result = [a3 getField], result == v19))
      {
        id result = [a3 getEndIndex];
        if (!result)
        {
          [a3 setBeginIndexWithInt:v20];
          id v50 = [a2 length];
          return [a3 setEndIndexWithInt:v50];
        }
      }
      return result;
    case 0x11u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v24 = (id)JavaTextDateFormat_Field_TIME_ZONE_;
      sub_10020E55C(a1, a2, a6, 1);
      goto LABEL_50;
    case 0x12u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v24 = (id)JavaTextDateFormat_Field_TIME_ZONE_;
      sub_10020E65C(a1, a2, a6, 0);
      goto LABEL_50;
    case 0x13u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v24 = (id)JavaTextDateFormat_Field_MONTH_;
      uint64_t v32 = a1;
      unsigned int v33 = a2;
      uint64_t v34 = a6;
      int v35 = 1;
LABEL_90:
      sub_10020E3C0(v32, v33, v34, v35);
      goto LABEL_50;
    case 0x14u:
      if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v24 = (id)JavaTextDateFormat_Field_DAY_OF_WEEK_;
      uint64_t v43 = a1;
      unsigned int v44 = a2;
      int v45 = a6;
      int v46 = 1;
LABEL_94:
      sub_10020E26C(v43, v44, v45, v46);
      goto LABEL_50;
    default:
      id v24 = 0;
      goto LABEL_50;
  }
}

id sub_10020E26C(uint64_t a1, void *a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
LABEL_26:
  }
    JreThrowNullPointerException();
  uint64_t v6 = *(void *)(v4 + 56);
  if (a3 == 5)
  {
    if (a4)
    {
      if (!v6) {
        goto LABEL_26;
      }
      id v7 = &OBJC_IVAR___LibcoreIcuLocaleData_tinyStandAloneWeekdayNames_;
    }
    else
    {
      if (!v6) {
        goto LABEL_26;
      }
      id v7 = &OBJC_IVAR___LibcoreIcuLocaleData_tinyWeekdayNames_;
    }
    goto LABEL_17;
  }
  if (a3 != 4)
  {
    if (!a4)
    {
      id v7 = &OBJC_IVAR___JavaTextDateFormatSymbols_shortWeekdays_;
      if (!a2) {
        goto LABEL_26;
      }
      goto LABEL_18;
    }
    if (!v6) {
      goto LABEL_26;
    }
    id v7 = &OBJC_IVAR___LibcoreIcuLocaleData_shortStandAloneWeekdayNames_;
LABEL_17:
    uint64_t v4 = *(void *)(v4 + 56);
    if (!a2) {
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  if (a4)
  {
    if (!v6) {
      goto LABEL_26;
    }
    id v7 = &OBJC_IVAR___LibcoreIcuLocaleData_longStandAloneWeekdayNames_;
    goto LABEL_17;
  }
  id v7 = &OBJC_IVAR___JavaTextDateFormatSymbols_weekdays_;
  if (!a2) {
    goto LABEL_26;
  }
LABEL_18:
  uint64_t v8 = *(void *)(v4 + *v7);
  if (!v8) {
    goto LABEL_26;
  }
  uint64_t v9 = *(void **)(a1 + 8);
  if (!v9) {
    goto LABEL_26;
  }
  uint64_t v10 = (uint64_t)[v9 getWithInt:7];
  uint64_t v11 = *(unsigned int *)(v8 + 8);
  if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v11) {
    IOSArray_throwOutOfBoundsWithMsg(v11, v10);
  }
  uint64_t v12 = *(void *)(v8 + 24 + 8 * (int)v10);
  return [a2 appendWithNSString:v12];
}

id sub_10020E3C0(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v5 = *(void **)(a1 + 8);
  if (!v5) {
    goto LABEL_31;
  }
  id v9 = [v5 getWithInt:2];
  uint64_t v10 = (uint64_t)v9;
  if ((int)a3 <= 2)
  {
    return sub_10020E874(a1, (uint64_t)a2, a3, (int)v9 + 1);
  }
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
LABEL_31:
  }
    JreThrowNullPointerException();
  uint64_t v13 = *(void *)(v12 + 56);
  if (a3 == 5)
  {
    if (a4)
    {
      if (!v13) {
        goto LABEL_31;
      }
      uint64_t v14 = &OBJC_IVAR___LibcoreIcuLocaleData_tinyStandAloneMonthNames_;
    }
    else
    {
      if (!v13) {
        goto LABEL_31;
      }
      uint64_t v14 = &OBJC_IVAR___LibcoreIcuLocaleData_tinyMonthNames_;
    }
  }
  else if (a3 == 4)
  {
    if (!a4)
    {
      uint64_t v14 = &OBJC_IVAR___JavaTextDateFormatSymbols_months_;
      if (!a2) {
        goto LABEL_31;
      }
      goto LABEL_25;
    }
    if (!v13) {
      goto LABEL_31;
    }
    uint64_t v14 = &OBJC_IVAR___LibcoreIcuLocaleData_longStandAloneMonthNames_;
  }
  else
  {
    if (!a4)
    {
      uint64_t v14 = &OBJC_IVAR___JavaTextDateFormatSymbols_shortMonths_;
      if (!a2) {
        goto LABEL_31;
      }
      goto LABEL_25;
    }
    if (!v13) {
      goto LABEL_31;
    }
    uint64_t v14 = &OBJC_IVAR___LibcoreIcuLocaleData_shortStandAloneMonthNames_;
  }
  uint64_t v12 = *(void *)(v12 + 56);
  if (!a2) {
    goto LABEL_31;
  }
LABEL_25:
  uint64_t v15 = *(void *)(v12 + *v14);
  if (!v15) {
    goto LABEL_31;
  }
  uint64_t v16 = *(unsigned int *)(v15 + 8);
  if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v16) {
    IOSArray_throwOutOfBoundsWithMsg(v16, v10);
  }
  uint64_t v17 = *(void *)(v15 + 24 + 8 * (int)v10);
  return [a2 appendWithNSString:v17];
}

id sub_10020E55C(uint64_t a1, void *a2, int a3, int a4)
{
  if (a4)
  {
    uint64_t v8 = *(void **)(a1 + 8);
    if (!v8) {
      goto LABEL_12;
    }
    id v9 = [v8 getTimeZone];
    unsigned int v10 = [*(id *)(a1 + 8) getWithInt:16];
    if (!*(void *)(a1 + 32)) {
      goto LABEL_12;
    }
    id v11 = [*(id *)(a1 + 32) getTimeZoneDisplayNameWithJavaUtilTimeZone:v9 withBoolean:v10 != 0 withInt:a3 > 3];
    if (v11)
    {
      if (a2)
      {
        return [a2 appendWithNSString:v11];
      }
LABEL_12:
      JreThrowNullPointerException();
    }
  }
  return sub_10020E65C(a1, a2, a3, a4);
}

id sub_10020E65C(uint64_t a1, void *a2, int a3, int a4)
{
  uint64_t v5 = *(void **)(a1 + 8);
  if (!v5
    || (unsigned int v9 = [v5 getWithInt:15],
        unsigned int v10 = [*(id *)(a1 + 8) getWithInt:16],
        !a2))
  {
    JreThrowNullPointerException();
  }
  if (a3 > 3) {
    int v11 = 1;
  }
  else {
    int v11 = a4;
  }
  if (a3 == 4) {
    int v12 = 1;
  }
  else {
    int v12 = a4;
  }
  GmtOffsetStringWithBoolean_withBoolean_withInt = JavaUtilTimeZone_createGmtOffsetStringWithBoolean_withBoolean_withInt_(v12, v11, v10 + v9);
  return [a2 appendWithNSString:GmtOffsetStringWithBoolean_withBoolean_withInt];
}

id sub_10020E714(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = *(void **)(a1 + 16);
  if (!v5) {
    JreThrowNullPointerException();
  }
  int v7 = a3;
  uint64_t v9 = (a3 - 3);
  if ((int)a3 >= 3) {
    a3 = 3;
  }
  else {
    a3 = a3;
  }
  [v5 setMinimumIntegerDigitsWithInt:a3];
  [*(id *)(a1 + 16) setMaximumIntegerDigitsWithInt:10];
  int v10 = a4 / 100;
  if (v7 != 1) {
    int v10 = a4;
  }
  if (v7 == 2) {
    int v11 = a4 / 10;
  }
  else {
    int v11 = v10;
  }
  int v12 = new_JavaTextFieldPosition_initWithInt_(0);
  id result = [*(id *)(a1 + 16) formatWithId:JavaLangInteger_valueOfWithInt_(v11) withJavaLangStringBuffer:a2 withJavaTextFieldPosition:v12];
  if (v7 >= 4)
  {
    [*(id *)(a1 + 16) setMinimumIntegerDigitsWithInt:v9];
    uint64_t v14 = *(void **)(a1 + 16);
    uint64_t v15 = JavaLangInteger_valueOfWithInt_(0);
    return [v14 formatWithId:v15 withJavaLangStringBuffer:a2 withJavaTextFieldPosition:v12];
  }
  return result;
}

id sub_10020E874(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = *(void **)(a1 + 16);
  if (!v5) {
    JreThrowNullPointerException();
  }
  id v9 = [v5 getMinimumIntegerDigits];
  [*(id *)(a1 + 16) setMinimumIntegerDigitsWithInt:a3];
  int v10 = *(void **)(a1 + 16);
  int v11 = JavaLangInteger_valueOfWithInt_(a4);
  [v10 formatWithId:v11 withJavaLangStringBuffer:a2 withJavaTextFieldPosition:new_JavaTextFieldPosition_initWithInt_(0)];
  int v12 = *(void **)(a1 + 16);
  return [v12 setMinimumIntegerDigitsWithInt:v9];
}

unint64_t sub_10020EB04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!JavaTextSimpleDateFormat_PATTERN_CHARS_) {
    goto LABEL_71;
  }
  unsigned int v9 = [JavaTextSimpleDateFormat_PATTERN_CHARS_ indexOf:a4];
  if (v9 == -1)
  {
    CFStringRef v53 = JreStrcat("$CC", v10, v11, v12, v13, v14, v15, v16, @"Unknown pattern character '");
    uint64_t v54 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v53);
    objc_exception_throw(v54);
  }
  if (a5 >= 0) {
    int v17 = a5;
  }
  else {
    int v17 = -a5;
  }
  int v18 = -a5 & (a5 >> 31);
  uint64_t v19 = 5;
  switch(v9)
  {
    case 0u:
      uint64_t v45 = *(void *)(a1 + 32);
      if (!v45) {
        goto LABEL_71;
      }
      uint64_t v37 = *(void *)(v45 + 16);
      uint64_t v38 = a1;
      unsigned int v39 = a2;
      uint64_t v40 = a3;
      unsigned int v41 = 0;
      goto LABEL_37;
    case 1u:
      if (v17 > 2)
      {
        uint64_t v19 = 1;
LABEL_48:
        return sub_10020F84C(a1, v18, a2, a3, v19, 0);
      }
      uint64_t v47 = new_JavaTextParsePosition_initWithInt_(a3);
      uint64_t v48 = sub_10020F694(a1, v18, a2, v47);
      if (v48)
      {
        unint64_t v49 = [(JavaLangInteger *)v48 intValue];
        if ([(JavaTextParsePosition *)v47 getIndex] - a3 == 2 && (v49 & 0x80000000) == 0)
        {
          int v50 = *(_DWORD *)(a1 + 40);
          int v51 = v49 + 100 * (v50 / 100);
          if (v51 >= v50) {
            unint64_t v49 = v51;
          }
          else {
            unint64_t v49 = (v51 + 100);
          }
        }
        int v52 = *(void **)(a1 + 8);
        if (v52)
        {
          [v52 setWithInt:1 withInt:v49];
          unsigned int v44 = v47;
LABEL_31:
          return [(JavaTextParsePosition *)v44 getIndex];
        }
        goto LABEL_71;
      }
      int v46 = v47;
      break;
    case 2u:
      uint64_t v21 = a1;
      uint64_t v22 = a2;
      uint64_t v23 = a3;
      int v24 = v18;
      int v25 = 0;
      goto LABEL_52;
    case 3u:
      goto LABEL_48;
    case 4u:
      long long v26 = new_JavaTextParsePosition_initWithInt_(a3);
      signed int v27 = sub_10020F694(a1, v18, a2, v26);
      if (!v27) {
        goto LABEL_59;
      }
      unsigned int v28 = [(JavaLangInteger *)v27 intValue];
      if (!*(void *)(a1 + 8)) {
        goto LABEL_71;
      }
      if (v28 == 24) {
        uint64_t v29 = 0;
      }
      else {
        uint64_t v29 = v28;
      }
      uint64_t v30 = *(void **)(a1 + 8);
      uint64_t v31 = 11;
      goto LABEL_30;
    case 5u:
      uint64_t v19 = 11;
      goto LABEL_48;
    case 6u:
      uint64_t v19 = 12;
      goto LABEL_48;
    case 7u:
      uint64_t v19 = 13;
      goto LABEL_48;
    case 8u:
      return sub_10020EFF0(a1, a2, a3, v18);
    case 9u:
      uint64_t v32 = a1;
      unsigned int v33 = a2;
      uint64_t v34 = a3;
      int v35 = 0;
      goto LABEL_56;
    case 0xAu:
      uint64_t v19 = 6;
      goto LABEL_48;
    case 0xBu:
      uint64_t v19 = 8;
      goto LABEL_48;
    case 0xCu:
      uint64_t v19 = 3;
      goto LABEL_48;
    case 0xDu:
      uint64_t v19 = 4;
      goto LABEL_48;
    case 0xEu:
      uint64_t v36 = *(void *)(a1 + 32);
      if (!v36) {
        goto LABEL_71;
      }
      uint64_t v37 = *(void *)(v36 + 8);
      uint64_t v38 = a1;
      unsigned int v39 = a2;
      uint64_t v40 = a3;
      unsigned int v41 = 9;
LABEL_37:
      return sub_10020F928(v38, v39, v40, v37, v41);
    case 0xFu:
      long long v26 = new_JavaTextParsePosition_initWithInt_(a3);
      uint64_t v42 = sub_10020F694(a1, v18, a2, v26);
      if (v42)
      {
        unsigned int v43 = [(JavaLangInteger *)v42 intValue];
        if (*(void *)(a1 + 8))
        {
          if (v43 == 12) {
            uint64_t v29 = 0;
          }
          else {
            uint64_t v29 = v43;
          }
          uint64_t v30 = *(void **)(a1 + 8);
          uint64_t v31 = 10;
LABEL_30:
          [v30 setWithInt:v31 withInt:v29];
          unsigned int v44 = v26;
          goto LABEL_31;
        }
LABEL_71:
        JreThrowNullPointerException();
      }
LABEL_59:
      int v46 = v26;
      break;
    case 0x10u:
      uint64_t v19 = 10;
      goto LABEL_48;
    case 0x11u:
    case 0x12u:
      return sub_10020FAD0(a1, a2, a3);
    case 0x13u:
      uint64_t v21 = a1;
      uint64_t v22 = a2;
      uint64_t v23 = a3;
      int v24 = v18;
      int v25 = 1;
LABEL_52:
      return sub_10020F228(v21, v22, v23, v17, v24, v25);
    case 0x14u:
      uint64_t v32 = a1;
      unsigned int v33 = a2;
      uint64_t v34 = a3;
      int v35 = 1;
LABEL_56:
      return sub_10020F110(v32, v33, v34, v35);
    default:
      return a3;
  }
  return ~(unint64_t)[(JavaTextParsePosition *)v46 getErrorIndex];
}

unint64_t sub_10020EFF0(uint64_t a1, void *a2, int a3, int a4)
{
  uint64_t v8 = new_JavaTextParsePosition_initWithInt_(a3);
  unsigned int v9 = sub_10020F694(a1, a4, a2, v8);
  if (!v9) {
    return ~(unint64_t)[(JavaTextParsePosition *)v8 getErrorIndex];
  }
  [(JavaLangInteger *)v9 doubleValue];
  double v11 = v10;
  double v12 = JavaLangMath_powWithDouble_withDouble_(10.0, (double)([(JavaTextParsePosition *)v8 getIndex] - a3));
  uint64_t v13 = *(void **)(a1 + 8);
  if (!v13) {
    JreThrowNullPointerException();
  }
  double v14 = v11 / v12 * 1000.0;
  unsigned int v15 = (int)v14;
  if (v14 < 0.0) {
    unsigned int v16 = 0x80000000;
  }
  else {
    unsigned int v16 = 0x7FFFFFFF;
  }
  if (v15 == 0x80000000) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = v15;
  }
  [v13 setWithInt:14 withInt:v17];
  return [(JavaTextParsePosition *)v8 getIndex];
}

uint64_t sub_10020F110(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_12;
  }
  if (a4)
  {
    uint64_t v8 = *(void *)(v4 + 56);
    if (v8)
    {
      uint64_t result = sub_10020F928(a1, a2, a3, *(void *)(v8 + 112), 7u);
      if ((result & 0x80000000) == 0) {
        return result;
      }
      double v10 = &OBJC_IVAR___LibcoreIcuLocaleData_shortStandAloneWeekdayNames_;
      goto LABEL_9;
    }
LABEL_12:
    JreThrowNullPointerException();
  }
  uint64_t result = sub_10020F928(a1, a2, a3, *(void *)(v4 + 48), 7u);
  if ((result & 0x80000000) == 0) {
    return result;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  double v10 = &OBJC_IVAR___JavaTextDateFormatSymbols_shortWeekdays_;
LABEL_9:
  uint64_t v11 = *(void *)(v8 + *v10);
  return sub_10020F928(a1, a2, a3, v11, 7u);
}

unint64_t sub_10020F228(uint64_t a1, void *a2, uint64_t a3, int a4, int a5, int a6)
{
  if (a4 <= 2)
  {
    return sub_10020F84C(a1, a5, a2, a3, 2, -1);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  if (!v10) {
    goto LABEL_16;
  }
  if (!a6)
  {
    unint64_t result = sub_10020F928(a1, a2, a3, *(void *)(v10 + 24), 2u);
    if ((result & 0x80000000) == 0) {
      return result;
    }
    uint64_t v11 = *(void *)(a1 + 32);
    double v12 = &OBJC_IVAR___JavaTextDateFormatSymbols_shortMonths_;
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(v10 + 56);
  if (!v11) {
LABEL_16:
  }
    JreThrowNullPointerException();
  unint64_t result = sub_10020F928(a1, a2, a3, *(void *)(v11 + 64), 2u);
  if ((result & 0x80000000) == 0) {
    return result;
  }
  double v12 = &OBJC_IVAR___LibcoreIcuLocaleData_shortStandAloneMonthNames_;
LABEL_13:
  uint64_t v13 = *(void *)(v11 + *v12);
  return sub_10020F928(a1, a2, a3, v13, 2u);
}

JavaLangInteger *sub_10020F694(uint64_t a1, int a2, void *a3, void *a4)
{
  if (!a3) {
    goto LABEL_30;
  }
  unsigned int v8 = [a3 length];
  if (!a4) {
    goto LABEL_30;
  }
  LODWORD(v9) = v8;
  id v10 = [a4 getIndex];
  unint64_t v11 = (unint64_t)v10;
  if ((int)v9 - (int)v10 <= a2 || a2 <= 0) {
    unint64_t v9 = v9;
  }
  else {
    unint64_t v9 = (v10 + a2);
  }
  if ((int)v10 < (int)v9)
  {
    while ([a3 charAtWithInt:v11] == 32
         || [a3 charAtWithInt:v11] == 9)
    {
      unint64_t v11 = (v11 + 1);
      if (v9 == v11)
      {
        unint64_t v11 = v9;
        break;
      }
    }
  }
  if (!a2)
  {
    [a4 setIndexWithInt:v11];
    unsigned int v15 = *(void **)(a1 + 16);
    if (v15)
    {
      return (JavaLangInteger *)[v15 parseWithNSString:a3 withJavaTextParsePosition:a4];
    }
LABEL_30:
    JreThrowNullPointerException();
  }
  if ((int)v11 >= (int)v9)
  {
    int v13 = 0;
  }
  else
  {
    int v13 = 0;
    while (1)
    {
      int v14 = JavaLangCharacter_digitWithChar_withInt_((UChar32)[a3 charAtWithInt:v11], 10);
      if (v14 == -1) {
        break;
      }
      int v13 = v14 + 10 * v13;
      unint64_t v11 = (v11 + 1);
      if (v9 == v11)
      {
        unint64_t v11 = v9;
        break;
      }
    }
  }
  if (v11 == [a4 getIndex])
  {
    [a4 setErrorIndexWithInt:v11];
    return 0;
  }
  else
  {
    [a4 setIndexWithInt:v11];
    return JavaLangInteger_valueOfWithInt_(v13);
  }
}

unint64_t sub_10020F84C(uint64_t a1, int a2, void *a3, int a4, uint64_t a5, int a6)
{
  unint64_t v11 = new_JavaTextParsePosition_initWithInt_(a4);
  double v12 = sub_10020F694(a1, a2, a3, v11);
  if (!v12) {
    return ~(unint64_t)[(JavaTextParsePosition *)v11 getErrorIndex];
  }
  int v13 = *(void **)(a1 + 8);
  if (!v13) {
    JreThrowNullPointerException();
  }
  objc_msgSend(v13, "setWithInt:withInt:", a5, -[JavaLangInteger intValue](v12, "intValue") + a6);
  return [(JavaTextParsePosition *)v11 getIndex];
}

uint64_t sub_10020F928(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  if (!a4) {
    goto LABEL_45;
  }
  if (*(int *)(a4 + 8) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0xFFFFFFFFLL;
    int v10 = -1;
    while (1)
    {
      unint64_t v11 = *(void **)(a4 + 24 + 8 * v8);
      if (!v11) {
        break;
      }
      id v12 = [*(id *)(a4 + 24 + 8 * v8) length];
      if (v12)
      {
        if (!a2) {
          break;
        }
        if ([a2 regionMatches:1 thisOffset:a3 aString:v11 otherOffset:0 count:v12])
        {
          BOOL v14 = v9 == -1 || v10 < (int)v12;
          if (v14) {
            uint64_t v9 = v8;
          }
          else {
            uint64_t v9 = v9;
          }
          if (v14) {
            int v10 = (int)v12;
          }
        }
        else
        {
          uint64_t v15 = (v12 - 1);
          if ([v11 charAtWithInt:v15] == 46)
          {
            unsigned int v16 = [a2 regionMatches:1 thisOffset:a3 aString:v11 otherOffset:0 count:v15];
            BOOL v17 = v9 != -1 && (int)v15 <= v10;
            BOOL v18 = !v17;
            BOOL v19 = !v18;
            unsigned int v20 = v18 ? v8 : v9;
            int v21 = v19 ? v10 : v15;
            uint64_t v9 = v16 ? v20 : v9;
            if (v16) {
              int v10 = v21;
            }
          }
        }
      }
      if (++v8 >= *(int *)(a4 + 8)) {
        goto LABEL_41;
      }
    }
LABEL_45:
    JreThrowNullPointerException();
  }
  int v10 = -1;
  uint64_t v9 = 0xFFFFFFFFLL;
LABEL_41:
  if (v9 == -1) {
    return ~a3;
  }
  uint64_t v22 = *(void **)(a1 + 8);
  if (!v22) {
    goto LABEL_45;
  }
  [v22 setWithInt:a5 withInt:v9];
  return (v10 + a3);
}

unint64_t sub_10020FAD0(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a2) {
    goto LABEL_54;
  }
  LODWORD(v3) = a3;
  unsigned int v6 = [a2 regionMatches:a3 aString:@"GMT" otherOffset:0 count:3];
  uint64_t v7 = (v3 + 3);
  if (v6) {
    uint64_t v3 = v7;
  }
  else {
    uint64_t v3 = v3;
  }
  if ((int)v3 >= (int)[a2 length]
    || (unsigned int v8 = [a2 charAtWithInt:v3], v9 = v8, v8 != 45) && v8 != 43)
  {
    if (v6)
    {
      BOOL v17 = *(void **)(a1 + 8);
      if (!v17) {
        goto LABEL_54;
      }
      [v17 setTimeZoneWithJavaUtilTimeZone:JavaUtilTimeZone_getTimeZoneWithNSString_(@"GMT")];
      return v7;
    }
    BOOL v18 = *(void **)(a1 + 32);
    if (v18)
    {
      BOOL v19 = (char *)[v18 internalZoneStrings];
      if (v19)
      {
        uint64_t v40 = a1;
        unsigned int v20 = (uint64_t *)(v19 + 24);
        unint64_t v21 = (unint64_t)&v19[8 * *((int *)v19 + 2) + 24];
        unint64_t v41 = v21;
LABEL_20:
        if ((unint64_t)v20 >= v21) {
          return ~v3;
        }
        uint64_t v23 = *v20++;
        uint64_t v22 = v23;
        if (!v23) {
          goto LABEL_54;
        }
        uint64_t v24 = 0;
        while (1)
        {
          uint64_t v25 = *(int *)(v22 + 8);
          if (v24 + 1 >= v25) {
            IOSArray_throwOutOfBoundsWithMsg(v25, (v24 + 1));
          }
          uint64_t v26 = *(void *)(v22 + 32 + 8 * v24);
          if (v26)
          {
            uint64_t v27 = *(unsigned int *)(v22 + 8);
            if (v24 + 1 >= (int)v27) {
              IOSArray_throwOutOfBoundsWithMsg(v27, (v24 + 1));
            }
            if (objc_msgSend(a2, "regionMatches:thisOffset:aString:otherOffset:count:", 1, v3, v26, 0, objc_msgSend(*(id *)(v22 + 32 + 8 * v24), "length")))break; {
          }
            }
          if (++v24 == 4)
          {
            unint64_t v21 = v41;
            goto LABEL_20;
          }
        }
        uint64_t v31 = *(unsigned int *)(v22 + 8);
        if ((int)v31 <= 0) {
          IOSArray_throwOutOfBoundsWithMsg(v31, 0);
        }
        id TimeZoneWithNSString = JavaUtilTimeZone_getTimeZoneWithNSString_(*(void **)(v22 + 24));
        if (!TimeZoneWithNSString) {
          return ~v3;
        }
        unsigned int v33 = TimeZoneWithNSString;
        int v34 = [TimeZoneWithNSString getRawOffset];
        if ((v24 - 2) <= 1)
        {
          unsigned int v35 = [v33 getDSTSavings];
          if (v35) {
            int v36 = v35;
          }
          else {
            int v36 = 3600000;
          }
          v34 += v36;
        }
        uint64_t v37 = *(void **)(v40 + 8);
        if (v37)
        {
          objc_msgSend(v37, "setTimeZoneWithJavaUtilTimeZone:", new_JavaUtilSimpleTimeZone_initWithInt_withNSString_(v34, (uint64_t)&stru_10048C1F8));
          uint64_t v38 = *(unsigned int *)(v22 + 8);
          if ((int)v38 <= (int)v24 + 1) {
            IOSArray_throwOutOfBoundsWithMsg(v38, v24 + 1);
          }
          unsigned int v39 = *(void **)(v22 + 24 + 8 * v24 + 8);
          if (v39) {
            return v3 + [v39 length];
          }
        }
      }
    }
LABEL_54:
    JreThrowNullPointerException();
  }
  int v10 = new_JavaTextParsePosition_initWithInt_((int)v3 + 1);
  unint64_t v11 = *(void **)(a1 + 16);
  if (!v11) {
    goto LABEL_54;
  }
  id v12 = [v11 parseWithNSString:a2 withJavaTextParsePosition:v10];
  if (!v12) {
    return ~(unint64_t)[(JavaTextParsePosition *)v10 getErrorIndex];
  }
  int v13 = [v12 intValue];
  unsigned int v14 = 3600000 * v13;
  id v15 = (id)[(JavaTextParsePosition *)v10 getIndex];
  if ((int)v15 < (int)[a2 length] && objc_msgSend(a2, "charAtWithInt:", v15) == 58)
  {
    [(JavaTextParsePosition *)v10 setIndexWithInt:(v15 + 1)];
    id v16 = [*(id *)(a1 + 16) parseWithNSString:a2 withJavaTextParsePosition:v10];
    if (v16)
    {
      v14 += 60000 * [v16 intValue];
      goto LABEL_33;
    }
    return ~(unint64_t)[(JavaTextParsePosition *)v10 getErrorIndex];
  }
  if (v13 >= 24) {
    unsigned int v14 = 60000 * (v13 % 0x64u) + 3600000 * (v13 / 0x64u);
  }
LABEL_33:
  unsigned int v28 = *(void **)(a1 + 8);
  if (!v28) {
    goto LABEL_54;
  }
  if (v9 == 45) {
    int v29 = -v14;
  }
  else {
    int v29 = v14;
  }
  objc_msgSend(v28, "setTimeZoneWithJavaUtilTimeZone:", new_JavaUtilSimpleTimeZone_initWithInt_withNSString_(v29, (uint64_t)&stru_10048C1F8));
  return [(JavaTextParsePosition *)v10 getIndex];
}

JavaTextSimpleDateFormat *new_JavaTextSimpleDateFormat_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaTextSimpleDateFormat alloc];
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v2, a1, Default);
  return v2;
}

JavaTextSimpleDateFormat *new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(void *a1, void *a2)
{
  uint64_t v4 = [JavaTextSimpleDateFormat alloc];
  JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v4, a1, a2);
  return v4;
}

CFStringRef JavaMathConversion_bigInteger2StringWithJavaMathBigInteger_withInt_(uint64_t a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_90;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_90;
    }
  }
  int v4 = *(_DWORD *)(a1 + 20);
  if (!v4) {
    return @"0";
  }
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  unsigned int v6 = *(unsigned int **)(a1 + 8);
  if (v5 == 1)
  {
    if (v6)
    {
      uint64_t v7 = v6[2];
      if ((int)v7 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v7, 0);
      }
      if (v4 >= 0) {
        uint64_t v8 = v6[3];
      }
      else {
        uint64_t v8 = -(uint64_t)v6[3];
      }
      return JavaLangLong_toStringWithLong_withInt_(v8, a2);
    }
LABEL_90:
    JreThrowNullPointerException();
  }
  if (a2 == 10 || (a2 - 37) <= 0xFFFFFFDC)
  {
    return (const __CFString *)[(id)a1 description];
  }
  else
  {
    double v10 = JavaLangMath_logWithDouble_((double)(int)a2);
    double v11 = JavaLangMath_logWithDouble_(2.0);
    id v12 = [(id)a1 abs];
    if (!v12) {
      goto LABEL_90;
    }
    double v13 = (double)(int)[v12 bitLength] / (v10 / v11) + (double)(v4 >> 31);
    int v14 = (int)v13;
    if (v13 < 0.0) {
      unsigned int v15 = 0x80000000;
    }
    else {
      unsigned int v15 = 0x7FFFFFFF;
    }
    if (v14 == 0x80000000) {
      int v14 = v15;
    }
    int v57 = v14 + 1;
    id v16 = +[IOSCharArray arrayWithLength:v14 + 1];
    BOOL v17 = &OBJC_IVAR___IOSArray_size_;
    int v56 = v4;
    if (a2 == 16)
    {
      if ((int)v5 < 1)
      {
        LODWORD(v19) = v57;
      }
      else
      {
        uint64_t v18 = 0;
        LODWORD(v19) = v57;
        do
        {
          unsigned int v20 = v19 - 1;
          if ((int)v19 >= 1)
          {
            if (!v6) {
              goto LABEL_90;
            }
            int v21 = 0;
            uint64_t v19 = v19;
            if (v20 >= 7) {
              unsigned int v20 = 7;
            }
            int v22 = 4 * v20 + 4;
            do
            {
              uint64_t v23 = *(int *)((char *)v6 + *v17);
              uint64_t v24 = v17;
              if (v18 >= v23) {
                IOSArray_throwOutOfBoundsWithMsg(v23, v18);
              }
              __int16 v25 = JavaLangCharacter_forDigitWithInt_withInt_(((int)v6[v18 + 3] >> v21) & 0xF, 16);
              uint64_t v26 = *(int *)((char *)&v16->super.super.isa + *v24);
              BOOL v17 = v24;
              if (v19 > v26) {
                IOSArray_throwOutOfBoundsWithMsg(v26, (v19 - 1));
              }
              *((_WORD *)&v16->super.size_ + --v19 + 2) = v25;
              v21 += 4;
            }
            while (v22 != v21);
          }
          ++v18;
        }
        while (v18 != v5);
      }
    }
    else
    {
      uint64_t v27 = +[IOSIntArray arrayWithLength:(int)v5];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v6, 0, v27, 0, v5);
      if (!JavaMathConversion_digitFitInInt_) {
        goto LABEL_90;
      }
      uint64_t v28 = *(unsigned int *)(JavaMathConversion_digitFitInInt_ + 8);
      if ((int)v28 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v28, a2);
      }
      if (!JavaMathConversion_bigRadices_) {
        goto LABEL_90;
      }
      int v59 = *(_DWORD *)(JavaMathConversion_digitFitInInt_ + 12 + 4 * a2);
      uint64_t v29 = (a2 - 2);
      uint64_t v30 = *(unsigned int *)(JavaMathConversion_bigRadices_ + 8);
      if ((int)v29 >= (int)v30) {
        IOSArray_throwOutOfBoundsWithMsg(v30, (a2 - 2));
      }
      unsigned int v58 = *(_DWORD *)(JavaMathConversion_bigRadices_ + 12 + 4 * v29);
      int v31 = v57;
LABEL_46:
      int v60 = v5;
      int v32 = JavaMathDivision_divideArrayByIntWithIntArray_withIntArray_withInt_withInt_((uint64_t)v27, (uint64_t)v27, v5, v58);
      uint64_t v33 = (v31 - 1);
      uint64_t v34 = v33 + 1;
      uint64_t v35 = v33 - 1;
      int v36 = v59;
      do
      {
        int v37 = v33;
        uint64_t v38 = v35;
        int v39 = v32 / (int)a2;
        __int16 v40 = JavaLangCharacter_forDigitWithInt_withInt_(v32 % (int)a2, a2);
        int v31 = v34 - 1;
        uint64_t size = v16->super.size_;
        if (v34 - 1 < 0 || v31 >= (int)size) {
          IOSArray_throwOutOfBoundsWithMsg(size, v34 - 1);
        }
        *((_WORD *)&v16->super.size_ + v31 + 2) = v40;
        --v36;
        if (v34 == 1) {
          break;
        }
        LODWORD(v33) = v37 - 1;
        uint64_t v35 = v38 - 1;
        --v34;
        int v32 = v39;
      }
      while (v39);
      if (v31 < 1 || v36 <= 0)
      {
        BOOL v17 = &OBJC_IVAR___IOSArray_size_;
        int v43 = v60;
      }
      else
      {
        int v42 = 1;
        BOOL v17 = &OBJC_IVAR___IOSArray_size_;
        int v43 = v60;
        do
        {
          int v31 = v37 - 1;
          uint64_t v44 = v16->super.size_;
          if ((int)v44 < v37) {
            IOSArray_throwOutOfBoundsWithMsg(v44, (v37 - 1));
          }
          *((_WORD *)&v16->super.size_ + v38 + 2) = 48;
          if (v37 < 2) {
            break;
          }
          LODWORD(v38) = v38 - 1;
          --v37;
        }
        while (v42++ < v36);
      }
      uint64_t v46 = (v43 - 1);
      while (1)
      {
        uint64_t v47 = v46;
        BOOL v48 = __OFSUB__(v46, 1);
        uint64_t v46 = (v46 - 1);
        if ((int)v46 < 0 != v48) {
          break;
        }
        uint64_t v49 = v27->super.size_;
        if ((int)v47 >= (int)v49) {
          IOSArray_throwOutOfBoundsWithMsg(v49, v47);
        }
        if (*(&v27->super.size_ + v47 + 1))
        {
LABEL_71:
          LODWORD(v5) = v47 + 1;
          goto LABEL_46;
        }
      }
      if (v47) {
        goto LABEL_71;
      }
      uint64_t v50 = v27->super.size_;
      if ((int)v50 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v50, 0);
      }
      if (*(&v27->super.size_ + 1)) {
        goto LABEL_71;
      }
      LODWORD(v19) = v31;
    }
    int v51 = *v17;
    do
    {
      uint64_t v52 = *(unsigned int *)((char *)&v16->super.super.isa + v51);
      if ((v19 & 0x80000000) != 0 || (int)v19 >= (int)v52) {
        IOSArray_throwOutOfBoundsWithMsg(v52, (int)v19);
      }
      int v53 = *((unsigned __int16 *)&v16->super.size_ + (int)v19 + 2);
      LODWORD(v19) = v19 + 1;
    }
    while (v53 == 48);
    if (v56 == -1)
    {
      uint64_t v55 = *(unsigned int *)((char *)&v16->super.super.isa + v51);
      uint64_t v54 = (v19 - 2);
      if ((int)v19 - 2 < 0 || (int)v54 >= (int)v55) {
        IOSArray_throwOutOfBoundsWithMsg(v55, (v19 - 2));
      }
      *((_WORD *)&v16->super.size_ + (int)v54 + 2) = 45;
    }
    else
    {
      uint64_t v54 = (v19 - 1);
    }
    return (const __CFString *)+[NSString stringWithCharacters:v16 offset:v54 length:(v57 - v54)];
  }
}

void sub_100210C28()
{
}

__CFString *JavaMathConversion_toDecimalScaledStringWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if (atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_123;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_123;
    }
  }
  int v4 = *(_DWORD *)(a1 + 20);
  if (!v4)
  {
    if (a2 < 7) {
      return off_1004467D8[a2];
    }
    int v51 = new_JavaLangStringBuilder_init();
    uint64_t v52 = v51;
    if (a2 >= 0) {
      CFStringRef v53 = @"0E";
    }
    else {
      CFStringRef v53 = @"0E+";
    }
    [(JavaLangStringBuilder *)v51 appendWithNSString:v53];
    [(JavaLangStringBuilder *)v52 appendWithInt:-a2];
    uint64_t v54 = v52;
    goto LABEL_95;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  unsigned int v6 = *(unsigned int **)(a1 + 8);
  int v7 = 10 * v5 + 8;
  int v72 = 10 * v5;
  uint64_t v8 = +[IOSCharArray arrayWithLength:10 * (int)v5 + 9];
  int v73 = a2;
  int v71 = 10 * v5 + 9;
  if (v5 != 1)
  {
    id v16 = +[IOSIntArray arrayWithLength:(int)v5];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v6, 0, v16, 0, v5);
    int v70 = 10 * v5 + 8;
    int v17 = v70;
LABEL_17:
    uint64_t v18 = 0;
    int v19 = v5 - 1;
    if ((int)v5 - 1 >= 0)
    {
      uint64_t v20 = (v5 - 1);
      do
      {
        uint64_t size = v16->super.size_;
        if (v20 >= size) {
          IOSArray_throwOutOfBoundsWithMsg(size, v20);
        }
        int64_t v22 = JavaMathConversion_divideLongByBillionWithLong_((v18 << 32) | *((unsigned int *)&v16->super.size_ + v20 + 1));
        uint64_t v23 = v16->super.size_;
        if (v20 >= v23) {
          IOSArray_throwOutOfBoundsWithMsg(v23, v20);
        }
        *(&v16->super.size_ + v20 + 1) = v22;
        uint64_t v18 = v22 >> 32;
        BOOL v24 = v20-- <= 0;
      }
      while (!v24);
    }
    uint64_t v25 = (v17 - 1);
    uint64_t v26 = v25 + 1;
    int v27 = v17 - 2;
    int v28 = 9;
    do
    {
      int v29 = v25;
      unsigned int v30 = v27;
      int v17 = v26 - 1;
      uint64_t v31 = v8->super.size_;
      if (v26 - 1 < 0 || v17 >= (int)v31) {
        IOSArray_throwOutOfBoundsWithMsg(v31, v26 - 1);
      }
      *((_WORD *)&v8->super.size_ + v17 + 2) = (__int16)v18 % 10 + 48;
      --v28;
      if (v26 == 1) {
        break;
      }
      unsigned int v32 = v18 - 10;
      LODWORD(v25) = v25 - 1;
      --v27;
      --v26;
      LODWORD(v18) = (int)v18 / 10;
    }
    while (v32 < 0xFFFFFFED);
    if (v17 >= 1 && v28 > 0)
    {
      int v33 = 1;
      do
      {
        int v17 = v29 - 1;
        uint64_t v34 = v8->super.size_;
        if ((int)v34 < v29) {
          IOSArray_throwOutOfBoundsWithMsg(v34, (v29 - 1));
        }
        *((_WORD *)&v8->super.size_ + v30 + 2) = 48;
        if (v29 < 2) {
          break;
        }
        --v30;
        --v29;
        BOOL v24 = v33++ < v28;
      }
      while (v24);
    }
    while (1)
    {
      uint64_t v35 = v16->super.size_;
      if (v19 < 0 || v19 >= (int)v35) {
        IOSArray_throwOutOfBoundsWithMsg(v35, v19);
      }
      if (*(&v16->super.size_ + v19 + 1))
      {
        LODWORD(v5) = v19 + 1;
        goto LABEL_17;
      }
      if (!v19) {
        break;
      }
      --v19;
    }
    int v7 = v70;
    do
    {
      uint64_t v36 = v8->super.size_;
      if (v17 < 0 || v17 >= (int)v36) {
        IOSArray_throwOutOfBoundsWithMsg(v36, v17);
      }
      int v37 = *((unsigned __int16 *)&v8->super.size_ + v17++ + 2);
    }
    while (v37 == 48);
    uint64_t v13 = (v17 - 1);
    goto LABEL_54;
  }
  if (!v6) {
LABEL_123:
  }
    JreThrowNullPointerException();
  uint64_t v9 = v6[2];
  if ((int)v9 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v9, 0);
  }
  unint64_t v10 = v6[3];
  if ((v10 & 0x80000000) != 0)
  {
    LODWORD(v13) = v7;
    do
    {
      uint64_t v55 = v8->super.size_;
      uint64_t v13 = (v13 - 1);
      if ((int)v13 < 0 || (int)v13 >= (int)v55) {
        IOSArray_throwOutOfBoundsWithMsg(v55, v13);
      }
      *((_WORD *)&v8->super.size_ + (int)v13 + 2) = v10 % 0xA + 48;
      BOOL v14 = v10 >= 0xA;
      v10 /= 0xAuLL;
    }
    while (v14);
  }
  else
  {
    LODWORD(v11) = v7;
    do
    {
      uint64_t v12 = v8->super.size_;
      uint64_t v11 = (v11 - 1);
      if ((int)v11 < 0 || (int)v11 >= (int)v12) {
        IOSArray_throwOutOfBoundsWithMsg(v12, v11);
      }
      *((_WORD *)&v8->super.size_ + (int)v11 + 2) = v10 % 0xA + 48;
      uint64_t v13 = v11;
      BOOL v14 = v10 >= 0xA;
      LODWORD(v10) = v10 / 0xA;
    }
    while (v14);
  }
LABEL_54:
  uint64_t v38 = (v7 - v13);
  if (!v73)
  {
    if (v4 < 0)
    {
      uint64_t v56 = v8->super.size_;
      uint64_t v13 = (v13 - 1);
      if ((int)v13 < 0 || (int)v13 >= (int)v56) {
        IOSArray_throwOutOfBoundsWithMsg(v56, v13);
      }
      *((_WORD *)&v8->super.size_ + (int)v13 + 2) = 45;
      uint64_t v38 = (v7 - v13);
    }
    int v57 = v8;
    uint64_t v58 = v13;
    uint64_t v59 = v38;
    goto LABEL_119;
  }
  signed int v39 = v38 + ~v73;
  if (v73 >= 1 && v39 >= -6)
  {
    if (v39 < 0)
    {
      if ((1 - v39) >= 3)
      {
        do
        {
          uint64_t v60 = v8->super.size_;
          uint64_t v13 = (v13 - 1);
          if ((int)v13 < 0 || (int)v13 >= (int)v60) {
            IOSArray_throwOutOfBoundsWithMsg(v60, v13);
          }
          *((_WORD *)&v8->super.size_ + (int)v13 + 2) = 48;
        }
        while (v72 - v73 + 8 != v13);
      }
      uint64_t v65 = v8->super.size_;
      int v66 = v13 - 1;
      if ((int)v13 - 1 < 0 || v66 >= (int)v65) {
        IOSArray_throwOutOfBoundsWithMsg(v65, v66);
      }
      *((_WORD *)&v8->super.size_ + v66 + 2) = 46;
      uint64_t v67 = v8->super.size_;
      uint64_t v68 = (v13 - 2);
      if ((int)v13 - 2 < 0 || (int)v68 >= (int)v67) {
        IOSArray_throwOutOfBoundsWithMsg(v67, (v13 - 2));
      }
      *((_WORD *)&v8->super.size_ + (int)v68 + 2) = 48;
      if (v4 < 0)
      {
        uint64_t v69 = v8->super.size_;
        uint64_t v68 = (v13 - 3);
        if ((int)v13 - 3 < 0 || (int)v68 >= (int)v69) {
          IOSArray_throwOutOfBoundsWithMsg(v69, v68);
        }
        *((_WORD *)&v8->super.size_ + (int)v68 + 2) = 45;
      }
      uint64_t v59 = (v7 - v68);
      int v57 = v8;
      uint64_t v58 = v68;
    }
    else
    {
      int v40 = v7 + ~v73;
      int v41 = v72 + 7;
      if (v72 + 7 >= v40)
      {
        do
        {
          int v61 = v41;
          uint64_t v62 = v8->super.size_;
          if (v41 < 0 || v41 >= (int)v62) {
            IOSArray_throwOutOfBoundsWithMsg(v62, v41);
          }
          int v63 = v41 + 1;
          if (v41 + 1 < 0 || v63 >= (int)v62) {
            IOSArray_throwOutOfBoundsWithMsg(v62, v63);
          }
          *((_WORD *)&v8->super.size_ + v63 + 2) = *((_WORD *)&v8->super.size_ + v41-- + 2);
        }
        while (v61 - 1 >= v40);
      }
      uint64_t v42 = v8->super.size_;
      int v43 = v7 - v73;
      if (v7 - v73 < 0 || v43 >= (int)v42) {
        IOSArray_throwOutOfBoundsWithMsg(v42, v43);
      }
      *((_WORD *)&v8->super.size_ + v7 - v73 + 2) = 46;
      if (v4 < 0)
      {
        uint64_t v64 = v8->super.size_;
        uint64_t v13 = (v13 - 1);
        if ((int)v13 < 0 || (int)v13 >= (int)v64) {
          IOSArray_throwOutOfBoundsWithMsg(v64, v13);
        }
        *((_WORD *)&v8->super.size_ + (int)v13 + 2) = 45;
      }
      uint64_t v59 = (v71 - v13);
      int v57 = v8;
      uint64_t v58 = v13;
    }
LABEL_119:
    return (__CFString *)+[NSString stringWithCharacters:v57 offset:v58 length:v59];
  }
  uint64_t v44 = new_JavaLangStringBuilder_initWithInt_(v72 + ~v13 + 24);
  uint64_t v45 = v44;
  if (v4 < 0) {
    [(JavaLangStringBuilder *)v44 appendWithChar:45];
  }
  if (v7 - ((int)v13 + 1) < 1)
  {
    BOOL v48 = v45;
    uint64_t v49 = v8;
    uint64_t v50 = v13;
    uint64_t v47 = (v7 - v13);
  }
  else
  {
    uint64_t v46 = v8->super.size_;
    if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v46) {
      IOSArray_throwOutOfBoundsWithMsg(v46, v13);
    }
    [(JavaLangStringBuilder *)v45 appendWithChar:*((unsigned __int16 *)&v8->super.size_ + (int)v13 + 2)];
    [(JavaLangStringBuilder *)v45 appendWithChar:46];
    uint64_t v47 = (v38 - 1);
    BOOL v48 = v45;
    uint64_t v49 = v8;
    uint64_t v50 = (v13 + 1);
  }
  [(JavaLangStringBuilder *)v48 appendWithCharArray:v49 withInt:v50 withInt:v47];
  [(JavaLangStringBuilder *)v45 appendWithChar:69];
  if (v39 >= 1) {
    [(JavaLangStringBuilder *)v45 appendWithChar:43];
  }
  [(JavaLangStringBuilder *)v45 appendWithNSString:JavaLangInteger_toStringWithInt_(v39)];
  uint64_t v54 = v45;
LABEL_95:
  return (__CFString *)[(JavaLangStringBuilder *)v54 description];
}

__CFString *JavaMathConversion_toDecimalScaledStringWithLong_withInt_(uint64_t a1, int a2)
{
  if (atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_70:
    if (a2 < 7) {
      return off_1004467D8[a2];
    }
    int v41 = new_JavaLangStringBuilder_init();
    uint64_t v42 = v41;
    if (a2 < 0)
    {
      [(JavaLangStringBuilder *)v41 appendWithNSString:@"0E+"];
      if (a2 == 0x80000000)
      {
        CFStringRef v43 = @"2147483648";
LABEL_77:
        [(JavaLangStringBuilder *)v42 appendWithNSString:v43];
        int v33 = v42;
        goto LABEL_78;
      }
    }
    else
    {
      [(JavaLangStringBuilder *)v41 appendWithNSString:@"0E"];
    }
    CFStringRef v43 = (const __CFString *)JavaLangInteger_toStringWithInt_(-a2);
    goto LABEL_77;
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_70;
  }
LABEL_3:
  if (a1 >= 0) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = -a1;
  }
  uint64_t v5 = +[IOSCharArray arrayWithLength:19];
  int v6 = 0;
  do
  {
    uint64_t size = v5->super.size_;
    int v8 = v6 + 17;
    uint64_t v9 = v6 + 17;
    if (v6 + 17 < 0 || v8 >= (int)size) {
      IOSArray_throwOutOfBoundsWithMsg(size, v8);
    }
    *((_WORD *)&v5->super.size_ + v8 + 2) = (__int16)v4 % 10 + 48;
    unint64_t v10 = v4 + 9;
    --v6;
    v4 /= 10;
  }
  while (v10 > 0x12);
  uint64_t v11 = (v6 + 18);
  if (!a2)
  {
    if (a1 < 0)
    {
      uint64_t v19 = v5->super.size_;
      uint64_t v11 = (v6 + 17);
      if (v6 + 17 < 0 || (int)v11 >= (int)v19) {
        IOSArray_throwOutOfBoundsWithMsg(v19, (v6 + 17));
      }
      *((_WORD *)&v5->super.size_ + (int)v11 + 2) = 45;
    }
    int v18 = 18;
    goto LABEL_29;
  }
  uint64_t v12 = v8 + (uint64_t)a2;
  int v13 = 17 - v12;
  int v14 = v6 + 19;
  if (a2 >= 1 && v12 <= 23)
  {
    if (v12 >= 18)
    {
      if (v12 != 18)
      {
        int v38 = 3;
        do
        {
          uint64_t v39 = v5->super.size_;
          uint64_t v11 = (v11 - 1);
          if ((int)v11 < 0 || (int)v11 >= (int)v39) {
            IOSArray_throwOutOfBoundsWithMsg(v39, v11);
          }
          *((_WORD *)&v5->super.size_ + (int)v11 + 2) = 48;
        }
        while (v12 - 16 > v38++);
      }
      uint64_t v27 = v5->super.size_;
      int v28 = v11 - 1;
      if ((int)v11 - 1 < 0 || v28 >= (int)v27) {
        IOSArray_throwOutOfBoundsWithMsg(v27, v28);
      }
      *((_WORD *)&v5->super.size_ + v28 + 2) = 46;
      uint64_t v29 = v5->super.size_;
      uint64_t v30 = (v11 - 2);
      if ((int)v11 - 2 < 0 || (int)v30 >= (int)v29) {
        IOSArray_throwOutOfBoundsWithMsg(v29, (v11 - 2));
      }
      *((_WORD *)&v5->super.size_ + (int)v30 + 2) = 48;
      if (a1 < 0)
      {
        uint64_t v31 = v5->super.size_;
        uint64_t v30 = (v11 - 3);
        if ((int)v11 - 3 < 0 || (int)v30 >= (int)v31) {
          IOSArray_throwOutOfBoundsWithMsg(v31, (v11 - 3));
        }
        *((_WORD *)&v5->super.size_ + (int)v30 + 2) = 45;
      }
      uint64_t v20 = (18 - v30);
      int v21 = v5;
      uint64_t v22 = v30;
      goto LABEL_46;
    }
    if ((int)v11 + v13 <= 17)
    {
      int v34 = 17;
      do
      {
        int v35 = v34;
        uint64_t v36 = v5->super.size_;
        if (v34 < 0 || v34 >= (int)v36) {
          IOSArray_throwOutOfBoundsWithMsg(v36, v34);
        }
        int v37 = v34 + 1;
        if (v34 + 1 < 0 || v37 >= (int)v36) {
          IOSArray_throwOutOfBoundsWithMsg(v36, v37);
        }
        *((_WORD *)&v5->super.size_ + v37 + 2) = *((_WORD *)&v5->super.size_ + v34-- + 2);
      }
      while (v35 - 1 >= (int)v11 + v13);
    }
    uint64_t v15 = v5->super.size_;
    int v16 = v14 + v13;
    if (v14 + v13 < 0 || v16 >= (int)v15) {
      IOSArray_throwOutOfBoundsWithMsg(v15, v16);
    }
    *((_WORD *)&v5->super.size_ + v14 + v13 + 2) = 46;
    if (a1 < 0)
    {
      uint64_t v17 = v5->super.size_;
      uint64_t v11 = (v6 + 17);
      if (v6 + 17 < 0 || (int)v11 >= (int)v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, (v6 + 17));
      }
      *((_WORD *)&v5->super.size_ + (int)v11 + 2) = 45;
    }
    int v18 = 19;
LABEL_29:
    uint64_t v20 = (v18 - v11);
    int v21 = v5;
    uint64_t v22 = v11;
LABEL_46:
    return (__CFString *)+[NSString stringWithCharacters:v21 offset:v22 length:v20];
  }
  uint64_t v23 = new_JavaLangStringBuilder_initWithInt_(15 - v6);
  BOOL v24 = v23;
  if (a1 < 0) {
    [(JavaLangStringBuilder *)v23 appendWithChar:45];
  }
  if (v6 > -2)
  {
    int v26 = 19;
  }
  else
  {
    uint64_t v25 = v5->super.size_;
    if ((v9 & 0x80000000) != 0 || (int)v11 >= (int)v25) {
      IOSArray_throwOutOfBoundsWithMsg(v25, (v6 + 18));
    }
    [(JavaLangStringBuilder *)v24 appendWithChar:*((unsigned __int16 *)&v5->super.size_ + v9 + 2)];
    [(JavaLangStringBuilder *)v24 appendWithChar:46];
    int v26 = 18;
    uint64_t v11 = (v6 + 19);
  }
  [(JavaLangStringBuilder *)v24 appendWithCharArray:v5 withInt:v11 withInt:(v26 - v6 - 19)];
  [(JavaLangStringBuilder *)v24 appendWithChar:69];
  if (v12 <= 16) {
    [(JavaLangStringBuilder *)v24 appendWithChar:43];
  }
  [(JavaLangStringBuilder *)v24 appendWithNSString:JavaLangLong_toStringWithLong_(17 - v12)];
  int v33 = v24;
LABEL_78:
  return (__CFString *)[(JavaLangStringBuilder *)v33 description];
}

unint64_t JavaMathConversion_divideLongByBillionWithLong_(unint64_t a1)
{
  if ((atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (a1 / 0x3B9ACA00) | ((a1 % 0x3B9ACA00) << 32);
}

double JavaMathConversion_bigInteger2DoubleWithJavaMathBigInteger_(uint64_t a1)
{
  if (atomic_load_explicit(JavaMathConversion__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_30;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_30;
    }
  }
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2 < 2) {
    return (double)(uint64_t)[(id)a1 longLongValue];
  }
  if (v2 == 2)
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      goto LABEL_30;
    }
    uint64_t v4 = *(unsigned int *)(v3 + 8);
    if ((int)v4 <= 1) {
      IOSArray_throwOutOfBoundsWithMsg(v4, 1);
    }
    if (*(int *)(v3 + 16) >= 1) {
      return (double)(uint64_t)[(id)a1 longLongValue];
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if (v2 >= 33) {
    goto LABEL_11;
  }
  id v8 = [(id)a1 abs];
  if (!v8
    || (unsigned int v9 = [v8 bitLength], (v10 = objc_msgSend((id)a1, "abs")) == 0)
    || (int v11 = v9 - 54, (v12 = [v10 shiftRightWithInt:v9 - 54]) == 0))
  {
LABEL_30:
    JreThrowNullPointerException();
  }
  uint64_t v13 = v9 - 1;
  unint64_t v14 = (unint64_t)[v12 longLongValue];
  unint64_t v15 = v14 & 0x1FFFFFFFFFFFFFLL;
  if (v13 == 1023)
  {
    if (v15 == 0x1FFFFFFFFFFFFELL)
    {
      BOOL v6 = *(_DWORD *)(a1 + 20) <= 0;
      double result = -1.79769313e308;
      double v7 = 1.79769313e308;
LABEL_12:
      if (!v6) {
        return v7;
      }
      return result;
    }
    if (v15 == 0x1FFFFFFFFFFFFFLL)
    {
LABEL_11:
      BOOL v6 = *(_DWORD *)(a1 + 20) <= 0;
      double result = -INFINITY;
      double v7 = INFINITY;
      goto LABEL_12;
    }
  }
  if ((v14 & 1) != 0
    && ((v14 & 2) != 0 || JavaMathBitLevel_nonZeroDroppedBitsWithInt_withIntArray_(v11, *(void *)(a1 + 8))))
  {
    v15 += 2;
  }
  unint64_t v16 = ((v13 << 52) + 0x3FF0000000000000) & 0x7FF0000000000000 | ((unint64_t)(*(_DWORD *)(a1 + 20) & 0x80000000) >> 31 << 63) | (v15 >> 1);
  return JavaLangDouble_longBitsToDoubleWithLong_(v16);
}

void sub_100212E54(id a1)
{
  qword_100560EA8 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangDeprecated);
}

JavaUtilFormatterClosedException *new_JavaUtilFormatterClosedException_init()
{
  uint64_t v0 = [JavaUtilFormatterClosedException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

uint64_t JavaIoSerializable_class_()
{
  if (qword_100560EC0 != -1) {
    dispatch_once(&qword_100560EC0, &stru_100446D60);
  }
  return qword_100560EB8;
}

void sub_100212F6C(id a1)
{
  qword_100560EB8 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaIoSerializable);
}

uint64_t LibcoreUtilObjects_equalWithId_withId_(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (result) {
    return (uint64_t)[(id)result isEqual:a2];
  }
  return result;
}

NSString *LibcoreUtilObjects_toStringWithId_(void *a1)
{
  if (!a1
    || (id v2 = [a1 getClass],
        uint64_t v3 = new_JavaLangStringBuilder_init(),
        (id v4 = -[JavaLangStringBuilder appendWithNSString:](v3, "appendWithNSString:", [v2 getSimpleName])) == 0)
    || ([v4 appendWithChar:91], (uint64_t v5 = (char *)objc_msgSend(v2, "getDeclaredFields")) == 0))
  {
LABEL_53:
    JreThrowNullPointerException();
  }
  BOOL v6 = (void **)(v5 + 24);
  unint64_t v7 = (unint64_t)&v5[8 * *((int *)v5 + 2) + 24];
  if ((unint64_t)(v5 + 24) < v7)
  {
    int v8 = 0;
    do
    {
      id v10 = *v6++;
      unsigned int v9 = v10;
      if (!v10) {
        goto LABEL_53;
      }
      if (([v9 getModifiers] & 0x88) == 0)
      {
        [v9 setAccessibleWithBoolean:1];
        id v11 = [v9 getWithId:a1];
        if (v8 >= 1) {
          [(JavaLangStringBuilder *)v3 appendWithChar:44];
        }
        -[JavaLangStringBuilder appendWithNSString:](v3, "appendWithNSString:", [v9 getName]);
        [(JavaLangStringBuilder *)v3 appendWithChar:61];
        if (!v11) {
LABEL_54:
        }
          JreThrowNullPointerException();
        ++v8;
        if (objc_msgSend(objc_msgSend(v11, "getClass"), "isArray"))
        {
          id v12 = [v11 getClass];
          if (v12 == (id)IOSClass_arrayType((uint64_t)+[IOSClass BOOLeanClass], 1u))
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0) {
              goto LABEL_55;
            }
            CFStringRef v20 = JavaUtilArrays_toStringWithBooleanArray_((uint64_t)v11);
          }
          else
          {
            id v13 = [v11 getClass];
            if (v13 == (id)IOSClass_arrayType((uint64_t)+[IOSClass byteClass], 1u))
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0) {
                goto LABEL_55;
              }
              CFStringRef v20 = JavaUtilArrays_toStringWithByteArray_((uint64_t)v11);
            }
            else
            {
              id v14 = [v11 getClass];
              if (v14 == (id)IOSClass_arrayType((uint64_t)+[IOSClass charClass], 1u))
              {
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) == 0) {
                  goto LABEL_55;
                }
                CFStringRef v20 = JavaUtilArrays_toStringWithCharArray_((uint64_t)v11);
              }
              else
              {
                id v15 = [v11 getClass];
                if (v15 == (id)IOSClass_arrayType((uint64_t)+[IOSClass doubleClass], 1u))
                {
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) == 0) {
                    goto LABEL_55;
                  }
                  CFStringRef v20 = JavaUtilArrays_toStringWithDoubleArray_((uint64_t)v11);
                }
                else
                {
                  id v16 = [v11 getClass];
                  if (v16 == (id)IOSClass_arrayType((uint64_t)+[IOSClass floatClass], 1u))
                  {
                    objc_opt_class();
                    if ((objc_opt_isKindOfClass() & 1) == 0) {
                      goto LABEL_55;
                    }
                    CFStringRef v20 = JavaUtilArrays_toStringWithFloatArray_((uint64_t)v11);
                  }
                  else
                  {
                    id v17 = [v11 getClass];
                    if (v17 == (id)IOSClass_arrayType((uint64_t)+[IOSClass intClass], 1u))
                    {
                      objc_opt_class();
                      if ((objc_opt_isKindOfClass() & 1) == 0) {
                        goto LABEL_55;
                      }
                      CFStringRef v20 = JavaUtilArrays_toStringWithIntArray_((uint64_t)v11);
                    }
                    else
                    {
                      id v18 = [v11 getClass];
                      if (v18 == (id)IOSClass_arrayType((uint64_t)+[IOSClass longClass], 1u))
                      {
                        objc_opt_class();
                        if ((objc_opt_isKindOfClass() & 1) == 0) {
                          goto LABEL_55;
                        }
                        CFStringRef v20 = JavaUtilArrays_toStringWithLongArray_((uint64_t)v11);
                      }
                      else
                      {
                        id v19 = [v11 getClass];
                        if (v19 == (id)IOSClass_arrayType((uint64_t)+[IOSClass shortClass], 1u))
                        {
                          objc_opt_class();
                          if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_55:
                          }
                            JreThrowClassCastException();
                          CFStringRef v20 = JavaUtilArrays_toStringWithShortArray_((uint64_t)v11);
                        }
                        else
                        {
                          objc_opt_class();
                          if ((objc_opt_isKindOfClass() & 1) == 0) {
                            goto LABEL_55;
                          }
                          CFStringRef v20 = JavaUtilArrays_toStringWithNSObjectArray_((uint64_t)v11);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          [(JavaLangStringBuilder *)v3 appendWithNSString:v20];
          continue;
        }
        id v21 = [v11 getClass];
        if (v21 == (id)JavaLangCharacter_class_())
        {
          id v23 = [(JavaLangStringBuilder *)v3 appendWithChar:39];
          if (!v23) {
            goto LABEL_54;
          }
          id v24 = [v23 appendWithId:v11];
          if (!v24) {
            goto LABEL_54;
          }
          uint64_t v25 = 39;
          goto LABEL_33;
        }
        id v22 = [v11 getClass];
        if (v22 == (id)NSString_class_())
        {
          id v26 = [(JavaLangStringBuilder *)v3 appendWithChar:34];
          if (!v26) {
            goto LABEL_54;
          }
          id v24 = [v26 appendWithId:v11];
          if (!v24) {
            goto LABEL_54;
          }
          uint64_t v25 = 34;
LABEL_33:
          [v24 appendWithChar:v25];
          continue;
        }
        [(JavaLangStringBuilder *)v3 appendWithId:v11];
      }
    }
    while ((unint64_t)v6 < v7);
  }
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"]"];
  return [(JavaLangStringBuilder *)v3 description];
}

void sub_1002134A8(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    uint64_t v3 = new_JavaLangAssertionError_initWithId_(v2);
    objc_exception_throw(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002134D0()
{
}

uint64_t JavaUtilNavigableMap_class_()
{
  if (qword_100560ED0 != -1) {
    dispatch_once(&qword_100560ED0, &stru_100447310);
  }
  return qword_100560EC8;
}

void sub_10021353C(id a1)
{
  qword_100560EC8 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilNavigableMap);
}

id JavaUtilDate_initWithInt_withInt_withInt_(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v8 = new_JavaUtilGregorianCalendar_initWithBoolean_();
  [(JavaUtilCalendar *)v8 setWithInt:(a2 + 1900) withInt:a3 withInt:a4];
  id result = [(JavaUtilCalendar *)v8 getTimeInMillis];
  *(void *)(a1 + 8) = result;
  return result;
}

id JavaUtilDate_initWithInt_withInt_withInt_withInt_withInt_(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = new_JavaUtilGregorianCalendar_initWithBoolean_();
  [(JavaUtilCalendar *)v12 setWithInt:(a2 + 1900) withInt:a3 withInt:a4 withInt:a5 withInt:a6];
  id result = [(JavaUtilCalendar *)v12 getTimeInMillis];
  *(void *)(a1 + 8) = result;
  return result;
}

id JavaUtilDate_initWithInt_withInt_withInt_withInt_withInt_withInt_(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v14 = new_JavaUtilGregorianCalendar_initWithBoolean_();
  [(JavaUtilCalendar *)v14 setWithInt:(a2 + 1900) withInt:a3 withInt:a4 withInt:a5 withInt:a6 withInt:a7];
  id result = [(JavaUtilCalendar *)v14 getTimeInMillis];
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100213B90(void *a1, uint64_t a2)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
LABEL_14:
    }
      JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_14;
  }
  uint64_t v4 = *(unsigned int *)(a2 + 8);
  id v5 = [a1 length];
  if ((int)v4 < 1) {
    return 0xFFFFFFFFLL;
  }
  id v6 = v5;
  uint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = *(int *)(a2 + 8);
    if (v7 >= v8) {
      IOSArray_throwOutOfBoundsWithMsg(v8, v7);
    }
    if ([a1 regionMatches:1 thisOffset:0 aString:*(void *)(a2 + 24 + 8 * v7) otherOffset:0 count:v6])break; {
    if (v4 == ++v7)
    }
      return 0xFFFFFFFFLL;
  }
  return v7;
}

void sub_100213C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  CFStringRef v8 = JreStrcat("$$", a2, a3, a4, a5, a6, a7, a8, @"Parse error: ");
  unsigned int v9 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v8);
  objc_exception_throw(v9);
}

int64_t JavaUtilDate_parseWithNSString_(void *a1)
{
  uint64_t v1 = a1;
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (v1) {
      goto LABEL_3;
    }
LABEL_151:
    uint64_t v62 = new_JavaLangIllegalArgumentException_initWithNSString_(@"The string argument is null");
    objc_exception_throw(v62);
  }
  if (!a1) {
    goto LABEL_151;
  }
LABEL_3:
  int v2 = [v1 length];
  int v73 = new_JavaLangStringBuilder_init();
  if (v2 < 0) {
    goto LABEL_153;
  }
  int v10 = 0;
  int v67 = 0;
  char v68 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  int v13 = 0;
  unsigned int v63 = -1;
  unsigned int v64 = -1;
  unsigned int v65 = -1;
  int v66 = -1;
  unsigned int v69 = -1;
  int v70 = 0;
  int v71 = -1;
  int v72 = v1;
  do
  {
    if ((int)v12 >= v2)
    {
      uint64_t v14 = 13;
    }
    else
    {
      uint64_t v14 = (uint64_t)[v1 charAtWithInt:v12];
      if (v14 == 40) {
        ++v13;
      }
    }
    uint64_t v15 = (v12 + 1);
    if (v13 >= 1)
    {
      v13 -= v14 == 41;
      if (v13) {
        goto LABEL_121;
      }
      uint64_t v14 = 32;
LABEL_18:
      if ((JavaLangCharacter_isSpaceWithChar_(v14) & 1) == 0
        && [@",+-:/" indexOf:v14] == -1)
      {
        goto LABEL_153;
      }
      int v16 = 0;
      goto LABEL_21;
    }
    if ((unsigned __int16)((v14 & 0xFFDF) - 65) >= 0x1Au)
    {
      if ((v14 - 48) < 0xA)
      {
        if (v11 != 1)
        {
          int isSpaceWithChar = JavaLangCharacter_isSpaceWithChar_(v14);
          LOBYTE(v16) = 0;
          int v11 = 2;
LABEL_114:
          int v17 = 1;
          int v49 = v10;
          goto LABEL_116;
        }
        int v17 = 1;
        int v11 = 2;
        goto LABEL_38;
      }
      goto LABEL_18;
    }
    int v16 = 1;
LABEL_21:
    if (v11 != 1)
    {
      if (v11 != 2)
      {
        int v17 = 0;
        int v11 = v16;
        goto LABEL_104;
      }
      id v18 = [(JavaLangStringBuilder *)v73 description];
      int v26 = JavaLangInteger_parseIntWithNSString_(v18, v19, v20, v21, v22, v23, v24, v25);
      [(JavaLangAbstractStringBuilder *)v73 setLengthWithInt:0];
      if ((unsigned __int16)v10 == 45 || (unsigned __int16)v10 == 43)
      {
        if (v70) {
          goto LABEL_152;
        }
        if (v14 == 58)
        {
          uint64_t v27 = (v12 + 3);
          id v28 = [v72 substring:v15 endIndex:v27];
          int v36 = JavaLangInteger_parseIntWithNSString_(v28, v29, v30, v31, v32, v33, v34, v35);
          if ((unsigned __int16)v10 == 45) {
            int v37 = -v36;
          }
          else {
            int v37 = v36;
          }
          int v67 = v37;
          uint64_t v15 = v27;
        }
        int v17 = 0;
        if ((unsigned __int16)v10 == 45) {
          int v38 = -v26;
        }
        else {
          int v38 = v26;
        }
        int v70 = v38;
        char v68 = 1;
        int v11 = v16;
        int v10 = 0;
        goto LABEL_103;
      }
      if (v26 >= 70)
      {
        if (v71 != -1
          || (JavaLangCharacter_isSpaceWithChar_(v14) & 1) == 0
          && (v14 > 0x2F || ((1 << v14) & 0x900000002000) == 0))
        {
          goto LABEL_152;
        }
LABEL_55:
        int v17 = 0;
        int v11 = v16;
        int v71 = v26;
        goto LABEL_103;
      }
      if (v14 == 47)
      {
        if (v65 != -1)
        {
          BOOL v47 = v64 == -1;
          unsigned int v64 = v26;
          int v26 = v66;
          if (!v47) {
            goto LABEL_152;
          }
          goto LABEL_92;
        }
        unsigned int v65 = v26 - 1;
      }
      else
      {
        if (v14 != 58)
        {
          if ((JavaLangCharacter_isSpaceWithChar_(v14) & 1) != 0
            || v14 <= 0x2D && ((1 << v14) & 0x300000002000) != 0)
          {
            if (v69 != -1 && v66 == -1)
            {
              int v17 = 0;
              int v11 = v16;
              int v66 = v26;
              goto LABEL_103;
            }
            if (v66 != -1 && v63 == -1)
            {
              int v17 = 0;
              int v11 = v16;
              unsigned int v63 = v26;
              goto LABEL_103;
            }
            if (v64 == -1)
            {
              int v17 = 0;
              int v11 = v16;
              unsigned int v64 = v26;
              goto LABEL_103;
            }
            if (v71 != -1) {
              goto LABEL_152;
            }
          }
          else if (v71 != -1 || v65 == -1 || v64 == -1)
          {
            goto LABEL_152;
          }
          goto LABEL_55;
        }
        if (v69 != -1)
        {
          if (v66 != -1) {
            goto LABEL_152;
          }
          goto LABEL_92;
        }
        unsigned int v69 = v26;
      }
      int v26 = v66;
LABEL_92:
      int isSpaceWithChar = JavaLangCharacter_isSpaceWithChar_(v14);
      int v17 = 0;
      int v49 = 0;
      int v66 = v26;
      int v11 = v16;
      uint64_t v1 = v72;
      goto LABEL_116;
    }
    int v17 = 0;
    int v11 = v16;
    if (v16)
    {
      LOBYTE(v16) = 1;
      goto LABEL_104;
    }
LABEL_38:
    uint64_t v39 = [(JavaLangStringBuilder *)v73 description];
    if (!v39) {
      goto LABEL_149;
    }
    int v40 = v39;
    if ((atomic_load_explicit(JavaUtilLocale__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    id v41 = [(NSString *)v40 uppercaseStringWithJRELocale:JavaUtilLocale_US_];
    [(JavaLangAbstractStringBuilder *)v73 setLengthWithInt:0];
    if (!v41) {
LABEL_149:
    }
      JreThrowNullPointerException();
    if ([v41 length] == 1) {
LABEL_152:
    }
      sub_100213C98((uint64_t)v72, v3, v4, v5, v6, v7, v8, v9);
    if ([v41 isEqual:@"AM"])
    {
      if (v69 == 12)
      {
        LOBYTE(v16) = 0;
        unsigned int v69 = 0;
LABEL_103:
        uint64_t v1 = v72;
        goto LABEL_104;
      }
      uint64_t v1 = v72;
      if (v69 - 13 <= 0xFFFFFFF3) {
        goto LABEL_153;
      }
      LOBYTE(v16) = 0;
    }
    else
    {
      if (![v41 isEqual:@"PM"])
      {
        if ((atomic_load_explicit(JavaUtilLocale__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v44 = new_JavaTextDateFormatSymbols_initWithJavaUtilLocale_((void *)JavaUtilLocale_US_);
        id v45 = [(JavaTextDateFormatSymbols *)v44 getWeekdays];
        id v46 = [(JavaTextDateFormatSymbols *)v44 getMonths];
        if (sub_100213B90(v41, (uint64_t)v45) == -1)
        {
          if (v65 != -1 || (unsigned int v48 = sub_100213B90(v41, (uint64_t)v46), v48 == -1))
          {
            if (([v41 isEqual:@"GMT"] & 1) != 0
              || ([v41 isEqual:@"UT"] & 1) != 0
              || ([v41 isEqual:@"UTC"] & 1) != 0)
            {
              LOBYTE(v16) = 0;
              int v70 = 0;
            }
            else
            {
              int v70 = sub_100214BA4(v41);
              if (!v70) {
                goto LABEL_152;
              }
              LOBYTE(v16) = 0;
            }
            char v68 = 1;
          }
          else
          {
            LOBYTE(v16) = 0;
            unsigned int v65 = v48;
          }
        }
        else
        {
          LOBYTE(v16) = 0;
        }
        goto LABEL_103;
      }
      unsigned int v42 = v69;
      uint64_t v1 = v72;
      if (v69 == 12)
      {
        unsigned int v42 = 0;
      }
      else if (v69 - 13 <= 0xFFFFFFF3)
      {
        goto LABEL_153;
      }
      LOBYTE(v16) = 0;
      unsigned int v69 = v42 + 12;
    }
LABEL_104:
    if (v14 == 43)
    {
      int v10 = 43;
      if ((v16 & 1) == 0) {
        goto LABEL_119;
      }
      goto LABEL_120;
    }
    if (v14 == 45 && v71 != -1)
    {
      uint64_t v14 = 45;
      int v10 = 45;
      if ((v16 & 1) == 0) {
        goto LABEL_119;
      }
      goto LABEL_120;
    }
    int isSpaceWithChar = JavaLangCharacter_isSpaceWithChar_(v14);
    if (v14 == 44) {
      int isSpaceWithChar = 1;
    }
    if (v17) {
      goto LABEL_114;
    }
    int v49 = 0;
LABEL_116:
    if (!isSpaceWithChar) {
      int v10 = v49;
    }
    if ((v16 & 1) == 0)
    {
LABEL_119:
      if (!v17) {
        goto LABEL_121;
      }
    }
LABEL_120:
    [(JavaLangStringBuilder *)v73 appendWithChar:v14];
LABEL_121:
    uint64_t v12 = v15;
  }
  while ((int)v15 <= v2);
  if (v71 == -1 || v65 == -1 || v64 == -1) {
LABEL_153:
  }
    sub_100213C98((uint64_t)v1, v3, v4, v5, v6, v7, v8, v9);
  if (v69 == -1) {
    uint64_t v50 = 0;
  }
  else {
    uint64_t v50 = v69;
  }
  if (v66 == -1) {
    int v51 = 0;
  }
  else {
    int v51 = v66;
  }
  if (v63 == -1) {
    uint64_t v52 = 0;
  }
  else {
    uint64_t v52 = v63;
  }
  int v53 = v71 + 1900;
  if (v71 >= 100) {
    int v53 = v71;
  }
  if (v71 >= dword_100560ED8 - 80) {
    int v54 = v53;
  }
  else {
    int v54 = v71 + 2000;
  }
  uint64_t v55 = (v51 - v67);
  if (v68)
  {
    int v56 = v70 / 100;
    if ((v70 - 24) <= 0xFFFFFFD0)
    {
      uint64_t v57 = (v55 + 100 * (v70 / 100) - v70);
    }
    else
    {
      int v56 = v70;
      uint64_t v57 = v55;
    }
    return JavaUtilDate_UTCWithInt_withInt_withInt_withInt_withInt_withInt_(v54 - 1900, v65, v64, (v50 - v56), v57, v52);
  }
  else
  {
    int v59 = v54 - 1900;
    uint64_t v60 = [JavaUtilDate alloc];
    JavaUtilDate_initWithInt_withInt_withInt_withInt_withInt_withInt_((uint64_t)v60, v59, v65, v64, v50, v55, v52);
    int v61 = v60;
    return [(JavaUtilDate *)v61 getTime];
  }
}

id sub_100214A2C(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((int)a2 <= 9)
  {
    if (a1)
    {
      [a1 appendWithChar:48];
      goto LABEL_7;
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_10;
  }
LABEL_7:
  return [a1 appendWithInt:a2];
}

int64_t JavaUtilDate_UTCWithInt_withInt_withInt_withInt_withInt_withInt_(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v12 = new_JavaUtilGregorianCalendar_initWithBoolean_();
  [(JavaUtilCalendar *)v12 setTimeZoneWithJavaUtilTimeZone:JavaUtilTimeZone_getTimeZoneWithNSString_(@"GMT")];
  [(JavaUtilCalendar *)v12 setWithInt:(a1 + 1900) withInt:a2 withInt:a3 withInt:a4 withInt:a5 withInt:a6];
  return [(JavaUtilCalendar *)v12 getTimeInMillis];
}

uint64_t sub_100214BA4(void *a1)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_19:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_19;
  }
LABEL_3:
  if ([a1 isEqual:@"EST"]) {
    return 4294967291;
  }
  if ([a1 isEqual:@"EDT"]) {
    return 4294967292;
  }
  if ([a1 isEqual:@"CST"]) {
    return 4294967290;
  }
  if ([a1 isEqual:@"CDT"]) {
    return 4294967291;
  }
  if ([a1 isEqual:@"MST"]) {
    return 4294967289;
  }
  if ([a1 isEqual:@"MDT"]) {
    return 4294967290;
  }
  if ([a1 isEqual:@"PST"]) {
    return 4294967288;
  }
  if ([a1 isEqual:@"PDT"]) {
    return 4294967289;
  }
  return 0;
}

JavaUtilDate *new_JavaUtilDate_init()
{
  uint64_t v0 = [JavaUtilDate alloc];
  v0->milliseconds_ = JavaLangSystem_currentTimeMillis();
  return v0;
}

JavaUtilDate *new_JavaUtilDate_initWithLong_(int64_t a1)
{
  id result = [JavaUtilDate alloc];
  result->milliseconds_ = a1;
  return result;
}

uint64_t JavaUtilDate_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilDate__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560EE8 != -1) {
    dispatch_once(&qword_100560EE8, &stru_100447B98);
  }
  return qword_100560EE0;
}

void sub_100215A28(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560EE0 = IOSClass_fromClass(v1);
}

uint64_t JavaUtilCollection_class_()
{
  if (qword_100560EF8 != -1) {
    dispatch_once(&qword_100560EF8, &stru_100447EF8);
  }
  return qword_100560EF0;
}

void sub_100215AA4(id a1)
{
  qword_100560EF0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilCollection);
}

uint64_t JavaUtilIterator_class_()
{
  if (qword_100560F08 != -1) {
    dispatch_once(&qword_100560F08, &stru_100448018);
  }
  return qword_100560F00;
}

void sub_100215B1C(id a1)
{
  qword_100560F00 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilIterator);
}

id LibcoreReflectTypes_getTypeArray_clone_(void *a1, int a2)
{
  if (atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_14;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_14;
    }
  }
  if ([a1 length])
  {
    id result = [a1 getResolvedTypes];
    if (!a2) {
      return result;
    }
    if (result)
    {
      return [result clone];
    }
LABEL_14:
    JreThrowNullPointerException();
  }
  if ((atomic_load_explicit(LibcoreUtilEmptyArray__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (id)LibcoreUtilEmptyArray_TYPE_;
}

id LibcoreReflectTypes_getType_(void *a1)
{
  if ((atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return a1;
  }
  objc_opt_class();
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return [a1 getResolvedType];
}

CFStringRef LibcoreReflectTypes_getSignature_(void *a1)
{
  if ((atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100560F10) {
    goto LABEL_10;
  }
  CFStringRef result = (const __CFString *)[(id)qword_100560F10 getWithId:a1];
  if (result) {
    return result;
  }
  if (!a1) {
LABEL_10:
  }
    JreThrowNullPointerException();
  if ([a1 isArray])
  {
    LibcoreReflectTypes_getSignature_([a1 getComponentType]);
    return JreStrcat("C$", v3, v4, v5, v6, v7, v8, v9, (id)0x5B);
  }
  else
  {
    [a1 getName];
    return JreStrcat("C$C", v10, v11, v12, v13, v14, v15, v16, (id)0x4C);
  }
}

CFStringRef LibcoreReflectTypes_toString_(uint64_t a1)
{
  if (atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_16:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_16;
  }
LABEL_3:
  if (!*(_DWORD *)(a1 + 8)) {
    return &stru_10048C1F8;
  }
  int v2 = new_JavaLangStringBuilder_init();
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  if ((int)v3 < 1) {
    IOSArray_throwOutOfBoundsWithMsg(v3, 0);
  }
  LibcoreReflectTypes_appendTypeName_class_(v2, *(void **)(a1 + 24));
  if (*(int *)(a1 + 8) > 1)
  {
    uint64_t v4 = 1;
    do
    {
      [(JavaLangStringBuilder *)v2 appendWithChar:44];
      uint64_t v5 = *(int *)(a1 + 8);
      if (v4 >= v5) {
        IOSArray_throwOutOfBoundsWithMsg(v5, v4);
      }
      LibcoreReflectTypes_appendTypeName_class_(v2, *(void **)(a1 + 24 + 8 * v4++));
    }
    while (v4 < *(int *)(a1 + 8));
  }
  return (const __CFString *)[(JavaLangStringBuilder *)v2 description];
}

id LibcoreReflectTypes_appendTypeName_class_(void *a1, void *a2)
{
  id v2 = a2;
  if (atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_6;
    }
  }
  else
  {
    objc_opt_class();
    if (!v2) {
      goto LABEL_6;
    }
  }
  int v4 = 0;
  while ([v2 isArray])
  {
    id v2 = [v2 getComponentType];
    ++v4;
    if (!v2) {
      goto LABEL_6;
    }
  }
  if (!a1) {
LABEL_6:
  }
    JreThrowNullPointerException();
  id result = objc_msgSend(a1, "appendWithNSString:", objc_msgSend(v2, "getName"));
  if (v4 >= 1)
  {
    do
    {
      id result = [a1 appendWithNSString:@"[]"];
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t LibcoreReflectTypes_appendArrayGenericType_types_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire))
  {
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    objc_opt_class();
    if (!a2) {
      goto LABEL_14;
    }
  }
  uint64_t result = *(unsigned int *)(a2 + 8);
  if (result)
  {
    if ((int)result < 1) {
      IOSArray_throwOutOfBoundsWithMsg(result, 0);
    }
    uint64_t result = LibcoreReflectTypes_appendGenericType_type_(a1, *(void **)(a2 + 24));
    if (*(int *)(a2 + 8) > 1)
    {
      if (a1)
      {
        uint64_t v5 = 1;
        do
        {
          [a1 appendWithChar:44];
          uint64_t v6 = *(int *)(a2 + 8);
          if (v5 >= v6) {
            IOSArray_throwOutOfBoundsWithMsg(v6, v5);
          }
          uint64_t result = LibcoreReflectTypes_appendGenericType_type_(a1, *(void **)(a2 + 24 + 8 * v5++));
        }
        while (v5 < *(int *)(a2 + 8));
        return result;
      }
LABEL_14:
      JreThrowNullPointerException();
    }
  }
  return result;
}

uint64_t LibcoreReflectTypes_appendGenericType_type_(void *a1, void *a2)
{
  if ((atomic_load_explicit(LibcoreReflectTypes__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (![(id)JavaLangReflectTypeVariable_class_() isInstance:a2])
  {
    if ([(id)JavaLangReflectParameterizedType_class_() isInstance:a2])
    {
      if (a1 && a2)
      {
        CFStringRef v5 = (const __CFString *)[a2 description];
        goto LABEL_12;
      }
      goto LABEL_74;
    }
    if ([(id)JavaLangReflectGenericArrayType_class_() isInstance:a2])
    {
      uint64_t v8 = (void *)JavaLangReflectGenericArrayType_class_();
      if (!a2) {
        goto LABEL_74;
      }
      if ([v8 isInstance:a2])
      {
        LibcoreReflectTypes_appendGenericType_type_(a1, [a2 getGenericComponentType]);
        if (a1)
        {
          CFStringRef v6 = @"[]";
          goto LABEL_13;
        }
        goto LABEL_74;
      }
LABEL_70:
      JreThrowClassCastException();
    }
    objc_opt_class();
    uint64_t result = objc_opt_isKindOfClass();
    if ((result & 1) == 0) {
      return result;
    }
    objc_opt_class();
    if (!a2) {
      goto LABEL_74;
    }
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_70;
    }
    if (![a2 isArray])
    {
      if (a1) {
        goto LABEL_7;
      }
LABEL_74:
      JreThrowNullPointerException();
    }
    id v9 = [a2 getName];
    if (!v9) {
      goto LABEL_74;
    }
    uint64_t v10 = (unsigned int *)[v9 split:@"\\["];
    if (!v10) {
      goto LABEL_74;
    }
    uint64_t v11 = v10;
    uint64_t v12 = v10[2];
    uint64_t v13 = (v12 - 1);
    if ((int)v12 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v12, (v12 - 1));
    }
    uint64_t v14 = *(void **)&v11[2 * (int)v13 + 6];
    if (!v14) {
      goto LABEL_74;
    }
    if ((int)[v14 length] < 2)
    {
      uint64_t v18 = v11[2];
      if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v18) {
        IOSArray_throwOutOfBoundsWithMsg(v18, v13);
      }
      uint64_t v19 = *(void **)&v11[2 * (int)v13 + 6];
      if (!v19) {
        goto LABEL_74;
      }
      uint64_t result = (uint64_t)[v19 charAtWithInt:0];
      if ((int)result > 82)
      {
        switch(result)
        {
          case 'S':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"short";
            break;
          case 'V':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"void";
            break;
          case 'Z':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"BOOLean";
            break;
          default:
LABEL_38:
            if ((int)v13 < 1) {
              return result;
            }
            if (a1)
            {
              do
              {
                uint64_t result = (uint64_t)[a1 appendWithNSString:@"[]"];
                LODWORD(v13) = v13 - 1;
              }
              while (v13);
              return result;
            }
            goto LABEL_74;
        }
      }
      else
      {
        switch((int)result)
        {
          case 'B':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"byte";
            break;
          case 'C':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"char";
            break;
          case 'D':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"double";
            break;
          case 'F':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"float";
            break;
          case 'I':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"int";
            break;
          case 'J':
            if (!a1) {
              goto LABEL_74;
            }
            CFStringRef v17 = @"long";
            break;
          default:
            goto LABEL_38;
        }
      }
    }
    else
    {
      if (!a1) {
        goto LABEL_74;
      }
      uint64_t v15 = v11[2];
      if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v15) {
        IOSArray_throwOutOfBoundsWithMsg(v15, v13);
      }
      uint64_t v16 = *(void **)&v11[2 * (int)v13 + 6];
      if (!v16) {
        goto LABEL_74;
      }
      if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v11[2]) {
        IOSArray_throwOutOfBoundsWithMsg(v11[2], v13);
      }
      CFStringRef v17 = (const __CFString *)objc_msgSend(v16, "substring:endIndex:", 1, objc_msgSend(v16, "length") - 1);
    }
    uint64_t result = (uint64_t)[a1 appendWithNSString:v17];
    goto LABEL_38;
  }
  if (!a1) {
    goto LABEL_74;
  }
  int v4 = (void *)JavaLangReflectTypeVariable_class_();
  if (!a2) {
    goto LABEL_74;
  }
  if (([v4 isInstance:a2] & 1) == 0) {
    goto LABEL_70;
  }
LABEL_7:
  CFStringRef v5 = (const __CFString *)[a2 getName];
LABEL_12:
  CFStringRef v6 = v5;
LABEL_13:
  return (uint64_t)[a1 appendWithNSString:v6];
}

JavaUtilInvalidPropertiesFormatException *new_JavaUtilInvalidPropertiesFormatException_initWithJavaLangThrowable_(uint64_t a1)
{
  id v2 = [JavaUtilInvalidPropertiesFormatException alloc];
  JavaIoIOException_init(v2, v3);
  [(JavaLangThrowable *)v2 initCauseWithJavaLangThrowable:a1];
  return v2;
}

JavaLangNullPointerException *new_JavaLangNullPointerException_init()
{
  uint64_t v0 = [JavaLangNullPointerException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaLangNullPointerException *new_JavaLangNullPointerException_initWithNSString_(uint64_t a1)
{
  id v2 = [JavaLangNullPointerException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

JavaNioByteArrayBuffer *JavaNioByteBuffer_allocateWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v10 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    uint64_t v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v10);
    objc_exception_throw(v11);
  }
  uint64_t v8 = new_JavaNioByteArrayBuffer_initWithByteArray_(+[IOSByteArray arrayWithLength:a1]);
  return v8;
}

JavaNioDirectByteBuffer *JavaNioByteBuffer_allocateDirectWithInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v12 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    uint64_t v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
    objc_exception_throw(v13);
  }
  id v9 = JavaNioMemoryBlock_allocateWithInt_(a1);
  CFStringRef v10 = new_JavaNioDirectByteBuffer_initWithJavaNioMemoryBlock_withInt_withInt_withBoolean_withJavaNioChannelsFileChannel_MapMode_(v9, a1, 0, 0, 0);
  return v10;
}

JavaNioByteArrayBuffer *JavaNioByteBuffer_wrapWithByteArray_(_DWORD *a1)
{
  uint64_t v1 = new_JavaNioByteArrayBuffer_initWithByteArray_(a1);
  return v1;
}

JavaNioByteArrayBuffer *JavaNioByteBuffer_wrapWithByteArray_withInt_withInt_(_DWORD *a1, int a2, int a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(a1[2], a2, a3);
  uint64_t result = new_JavaNioByteArrayBuffer_initWithByteArray_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3 + a2;
  return result;
}

id JavaNioByteBuffer_initWithInt_withLong_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JavaNioBuffer_initWithInt_withInt_withLong_(a1, 0, a2, a3, a5, a6, a7, a8);
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v9 = (void *)JavaNioByteOrder_BIG_ENDIAN__;
  return JreStrongAssign((id *)(a1 + 40), v9);
}

uint64_t JavaNioByteBuffer_class_()
{
  if (qword_100560F20 != -1) {
    dispatch_once(&qword_100560F20, &stru_1004492B8);
  }
  return qword_100560F18;
}

void sub_100217C14(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560F18 = IOSClass_fromClass(v1);
}

JavaNioByteBufferAsCharBuffer *JavaNioByteBufferAsCharBuffer_asCharBufferWithJavaNioByteBuffer_(void *a1)
{
  if (!a1 || (id v2 = (uint64_t *)[a1 slice]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, "orderWithJavaNioByteOrder:", objc_msgSend(a1, "order"));
  int v4 = [JavaNioByteBufferAsCharBuffer alloc];
  sub_100217CE8((uint64_t)v4, v3);
  return v4;
}

id sub_100217CE8(uint64_t a1, uint64_t *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v4 = [a2 capacity];
  if (v4 >= 0) {
    int v10 = v4;
  }
  else {
    int v10 = v4 + 1;
  }
  JavaNioCharBuffer_initWithInt_withLong_(a1, (v10 >> 1), a2[4], v5, v6, v7, v8, v9);
  JreStrongAssign((id *)(a1 + 40), a2);
  uint64_t v11 = *(void **)(a1 + 40);
  return [v11 clear];
}

id LibcoreReflectParameterizedTypeImpl_initWithLibcoreReflectParameterizedTypeImpl_withNSString_withLibcoreReflectListOfTypes_withJavaLangClassLoader_(id *a1, void *a2, void *a3, void *a4, void *a5)
{
  if (!a4)
  {
    int v10 = new_JavaLangNullPointerException_init();
    objc_exception_throw(v10);
  }
  JreStrongAssign(a1 + 2, a2);
  JreStrongAssign(a1 + 5, a3);
  JreStrongAssign(a1 + 1, a4);
  return JreStrongAssign(a1 + 6, a5);
}

LibcoreReflectParameterizedTypeImpl *new_LibcoreReflectParameterizedTypeImpl_initWithLibcoreReflectParameterizedTypeImpl_withNSString_withLibcoreReflectListOfTypes_withJavaLangClassLoader_(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = [LibcoreReflectParameterizedTypeImpl alloc];
  LibcoreReflectParameterizedTypeImpl_initWithLibcoreReflectParameterizedTypeImpl_withNSString_withLibcoreReflectListOfTypes_withJavaLangClassLoader_((id *)&v8->super.isa, a1, a2, a3, a4);
  return v8;
}

JavaUtilZipCRC32 *new_JavaUtilZipCRC32_init()
{
  uint64_t result = [JavaUtilZipCRC32 alloc];
  result->tbytes_ = 0;
  result->crc_ = 0;
  return result;
}

uint64_t JavaNioFileDescriptorChannel_class_()
{
  if (qword_100560F30 != -1) {
    dispatch_once(&qword_100560F30, &stru_100449D50);
  }
  return qword_100560F28;
}

void sub_100218CE8(id a1)
{
  qword_100560F28 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaNioFileDescriptorChannel);
}

id JavaIoPrintWriter_initWithJavaIoOutputStream_(uint64_t a1, void *a2)
{
  uint64_t v3 = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(a2);
  JavaIoWriter_initWithId_(a1, v3);
  *(unsigned char *)(a1 + 25) = 0;
  return JreStrongAssign((id *)(a1 + 16), v3);
}

id JavaIoPrintWriter_initWithJavaIoOutputStream_withBoolean_(uint64_t a1, void *a2, char a3)
{
  uint64_t v5 = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(a2);
  JavaIoWriter_initWithId_(a1, v5);
  *(unsigned char *)(a1 + 25) = a3;
  return JreStrongAssign((id *)(a1 + 16), v5);
}

id JavaIoPrintWriter_initWithJavaIoFile_(uint64_t a1, void *a2)
{
  uint64_t v3 = new_JavaIoFileOutputStream_initWithJavaIoFile_(a2);
  int v4 = new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(v3);
  uint64_t v5 = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(v4);
  JavaIoWriter_initWithId_(a1, v5);
  *(unsigned char *)(a1 + 25) = 0;
  return JreStrongAssign((id *)(a1 + 16), v5);
}

id JavaIoPrintWriter_initWithJavaIoFile_withNSString_(uint64_t a1, void *a2, __CFString *a3)
{
  uint64_t v5 = new_JavaIoFileOutputStream_initWithJavaIoFile_(a2);
  uint64_t v6 = new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(v5);
  uint64_t v7 = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(v6, a3);
  JavaIoWriter_initWithId_(a1, v7);
  *(unsigned char *)(a1 + 25) = 0;
  return JreStrongAssign((id *)(a1 + 16), v7);
}

id JavaIoPrintWriter_initWithNSString_(uint64_t a1, void *a2)
{
  uint64_t v3 = new_JavaIoFileOutputStream_initWithNSString_(a2);
  int v4 = new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(v3);
  uint64_t v5 = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(v4);
  JavaIoWriter_initWithId_(a1, v5);
  *(unsigned char *)(a1 + 25) = 0;
  return JreStrongAssign((id *)(a1 + 16), v5);
}

id JavaIoPrintWriter_initWithNSString_withNSString_(uint64_t a1, void *a2, __CFString *a3)
{
  uint64_t v5 = new_JavaIoFileOutputStream_initWithNSString_(a2);
  uint64_t v6 = new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(v5);
  uint64_t v7 = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(v6, a3);
  JavaIoWriter_initWithId_(a1, v7);
  *(unsigned char *)(a1 + 25) = 0;
  return JreStrongAssign((id *)(a1 + 16), v7);
}

void sub_1002192F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002193A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100219794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002199EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100219AEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)a1[1];
  objc_sync_enter(v8);
  uint64_t v9 = (void *)a1[2];
  if (v9) {
    [v9 writeWithCharArray:a2 withInt:a3 withInt:a4];
  }
  else {
    [a1 setError];
  }
  return objc_sync_exit(v8);
}

void sub_100219B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoPrintWriter *new_JavaIoPrintWriter_initWithJavaIoWriter_(void *a1)
{
  id v2 = [JavaIoPrintWriter alloc];
  JavaIoWriter_initWithId_((uint64_t)v2, a1);
  v2->autoFlush_ = 0;
  JreStrongAssign((id *)&v2->out_, a1);
  return v2;
}

LibcoreReflectListOfVariables *new_LibcoreReflectListOfVariables_init()
{
  uint64_t v0 = [LibcoreReflectListOfVariables alloc];
  uint64_t v1 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)&v0->array_, v1);
  return v0;
}

id JavaNioCharArrayBuffer_initWithCharArray_(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaNioCharBuffer_initWithInt_withLong_(a1, a2[2], 0, a4, a5, a6, a7, a8);
  id result = JreStrongAssign((id *)(a1 + 40), a2);
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 52) = 0;
  return result;
}

JavaNioCharArrayBuffer *sub_10021A0FC(uint64_t a1, int a2, BOOL a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = sub_10021A324((uint64_t)[(id)a1 capacity], *(void **)(a1 + 40), *(_DWORD *)(a1 + 48), a3);
  v5->super.super.limit_ = *(_DWORD *)(a1 + 12);
  v5->super.super.position_ = [(id)a1 position];
  v5->super.super.mark_ = a2;
  return v5;
}

JavaNioCharArrayBuffer *sub_10021A324(uint64_t a1, void *a2, int a3, BOOL a4)
{
  uint64_t v8 = [JavaNioCharArrayBuffer alloc];
  JavaNioCharBuffer_initWithInt_withLong_((uint64_t)v8, a1, 0, v9, v10, v11, v12, v13);
  JreStrongAssign((id *)&v8->backingArray_, a2);
  v8->arrayOffset_ = a3;
  v8->isReadOnly_ = a4;
  return v8;
}

JavaNioCharArrayBuffer *new_JavaNioCharArrayBuffer_initWithCharArray_(unsigned int *a1)
{
  id v2 = [JavaNioCharArrayBuffer alloc];
  JavaNioCharArrayBuffer_initWithCharArray_((uint64_t)v2, a1, v3, v4, v5, v6, v7, v8);
  return v2;
}

void *AndroidUtilLruCache_initWithInt_(uint64_t a1, int a2)
{
  if (a2 <= 0)
  {
    uint64_t v5 = new_JavaLangIllegalArgumentException_initWithNSString_(@"maxSize <= 0");
    objc_exception_throw(v5);
  }
  *(_DWORD *)(a1 + 20) = a2;
  id v2 = (id *)(a1 + 8);
  uint64_t v3 = new_JavaUtilLinkedHashMap_initWithInt_withFloat_withBoolean_(0, 1, 0.75);
  return JreStrongAssignAndConsume(v2, v3);
}

void sub_10021AC54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10021AC6C(void *a1, uint64_t a2, uint64_t a3)
{
  id result = [a1 sizeOfWithId:a2 withId:a3];
  if ((result & 0x80000000) != 0)
  {
    CFStringRef v11 = JreStrcat("$@C@", v4, v5, v6, v7, v8, v9, v10, @"Negative size: ");
    uint64_t v12 = new_JavaLangIllegalStateException_initWithNSString_((uint64_t)v11);
    objc_exception_throw(v12);
  }
  return result;
}

void sub_10021ADC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021AF24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021AFF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B2DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

AndroidUtilLruCache *new_AndroidUtilLruCache_initWithInt_(int a1)
{
  id v2 = [AndroidUtilLruCache alloc];
  AndroidUtilLruCache_initWithInt_((uint64_t)v2, a1);
  return v2;
}

void sub_10021B5F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B6A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B724(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B80C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B8AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021B9A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10021BAD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaNetDatagramPacket *new_JavaNetDatagramPacket_initWithByteArray_withInt_(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [JavaNetDatagramPacket alloc];
  *(void *)&v4->port_ = 0xFFFFFFFFLL;
  [(JavaNetDatagramPacket *)v4 setDataWithByteArray:a1 withInt:0 withInt:a2];
  return v4;
}

JavaNetDatagramPacket *new_JavaNetDatagramPacket_initWithByteArray_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = [JavaNetDatagramPacket alloc];
  *(void *)&v6->port_ = 0xFFFFFFFFLL;
  [(JavaNetDatagramPacket *)v6 setDataWithByteArray:a1 withInt:a2 withInt:a3];
  return v6;
}

id sub_10021BC84(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8 = a5;
  int v9 = a4;
  int v11 = a2;
  JavaNioByteBuffer_initWithInt_withLong_(a1, a2, 0, a4, a5, a6, a7, a8);
  id result = JreStrongAssign((id *)(a1 + 48), a3);
  *(_DWORD *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 60) = v8;
  if (!a3) {
    JreThrowNullPointerException();
  }
  if (v9 + v11 > a3[2])
  {
    CFStringRef v21 = JreStrcat("$I$I$I", v14, v15, v16, v17, v18, v19, v20, @"backingArray.length=");
    uint64_t v22 = new_JavaLangIndexOutOfBoundsException_initWithNSString_((uint64_t)v21);
    objc_exception_throw(v22);
  }
  return result;
}

JavaNioByteArrayBuffer *sub_10021BD70(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v6 = [(id)a1 capacity];
  uint64_t v7 = *(_DWORD **)(a1 + 48);
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  int v9 = [JavaNioByteArrayBuffer alloc];
  sub_10021BC84((uint64_t)v9, (uint64_t)v6, v7, v8, a3, v10, v11, v12);
  uint64_t v13 = v9;
  v13->super.super.limit_ = *(_DWORD *)(a1 + 12);
  v13->super.super.position_ = [(id)a1 position];
  v13->super.super.mark_ = a2;
  return v13;
}

JavaNioByteArrayBuffer *new_JavaNioByteArrayBuffer_initWithByteArray_(_DWORD *a1)
{
  id v2 = [JavaNioByteArrayBuffer alloc];
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v6 = v2;
  sub_10021BC84((uint64_t)v2, a1[2], a1, 0, 0, v3, v4, v5);
  return v6;
}

uint64_t JavaUtilSortedSet_class_()
{
  if (qword_100560F40 != -1) {
    dispatch_once(&qword_100560F40, &stru_10044C690);
  }
  return qword_100560F38;
}

void sub_10021DC84(id a1)
{
  qword_100560F38 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilSortedSet);
}

JavaNetAddressCache *new_JavaNetAddressCache_init()
{
  uint64_t v0 = [JavaNetAddressCache alloc];
  uint64_t v1 = new_LibcoreUtilBasicLruCache_initWithInt_(16);
  JreStrongAssignAndConsume((id *)&v0->cache_, v1);
  return v0;
}

void LibcoreUtilSneakyThrow_sneakyThrowWithJavaLangThrowable_(uint64_t a1)
{
}

void sub_10021DFF8(uint64_t a1)
{
  objc_opt_class();
  id v2 = (void *)sub_1000BC6CC(a1);
  objc_exception_throw(v2);
}

JavaNetMalformedURLException *new_JavaNetMalformedURLException_init()
{
  uint64_t v0 = [JavaNetMalformedURLException alloc];
  JavaIoIOException_init(v0, v1);
  return v0;
}

JavaNetMalformedURLException *new_JavaNetMalformedURLException_initWithNSString_(uint64_t a1)
{
  id v2 = [JavaNetMalformedURLException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

uint64_t JavaNetDatagramSocketImpl_init(uint64_t result)
{
  *(_DWORD *)(result + 16) = -1;
  return result;
}

BOOL addHighPrecision(unint64_t *a1, int a2, unint64_t *a3, int a4)
{
  uint64_t v4 = 0;
  if (a2 && a4)
  {
    uint64_t v5 = 0;
    if (a2 >= a4) {
      LODWORD(v6) = a4;
    }
    else {
      LODWORD(v6) = a2;
    }
    if ((int)v6 <= 1) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = v6;
    }
    uint64_t v7 = v6;
    uint64_t v8 = a1;
    do
    {
      unint64_t v9 = *v8 + v5 + *a3;
      *v8++ = v9;
      unint64_t v10 = *a3++;
      BOOL v11 = v10 >= v9;
      if (v10 != v9) {
        uint64_t v5 = 1;
      }
      if (!v11) {
        uint64_t v5 = 0;
      }
      --v7;
    }
    while (v7);
    if (v5)
    {
      if (v6 == a2)
      {
        return 1;
      }
      else
      {
        do
        {
          unint64_t v12 = a1[(int)v6];
          a1[(int)v6] = v12 + 1;
          if (v12 != -1) {
            break;
          }
          LODWORD(v6) = v6 + 1;
        }
        while ((int)v6 < a2);
        return v6 == a2;
      }
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

BOOL subtractHighPrecision(unint64_t *a1, int a2, unint64_t *a3, int a4)
{
  uint64_t v6 = a2;
  if (a2 >= 1)
  {
    uint64_t v7 = a2;
    uint64_t v8 = a1;
    do
    {
      *uint64_t v8 = ~*v8;
      ++v8;
      --v7;
    }
    while (v7);
  }
  uint64_t v9 = *a1 + 1;
  *a1 = v9;
  if (a2 != 1 && !v9)
  {
    if (a2 <= 2) {
      uint64_t v10 = 2;
    }
    else {
      uint64_t v10 = a2;
    }
    uint64_t v11 = v10 - 2;
    unint64_t v12 = (uint64_t *)(a1 + 1);
    do
    {
      uint64_t v13 = *v12 + 1;
      *v12++ = v13;
      if (v13) {
        BOOL v14 = 1;
      }
      else {
        BOOL v14 = v11 == 0;
      }
      --v11;
    }
    while (!v14);
  }
  int v15 = a4 & (a4 >> 31);
  uint64_t v16 = 8 * a4 - 8;
  while (1)
  {
    BOOL v17 = __OFSUB__(a4--, 1);
    if (a4 < 0 != v17) {
      break;
    }
    uint64_t v18 = *(unint64_t *)((char *)a3 + v16);
    v16 -= 8;
    if (v18)
    {
      int v15 = a4 + 1;
      break;
    }
  }
  BOOL result = addHighPrecision(a1, a2, a3, v15);
  if (a2 >= 1)
  {
    uint64_t v20 = a1;
    do
    {
      *uint64_t v20 = ~*v20;
      ++v20;
      --v6;
    }
    while (v6);
  }
  uint64_t v21 = *a1 + 1;
  *a1 = v21;
  if (a2 != 1 && !v21)
  {
    if (a2 <= 2) {
      uint64_t v22 = 2;
    }
    else {
      uint64_t v22 = a2;
    }
    uint64_t v23 = v22 - 2;
    uint64_t v24 = (uint64_t *)(a1 + 1);
    do
    {
      uint64_t v25 = *v24 + 1;
      *v24++ = v25;
      if (v25) {
        BOOL v26 = 1;
      }
      else {
        BOOL v26 = v23 == 0;
      }
      --v23;
    }
    while (!v26);
  }
  return result;
}

void multiplyHighPrecision(unsigned int *a1, int a2, unsigned int *a3, int a4, void *a5, int a6)
{
  if (a2 < a4) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = a3;
  }
  if (a2 < a4) {
    int v8 = a2;
  }
  else {
    int v8 = a4;
  }
  if (a2 < a4) {
    int v9 = a4;
  }
  else {
    int v9 = a2;
  }
  if (a2 < a4) {
    uint64_t v10 = (uint64_t)a3;
  }
  else {
    uint64_t v10 = (uint64_t)a1;
  }
  bzero(a5, 8 * a6);
  if (v8 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 2 * v8;
    do
    {
      sub_10021E61C(v10, v9, *v7, (uint64_t)a5 + 4 * (int)v11);
      sub_10021E61C(v10, v9, v7[1], (uint64_t)a5 + 4 * (int)v11 + 4);
      v7 += 2;
      v11 += 2;
    }
    while (v12 != v11);
  }
}

uint64_t sub_10021E61C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  if (a2 <= 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = a2;
  }
  uint64_t v7 = 2 * v6;
  do
  {
    int v8 = (unsigned int *)(result + 4 * v4);
    unint64_t v9 = v5 + *(unsigned int *)(a4 + 4 * (int)v4) + *v8 * a3;
    *(_DWORD *)(a4 + 4 * (int)v4) = v9;
    unint64_t v10 = *(unsigned int *)(a4 + 4 * ((int)v4 + 1)) + HIDWORD(v9) + v8[1] * a3;
    unint64_t v5 = HIDWORD(v10);
    *(_DWORD *)(a4 + 4 * ((int)v4 + 1)) = v10;
    v4 += 2;
  }
  while (v7 != v4);
  int v11 = *(_DWORD *)(a4 + 4 * (int)v4);
  *(_DWORD *)(a4 + 4 * (int)v4) = v11 + HIDWORD(v10);
  if (__CFADD__(v11, HIDWORD(v10)))
  {
    int v12 = v4 + 1;
    do
    {
      int v13 = *(_DWORD *)(a4 + 4 * v12);
      *(_DWORD *)(a4 + 4 * v12++) = v13 + 1;
    }
    while (v13 == -1);
  }
  return result;
}

unint64_t simpleAppendDecimalDigitHighPrecision(unsigned int *a1, int a2, unsigned int a3)
{
  unint64_t v3 = a3;
  if (a2 <= 1) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = a2;
  }
  do
  {
    unint64_t v5 = v3 + 10 * *a1;
    unint64_t v6 = HIDWORD(v5) + 10 * a1[1];
    unint64_t v3 = HIDWORD(v6);
    *a1 = v5;
    a1[1] = v6;
    a1 += 2;
    --v4;
  }
  while (v4);
  return HIDWORD(v6);
}

void *simpleShiftLeftHighPrecision(void *result, int a2, int a3)
{
  if (a3 >= 64)
  {
    for (int i = a2 - 1; (int)(i - (a3 >> 6)) >= 0; --i)
      result[i] = result[i - (a3 >> 6)];
    do
      result[i--] = 0;
    while (i >= 0);
    a3 &= 0x3Fu;
  }
  if (a3)
  {
    int v4 = a2 - 1;
    if (a2 - 1 >= 1)
    {
      unint64_t v5 = &result[a2 - 2];
      unint64_t v6 = &result[v4];
      do
      {
        unint64_t v7 = *v5--;
        *unint64_t v6 = (v7 >> (64 - a3)) | (*v6 << a3);
        --v6;
        --v4;
      }
      while (v4 > 0);
    }
    *result <<= a3;
  }
  return result;
}

uint64_t highestSetBit(unsigned int *a1)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v1 = HIDWORD(*(void *)a1);
  BOOL v2 = v1 == 0;
  if (v1) {
    unint64_t v3 = a1 + 1;
  }
  else {
    unint64_t v3 = a1;
  }
  int v4 = !v2;
  unsigned int v5 = *v3;
  if (v5 < 0x10000)
  {
    int v6 = 32 * v4;
  }
  else
  {
    v5 >>= 16;
    int v6 = (32 * (v4 & 1)) | 0x10;
  }
  if ((v5 & 0xFF00) != 0)
  {
    unsigned int v5 = (unsigned __int16)(v5 & 0xFF00) >> 8;
    int v7 = v6 | 8;
  }
  else
  {
    int v7 = v6;
  }
  unsigned int v8 = (v5 & 0xF0) >> 4;
  if ((v5 & 0xF0) != 0)
  {
    int v9 = v7 | 4;
  }
  else
  {
    unsigned int v8 = v5;
    int v9 = v7;
  }
  if (v8 >= 8) {
    return (v9 + 4);
  }
  if (v8 >= 4) {
    return (v9 + 3);
  }
  if (v8 < 2) {
    return (v9 + 1);
  }
  return (v9 + 2);
}

uint64_t lowestSetBit(int *a1)
{
  if (!*(void *)a1) {
    return 0;
  }
  BOOL v1 = *(void *)a1 == 0;
  BOOL v2 = a1 + 1;
  if (!v1) {
    BOOL v2 = a1;
  }
  int v3 = *v2;
  if ((_WORD)v3) {
    __int16 v4 = v3;
  }
  else {
    __int16 v4 = HIWORD(v3);
  }
  if ((_WORD)v3) {
    int v5 = 32 * v1;
  }
  else {
    int v5 = (32 * v1) | 0x10;
  }
  if ((_BYTE)v4)
  {
    int v6 = v5;
  }
  else
  {
    LOBYTE(v4) = HIBYTE(v4);
    int v6 = v5 | 8;
  }
  char v7 = v4 >> 4;
  if ((v4 & 0xF) != 0)
  {
    char v7 = v4;
    int v8 = v6;
  }
  else
  {
    int v8 = v6 | 4;
  }
  if (v7) {
    return (v8 + 1);
  }
  if ((v7 & 2) != 0) {
    return (v8 + 2);
  }
  if ((v7 & 4) != 0) {
    return (v8 + 3);
  }
  return (v8 + 4);
}

uint64_t highestSetBitHighPrecision(uint64_t a1, int a2)
{
  int v3 = a2 << 6;
  for (unsigned int i = a2 - 1; (i & 0x80000000) == 0; --i)
  {
    int v5 = highestSetBit((unsigned int *)(a1 + 8 * i));
    v3 -= 64;
    if (v5) {
      return (v5 + v3);
    }
  }
  return 0;
}

uint64_t lowestSetBitHighPrecision(int *a1, int a2)
{
  unint64_t v2 = (unint64_t)(a2 & ~(a2 >> 31)) << 6;
  uint64_t v3 = 64;
  while (1)
  {
    v3 -= 64;
    if (!(v2 + v3)) {
      break;
    }
    __int16 v4 = a1 + 2;
    int v5 = lowestSetBit(a1);
    a1 = v4;
    if (v5) {
      return (v5 - v3);
    }
  }
  return 0;
}

uint64_t compareHighPrecision(uint64_t a1, unsigned int a2, uint64_t a3, int a4)
{
  if ((int)(a2 - 1) >= -1) {
    int v4 = -1;
  }
  else {
    int v4 = a2 - 1;
  }
  while ((--a2 & 0x80000000) == 0)
  {
    if (*(void *)(a1 + 8 * a2))
    {
      int v4 = a2;
      break;
    }
  }
  int v5 = a4 - 1;
  if (a4 - 1 >= -1) {
    int v5 = -1;
  }
  while (--a4 >= 0)
  {
    if (*(void *)(a3 + 8 * a4)) {
      goto LABEL_13;
    }
  }
  a4 = v5;
LABEL_13:
  if (v4 > a4) {
    return 1;
  }
  if (v4 >= a4) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = 0xFFFFFFFFLL;
  }
  if ((a2 & 0x80000000) == 0 && v4 >= a4)
  {
    while (1)
    {
      unint64_t v8 = *(void *)(a1 + 8 * v4);
      unint64_t v9 = *(void *)(a3 + 8 * v4);
      if (v8 > v9) {
        break;
      }
      if (v8 < v9) {
        return 0xFFFFFFFFLL;
      }
      if (v4-- <= 0) {
        return 0;
      }
    }
    return 1;
  }
  return v6;
}

double toDoubleHighPrecision(unsigned int *a1, unsigned int a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  __int16 v6 = -958 - ((_WORD)a2 << 6);
  unsigned int v7 = a2 + 1;
  do
  {
    uint64_t v8 = v5;
    __int16 v9 = v6;
    uint64_t v10 = v4;
    if ((int)(a2 + v5) < 1)
    {
      double result = 0.0;
      if (v7 == 1) {
        return result;
      }
LABEL_11:
      unsigned int v16 = a2 - 1;
      BOOL v17 = &a1[2 * (a2 - 1)];
      int v18 = highestSetBit((unsigned int *)((char *)v17 - v10));
      char v19 = v18 - 53;
      if (v18 > 53)
      {
        unint64_t v22 = *(void *)&v17[2 * v8];
        unint64_t v23 = v22 >> v19;
        *(void *)&double v24 = (v22 >> v19) & 0xFFFFFFFFFFFFFLL | ((unint64_t)(unsigned __int16)(v18 - v9) << 52);
        unsigned int v25 = (v22 << -(char)v18) & 0x7FF;
        if (v25 <= 0x400)
        {
          uint64_t v26 = v23 & 1;
          if (v25 != 1024 || v26 == 0)
          {
            double result = v24;
            if (v25 != 1024) {
              return result;
            }
            int v28 = v16 + v8;
            while (!*(void *)&a1[2 * --v28])
            {
              if (v28 <= 0) {
                return result;
              }
            }
          }
        }
        uint64_t v11 = *(void *)&v24 + 1;
        return *(double *)&v11;
      }
      char v20 = 53 - v18;
      uint64_t v21 = *(void *)&v17[2 * v8];
      if (53 - v18 >= 1) {
        uint64_t v21 = (*(void *)&a1[2 * (int)(a2 - 2) + 2 * v8] >> (v18 + 11)) | (v21 << v20);
      }
      unint64_t v29 = *(void *)&a1[2 * v8 + 2 * (int)(a2 - 2)] << v20;
      if (v29 > 0x8000000000000000 || v29 == 0x8000000000000000 && (v21 & 1) != 0)
      {
LABEL_33:
        uint64_t v11 = (v21 & 0xFFFFFFFFFFFFFLL | ((unint64_t)(unsigned __int16)(v18 - v9) << 52)) + 1;
        return *(double *)&v11;
      }
      *(void *)&double result = v21 & 0xFFFFFFFFFFFFFLL | ((unint64_t)(unsigned __int16)(v18 - v9) << 52);
      if (v29 == 0x8000000000000000)
      {
        int v30 = a2 - 2 + v8 - 1;
        while ((v30 & 0x80000000) == 0)
        {
          if (*(void *)&a1[2 * v30--]) {
            goto LABEL_33;
          }
        }
      }
      return result;
    }
    --v5;
    v6 += 64;
    v4 += 8;
    --v7;
  }
  while (!*(void *)&a1[2 * a2 - 2 + 2 * v8]);
  if (v7 > 0x10)
  {
    *(double *)&uint64_t v11 = INFINITY;
    return *(double *)&v11;
  }
  if (v7 != 1) {
    goto LABEL_11;
  }
  int v13 = highestSetBit(a1);
  unint64_t v14 = *(void *)a1;
  unint64_t v15 = (unint64_t)(v13 + 1022) << 52;
  if (v13 <= 53)
  {
    uint64_t v11 = (v14 << (53 - v13)) & 0xFFFFFFFFFFFFFLL | v15;
    return *(double *)&v11;
  }
  unint64_t v32 = v14 >> (v13 - 53);
  *(void *)&double v33 = v32 & 0xFFFFFFFFFFFFFLL | v15;
  unsigned int v34 = (v14 << -(char)v13) & 0x7FF;
  if (v34 > 0x400 || (double result = v33, v34 == 1024) && (v32 & 1) != 0)
  {
    uint64_t v11 = *(void *)&v33 + 1;
    return *(double *)&v11;
  }
  return result;
}

uint64_t timesTenToTheEHighPrecision(unsigned int *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if (a3 < 19)
    {
      int v20 = a3;
    }
    else
    {
      do
      {
        unint64_t v3 = 0;
        uint64_t v4 = 0;
        uint64_t v5 = 0;
        if ((int)a2 <= 1) {
          int v6 = 1;
        }
        else {
          int v6 = a2;
        }
        unsigned int v7 = a1;
        do
        {
          unint64_t v8 = *(void *)v7;
          unint64_t v9 = v4 | (v3 << 32);
          if (*(void *)v7 | v9)
          {
            unint64_t v10 = HIDWORD(v8);
            uint64_t v11 = 2313682944 * v8;
            BOOL v17 = __CFADD__(v11, v9);
            unint64_t v12 = v11 + v9;
            unsigned int v13 = v17;
            if (v12 < v9) {
              uint64_t v14 = 1;
            }
            else {
              uint64_t v14 = v13;
            }
            unint64_t v15 = 2328306436 * *(void *)v7;
            unint64_t v16 = v5 + v15 + 2313682944 * v10 + HIDWORD(v12);
            BOOL v17 = v16 >= 2313682944u * (unint64_t)v10 && v16 >= v15;
            uint64_t v5 = !v17;
            *unsigned int v7 = v12;
            v7[1] = v16;
            unint64_t v18 = ((2328306436 * v10) | v14) + HIDWORD(v16);
            uint64_t v4 = v18;
            unint64_t v3 = HIDWORD(v18);
          }
          v7 += 2;
          --v6;
        }
        while (v6);
        unint64_t v19 = v4 | (v3 << 32);
        if (v19)
        {
          *(void *)&a1[2 * (int)a2] = v19;
          a2 = (a2 + 1);
        }
        int v20 = a3 - 19;
        BOOL v21 = a3 <= 37;
        a3 -= 19;
      }
      while (!v21);
    }
    if (v20 < 9)
    {
      int v27 = v20;
    }
    else
    {
      do
      {
        unint64_t v22 = 0;
        if ((int)a2 <= 1) {
          uint64_t v23 = 1;
        }
        else {
          uint64_t v23 = a2;
        }
        double v24 = a1 + 1;
        do
        {
          unint64_t v25 = v22 + 1000000000 * *(v24 - 1);
          *(v24 - 1) = v25;
          unint64_t v26 = HIDWORD(v25) + 1000000000 * *v24;
          unint64_t v22 = HIDWORD(v26);
          *double v24 = v26;
          v24 += 2;
          --v23;
        }
        while (v23);
        if (v22)
        {
          *(void *)&a1[2 * (int)a2] = v22;
          a2 = (a2 + 1);
        }
        int v27 = v20 - 9;
        BOOL v21 = v20 <= 17;
        v20 -= 9;
      }
      while (!v21);
    }
    switch(v27)
    {
      case 1:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v29 = 1;
        }
        else {
          uint64_t v29 = a2;
        }
        int v30 = a1;
        do
        {
          unint64_t v31 = v28 + 10 * *v30;
          unint64_t v32 = HIDWORD(v31) + 10 * v30[1];
          unint64_t v28 = HIDWORD(v32);
          *int v30 = v31;
          v30[1] = v32;
          v30 += 2;
          --v29;
        }
        while (v29);
        goto LABEL_95;
      case 2:
        unint64_t v33 = 0;
        if ((int)a2 <= 1) {
          uint64_t v34 = 1;
        }
        else {
          uint64_t v34 = a2;
        }
        uint64_t v35 = a1;
        uint64_t v36 = v34;
        do
        {
          unint64_t v37 = v33 + 10 * *v35;
          unint64_t v38 = HIDWORD(v37) + 10 * v35[1];
          unint64_t v33 = HIDWORD(v38);
          *uint64_t v35 = v37;
          v35[1] = v38;
          v35 += 2;
          --v36;
        }
        while (v36);
        if (v33)
        {
          *(void *)&a1[2 * (int)a2] = v33;
          if ((int)a2 + 1 > 1) {
            uint64_t v34 = (a2 + 1);
          }
          else {
            uint64_t v34 = 1;
          }
          a2 = (a2 + 1);
        }
        unint64_t v28 = 0;
        uint64_t v39 = a1;
        do
        {
          unint64_t v40 = v28 + 10 * *v39;
          unint64_t v41 = HIDWORD(v40) + 10 * v39[1];
          unint64_t v28 = HIDWORD(v41);
          *uint64_t v39 = v40;
          v39[1] = v41;
          v39 += 2;
          --v34;
        }
        while (v34);
        goto LABEL_95;
      case 3:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v42 = 1;
        }
        else {
          uint64_t v42 = a2;
        }
        CFStringRef v43 = a1 + 1;
        do
        {
          unint64_t v44 = v28 + 1000 * *(v43 - 1);
          *(v43 - 1) = v44;
          unint64_t v45 = HIDWORD(v44) + 1000 * *v43;
          unint64_t v28 = HIDWORD(v45);
          *CFStringRef v43 = v45;
          v43 += 2;
          --v42;
        }
        while (v42);
        goto LABEL_95;
      case 4:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v46 = 1;
        }
        else {
          uint64_t v46 = a2;
        }
        BOOL v47 = a1 + 1;
        do
        {
          unint64_t v48 = v28 + 10000 * *(v47 - 1);
          *(v47 - 1) = v48;
          unint64_t v49 = HIDWORD(v48) + 10000 * *v47;
          unint64_t v28 = HIDWORD(v49);
          *BOOL v47 = v49;
          v47 += 2;
          --v46;
        }
        while (v46);
        goto LABEL_95;
      case 5:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v50 = 1;
        }
        else {
          uint64_t v50 = a2;
        }
        int v51 = a1 + 1;
        do
        {
          unint64_t v52 = v28 + 100000 * *(v51 - 1);
          *(v51 - 1) = v52;
          unint64_t v53 = HIDWORD(v52) + 100000 * *v51;
          unint64_t v28 = HIDWORD(v53);
          *int v51 = v53;
          v51 += 2;
          --v50;
        }
        while (v50);
        goto LABEL_95;
      case 6:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v58 = 1;
        }
        else {
          uint64_t v58 = a2;
        }
        int v59 = a1 + 1;
        do
        {
          unint64_t v60 = v28 + 1000000 * *(v59 - 1);
          *(v59 - 1) = v60;
          unint64_t v61 = HIDWORD(v60) + 1000000 * *v59;
          unint64_t v28 = HIDWORD(v61);
          *int v59 = v61;
          v59 += 2;
          --v58;
        }
        while (v58);
        goto LABEL_95;
      case 7:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v62 = 1;
        }
        else {
          uint64_t v62 = a2;
        }
        unsigned int v63 = a1 + 1;
        do
        {
          unint64_t v64 = v28 + 10000000 * *(v63 - 1);
          *(v63 - 1) = v64;
          unint64_t v65 = HIDWORD(v64) + 10000000 * *v63;
          unint64_t v28 = HIDWORD(v65);
          *unsigned int v63 = v65;
          v63 += 2;
          --v62;
        }
        while (v62);
        goto LABEL_95;
      case 8:
        unint64_t v28 = 0;
        if ((int)a2 <= 1) {
          uint64_t v54 = 1;
        }
        else {
          uint64_t v54 = a2;
        }
        uint64_t v55 = a1 + 1;
        do
        {
          unint64_t v56 = v28 + 100000000 * *(v55 - 1);
          *(v55 - 1) = v56;
          unint64_t v57 = HIDWORD(v56) + 100000000 * *v55;
          unint64_t v28 = HIDWORD(v57);
          *uint64_t v55 = v57;
          v55 += 2;
          --v54;
        }
        while (v54);
LABEL_95:
        if (v28)
        {
          *(void *)&a1[2 * (int)a2] = v28;
          a2 = (a2 + 1);
        }
        break;
      default:
        return a2;
    }
  }
  return a2;
}

uint64_t doubleMantissa(double a1)
{
  if ((*(void *)&a1 & 0x7FF0000000000000) != 0) {
    return *(void *)&a1 & 0xFFFFFFFFFFFFFLL | 0x10000000000000;
  }
  else {
    return *(void *)&a1 & 0xFFFFFFFFFFFFFLL;
  }
}

uint64_t doubleExponent(double a1)
{
  if (*(void *)&a1 >> 52) {
    return (*(void *)&a1 >> 52) - 1075;
  }
  else {
    return 4294966222;
  }
}

uint64_t floatMantissa(float a1)
{
  if ((LODWORD(a1) & 0x7F800000) != 0) {
    return LODWORD(a1) & 0x7FFFFF | 0x800000u;
  }
  else {
    return LODWORD(a1) & 0x7FFFFF;
  }
}

uint64_t floatExponent(float a1)
{
  if (LODWORD(a1) >= 0x800000) {
    return ((LODWORD(a1) >> 23) - 150);
  }
  else {
    return 4294967147;
  }
}

uint64_t JavaLangReflectModifier_isStaticWithInt_(unsigned int a1)
{
  return (a1 >> 3) & 1;
}

CFStringRef JavaLangReflectModifier_toStringWithInt_(__int16 a1)
{
  unint64_t v2 = new_JavaLangStringBuilder_init();
  unint64_t v3 = v2;
  if (a1)
  {
    [(JavaLangStringBuilder *)v2 appendWithNSString:@"public "];
    if ((a1 & 4) == 0)
    {
LABEL_3:
      if ((a1 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_3;
  }
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"protected "];
  if ((a1 & 2) == 0)
  {
LABEL_4:
    if ((a1 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"private "];
  if ((a1 & 0x400) == 0)
  {
LABEL_5:
    if ((a1 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"abstract "];
  if ((a1 & 8) == 0)
  {
LABEL_6:
    if ((a1 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"static "];
  if ((a1 & 0x10) == 0)
  {
LABEL_7:
    if ((a1 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"final "];
  if ((a1 & 0x80) == 0)
  {
LABEL_8:
    if ((a1 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"transient "];
  if ((a1 & 0x40) == 0)
  {
LABEL_9:
    if ((a1 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"volatile "];
  if ((a1 & 0x20) == 0)
  {
LABEL_10:
    if ((a1 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"synchronized "];
  if ((a1 & 0x100) == 0)
  {
LABEL_11:
    if ((a1 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"native "];
  if ((a1 & 0x800) == 0)
  {
LABEL_12:
    if ((a1 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_28:
  [(JavaLangStringBuilder *)v3 appendWithNSString:@"strictfp "];
  if ((a1 & 0x200) != 0) {
LABEL_13:
  }
    [(JavaLangStringBuilder *)v3 appendWithNSString:@"interface "];
LABEL_14:
  if (![(JavaLangStringBuilder *)v3 length]) {
    return &stru_10048C1F8;
  }
  [(JavaLangAbstractStringBuilder *)v3 setLengthWithInt:[(JavaLangStringBuilder *)v3 length] - 1];
  return (const __CFString *)[(JavaLangStringBuilder *)v3 description];
}

uint64_t JavaLangReflectModifier_classModifiers()
{
  return 3103;
}

uint64_t JavaLangReflectModifier_interfaceModifiers()
{
  return 3087;
}

id JavaNetURLConnection_initWithJavaNetURL_(uint64_t a1, void *a2)
{
  uint64_t v4 = (id *)(a1 + 16);
  uint64_t v5 = [JavaNetURLConnection_DefaultContentHandler alloc];
  JavaNetContentHandler_init(v5, v6);
  JreStrongAssignAndConsume(v4, v5);
  *(void *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 32) = byte_10055D2A0;
  *(unsigned char *)(a1 + 35) = 1;
  *(unsigned char *)(a1 + 36) = byte_100560F48;
  return JreStrongAssign((id *)(a1 + 8), a2);
}

id JavaNetURLConnection_guessContentTypeFromNameWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaNetURLConnection__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  FileNameMap = (void *)JavaNetURLConnection_getFileNameMap();
  if (!FileNameMap) {
    JreThrowNullPointerException();
  }
  return [FileNameMap getContentTypeForWithNSString:a1];
}

CFStringRef JavaNetURLConnection_guessContentTypeFromStreamWithJavaIoInputStream_(void *a1)
{
  if (atomic_load_explicit(JavaNetURLConnection__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_70;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_70;
    }
  }
  if (![a1 markSupported]) {
    return 0;
  }
  [a1 markWithInt:64];
  unint64_t v2 = +[IOSByteArray arrayWithLength:64];
  int v3 = [a1 readWithByteArray:v2];
  [a1 reset];
  if (v3 == -1) {
    return 0;
  }
  if (v3 < 2)
  {
    uint64_t v5 = 0;
    CFStringRef v6 = @"US-ASCII";
  }
  else
  {
    uint64_t size = v2->super.size_;
    if ((int)size <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(size, 0);
    }
    if (*((unsigned __int8 *)&v2->super.size_ + 4) == 255)
    {
      uint64_t v8 = v2->super.size_;
      if ((int)v8 <= 1) {
        IOSArray_throwOutOfBoundsWithMsg(v8, 1);
      }
      if (*((unsigned __int8 *)&v2->super.size_ + 5) == 254)
      {
        v3 &= ~1u;
        CFStringRef v6 = @"UTF-16LE";
      }
      else
      {
        CFStringRef v6 = @"US-ASCII";
      }
      if (*((unsigned __int8 *)&v2->super.size_ + 5) == 254) {
        uint64_t v5 = 2;
      }
      else {
        uint64_t v5 = 0;
      }
    }
    else
    {
      uint64_t v5 = 0;
      CFStringRef v6 = @"US-ASCII";
    }
    uint64_t v9 = v2->super.size_;
    if ((int)v9 <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(v9, 0);
    }
    if (*((unsigned __int8 *)&v2->super.size_ + 4) == 254)
    {
      uint64_t v10 = v2->super.size_;
      if ((int)v10 <= 1) {
        IOSArray_throwOutOfBoundsWithMsg(v10, 1);
      }
      if (*((unsigned __int8 *)&v2->super.size_ + 5) == 255)
      {
        v3 &= ~1u;
        uint64_t v5 = 2;
        CFStringRef v6 = @"UTF-16BE";
      }
    }
    if (v3 >= 3)
    {
      uint64_t v11 = v2->super.size_;
      if ((int)v11 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v11, 0);
      }
      if (*((unsigned __int8 *)&v2->super.size_ + 4) == 239)
      {
        uint64_t v12 = v2->super.size_;
        if ((int)v12 <= 1) {
          IOSArray_throwOutOfBoundsWithMsg(v12, 1);
        }
        if (*((unsigned __int8 *)&v2->super.size_ + 5) == 187)
        {
          uint64_t v13 = v2->super.size_;
          if ((int)v13 <= 2) {
            IOSArray_throwOutOfBoundsWithMsg(v13, 2);
          }
          if (*((unsigned __int8 *)&v2->super.size_ + 6) == 191)
          {
            CFStringRef v6 = @"UTF-8";
            uint64_t v5 = 3;
          }
          else
          {
            uint64_t v5 = v5;
          }
        }
      }
      if (v3 < 4)
      {
        int v3 = 3;
      }
      else
      {
        uint64_t v14 = v2->super.size_;
        if ((int)v14 <= 0) {
          IOSArray_throwOutOfBoundsWithMsg(v14, 0);
        }
        if (!*((unsigned char *)&v2->super.size_ + 4))
        {
          uint64_t v15 = v2->super.size_;
          if ((int)v15 <= 1) {
            IOSArray_throwOutOfBoundsWithMsg(v15, 1);
          }
          if (!*((unsigned char *)&v2->super.size_ + 5))
          {
            uint64_t v16 = v2->super.size_;
            if ((int)v16 <= 2) {
              IOSArray_throwOutOfBoundsWithMsg(v16, 2);
            }
            if (*((unsigned __int8 *)&v2->super.size_ + 6) == 254)
            {
              uint64_t v17 = v2->super.size_;
              if ((int)v17 <= 3) {
                IOSArray_throwOutOfBoundsWithMsg(v17, 3);
              }
              if (*((unsigned __int8 *)&v2->super.size_ + 7) == 255)
              {
                v3 &= 0xFFFFFFFC;
                uint64_t v5 = 4;
                CFStringRef v6 = @"UTF-32BE";
              }
            }
          }
        }
        uint64_t v18 = v2->super.size_;
        if ((int)v18 <= 0) {
          IOSArray_throwOutOfBoundsWithMsg(v18, 0);
        }
        if (*((unsigned __int8 *)&v2->super.size_ + 4) == 255)
        {
          uint64_t v19 = v2->super.size_;
          if ((int)v19 <= 1) {
            IOSArray_throwOutOfBoundsWithMsg(v19, 1);
          }
          if (*((unsigned __int8 *)&v2->super.size_ + 5) == 254)
          {
            uint64_t v20 = v2->super.size_;
            if ((int)v20 <= 2) {
              IOSArray_throwOutOfBoundsWithMsg(v20, 2);
            }
            if (!*((unsigned char *)&v2->super.size_ + 6))
            {
              uint64_t v21 = v2->super.size_;
              if ((int)v21 <= 3) {
                IOSArray_throwOutOfBoundsWithMsg(v21, 3);
              }
              if (!*((unsigned char *)&v2->super.size_ + 7))
              {
                v3 &= 0xFFFFFFFC;
                uint64_t v5 = 4;
                CFStringRef v6 = @"UTF-32LE";
              }
            }
          }
        }
      }
    }
  }
  unint64_t v22 = +[NSString stringWithBytes:v2 offset:v5 length:(v3 - v5) charsetName:v6];
  if ([(NSString *)v22 hasPrefix:@"PK"]) {
    return @"application/zip";
  }
  if ([(NSString *)v22 hasPrefix:@"GI"]) {
    return @"image/gif";
  }
  id v23 = [(NSString *)v22 trim];
  if (!v23) {
    goto LABEL_70;
  }
  double v24 = v23;
  if ((atomic_load_explicit(JavaUtilLocale__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v25 = [v24 uppercaseStringWithJRELocale:JavaUtilLocale_US_];
  if (!v25) {
LABEL_70:
  }
    JreThrowNullPointerException();
  unint64_t v26 = v25;
  if (([v25 hasPrefix:@"<!DOCTYPE HTML"] & 1) != 0
    || ([v26 hasPrefix:@"<HTML"] & 1) != 0
    || ([v26 hasPrefix:@"<HEAD"] & 1) != 0
    || ([v26 hasPrefix:@"<BODY"] & 1) != 0
    || ([v26 hasPrefix:@"<HEAD"] & 1) != 0)
  {
    return @"text/html";
  }
  if ([v26 hasPrefix:@"<?XML"]) {
    return @"application/xml";
  }
  return 0;
}

void sub_10021FA24()
{
}

id sub_10021FA2C(uint64_t a1, void *a2)
{
  if (!a2) {
    goto LABEL_23;
  }
  sub_1002200BC([a2 replace:47 withChar:46]);
  if (!JavaNetURLConnection_contentHandlers_) {
    goto LABEL_23;
  }
  id v4 = [(id)JavaNetURLConnection_contentHandlers_ getWithId:a2];
  if (!v4)
  {
    if (qword_100560F50)
    {
      id v5 = [(id)qword_100560F50 createContentHandlerWithNSString:a2];
      [(id)JavaNetURLConnection_contentHandlers_ putWithId:a2 withId:v5];
      objc_opt_class();
      if (!v5) {
        return v5;
      }
      goto LABEL_6;
    }
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_(@"java.content.handler.pkgs");
    if (!PropertyWithNSString) {
      goto LABEL_19;
    }
    uint64_t v15 = (char *)[PropertyWithNSString split:@"\\|"];
    if (v15)
    {
      uint64_t v16 = (void **)(v15 + 24);
      unint64_t v17 = (unint64_t)&v15[8 * *((int *)v15 + 2) + 24];
      if ((unint64_t)(v15 + 24) < v17)
      {
        do
        {
          uint64_t v18 = *v16++;
          CFStringRef v19 = JreStrcat("$C$", v8, v9, v10, v11, v12, v13, v14, v18);
          uint64_t SystemClassLoader = JavaLangClassLoader_getSystemClassLoader();
          uint64_t v21 = (void *)IOSClass_forName_initialize_classLoader_(v19, 1, SystemClassLoader);
          if (!v21) {
            JreThrowNullPointerException();
          }
          id v22 = [v21 newInstance];
          id v5 = v22;
        }
        while ((unint64_t)v16 < v17);
        if (v22)
        {
LABEL_21:
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            id v25 = new_JavaNetUnknownServiceException_init();
            objc_exception_throw(v25);
          }
          [(id)JavaNetURLConnection_contentHandlers_ putWithId:a2 withId:v5];
          goto LABEL_5;
        }
      }
LABEL_19:
      id v23 = (__CFString *)JreStrcat("$$", v8, v9, v10, v11, v12, v13, v14, @"org.apache.harmony.awt.www.content.");
      double v24 = (void *)IOSClass_forName_(v23);
      if (!v24) {
        JreThrowNullPointerException();
      }
      id v5 = [v24 newInstance];
      if (!v5) {
        return *(id *)(a1 + 16);
      }
      goto LABEL_21;
    }
LABEL_23:
    JreThrowNullPointerException();
  }
  id v5 = v4;
LABEL_5:
  objc_opt_class();
LABEL_6:
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v5;
}

void sub_10021FF74(void *a1)
{
}

void sub_10021FFB0(void *a1)
{
}

NSString *sub_1002200BC(void *a1)
{
  BOOL v1 = new_JavaLangStringBuilder_initWithNSString_(a1);
  if ([(JavaLangStringBuilder *)v1 length] >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      UChar32 v3 = [(JavaLangAbstractStringBuilder *)v1 charAtWithInt:v2];
      if (!JavaLangCharacter_isLetterWithChar_(v3))
      {
        BOOL isDigitWithChar = JavaLangCharacter_isDigitWithChar_(v3);
        if (v3 != 46 && !isDigitWithChar) {
          [(JavaLangAbstractStringBuilder *)v1 setCharAtWithInt:v2 withChar:95];
        }
      }
      uint64_t v2 = (v2 + 1);
    }
    while ((int)v2 < [(JavaLangStringBuilder *)v1 length]);
  }
  return [(JavaLangStringBuilder *)v1 description];
}

uint64_t JavaNetURLConnection_setContentHandlerFactoryWithJavaNetContentHandlerFactory_(void *a1)
{
  if ((atomic_load_explicit(JavaNetURLConnection__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)JavaNetURLConnection_class_();
  objc_sync_enter(v2);
  if (qword_100560F50)
  {
    id v4 = new_JavaLangError_initWithNSString_(@"Factory already set");
    objc_exception_throw(v4);
  }
  JreStrongAssign((id *)&qword_100560F50, a1);
  return objc_sync_exit(v2);
}

void sub_100220228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNetURLConnection_setFileNameMapWithJavaNetFileNameMap_(void *a1)
{
  if ((atomic_load_explicit(JavaNetURLConnection__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)JavaNetURLConnection_class_();
  objc_sync_enter(v2);
  JreStrongAssign((id *)&qword_100560F58, a1);
  return objc_sync_exit(v2);
}

void sub_100220380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNetURLConnection_getFileNameMap()
{
  if ((atomic_load_explicit(JavaNetURLConnection__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)JavaNetURLConnection_class_();
  objc_sync_enter(v0);
  uint64_t v1 = qword_100560F58;
  if (!qword_100560F58)
  {
    uint64_t v2 = new_JavaNetDefaultFileNameMap_init();
    JreStrongAssignAndConsume((id *)&qword_100560F58, v2);
    uint64_t v1 = qword_100560F58;
  }
  objc_sync_exit(v0);
  return v1;
}

void sub_10022073C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNetURLConnection_class_()
{
  if ((atomic_load_explicit(JavaNetURLConnection__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100560F68 != -1) {
    dispatch_once(&qword_100560F68, &stru_10044E790);
  }
  return qword_100560F60;
}

void sub_1002207B4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560F60 = IOSClass_fromClass(v1);
}

JavaLangIllegalStateException *new_JavaLangIllegalStateException_init()
{
  uint64_t v0 = [JavaLangIllegalStateException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaLangIllegalStateException *new_JavaLangIllegalStateException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangIllegalStateException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

JavaLangIllegalStateException *new_JavaLangIllegalStateException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  id v4 = [JavaLangIllegalStateException alloc];
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

JavaLangIllegalStateException *new_JavaLangIllegalStateException_initWithJavaLangThrowable_(void *a1)
{
  uint64_t v2 = [JavaLangIllegalStateException alloc];
  if (a1) {
    id v3 = [a1 description];
  }
  else {
    id v3 = 0;
  }
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(v2, v3, a1);
  return v2;
}

LibcoreIoStructLinger *new_LibcoreIoStructLinger_initWithInt_withInt_(int a1, int a2)
{
  double result = [LibcoreIoStructLinger alloc];
  result->l_onoff_ = a1;
  result->l_linger_ = a2;
  return result;
}

uint64_t JavaUtilLoggingFilter_class_()
{
  if (qword_100560F78 != -1) {
    dispatch_once(&qword_100560F78, &stru_10044EBF8);
  }
  return qword_100560F70;
}

void sub_100220B2C(id a1)
{
  qword_100560F70 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilLoggingFilter);
}

double JavaLangStrictMath_absWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_absWithDouble_(a1);
}

float JavaLangStrictMath_absWithFloat_(float a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_absWithFloat_(a1);
}

uint64_t JavaLangStrictMath_absWithInt_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_absWithInt_(a1);
}

uint64_t JavaLangStrictMath_absWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_absWithLong_(a1);
}

void JavaLangStrictMath_acosWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  if (((HIDWORD(v2) >> 20) & 0x7FF) < 0x3FF && (HIDWORD(v2) & 0x7FFFFFFFu) >> 21 > 0x1FE)
  {
    if (v2 < 0)
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
    }
    else
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v3 = JavaLangDouble_doubleToRawLongBitsWithDouble_(sqrt((1.0 - a1) * 0.5));
      JavaLangDouble_longBitsToDoubleWithLong_(v3 & 0xFFFFFFFF00000000);
    }
  }
}

void JavaLangStrictMath_asinWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
  if (((HIDWORD(v2) >> 20) & 0x7FF) < 0x3FF
    && (v3 >> 21 > 0x1FE || v3 >> 22 <= 0xF8 && a1 + 1.0e300 <= 1.0))
  {
    double v4 = (1.0 - JavaLangMath_absWithDouble_(a1)) * 0.5;
    if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    double v5 = sqrt(v4);
    if (v3 < 0x3FEF3333)
    {
      uint64_t v6 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v5);
      JavaLangDouble_longBitsToDoubleWithLong_(v6 & 0xFFFFFFFF00000000);
    }
  }
}

void JavaLangStrictMath_atanWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
  if (((HIDWORD(v2) >> 20) & 0x7FF) < 0x441)
  {
    if (v3 >> 18 > 0xFF6)
    {
      JavaLangMath_absWithDouble_(a1);
      if (v3 > 0x3FF2FFFF)
      {
        if (v3 > 0x40037FFF) {
          uint64_t v4 = 3;
        }
        else {
          uint64_t v4 = 2;
        }
      }
      else
      {
        uint64_t v4 = v3 > 0x3FE5FFFF;
      }
    }
    else
    {
      uint64_t v4 = 0xFFFFFFFFLL;
      if (a1 + 1.0e300 > 1.0 && v3 >> 21 < 0x1F1) {
        return;
      }
    }
    if (v3 >> 18 <= 0xFF6) {
      return;
    }
    if (!qword_100560F80) {
      goto LABEL_36;
    }
    uint64_t v7 = *(unsigned int *)(qword_100560F80 + 8);
    if ((v4 & 0x80000000) != 0 || (int)v7 <= (int)v4) {
      IOSArray_throwOutOfBoundsWithMsg(v7, v4);
    }
    if (!qword_100560F88) {
      goto LABEL_36;
    }
    uint64_t v8 = *(unsigned int *)(qword_100560F88 + 8);
    if ((v4 & 0x80000000) != 0 || (int)v8 <= (int)v4) {
      IOSArray_throwOutOfBoundsWithMsg(v8, v4);
    }
  }
  else
  {
    if (v3 > 0x7FF00000 || v2 && v3 == 2146435072) {
      return;
    }
    if (SHIDWORD(v2) >= 1)
    {
      if (qword_100560F80)
      {
        uint64_t v5 = *(unsigned int *)(qword_100560F80 + 8);
        if ((int)v5 <= 3) {
          IOSArray_throwOutOfBoundsWithMsg(v5, 3);
        }
        if (qword_100560F88)
        {
          uint64_t v6 = *(unsigned int *)(qword_100560F88 + 8);
          if ((int)v6 <= 3) {
            IOSArray_throwOutOfBoundsWithMsg(v6, 3);
          }
          return;
        }
      }
LABEL_36:
      JreThrowNullPointerException();
    }
    if (!qword_100560F80) {
      goto LABEL_36;
    }
    uint64_t v9 = *(unsigned int *)(qword_100560F80 + 8);
    if ((int)v9 <= 3) {
      IOSArray_throwOutOfBoundsWithMsg(v9, 3);
    }
    if (!qword_100560F88) {
      goto LABEL_36;
    }
    uint64_t v10 = *(unsigned int *)(qword_100560F88 + 8);
    if ((int)v10 <= 3) {
      IOSArray_throwOutOfBoundsWithMsg(v10, 3);
    }
  }
}

void sub_100221634()
{
}

double JavaLangStrictMath_atan2WithDouble_withDouble_(double a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v4 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  unint64_t v5 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a2);
  uint64_t v6 = HIDWORD(v5) & 0x7FFFFFFF;
  if (!v5 && v6 > 0x7FF00000) {
    return a1 + a2;
  }
  uint64_t v7 = HIDWORD(v4) & 0x7FFFFFFF;
  if (!v4 && v7 >= 0x7FF00001) {
    return a1 + a2;
  }
  if ((HIDWORD(v5) - 1072693248) | v5)
  {
    uint64_t v9 = (HIDWORD(v5) >> 30) & 2 | (HIDWORD(v4) >> 31);
    if (!(v7 | v4))
    {
      if (v9 >= 2)
      {
        if (v9 == 3) {
          return -3.14159265;
        }
        else {
          return 3.14159265;
        }
      }
      return a1;
    }
    if (!(v6 | v5)) {
      return *(double *)((char *)&unk_100320740 + ((v4 >> 60) & 8));
    }
    if (v6 == 2146435072)
    {
      if (v7 == 2146435072) {
        uint64_t v10 = (double *)&unk_1003207B0;
      }
      else {
        uint64_t v10 = (double *)&unk_1003207D0;
      }
      return v10[v9];
    }
    if (v7 == 2146435072) {
      return *(double *)((char *)&unk_100320740 + ((v4 >> 60) & 8));
    }
    int v11 = v7 - v6;
    if (v11 <= 63963135)
    {
      if ((v5 & 0x8000000000000000) == 0 || (double v12 = 0.0, v11 >= -62914560))
      {
        double v13 = JavaLangMath_absWithDouble_(a1 / a2);
        JavaLangStrictMath_atanWithDouble_(v13);
      }
    }
    else
    {
      double v12 = 1.57079633;
    }
    if (!v9) {
      return v12;
    }
    if (v9 == 2) {
      return 3.14159265 - (v12 + -1.2246468e-16);
    }
    if (v9 != 1) {
      return v12 + -1.2246468e-16 + -3.14159265;
    }
    unint64_t v14 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v12) ^ 0x8000000000000000;
    return JavaLangDouble_longBitsToDoubleWithLong_(v14);
  }
  else
  {
    JavaLangStrictMath_atanWithDouble_(a1);
  }
  return result;
}

double JavaLangStrictMath_cbrtWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 < 0.0) {
    return -JavaLangStrictMath_cbrtWithDouble_(-a1);
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  if (((HIDWORD(v2) >> 20) & 0x7FF) == 0x7FF) {
    return a1 + a1;
  }
  unint64_t v3 = v2;
  uint64_t v4 = HIDWORD(v2) & 0x7FFFFFFF;
  if (!(v4 | v2)) {
    return a1;
  }
  unint64_t v5 = JavaLangDouble_doubleToRawLongBitsWithDouble_(0.0);
  if (v4 >> 20)
  {
    unint64_t v8 = (unint64_t)(((1431655766 * (unint64_t)v4) >> 32) + 715094163) << 32;
  }
  else
  {
    double v6 = JavaLangDouble_longBitsToDoubleWithLong_(v5 | 0x4350000000000000);
    uint64_t v7 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v6 * a1);
    unint64_t v8 = v7;
    unint64_t v5 = (unint64_t)(SHIDWORD(v7) / 3 + 696219795) << 32;
  }
  double v10 = JavaLangDouble_longBitsToDoubleWithLong_(v5 | v8);
  uint64_t v11 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v10* (1.60714286/ (v10 * v10 / a1 * v10 + 0.542857143 + 1.41428571 + -0.705306122 / (v10 * v10 / a1 * v10 + 0.542857143))+ 0.357142857));
  double v12 = JavaLangDouble_longBitsToDoubleWithLong_((uint64_t)&_mh_execute_header + (v11 & 0xFFFFFFFF00000000));
  unint64_t v13 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v12 + v12
                                                          * ((a1 / (v12 * v12) - v12)
                                                           / (v12 + v12 + a1 / (v12 * v12)))) | v3 & 0x8000000000000000;
  return JavaLangDouble_longBitsToDoubleWithLong_(v13);
}

void JavaLangStrictMath_coshWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  if (((HIDWORD(v2) >> 20) & 0x7FF) != 0x7FF)
  {
    uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
    if (v3 > 0x3FD62E42)
    {
      if (v3 > 0x40862E41)
      {
        if (v3 < 0x408633CE
          || v3 == 1082536910
          && ((((unint64_t)qword_100560F90 >> 29) + v2) & 0xFFFFFFFE) <= 0x8FB9F87DuLL)
        {
          double v6 = JavaLangMath_absWithDouble_(a1);
          JavaLangStrictMath_expWithDouble_(v6 * 0.5);
        }
      }
      else
      {
        double v5 = JavaLangMath_absWithDouble_(a1);
        JavaLangStrictMath_expWithDouble_(v5);
      }
    }
    else
    {
      double v4 = JavaLangMath_absWithDouble_(a1);
      JavaLangStrictMath_expm1WithDouble_(v4);
    }
  }
}

void JavaLangStrictMath_expWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
  if (v3 >= 0x40862E42)
  {
    if (v3 >> 20 >= 0x7FF || a1 > 709.782713 || a1 < -745.133219) {
      return;
    }
    goto LABEL_15;
  }
  if (v3 >= 0x3FD62E43)
  {
    if (v3 <= 0x3FF0A2B1)
    {
      unint64_t v4 = ~((unint64_t)v2 >> 60) & 8;
      double v5 = a1 - *(double *)((char *)&unk_100320750 + v4);
      double v6 = *(double *)((char *)&unk_100320760 + v4);
      int v7 = (v2 >= 0) - ((unint64_t)v2 >> 63);
LABEL_24:
      a1 = v5 - v6;
      goto LABEL_26;
    }
LABEL_15:
    double v8 = -0.5;
    if (v2 >= 0) {
      double v8 = 0.5;
    }
    double v9 = v8 + a1 * 1.44269504;
    if (v9 < 0.0) {
      unsigned int v10 = 0x80000000;
    }
    else {
      unsigned int v10 = 0x7FFFFFFF;
    }
    if ((int)v9 == 0x80000000) {
      int v7 = v10;
    }
    else {
      int v7 = (int)v9;
    }
    double v5 = a1 + (double)v7 * -0.69314718;
    double v6 = (double)v7 * 1.90821493e-10;
    goto LABEL_24;
  }
  int v7 = 0;
  double v5 = 0.0;
  if (a1 + 1.0e300 > 1.0 && v3 >> 20 <= 0x3E2) {
    return;
  }
  double v6 = 0.0;
LABEL_26:
  if (v7)
  {
    double v11 = a1
        - a1
        * a1
        * (a1
         * a1
         * (a1 * a1 * (a1 * a1 * (a1 * a1 * 0.000000041381368 + -0.00000165339022) + 0.0000661375632) + -0.00277777778)
         + 0.166666667);
    uint64_t v12 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v5 - (v6 - a1 * v11 / (2.0 - v11)) + 1.0);
    uint64_t v13 = (v7 << 20);
    if (v7 < -1021)
    {
      JavaLangDouble_longBitsToDoubleWithLong_(v12 + ((unint64_t)(v13 + 1048576000) << 32));
    }
    else
    {
      uint64_t v14 = v12 + (v13 << 32);
      JavaLangDouble_longBitsToDoubleWithLong_(v14);
    }
  }
}

double JavaLangStrictMath_expm1WithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
  if (v3 < 0x4043687A)
  {
    if (v3 < 0x3FD62E43)
    {
      if (v3 >> 20 < 0x3C9) {
        return a1;
      }
      unsigned int v6 = 0;
      double v12 = 0.0;
LABEL_32:
      double v13 = a1 * (a1 * 0.5);
      double v14 = v13
          * (v13 * (v13 * (v13 * (v13 * -0.000000201099218 + 0.00000400821783) + -0.0000793650758) + 0.00158730159)
           + -0.0333333333)
          + 1.0;
      double v15 = v13 * ((v14 - (3.0 - v14 * (a1 * 0.5))) / (6.0 - a1 * (3.0 - v14 * (a1 * 0.5))));
      if (!v6) {
        return a1 - -(v13 - a1 * v15);
      }
      double v16 = -(v12 - a1 * (v15 - v12)) - v13;
      if (v6 == 1)
      {
        if (a1 < -0.25) {
          return (v16 - (a1 + 0.5)) * -2.0;
        }
        double v17 = a1 - v16;
        double v18 = 1.0;
        double v19 = 2.0;
      }
      else
      {
        if (v6 != -1)
        {
          if (v6 - 57 > 0xFFFFFFC5)
          {
            uint64_t v21 = JavaLangDouble_doubleToRawLongBitsWithDouble_(1.0);
            if (v6 > 0x13) {
              double v22 = a1
            }
                  - (v16
                   + JavaLangDouble_longBitsToDoubleWithLong_(v21 - ((unint64_t)v6 << 52) + 0x3FF0000000000000))
                  + 1.0;
            else {
              double v22 = JavaLangDouble_longBitsToDoubleWithLong_(v21 | ((unint64_t)(1072693248 - (0x200000u >> v6)) << 32))
            }
                  - (v16
                   - a1);
            uint64_t v23 = JavaLangDouble_doubleToRawLongBitsWithDouble_(v22) + ((unint64_t)v6 << 52);
            return JavaLangDouble_longBitsToDoubleWithLong_(v23);
          }
          else
          {
            uint64_t v20 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1 - v16 + 1.0);
            return JavaLangDouble_longBitsToDoubleWithLong_(v20 + ((unint64_t)v6 << 52)) + -1.0;
          }
        }
        double v17 = a1 - v16;
        double v18 = -0.5;
        double v19 = 0.5;
      }
      return v18 + v17 * v19;
    }
    if (v3 <= 0x3FF0A2B1)
    {
      if (v2 < 0)
      {
        double v5 = a1 + 0.69314718;
        unsigned int v6 = -1;
        double v7 = -1.90821493e-10;
      }
      else
      {
        double v5 = a1 + -0.69314718;
        unsigned int v6 = 1;
        double v7 = 1.90821493e-10;
      }
LABEL_30:
      a1 = v5 - v7;
      double v12 = v5 - (v5 - v7) - v7;
      goto LABEL_32;
    }
LABEL_21:
    double v9 = -0.5;
    if (v2 >= 0) {
      double v9 = 0.5;
    }
    double v10 = v9 + a1 * 1.44269504;
    if (v10 < 0.0) {
      unsigned int v11 = 0x80000000;
    }
    else {
      unsigned int v11 = 0x7FFFFFFF;
    }
    if ((int)v10 == 0x80000000) {
      unsigned int v6 = v11;
    }
    else {
      unsigned int v6 = (int)v10;
    }
    double v5 = a1 + (double)(int)v6 * -0.69314718;
    double v7 = (double)(int)v6 * 1.90821493e-10;
    goto LABEL_30;
  }
  if (v3 >= 0x40862E42)
  {
    if (v3 >> 20 >= 0x7FF)
    {
      if (HIDWORD(v2) & 0xFFFFF | v2) {
        return a1 + a1;
      }
      double result = -1.0;
      if (v2 >= 0) {
        return a1;
      }
      return result;
    }
    if (a1 > 709.782713) {
      return INFINITY;
    }
  }
  double result = -1.0;
  if (a1 + 1.0e-300 >= 0.0 || v2 >= 0) {
    goto LABEL_21;
  }
  return result;
}

double JavaLangStrictMath_hypotWithDouble_withDouble_(long double a1, long double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return hypot(a1, a2);
}

double JavaLangStrictMath_IEEEremainderWithDouble_withDouble_(long double a1, long double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return remainder(a1, a2);
}

void JavaLangStrictMath_logWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  unint64_t v3 = HIDWORD(v2);
  if (SHIDWORD(v2) >= 0x100000) {
    goto LABEL_7;
  }
  if (HIDWORD(v2) & 0x7FFFFFFF | v2 && (v2 & 0x8000000000000000) == 0)
  {
    unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1 * 1.80143985e16);
    unint64_t v3 = HIDWORD(v2);
LABEL_7:
    if ((int)v3 < 2146435072) {
      JavaLangDouble_longBitsToDoubleWithLong_(v2 | (((((v3 & 0xFFFFF) + 614244) & 0x100000 | v3 & 0xFFFFF) ^ 0x3FF00000) << 32));
    }
  }
}

void JavaLangStrictMath_log10WithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  unint64_t v3 = HIDWORD(v2);
  if (SHIDWORD(v2) >= 0x100000)
  {
    int v4 = -1023;
LABEL_8:
    if ((int)v3 < 2146435072)
    {
      double v5 = JavaLangDouble_longBitsToDoubleWithLong_(v2 | (((v3 & 0xFFFFF | ((v4 + ((int)v3 >> 20)) >> 31 << 20)) ^ 0x3FF00000) << 32));
      JavaLangStrictMath_logWithDouble_(v5);
    }
    return;
  }
  if (HIDWORD(v2) & 0x7FFFFFFF | v2 && (v2 & 0x8000000000000000) == 0)
  {
    unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1 * 1.80143985e16);
    unint64_t v3 = HIDWORD(v2);
    int v4 = -1077;
    goto LABEL_8;
  }
}

void JavaLangStrictMath_log1pWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  if (SHIDWORD(v2) > 1071284857)
  {
    if (HIDWORD(v2) >> 20 >= 0x7FF) {
      return;
    }
    if (HIDWORD(v2) >> 22 > 0x10C)
    {
      unint64_t v4 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
      unint64_t v5 = HIDWORD(v4);
      goto LABEL_14;
    }
LABEL_13:
    unint64_t v4 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1 + 1.0);
    unint64_t v5 = HIDWORD(v4);
LABEL_14:
    int v6 = v5 & 0xFFFFF;
    if ((v5 & 0xFFFFF) > 0x6A09D) {
      JavaLangDouble_longBitsToDoubleWithLong_(v4 | ((unint64_t)(v6 | 0x3FE00000u) << 32));
    }
    else {
      JavaLangDouble_longBitsToDoubleWithLong_(v4 | ((unint64_t)(v6 | 0x3FF00000u) << 32));
    }
    return;
  }
  uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
  if (v3 >> 20 < 0x3FF && v3 >> 21 > 0x1F0 && (HIDWORD(v2) - 1) > 0xBFD2BEC2) {
    goto LABEL_13;
  }
}

double JavaLangStrictMath_maxWithDouble_withDouble_(double a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > a2) {
    return a1;
  }
  if (a1 >= a2)
  {
    if (a1 != a2) {
      return NAN;
    }
    if (a1 != 0.0) {
      return a1;
    }
    uint64_t v5 = JavaLangDouble_doubleToLongBitsWithDouble_(a1);
    uint64_t v6 = JavaLangDouble_doubleToLongBitsWithDouble_(a2);
    a2 = 0.0;
    if ((v6 & v5) < 0 != v7) {
      return a1;
    }
  }
  return a2;
}

float JavaLangStrictMath_maxWithFloat_withFloat_(float a1, float a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > a2) {
    return a1;
  }
  if (a1 >= a2)
  {
    if (a1 != a2) {
      return NAN;
    }
    if (a1 != 0.0) {
      return a1;
    }
    int v5 = JavaLangFloat_floatToIntBitsWithFloat_(a1);
    int v6 = JavaLangFloat_floatToIntBitsWithFloat_(a2);
    a2 = 0.0;
    if ((v6 & v5) < 0 != v7) {
      return a1;
    }
  }
  return a2;
}

uint64_t JavaLangStrictMath_maxWithInt_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_maxWithInt_withInt_(a1, a2);
}

double JavaLangStrictMath_minWithDouble_withDouble_(double a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > a2) {
    return a2;
  }
  if (a1 < a2) {
    return a1;
  }
  if (a1 != a2) {
    return NAN;
  }
  if (a1 == 0.0)
  {
    uint64_t v6 = JavaLangDouble_doubleToLongBitsWithDouble_(a1);
    if ((JavaLangDouble_doubleToLongBitsWithDouble_(a2) | v6) < 0) {
      return -0.0;
    }
  }
  return a1;
}

float JavaLangStrictMath_minWithFloat_withFloat_(float a1, float a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > a2) {
    return a2;
  }
  if (a1 >= a2)
  {
    if (a1 == a2)
    {
      if (a1 == 0.0)
      {
        int v5 = JavaLangFloat_floatToIntBitsWithFloat_(a1);
        if (((JavaLangFloat_floatToIntBitsWithFloat_(a2) | v5) & 0x80000000) != 0) {
          return -0.0;
        }
      }
    }
    else
    {
      return NAN;
    }
  }
  return a1;
}

uint64_t JavaLangStrictMath_minWithInt_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_minWithInt_withInt_(a1, a2);
}

unint64_t JavaLangStrictMath_roundWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_roundWithDouble_(a1);
}

uint64_t JavaLangStrictMath_roundWithFloat_(float a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_roundWithFloat_(a1);
}

uint64_t JavaLangStrictMath_signumWithDouble_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_signumWithDouble_();
}

uint64_t JavaLangStrictMath_signumWithFloat_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_signumWithFloat_();
}

double JavaLangStrictMath_sinhWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  if (((HIDWORD(v2) >> 20) & 0x7FF) == 0x7FF) {
    return a1 + a1;
  }
  uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
  if (v2 >= 0) {
    double v4 = 0.5;
  }
  else {
    double v4 = -0.5;
  }
  if (v3 > 0x4035FFFF)
  {
    if (v3 < 0x40862E42)
    {
      double v10 = JavaLangMath_absWithDouble_(a1);
      JavaLangStrictMath_expWithDouble_(v10);
      return v4 * v9;
    }
    if (v3 < 0x408633CE
      || v3 == 1082536910
      && ((((unint64_t)qword_100560F90 >> 29) + v2) & 0xFFFFFFFE) <= 0x8FB9F87DuLL)
    {
      double v11 = JavaLangMath_absWithDouble_(a1);
      JavaLangStrictMath_expWithDouble_(v11 * 0.5);
      return v12 * (v4 * v12);
    }
    else
    {
      return a1 * 1.0e307;
    }
  }
  else
  {
    unsigned int v5 = v3 >> 20;
    if (a1 + 1.0e307 <= 1.0 || v5 >= 0x3E3)
    {
      double v6 = JavaLangMath_absWithDouble_(a1);
      double v7 = JavaLangStrictMath_expm1WithDouble_(v6);
      double v8 = v7 + 1.0;
      if (v5 > 0x3FE) {
        double v9 = v7 + v7 / v8;
      }
      else {
        double v9 = -(v7 * v7) / v8 + v7 * 2.0;
      }
      return v4 * v9;
    }
  }
  return a1;
}

double JavaLangStrictMath_sqrtWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return sqrt(a1);
}

double JavaLangStrictMath_tanWithDouble_(long double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return tan(a1);
}

void JavaLangStrictMath_tanhWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  if (((HIDWORD(v2) >> 20) & 0x7FF) != 0x7FF)
  {
    uint64_t v3 = HIDWORD(v2) & 0x7FFFFFFF;
    if (v3 <= 0x4035FFFF && v3 >> 23 > 0x78)
    {
      double v4 = JavaLangMath_absWithDouble_(a1);
      if (v3 >> 20 < 0x3FF) {
        JavaLangMath_expm1WithDouble_(v4 * -2.0);
      }
      else {
        JavaLangMath_expm1WithDouble_(v4 + v4);
      }
    }
  }
}

double JavaLangStrictMath_toDegreesWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_toDegreesWithDouble_(a1);
}

double JavaLangStrictMath_toRadiansWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_toRadiansWithDouble_(a1);
}

void JavaLangStrictMath_ulpWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaLangDouble_isInfiniteWithDouble_(a1))
  {
    if (a1 == 1.79769313e308 || a1 == -1.79769313e308)
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
    }
    else
    {
      double v3 = JavaLangMath_absWithDouble_(a1);
      sub_100223558(v3, 1.79769313e308);
    }
  }
}

float JavaLangStrictMath_ulpWithFloat_(float a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_ulpWithFloat_(a1);
}

double sub_100223558(long double a1, long double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return nextafter(a1, a2);
}

double JavaLangStrictMath_copySignWithDouble_withDouble_(double a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a1);
  unint64_t v5 = JavaLangDouble_doubleToRawLongBitsWithDouble_(a2) & 0x8000000000000000 | v4 & 0x7FFFFFFFFFFFFFFFLL;
  return JavaLangDouble_longBitsToDoubleWithLong_(v5);
}

float JavaLangStrictMath_copySignWithFloat_withFloat_(float a1, float a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v4 = JavaLangFloat_floatToRawIntBitsWithFloat_(a1);
  int v5 = JavaLangFloat_floatToRawIntBitsWithFloat_(a2) & 0x80000000 | v4 & 0x7FFFFFFF;
  return JavaLangFloat_intBitsToFloatWithInt_(v5);
}

uint64_t JavaLangStrictMath_getExponentWithFloat_(float a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_getExponentWithFloat_(a1);
}

uint64_t JavaLangStrictMath_getExponentWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_getExponentWithDouble_(a1);
}

double JavaLangStrictMath_nextAfterWithDouble_withDouble_(long double a1, long double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 == 0.0 && a2 == 0.0) {
    return a2;
  }
  return sub_100223558(a1, a2);
}

float JavaLangStrictMath_nextAfterWithFloat_withDouble_(float a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_nextAfterWithFloat_withDouble_(a1, a2);
}

double JavaLangStrictMath_nextUpWithDouble_(double a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_nextUpWithDouble_(a1);
}

float JavaLangStrictMath_nextUpWithFloat_(float a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangMath_nextUpWithFloat_(a1);
}

double JavaLangStrictMath_scalbWithDouble_withInt_(int a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaLangDouble_isNaNWithDouble_()) {
    return a2;
  }
  isInfiniteWithDoubluint64_t e = JavaLangDouble_isInfiniteWithDouble_(a2);
  if (a2 == 0.0 || isInfiniteWithDouble) {
    return a2;
  }
  unint64_t v5 = JavaLangDouble_doubleToLongBitsWithDouble_(a2);
  uint64_t v6 = (int)(a1 + ((v5 >> 52) & 0x7FF) - 1023);
  int v7 = JavaLangLong_numberOfLeadingZerosWithLong_(v5 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v8 = (v7 - 12) & ~((v7 - 12) >> 31);
  if (JavaLangMath_absWithDouble_(a2) >= 2.22507386e-308) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v6 - v9;
  if (v6 - v9 >= 1024)
  {
    if (a2 <= 0.0) {
      return -INFINITY;
    }
    else {
      return INFINITY;
    }
  }
  if (v10 > -1024)
  {
    double v16 = JavaLangMath_absWithDouble_(a2);
    uint64_t v17 = (v10 << 52) + 0x3FF0000000000000;
    uint64_t v18 = v17 | (v5 << (v8 + 1)) & 0xFFFFFFFFFFFFFLL;
    uint64_t v19 = v17 | v5 & 0xFFFFFFFFFFFFFLL;
    if (v16 >= 2.22507386e-308) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = v18;
    }
  }
  else
  {
    uint64_t v12 = v8 + v10 + 1023;
    double v13 = JavaLangMath_absWithDouble_(a2);
    uint64_t v14 = v5 & 0xFFFFFFFFFFFFFLL;
    if (v13 >= 2.22507386e-308)
    {
      v14 |= 0x10000000000000uLL;
      uint64_t v15 = v12 - 1;
    }
    else
    {
      uint64_t v15 = v12;
    }
    uint64_t v20 = sub_100223CD0(v14, v15);
  }
  unint64_t v21 = v20 | v5 & 0x8000000000000000;
  return JavaLangDouble_longBitsToDoubleWithLong_(v21);
}

float JavaLangStrictMath_scalbWithFloat_withInt_(int a1, float a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaLangFloat_isNaNWithFloat_()) {
    return a2;
  }
  BOOL isInfiniteWithFloat = JavaLangFloat_isInfiniteWithFloat_(a2);
  if (a2 == 0.0 || isInfiniteWithFloat) {
    return a2;
  }
  unsigned int v5 = JavaLangFloat_floatToIntBitsWithFloat_(a2);
  int v6 = JavaLangInteger_numberOfLeadingZerosWithInt_(v5 & 0x7FFFFFFF);
  int v7 = (v6 - 9) & ~((v6 - 9) >> 31);
  if (JavaLangMath_absWithFloat_(a2) >= 1.1755e-38) {
    int v8 = 0;
  }
  else {
    int v8 = v7;
  }
  int v9 = a1 + (v5 >> 23) - v8 - 127;
  if (v9 >= 128)
  {
    if (a2 <= 0.0) {
      return -INFINITY;
    }
    else {
      return INFINITY;
    }
  }
  if (v9 > -128)
  {
    float v15 = JavaLangMath_absWithFloat_(a2);
    int v16 = (v9 << 23) + 1065353216;
    int v17 = v16 | (v5 << (v7 + 1)) & 0x7FFFFF;
    int v18 = v16 | v5 & 0x7FFFFF;
    if (v15 >= 1.1755e-38) {
      int v19 = v18;
    }
    else {
      int v19 = v17;
    }
  }
  else
  {
    int v11 = v7 + v9 + 127;
    float v12 = JavaLangMath_absWithFloat_(a2);
    signed int v13 = v5 & 0x7FFFFF;
    if (v12 >= 1.1755e-38)
    {
      v13 |= 0x800000u;
      int v14 = v11 - 1;
    }
    else
    {
      int v14 = v11;
    }
    int v19 = sub_100223C1C(v13, v14);
  }
  unsigned int v20 = v19 | v5 & 0x80000000;
  return JavaLangFloat_intBitsToFloatWithInt_(v20);
}

uint64_t sub_100223C1C(signed int a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a2 >= 1) {
    return (a1 << a2);
  }
  int v5 = JavaLangInteger_numberOfLeadingZerosWithInt_(a1 & 0x7FFFFFFF);
  uint64_t result = 0;
  if (v5 <= a2 + 32)
  {
    int v6 = -a2;
    int v7 = ~a2;
    if (((a1 >> v7) & 1) != 0 && JavaLangInteger_numberOfTrailingZerosWithInt_(a1) != v7) {
      return ((a1 >> v6) + 1);
    }
    else {
      return (a1 >> v6);
    }
  }
  return result;
}

uint64_t sub_100223CD0(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangStrictMath__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a2 >= 1) {
    return a1 << a2;
  }
  int v5 = JavaLangLong_numberOfLeadingZerosWithLong_(a1 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t result = 0;
  if (a2 + 64 >= v5)
  {
    uint64_t v6 = -a2;
    uint64_t v7 = ~a2;
    if ((((unint64_t)a1 >> v7) & 1) != 0 && (int)JavaLangLong_numberOfTrailingZerosWithLong_(a1) != v7) {
      return (a1 >> v6) + 1;
    }
    else {
      return a1 >> v6;
    }
  }
  return result;
}

id sub_100224318(void *a1, uint64_t a2)
{
  [a1 collectMethods:a2 publicOnly:1];
  if (([a1 getModifiers] & 0x400) != 0)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v4 = objc_msgSend(a1, "getInterfacesInternal", 0);
    id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        int v8 = 0;
        do
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          sub_100224318(*(void *)(*((void *)&v11 + 1) + 8 * (void)v8), a2);
          int v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v6);
    }
  }
  id result = [a1 getSuperclass];
  if (result)
  {
    uint64_t v10 = result;
    do
    {
      sub_100224318(v10, a2);
      id result = [v10 getSuperclass];
      uint64_t v10 = result;
    }
    while (result);
  }
  return result;
}

NSMutableString *IOSClass_GetTranslatedMethodName(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v4 = a2;
  id v5 = a1;
  if (a1)
  {
    while (1)
    {
      id v6 = [v5 getMetadata];
      if (v6)
      {
        uint64_t v7 = a3 ? *(unsigned int *)(a3 + 8) : 0;
        id v8 = [v6 findMethodMetadataWithJavaName:v4 argCount:v7];
        if (v8) {
          break;
        }
      }
      id v5 = [v5 getSuperclass];
      if (!v5) {
        goto LABEL_9;
      }
    }
    return (NSMutableString *)[v8 objcName];
  }
  else
  {
LABEL_9:
    if (a3)
    {
      uint64_t v9 = *(unsigned int *)(a3 + 8);
      if (v9)
      {
        uint64_t v10 = *(void **)(a3 + 24);
        long long v11 = +[NSMutableString stringWithCapacity:128];
        if ((void *)qword_100560FF0 == v10) {
          CFStringRef v12 = @"Id";
        }
        else {
          CFStringRef v12 = (const __CFString *)sub_100226E44([v10 objcName]);
        }
        [(NSMutableString *)v11 appendFormat:@"%@With%@:", v4, v12];
        if ((int)v9 >= 2)
        {
          uint64_t v14 = a3 + 8;
          uint64_t v15 = v9 - 1;
          do
          {
            int v16 = *(void **)(v14 + 24);
            if ((void *)qword_100560FF0 == v16) {
              CFStringRef v17 = @"Id";
            }
            else {
              CFStringRef v17 = (const __CFString *)sub_100226E44([v16 objcName]);
            }
            [(NSMutableString *)v11 appendFormat:@"with%@:", v17];
            v14 += 8;
            --v15;
          }
          while (v15);
        }
        return v11;
      }
    }
    return (NSMutableString *)v4;
  }
}

Class sub_100224980(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ([a1 isEqualToString:@"NSObject"]) {
    return (Class)qword_100560FF0;
  }
  double v3 = NSProtocolFromString((NSString *)a1);
  if (v3)
  {
    return (Class)FastPointerLookup(&stru_10055D368, (uint64_t)v3);
  }
  else
  {
    Class result = NSClassFromString((NSString *)a1);
    if (result)
    {
      return (Class)IOSClass_fromClass((uint64_t)result);
    }
  }
  return result;
}

uint64_t sub_100224A24(int a1)
{
  uint64_t result = 0;
  if (a1 > 82)
  {
    switch(a1)
    {
      case 'S':
        return qword_100560FC8;
      case 'V':
        return qword_100560FD8;
      case 'Z':
        return qword_100560FD0;
    }
  }
  else
  {
    switch(a1)
    {
      case 'B':
        uint64_t result = qword_100560F98;
        break;
      case 'C':
        uint64_t result = qword_100560FA0;
        break;
      case 'D':
        uint64_t result = qword_100560FA8;
        break;
      case 'F':
        uint64_t result = qword_100560FB0;
        break;
      case 'I':
        uint64_t result = qword_100560FB8;
        break;
      case 'J':
        uint64_t result = qword_100560FC0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t IOSClass_forName_(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ([a1 length])
  {
    Class v2 = [a1 characterAtIndex:0] == 91
       ? (Class)sub_100224E78(a1, 1)
       : sub_100224F5C(a1);
    uint64_t v3 = (uint64_t)v2;
    if (v2) {
      return v3;
    }
  }
  uint64_t v3 = (uint64_t)sub_100224F5C([a1 stringByAppendingString:@"Enum"]);
  if (v3) {
    return v3;
  }
  if ([a1 rangeOfString:@"$"] == (id)0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_26;
  }
  id v4 = sub_1002251E8(a1);
  id v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"^%@$", objc_msgSend(v4, "stringByReplacingOccurrencesOfString:withString:options:range:", @"[_$]", @"[_$]+", 1024, 0, objc_msgSend(v4, "length")));
  UErrorCode status = U_ZERO_ERROR;
  memset(&pe, 0, sizeof(pe));
  pe.offset = -1;
  int32_t v6 = [(NSString *)v5 length];
  uint64_t v7 = (UChar *)malloc_type_malloc(2 * v6, 0x1000040BDFB0063uLL);
  -[NSString getCharacters:range:](v5, "getCharacters:range:", v7, 0, v6);
  id v8 = uregex_open(v7, v6, 0x200u, &pe, &status);
  if (status >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    int v19 = objc_alloc_init(JavaLangAssertionError);
LABEL_28:
    objc_exception_throw(v19);
  }
  uint64_t v9 = v8;
  int ClassList = objc_getClassList(0, 0);
  long long v11 = (Class *)malloc_type_malloc(8 * ClassList, 0x80040B8603338uLL);
  objc_getClassList(v11, ClassList);
  CFStringRef v12 = malloc_type_malloc(0x200uLL, 0x1000040BDFB0063uLL);
  if (ClassList < 1)
  {
    uint64_t v3 = 0;
  }
  else
  {
    unsigned int v20 = v7;
    uint64_t v13 = ClassList;
    unint64_t v14 = 256;
    uint64_t v15 = v11;
    while (1)
    {
      Class v16 = *v15;
      id v17 = [objc_alloc((Class)NSString) initWithUTF8String:class_getName(*v15)];
      if ((unint64_t)[v17 length] > v14)
      {
        CFStringRef v12 = malloc_type_realloc(v12, (size_t)[v17 length], 0x37E2B8F6uLL);
        unint64_t v14 = (unint64_t)[v17 length];
      }
      objc_msgSend(v17, "getCharacters:range:", v12, 0, objc_msgSend(v17, "length"));
      UErrorCode v21 = U_ZERO_ERROR;
      uregex_setText(v9, (const UChar *)v12, (int32_t)[v17 length], &v21);
      if (v21 <= U_ZERO_ERROR)
      {
        uregex_setRegion(v9, 0, (int32_t)[v17 length], &v21);
        if (v21 <= U_ZERO_ERROR && uregex_matches(v9, -1, &v21) && v21 <= U_ZERO_ERROR) {
          break;
        }
      }
      ++v15;
      if (!--v13)
      {
        uint64_t v3 = 0;
        goto LABEL_20;
      }
    }
    uint64_t v3 = IOSClass_fromClass((uint64_t)v16);
LABEL_20:
    uint64_t v7 = v20;
  }
  free(v11);
  free(v12);
  free(v7);
  uregex_close(v9);
  if (!v3)
  {
LABEL_26:
    int v19 = [[JavaLangClassNotFoundException alloc] initWithNSString:a1];
    goto LABEL_28;
  }
  return v3;
}

uint64_t sub_100224E78(void *a1, uint64_t a2)
{
  unsigned int v4 = [a1 characterAtIndex:a2];
  if (v4 == 91)
  {
    uint64_t v7 = sub_100224E78(a1, a2 + 1);
  }
  else
  {
    int v5 = v4;
    if (v4 == 76)
    {
      int32_t v6 = (char *)[a1 length];
      if ([a1 characterAtIndex:v6 - 1] == 59)
      {
        uint64_t v7 = (uint64_t)sub_100224F5C(objc_msgSend(a1, "substringWithRange:", a2 + 1, &v6[-a2 - 2]));
        goto LABEL_8;
      }
      return 0;
    }
    if ([a1 length] != (id)(a2 + 1)) {
      return 0;
    }
    uint64_t v7 = sub_100224A24(v5);
  }
LABEL_8:
  if (!v7) {
    return 0;
  }
  return FastPointerLookup(&stru_10055D3C0, v7);
}

Class sub_100224F5C(void *a1)
{
  id v1 = a1;
  id v2 = sub_1002251E8(a1);
  Class result = sub_100224980(v2);
  if (!result)
  {
    if (([v1 indexOf:36] & 0x80000000) != 0
      || (id v1 = [v1 stringByReplacingOccurrencesOfString:@"$" withString:@"_"],
          id v4 = sub_1002251E8(v1),
          (Class result = sub_100224980(v4)) == 0))
    {
      int v5 = (char *)[v1 rangeOfString:@"." options:4];
      if (v5 == (char *)0x7FFFFFFFFFFFFFFFLL) {
        return 0;
      }
      int32_t v6 = v5;
      id v7 = [v1 substringToIndex:v5];
      id v8 = (NSString *)sub_1002251E8([v7 stringByAppendingString:@".package_info"]);
      Class v9 = NSClassFromString(v8);
      if (!JreFindClassMethod(v9, "__prefix") || (method_invoke(), (id v11 = v10) == 0))
      {
        if (qword_100561008 != -1) {
          dispatch_once(&qword_100561008, &stru_100450998);
        }
        id v11 = [(id)qword_100561010 getPropertyWithNSString:v7];
        if (!v11 && qword_100561010)
        {
          id v12 = [(id)qword_100561010 propertyNames];
          while ([v12 hasMoreElements])
          {
            id v13 = [v12 nextElement];
            if ([v13 hasSuffix:@".*"])
            {
              id v17 = objc_msgSend(objc_msgSend(v13, "substring:endIndex:", 0, objc_msgSend(v13, "length") - 2), "replace:withSequence:", @".", @"\\.");
              unint64_t v14 = +[NSString stringWithFormat:@"^(%@|%@\\..*)$", v17, v17];
            }
            else
            {
              unint64_t v14 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"^%@$", objc_msgSend(objc_msgSend(v13, "replace:withSequence:", @".", @"\\."), "replace:withSequence:", @"\\*", @".*"), v16);
            }
            if ([v7 matches:v14])
            {
              id v11 = [(id)qword_100561010 getPropertyWithNSString:v13];
              goto LABEL_20;
            }
          }
          return 0;
        }
LABEL_20:
        if (!v11) {
          return 0;
        }
      }
      id v15 = objc_msgSend(objc_msgSend(v11, "stringByAppendingString:", objc_msgSend(v1, "substringFromIndex:", v6 + 1)), "stringByReplacingOccurrencesOfString:withString:", @"$", @"_");
      return sub_100224980(v15);
    }
  }
  return result;
}

id sub_1002251E8(void *a1)
{
  id v2 = [(id)qword_100560FE8 objectForKey:a1];
  if (!v2)
  {
    id v3 = [a1 componentsSeparatedByString:@"."];
    id v2 = +[NSMutableString string];
    if ([v3 count] == (id)1)
    {
      objc_msgSend(v2, "appendString:", objc_msgSend(v3, "objectAtIndex:", 0));
    }
    else
    {
      id v4 = [v3 lastObject];
      long long v12 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5)
      {
        id v6 = v5;
        uint64_t v7 = *(void *)v13;
        do
        {
          id v8 = 0;
          do
          {
            if (*(void *)v13 != v7) {
              objc_enumerationMutation(v3);
            }
            id v9 = *(id *)(*((void *)&v12 + 1) + 8 * (void)v8);
            id v10 = v4;
            if (v9 != v4) {
              id v10 = sub_100226E44(v9);
            }
            [v2 appendString:v10];
            id v8 = (char *)v8 + 1;
          }
          while (v6 != v8);
          id v6 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
        }
        while (v6);
      }
    }
  }
  return v2;
}

uint64_t IOSClass_fromClass(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&IOSClass__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return FastPointerLookup(&stru_10055D310, a1);
}

id IOSClass_NewInterfacesFromProtocolList(__objc2_prot **a1)
{
  __chkstk_darwin();
  id v4 = (char *)&v10 - v3;
  unsigned int v5 = 0;
  if (v2)
  {
    uint64_t v6 = v2;
    do
    {
      uint64_t v7 = *a1;
      if (*a1 != &OBJC_PROTOCOL___NSObject && v7 != &OBJC_PROTOCOL___JavaObject) {
        *(void *)&v4[8 * v5++] = FastPointerLookup(&stru_10055D368, (uint64_t)v7);
      }
      ++a1;
      --v6;
    }
    while (v6);
  }
  return +[IOSObjectArray newArrayWithObjects:v4 count:v5 type:IOSClass_class_()];
}

uint64_t IOSClass_fromProtocol(uint64_t a1)
{
  return FastPointerLookup(&stru_10055D368, a1);
}

Ivar FindIvar(void *a1, id a2)
{
  id v4 = (objc_class *)[a1 objcClass];
  unsigned int v5 = (const char *)sub_100225D50(a2, a1);
  Ivar result = class_getInstanceVariable(v4, v5);
  if (!result)
  {
    int v7 = 3;
    while (1)
    {
      a2 = [a2 stringByAppendingString:@"_"];
      id v8 = (objc_class *)[a1 objcClass];
      id v9 = (const char *)sub_100225D50(a2, a1);
      Ivar result = class_getInstanceVariable(v8, v9);
      if (result) {
        break;
      }
      if (!--v7) {
        return 0;
      }
    }
  }
  return result;
}

id sub_100225D50(void *a1, void *a2)
{
  id v3 = objc_msgSend(objc_msgSend(a2, "getMetadata"), "findFieldMetadata:", objc_msgSend(a1, "UTF8String"));
  if (v3)
  {
    id v4 = [v3 name];
    return [v4 UTF8String];
  }
  else
  {
    id v6 = +[JavaLangReflectField variableName:a1];
    NSStringEncoding v7 = +[NSString defaultCStringEncoding];
    return [v6 cStringUsingEncoding:v7];
  }
}

JavaLangReflectField *findDeclaredField(void *a1, void *a2, int a3)
{
  id v6 = (objc_class *)[a1 objcClass];
  if (!v6) {
    return 0;
  }
  NSStringEncoding v7 = v6;
  id v8 = [a1 getMetadata];
  if (!v8)
  {
    Ivar Ivar = FindIvar(a1, a2);
    if (Ivar)
    {
      InstanceVariabluint64_t e = Ivar;
      long long v12 = a1;
      long long v13 = 0;
      goto LABEL_9;
    }
    return 0;
  }
  id v9 = objc_msgSend(v8, "findFieldMetadata:", objc_msgSend(a2, "UTF8String"));
  if (!v9) {
    return 0;
  }
  uint64_t v10 = v9;
  if (a3)
  {
    if (([v9 modifiers] & 1) == 0) {
      return 0;
    }
  }
  InstanceVariabluint64_t e = class_getInstanceVariable(v7, (const char *)objc_msgSend(objc_msgSend(v10, "iosName"), "UTF8String"));
  long long v12 = a1;
  long long v13 = v10;
LABEL_9:
  return +[JavaLangReflectField fieldWithIvar:InstanceVariable withClass:v12 withMetadata:v13];
}

JavaLangReflectField *findField(JavaLangReflectField *result, void *a2, uint64_t a3)
{
  if (result)
  {
    unsigned int v5 = result;
    do
    {
      Ivar result = findDeclaredField(v5, a2, a3);
      if (result) {
        break;
      }
      long long v13 = 0u;
      long long v14 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      id v6 = [(JavaLangReflectField *)v5 getInterfacesInternal];
      id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v12;
LABEL_6:
        uint64_t v10 = 0;
        while (1)
        {
          if (*(void *)v12 != v9) {
            objc_enumerationMutation(v6);
          }
          Ivar result = (JavaLangReflectField *)findField(*(void *)(*((void *)&v11 + 1) + 8 * v10), a2, a3);
          if (result) {
            return result;
          }
          if (v8 == (id)++v10)
          {
            id v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
            if (v8) {
              goto LABEL_6;
            }
            break;
          }
        }
      }
      unsigned int v5 = (JavaLangReflectField *)[(JavaLangReflectField *)v5 getSuperclass];
      Ivar result = 0;
    }
    while (v5);
  }
  return result;
}

IOSObjectArray *copyFieldsToObjectArray(void *a1)
{
  int v2 = [a1 count];
  id v3 = +[IOSObjectArray arrayWithLength:v2 type:JavaLangReflectField_class_()];
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
      -[IOSObjectArray replaceObjectAtIndex:withObject:](v3, "replaceObjectAtIndex:withObject:", i, [a1 objectAtIndex:i]);
  }
  return v3;
}

void sub_1002261B4(void *a1, void *a2, int a3)
{
  id v6 = [a1 getMetadata];
  if (v6)
  {
    id v7 = (int *)[v6 allFields];
    if (v7[2] >= 1)
    {
      id v8 = v7;
      uint64_t v9 = 0;
      do
      {
        id v10 = [v8 objectAtIndex:v9];
        long long v11 = v10;
        if (!a3 || ([v10 modifiers] & 1) != 0)
        {
          long long v12 = +[JavaLangReflectField fieldWithIvar:withClass:withMetadata:](JavaLangReflectField, "fieldWithIvar:withClass:withMetadata:", class_getInstanceVariable((Class)[a1 objcClass], (const char *)objc_msgSend(objc_msgSend(v11, "iosName"), "UTF8String")), a1, v11);
          id v13 = [(JavaLangReflectField *)v12 getName];
          if (![a2 valueForKey:v13]) {
            [a2 setObject:v12 forKey:v13];
          }
        }
        ++v9;
      }
      while (v9 < v8[2]);
    }
  }
  else
  {
    unsigned int outCount = 0;
    long long v14 = class_copyIvarList((Class)[a1 objcClass], &outCount);
    if (outCount)
    {
      for (unint64_t i = 0; i < outCount; ++i)
      {
        uint64_t v16 = +[JavaLangReflectField fieldWithIvar:v14[i] withClass:a1 withMetadata:0];
        id v17 = [(JavaLangReflectField *)v16 getName];
        if (![a2 valueForKey:v17]) {
          [a2 setObject:v16 forKey:v17];
        }
      }
    }
    free(v14);
  }
}

id sub_1002263A4(void *a1, void *a2)
{
  sub_1002261B4(a1, a2, 1);
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = objc_msgSend(a1, "getInterfacesInternal", 0);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        sub_1002263A4(*(void *)(*((void *)&v11 + 1) + 8 * (void)v8), a2);
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }
  id result = [a1 getSuperclass];
  if (result)
  {
    id v10 = result;
    do
    {
      sub_1002263A4(v10, a2);
      id result = [v10 getSuperclass];
      id v10 = result;
    }
    while (result);
  }
  return result;
}

int *sub_1002266D8(void *a1, void *a2, int a3, int a4)
{
  id result = (int *)[a1 getMetadata];
  if (result)
  {
    id result = (int *)[result getInnerClasses];
    if (result)
    {
      id v8 = result;
      if (result[2] >= 1)
      {
        uint64_t v9 = 0;
        do
        {
          id v10 = *(void **)&v8[2 * v9 + 6];
          id result = (int *)[v10 isAnonymousClass];
          if ((result & 1) == 0)
          {
            id result = (int *)[v10 isSynthetic];
            if ((result & 1) == 0)
            {
              if (!a3 || (id result = (int *)[v10 getModifiers], (result & 1) != 0))
              {
                id result = (int *)[v10 isInterface];
                if (result) {
                  BOOL v11 = a4 == 0;
                }
                else {
                  BOOL v11 = 0;
                }
                if (!v11) {
                  id result = (int *)[a2 addObject:v10];
                }
              }
            }
          }
          ++v9;
        }
        while (v9 < v8[2]);
      }
    }
  }
  return result;
}

NSString *resolveResourceName(void *a1, void *a2)
{
  if (a2 && [a2 length] && objc_msgSend(a2, "characterAtIndex:", 0) != 47) {
    return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"/%@/%@", objc_msgSend(objc_msgSend(objc_msgSend(a1, "getPackage"), "getName"), "stringByReplacingOccurrencesOfString:withString:", @".", @"/"), a2);
  }
  else {
    return (NSString *)a2;
  }
}

uint64_t IOSClass_arrayOf(uint64_t a1)
{
  return FastPointerLookup(&stru_10055D3C0, a1);
}

uint64_t IOSClass_arrayType(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = FastPointerLookup(&stru_10055D3C0, a1);
  if ((int)(a2 - 1) >= 1)
  {
    do
    {
      uint64_t v3 = FastPointerLookup(&stru_10055D3C0, v3);
      --a2;
    }
    while (a2 > 1);
  }
  return v3;
}

uint64_t IOSClass_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&IOSClass__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561000 != -1) {
    dispatch_once(&qword_100561000, &stru_100450978);
  }
  return qword_100560FF8;
}

void sub_100226E18(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100560FF8 = IOSClass_fromClass(v1);
}

id sub_100226E44(void *a1)
{
  if (![a1 length]) {
    return a1;
  }
  id v2 = objc_msgSend(objc_msgSend(a1, "substringToIndex:", 1), "capitalizedString");
  return objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:", 0, 1, v2);
}

void sub_100226EAC(id a1)
{
  id v1 = [(id)qword_100560FF0 getResourceAsStream:@"/prefixes.properties"];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = objc_alloc_init(JavaUtilProperties);
    qword_100561010 = (uint64_t)v3;
    [(JavaUtilProperties *)v3 load__WithJavaIoInputStream:v2];
  }
}

IOSMappedClass *sub_100226F18(objc_class *a1)
{
  if ((objc_class *)objc_opt_class() == a1)
  {
    uint64_t v7 = [IOSMappedClass alloc];
    uint64_t v8 = objc_opt_class();
    return [(IOSMappedClass *)v7 initWithClass:v8 package:@"java.lang" name:@"Object"];
  }
  else
  {
    uint64_t v2 = objc_opt_class();
    BOOL v3 = a1 != 0;
    if (a1)
    {
      id v4 = (objc_class *)v2;
      if ((objc_class *)v2 != a1)
      {
        Class Superclass = a1;
        do
        {
          Class Superclass = class_getSuperclass(Superclass);
          BOOL v3 = Superclass != 0;
        }
        while (Superclass && Superclass != v4);
      }
    }
    if (v3)
    {
      id result = (IOSMappedClass *)qword_100561018;
      if (!qword_100561018)
      {
        id result = [[IOSMappedClass alloc] initWithClass:objc_opt_class() package:@"java.lang" name:@"String"];
        qword_100561018 = (uint64_t)result;
      }
    }
    else
    {
      uint64_t v9 = [IOSConcreteClass alloc];
      return (IOSMappedClass *)[(IOSConcreteClass *)v9 initWithClass:a1];
    }
  }
  return result;
}

id sub_10022705C(uint64_t a1)
{
  uint64_t v2 = [IOSProtocolClass alloc];
  return [(IOSProtocolClass *)v2 initWithProtocol:a1];
}

id sub_10022709C(uint64_t a1)
{
  uint64_t v2 = [IOSArrayClass alloc];
  return [(IOSArrayClass *)v2 initWithComponentType:a1];
}

JavaNioIntArrayBuffer *JavaNioIntBuffer_allocateWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v10 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    BOOL v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v10);
    objc_exception_throw(v11);
  }
  uint64_t v8 = new_JavaNioIntArrayBuffer_initWithIntArray_((unsigned int *)+[IOSIntArray arrayWithLength:a1]);
  return v8;
}

JavaNioIntArrayBuffer *JavaNioIntBuffer_wrapWithIntArray_withInt_withInt_(unsigned int *a1, int a2, int a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(a1[2], a2, a3);
  id result = new_JavaNioIntArrayBuffer_initWithIntArray_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3 + a2;
  return result;
}

uint64_t JavaNioIntBuffer_initWithInt_withLong_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaNioBuffer_initWithInt_withInt_withLong_(a1, 2, a2, a3, a5, a6, a7, a8);
}

LibcoreNetUrlFileHandler *new_LibcoreNetUrlFileHandler_init()
{
  uint64_t v0 = [LibcoreNetUrlFileHandler alloc];
  JavaNetURLStreamHandler_init(v0, v1);
  return v0;
}

uint64_t JavaNioChannelsSpiSelectorProvider_provider()
{
  if ((atomic_load_explicit(JavaNioChannelsSpiSelectorProvider__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)JavaNioChannelsSpiSelectorProvider_class_();
  objc_sync_enter(v0);
  uint64_t v1 = qword_100561020;
  if (!qword_100561020)
  {
    uint64_t v2 = (void *)JavaNioChannelsSpiSelectorProvider_class_();
    id v3 = JavaUtilServiceLoader_loadFromSystemPropertyWithIOSClass_(v2);
    JreStrongAssign((id *)&qword_100561020, v3);
    uint64_t v1 = qword_100561020;
    if (!qword_100561020)
    {
      id v4 = +[JavaNioChannelsSpiSelectorProvider loadProviderByJar]_0();
      JreStrongAssign((id *)&qword_100561020, v4);
      uint64_t v1 = qword_100561020;
      if (!qword_100561020)
      {
        id v5 = new_JavaNioSelectorProviderImpl_init();
        JreStrongAssignAndConsume((id *)&qword_100561020, v5);
        uint64_t v1 = qword_100561020;
      }
    }
  }
  objc_sync_exit(v0);
  return v1;
}

void sub_100227DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNioChannelsSpiSelectorProvider_class_()
{
  if ((atomic_load_explicit(JavaNioChannelsSpiSelectorProvider__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561030 != -1) {
    dispatch_once(&qword_100561030, &stru_1004512F0);
  }
  return qword_100561028;
}

void sub_100227E40(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561028 = IOSClass_fromClass(v1);
}

void sub_1002282DC()
{
}

NSString *sub_1002282F0(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v5) = a2;
  if (a3 + (int)a2 > (int)a2)
  {
    uint64_t v5 = (int)a2;
    while (1)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        JreThrowNullPointerException();
      }
      uint64_t v7 = *(unsigned int *)(v6 + 8);
      if (v5 < 0 || v5 >= (int)v7) {
        IOSArray_throwOutOfBoundsWithMsg(v7, v5);
      }
      if (!*(unsigned char *)(v6 + 12 + v5)) {
        break;
      }
      if (a3 + a2 == ++v5)
      {
        LODWORD(v5) = a3 + a2;
        break;
      }
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((atomic_load_explicit(JavaNioCharsetStandardCharsets__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v9 = JavaNioCharsetStandardCharsets_ISO_8859_1_;
  return +[NSString stringWithBytes:v8 offset:a2 length:(v5 - a2) charset:v9];
}

uint64_t sub_100228410(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  if (!a4) {
    goto LABEL_9;
  }
  if ((atomic_load_explicit(JavaNioCharsetStandardCharsets__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v8 = (unsigned int *)[a4 getBytesWithCharset:JavaNioCharsetStandardCharsets_ISO_8859_1_];
  if (!v8
    || (uint64_t v9 = v8,
        uint64_t v10 = JavaLangMath_minWithInt_withInt_(v8[2], a3),
        int v11 = v10,
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, 0, *(void **)(a1 + 8), a2, v10),
        (uint64_t v12 = *(void *)(a1 + 8)) == 0))
  {
LABEL_9:
    JreThrowNullPointerException();
  }
  uint64_t result = *(unsigned int *)(v12 + 8);
  uint64_t v14 = (v11 + a2);
  if ((int)v14 < 0 || (int)v14 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v14);
  }
  *(unsigned char *)(v12 + 12 + (int)v14) = 0;
  return result;
}

uint64_t sub_100228758(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t result = *(unsigned int *)(v2 + 8);
  if ((int)result <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(result, 0);
  }
  *(unsigned char *)(v2 + 12) = a2;
  return result;
}

JavaNetSocks4Message *new_JavaNetSocks4Message_init()
{
  uint64_t v0 = [JavaNetSocks4Message alloc];
  JreStrongAssignAndConsume((id *)&v0->buffer_, +[IOSByteArray newArrayWithLength:256]);
  sub_100228758((uint64_t)v0, 4);
  return v0;
}

JavaNioInvalidMarkException *new_JavaNioInvalidMarkException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaNioInvalidMarkException alloc];
  JavaLangIllegalStateException_initWithNSString_(v2, a1);
  return v2;
}

JavaNioCharsetCharacterCodingException *new_JavaNioCharsetCharacterCodingException_init()
{
  uint64_t v0 = [JavaNioCharsetCharacterCodingException alloc];
  JavaIoIOException_init(v0, v1);
  return v0;
}

uint64_t NSCopying_class_()
{
  if (qword_100561040 != -1) {
    dispatch_once(&qword_100561040, &stru_100451C98);
  }
  return qword_100561038;
}

void sub_1002289C4(id a1)
{
  qword_100561038 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___NSCopying);
}

id sub_100228A64(void *a1, void *a2, char a3)
{
  if (a3)
  {
    if (!a2) {
LABEL_42:
    }
      JreThrowNullPointerException();
    goto LABEL_9;
  }
  if (!a2) {
    goto LABEL_42;
  }
  if ((int)[a2 length] < 1)
  {
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  if ([a2 charAtWithInt:0] == 32)
  {
    if (!a1) {
      goto LABEL_42;
    }
    [a1 appendWithNSString:@"\\ "];
    uint64_t v6 = 1;
  }
LABEL_10:
  id result = [a2 length];
  if ((int)v6 < (int)result)
  {
    while (2)
    {
      id v8 = [a2 charAtWithInt:v6];
      switch((int)v8)
      {
        case 9:
          if (!a1) {
            goto LABEL_42;
          }
          uint64_t v9 = a1;
          CFStringRef v10 = @"\\t";
          goto LABEL_39;
        case 10:
          if (!a1) {
            goto LABEL_42;
          }
          uint64_t v9 = a1;
          CFStringRef v10 = @"\\n";
          goto LABEL_39;
        case 12:
          if (!a1) {
            goto LABEL_42;
          }
          uint64_t v9 = a1;
          CFStringRef v10 = @"\\f";
          goto LABEL_39;
        case 13:
          if (!a1) {
            goto LABEL_42;
          }
          uint64_t v9 = a1;
          CFStringRef v10 = @"\\r";
          goto LABEL_39;
        default:
          unsigned int v11 = [@"\\#!=:" indexOf:v8];
          unsigned int v12 = v8 - 32;
          if (v8 == 32) {
            char v13 = a3;
          }
          else {
            char v13 = 0;
          }
          if ((v13 & 1) != 0 || (v11 & 0x80000000) == 0)
          {
            if (!a1) {
              goto LABEL_42;
            }
            [a1 appendWithChar:92];
            if (v12 < 0x5F) {
              goto LABEL_30;
            }
            uint64_t v14 = JavaLangInteger_toHexStringWithInt_(v8);
          }
          else
          {
            if (v12 < 0x5F)
            {
              if (!a1) {
                goto LABEL_42;
              }
LABEL_30:
              [a1 appendWithChar:v8];
              goto LABEL_40;
            }
            uint64_t v14 = JavaLangInteger_toHexStringWithInt_(v8);
            if (!a1) {
              goto LABEL_42;
            }
          }
          long long v15 = (__CFString *)v14;
          [a1 appendWithNSString:@"\\u"];
          if (!v15) {
            goto LABEL_42;
          }
          if ((int)([(__CFString *)v15 length] - 5) <= -2)
          {
            signed int v16 = 0;
            do
            {
              [a1 appendWithNSString:@"0"];
              ++v16;
            }
            while (v16 < (int)(4 - [(__CFString *)v15 length]));
          }
          uint64_t v9 = a1;
          CFStringRef v10 = v15;
LABEL_39:
          [v9 appendWithNSString:v10];
LABEL_40:
          uint64_t v6 = (v6 + 1);
          id result = [a2 length];
          if ((int)v6 >= (int)result) {
            return result;
          }
          continue;
      }
    }
  }
  return result;
}

void sub_100229048(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    id v3 = new_JavaLangAssertionError_initWithId_(v2);
    objc_exception_throw(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100229098()
{
}

void sub_100229120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002296B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

id sub_100229760(void *a1, void *a2, uint64_t a3)
{
  int v3 = a3;
  uint64_t v6 = a1[7];
  if (v6) {
    sub_100229760(v6, a2, a3);
  }
  id v7 = [a1 keys];
  if (!v7) {
LABEL_11:
  }
    JreThrowNullPointerException();
  id v8 = v7;
  id result = [v7 hasMoreElements];
  if (result)
  {
    do
    {
      id v10 = [v8 nextElement];
      if (!v3 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        id v11 = [a1 getWithId:v10];
        if (!a2) {
          goto LABEL_11;
        }
        [a2 putWithId:v10 withId:v11];
      }
      id result = [v8 hasMoreElements];
    }
    while ((result & 1) != 0);
  }
  return result;
}

void sub_1002298A0(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
}

void sub_10022992C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100229BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100229CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100229CD8()
{
}

void sub_10022A120()
{
}

void sub_10022A13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
}

id sub_10022A150(void *a1)
{
  if (!a1
    || (id v1 = [a1 replaceAll:@"&" withReplacement:@"&amp;"]) == 0
    || (id v2 = [v1 replaceAll:@"<" withReplacement:@"&lt;"]) == 0
    || (id v3 = [v2 replaceAll:@">" withReplacement:@"&gt;"]) == 0
    || (id v4 = [v3 replaceAll:@"'" withReplacement:@"&apos;"]) == 0)
  {
    JreThrowNullPointerException();
  }
  return [v4 replaceAll:@"\"" withReplacement:@"&quot;"];
}

JavaUtilProperties *new_JavaUtilProperties_init()
{
  uint64_t v0 = [JavaUtilProperties alloc];
  JavaUtilHashtable_init((uint64_t)v0);
  return v0;
}

IOSObjectArray *JavaLangAnnotationElementTypeEnum_values()
{
  if ((atomic_load_explicit(JavaLangAnnotationElementTypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaLangAnnotationElementTypeEnum_class_();
  return +[IOSObjectArray arrayWithObjects:&JavaLangAnnotationElementTypeEnum_values_ count:8 type:v0];
}

void *JavaLangAnnotationElementTypeEnum_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangAnnotationElementTypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = 0;
  while (1)
  {
    id v3 = (void *)JavaLangAnnotationElementTypeEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v3, "name"))) {
      break;
    }
    if (++v2 == 8) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v3;
}

uint64_t JavaLangAnnotationElementTypeEnum_class_()
{
  if ((atomic_load_explicit(JavaLangAnnotationElementTypeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561050 != -1) {
    dispatch_once(&qword_100561050, &stru_1004526F8);
  }
  return qword_100561048;
}

void sub_10022A7E0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561048 = IOSClass_fromClass(v1);
}

uint64_t JavaUtilList_class_()
{
  if (qword_100561060 != -1) {
    dispatch_once(&qword_100561060, &stru_100452C38);
  }
  return qword_100561058;
}

void sub_10022A85C(id a1)
{
  qword_100561058 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilList);
}

id JNIParseMethodSignature(unsigned char *a1)
{
  if (*a1 != 40) {
    return 0;
  }
  uint64_t v2 = a1 + 1;
  id v8 = a1 + 1;
  id v3 = +[NSMutableArray array];
  for (int i = a1[1]; i != 41; int i = *v8)
  {
    objc_msgSend(v3, "addObject:", sub_10022A994(v2, &v8));
    uint64_t v2 = v8;
  }
  uint64_t v6 = +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", [v3 count], IOSClass_class_());
  if ([v3 count])
  {
    unint64_t v7 = 0;
    do
    {
      -[IOSObjectArray replaceObjectAtIndex:withObject:](v6, "replaceObjectAtIndex:withObject:", v7, [v3 objectAtIndexedSubscript:v7]);
      ++v7;
    }
    while (v7 < (unint64_t)[v3 count]);
  }
  id v8 = v2 + 1;
  return sub_10022A994(v2 + 1, &v8);
}

id sub_10022A994(unsigned __int8 *a1, void *a2)
{
  id v3 = a1;
  *a2 = a1 + 1;
  int v4 = *a1;
  if (v4 == 91)
  {
    uint64_t v5 = 0;
    do
      int v4 = a1[++v5];
    while (v4 == 91);
    id v3 = &a1[v5];
    if (v5)
    {
      uint64_t v6 = sub_10022A994(v3, a2);
      id v7 = (id)IOSClass_arrayType(v6, v5);
LABEL_10:
      id v12 = v7;
      goto LABEL_11;
    }
  }
  if (v4 != 76)
  {
    id v7 = +[IOSClass primitiveClassForChar:(unsigned __int16)(char)v4];
    goto LABEL_10;
  }
  id v8 = strchr((char *)v3 + 1, 59);
  if (!v8) {
    goto LABEL_13;
  }
  uint64_t v9 = v8;
  size_t v10 = v8 - (char *)(v3 + 1);
  id v11 = (char *)malloc_type_malloc(v8 - (char *)v3, 0xAFB13785uLL);
  strncpy(v11, (const char *)v3 + 1, v10)[v10] = 0;
  id v12 = +[IOSClass forName:](IOSClass, "forName:", [+[NSString stringWithUTF8String:v11] stringByReplacingOccurrencesOfString:@"/" withString:@"."]);
  free(v11);
  *a2 = v9 + 1;
LABEL_11:
  if (!v12) {
LABEL_13:
  }
    objc_exception_throw([[JavaLangClassNotFoundException alloc] initWithNSString:+[NSString stringWithUTF8String:v3]]);
  return v12;
}

uint64_t CallObjectMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return v5;
}

void sub_10022AB38(uint64_t a1, void *a2, _DWORD *a3, uint64_t a4)
{
  id v8 = (char *)[a2 getBinaryParameterTypes];
  size_t v9 = strlen(v8);
  unint64_t v10 = v9;
  if (v9 < 0x11) {
    id v11 = (float *)&v12;
  }
  else {
    id v11 = (float *)malloc_type_malloc(8 * v9, 0x10820408ED45BDAuLL);
  }
  sub_10022BA90(v8, v11, a3);
  [a2 jniInvokeWithId:a1 args:v11 result:a4];
  if (v10 >= 0x11) {
    free(v11);
  }
}

uint64_t CallObjectMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return v5;
}

uint64_t CallObjectMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return v10;
}

uint64_t CallBooleanMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallBooleanMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return v5;
}

uint64_t CallBooleanMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return v10;
}

uint64_t CallByteMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return (char)v5;
}

uint64_t CallByteMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return (char)v5;
}

uint64_t CallByteMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return (char)v10;
}

uint64_t CallCharMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return (unsigned __int16)v5;
}

uint64_t CallCharMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return (unsigned __int16)v5;
}

uint64_t CallCharMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return (unsigned __int16)v10;
}

uint64_t CallShortMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return (__int16)v5;
}

uint64_t CallShortMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return (__int16)v5;
}

uint64_t CallShortMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return (__int16)v10;
}

uint64_t CallIntMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallIntMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return v5;
}

uint64_t CallIntMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return v10;
}

uint64_t CallLongMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallLongMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return v5;
}

uint64_t CallLongMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return v10;
}

float CallFloatMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return *(float *)&v5;
}

float CallFloatMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return *(float *)&v5;
}

float CallFloatMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return *(float *)&v10;
}

double CallDoubleMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  double v5 = 0.0;
  sub_10022AB38(a2, a3, a4, (uint64_t)&v5);
  return v5;
}

double CallDoubleMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  double v5 = 0.0;
  [a3 jniInvokeWithId:a2 args:a4 result:&v5];
  return v5;
}

double CallDoubleMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  double v10 = 0.0;
  sub_10022AB38(a2, a3, &a9, (uint64_t)&v10);
  return v10;
}

void CallVoidMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
}

id CallVoidMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return [a3 jniInvokeWithId:a2 args:a4 result:0];
}

void CallVoidMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

id GetObjectField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getWithId:a2];
}

id GetBooleanField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getBooleanWithId:a2];
}

id GetByteField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getByteWithId:a2];
}

id GetCharField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getCharWithId:a2];
}

id GetShortField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getShortWithId:a2];
}

id GetIntField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getIntWithId:a2];
}

id GetLongField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getLongWithId:a2];
}

id GetFloatField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getFloatWithId:a2];
}

id GetDoubleField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getDoubleWithId:a2];
}

id SetObjectField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setWithId:withId:", a2);
}

id SetBooleanField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setBooleanWithId:withBoolean:", a2);
}

id SetByteField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setByteWithId:withByte:", a2);
}

id SetCharField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setCharWithId:withChar:", a2);
}

id SetShortField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setShortWithId:withShort:", a2);
}

id SetIntField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setIntWithId:withInt:", a2);
}

id SetLongField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setLongWithId:withLong:", a2);
}

id SetFloatField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setFloatWithId:withFloat:", a2);
}

id SetDoubleField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setDoubleWithId:withDouble:", a2);
}

uint64_t CallStaticObjectMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallStaticObjectMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return v5;
}

uint64_t CallStaticObjectMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return v10;
}

uint64_t CallStaticBooleanMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallStaticBooleanMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return v5;
}

uint64_t CallStaticBooleanMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return v10;
}

uint64_t CallStaticByteMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return (char)v5;
}

uint64_t CallStaticByteMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return (char)v5;
}

uint64_t CallStaticByteMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return (char)v10;
}

uint64_t CallStaticCharMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return (unsigned __int16)v5;
}

uint64_t CallStaticCharMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return (unsigned __int16)v5;
}

uint64_t CallStaticCharMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return (unsigned __int16)v10;
}

uint64_t CallStaticShortMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return (__int16)v5;
}

uint64_t CallStaticShortMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return (__int16)v5;
}

uint64_t CallStaticShortMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return (__int16)v10;
}

uint64_t CallStaticIntMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallStaticIntMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return v5;
}

uint64_t CallStaticIntMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return v10;
}

uint64_t CallStaticLongMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return v5;
}

uint64_t CallStaticLongMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return v5;
}

uint64_t CallStaticLongMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return v10;
}

float CallStaticFloatMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v5 = 0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return *(float *)&v5;
}

float CallStaticFloatMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = 0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return *(float *)&v5;
}

float CallStaticFloatMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v10 = 0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return *(float *)&v10;
}

double CallStaticDoubleMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  double v5 = 0.0;
  sub_10022AB38(0, a3, a4, (uint64_t)&v5);
  return v5;
}

double CallStaticDoubleMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  double v5 = 0.0;
  [a3 jniInvokeWithId:0 args:a4 result:&v5];
  return v5;
}

double CallStaticDoubleMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  double v10 = 0.0;
  sub_10022AB38(0, a3, &a9, (uint64_t)&v10);
  return v10;
}

void CallStaticVoidMethodV(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
}

id CallStaticVoidMethodA(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return [a3 jniInvokeWithId:0 args:a4 result:0];
}

void CallStaticVoidMethod(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

id GetStaticObjectField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getWithId:0];
}

id GetStaticBooleanField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getBooleanWithId:0];
}

id GetStaticByteField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getByteWithId:0];
}

id GetStaticCharField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getCharWithId:0];
}

id GetStaticShortField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getShortWithId:0];
}

id GetStaticIntField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getIntWithId:0];
}

id GetStaticLongField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getLongWithId:0];
}

id GetStaticFloatField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getFloatWithId:0];
}

id GetStaticDoubleField(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 getDoubleWithId:0];
}

id SetStaticObjectField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setWithId:withId:", 0);
}

id SetStaticBooleanField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setBooleanWithId:withBoolean:", 0);
}

id SetStaticByteField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setByteWithId:withByte:", 0);
}

id SetStaticCharField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setCharWithId:withChar:", 0);
}

id SetStaticShortField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setShortWithId:withShort:", 0);
}

id SetStaticIntField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setIntWithId:withInt:", 0);
}

id SetStaticLongField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setLongWithId:withLong:", 0);
}

id SetStaticFloatField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setFloatWithId:withFloat:", 0);
}

id SetStaticDoubleField(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setDoubleWithId:withDouble:", 0);
}

unsigned char *sub_10022BA90(unsigned char *result, float *a2, _DWORD *a3)
{
  char v3 = *result;
  if (*result)
  {
    int v4 = result + 1;
    while (2)
    {
      switch(v3)
      {
        case 'B':
          double v5 = a3;
          a3 += 2;
          LODWORD(v5) = *v5;
          goto LABEL_8;
        case 'C':
          goto LABEL_10;
        case 'D':
          id v8 = a3;
          a3 += 2;
          *(void *)a2 = *v8;
          goto LABEL_14;
        case 'E':
        case 'G':
        case 'H':
        case 'J':
          goto LABEL_9;
        case 'F':
          size_t v9 = (double *)a3;
          a3 += 2;
          float v10 = *v9;
          *a2 = v10;
          goto LABEL_14;
        case 'I':
          id v11 = (float *)a3;
          a3 += 2;
          *a2 = *v11;
          goto LABEL_14;
        default:
          if (v3 == 83)
          {
LABEL_10:
            id v7 = a3;
            a3 += 2;
            *(_WORD *)a2 = *v7;
          }
          else if (v3 == 90)
          {
            double v5 = a3;
            a3 += 2;
            LOBYTE(v5) = *v5 != 0;
LABEL_8:
            *(unsigned char *)a2 = (_BYTE)v5;
          }
          else
          {
LABEL_9:
            uint64_t v6 = a3;
            a3 += 2;
            *(void *)a2 = *v6;
          }
LABEL_14:
          a2 += 2;
          int v12 = *v4++;
          char v3 = v12;
          if (!v12) {
            return result;
          }
          continue;
      }
    }
  }
  return result;
}

uint64_t sub_10022BBC8()
{
  return 65542;
}

id sub_10022BBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = [+[NSString stringWithUTF8String:a2] stringByReplacingOccurrencesOfString:@"/" withString:@"."];
  return +[IOSClass forName:v2];
}

id sub_10022BC28(uint64_t a1, void *a2)
{
  return [a2 getSuperclass];
}

id sub_10022BC30(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 isAssignableFrom:a2];
}

void sub_10022BC3C(int a1, id exception)
{
  if (exception) {
    objc_exception_throw(exception);
  }
  JreThrowNullPointerException();
}

void sub_10022BC58(uint64_t a1, void *a2)
{
  if (a2) {
    objc_exception_throw(objc_msgSend(objc_alloc((Class)objc_msgSend(a2, "objcClass")), "initWithNSString:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:")));
  }
  JreThrowNullPointerException();
}

uint64_t sub_10022BCA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_10022BCB0(int a1, id a2)
{
  return a2;
}

BOOL sub_10022BCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

id sub_10022BCC8(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return [a2 getClass];
}

id sub_10022BCF0(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 isInstance:a2];
}

NSString *sub_10022BCFC(uint64_t a1, uint64_t a2, int a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return +[NSString stringWithCharacters:a2 length:a3];
}

id sub_10022BD38(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return [a2 length];
}

char *sub_10022BD5C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 1;
  }
  return (char *)+[IOSCharArray arrayWithNSString:a2] + 12;
}

NSString *sub_10022BDA8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return +[NSString stringWithUTF8String:a2];
}

size_t sub_10022BDE0(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return strlen((const char *)[a2 UTF8String]);
}

id sub_10022BE08(uint64_t a1, void *a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return [a2 UTF8String];
}

uint64_t sub_10022BE44(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return *(unsigned int *)(a2 + 8);
}

IOSObjectArray *sub_10022BE70(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  if (!a3) {
    JreThrowNullPointerException();
  }
  uint64_t v6 = +[IOSObjectArray arrayWithLength:a2 type:a3];
  if (a4 && a2 >= 1)
  {
    uint64_t v7 = 0;
    do
      IOSObjectArray_Set((uint64_t)v6, v7++, a4);
    while (a2 != v7);
  }
  return v6;
}

uint64_t sub_10022BEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(unsigned int *)(a2 + 8);
  if ((a3 & 0x80000000) != 0 || (int)v3 <= (int)a3) {
    IOSArray_throwOutOfBoundsWithMsg(v3, a3);
  }
  return *(void *)(a2 + 24 + 8 * (int)a3);
}

void *sub_10022BF50(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  return IOSObjectArray_Set(a2, a3, a4);
}

IOSBooleanArray *sub_10022BF60(uint64_t a1, int a2)
{
  return +[IOSBooleanArray arrayWithLength:a2];
}

IOSByteArray *sub_10022BF70(uint64_t a1, int a2)
{
  return +[IOSByteArray arrayWithLength:a2];
}

IOSCharArray *sub_10022BF80(uint64_t a1, int a2)
{
  return +[IOSCharArray arrayWithLength:a2];
}

IOSShortArray *sub_10022BF90(uint64_t a1, int a2)
{
  return +[IOSShortArray arrayWithLength:a2];
}

IOSIntArray *sub_10022BFA0(uint64_t a1, int a2)
{
  return +[IOSIntArray arrayWithLength:a2];
}

IOSLongArray *sub_10022BFB0(uint64_t a1, int a2)
{
  return +[IOSLongArray arrayWithLength:a2];
}

IOSFloatArray *sub_10022BFC0(uint64_t a1, int a2)
{
  return +[IOSFloatArray arrayWithLength:a2];
}

IOSDoubleArray *sub_10022BFD0(uint64_t a1, int a2)
{
  return +[IOSDoubleArray arrayWithLength:a2];
}

uint64_t sub_10022BFE0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C014(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C048(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C07C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C0B0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C0E4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C118(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

uint64_t sub_10022C14C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

void *sub_10022C1A0(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 12 + a3);
  return memcpy(__dst, v5, a4);
}

void *sub_10022C238(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 12 + a3);
  return memcpy(__dst, v5, a4);
}

void *sub_10022C2D0(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 12 + 4 * a3);
  return memcpy(__dst, v5, 2 * a4);
}

void *sub_10022C368(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 12 + 4 * a3);
  return memcpy(__dst, v5, 2 * a4);
}

void *sub_10022C400(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 12 + 16 * a3);
  return memcpy(__dst, v5, 4 * a4);
}

void *sub_10022C498(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 16 + ((uint64_t)a3 << 6));
  return memcpy(__dst, v5, 8 * a4);
}

void *sub_10022C534(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 12 + 16 * a3);
  return memcpy(__dst, v5, 4 * a4);
}

void *sub_10022C5CC(int a1, uint64_t a2, int a3, int a4, void *__dst)
{
  if (!a2 || !__dst) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  double v5 = (const void *)(a2 + 16 + ((uint64_t)a3 << 6));
  return memcpy(__dst, v5, 8 * a4);
}

void *sub_10022C668(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 12 + a3), __src, a4);
}

void *sub_10022C700(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 12 + a3), __src, a4);
}

void *sub_10022C798(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 12 + 4 * a3), __src, 2 * a4);
}

void *sub_10022C830(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 12 + 4 * a3), __src, 2 * a4);
}

void *sub_10022C8C8(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 12 + 16 * a3), __src, 4 * a4);
}

void *sub_10022C960(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 16 + ((uint64_t)a3 << 6)), __src, 8 * a4);
}

void *sub_10022C9FC(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 12 + 16 * a3), __src, 4 * a4);
}

void *sub_10022CA94(int a1, uint64_t a2, int a3, int a4, void *__src)
{
  if (!a2 || !__src) {
    JreThrowNullPointerException();
  }
  if ((a4 | a3) < 0 || a4 + a3 > *(_DWORD *)(a2 + 8)) {
    IOSArray_throwOutOfBounds();
  }
  return memcpy((void *)(a2 + 16 + ((uint64_t)a3 << 6)), __src, 8 * a4);
}

id sub_10022CB30(uint64_t a1, void *a2, int a3, int a4, uint64_t a5)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return objc_msgSend(a2, "getCharacters:range:", a5, a3, a4);
}

void *sub_10022CB6C(uint64_t a1, void *a2, int a3, int a4, void *a5)
{
  if (!a2 || !a5) {
    JreThrowNullPointerException();
  }
  uint64_t v7 = (char *)[a2 UTF8String] + a3;
  return memcpy(a5, v7, a4);
}

uint64_t sub_10022CBCC(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 0;
  }
  return a2 + 12;
}

char *sub_10022CC04(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (a3) {
    *a3 = 1;
  }
  return (char *)+[IOSCharArray arrayWithNSString:a2] + 12;
}

JavaNioDirectByteBuffer *sub_10022CC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = [[JavaNioDirectByteBuffer alloc] initWithLong:a2 withInt:a3];
  return v3;
}

uint64_t sub_10022CC9C(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return *(void *)(a2 + 32);
}

uint64_t sub_10022CCC8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  return *(int *)(a2 + 8);
}

id sub_10022CCF4(uint64_t a1, void *a2)
{
  uint64_t v3 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:");
  return [a2 getDeclaredField:v3];
}

id sub_10022CD38(uint64_t a1, void *a2)
{
  uint64_t v3 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:");
  return [a2 getDeclaredField:v3];
}

id sub_10022CD7C(uint64_t a1, void *a2, const char *a3, unsigned char *a4)
{
  JNIParseMethodSignature(a4);
  uint64_t v7 = v6;
  if (!strcmp(a3, "<init>"))
  {
    return [a2 getConstructor:v7];
  }
  else
  {
    id v8 = +[NSString stringWithUTF8String:a3];
    return [a2 getDeclaredMethod:v8 parameterTypes:v7];
  }
}

id sub_10022CE20(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_10022CE4C(a1, a2, a3, &a9);
}

id sub_10022CE4C(uint64_t a1, uint64_t a2, void *a3, _DWORD *a4)
{
  uint64_t v6 = (char *)[a3 getBinaryParameterTypes];
  size_t v7 = strlen(v6);
  unint64_t v8 = v7;
  if (v7 < 0x11) {
    size_t v9 = (float *)&v12;
  }
  else {
    size_t v9 = (float *)malloc_type_malloc(8 * v7, 0x10820408ED45BDAuLL);
  }
  sub_10022BA90(v6, v9, a4);
  id v10 = [a3 jniNewInstance:v9];
  if (v8 >= 0x11) {
    free(v9);
  }
  return v10;
}

id sub_10022CF28(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return [a3 jniNewInstance:a4];
}

uint64_t sub_10022CF34(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)qword_100561068;
  if (!qword_100561068)
  {
    uint64_t v3 = malloc_type_malloc(8uLL, 0x6004044C4A2DFuLL);
    qword_100561068 = (uint64_t)v3;
    *uint64_t v3 = J2ObjC_JavaVM;
  }
  *a2 = v3;
  return 0;
}

uint64_t sub_10022CF90()
{
  return 0;
}

uint64_t sub_10022CF98(uint64_t a1, uint64_t (***a2)())
{
  uint64_t v3 = (uint64_t (**)())qword_100561070;
  if (!qword_100561070)
  {
    uint64_t v3 = (uint64_t (**)())malloc_type_malloc(8uLL, 0x6004044C4A2DFuLL);
    qword_100561070 = (uint64_t)v3;
    *uint64_t v3 = J2ObjC_JNIEnv[0];
  }
  *a2 = v3;
  return 0;
}

uint64_t sub_10022CFF4()
{
  return 0;
}

uint64_t sub_10022CFFC(uint64_t a1, uint64_t (***a2)())
{
  uint64_t v3 = (uint64_t (**)())qword_100561070;
  if (!qword_100561070)
  {
    uint64_t v3 = (uint64_t (**)())malloc_type_malloc(8uLL, 0x6004044C4A2DFuLL);
    qword_100561070 = (uint64_t)v3;
    *uint64_t v3 = J2ObjC_JNIEnv[0];
  }
  *a2 = v3;
  return 0;
}

uint64_t sub_10022D058(uint64_t a1, uint64_t (***a2)())
{
  uint64_t v3 = (uint64_t (**)())qword_100561070;
  if (!qword_100561070)
  {
    uint64_t v3 = (uint64_t (**)())malloc_type_malloc(8uLL, 0x6004044C4A2DFuLL);
    qword_100561070 = (uint64_t)v3;
    *uint64_t v3 = J2ObjC_JNIEnv[0];
  }
  *a2 = v3;
  return 0;
}

id JavaUtilStringTokenizer_initWithNSString_withNSString_withBoolean_(uint64_t a1, void *a2, void *a3, char a4)
{
  if (!a2)
  {
    unint64_t v8 = new_JavaLangNullPointerException_initWithNSString_(@"string == null");
    objc_exception_throw(v8);
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  id result = JreStrongAssign((id *)(a1 + 16), a3);
  *(unsigned char *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 28) = 0;
  return result;
}

JavaUtilStringTokenizer *new_JavaUtilStringTokenizer_initWithNSString_withNSString_(void *a1, void *a2)
{
  int v4 = [JavaUtilStringTokenizer alloc];
  JavaUtilStringTokenizer_initWithNSString_withNSString_withBoolean_((uint64_t)v4, a1, a2, 0);
  return v4;
}

JavaIoFileNotFoundException *new_JavaIoFileNotFoundException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaIoFileNotFoundException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

JavaNioSelectorProviderImpl *new_JavaNioSelectorProviderImpl_init()
{
  uint64_t v0 = [JavaNioSelectorProviderImpl alloc];
  JavaNioChannelsSpiSelectorProvider_init(v0, v1);
  return v0;
}

id JavaTextAttributedCharacterIterator_Attribute_initWithNSString_(uint64_t a1, void *a2)
{
  return JreStrongAssign((id *)(a1 + 8), a2);
}

id JavaIoPrintStream_initWithJavaIoOutputStream_(uint64_t a1, void *a2)
{
  id result = JavaIoFilterOutputStream_initWithJavaIoOutputStream_(a1, a2);
  if (!a2)
  {
    int v4 = new_JavaLangNullPointerException_initWithNSString_(@"out == null");
    objc_exception_throw(v4);
  }
  return result;
}

id JavaIoPrintStream_initWithJavaIoOutputStream_withBoolean_(uint64_t a1, void *a2, char a3)
{
  id result = JavaIoFilterOutputStream_initWithJavaIoOutputStream_(a1, a2);
  if (!a2)
  {
    size_t v7 = new_JavaLangNullPointerException_initWithNSString_(@"out == null");
    objc_exception_throw(v7);
  }
  *(unsigned char *)(a1 + 17) = a3;
  return result;
}

id JavaIoPrintStream_initWithJavaIoOutputStream_withBoolean_withNSString_(uint64_t a1, void *a2, char a3, __CFString *a4)
{
  JavaIoFilterOutputStream_initWithJavaIoOutputStream_(a1, a2);
  if (!a2)
  {
    CFStringRef v9 = @"out == null";
    goto LABEL_9;
  }
  if (!a4)
  {
    CFStringRef v9 = @"charsetName == null";
LABEL_9:
    id v10 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v9);
    objc_exception_throw(v10);
  }
  *(unsigned char *)(a1 + 17) = a3;
  if ((JavaNioCharsetCharset_isSupportedWithNSString_(a4) & 1) == 0)
  {
    id v11 = new_JavaIoUnsupportedEncodingException_initWithNSString_((uint64_t)a4);
    objc_exception_throw(v11);
  }
  return JreStrongAssign((id *)(a1 + 24), a4);
}

void sub_10022DCDC()
{
}

void sub_10022DD08()
{
}

id JavaIoPrintStream_initWithJavaIoFile_withNSString_(uint64_t a1, void *a2, __CFString *a3)
{
  uint64_t v5 = new_JavaIoFileOutputStream_initWithJavaIoFile_(a2);
  JavaIoFilterOutputStream_initWithJavaIoOutputStream_(a1, v5);
  if (!a3)
  {
    size_t v7 = new_JavaLangNullPointerException_initWithNSString_(@"charsetName == null");
    goto LABEL_8;
  }
  if ((JavaNioCharsetCharset_isSupportedWithNSString_(a3) & 1) == 0)
  {
    size_t v7 = new_JavaIoUnsupportedEncodingException_initWithNSString_((uint64_t)a3);
LABEL_8:
    objc_exception_throw(v7);
  }
  return JreStrongAssign((id *)(a1 + 24), a3);
}

id JavaIoPrintStream_initWithNSString_(uint64_t a1, void *a2)
{
  uint64_t v3 = new_JavaIoFile_initWithNSString_(a2);
  int v4 = new_JavaIoFileOutputStream_initWithJavaIoFile_(v3);
  return JavaIoFilterOutputStream_initWithJavaIoOutputStream_(a1, v4);
}

void sub_10022DFCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10022E410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10022E700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10022E824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10022E8F8(_Unwind_Exception *exc_buf, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exc_buf);
    [v2 setError];
    objc_end_catch();
    JUMPOUT(0x10022E8D8);
  }
  objc_sync_exit(v2);
  _Unwind_Resume(exc_buf);
}

void sub_10022E934()
{
}

JavaIoPrintStream *new_JavaIoPrintStream_initWithJavaIoOutputStream_(void *a1)
{
  uint64_t v2 = [JavaIoPrintStream alloc];
  JavaIoPrintStream_initWithJavaIoOutputStream_((uint64_t)v2, a1);
  return v2;
}

JavaIoPrintStream *new_JavaIoPrintStream_initWithJavaIoOutputStream_withBoolean_withNSString_(void *a1, char a2, __CFString *a3)
{
  uint64_t v6 = [JavaIoPrintStream alloc];
  JavaIoPrintStream_initWithJavaIoOutputStream_withBoolean_withNSString_((uint64_t)v6, a1, a2, a3);
  return v6;
}

uint64_t JavaUtilComparator_class_()
{
  if (qword_100561080 != -1) {
    dispatch_once(&qword_100561080, &stru_100454050);
  }
  return qword_100561078;
}

void sub_10022EB48(id a1)
{
  qword_100561078 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilComparator);
}

JavaNetStandardSocketOptions_BooleanSocketOption *sub_10022EF64(void *a1, int a2)
{
  int v4 = [JavaNetStandardSocketOptions_BooleanSocketOption alloc];
  uint64_t v5 = (void *)JavaLangBoolean_class_();
  JreStrongAssign((id *)&v4->super.name_, a1);
  JreStrongAssign((id *)&v4->super.type_, v5);
  v4->super.socketOption_ = a2;
  return v4;
}

JavaNetStandardSocketOptions_ByteRangeSocketOption *sub_10022EFC8(void *a1, int a2)
{
  int v4 = [JavaNetStandardSocketOptions_ByteRangeSocketOption alloc];
  uint64_t v5 = (void *)JavaLangInteger_class_();
  JreStrongAssign((id *)&v4->super.name_, a1);
  JreStrongAssign((id *)&v4->super.type_, v5);
  v4->super.socketOption_ = a2;
  return v4;
}

JavaNetStandardSocketOptions_PositiveIntegerSocketOption *sub_10022F02C(void *a1, int a2)
{
  int v4 = [JavaNetStandardSocketOptions_PositiveIntegerSocketOption alloc];
  uint64_t v5 = (void *)JavaLangInteger_class_();
  JreStrongAssign((id *)&v4->super.name_, a1);
  JreStrongAssign((id *)&v4->super.type_, v5);
  v4->super.socketOption_ = a2;
  return v4;
}

JavaLangError *new_JavaLangError_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaLangError alloc];
  JavaLangThrowable_initWithNSString_(v2, a1);
  return v2;
}

JavaLangError *new_JavaLangError_initWithNSString_withJavaLangThrowable_(void *a1, void *a2)
{
  int v4 = [JavaLangError alloc];
  JavaLangThrowable_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

JavaLangError *new_JavaLangError_initWithJavaLangThrowable_(void *a1)
{
  uint64_t v2 = [JavaLangError alloc];
  JavaLangThrowable_initWithJavaLangThrowable_(v2, a1);
  return v2;
}

JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_init()
{
  uint64_t v0 = [JavaLangIllegalArgumentException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangIllegalArgumentException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

JavaLangIllegalArgumentException *new_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  int v4 = [JavaLangIllegalArgumentException alloc];
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

id LibcoreReflectListOfTypes_initWithJavaLangReflectTypeArray_(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = (id *)(a1 + 8);
  int v4 = new_JavaUtilArrayList_initWithInt_(*(unsigned int *)(a2 + 8));
  id result = JreStrongAssignAndConsume(v3, v4);
  uint64_t v6 = (uint64_t *)(a2 + 24);
  unint64_t v7 = a2 + 24 + 8 * *(int *)(a2 + 8);
  while ((unint64_t)v6 < v7)
  {
    uint64_t v8 = *v6++;
    id result = [*v3 addWithId:v8];
  }
  return result;
}

uint64_t sub_100230020(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  signed int v2 = [a1 size];
  if (v2)
  {
    int v3 = v2;
    int v4 = +[IOSObjectArray arrayWithLength:v2 type:JavaLangReflectType_class_()];
    if (v3 >= 1)
    {
      uint64_t v5 = 0;
      uint64_t v6 = v3;
      do
      {
        id v7 = [a1 getWithInt:v5];
        objc_opt_class();
        if (!v7) {
          JreThrowNullPointerException();
        }
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          JreThrowClassCastException();
        }
        IOSObjectArray_Set((uint64_t)v4, v5++, [v7 getResolvedType]);
      }
      while (v6 != v5);
    }
  }
  else
  {
    if ((atomic_load_explicit(LibcoreUtilEmptyArray__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    return LibcoreUtilEmptyArray_TYPE_;
  }
  return (uint64_t)v4;
}

void sub_100230160()
{
}

LibcoreReflectListOfTypes *new_LibcoreReflectListOfTypes_initWithInt_(uint64_t a1)
{
  signed int v2 = [LibcoreReflectListOfTypes alloc];
  int v3 = new_JavaUtilArrayList_initWithInt_(a1);
  JreStrongAssignAndConsume((id *)&v2->types_, v3);
  return v2;
}

LibcoreReflectListOfTypes *new_LibcoreReflectListOfTypes_initWithJavaLangReflectTypeArray_(uint64_t a1)
{
  signed int v2 = [LibcoreReflectListOfTypes alloc];
  LibcoreReflectListOfTypes_initWithJavaLangReflectTypeArray_((uint64_t)v2, a1);
  return v2;
}

OrgXmlSaxSAXNotSupportedException *new_OrgXmlSaxSAXNotSupportedException_initWithNSString_(uint64_t a1)
{
  signed int v2 = [OrgXmlSaxSAXNotSupportedException alloc];
  OrgXmlSaxSAXException_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

id JavaTextAttributedString_initWithJavaTextAttributedCharacterIterator_(id *a1, void *a2)
{
  if (!a2) {
    goto LABEL_16;
  }
  int v4 = [a2 getBeginIndex];
  if (v4 > (int)[a2 getEndIndex])
  {
    int v18 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid substring range");
    objc_exception_throw(v18);
  }
  uint64_t v5 = new_JavaLangStringBuilder_init();
  for (int i = [a2 getBeginIndex]; i < (int)objc_msgSend(a2, "getEndIndex"); ++i)
  {
    -[JavaLangStringBuilder appendWithChar:](v5, "appendWithChar:", [a2 current]);
    [a2 next];
  }
  JreStrongAssign(a1 + 1, [(JavaLangStringBuilder *)v5 description]);
  id result = [a2 getAllAttributeKeys];
  if (result)
  {
    uint64_t v8 = result;
    CFStringRef v9 = new_JavaUtilHashMap_initWithInt_(((int)(4 * [result size]) / 3 + 1));
    JreStrongAssignAndConsume(a1 + 2, v9);
    id v10 = [v8 iterator];
    if (v10)
    {
      id v11 = v10;
      id result = [v10 hasNext];
      if (result)
      {
        do
        {
          id v12 = [v11 next];
          char v13 = a2;
          for (id j = 0; ; id j = v16)
          {
            [v13 setIndexWithInt:j];
            if ([a2 current] == 0xFFFF) {
              break;
            }
            id v15 = objc_msgSend(a2, "getRunStartWithJavaTextAttributedCharacterIterator_Attribute:", v12);
            id v16 = objc_msgSend(a2, "getRunLimitWithJavaTextAttributedCharacterIterator_Attribute:", v12);
            id v17 = objc_msgSend(a2, "getAttributeWithJavaTextAttributedCharacterIterator_Attribute:", v12);
            if (v17) {
              objc_msgSend(a1, "addAttributeWithJavaTextAttributedCharacterIterator_Attribute:withId:withInt:withInt:", v12, v17, v15, v16);
            }
            char v13 = a2;
          }
          id result = [v11 hasNext];
        }
        while ((result & 1) != 0);
      }
      return result;
    }
LABEL_16:
    JreThrowNullPointerException();
  }
  return result;
}

id sub_100230628(id *a1, void *a2, void *a3, int a4, void *a5)
{
  if (!a2) {
    goto LABEL_28;
  }
  if ((int)[a2 getBeginIndex] > (int)a3
    || (id result = [a2 getEndIndex], (int)a3 > a4)
    || (int)result < a4)
  {
    double v24 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v24);
  }
  if (a5)
  {
    id v11 = new_JavaLangStringBuilder_init();
    [a2 setIndexWithInt:a3];
    while ((int)[a2 getIndex] < a4)
    {
      -[JavaLangStringBuilder appendWithChar:](v11, "appendWithChar:", [a2 current]);
      [a2 next];
    }
    JreStrongAssign(a1 + 1, [(JavaLangStringBuilder *)v11 description]);
    id v12 = new_JavaUtilHashMap_initWithInt_(((int)(4 * [a5 size]) / 3 + 1));
    JreStrongAssignAndConsume(a1 + 2, v12);
    id v13 = [a5 iterator];
    if (v13)
    {
      uint64_t v14 = v13;
      id result = [v13 hasNext];
      if (result)
      {
        do
        {
          id v15 = [v14 next];
          id v16 = a2;
          for (id i = a3; ; id i = v20)
          {
            [v16 setIndexWithInt:i];
            if ((int)[a2 getIndex] >= a4) {
              break;
            }
            id v18 = objc_msgSend(a2, "getAttributeWithJavaTextAttributedCharacterIterator_Attribute:", v15);
            int v19 = objc_msgSend(a2, "getRunStartWithJavaTextAttributedCharacterIterator_Attribute:", v15);
            id v20 = objc_msgSend(a2, "getRunLimitWithJavaTextAttributedCharacterIterator_Attribute:", v15);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0 && v19 >= (int)a3 && (int)v20 <= a4
              || v18 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
            {
              if (v19 <= (int)a3) {
                int v21 = (int)a3;
              }
              else {
                int v21 = v19;
              }
              uint64_t v22 = (v21 - a3);
              if ((int)v20 >= a4) {
                int v23 = a4;
              }
              else {
                int v23 = (int)v20;
              }
              objc_msgSend(a1, "addAttributeWithJavaTextAttributedCharacterIterator_Attribute:withId:withInt:withInt:", v15, v18, v22, (v23 - a3));
            }
            id v16 = a2;
          }
          id result = [v14 hasNext];
        }
        while ((result & 1) != 0);
      }
      return result;
    }
LABEL_28:
    JreThrowNullPointerException();
  }
  return result;
}

id JavaTextAttributedString_initWithJavaTextAttributedCharacterIterator_withInt_withInt_withJavaTextAttributedCharacterIterator_AttributeArray_(id *a1, void *a2, void *a3, int a4, void *a5)
{
  if (a5)
  {
    CFStringRef v9 = JavaUtilArrays_asListWithNSObjectArray_(a5);
    id v10 = new_JavaUtilHashSet_initWithJavaUtilCollection_(v9);
  }
  else
  {
    id v10 = new_JavaUtilHashSet_init();
  }
  id v11 = v10;
  return sub_100230628(a1, a2, a3, a4, v11);
}

void *JavaTextAttributedString_initWithNSString_(uint64_t a1, void *a2)
{
  if (!a2)
  {
    uint64_t v5 = new_JavaLangNullPointerException_initWithNSString_(@"value == null");
    objc_exception_throw(v5);
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  int v3 = new_JavaUtilHashMap_initWithInt_(11);
  return JreStrongAssignAndConsume((id *)(a1 + 16), v3);
}

id JavaTextAttributedString_initWithNSString_withJavaUtilMap_(uint64_t a1, void *a2, void *a3)
{
  if (!a2)
  {
    uint64_t v22 = new_JavaLangNullPointerException_initWithNSString_(@"value == null");
    goto LABEL_22;
  }
  if (![a2 length])
  {
    if (!a3) {
      goto LABEL_19;
    }
    if ([a3 isEmpty])
    {
      uint64_t v6 = (id *)(a1 + 8);
      JreStrongAssign((id *)(a1 + 8), a2);
      goto LABEL_8;
    }
    uint64_t v22 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot add attributes to empty string");
LABEL_22:
    objc_exception_throw(v22);
  }
  uint64_t v6 = (id *)(a1 + 8);
  JreStrongAssign((id *)(a1 + 8), a2);
  if (!a3) {
    goto LABEL_19;
  }
LABEL_8:
  id v7 = (id *)(a1 + 16);
  uint64_t v8 = new_JavaUtilHashMap_initWithInt_(((int)(4 * [a3 size]) / 3 + 1));
  JreStrongAssignAndConsume(v7, v8);
  id v9 = [a3 entrySet];
  if (!v9 || (id v10 = [v9 iterator]) == 0) {
LABEL_19:
  }
    JreThrowNullPointerException();
  id v11 = v10;
  id result = [v10 hasNext];
  if (result)
  {
    do
    {
      id v13 = [v11 next];
      uint64_t v14 = (void *)JavaUtilMap_Entry_class_();
      if (v13 && ([v14 isInstance:v13] & 1) == 0) {
        goto LABEL_18;
      }
      id v15 = new_JavaUtilArrayList_initWithInt_(1);
      unsigned int v16 = [*v6 length];
      if (!v13) {
        goto LABEL_19;
      }
      unsigned int v17 = v16;
      id v18 = [v13 getValue];
      int v19 = [JavaTextAttributedString_Range alloc];
      v19->start_ = 0;
      v19->end_ = v17;
      JreStrongAssign(&v19->value_, v18);
      [(JavaUtilArrayList *)v15 addWithId:v19];
      id v20 = *v7;
      id v21 = [v13 getKey];
      objc_opt_class();
      if (v21)
      {
        if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_18:
        }
          JreThrowClassCastException();
      }
      [v20 putWithId:v21 withId:v15];
      id result = [v11 hasNext];
    }
    while ((result & 1) != 0);
  }
  return result;
}

JavaTextAttributedString *new_JavaTextAttributedString_initWithNSString_(void *a1)
{
  signed int v2 = [JavaTextAttributedString alloc];
  JavaTextAttributedString_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

id JavaTextAttributedString_AttributedIterator_initWithJavaTextAttributedString_(uint64_t a1, void *a2)
{
  JreStrongAssign((id *)(a1 + 24), a2);
  *(_DWORD *)(a1 + 8) = 0;
  if (!a2 || (int v4 = (void *)a2[1]) == 0) {
    JreThrowNullPointerException();
  }
  id result = [v4 length];
  *(void *)(a1 + 12) = result;
  return result;
}

id JavaTextAttributedString_AttributedIterator_initWithJavaTextAttributedString_withJavaTextAttributedCharacterIterator_AttributeArray_withInt_withInt_(uint64_t a1, void *a2, uint64_t a3, signed int a4, signed int a5)
{
  if (a4 < 0) {
    goto LABEL_18;
  }
  if (!a2 || (id v7 = (void *)a2[1]) == 0) {
    JreThrowNullPointerException();
  }
  signed int v11 = [v7 length];
  if (a4 > a5 || v11 < a5)
  {
LABEL_18:
    id v18 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v18);
  }
  *(_DWORD *)(a1 + 8) = a4;
  *(_DWORD *)(a1 + 12) = a5;
  *(_DWORD *)(a1 + 16) = a4;
  id result = JreStrongAssign((id *)(a1 + 24), a2);
  if (a3)
  {
    unint64_t v13 = 5726623064 * *(_DWORD *)(a3 + 8);
    uint64_t v14 = new_JavaUtilHashSet_initWithInt_(HIDWORD(v13) + (v13 >> 63) + 1);
    LODWORD(v15) = *(_DWORD *)(a3 + 8);
    if ((int)v15 - 1 >= 0)
    {
      uint64_t v16 = a3 + 8 * (v15 - 1);
      do
      {
        uint64_t v15 = (v15 - 1);
        uint64_t v17 = *(unsigned int *)(a3 + 8);
        if ((int)v15 >= (int)v17) {
          IOSArray_throwOutOfBoundsWithMsg(v17, v15);
        }
        [(JavaUtilHashSet *)v14 addWithId:*(void *)(v16 + 24)];
        v16 -= 8;
      }
      while ((int)v15 > 0);
    }
    return JreStrongAssign((id *)(a1 + 32), v14);
  }
  return result;
}

void sub_100231750(_Unwind_Exception *a1)
{
}

BOOL sub_100231824(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 1;
  }
  int v4 = *(_DWORD *)(a2 + 8);
  int v5 = *(_DWORD *)(a1 + 8);
  if (v4 < v5) {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 12);
  if (v4 >= v6) {
    return 0;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  return v7 > v5 && v7 <= v6;
}

uint64_t sub_1002318BC(uint64_t a1, void *a2)
{
  if (!a2 || (id v3 = [a2 iterator]) == 0) {
LABEL_19:
  }
    JreThrowNullPointerException();
  int v4 = v3;
  uint64_t result = (uint64_t)[v3 hasNext];
  if (result)
  {
    while (1)
    {
      int v6 = [v4 next];
      if (!v6) {
        goto LABEL_19;
      }
      int v7 = v6;
      int v8 = v6[2];
      int v9 = *(_DWORD *)(a1 + 8);
      if (v8 >= v9 && v8 < *(_DWORD *)(a1 + 12)) {
        break;
      }
      int v10 = v6[3];
      if (v10 > v9 && v10 <= *(_DWORD *)(a1 + 12))
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          int v12 = v7[2];
          if (v12 >= *(_DWORD *)(a1 + 8)) {
            return v12 < *(_DWORD *)(a1 + 12);
          }
          return 0;
        }
        return 1;
      }
      if (([v4 hasNext] & 1) == 0) {
        return 0;
      }
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      int v11 = v7[3];
      if (v11 > *(_DWORD *)(a1 + 8)) {
        return v11 <= *(_DWORD *)(a1 + 12);
      }
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_100231B54(uint64_t a1, void *a2)
{
  if (!a2 || (id v3 = [a2 iterator]) == 0) {
LABEL_12:
  }
    JreThrowNullPointerException();
  int v4 = v3;
  if (![v3 hasNext]) {
    return 0;
  }
  while (1)
  {
    int v5 = [v4 next];
    if (!v5) {
      goto LABEL_12;
    }
    int v6 = v5;
    int v7 = *(_DWORD *)(a1 + 16);
    if (v7 >= v5[2] && v7 < v5[3]) {
      break;
    }
    if (([v4 hasNext] & 1) == 0) {
      return 0;
    }
  }
  if (sub_100231824(a1, (uint64_t)v5)) {
    return *((void *)v6 + 2);
  }
  else {
    return 0;
  }
}

uint64_t sub_100231DF0(_DWORD *a1, void *a2)
{
  if (!a2
    || (uint64_t v3 = a1[3], (v4 = objc_msgSend(a2, "listIteratorWithInt:", objc_msgSend(a2, "size"))) == 0))
  {
LABEL_17:
    JreThrowNullPointerException();
  }
  int v5 = v4;
  do
  {
    uint64_t v6 = v3;
    if (([v5 hasPrevious] & 1) == 0) {
      break;
    }
    int v7 = [v5 previous];
    if (!v7) {
      goto LABEL_17;
    }
    int v8 = v7;
    int v9 = v7[3];
    if (v9 <= a1[2]) {
      break;
    }
    int v10 = a1[4];
    uint64_t v3 = v7[2];
    if (v10 < v9 && v10 >= (int)v3)
    {
      if (sub_100231824((uint64_t)a1, (uint64_t)v7)) {
        return v8[3];
      }
      return v6;
    }
  }
  while (v10 < v9);
  return v6;
}

uint64_t sub_100232014(unsigned int *a1, void *a2)
{
  if (!a2 || (uint64_t v3 = a1[2], (v4 = [a2 iterator]) == 0)) {
LABEL_12:
  }
    JreThrowNullPointerException();
  int v5 = v4;
  while (1)
  {
    uint64_t v6 = v3;
    if (![v5 hasNext]) {
      return v6;
    }
    int v7 = [v5 next];
    if (!v7) {
      goto LABEL_12;
    }
    int v8 = v7;
    int v9 = v7[2];
    if (v9 >= (int)a1[3]) {
      return v6;
    }
    int v10 = a1[4];
    if (v10 < v9) {
      return v6;
    }
    uint64_t v3 = v7[3];
    if (v10 < (int)v3)
    {
      if (sub_100231824((uint64_t)a1, (uint64_t)v7)) {
        return v8[2];
      }
      return v6;
    }
  }
}

JavaUtilConcurrentAtomicAtomicBoolean *new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(unsigned int a1)
{
  uint64_t result = [JavaUtilConcurrentAtomicAtomicBoolean alloc];
  atomic_store(a1, (unsigned int *)&result->value_);
  return result;
}

uint64_t JavaLangReflectParameterizedType_class_()
{
  if (qword_100561090 != -1) {
    dispatch_once(&qword_100561090, &stru_100456420);
  }
  return qword_100561088;
}

void sub_10023261C(id a1)
{
  qword_100561088 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangReflectParameterizedType);
}

uint64_t FastPointerLookup(pthread_mutex_t *a1, uint64_t a2)
{
  unsigned int v4 = 9 * ((((a2 << 15) ^ 0xFFFFCD7D) + a2) ^ ((((a2 << 15) ^ 0xFFFFCD7D) + a2) >> 10));
  unsigned int v5 = (16389 * (v4 ^ (v4 >> 6))) ^ ((16389 * (v4 ^ (v4 >> 6))) >> 16);
  atomic_fetch_add_explicit((atomic_ullong *volatile)a1[1].__opaque, 1uLL, memory_order_relaxed);
  __dmb(0xBu);
  explicit = (_DWORD *)atomic_load_explicit((atomic_ullong *volatile)&a1[1].__opaque[8], memory_order_acquire);
  if (!explicit
    || (int v7 = (void *)atomic_load_explicit((atomic_ullong *volatile)&explicit[2 * ((*explicit - 1) & v5) + 6], memory_order_acquire)) == 0)
  {
LABEL_5:
    atomic_fetch_add_explicit((atomic_ullong *volatile)a1[1].__opaque, 0xFFFFFFFFFFFFFFFFLL, memory_order_release);
LABEL_6:
    pthread_mutex_lock(a1);
    int v8 = *(uint64_t **)&a1[1].__opaque[8];
    if (!v8)
    {
      unint64_t v9 = (unint64_t)malloc_type_calloc(0x698uLL, 1uLL, 0x8963FABEuLL);
      int v8 = (uint64_t *)v9;
      unint64_t v10 = v9 + 536;
      if ((v9 & 7) != 0) {
        unint64_t v10 = ((v9 + 536) & 0xFFFFFFFFFFFFFFF8) + 8;
      }
      *(void *)unint64_t v9 = 64;
      *(void *)(v9 + 8) = v10;
      *(void *)(v9 + 16) = v9 + 1664;
      atomic_store(v9, (unint64_t *)&a1[1].__opaque[8]);
    }
    uint64_t v11 = *v8;
    uint64_t v12 = (*v8 - 1) & v5;
    unint64_t v13 = (void *)v8[v12 + 3];
    if (v13)
    {
      while (*v13 != a2)
      {
        unint64_t v13 = (void *)v13[2];
        if (!v13) {
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:
      unint64_t v13 = (void *)v8[1];
      if ((unint64_t)v13 > v8[2])
      {
        uint64_t v14 = 2 * v11;
        uint64_t v15 = 16 * v11 + 24;
        unint64_t v16 = (unint64_t)malloc_type_calloc(v15 + 24 * ((v11 & 0x7FFFFFFFFFFFFFFFLL) + ((unint64_t)(2 * v11) >> 2)), 1uLL, 0x8963FABEuLL);
        uint64_t v17 = (uint64_t *)v16;
        uint64_t v18 = v15 + v16 - (v16 & 7) + 8;
        if ((v16 & 7) == 0) {
          uint64_t v18 = v15 + v16;
        }
        *(void *)unint64_t v16 = v14;
        *(void *)(v16 + 8) = v18;
        *(void *)(v16 + 16) = v16
                              + 16 * v11
                              + 24 * ((v11 & 0x7FFFFFFFFFFFFFFFLL) + ((unint64_t)(2 * v11) >> 2));
        if (v11)
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            id v20 = (long long *)v8[i + 3];
            if (v20)
            {
              unint64_t v21 = v18;
              do
              {
                uint64_t v22 = v18 + 24;
                *(void *)(v16 + 8) = v18 + 24;
                long long v23 = *v20;
                *(_OWORD *)uint64_t v18 = *v20;
                unsigned int v24 = 9
                    * ((((v23 << 15) ^ 0xFFFFCD7D) + v23) ^ ((((v23 << 15) ^ 0xFFFFCD7D)
                                                                    + v23) >> 10));
                id v25 = (unint64_t *)(v16
                                         + 8
                                         * ((v14 - 1) & ((16389 * (v24 ^ (v24 >> 6))) ^ ((16389
                                                                                                * (v24 ^ (v24 >> 6))) >> 16)))
                                         + 24);
                *(void *)(v18 + 16) = *v25;
                atomic_store(v21, v25);
                id v20 = (long long *)*((void *)v20 + 2);
                v21 += 24;
                v18 += 24;
              }
              while (v20);
            }
            else
            {
              uint64_t v22 = v18;
            }
            uint64_t v18 = v22;
          }
        }
        atomic_store(v16, (unint64_t *)&a1[1].__opaque[8]);
        __dmb(0xBu);
        while (atomic_load_explicit((atomic_ullong *volatile)a1[1].__opaque, memory_order_acquire))
          ;
        free(v8);
        unint64_t v13 = (void *)v17[1];
        uint64_t v12 = (*(_DWORD *)v17 - 1) & v5;
        int v8 = v17;
      }
      v8[1] = (uint64_t)(v13 + 3);
      *unint64_t v13 = a2;
      v13[1] = ((uint64_t (*)(uint64_t))a1[1].__sig)(a2);
      unint64_t v26 = &v8[v12];
      v13[2] = v26[3];
      atomic_store((unint64_t)v13, (unint64_t *)v26 + 3);
    }
    pthread_mutex_unlock(a1);
    return v13[1];
  }
  while (*v7 != a2)
  {
    int v7 = (void *)v7[2];
    if (!v7) {
      goto LABEL_5;
    }
  }
  uint64_t result = v7[1];
  atomic_fetch_add_explicit((atomic_ullong *volatile)a1[1].__opaque, 0xFFFFFFFFFFFFFFFFLL, memory_order_release);
  if (!result) {
    goto LABEL_6;
  }
  return result;
}

JavaNioChannelsNotYetConnectedException *new_JavaNioChannelsNotYetConnectedException_init()
{
  uint64_t v0 = [JavaNioChannelsNotYetConnectedException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

JavaNioBufferOverflowException *new_JavaNioBufferOverflowException_init()
{
  uint64_t v0 = [JavaNioBufferOverflowException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaNetPortUnreachableException *new_JavaNetPortUnreachableException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = [JavaNetPortUnreachableException alloc];
  JavaNetSocketException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

id JavaIoFileOutputStream_initWithJavaIoFile_withBoolean_(uint64_t a1, void *a2, int a3)
{
  JavaIoOutputStream_init();
  uint64_t v6 = DalvikSystemCloseGuard_get();
  JreStrongAssign((id *)(a1 + 40), v6);
  if (!a2)
  {
    unint64_t v10 = new_JavaLangNullPointerException_initWithNSString_(@"file == null");
    objc_exception_throw(v10);
  }
  if (a3) {
    int v7 = 521;
  }
  else {
    int v7 = 1537;
  }
  *(_DWORD *)(a1 + 32) = v7;
  id v8 = LibcoreIoIoBridge_openWithNSString_withInt_((uint64_t)[a2 getAbsolutePath], *(unsigned int *)(a1 + 32));
  JreStrongAssign((id *)(a1 + 8), v8);
  *(unsigned char *)(a1 + 16) = 1;
  unint64_t v9 = *(void **)(a1 + 40);
  if (!v9) {
    JreThrowNullPointerException();
  }
  return [v9 openWithNSString:@"close"];
}

id JavaIoFileOutputStream_initWithJavaIoFileDescriptor_(uint64_t a1, void *a2)
{
  JavaIoOutputStream_init(a1, a2);
  unsigned int v4 = DalvikSystemCloseGuard_get();
  JreStrongAssign((id *)(a1 + 40), v4);
  if (!a2)
  {
    int v7 = new_JavaLangNullPointerException_initWithNSString_(@"fd == null");
    objc_exception_throw(v7);
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  *(unsigned char *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 32) = 1;
  unsigned int v5 = JavaNioNioUtils_newFileChannelWithId_withJavaIoFileDescriptor_withInt_((void *)a1, a2, *(_DWORD *)(a1 + 32));
  return JreStrongAssign((id *)(a1 + 24), v5);
}

id JavaIoFileOutputStream_initWithNSString_(uint64_t a1, void *a2)
{
  uint64_t v3 = new_JavaIoFile_initWithNSString_(a2);
  return JavaIoFileOutputStream_initWithJavaIoFile_withBoolean_(a1, v3, 0);
}

void sub_100233078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100233128()
{
}

void sub_100233164()
{
}

void sub_1002331FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoFileOutputStream *new_JavaIoFileOutputStream_initWithJavaIoFile_(void *a1)
{
  signed int v2 = [JavaIoFileOutputStream alloc];
  JavaIoFileOutputStream_initWithJavaIoFile_withBoolean_((uint64_t)v2, a1, 0);
  return v2;
}

JavaIoFileOutputStream *new_JavaIoFileOutputStream_initWithJavaIoFileDescriptor_(void *a1)
{
  signed int v2 = [JavaIoFileOutputStream alloc];
  JavaIoFileOutputStream_initWithJavaIoFileDescriptor_((uint64_t)v2, a1);
  return v2;
}

JavaIoFileOutputStream *new_JavaIoFileOutputStream_initWithNSString_(void *a1)
{
  signed int v2 = [JavaIoFileOutputStream alloc];
  JavaIoFileOutputStream_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

id JavaMathMathContext_initWithInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(JavaMathRoundingModeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v4 = (void *)qword_100563CB0;
  return JavaMathMathContext_initWithInt_withJavaMathRoundingModeEnum_(a1, a2, v4);
}

id JavaMathMathContext_initWithInt_withJavaMathRoundingModeEnum_(uint64_t a1, int a2, void *a3)
{
  if (a2 < 0)
  {
    unsigned int v5 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Digits < 0");
    goto LABEL_8;
  }
  if (!a3)
  {
    unsigned int v5 = new_JavaLangNullPointerException_initWithNSString_(@"null RoundingMode");
LABEL_8:
    objc_exception_throw(v5);
  }
  *(_DWORD *)(a1 + 8) = a2;
  uint64_t v3 = (id *)(a1 + 16);
  return JreStrongAssign(v3, a3);
}

id JavaMathMathContext_initWithNSString_(uint64_t a1, void *a2)
{
  if (!a2) {
    goto LABEL_44;
  }
  uint64_t v3 = [a2 toCharArray];
  if (!v3) {
    goto LABEL_44;
  }
  uint64_t v4 = (uint64_t)v3;
  if ((v3[2] - 46) < 0xFFFFFFED) {
    goto LABEL_47;
  }
  if (!qword_100561098) {
    goto LABEL_44;
  }
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = *(unsigned int *)(qword_100561098 + 8);
    if (v5 >= (int)v6) {
      break;
    }
    uint64_t v7 = *(int *)(v4 + 8);
    if (v5 >= v7) {
      IOSArray_throwOutOfBoundsWithMsg(v7, v5);
    }
    if (v5 >= (int)v6) {
      IOSArray_throwOutOfBoundsWithMsg(v6, v5);
    }
    if (*(unsigned __int16 *)(v4 + 12 + 2 * v5) != *(unsigned __int16 *)(qword_100561098 + 12 + 2 * v5))
    {
      LODWORD(v6) = *(_DWORD *)(qword_100561098 + 8);
      break;
    }
    ++v5;
    if (!qword_100561098) {
      goto LABEL_44;
    }
  }
  if ((int)v6 > (int)v5) {
    goto LABEL_47;
  }
  uint64_t v8 = *(unsigned int *)(v4 + 8);
  if ((int)v8 <= (int)v5) {
    IOSArray_throwOutOfBoundsWithMsg(v8, v5);
  }
  int v9 = JavaLangCharacter_digitWithChar_withInt_(*(unsigned __int16 *)(v4 + 12 + 2 * v5), 10);
  if (v9 == -1) {
    goto LABEL_47;
  }
  uint64_t v10 = v5 + 2;
  *(_DWORD *)(a1 + 8) = v9 + 10 * *(_DWORD *)(a1 + 8);
  while (1)
  {
    uint64_t v11 = *(unsigned int *)(v4 + 8);
    int v12 = v10 - 1;
    if ((int)v10 - 1 < 0 || v12 >= (int)v11) {
      IOSArray_throwOutOfBoundsWithMsg(v11, v12);
    }
    int v13 = JavaLangCharacter_digitWithChar_withInt_(*(unsigned __int16 *)(v4 + 12 + 2 * v12), 10);
    if (v13 == -1) {
      break;
    }
    int v14 = v13 + 10 * *(_DWORD *)(a1 + 8);
    *(_DWORD *)(a1 + 8) = v14;
    uint64_t v10 = (v10 + 1);
    if (v14 < 0) {
      goto LABEL_47;
    }
  }
  uint64_t v15 = *(unsigned int *)(v4 + 8);
  if (v10 - 1 < 0 || v12 >= (int)v15) {
    IOSArray_throwOutOfBoundsWithMsg(v15, (v10 - 1));
  }
  if (*(_WORD *)(v4 + 12 + 2 * v12) != 32)
  {
LABEL_47:
    unint64_t v21 = new_JavaLangIllegalArgumentException_initWithNSString_(@"bad string format");
    objc_exception_throw(v21);
  }
  if (!qword_1005610A0) {
LABEL_44:
  }
    JreThrowNullPointerException();
  uint64_t v16 = 0;
  while (1)
  {
    uint64_t v17 = *(unsigned int *)(qword_1005610A0 + 8);
    if ((int)v16 >= (int)v17) {
      break;
    }
    if ((v10 & 0x80000000) != 0 || (int)v10 >= *(_DWORD *)(v4 + 8)) {
      IOSArray_throwOutOfBoundsWithMsg(*(unsigned int *)(v4 + 8), v10);
    }
    if ((int)v16 >= (int)v17) {
      IOSArray_throwOutOfBoundsWithMsg(v17, v16);
    }
    if (*(unsigned __int16 *)(v4 + 12 + 2 * (int)v10) != *(unsigned __int16 *)(qword_1005610A0 + 12 + 2 * v16))
    {
      LODWORD(v17) = *(_DWORD *)(qword_1005610A0 + 8);
      break;
    }
    uint64_t v10 = (v10 + 1);
    ++v16;
    if (!qword_1005610A0) {
      goto LABEL_44;
    }
  }
  if ((int)v16 < (int)v17) {
    goto LABEL_47;
  }
  uint64_t v18 = NSString_valueOfChars_offset_count_(v4, v10, (*(_DWORD *)(v4 + 8) - v10));
  int v19 = JavaMathRoundingModeEnum_valueOfWithNSString_(v18);
  return JreStrongAssign((id *)(a1 + 16), v19);
}

JavaMathMathContext *new_JavaMathMathContext_initWithInt_withJavaMathRoundingModeEnum_(int a1, void *a2)
{
  uint64_t v4 = [JavaMathMathContext alloc];
  JavaMathMathContext_initWithInt_withJavaMathRoundingModeEnum_((uint64_t)v4, a1, a2);
  return v4;
}

JavaMathMathContext *new_JavaMathMathContext_initWithInt_(int a1)
{
  signed int v2 = [JavaMathMathContext alloc];
  JavaMathMathContext_initWithInt_((uint64_t)v2, a1);
  return v2;
}

id JavaNioFileChannelImpl_initWithId_withJavaIoFileDescriptor_withInt_(uint64_t a1, void *a2, void *a3, int a4)
{
  JavaNioChannelsFileChannel_init();
  uint64_t v8 = new_JavaUtilTreeSet_initWithJavaUtilComparator_((void *)qword_1005610A8);
  JreStrongAssignAndConsume((id *)(a1 + 48), v8);
  JreStrongAssign((id *)(a1 + 32), a3);
  id result = objc_storeWeak((id *)(a1 + 24), a2);
  *(_DWORD *)(a1 + 40) = a4;
  return result;
}

uint64_t sub_100233D0C(uint64_t result)
{
  if ((*(_DWORD *)(result + 40) & 3) == 1)
  {
    uint64_t v1 = new_JavaNioChannelsNonReadableChannelException_init();
    objc_exception_throw(v1);
  }
  return result;
}

uint64_t sub_100233D48(uint64_t result)
{
  if ((*(unsigned char *)(result + 40) & 3) == 0)
  {
    uint64_t v1 = new_JavaNioChannelsNonWritableChannelException_init();
    objc_exception_throw(v1);
  }
  return result;
}

JavaNioFileChannelImpl_FileLockImpl *sub_100233E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a5;
  if ((*(_DWORD *)(a1 + 40) & 3) == 1)
  {
    if (a4)
    {
      int v13 = new_JavaNioChannelsNonReadableChannelException_init();
LABEL_27:
      objc_exception_throw(v13);
    }
  }
  else if ((*(_DWORD *)(a1 + 40) & 3) == 0 && (a4 & 1) == 0)
  {
    int v13 = new_JavaNioChannelsNonWritableChannelException_init();
    goto LABEL_27;
  }
  if ((a3 | a2) < 0)
  {
    CFStringRef v25 = JreStrcat("$J$J", a2, a3, a4, a5, a6, a7, a8, @"position=");
    int v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v25);
    goto LABEL_27;
  }
  int v14 = [JavaNioFileChannelImpl_FileLockImpl alloc];
  JavaNioChannelsFileLock_initWithJavaNioChannelsFileChannel_withLong_withLong_withBoolean_((uint64_t)v14, (void *)a1, a2, a3, a4, v15, v16, v17);
  *(&v14->super.shared_ + 1) = 0;
  uint64_t v18 = v14;
  sub_100235890((id *)a1, v18);
  int v19 = new_LibcoreIoStructFlock_init();
  id v20 = v19;
  if (a4) {
    __int16 v21 = 1;
  }
  else {
    __int16 v21 = 3;
  }
  v19->l_type_ = v21;
  v19->l_whence_ = 0;
  v19->l_start_ = a2;
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaNioFileChannelImpl__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a3 == 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = a3;
  }
  v20->l_len_ = v22;
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  if (v8) {
    uint64_t v23 = 9;
  }
  else {
    uint64_t v23 = 8;
  }
  if ([(id)LibcoreIoLibcore_os_ fcntlFlockWithJavaIoFileDescriptor:*(void *)(a1 + 32) withInt:v23 withLibcoreIoStructFlock:v20] == -1)
  {
    sub_100234368((void *)a1, (uint64_t)v18);
    return 0;
  }
  return v18;
}

void sub_100234030(_Unwind_Exception *a1)
{
}

void sub_10023408C(void *a1)
{
}

void sub_10023416C(_Unwind_Exception *a1)
{
}

void sub_10023418C(void *a1)
{
}

void sub_100234328()
{
}

void sub_100234358()
{
}

uint64_t sub_100234368(void *a1, uint64_t a2)
{
  objc_sync_enter(a1);
  uint64_t v4 = (void *)a1[6];
  if (!v4) {
    JreThrowNullPointerException();
  }
  [v4 removeWithId:a2];
  return objc_sync_exit(a1);
}

void sub_1002343C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002344C4(_Unwind_Exception *a1)
{
}

JavaNioDirectByteBuffer *sub_1002344E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  -[JavaNioDatagramChannelImpl checkOpen]_0((void *)a1);
  if (!a2)
  {
    uint64_t v15 = new_JavaLangNullPointerException_initWithNSString_(@"mapMode == null");
    goto LABEL_28;
  }
  if (a4 > 0x7FFFFFFF || (a4 | a3) < 0)
  {
    CFStringRef v26 = JreStrcat("$J$J", v8, v9, v10, v11, v12, v13, v14, @"position=");
    uint64_t v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v26);
    goto LABEL_28;
  }
  if ((*(_DWORD *)(a1 + 40) & 3) == 0)
  {
    if ((atomic_load_explicit(JavaNioChannelsFileChannel_MapMode__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if ((void *)JavaNioChannelsFileChannel_MapMode_READ_ONLY_ == a2) {
      goto LABEL_10;
    }
    uint64_t v15 = new_JavaNioChannelsNonWritableChannelException_init();
LABEL_28:
    objc_exception_throw(v15);
  }
  if ((*(_DWORD *)(a1 + 40) & 3) == 1)
  {
    uint64_t v15 = new_JavaNioChannelsNonReadableChannelException_init();
    goto LABEL_28;
  }
LABEL_10:
  if (a4 + a3 > (uint64_t)[(id)a1 size])
  {
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    [(id)LibcoreIoLibcore_os_ ftruncateWithJavaIoFileDescriptor:*(void *)(a1 + 32) withLong:a4 + a3];
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  uint64_t v16 = (uint64_t)[(id)LibcoreIoLibcore_os_ sysconfWithInt:29];
  uint64_t v17 = a3 / v16 * v16;
  uint64_t v18 = a3 % v16;
  uint64_t v23 = JavaNioMemoryBlock_mmapWithJavaIoFileDescriptor_withLong_withLong_withJavaNioChannelsFileChannel_MapMode_(*(void *)(a1 + 32), v17, a4 + (int)v18, (uint64_t)a2, v19, v20, v21, v22);
  if ((atomic_load_explicit(JavaNioChannelsFileChannel_MapMode__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v24 = new_JavaNioDirectByteBuffer_initWithJavaNioMemoryBlock_withInt_withInt_withBoolean_withJavaNioChannelsFileChannel_MapMode_(v23, a4, v18, JavaNioChannelsFileChannel_MapMode_READ_ONLY_ == (void)a2, a2);
  return v24;
}

void sub_1002346EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1) {
    _Unwind_Resume(exception_object);
  }
  uint64_t v18 = objc_begin_catch(exception_object);
  if ((atomic_load_explicit(v15, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (*v17)
  {
    uint64_t v19 = [*v17 fstatWithJavaIoFileDescriptor:*(void *)(v14 + *(int *)(v16 + 1960))];
    if (v19)
    {
      if (LibcoreIoOsConstants_S_ISREGWithInt_(v19[6]))
      {
        if (v18) {
          goto LABEL_11;
        }
      }
      else if (v18)
      {
        if (v18[21] == 22)
        {
          objc_end_catch();
          JUMPOUT(0x1002345C4);
        }
LABEL_11:
        objc_exception_throw([v18 rethrowAsIOException]);
      }
    }
  }
  JreThrowNullPointerException();
}

void sub_100234790(void *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 == a14)
  {
    id v14 = objc_begin_catch(exc_buf);
    if (v14) {
      objc_exception_throw([v14 rethrowAsIOException]);
    }
    JreThrowNullPointerException();
  }
  objc_end_catch();
  JUMPOUT(0x1002347CCLL);
}

void sub_1002347C0()
{
}

void sub_100234844()
{
}

void sub_100234874()
{
}

void sub_10023495C(_Unwind_Exception *a1)
{
}

uint64_t sub_1002349BC(void *a1, void *a2, uint64_t a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  [a2 checkWritable];
  -[JavaNioDatagramChannelImpl checkOpen]_0(a1);
  sub_100233D0C((uint64_t)a1);
  if (![a2 hasRemaining]) {
    return 0;
  }
  [a1 begin];
  unsigned __int8 explicit = atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire);
  if (a3 == -1)
  {
    if ((explicit & 1) == 0) {
      objc_opt_class();
    }
    if (LibcoreIoLibcore_os_)
    {
      unsigned int v7 = [(id)LibcoreIoLibcore_os_ readWithJavaIoFileDescriptor:a1[4] withJavaNioByteBuffer:a2];
      goto LABEL_13;
    }
LABEL_20:
    JreThrowNullPointerException();
  }
  if ((explicit & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    goto LABEL_20;
  }
  unsigned int v7 = [(id)LibcoreIoLibcore_os_ preadWithJavaIoFileDescriptor:a1[4] withJavaNioByteBuffer:a2 withLong:a3];
LABEL_13:
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  [a1 endWithBoolean:(int)v8 >= 0];
  if ((int)v8 >= 1) {
    objc_msgSend(a2, "positionWithInt:", objc_msgSend(a2, "position") + v8);
  }
  return v8;
}

void sub_100234B08(_Unwind_Exception *a1)
{
}

void sub_100234B28(void *exc_buf)
{
}

void sub_100234B84()
{
}

id sub_100234BC4(void *a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (![a2 init]) {
    return 0;
  }
  [a1 begin];
  id v4 = [a2 doTransferWithJavaIoFileDescriptor:a1[4]];
  [a1 endWithBoolean:1];
  [a2 didTransferWithInt:v4];
  return v4;
}

void sub_100234C58(_Unwind_Exception *a1)
{
}

void sub_100234C78(void *a1)
{
}

void sub_100234DF0(_Unwind_Exception *a1)
{
}

void sub_100234FDC(_Unwind_Exception *a1)
{
}

void sub_100234FFC(void *a1)
{
}

void sub_100235274(_Unwind_Exception *a1)
{
}

void sub_1002352B4(void *exc_buf, int a2)
{
  if (a2 == 2)
  {
    signed int v2 = objc_begin_catch(exc_buf);
    if (!v2) {
      JreThrowNullPointerException();
    }
    int v3 = v2[21];
    if (v3 != 22 && v3 != 78) {
      objc_exception_throw([v2 rethrowAsIOException]);
    }
    objc_end_catch();
  }
  else
  {
    objc_begin_catch(exc_buf);
  }
  JUMPOUT(0x100235164);
}

void sub_100235328()
{
}

void sub_100235450(_Unwind_Exception *a1)
{
}

id sub_1002354B0(void *a1, void *a2, uint64_t a3)
{
  -[JavaNioDatagramChannelImpl checkOpen]_0(a1);
  sub_100233D48((uint64_t)a1);
  if (!a2)
  {
    uint64_t v10 = new_JavaLangNullPointerException_initWithNSString_(@"buffer == null");
    objc_exception_throw(v10);
  }
  if (![a2 hasRemaining]) {
    return 0;
  }
  [a1 begin];
  unsigned __int8 explicit = atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire);
  if (a3 != -1)
  {
    if ((explicit & 1) == 0) {
      objc_opt_class();
    }
    if (LibcoreIoLibcore_os_)
    {
      id v7 = [(id)LibcoreIoLibcore_os_ pwriteWithJavaIoFileDescriptor:a1[4] withJavaNioByteBuffer:a2 withLong:a3];
      goto LABEL_13;
    }
LABEL_16:
    JreThrowNullPointerException();
  }
  if ((explicit & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    goto LABEL_16;
  }
  id v7 = [(id)LibcoreIoLibcore_os_ writeWithJavaIoFileDescriptor:a1[4] withJavaNioByteBuffer:a2];
LABEL_13:
  id v8 = v7;
  [a1 endWithBoolean:1];
  if ((int)v8 >= 1) {
    objc_msgSend(a2, "positionWithInt:", objc_msgSend(a2, "position") + v8);
  }
  return v8;
}

void sub_1002355F4(_Unwind_Exception *a1)
{
}

void sub_100235614(void *exc_buf)
{
}

void sub_100235660()
{
}

uint64_t JavaNioFileChannelImpl_calculateTotalRemainingWithJavaNioByteBufferArray_withInt_withInt_withBoolean_(uint64_t a1, int a2, int a3, int a4)
{
  LODWORD(v6) = a2;
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaNioFileChannelImpl__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v8 = a3 + v6;
  if (a3 + (int)v6 > (int)v6)
  {
    if (a1)
    {
      LODWORD(v9) = 0;
      uint64_t v6 = (int)v6;
      uint64_t v10 = v8;
      while (1)
      {
        uint64_t v11 = *(unsigned int *)(a1 + 8);
        if (v6 < 0 || v6 >= (int)v11) {
          IOSArray_throwOutOfBoundsWithMsg(v11, v6);
        }
        uint64_t v12 = *(void **)(a1 + 24 + 8 * v6);
        if (!v12) {
          break;
        }
        unsigned int v13 = [v12 remaining];
        if (a4)
        {
          uint64_t v14 = *(unsigned int *)(a1 + 8);
          if (v6 < 0 || v6 >= (int)v14) {
            IOSArray_throwOutOfBoundsWithMsg(v14, v6);
          }
          uint64_t v15 = *(void **)(a1 + 24 + 8 * v6);
          if (!v15) {
            break;
          }
          [v15 checkWritable];
        }
        uint64_t v9 = v13 + v9;
        if (v10 == ++v6) {
          return v9;
        }
      }
    }
    JreThrowNullPointerException();
  }
  return 0;
}

uint64_t sub_100235890(id *a1, void *a2)
{
  objc_sync_enter(a1);
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v4 = [a2 position];
  id v5 = [a2 size];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = a1[6];
  if (!v6) {
LABEL_14:
  }
    JreThrowNullPointerException();
  id v7 = v5;
  id v8 = [a1[6] countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = (uint64_t)v4 + (void)v7;
    uint64_t v10 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v10) {
          objc_enumerationMutation(v6);
        }
        uint64_t v12 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        if (!v12) {
          goto LABEL_14;
        }
        if ((uint64_t)objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * i), "position", (void)v15) > v9) {
          goto LABEL_13;
        }
        if (objc_msgSend(v12, "overlapsWithLong:withLong:", objc_msgSend(a2, "position"), objc_msgSend(a2, "size")))
        {
          uint64_t v14 = new_JavaNioChannelsOverlappingFileLockException_init();
          objc_exception_throw(v14);
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v8);
  }
LABEL_13:
  objc_msgSend(a1[6], "addWithId:", a2, (void)v15);
  return objc_sync_exit(a1);
}

void sub_100235A2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaNioFileChannelImpl *new_JavaNioFileChannelImpl_initWithId_withJavaIoFileDescriptor_withInt_(void *a1, void *a2, int a3)
{
  id v6 = [JavaNioFileChannelImpl alloc];
  JavaNioFileChannelImpl_initWithId_withJavaIoFileDescriptor_withInt_((uint64_t)v6, a1, a2, a3);
  return v6;
}

JavaIoInterruptedIOException *new_JavaIoInterruptedIOException_init()
{
  uint64_t v0 = [JavaIoInterruptedIOException alloc];
  JavaIoIOException_init(v0, v1);
  return v0;
}

int8x16_t JavaLangHexStringParser_initWithInt_withInt_(uint64_t a1, __int32 a2, int a3)
{
  JreStrongAssign((id *)(a1 + 72), &stru_10048C1F8);
  *(_DWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 12) = a3;
  v6.i32[0] = a2 - 1;
  v6.i32[1] = a2;
  int8x8_t v7 = vand_s8(v6, (int8x8_t)0x3F0000003FLL);
  v8.i64[0] = v7.u32[0];
  v8.i64[1] = v7.u32[1];
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  int8x16_t result = vmvnq_s8((int8x16_t)vshlq_u64(v9, v8));
  *(int8x16_t *)(a1 + 16) = result;
  *(void *)(a1 + 32) = ~a3;
  *(void *)(a1 + 40) = ~(-1 << a3);
  return result;
}

double JavaLangHexStringParser_parseDoubleWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangHexStringParser__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  signed int v2 = [JavaLangHexStringParser alloc];
  JreStrongAssign((id *)&v2->abandonedNumber_, &stru_10048C1F8);
  *(void *)&v2->EXPONENT_WIDTH_ = 0x340000000BLL;
  *(_OWORD *)&v2->EXPONENT_BASE_ = xmmword_100320830;
  *(_OWORD *)&v2->MIN_EXPONENT_ = xmmword_100320840;
  uint64_t v3 = sub_100236054((uint64_t)v2, a1);
  return JavaLangDouble_longBitsToDoubleWithLong_(v3);
}

float JavaLangHexStringParser_parseFloatWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangHexStringParser__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  signed int v2 = [JavaLangHexStringParser alloc];
  JreStrongAssign((id *)&v2->abandonedNumber_, &stru_10048C1F8);
  *(void *)&v2->EXPONENT_WIDTH_ = 0x1700000008;
  *(_OWORD *)&v2->EXPONENT_BASE_ = xmmword_100320850;
  *(_OWORD *)&v2->MIN_EXPONENT_ = xmmword_100320860;
  int v3 = sub_100236054((uint64_t)v2, a1);
  return JavaLangFloat_intBitsToFloatWithInt_(v3);
}

uint64_t sub_100236054(uint64_t a1, uint64_t a2)
{
  if (!qword_1005610B0) {
    goto LABEL_6;
  }
  id v3 = [(id)qword_1005610B0 matcherWithJavaLangCharSequence:a2];
  if (!v3) {
    goto LABEL_6;
  }
  id v4 = v3;
  if (([v3 matches] & 1) == 0)
  {
    CFStringRef v20 = JreStrcat("$$C$", v5, v6, v7, v8, v9, v10, v11, @"Invalid hex ");
    uint64_t v21 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v20);
    objc_exception_throw(v21);
  }
  id v12 = [v4 groupWithInt:1];
  id v13 = [v4 groupWithInt:2];
  id v14 = [v4 groupWithInt:3];
  if (!v12) {
LABEL_6:
  }
    JreThrowNullPointerException();
  long long v15 = v14;
  *(void *)(a1 + 48) = [v12 isEqual:@"-"];
  sub_1002361CC(a1, v15);
  sub_100236294(a1, v13);
  int v16 = *(_DWORD *)(a1 + 12);
  uint64_t v17 = *(void *)(a1 + 48) << (*(_DWORD *)(a1 + 8) + v16);
  uint64_t v18 = *(void *)(a1 + 56) << v16;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v18;
  return v18 | *(void *)(a1 + 64) | v17;
}

uint64_t sub_1002361CC(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v2 = a2;
  UChar32 v4 = [a2 charAtWithInt:0];
  if (!JavaLangCharacter_isDigitWithChar_(v4)) {
    id v2 = [v2 substring:1];
  }
  if (v4 == 45) {
    uint64_t v12 = -1;
  }
  else {
    uint64_t v12 = 1;
  }
  *(void *)(a1 + 56) = JavaLangLong_parseLongWithNSString_(v2, v5, v6, v7, v8, v9, v10, v11) * v12;
  return sub_10023646C(a1, *(void *)(a1 + 16));
}

id sub_100236294(uint64_t a1, void *a2)
{
  if (!a2) {
    goto LABEL_21;
  }
  id v3 = (unsigned int *)[a2 split:@"\\."];
  if (!v3) {
    goto LABEL_21;
  }
  uint64_t v10 = v3;
  uint64_t v11 = v3[2];
  if ((int)v11 < 1) {
    IOSArray_throwOutOfBoundsWithMsg(v11, 0);
  }
  uint64_t v12 = (void *)*((void *)v10 + 3);
  id v13 = (int)v11 <= 1 ? &stru_10048C1F8 : (__CFString *)*((void *)v10 + 4);
  id v14 = (__CFString *)sub_100236740(*((void **)v10 + 3), (uint64_t)v13, v4, v5, v6, v7, v8, v9);
  if (!v14) {
LABEL_21:
  }
    JreThrowNullPointerException();
  long long v15 = v14;
  id result = [(__CFString *)v14 isEqual:@"0"];
  if (result)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  else
  {
    int v17 = sub_1002367B4(v12, v13);
    id result = (id)sub_10023646C(a1, v17);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 24);
    if (v18 >= v19)
    {
      *(void *)(a1 + 56) = v19;
      *(void *)(a1 + 64) = 0;
    }
    else if (v18 <= *(void *)(a1 + 32))
    {
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
    }
    else
    {
      if ((int)[(__CFString *)v15 length] >= 16)
      {
        JreStrongAssign((id *)(a1 + 72), [(__CFString *)v15 substring:15]);
        long long v15 = (__CFString *)[(__CFString *)v15 substring:0 endIndex:15];
      }
      *(void *)(a1 + 64) = JavaLangLong_parseLongWithNSString_withInt_(v15, 16, v20, v21, v22, v23, v24, v25);
      if (*(uint64_t *)(a1 + 56) < 1)
      {
        return (id)sub_100236524(a1);
      }
      else
      {
        sub_10023657C(a1, *(_DWORD *)(a1 + 12) + 2);
        id result = (id)sub_100236668(a1);
        *(void *)(a1 + 64) &= *(void *)(a1 + 40);
      }
    }
  }
  return result;
}

void sub_100236444()
{
}

uint64_t sub_10023646C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = v4 + a2;
  uint64_t v6 = JavaLangLong_signumWithLong_(v4);
  uint64_t result = JavaLangLong_signumWithLong_(a2);
  if ((int)result * (int)v6 >= 1)
  {
    uint64_t result = JavaLangLong_signumWithLong_(v5);
    if ((int)result * (int)v6 < 0) {
      uint64_t v5 = (v6 << 63) - (int)v6;
    }
  }
  *(void *)(a1 + 56) = v5;
  return result;
}

unint64_t sub_100236524(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 12) + *(_DWORD *)(a1 + 56) + 1;
  *(void *)(a1 + 56) = 0;
  sub_10023657C(a1, v2);
  unint64_t result = sub_100236668(a1);
  *(void *)(a1 + 64) &= *(void *)(a1 + 40);
  return result;
}

uint64_t sub_10023657C(uint64_t a1, int a2)
{
  uint64_t result = JavaLangLong_numberOfLeadingZerosWithLong_(*(void *)(a1 + 64));
  char v11 = 64 - result - a2;
  if (64 - (int)result <= a2)
  {
    uint64_t v12 = *(void *)(a1 + 64) << (a2 - (64 - result));
  }
  else
  {
    uint64_t result = (uint64_t)JreStrAppendStrong((__CFString **)(a1 + 72), "J", v5, v6, v7, v8, v9, v10, (id)(*(void *)(a1 + 64) & ~(-1 << v11)));
    uint64_t v12 = *(uint64_t *)(a1 + 64) >> v11;
  }
  *(void *)(a1 + 64) = v12;
  return result;
}

unint64_t sub_100236668(uint64_t a1)
{
  int v2 = *(void **)(a1 + 72);
  if (!v2 || (id v3 = [v2 replaceAll:@"0+" withReplacement:&stru_10048C1F8]) == 0) {
    JreThrowNullPointerException();
  }
  int v4 = [v3 length];
  uint64_t v5 = *(void *)(a1 + 64);
  unint64_t result = v5 >> 1;
  *(void *)(a1 + 64) = v5 >> 1;
  if (v5)
  {
    uint64_t v7 = v5 & 2;
    if (v4 > 0 || v7 != 0)
    {
      int v9 = 64 - JavaLangLong_numberOfLeadingZerosWithLong_(result);
      unint64_t v10 = *(void *)(a1 + 64) + 1;
      *(void *)(a1 + 64) = v10;
      unint64_t result = JavaLangLong_numberOfLeadingZerosWithLong_(v10);
      if (v9 >= *(_DWORD *)(a1 + 12) && 64 - (int)result > v9)
      {
        return sub_10023646C(a1, 1);
      }
    }
  }
  return result;
}

CFStringRef sub_100236740(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v8 = [(__CFString *)(id)JreStrcat("$$", a2, a3, a4, a5, a6, a7, a8, a1) replaceFirst:@"^0+" withReplacement:&stru_10048C1F8];
  if (!v8) {
    JreThrowNullPointerException();
  }
  id v9 = v8;
  if ([v8 length]) {
    return (const __CFString *)v9;
  }
  else {
    return @"0";
  }
}

uint64_t sub_1002367B4(void *a1, void *a2)
{
  if (!a1) {
    goto LABEL_15;
  }
  id v3 = [a1 replaceFirst:@"^0+" withReplacement:&stru_10048C1F8];
  if (!v3) {
    goto LABEL_15;
  }
  int v4 = v3;
  if ([v3 length])
  {
    id v5 = [v4 substring:0 endIndex:1];
    unsigned int v6 = 4 * [v4 length];
    unint64_t v13 = JavaLangLong_parseLongWithNSString_withInt_(v5, 16, v7, v8, v9, v10, v11, v12);
    return v6 - JavaLangLong_numberOfLeadingZerosWithLong_(v13) + 59;
  }
  if (!a2) {
LABEL_15:
  }
    JreThrowNullPointerException();
  if ((int)[a2 length] < 1)
  {
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    do
    {
      if ([a2 charAtWithInt:v15] != 48) {
        break;
      }
      uint64_t v15 = (v15 + 1);
    }
    while ((int)v15 < (int)[a2 length]);
  }
  if (v15 == [a2 length]) {
    return 0;
  }
  id v16 = [a2 substring:v15 endIndex:(v15 + 1)];
  unint64_t v23 = JavaLangLong_parseLongWithNSString_withInt_(v16, 16, v17, v18, v19, v20, v21, v22);
  return 4 * ~v15 - JavaLangLong_numberOfLeadingZerosWithLong_(v23) + 63;
}

void sub_100236BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t LibcoreIoDeleteOnExit_getInstance()
{
  if (qword_1005610C8 != -1) {
    dispatch_once(&qword_1005610C8, &stru_100458608);
  }
  uint64_t v0 = (void *)qword_1005610C0;
  objc_sync_enter((id)qword_1005610C0);
  uint64_t v1 = qword_1005610B8;
  if (!qword_1005610B8)
  {
    int v2 = [LibcoreIoDeleteOnExit alloc];
    JavaLangThread_init((uint64_t)v2);
    id v3 = new_JavaUtilArrayList_init();
    JreStrongAssignAndConsume((id *)&v2->files_, v3);
    JreStrongAssignAndConsume((id *)&qword_1005610B8, v2);
    Runtimuint64_t e = (void *)JavaLangRuntime_getRuntime();
    if (!Runtime) {
      JreThrowNullPointerException();
    }
    [Runtime addShutdownHookWithJavaLangThread:qword_1005610B8];
    uint64_t v1 = qword_1005610B8;
  }
  objc_sync_exit(v0);
  return v1;
}

void sub_100236DA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100236DB8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_1005610C0 = IOSClass_fromClass(v1);
}

atomic_ullong *sub_100236E88(uint64_t a1, atomic_ullong *a2)
{
  int v4 = a2 + 2;
  do
  {
    while (1)
    {
      id v5 = (atomic_ullong *)atomic_load((unint64_t *)(a1 + 24));
      if (v5) {
        break;
      }
      unsigned int v6 = [JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node alloc];
      if (!qword_1005610D0) {
        goto LABEL_10;
      }
      if ([(id)qword_1005610D0 compareAndSwapObjectWithId:a1 withLong:qword_1005610E0 withId:0 withId:v6])
      {
        uint64_t v7 = (void *)atomic_load((unint64_t *)(a1 + 16));
        JreVolatileStrongAssign((atomic_ullong *)(a1 + 24), v7);
      }
    }
    if (a2)
    {
      JreVolatileStrongAssign(v4, v5);
      if (qword_1005610D0) {
        continue;
      }
    }
LABEL_10:
    JreThrowNullPointerException();
  }
  while (![(id)qword_1005610D0 compareAndSwapObjectWithId:a1 withLong:qword_1005610E8 withId:v5 withId:a2]);
  JreVolatileStrongAssign(v5 + 3, a2);
  return v5;
}

JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node *sub_100236F90(uint64_t a1, void *a2)
{
  int v4 = JavaLangThread_currentThread();
  id v5 = new_JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_initWithJavaLangThread_withJavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_(v4, a2);
  unsigned int v6 = v5;
  uint64_t v7 = (atomic_ullong *)atomic_load((unint64_t *)(a1 + 24));
  if (!v7) {
    goto LABEL_5;
  }
  JreVolatileStrongAssign((atomic_ullong *)&v5->prev_, v7);
  if (!qword_1005610D0) {
    JreThrowNullPointerException();
  }
  if ([(id)qword_1005610D0 compareAndSwapObjectWithId:a1 withLong:qword_1005610E8 withId:v7 withId:v6])JreVolatileStrongAssign(v7 + 3, v6); {
  else
  }
LABEL_5:
    sub_100236E88(a1, (atomic_ullong *)v6);
  return v6;
}

id sub_100237044(uint64_t a1, atomic_ullong *a2)
{
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 16), a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  JreVolatileStrongAssign(a2 + 4, 0);
  return JreVolatileStrongAssign(a2 + 2, 0);
}

unint64_t *sub_1002370A8(unint64_t *result, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  id v3 = result;
  uint64_t v4 = atomic_load((unsigned int *)(a2 + 8));
  if ((v4 & 0x80000000) != 0) {
    unint64_t result = (unint64_t *)sub_100238BC8(a2, v4, 0);
  }
  unint64_t v5 = atomic_load((unint64_t *)(a2 + 24));
  if (v5)
  {
    int v6 = atomic_load((unsigned int *)(v5 + 8));
    if (v6 < 1) {
      goto LABEL_19;
    }
  }
  unint64_t v7 = atomic_load(v3 + 3);
  if (v7 && v7 != a2)
  {
    unint64_t v5 = 0;
    do
    {
      int v9 = atomic_load((unsigned int *)(v7 + 8));
      if (v9 < 1) {
        unint64_t v5 = v7;
      }
      unint64_t v7 = atomic_load((unint64_t *)(v7 + 16));
      if (v7) {
        BOOL v10 = v7 == a2;
      }
      else {
        BOOL v10 = 1;
      }
    }
    while (!v10);
    if (v5)
    {
LABEL_19:
      uint64_t v11 = (void *)atomic_load((unint64_t *)(v5 + 32));
      return (unint64_t *)JavaUtilConcurrentLocksLockSupport_unparkWithJavaLangThread_(v11);
    }
  }
  return result;
}

unint64_t *sub_100237178(unint64_t *result)
{
  uint64_t v1 = result;
  do
  {
    while (1)
    {
      uint64_t v2 = atomic_load(v1 + 2);
      if (!v2) {
        break;
      }
      unint64_t v3 = atomic_load(v1 + 3);
      if (v2 == v3) {
        break;
      }
      unsigned int v4 = atomic_load((unsigned int *)(v2 + 8));
      if (v4)
      {
        if (v4 != -1) {
          break;
        }
        unint64_t result = (unint64_t *)sub_100238BC8(v2, 0xFFFFFFFFLL, 0);
        if (result)
        {
          unint64_t result = sub_1002370A8(v1, v2);
          break;
        }
      }
      else
      {
        unint64_t result = (unint64_t *)sub_100238BC8(v2, 0, 4294967293);
        if (result) {
          break;
        }
      }
    }
    unint64_t v5 = atomic_load(v1 + 2);
  }
  while (v2 != v5);
  return result;
}

unint64_t *sub_100237238(unint64_t *a1, uint64_t a2, int a3)
{
  unint64_t v6 = atomic_load(a1 + 2);
  unint64_t result = (unint64_t *)sub_100237044((uint64_t)a1, (atomic_ullong *)a2);
  if (a3 > 0 || !v6 || (unsigned int v8 = atomic_load((unsigned int *)(v6 + 8)), (v8 & 0x80000000) != 0))
  {
    if (!a2) {
      JreThrowNullPointerException();
    }
    unint64_t v9 = atomic_load((unint64_t *)(a2 + 24));
    if (!v9 || *(void *)(v9 + 40) == JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_SHARED_)
    {
      return sub_100237178(a1);
    }
  }
  return result;
}

unint64_t *sub_1002372E8(unint64_t *result, uint64_t a2)
{
  if (!a2) {
    return result;
  }
  unint64_t v3 = result;
  JreVolatileStrongAssign((atomic_ullong *)(a2 + 32), 0);
  uint64_t v4 = atomic_load((unint64_t *)(a2 + 16));
  if (!v4) {
    goto LABEL_5;
  }
  while (1)
  {
    int v5 = atomic_load((unsigned int *)(v4 + 8));
    if (v5 < 1) {
      break;
    }
    uint64_t v4 = atomic_load((unint64_t *)(v4 + 16));
    JreVolatileStrongAssign((atomic_ullong *)(a2 + 16), (void *)v4);
    if (!v4) {
      goto LABEL_5;
    }
  }
  uint64_t v6 = atomic_load((unint64_t *)(v4 + 24));
  atomic_store(1u, (unsigned int *)(a2 + 8));
  unint64_t v7 = atomic_load(v3 + 3);
  if (v7 != a2) {
    goto LABEL_12;
  }
  if (!qword_1005610D0) {
LABEL_5:
  }
    JreThrowNullPointerException();
  if ([(id)qword_1005610D0 compareAndSwapObjectWithId:v3 withLong:qword_1005610E8 withId:a2 withId:v4])
  {
    return (unint64_t *)sub_100238C5C(v4, v6, 0);
  }
LABEL_12:
  unint64_t v8 = atomic_load(v3 + 2);
  if (v4 != v8
    && ((uint64_t v9 = atomic_load((unsigned int *)(v4 + 8)), v9 == -1)
     || (int)v9 <= 0 && sub_100238BC8(v4, v9, 0xFFFFFFFFLL))
    && (unint64_t v10 = atomic_load((unint64_t *)(v4 + 32))) != 0)
  {
    uint64_t v11 = atomic_load((unint64_t *)(a2 + 24));
    if (v11)
    {
      int v12 = atomic_load((unsigned int *)(v11 + 8));
      if (v12 <= 0) {
        sub_100238C5C(v4, v6, v11);
      }
    }
  }
  else
  {
    sub_1002370A8(v3, a2);
  }
  return (unint64_t *)JreVolatileStrongAssign((atomic_ullong *)(a2 + 24), (void *)a2);
}

BOOL sub_100237494(uint64_t a1, atomic_ullong *a2)
{
  uint64_t v3 = a1;
  if (atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_12;
    }
  }
  else
  {
    objc_opt_class();
    if (!v3) {
      goto LABEL_12;
    }
  }
  uint64_t v4 = atomic_load((unsigned int *)(v3 + 8));
  if (v4 == -1) {
    return v4 == -1;
  }
  if ((int)v4 < 1)
  {
    sub_100238BC8(v3, v4, 0xFFFFFFFFLL);
    return v4 == -1;
  }
  if (!a2) {
LABEL_12:
  }
    JreThrowNullPointerException();
  do
  {
    uint64_t v3 = atomic_load((unint64_t *)(v3 + 16));
    JreVolatileStrongAssign(a2 + 2, (void *)v3);
    if (!v3) {
      goto LABEL_12;
    }
    int v5 = atomic_load((unsigned int *)(v3 + 8));
  }
  while (v5 > 0);
  JreVolatileStrongAssign((atomic_ullong *)(v3 + 24), a2);
  return v4 == -1;
}

uint64_t sub_100237590(unint64_t *a1, atomic_ullong *a2, uint64_t a3)
{
  if (!a2) {
    goto LABEL_9;
  }
  int v6 = 0;
  while (1)
  {
    unint64_t v7 = sub_100239018((uint64_t)a2);
    unint64_t v8 = atomic_load(a1 + 2);
    if (v7 == v8)
    {
      if ([a1 tryAcquireWithInt:a3]) {
        break;
      }
    }
    if (sub_100237494(v7, a2))
    {
      JavaUtilConcurrentLocksLockSupport_parkWithId_((uint64_t)a1);
      v6 |= JavaLangThread_interrupted();
    }
  }
  sub_100237044((uint64_t)a1, a2);
  if (!v7) {
LABEL_9:
  }
    JreThrowNullPointerException();
  JreVolatileStrongAssign((atomic_ullong *)(v7 + 24), 0);
  return v6 & 1;
}

void sub_10023764C()
{
}

void sub_100237670(_Unwind_Exception *a1)
{
}

id sub_10023768C(unint64_t *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = sub_100236F90((uint64_t)a1, (void *)JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_EXCLUSIVE_);
  if (!v4) {
    goto LABEL_11;
  }
  while (1)
  {
    unint64_t v5 = sub_100239018((uint64_t)v4);
    unint64_t v6 = atomic_load(a1 + 2);
    if (v5 == v6)
    {
      if ([a1 tryAcquireWithInt:a2]) {
        break;
      }
    }
    if (sub_100237494(v5, (atomic_ullong *)v4))
    {
      JavaUtilConcurrentLocksLockSupport_parkWithId_((uint64_t)a1);
      if (JavaLangThread_interrupted())
      {
        unint64_t v7 = new_JavaLangInterruptedException_init();
        objc_exception_throw(v7);
      }
    }
  }
  sub_100237044((uint64_t)a1, (atomic_ullong *)v4);
  if (!v5) {
LABEL_11:
  }
    JreThrowNullPointerException();
  return JreVolatileStrongAssign((atomic_ullong *)(v5 + 24), 0);
}

void sub_100237780(void *a1)
{
  objc_begin_catch(a1);
  sub_1002372E8(v1, v2);
  objc_exception_rethrow();
}

void sub_10023779C(_Unwind_Exception *a1)
{
}

uint64_t sub_1002377BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = JavaLangSystem_nanoTime();
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v7 = sub_100236F90((uint64_t)a1, (void *)JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_EXCLUSIVE_);
  if (!v7) {
    goto LABEL_17;
  }
  while (1)
  {
    unint64_t v8 = sub_100239018((uint64_t)v7);
    unint64_t v9 = atomic_load(a1 + 2);
    if (v8 == v9)
    {
      if ([a1 tryAcquireWithInt:a2]) {
        break;
      }
    }
    if (a3 < 1)
    {
      sub_1002372E8(a1, (uint64_t)v7);
      return 0;
    }
    BOOL v10 = sub_100237494(v8, (atomic_ullong *)v7);
    if ((unint64_t)a3 > 0x3E8 && v10) {
      JavaUtilConcurrentLocksLockSupport_parkNanosWithId_withLong_(a1, a3);
    }
    uint64_t v12 = JavaLangSystem_nanoTime();
    a3 = v6 + a3 - v12;
    uint64_t v6 = v12;
    if (JavaLangThread_interrupted())
    {
      unint64_t v13 = new_JavaLangInterruptedException_init();
      objc_exception_throw(v13);
    }
  }
  sub_100237044((uint64_t)a1, (atomic_ullong *)v7);
  if (!v8) {
LABEL_17:
  }
    JreThrowNullPointerException();
  JreVolatileStrongAssign((atomic_ullong *)(v8 + 24), 0);
  return 1;
}

void sub_100237918(_Unwind_Exception *a1)
{
}

void sub_100237938(void *a1)
{
}

id sub_100237958(unint64_t *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = sub_100236F90((uint64_t)a1, (void *)JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_SHARED_);
  if (!v4) {
    JreThrowNullPointerException();
  }
  int v5 = 0;
  while (1)
  {
    unint64_t v6 = sub_100239018((uint64_t)v4);
    unint64_t v7 = atomic_load(a1 + 2);
    if (v6 == v7)
    {
      int v8 = [a1 tryAcquireSharedWithInt:a2];
      if ((v8 & 0x80000000) == 0) {
        break;
      }
    }
    if (sub_100237494(v6, (atomic_ullong *)v4))
    {
      JavaUtilConcurrentLocksLockSupport_parkWithId_((uint64_t)a1);
      v5 |= JavaLangThread_interrupted();
    }
  }
  sub_100237238(a1, (uint64_t)v4, v8);
  if (!v6) {
    JreThrowNullPointerException();
  }
  id result = JreVolatileStrongAssign((atomic_ullong *)(v6 + 24), 0);
  if (v5) {
    return JavaUtilConcurrentLocksAbstractQueuedSynchronizer_selfInterrupt();
  }
  return result;
}

void sub_100237A58(void *a1)
{
  objc_begin_catch(a1);
  sub_1002372E8(v1, v2);
  objc_exception_rethrow();
}

void sub_100237A80(_Unwind_Exception *a1)
{
}

id sub_100237A9C(unint64_t *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = sub_100236F90((uint64_t)a1, (void *)JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_SHARED_);
  if (!v4) {
    JreThrowNullPointerException();
  }
  while (1)
  {
    unint64_t v5 = sub_100239018((uint64_t)v4);
    unint64_t v6 = atomic_load(a1 + 2);
    if (v5 == v6)
    {
      int v7 = [a1 tryAcquireSharedWithInt:a2];
      if ((v7 & 0x80000000) == 0) {
        break;
      }
    }
    if (sub_100237494(v5, (atomic_ullong *)v4))
    {
      JavaUtilConcurrentLocksLockSupport_parkWithId_((uint64_t)a1);
      if (JavaLangThread_interrupted())
      {
        int v8 = new_JavaLangInterruptedException_init();
        objc_exception_throw(v8);
      }
    }
  }
  sub_100237238(a1, (uint64_t)v4, v7);
  if (!v5) {
    JreThrowNullPointerException();
  }
  return JreVolatileStrongAssign((atomic_ullong *)(v5 + 24), 0);
}

void sub_100237B9C(void *a1)
{
  objc_begin_catch(a1);
  sub_1002372E8(v1, v2);
  objc_exception_rethrow();
}

void sub_100237BC0(_Unwind_Exception *a1)
{
}

uint64_t sub_100237BE0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = JavaLangSystem_nanoTime();
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v7 = sub_100236F90((uint64_t)a1, (void *)JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_SHARED_);
  if (!v7) {
    JreThrowNullPointerException();
  }
  while (1)
  {
    unint64_t v8 = sub_100239018((uint64_t)v7);
    unint64_t v9 = atomic_load(a1 + 2);
    if (v8 == v9)
    {
      int v10 = [a1 tryAcquireSharedWithInt:a2];
      if ((v10 & 0x80000000) == 0) {
        break;
      }
    }
    if (a3 < 1)
    {
      sub_1002372E8(a1, (uint64_t)v7);
      return 0;
    }
    BOOL v11 = sub_100237494(v8, (atomic_ullong *)v7);
    if ((unint64_t)a3 > 0x3E8 && v11) {
      JavaUtilConcurrentLocksLockSupport_parkNanosWithId_withLong_(a1, a3);
    }
    uint64_t v13 = JavaLangSystem_nanoTime();
    a3 = v6 + a3 - v13;
    uint64_t v6 = v13;
    if (JavaLangThread_interrupted())
    {
      id v14 = new_JavaLangInterruptedException_init();
      objc_exception_throw(v14);
    }
  }
  sub_100237238(a1, (uint64_t)v7, v10);
  if (!v8) {
    JreThrowNullPointerException();
  }
  JreVolatileStrongAssign((atomic_ullong *)(v8 + 24), 0);
  return 1;
}

void sub_100237D48(_Unwind_Exception *a1)
{
}

void sub_100237D68(void *a1)
{
}

id sub_100237F84(unint64_t *a1, uint64_t a2)
{
  id v3 = [a1 tryReleaseWithInt:a2];
  if (v3)
  {
    uint64_t v4 = atomic_load(a1 + 2);
    if (v4)
    {
      if (atomic_load((unsigned int *)(v4 + 8))) {
        sub_1002370A8(a1, v4);
      }
    }
  }
  return v3;
}

BOOL sub_100238648(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  unsigned int v2 = atomic_load((unsigned int *)(a2 + 8));
  if (v2 == -2) {
    return 0;
  }
  if (!atomic_load((unint64_t *)(a2 + 16))) {
    return 0;
  }
  if (atomic_load((unint64_t *)(a2 + 24))) {
    return 1;
  }
  for (uint64_t i = (unint64_t *)(a1 + 24); ; uint64_t i = (unint64_t *)(v7 + 16))
  {
    unint64_t v7 = atomic_load(i);
    BOOL result = v7 == a2;
    if (!v7 || v7 == a2) {
      break;
    }
  }
  return result;
}

id sub_1002386FC(uint64_t a1, uint64_t a2)
{
  id v4 = sub_100238BC8(a2, 4294967294, 0);
  if (v4)
  {
    unint64_t v5 = sub_100236E88(a1, (atomic_ullong *)a2);
    if (!v5) {
      goto LABEL_8;
    }
    uint64_t v6 = atomic_load((unsigned int *)v5 + 2);
    if ((int)v6 > 0 || (sub_100238BC8((uint64_t)v5, v6, 0xFFFFFFFFLL) & 1) == 0)
    {
      if (a2)
      {
        unint64_t v7 = (void *)atomic_load((unint64_t *)(a2 + 32));
        JavaUtilConcurrentLocksLockSupport_unparkWithJavaLangThread_(v7);
        return v4;
      }
LABEL_8:
      JreThrowNullPointerException();
    }
  }
  return v4;
}

id sub_10023878C(uint64_t a1, atomic_ullong *a2)
{
  id v4 = sub_100238BC8((uint64_t)a2, 4294967294, 0);
  if (v4)
  {
    sub_100236E88(a1, a2);
  }
  else
  {
    while (!sub_100238648(a1, (uint64_t)a2))
      JavaLangThread_yield();
  }
  return v4;
}

uint64_t sub_100238810(uint64_t a1)
{
  uint64_t v1 = atomic_load((unsigned int *)(a1 + 32));
  if ((sub_100237F84((unint64_t *)a1, v1) & 1) == 0)
  {
    id v3 = new_JavaLangIllegalMonitorStateException_init();
    objc_exception_throw(v3);
  }
  return v1;
}

void sub_10023885C()
{
}

void sub_100238884(_Unwind_Exception *a1)
{
}

BOOL sub_1002388A0(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v3 = new_JavaLangNullPointerException_init();
    objc_exception_throw(v3);
  }
  return *(void *)(a2 + 8) == a1;
}

id sub_100238BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = (void *)qword_1005610D0;
  if (!qword_1005610D0) {
    JreThrowNullPointerException();
  }
  uint64_t v7 = qword_1005610F0;
  return [v6 compareAndSwapIntWithId:a1 withLong:v7 withInt:a2 withInt:a3];
}

id sub_100238C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = (void *)qword_1005610D0;
  if (!qword_1005610D0) {
    JreThrowNullPointerException();
  }
  uint64_t v7 = qword_1005610F8;
  return [v6 compareAndSwapObjectWithId:a1 withLong:v7 withId:a2 withId:a3];
}

void sub_100238ED8()
{
}

void sub_100238F00()
{
}

id JavaUtilConcurrentLocksAbstractQueuedSynchronizer_selfInterrupt()
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaLangThread_currentThread();
  if (!v0) {
    JreThrowNullPointerException();
  }
  return [(JavaLangThread *)v0 interrupt];
}

uint64_t JavaUtilConcurrentLocksAbstractQueuedSynchronizer_class_()
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561108 != -1) {
    dispatch_once(&qword_100561108, &stru_1004593E0);
  }
  return qword_100561100;
}

void sub_100238FD0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561100 = IOSClass_fromClass(v1);
}

unint64_t sub_100239018(uint64_t a1)
{
  unint64_t result = atomic_load((unint64_t *)(a1 + 16));
  if (!result)
  {
    unsigned int v2 = new_JavaLangNullPointerException_init();
    objc_exception_throw(v2);
  }
  return result;
}

JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node *new_JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_initWithJavaLangThread_withJavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_(void *a1, void *a2)
{
  id v4 = [JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node alloc];
  JreStrongAssign((id *)&v4->nextWaiter_, a2);
  JreVolatileStrongAssign((atomic_ullong *)&v4->thread_, a1);
  return v4;
}

uint64_t JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node_class_()
{
  if ((atomic_load_explicit(JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561118 != -1) {
    dispatch_once(&qword_100561118, &stru_1004597C8);
  }
  return qword_100561110;
}

void sub_1002392B4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561110 = IOSClass_fromClass(v1);
}

JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node *sub_100239314(uint64_t a1)
{
  unsigned int v2 = (id *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    unsigned int v4 = atomic_load((unsigned int *)(v3 + 8));
    if (v4 != -2)
    {
      sub_1002394E0((char *)a1);
      uint64_t v3 = *(void *)(a1 + 24);
    }
  }
  unint64_t v5 = JavaLangThread_currentThread();
  uint64_t v6 = [JavaUtilConcurrentLocksAbstractQueuedSynchronizer_Node alloc];
  atomic_store(0xFFFFFFFE, (unsigned int *)&v6->waitStatus_);
  JreVolatileStrongAssign((atomic_ullong *)&v6->thread_, v5);
  uint64_t v7 = v6;
  if (v3) {
    unint64_t v8 = (id *)(v3 + 40);
  }
  else {
    unint64_t v8 = (id *)(a1 + 16);
  }
  JreStrongAssign(v8, v7);
  JreStrongAssign(v2, v7);
  return v7;
}

id sub_1002393D8(uint64_t a1, void **a2)
{
  unsigned int v4 = (id *)(a1 + 16);
  unint64_t v5 = (id *)(a1 + 24);
  do
  {
    if (!a2) {
      JreThrowNullPointerException();
    }
    if (!JreStrongAssign(v4, a2[5])) {
      JreStrongAssign(v5, 0);
    }
    JreStrongAssign(a2 + 5, 0);
    id result = sub_1002386FC(*(void *)(a1 + 8), (uint64_t)a2);
    if (result) {
      break;
    }
    a2 = (void **)*v4;
  }
  while (*v4);
  return result;
}

id sub_100239468(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (id *)(a1 + 24);
  id v5 = JreStrongAssign((id *)(a1 + 16), 0);
  JreStrongAssign(v4, v5);
  do
  {
    if (!a2) {
      JreThrowNullPointerException();
    }
    uint64_t v6 = *(void *)(a2 + 40);
    JreStrongAssign((id *)(a2 + 40), 0);
    id result = sub_1002386FC(*(void *)(a1 + 8), a2);
    a2 = v6;
  }
  while (v6);
  return result;
}

char *sub_1002394E0(char *result)
{
  unsigned int v2 = (id *)(result + 16);
  uint64_t v1 = (void *)*((void *)result + 2);
  if (!v1) {
    return result;
  }
  uint64_t v3 = 0;
  unsigned int v4 = (id *)(result + 24);
  while (1)
  {
    id v5 = (id *)v1;
    id result = (char *)(v1 + 5);
    uint64_t v1 = (void *)v1[5];
    unsigned int v6 = atomic_load((unsigned int *)result - 8);
    if (v6 != -2) {
      break;
    }
LABEL_9:
    uint64_t v3 = v5;
    if (!v1) {
      return result;
    }
  }
  JreStrongAssign((id *)result, 0);
  if (v3) {
    uint64_t v7 = v3 + 5;
  }
  else {
    uint64_t v7 = v2;
  }
  id result = (char *)JreStrongAssign(v7, v1);
  if (v1)
  {
    id v5 = v3;
    goto LABEL_9;
  }
  return (char *)JreStrongAssign(v4, v3);
}

id sub_100239740(id result)
{
  if (result == 1)
  {
    return JavaUtilConcurrentLocksAbstractQueuedSynchronizer_selfInterrupt();
  }
  else if (result == -1)
  {
    unsigned int v2 = new_JavaLangInterruptedException_init();
    objc_exception_throw(v2);
  }
  return result;
}

JavaUtilConcurrentLocksAbstractQueuedSynchronizer_ConditionObject *new_JavaUtilConcurrentLocksAbstractQueuedSynchronizer_ConditionObject_initWithJavaUtilConcurrentLocksAbstractQueuedSynchronizer_(void *a1)
{
  unsigned int v2 = [JavaUtilConcurrentLocksAbstractQueuedSynchronizer_ConditionObject alloc];
  JreStrongAssign((id *)&v2->this$0_, a1);
  return v2;
}

JavaUtilIllegalFormatWidthException *new_JavaUtilIllegalFormatWidthException_initWithInt_(unsigned int a1)
{
  unsigned int v2 = [JavaUtilIllegalFormatWidthException alloc];
  JavaUtilIllegalFormatException_init(v2, v3);
  *(&v2->super.super.super.super.super.rawFrameCount + 1) = a1;
  return v2;
}

OrgXmlSaxInputSource *new_OrgXmlSaxInputSource_initWithNSString_(uint64_t a1)
{
  unsigned int v2 = [OrgXmlSaxInputSource alloc];
  [(OrgXmlSaxInputSource *)v2 setSystemIdWithNSString:a1];
  return v2;
}

OrgXmlSaxInputSource *new_OrgXmlSaxInputSource_initWithJavaIoInputStream_(uint64_t a1)
{
  unsigned int v2 = [OrgXmlSaxInputSource alloc];
  [(OrgXmlSaxInputSource *)v2 setByteStreamWithJavaIoInputStream:a1];
  return v2;
}

JavaNetBindException *new_JavaNetBindException_initWithNSString_(uint64_t a1)
{
  unsigned int v2 = [JavaNetBindException alloc];
  JavaNetSocketException_initWithNSString_(v2, a1);
  return v2;
}

JavaNetBindException *new_JavaNetBindException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = [JavaNetBindException alloc];
  JavaNetSocketException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

id JavaNioIntArrayBuffer_initWithIntArray_(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaNioIntBuffer_initWithInt_withLong_(a1, a2[2], 0, a4, a5, a6, a7, a8);
  id result = JreStrongAssign((id *)(a1 + 40), a2);
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 52) = 0;
  return result;
}

JavaNioIntArrayBuffer *sub_10023B028(uint64_t a1, int a2, BOOL a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v5 = sub_10023B250((uint64_t)[(id)a1 capacity], *(void **)(a1 + 40), *(_DWORD *)(a1 + 48), a3);
  v5->super.super.limit_ = *(_DWORD *)(a1 + 12);
  v5->super.super.position_ = [(id)a1 position];
  v5->super.super.mark_ = a2;
  return v5;
}

JavaNioIntArrayBuffer *sub_10023B250(uint64_t a1, void *a2, int a3, BOOL a4)
{
  unint64_t v8 = [JavaNioIntArrayBuffer alloc];
  JavaNioIntBuffer_initWithInt_withLong_((uint64_t)v8, a1, 0, v9, v10, v11, v12, v13);
  JreStrongAssign((id *)&v8->backingArray_, a2);
  v8->arrayOffset_ = a3;
  v8->isReadOnly_ = a4;
  return v8;
}

JavaNioIntArrayBuffer *new_JavaNioIntArrayBuffer_initWithIntArray_(unsigned int *a1)
{
  unsigned int v2 = [JavaNioIntArrayBuffer alloc];
  JavaNioIntArrayBuffer_initWithIntArray_((uint64_t)v2, a1, v3, v4, v5, v6, v7, v8);
  return v2;
}

ComGoogleJ2objcNetIosHttpHandler *new_ComGoogleJ2objcNetIosHttpHandler_init()
{
  uint64_t v0 = [ComGoogleJ2objcNetIosHttpHandler alloc];
  JavaNetURLStreamHandler_init(v0, v1);
  return v0;
}

uint64_t JavaUtilEnumeration_class_()
{
  if (qword_100561128 != -1) {
    dispatch_once(&qword_100561128, &stru_10045AD68);
  }
  return qword_100561120;
}

void sub_10023B948(id a1)
{
  qword_100561120 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilEnumeration);
}

id sub_10023BB7C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = TypeToClass((uint64_t)[*(id *)(a2 + 32) type]);
  if (v8) {
    uint64_t v9 = (void *)v8;
  }
  else {
    uint64_t v9 = a4;
  }
  if (([*(id *)(a2 + 32) modifiers] & 8) == 0)
  {
    if (!a3) {
      JreThrowNullPointerException();
    }
    if (([*(id *)(a2 + 24) isInstance:a3] & 1) == 0) {
LABEL_15:
    }
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:@"field type mismatch"]);
    id v10 = (id)(a3 + ivar_getOffset(*(Ivar *)(a2 + 16)));
    goto LABEL_10;
  }
  id v11 = [*(id *)(a2 + 32) staticRef];
  if (v11)
  {
    id v10 = v11;
LABEL_10:
    objc_msgSend(v9, "__readRawValue:fromAddress:", a1, v10);
    goto LABEL_11;
  }
  *a1 = *(void *)[*(id *)(a2 + 32) getConstantValue];
LABEL_11:
  id result = objc_msgSend(v9, "__convertRawValue:toType:", a1, a4);
  if ((result & 1) == 0) {
    goto LABEL_15;
  }
  return result;
}

id sub_10023BFE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = TypeToClass((uint64_t)[*(id *)(a2 + 32) type]);
  if (v8) {
    uint64_t v9 = (void *)v8;
  }
  else {
    uint64_t v9 = a4;
  }
  if ((objc_msgSend(a4, "__convertRawValue:toType:", a1, v9) & 1) == 0)
  {
    id v11 = [JavaLangIllegalArgumentException alloc];
    CFStringRef v12 = @"field type mismatch";
    goto LABEL_20;
  }
  if (([*(id *)(a2 + 32) modifiers] & 8) == 0)
  {
    if (!a3) {
      JreThrowNullPointerException();
    }
    if (([*(id *)(a2 + 32) modifiers] & 0x10) == 0 || *(unsigned char *)(a2 + 8))
    {
      id v10 = (id)(a3 + ivar_getOffset(*(Ivar *)(a2 + 16)));
      goto LABEL_13;
    }
    id v11 = [JavaLangIllegalAccessException alloc];
    CFStringRef v12 = @"Cannot set final field";
LABEL_20:
    objc_exception_throw([(JavaLangIllegalArgumentException *)v11 initWithNSString:v12]);
  }
  if (([*(id *)(a2 + 32) modifiers] & 0x10) != 0 && !*(unsigned char *)(a2 + 8))
  {
    id v11 = [JavaLangIllegalAccessException alloc];
    CFStringRef v12 = @"Cannot set static final field";
    goto LABEL_20;
  }
  id v10 = [*(id *)(a2 + 32) staticRef];
LABEL_13:
  return objc_msgSend(v9, "__writeRawValue:toAddress:", a1, v10);
}

uint64_t JavaLangReflectField_class_()
{
  if (qword_100561138 != -1) {
    dispatch_once(&qword_100561138, &stru_10045B368);
  }
  return qword_100561130;
}

void sub_10023CAB8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561130 = IOSClass_fromClass(v1);
}

uint64_t JavaUtilLoggingLogger_initWithNSString_withNSString_(uint64_t a1, void *a2, __CFString *a3)
{
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaUtilLoggingLevel_INFO_) {
    JreThrowNullPointerException();
  }
  atomic_store([(id)JavaUtilLoggingLevel_INFO_ intValue], (unsigned int *)(a1 + 24));
  uint64_t v6 = new_JavaUtilConcurrentCopyOnWriteArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 72), v6);
  *(_WORD *)(a1 + 80) = 257;
  uint64_t v7 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 32), v7);
  JreVolatileStrongAssign((atomic_ullong *)(a1 + 40), a2);
  return sub_10023CD7C(a1, a3);
}

JavaUtilPropertyResourceBundle *JavaUtilLoggingLogger_loadResourceBundleWithNSString_(__CFString *a1)
{
  if ((atomic_load_explicit(JavaUtilLoggingLogger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = JavaLangThread_currentThread();
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t SystemClassLoader = [(JavaLangThread *)v2 getContextClassLoader];
  if (!SystemClassLoader)
  {
    uint64_t SystemClassLoader = (__CFString *)JavaLangClassLoader_getSystemClassLoader();
    if (!SystemClassLoader)
    {
      CFStringRef v14 = JreStrcat("$$C", v4, v5, v6, v7, v8, v9, v10, @"Failed to load the specified resource bundle \"");
      uint64_t v15 = new_JavaUtilMissingResourceException_initWithNSString_withNSString_withNSString_((uint64_t)v14, a1, 0);
      objc_exception_throw(v15);
    }
  }
  id v11 = SystemClassLoader;
  uint64_t Default = (JavaUtilLocale *)JavaUtilLocale_getDefault();
  return JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_(a1, Default, v11);
}

JavaUtilLoggingLogger *JavaUtilLoggingLogger_getAnonymousLoggerWithNSString_(__CFString *a1)
{
  if ((atomic_load_explicit(JavaUtilLoggingLogger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = [JavaUtilLoggingLogger alloc];
  JavaUtilLoggingLogger_initWithNSString_withNSString_((uint64_t)v2, 0, a1);
  uint64_t v3 = v2;
  v3->isNamed_ = 0;
  LogManager = (void *)JavaUtilLoggingLogManager_getLogManager();
  if (!LogManager) {
    JreThrowNullPointerException();
  }
  objc_msgSend(LogManager, "setParentWithJavaUtilLoggingLogger:withJavaUtilLoggingLogger:", v3, objc_msgSend(LogManager, "getLoggerWithNSString:", &stru_10048C1F8));
  return v3;
}

uint64_t sub_10023CD7C(uint64_t a1, __CFString *a2)
{
  objc_sync_enter((id)a1);
  uint64_t v4 = (void *)atomic_load((unint64_t *)(a1 + 56));
  if (v4)
  {
    if (([v4 isEqual:a2] & 1) == 0)
    {
      CFStringRef v12 = JreStrcat("$$$$C", v5, v6, v7, v8, v9, v10, v11, @"Resource bundle name '");
      uint64_t v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
      objc_exception_throw(v13);
    }
  }
  else if (a2)
  {
    ResourceBundleWithNSString = JavaUtilLoggingLogger_loadResourceBundleWithNSString_(a2);
    JreVolatileStrongAssign((atomic_ullong *)(a1 + 64), ResourceBundleWithNSString);
    JreVolatileStrongAssign((atomic_ullong *)(a1 + 56), a2);
  }
  return objc_sync_exit((id)a1);
}

void sub_10023CE44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaUtilLoggingLogger_getLoggerWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaUtilLoggingLogger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  LogManager = (void *)JavaUtilLoggingLogManager_getLogManager();
  if (!LogManager) {
    JreThrowNullPointerException();
  }
  return [LogManager getOrCreateWithNSString:a1 withNSString:0];
}

id JavaUtilLoggingLogger_getLoggerWithNSString_withNSString_(uint64_t a1, __CFString *a2)
{
  if ((atomic_load_explicit(JavaUtilLoggingLogger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  LogManager = (void *)JavaUtilLoggingLogManager_getLogManager();
  if (!LogManager || (id v5 = [LogManager getOrCreateWithNSString:a1 withNSString:a2]) == 0) {
    JreThrowNullPointerException();
  }
  id v6 = v5;
  sub_10023CD7C((uint64_t)v5, a2);
  return v6;
}

void sub_10023D200()
{
}

BOOL sub_10023D4B4(uint64_t a1, void *a2)
{
  int v3 = atomic_load((unsigned int *)(a1 + 24));
  if ((atomic_load_explicit(JavaUtilLoggingLevel__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaUtilLoggingLevel_OFF_) {
    goto LABEL_8;
  }
  if (v3 == [(id)JavaUtilLoggingLevel_OFF_ intValue]) {
    return 0;
  }
  if (!a2) {
LABEL_8:
  }
    JreThrowNullPointerException();
  return (int)[a2 intValue] >= v3;
}

id sub_10023D548(id result, void *a2)
{
  if (result)
  {
    while (1)
    {
      unint64_t v3 = atomic_load((unint64_t *)result + 7);
      if (v3) {
        break;
      }
      id result = objc_loadWeak((id *)result + 1);
      if (!result) {
        return result;
      }
    }
    if (!a2) {
      JreThrowNullPointerException();
    }
    unint64_t v4 = atomic_load((unint64_t *)result + 8);
    [a2 setResourceBundleWithJavaUtilResourceBundle:v4];
    return [a2 setResourceBundleNameWithNSString:v3];
  }
  return result;
}

JavaUtilLoggingLogger *new_JavaUtilLoggingLogger_initWithNSString_withNSString_(void *a1, __CFString *a2)
{
  unint64_t v4 = [JavaUtilLoggingLogger alloc];
  JavaUtilLoggingLogger_initWithNSString_withNSString_((uint64_t)v4, a1, a2);
  return v4;
}

JavaUtilLoggingLogger *JavaUtilLoggingLogger_getAnonymousLogger()
{
  if ((atomic_load_explicit(JavaUtilLoggingLogger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaUtilLoggingLogger_getAnonymousLoggerWithNSString_(0);
}

uint64_t JavaUtilLoggingLogger_class_()
{
  if ((atomic_load_explicit(JavaUtilLoggingLogger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561150 != -1) {
    dispatch_once(&qword_100561150, &stru_10045C0F8);
  }
  return qword_100561148;
}

void sub_10023F000(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561148 = IOSClass_fromClass(v1);
}

CFStringRef RealToString_convertDouble(uint64_t a1, double a2)
{
  uint64_t v5 = (*(void *)&a2 >> 52) & 0x7FFLL;
  uint64_t v6 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (v5)
  {
    if (v5 == 2047)
    {
      CFStringRef v7 = @"-Infinity";
      if (a2 >= 0.0) {
        CFStringRef v7 = @"Infinity";
      }
      if (v6) {
        CFStringRef v8 = @"NaN";
      }
      else {
        CFStringRef v8 = v7;
      }
      goto LABEL_21;
    }
    int v10 = v5 - 1075;
    uint64_t v15 = 0;
    if ((v5 - 1017) < 0x40 || (v11 = 0, int v9 = 52, v6) && v5 == 1016)
    {
      sub_10023F25C(v6 | 0x10000000000000, v10, 0, v6 == 0, 52, (_DWORD *)&v15 + 1, (uint64_t)v16, (int *)&v15);
      goto LABEL_25;
    }
    v6 |= 0x10000000000000uLL;
LABEL_24:
    sub_10023F3E8(v6, v10, v11, v9, (int *)&v15 + 1, (uint64_t)v16, (unsigned int *)&v15);
LABEL_25:
    v14[0] = 0;
    v14[1] = 0;
    CFStringRef v12 = (void **)a1;
    if (!a1)
    {
      CFStringRef v12 = (void **)v14;
      JreStringBuilder_initWithCapacity((uint64_t)v14, 26);
    }
    if (a2 < 10000000.0 && a2 > -10000000.0 && (a2 <= -0.001 || a2 >= 0.001))
    {
      sub_10023FBC8(v12, a2 >= 0.0, SHIDWORD(v15), v16, v15);
      if (a1) {
        return 0;
      }
    }
    else
    {
      sub_10023FAEC(v12, a2 >= 0.0, HIDWORD(v15), v16, v15);
      if (a1) {
        return 0;
      }
    }
    CFStringRef v8 = JreStringBuilder_toString((uint64_t)v12);
    free(*v12);
    return v8;
  }
  if (!v6)
  {
    if (a2 < 0.0) {
      CFStringRef v8 = @"-0.0";
    }
    else {
      CFStringRef v8 = @"0.0";
    }
    goto LABEL_21;
  }
  if (a2 < 0.0) {
    CFStringRef v8 = @"-4.9E-324";
  }
  else {
    CFStringRef v8 = @"4.9E-324";
  }
  if (v6 != 1)
  {
    int v9 = __clz(v6) ^ 0x3F;
    uint64_t v15 = 0;
    int v10 = -1074;
    char v11 = 1;
    goto LABEL_24;
  }
LABEL_21:
  if (a1)
  {
    JreStringBuilder_appendString(a1, v8);
    return 0;
  }
  return v8;
}

uint64_t sub_10023F25C(uint64_t result, int a2, int a3, int a4, int a5, _DWORD *a6, uint64_t a7, int *a8)
{
  if (a2 < 0)
  {
    if (!a4 || a3)
    {
      uint64_t v8 = 1;
      uint64_t v10 = 1 << (1 - a2);
      char v9 = 1;
    }
    else
    {
      char v9 = 2;
      uint64_t v8 = 1;
      uint64_t v10 = 1 << (2 - a2);
    }
  }
  else
  {
    uint64_t v8 = 1 << a2;
    char v9 = a2 + 2;
    uint64_t v10 = 4;
    if ((a4 & 1) == 0)
    {
      uint64_t v10 = 2;
      char v9 = a2 + 1;
    }
  }
  uint64_t v11 = result << v9;
  int v12 = vcvtpd_s64_f64((double)(a2 + a5 - 1) * 0.301029996 + -1.0e-10);
  if (v12 < 1)
  {
    if (v12 < 0)
    {
      uint64_t v13 = qword_1003208B0[-v12];
      v11 *= v13;
      v8 *= v13;
    }
  }
  else
  {
    v10 *= qword_1003208B0[v12];
  }
  BOOL v14 = v11 + v8 <= v10;
  uint64_t v15 = 10 * v8;
  if (v11 + v8 <= v10) {
    v11 *= 10;
  }
  else {
    uint64_t v15 = v8;
  }
  *a6 = v12 - v14;
  while (1)
  {
    int v16 = 0;
    for (uint64_t i = 3; i != -1; --i)
    {
      uint64_t v18 = v11 - (v10 << i);
      if (v18 >= 0) {
        v11 -= v10 << i;
      }
      v16 += (1 << i) & ~(v18 >> 63);
    }
    uint64_t v19 = v11 + v15;
    if (v11 < v15 || v19 > v10) {
      break;
    }
    v11 *= 10;
    v15 *= 10;
    uint64_t v21 = *a8;
    *a8 = v21 + 1;
    *(unsigned char *)(a7 + v21) = v16;
  }
  if (v19 > v10 || v11 >= v15)
  {
    if (v11 < v15 || v19 <= v10)
    {
      if (v10 <= 2 * v11) {
        LOBYTE(v16) = v16 + 1;
      }
    }
    else
    {
      LOBYTE(v16) = v16 + 1;
    }
  }
  uint64_t v23 = *a8;
  *a8 = v23 + 1;
  *(unsigned char *)(a7 + v23) = v16;
  return result;
}

uint64_t sub_10023F3E8(uint64_t a1, int a2, char a3, int a4, int *a5, uint64_t a6, unsigned int *a7)
{
  long long v75 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  uint64_t v85 = 0;
  memset(v73, 0, sizeof(v73));
  long long v74 = 0u;
  uint64_t v72 = 0;
  memset(v71, 0, sizeof(v71));
  uint64_t v69 = 0;
  memset(v68, 0, sizeof(v68));
  if (a2 < 0)
  {
    int v11 = a4 - 1;
    if ((a3 & 1) != 0 || 2 << v11 != a1)
    {
      *(void *)&long long v75 = 2 * a1;
      *(void *)&v73[0] = 1;
      simpleShiftLeftHighPrecision(v73, 22, 1 - a2);
      *(void *)&v68[0] = 1;
      *(void *)&v71[0] = 1;
    }
    else
    {
      *(void *)&long long v75 = 4 * a1;
      *(void *)&v73[0] = 1;
      simpleShiftLeftHighPrecision(v73, 22, 2 - a2);
      *(void *)&v71[0] = 2;
      *(void *)&v68[0] = 1;
    }
  }
  else
  {
    *(void *)&long long v75 = a1;
    *(void *)&v68[0] = 1;
    *(void *)&v71[0] = 1;
    simpleShiftLeftHighPrecision(v68, 21, a2);
    int v11 = a4 - 1;
    if (2 << (a4 - 1) == a1)
    {
      simpleShiftLeftHighPrecision(&v75, 21, a2 + 2);
      *(void *)&v73[0] = 4;
      int v12 = a2 + 1;
    }
    else
    {
      simpleShiftLeftHighPrecision(&v75, 21, a2 + 1);
      *(void *)&v73[0] = 2;
      int v12 = a2;
    }
    simpleShiftLeftHighPrecision(v71, 21, v12);
  }
  int v13 = vcvtpd_s64_f64((double)(v11 + a2) * 0.301029996 + -1.0e-10);
  if (v13 < 1)
  {
    timesTenToTheEHighPrecision((unsigned int *)&v75, 21, -v13);
    timesTenToTheEHighPrecision((unsigned int *)v71, 21, -v13);
    BOOL v14 = (unsigned int *)v68;
    uint64_t v15 = 21;
    int v16 = -v13;
  }
  else
  {
    BOOL v14 = (unsigned int *)v73;
    uint64_t v15 = 22;
    int v16 = v13;
  }
  timesTenToTheEHighPrecision(v14, v15, v16);
  v65[8] = v83;
  v65[9] = v84;
  uint64_t v66 = v85;
  uint64_t v67 = 0;
  v65[4] = v79;
  v65[5] = v80;
  v65[6] = v81;
  v65[7] = v82;
  v65[0] = v75;
  v65[1] = v76;
  signed int v17 = 22;
  uint64_t v18 = 20;
  v65[2] = v77;
  v65[3] = v78;
  while ((unint64_t)(v18 + 1) >= 2)
  {
    uint64_t v19 = *((void *)&v75 + v18);
    --v17;
    --v18;
    if (v19) {
      goto LABEL_18;
    }
  }
  signed int v17 = 1;
LABEL_18:
  int v20 = 22;
  uint64_t v21 = 20;
  while ((unint64_t)(v21 + 1) >= 2)
  {
    uint64_t v22 = *((void *)v71 + v21);
    --v20;
    --v21;
    if (v22) {
      goto LABEL_23;
    }
  }
  int v20 = 1;
LABEL_23:
  unsigned int v23 = 22;
  uint64_t v24 = 20;
  while ((unint64_t)(v24 + 1) >= 2)
  {
    uint64_t v25 = *((void *)v68 + v24);
    --v23;
    --v24;
    if (v25) {
      goto LABEL_28;
    }
  }
  unsigned int v23 = 1;
LABEL_28:
  int v26 = 23;
  uint64_t v27 = 21;
  while ((unint64_t)(v27 + 1) >= 2)
  {
    uint64_t v28 = *((void *)v73 + v27);
    --v26;
    --v27;
    if (v28) {
      goto LABEL_33;
    }
  }
  int v26 = 1;
LABEL_33:
  if (v17 <= v20) {
    int v29 = v20;
  }
  else {
    int v29 = v17;
  }
  unsigned int v30 = v29 + 1;
  addHighPrecision((unint64_t *)v65, v29 + 1, (unint64_t *)v71, v20);
  if ((compareHighPrecision((uint64_t)v65, v30, (uint64_t)v73, v26) & 0x80000000) != 0)
  {
    *a5 = v13 - 1;
    simpleAppendDecimalDigitHighPrecision((unsigned int *)&v75, v17 + 1, 0);
    simpleAppendDecimalDigitHighPrecision((unsigned int *)v71, v20 + 1, 0);
    simpleAppendDecimalDigitHighPrecision((unsigned int *)v68, v23 + 1, 0);
    uint64_t v31 = v17;
    while (v31 + 1 >= 2)
    {
      if (*((void *)&v75 + v31--))
      {
        signed int v17 = v31 + 2;
        goto LABEL_43;
      }
    }
    signed int v17 = 1;
LABEL_43:
    uint64_t v33 = v20;
    while (v33 + 1 >= 2)
    {
      if (*((void *)v71 + v33--))
      {
        int v20 = v33 + 2;
        goto LABEL_48;
      }
    }
    int v20 = 1;
LABEL_48:
    uint64_t v35 = v23;
    while (v35 + 1 >= 2)
    {
      if (*((void *)v68 + v35--))
      {
        unsigned int v23 = v35 + 2;
        goto LABEL_53;
      }
    }
    unsigned int v23 = 1;
  }
  else
  {
    *a5 = v13;
  }
LABEL_53:
  int v37 = v26 + 1;
  uint64_t v38 = v26;
  int v62 = v26;
  while (1)
  {
    int v39 = 0;
    for (int i = 3; i != -1; --i)
    {
      *((void *)v65 + v38) = 0;
      __memcpy_chk();
      simpleShiftLeftHighPrecision(v65, v37, i);
      if ((compareHighPrecision((uint64_t)&v75, v17, (uint64_t)v65, v37) & 0x80000000) == 0)
      {
        subtractHighPrecision((unint64_t *)&v75, v17, (unint64_t *)v65, v37);
        v39 += 1 << i;
      }
    }
    int v41 = compareHighPrecision((uint64_t)&v75, v17, (uint64_t)v68, v23);
    bzero((char *)v65 + 8 * v17, 8 * (22 - v17));
    __memcpy_chk();
    int v42 = v17 <= v20 ? v20 : v17;
    unsigned int v43 = v42 + 1;
    addHighPrecision((unint64_t *)v65, v42 + 1, (unint64_t *)v71, v20);
    int v44 = compareHighPrecision((uint64_t)v65, v43, (uint64_t)v73, v26);
    int v45 = v44;
    int v46 = v17 + 1;
    if (v41 < 1 || (v44 & 0x80000000) == 0) {
      break;
    }
    simpleAppendDecimalDigitHighPrecision((unsigned int *)&v75, v17 + 1, 0);
    int v47 = v20 + 1;
    simpleAppendDecimalDigitHighPrecision((unsigned int *)v71, v20 + 1, 0);
    int v48 = v23 + 1;
    simpleAppendDecimalDigitHighPrecision((unsigned int *)v68, v23 + 1, 0);
    if (v46 >= 1) {
      int v49 = 1;
    }
    else {
      int v49 = v17 + 1;
    }
    uint64_t v50 = (void *)&v74 + v46 + 1;
    v17 += 2;
    int v26 = v62;
    while (--v17 >= 2)
    {
      if (*v50--) {
        goto LABEL_71;
      }
    }
    signed int v17 = v49;
LABEL_71:
    if (v47 >= 1) {
      int v52 = 1;
    }
    else {
      int v52 = v20 + 1;
    }
    unint64_t v53 = &v70 + v47;
    v20 += 2;
    while (--v20 >= 2)
    {
      if (*v53--) {
        goto LABEL_79;
      }
    }
    int v20 = v52;
LABEL_79:
    if (v48 >= 1) {
      int v55 = 1;
    }
    else {
      int v55 = v23 + 1;
    }
    unint64_t v56 = &v67 + v48;
    v23 += 2;
    while ((int)--v23 >= 2)
    {
      if (*v56--) {
        goto LABEL_87;
      }
    }
    unsigned int v23 = v55;
LABEL_87:
    uint64_t v58 = a7;
    uint64_t v59 = (int)*a7;
    *a7 = v59 + 1;
    *(unsigned char *)(a6 + v59) = v39;
    if ((int)*a7 >= 64) {
      objc_exception_throw([(JavaLangError *)[JavaLangAssertionError alloc] initWithNSString:+[NSString stringWithFormat:@"maximum digits length exceeded: %d", *v58]]);
    }
  }
  uint64_t result = (uint64_t)simpleShiftLeftHighPrecision(&v75, v17 + 1, 1);
  if (v41 > 0 || (v45 & 0x80000000) == 0)
  {
    if (v45 < 0 || v41 < 1)
    {
      uint64_t result = compareHighPrecision((uint64_t)&v75, v17 + 1, (uint64_t)v73, v62);
      LOBYTE(v39) = v39 + ((int)result >= 0);
    }
    else
    {
      LOBYTE(v39) = v39 + 1;
    }
  }
  uint64_t v61 = (int)*a7;
  *a7 = v61 + 1;
  *(unsigned char *)(a6 + v61) = v39;
  return result;
}

NSString *sub_10023FAEC(_DWORD *a1, char a2, unsigned int a3, char *a4, int a5)
{
  if ((a2 & 1) == 0) {
    JreStringBuilder_appendChar(a1, 45);
  }
  JreStringBuilder_appendChar(a1, *a4 + 48);
  JreStringBuilder_appendChar(a1, 46);
  if (a5 < 2) {
    goto LABEL_7;
  }
  char v9 = a4 + 1;
  uint64_t v10 = a5 - 1;
  do
  {
    __int16 v11 = *v9++;
    JreStringBuilder_appendChar(a1, v11 + 48);
    --v10;
  }
  while (v10);
  if (a3 + 1 - a5 == a3) {
LABEL_7:
  }
    JreStringBuilder_appendChar(a1, 48);
  JreStringBuilder_appendChar(a1, 69);
  return IntegralToString_convertInt((uint64_t)a1, a3);
}

_DWORD *sub_10023FBC8(_DWORD *result, char a2, int a3, char *a4, int a5)
{
  uint64_t v8 = result;
  if ((a2 & 1) == 0) {
    uint64_t result = JreStringBuilder_appendChar(result, 45);
  }
  if (a3 < 0)
  {
    JreStringBuilder_appendChar(v8, 48);
    uint64_t result = JreStringBuilder_appendChar(v8, 46);
    if (a3 != -1)
    {
      if (a3 <= -2) {
        int v9 = -2;
      }
      else {
        int v9 = a3;
      }
      int v10 = v9 - a3 + 1;
      do
      {
        uint64_t result = JreStringBuilder_appendChar(v8, 48);
        --v10;
      }
      while (v10);
    }
  }
  int v11 = *a4;
  int v12 = 1;
  do
  {
    unsigned int v13 = a3;
    if (v11 == -1)
    {
      if (a3 < -1) {
        goto LABEL_17;
      }
      __int16 v14 = 48;
    }
    else
    {
      __int16 v14 = v11 + 48;
    }
    uint64_t result = JreStringBuilder_appendChar(v8, v14);
    if (!a3) {
      uint64_t result = JreStringBuilder_appendChar(v8, 46);
    }
LABEL_17:
    if (v12 >= a5) {
      int v11 = -1;
    }
    else {
      int v11 = a4[v12++];
    }
    --a3;
  }
  while (v11 != -1 || v13 < 0x80000001);
  return result;
}

CFStringRef RealToString_convertFloat(uint64_t a1, float a2)
{
  unsigned int v5 = LODWORD(a2) & 0x7FFFFF;
  int v6 = (LODWORD(a2) >> 23);
  if (!(LODWORD(a2) >> 23))
  {
    if (a2 < 0.0) {
      CFStringRef v8 = @"-0.0";
    }
    else {
      CFStringRef v8 = @"0.0";
    }
    if (!v5) {
      goto LABEL_21;
    }
    if (v5 >= 8) {
      unsigned int v9 = LODWORD(a2) & 0x7FFFFF;
    }
    else {
      unsigned int v9 = 4 * v5;
    }
    if (v5 >= 8) {
      int v10 = -149;
    }
    else {
      int v10 = -151;
    }
    unsigned int v11 = __clz(v9 & 0x7FFFFF) ^ 0x1F;
    int v12 = 1;
    if ((v9 & 0x800000) != 0) {
      int v13 = 23;
    }
    else {
      int v13 = v11;
    }
LABEL_24:
    uint64_t v19 = 0;
    if (v5) {
      BOOL v14 = v10 == -59;
    }
    else {
      BOOL v14 = 0;
    }
    char v15 = !v14;
    if (v10 - 35) <= 0xFFFFFFA2 && (v15) {
      sub_10023F3E8(v9, v10, v12, v13, (int *)&v19 + 1, (uint64_t)v20, (unsigned int *)&v19);
    }
    else {
      sub_10023F25C(v9, v10, v12, v5 == 0, v13, (_DWORD *)&v19 + 1, (uint64_t)v20, (int *)&v19);
    }
    v18[0] = 0;
    v18[1] = 0;
    int v16 = (void **)a1;
    if (!a1)
    {
      int v16 = (void **)v18;
      JreStringBuilder_initWithCapacity((uint64_t)v18, 26);
    }
    if (a2 < 10000000.0 && a2 > -10000000.0 && (a2 <= -0.001 || a2 >= 0.001))
    {
      sub_10023FBC8(v16, a2 >= 0.0, SHIDWORD(v19), v20, v19);
      if (a1) {
        return 0;
      }
    }
    else
    {
      sub_10023FAEC(v16, a2 >= 0.0, HIDWORD(v19), v20, v19);
      if (a1) {
        return 0;
      }
    }
    CFStringRef v8 = JreStringBuilder_toString((uint64_t)v16);
    free(*v16);
    return v8;
  }
  if (v6 != 255)
  {
    int v12 = 0;
    unsigned int v9 = v5 | 0x800000;
    int v10 = v6 - 150;
    int v13 = 23;
    goto LABEL_24;
  }
  CFStringRef v7 = @"-Infinity";
  if (a2 >= 0.0) {
    CFStringRef v7 = @"Infinity";
  }
  if (v5) {
    CFStringRef v8 = @"NaN";
  }
  else {
    CFStringRef v8 = v7;
  }
LABEL_21:
  if (a1)
  {
    JreStringBuilder_appendString(a1, v8);
    return 0;
  }
  return v8;
}

JavaNetSocketTimeoutException *new_JavaNetSocketTimeoutException_init()
{
  uint64_t v0 = [JavaNetSocketTimeoutException alloc];
  JavaIoInterruptedIOException_init(v0, v1);
  return v0;
}

JavaNetSocketTimeoutException *new_JavaNetSocketTimeoutException_initWithNSString_(uint64_t a1)
{
  unsigned int v2 = [JavaNetSocketTimeoutException alloc];
  JavaIoInterruptedIOException_initWithNSString_(v2, a1);
  return v2;
}

JavaNetSocketTimeoutException *new_JavaNetSocketTimeoutException_initWithJavaLangThrowable_(uint64_t a1)
{
  unsigned int v2 = [JavaNetSocketTimeoutException alloc];
  JavaIoInterruptedIOException_initWithNSString_withJavaLangThrowable_(v2, 0, a1);
  return v2;
}

JavaNetSocketTimeoutException *new_JavaNetSocketTimeoutException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = [JavaNetSocketTimeoutException alloc];
  JavaIoInterruptedIOException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

uint64_t JavaLangReflectMethod_class_()
{
  if (qword_100561160 != -1) {
    dispatch_once(&qword_100561160, &stru_10045C6B0);
  }
  return qword_100561158;
}

void sub_100240C78(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561158 = IOSClass_fromClass(v1);
}

LibcoreIoStructTimeval *LibcoreIoStructTimeval_fromMillisWithLong_(uint64_t a1)
{
  uint64_t v1 = a1 / 1000;
  uint64_t v2 = 1000 * (a1 % 1000);
  unint64_t v3 = [LibcoreIoStructTimeval alloc];
  v3->tv_sec_ = v1;
  v3->tv_usec_ = v2;
  return v3;
}

JavaIoEOFException *new_JavaIoEOFException_init()
{
  uint64_t v0 = [JavaIoEOFException alloc];
  JavaIoIOException_init(v0, v1);
  return v0;
}

JavaIoEOFException *new_JavaIoEOFException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaIoEOFException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

id JavaUtilUnknownFormatConversionException_initWithNSString_(uint64_t a1, void *a2)
{
  JavaUtilIllegalFormatException_init(a1, a2);
  if (!a2)
  {
    unsigned int v5 = new_JavaLangNullPointerException_initWithNSString_(@"s == null");
    objc_exception_throw(v5);
  }
  return JreStrongAssign((id *)(a1 + 88), a2);
}

JavaUtilUnknownFormatConversionException *new_JavaUtilUnknownFormatConversionException_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaUtilUnknownFormatConversionException alloc];
  JavaUtilUnknownFormatConversionException_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

JavaSecurityAccessControlContext *new_JavaSecurityAccessControlContext_initWithJavaSecurityProtectionDomainArray_()
{
  return [JavaSecurityAccessControlContext alloc];
}

id JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  JavaLangException_initWithNSString_(a1, a3);
  if (!a2)
  {
    CFStringRef v16 = @"input == null";
LABEL_7:
    signed int v17 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v16);
    goto LABEL_9;
  }
  if (!a3)
  {
    CFStringRef v16 = @"reason == null";
    goto LABEL_7;
  }
  if (a4 <= -2)
  {
    CFStringRef v18 = JreStrcat("$I", v8, v9, v10, v11, v12, v13, v14, @"Bad index: ");
    signed int v17 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v18);
LABEL_9:
    objc_exception_throw(v17);
  }
  id result = JreStrongAssign((id *)(a1 + 88), a2);
  *(_DWORD *)(a1 + 96) = a4;
  return result;
}

id JavaNetURISyntaxException_initWithNSString_withNSString_(uint64_t a1, void *a2, uint64_t a3)
{
  JavaLangException_initWithNSString_(a1, a3);
  if (!a2)
  {
    CFStringRef v7 = @"input == null";
    goto LABEL_6;
  }
  if (!a3)
  {
    CFStringRef v7 = @"reason == null";
LABEL_6:
    uint64_t v8 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v7);
    objc_exception_throw(v8);
  }
  id result = JreStrongAssign((id *)(a1 + 88), a2);
  *(_DWORD *)(a1 + 96) = -1;
  return result;
}

JavaNetURISyntaxException *new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(void *a1, uint64_t a2, int a3)
{
  int v6 = [JavaNetURISyntaxException alloc];
  JavaNetURISyntaxException_initWithNSString_withNSString_withInt_((uint64_t)v6, a1, a2, a3);
  return v6;
}

JavaNetURISyntaxException *new_JavaNetURISyntaxException_initWithNSString_withNSString_(void *a1, uint64_t a2)
{
  unint64_t v4 = [JavaNetURISyntaxException alloc];
  JavaNetURISyntaxException_initWithNSString_withNSString_((uint64_t)v4, a1, a2);
  return v4;
}

JavaLangShort *JavaLangShort_decodeWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  double v3 = JavaLangInteger_decodeWithNSString_(a1);
  if (!v2) {
    JreThrowNullPointerException();
  }
  unsigned int v4 = objc_msgSend(v2, "intValue", v3);
  if (v4 != (__int16)v4)
  {
    CFStringRef v13 = JreStrcat("$$C", v5, v6, v7, v8, v9, v10, v11, @"Value out of range for short: \"");
    uint64_t v14 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v13);
    objc_exception_throw(v14);
  }
  return JavaLangShort_valueOfWithShort_((__int16)v4);
}

uint64_t JavaLangShort_parseShortWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangShort_parseShortWithNSString_withInt_(a1, 10, a3, a4, a5, a6, a7, a8);
}

uint64_t JavaLangShort_parseShortWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v10 = JavaLangInteger_parseIntWithNSString_withInt_(a1, a2, a3, a4, a5, a6, a7, a8);
  if (v10 != (__int16)v10)
  {
    CFStringRef v19 = JreStrcat("$$C", v11, v12, v13, v14, v15, v16, v17, @"Value out of range for short: \"");
    int v20 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v19);
    objc_exception_throw(v20);
  }
  return (__int16)v10;
}

NSString *JavaLangShort_toStringWithShort_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangInteger_toStringWithInt_(a1);
}

JavaLangShort *JavaLangShort_valueOfWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v9 = JavaLangShort_parseShortWithNSString_(a1, a2, a3, a4, a5, a6, a7, a8);
  return JavaLangShort_valueOfWithShort_(v9);
}

JavaLangShort *JavaLangShort_valueOfWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v10 = JavaLangShort_parseShortWithNSString_withInt_(a1, a2, a3, a4, a5, a6, a7, a8);
  return JavaLangShort_valueOfWithShort_(v10);
}

uint64_t JavaLangShort_reverseBytesWithShort_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return ((int)bswap32(a1) >> 16);
}

JavaLangShort *JavaLangShort_valueOfWithShort_(int a1)
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 == (char)a1)
  {
    if (!qword_100561168) {
      JreThrowNullPointerException();
    }
    uint64_t v4 = a1 + 128;
    uint64_t v5 = *(unsigned int *)(qword_100561168 + 8);
    if ((int)v5 <= (int)v4) {
      IOSArray_throwOutOfBoundsWithMsg(v5, v4);
    }
    return *(JavaLangShort **)(qword_100561168 + 24 + 8 * v4);
  }
  else
  {
    uint64_t v2 = [JavaLangShort alloc];
    v2->value_ = a1;
    return v2;
  }
}

uint64_t JavaLangShort_class_()
{
  if ((atomic_load_explicit(JavaLangShort__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561178 != -1) {
    dispatch_once(&qword_100561178, &stru_10045D438);
  }
  return qword_100561170;
}

void sub_100241BD8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561170 = IOSClass_fromClass(v1);
}

JavaNioCharsetIllegalCharsetNameException *new_JavaNioCharsetIllegalCharsetNameException_initWithNSString_(__CFString *a1)
{
  uint64_t v2 = [JavaNioCharsetIllegalCharsetNameException alloc];
  double v3 = v2;
  if (a1) {
    CFStringRef v4 = a1;
  }
  else {
    CFStringRef v4 = @"null";
  }
  JavaLangIllegalArgumentException_initWithNSString_(v2, v4);
  JreStrongAssign((id *)&v3->charsetName_, a1);
  return v3;
}

id JavaIoStringWriter_init(uint64_t a1)
{
  JavaIoWriter_init(a1);
  uint64_t v2 = new_JavaLangStringBuffer_initWithInt_(0x10u);
  JreStrongAssignAndConsume((id *)(a1 + 16), v2);
  double v3 = *(void **)(a1 + 16);
  return JreStrongAssign((id *)(a1 + 8), v3);
}

id JavaIoStringWriter_initWithInt_(uint64_t a1, unsigned int a2)
{
  JavaIoWriter_init(a1);
  if ((a2 & 0x80000000) != 0)
  {
    CFStringRef v14 = JreStrcat("$I", v4, v5, v6, v7, v8, v9, v10, @"initialSize < 0: ");
    uint64_t v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
    objc_exception_throw(v15);
  }
  uint64_t v11 = new_JavaLangStringBuffer_initWithInt_(a2);
  JreStrongAssignAndConsume((id *)(a1 + 16), v11);
  uint64_t v12 = *(void **)(a1 + 16);
  return JreStrongAssign((id *)(a1 + 8), v12);
}

JavaIoStringWriter *new_JavaIoStringWriter_init()
{
  uint64_t v0 = [JavaIoStringWriter alloc];
  JavaIoStringWriter_init((uint64_t)v0);
  return v0;
}

id OrgXmlSaxHelpersNewInstance_newInstanceWithNSString_(void *a1)
{
  uint64_t v1 = (void *)IOSClass_forName_(a1);
  if (!v1) {
    JreThrowNullPointerException();
  }
  return [v1 newInstance];
}

id OrgXmlSaxHelpersNewInstance_getClassLoader()
{
  uint64_t v0 = (void *)JavaLangThread_class_();
  id v1 = objc_msgSend(v0, "getMethod:parameterTypes:", @"getContextClassLoader", +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", 0, IOSClass_class_()));
  if (!v1) {
    JreThrowNullPointerException();
  }
  uint64_t v2 = JavaLangThread_currentThread();
  id v3 = objc_msgSend(v1, "invokeWithId:withNSObjectArray:", v2, +[IOSObjectArray arrayWithLength:type:](IOSObjectArray, "arrayWithLength:type:", 0, NSObject_class_()));
  objc_opt_class();
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v3;
}

void sub_100242390(_Unwind_Exception *a1)
{
}

void sub_1002423A4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561180 = IOSClass_fromClass(v1);
}

void sub_1002423D0(void *a1)
{
  objc_begin_catch(a1);
  if (qword_100561188 != -1)
  {
    dispatch_once(&qword_100561188, &stru_10045D9B0);
  }
}

id JavaBeansPropertyChangeEvent_initWithId_withNSString_withId_withId_(id *a1, void *a2, void *a3, void *a4, void *a5)
{
  JavaUtilEventObject_initWithId_((uint64_t)a1, a2);
  JreStrongAssign(a1 + 2, a3);
  JreStrongAssign(a1 + 3, a4);
  return JreStrongAssign(a1 + 4, a5);
}

JavaBeansPropertyChangeEvent *new_JavaBeansPropertyChangeEvent_initWithId_withNSString_withId_withId_(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = [JavaBeansPropertyChangeEvent alloc];
  JavaBeansPropertyChangeEvent_initWithId_withNSString_withId_withId_((id *)&v8->super.super.isa, a1, a2, a3, a4);
  return v8;
}

JavaLangOutOfMemoryError *new_JavaLangOutOfMemoryError_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangOutOfMemoryError alloc];
  JavaLangVirtualMachineError_initWithNSString_(v2, a1);
  return v2;
}

JavaUtilIllegalFormatPrecisionException *new_JavaUtilIllegalFormatPrecisionException_initWithInt_(unsigned int a1)
{
  uint64_t v2 = [JavaUtilIllegalFormatPrecisionException alloc];
  JavaUtilIllegalFormatException_init(v2, v3);
  *(&v2->super.super.super.super.super.rawFrameCount + 1) = a1;
  return v2;
}

id JavaNetInetUnixAddress_initWithNSString_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if ((atomic_load_explicit(JavaNioCharsetStandardCharsets__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = [a2 getBytesWithCharset:JavaNioCharsetStandardCharsets_UTF_8_];
  return JavaNetInetAddress_initWithInt_withByteArray_withNSString_(a1, 1, v4, 0);
}

JavaNioByteBufferAsFloatBuffer *JavaNioByteBufferAsFloatBuffer_asFloatBufferWithJavaNioByteBuffer_(void *a1)
{
  if (!a1 || (uint64_t v2 = (uint64_t *)[a1 slice]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, "orderWithJavaNioByteOrder:", objc_msgSend(a1, "order"));
  id v4 = [JavaNioByteBufferAsFloatBuffer alloc];
  JavaNioByteBufferAsFloatBuffer_initWithJavaNioByteBuffer_((uint64_t)v4, v3);
  return v4;
}

id JavaNioByteBufferAsFloatBuffer_initWithJavaNioByteBuffer_(uint64_t a1, uint64_t *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  signed int v4 = [a2 capacity];
  JavaNioFloatBuffer_initWithInt_withLong_(a1, (v4 / 4), a2[4], v5, v6, v7, v8, v9);
  JreStrongAssign((id *)(a1 + 40), a2);
  uint64_t v10 = *(void **)(a1 + 40);
  return [v10 clear];
}

JavaNioShortArrayBuffer *JavaNioShortBuffer_allocateWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v10 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    uint64_t v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v10);
    objc_exception_throw(v11);
  }
  uint64_t v8 = new_JavaNioShortArrayBuffer_initWithShortArray_((unsigned int *)+[IOSShortArray arrayWithLength:a1]);
  return v8;
}

JavaNioShortArrayBuffer *JavaNioShortBuffer_wrapWithShortArray_withInt_withInt_(unsigned int *a1, int a2, int a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(a1[2], a2, a3);
  id result = new_JavaNioShortArrayBuffer_initWithShortArray_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3 + a2;
  return result;
}

uint64_t JavaNioShortBuffer_initWithInt_withLong_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaNioBuffer_initWithInt_withInt_withLong_(a1, 1, a2, a3, a5, a6, a7, a8);
}

NSString *JavaLangIntegralToString_intToStringWithInt_withInt_(unsigned int a1, int a2)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v4 = qword_100561190;
  return Java_java_lang_IntegralToString_intToString__II((uint64_t)J2ObjC_JNIEnv, v4, a1, a2);
}

NSString *JavaLangIntegralToString_intToStringWithInt_(unsigned int a1)
{
  return IntegralToString_convertInt(0, a1);
}

NSString *JavaLangIntegralToString_appendIntWithJavaLangAbstractStringBuilder_withInt_(uint64_t a1, unsigned int a2)
{
  return IntegralToString_convertInt(a1 + 8, a2);
}

CFStringRef JavaLangIntegralToString_longToStringWithLong_withInt_(uint64_t a1, int a2)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v4 = qword_100561190;
  return Java_java_lang_IntegralToString_longToString__JI((uint64_t)J2ObjC_JNIEnv, v4, a1, a2);
}

CFStringRef JavaLangIntegralToString_longToStringWithLong_(uint64_t a1)
{
  return IntegralToString_convertLong(0, a1);
}

CFStringRef JavaLangIntegralToString_appendLongWithJavaLangAbstractStringBuilder_withLong_(uint64_t a1, uint64_t a2)
{
  return IntegralToString_convertLong(a1 + 8, a2);
}

NSString *JavaLangIntegralToString_intToBinaryStringWithInt_(unsigned int a1)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v2 = qword_100561190;
  return Java_java_lang_IntegralToString_intToBinaryString((uint64_t)J2ObjC_JNIEnv, v2, a1);
}

NSString *JavaLangIntegralToString_longToBinaryStringWithLong_(unint64_t a1)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v2 = qword_100561190;
  return Java_java_lang_IntegralToString_longToBinaryString((uint64_t)J2ObjC_JNIEnv, v2, a1);
}

void *JavaLangIntegralToString_appendByteAsHexWithJavaLangStringBuilder_withByte_withBoolean_(void *a1, unsigned __int8 a2, int a3)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v6 = qword_100561190;
  return Java_java_lang_IntegralToString_appendByteAsHex((uint64_t)J2ObjC_JNIEnv, v6, a1, a2, a3);
}

NSString *JavaLangIntegralToString_byteToHexStringWithByte_withBoolean_(unsigned __int8 a1, int a2)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v4 = qword_100561190;
  return Java_java_lang_IntegralToString_byteToHexString((uint64_t)J2ObjC_JNIEnv, v4, a1, a2);
}

NSString *JavaLangIntegralToString_bytesToHexStringWithByteArray_withBoolean_()
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  return Java_java_lang_IntegralToString_bytesToHexString();
}

NSString *JavaLangIntegralToString_intToHexStringWithInt_withBoolean_withInt_(unsigned int a1, int a2, int a3)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v6 = qword_100561190;
  return Java_java_lang_IntegralToString_intToHexString((uint64_t)J2ObjC_JNIEnv, v6, a1, a2, a3);
}

NSString *JavaLangIntegralToString_longToHexStringWithLong_(unint64_t a1)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v2 = qword_100561190;
  return Java_java_lang_IntegralToString_longToHexString((uint64_t)J2ObjC_JNIEnv, v2, a1);
}

NSString *JavaLangIntegralToString_intToOctalStringWithInt_(unsigned int a1)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v2 = qword_100561190;
  return Java_java_lang_IntegralToString_intToOctalString((uint64_t)J2ObjC_JNIEnv, v2, a1);
}

NSString *JavaLangIntegralToString_longToOctalStringWithLong_(unint64_t a1)
{
  if (qword_100561198 != -1) {
    dispatch_once(&qword_100561198, &stru_10045ED18);
  }
  uint64_t v2 = qword_100561190;
  return Java_java_lang_IntegralToString_longToOctalString((uint64_t)J2ObjC_JNIEnv, v2, a1);
}

void sub_100244114(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561190 = IOSClass_fromClass(v1);
}

JavaLangClassCastException *new_JavaLangClassCastException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangClassCastException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

id JavaUtilCalendar_initWithJavaUtilTimeZone_(uint64_t a1, uint64_t a2)
{
  JreStrongAssignAndConsume((id *)(a1 + 16), +[IOSIntArray newArrayWithLength:17]);
  JreStrongAssignAndConsume((id *)(a1 + 24), +[IOSBooleanArray newArrayWithLength:17]);
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 8) = 0;
  [(id)a1 setLenientWithBoolean:1];
  return [(id)a1 setTimeZoneWithJavaUtilTimeZone:a2];
}

id JavaUtilCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_(void *a1, uint64_t a2, void *a3)
{
  JavaUtilCalendar_initWithJavaUtilTimeZone_((uint64_t)a1, a2);
  uint64_t v5 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a3);
  if (!v5
    || (uint64_t v6 = v5, (firstDayOfWeek = v5->firstDayOfWeek_) == 0)
    || (objc_msgSend(a1, "setFirstDayOfWeekWithInt:", -[JavaLangInteger intValue](firstDayOfWeek, "intValue")),
        (minimalDaysInFirstWeek = v6->minimalDaysInFirstWeek_) == 0))
  {
    JreThrowNullPointerException();
  }
  id v9 = (id)[(JavaLangInteger *)minimalDaysInFirstWeek intValue];
  return [a1 setMinimalDaysInFirstWeekWithInt:v9];
}

void sub_100244760(_Unwind_Exception *a1)
{
}

JavaUtilGregorianCalendar *JavaUtilCalendar_getInstanceWithJavaUtilLocale_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)JavaUtilCalendar_class_();
  objc_sync_enter(v2);
  uint64_t v3 = new_JavaUtilGregorianCalendar_initWithJavaUtilLocale_(a1);
  objc_sync_exit(v2);
  return v3;
}

void sub_100244B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilGregorianCalendar *JavaUtilCalendar_getInstanceWithJavaUtilTimeZone_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = (void *)JavaUtilCalendar_class_();
  objc_sync_enter(v2);
  uint64_t v3 = new_JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_(a1);
  objc_sync_exit(v2);
  return v3;
}

void sub_100244BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilGregorianCalendar *JavaUtilCalendar_getInstanceWithJavaUtilTimeZone_withJavaUtilLocale_(uint64_t a1, void *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = (void *)JavaUtilCalendar_class_();
  objc_sync_enter(v4);
  uint64_t v5 = new_JavaUtilGregorianCalendar_initWithJavaUtilTimeZone_withJavaUtilLocale_(a1, a2);
  objc_sync_exit(v4);
  return v5;
}

void sub_100244C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1002455C4(unsigned int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 >= 0x11)
  {
    CFStringRef v12 = JreStrcat("$I", a2, (uint64_t)a3, a4, a5, a6, a7, a8, @"bad field ");
    uint64_t v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
    objc_exception_throw(v13);
  }
  int v10 = a2;
  sub_1002457AC(a2, a2, (uint64_t)a3, a4, a5, a6, a7, a8);
  InstanceWithJavaUtilLocaluint64_t e = JavaTextDateFormatSymbols_getInstanceWithJavaUtilLocale_(a3);
  switch(a1)
  {
    case 0u:
      if (!InstanceWithJavaUtilLocale) {
        goto LABEL_30;
      }
      return [(JavaTextDateFormatSymbols *)InstanceWithJavaUtilLocale getEras];
    case 2u:
      if (v10 == 2)
      {
        if (InstanceWithJavaUtilLocale)
        {
          return [(JavaTextDateFormatSymbols *)InstanceWithJavaUtilLocale getMonths];
        }
LABEL_30:
        JreThrowNullPointerException();
      }
      if (!InstanceWithJavaUtilLocale) {
        goto LABEL_30;
      }
      id result = [(JavaTextDateFormatSymbols *)InstanceWithJavaUtilLocale getShortMonths];
      break;
    case 7u:
      if (v10 == 2)
      {
        if (!InstanceWithJavaUtilLocale) {
          goto LABEL_30;
        }
        id result = [(JavaTextDateFormatSymbols *)InstanceWithJavaUtilLocale getWeekdays];
      }
      else
      {
        if (!InstanceWithJavaUtilLocale) {
          goto LABEL_30;
        }
        id result = [(JavaTextDateFormatSymbols *)InstanceWithJavaUtilLocale getShortWeekdays];
      }
      break;
    case 9u:
      if (!InstanceWithJavaUtilLocale) {
        goto LABEL_30;
      }
      return [(JavaTextDateFormatSymbols *)InstanceWithJavaUtilLocale getAmPmStrings];
    default:
      return 0;
  }
  return result;
}

uint64_t sub_1002457AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = result;
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    id result = objc_opt_class();
  }
  if (v8 >= 3)
  {
    CFStringRef v9 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"bad style ");
    int v10 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v9);
    objc_exception_throw(v10);
  }
  return result;
}

uint64_t sub_1002458C8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (void *)result;
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire))
  {
    if (!a2) {
      return result;
    }
  }
  else
  {
    id result = objc_opt_class();
    if (!a2) {
      return result;
    }
  }
  id result = *(unsigned int *)(a2 + 8);
  if ((int)result >= 1)
  {
    for (uint64_t i = 0; i < result; ++i)
    {
      if (*(void *)(a2 + 24 + 8 * i))
      {
        if (i >= (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, i);
        }
        if (([*(id *)(a2 + 24 + 8 * i) isEmpty] & 1) == 0)
        {
          if (!v3) {
            JreThrowNullPointerException();
          }
          uint64_t v5 = *(int *)(a2 + 8);
          if (i >= v5) {
            IOSArray_throwOutOfBoundsWithMsg(v5, i);
          }
          [v3 putWithId:*(void *)(a2 + 24 + 8 * i) withId:JavaLangInteger_valueOfWithInt_(i)];
        }
      }
      id result = *(int *)(a2 + 8);
    }
  }
  return result;
}

id JavaUtilCalendar_getAvailableLocales()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)JavaUtilCalendar_class_();
  objc_sync_enter(v0);
  id AvailableCalendarLocales = LibcoreIcuICU_getAvailableCalendarLocales();
  objc_sync_exit(v0);
  return AvailableCalendarLocales;
}

void sub_10024603C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilGregorianCalendar *JavaUtilCalendar_getInstance()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)JavaUtilCalendar_class_();
  objc_sync_enter(v0);
  uint64_t v1 = new_JavaUtilGregorianCalendar_init();
  objc_sync_exit(v0);
  return v1;
}

void sub_1002460B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaUtilCalendar_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_1005611B8 != -1) {
    dispatch_once(&qword_1005611B8, &stru_100460638);
  }
  return qword_1005611B0;
}

void sub_100246128(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_1005611B0 = IOSClass_fromClass(v1);
}

JavaNetSocketException *new_JavaNetSocketException_init()
{
  uint64_t v0 = [JavaNetSocketException alloc];
  JavaIoIOException_init(v0, v1);
  return v0;
}

JavaNetSocketException *new_JavaNetSocketException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaNetSocketException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

JavaNetSocketException *new_JavaNetSocketException_initWithJavaLangThrowable_(void *a1)
{
  uint64_t v2 = [JavaNetSocketException alloc];
  JavaIoIOException_initWithJavaLangThrowable_((uint64_t)v2, a1);
  return v2;
}

JavaNetSocketException *new_JavaNetSocketException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [JavaNetSocketException alloc];
  JavaIoIOException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

id JavaUtilDuplicateFormatFlagsException_initWithNSString_(uint64_t a1, void *a2)
{
  JavaUtilIllegalFormatException_init(a1, a2);
  if (!a2)
  {
    uint64_t v5 = new_JavaLangNullPointerException_initWithNSString_(@"f == null");
    objc_exception_throw(v5);
  }
  return JreStrongAssign((id *)(a1 + 88), a2);
}

JavaUtilDuplicateFormatFlagsException *new_JavaUtilDuplicateFormatFlagsException_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaUtilDuplicateFormatFlagsException alloc];
  JavaUtilDuplicateFormatFlagsException_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

void *sub_10024648C(uint64_t a1, _DWORD *a2, void *a3)
{
  *(_DWORD *)(a1 + 24) = 7;
  *(_DWORD *)(a1 + 40) = 0;
  JreStrongAssign((id *)(a1 + 8), a2);
  JreStrongAssign((id *)(a1 + 16), a3);
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v6 = a2[2];
  if (v6 >= 512) {
    uint64_t v7 = 256;
  }
  else {
    uint64_t v7 = v6 >> 1;
  }
  unsigned int v8 = +[IOSObjectArray arrayWithLength:v7 type:NSObject_class_()];
  objc_opt_class();
  if (v8 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  JreStrongAssign((id *)(a1 + 32), v8);
  if (v6 >= 120)
  {
    if (v6 >= 0x606)
    {
      if (v6 >= 0x1D16F) {
        uint64_t v9 = 40;
      }
      else {
        uint64_t v9 = 19;
      }
    }
    else
    {
      uint64_t v9 = 10;
    }
  }
  else
  {
    uint64_t v9 = 5;
  }
  JreStrongAssignAndConsume((id *)(a1 + 48), +[IOSIntArray newArrayWithLength:v9]);
  id v10 = +[IOSIntArray newArrayWithLength:v9];
  return JreStrongAssignAndConsume((id *)(a1 + 56), v10);
}

unsigned int *JavaUtilTimSort_sortWithNSObjectArray_withJavaUtilComparator_(unsigned int *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v8 = a1[2];
  return JavaUtilTimSort_sortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(a1, 0, v8, a2, a5, a6, a7, a8);
}

unsigned int *JavaUtilTimSort_sortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(unsigned int *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a3;
  uint64_t v9 = a2;
  if (a4)
  {
    if (!a1) {
      JreThrowNullPointerException();
    }
    id result = (unsigned int *)JavaUtilArrays_checkStartAndEndWithInt_withInt_withInt_(a1[2], a2, a3, (uint64_t)a4, a5, a6, a7, a8);
    unsigned int v13 = v8 - v9;
    if (v8 - (int)v9 >= 2)
    {
      if (v13 > 0x1F)
      {
        uint64_t v15 = [JavaUtilTimSort alloc];
        sub_10024648C((uint64_t)v15, a1, a4);
        uint64_t v16 = v15;
        int v17 = 0;
        unsigned int v18 = v8 - v9;
        do
        {
          v17 |= v18 & 1;
          unsigned int v19 = v18 >> 1;
          BOOL v20 = v18 > 0x3F;
          v18 >>= 1;
        }
        while (v20);
        signed int v21 = v17 + v19;
        do
        {
          int v22 = sub_100246ABC(a1, v9, v8, a4);
          int v23 = v22;
          if (v22 >= v21)
          {
            uint64_t v25 = (v22 + v9);
          }
          else
          {
            if ((int)v13 >= v21) {
              unsigned int v24 = v21;
            }
            else {
              unsigned int v24 = v13;
            }
            uint64_t v25 = v9 + v24;
            sub_100246894(a1, v9, v9 + v24, v22 + v9, a4);
            int v23 = v24;
          }
          sub_100246D44((uint64_t)v16, v9, v23);
          sub_100246E20((uint64_t)v16);
          uint64_t v9 = v25;
          v13 -= v23;
        }
        while (v13);
        return sub_100247038(v16);
      }
      else
      {
        int v14 = sub_100246ABC(a1, v9, v8, a4) + v9;
        return sub_100246894(a1, v9, v8, v14, a4);
      }
    }
  }
  else
  {
    return (unsigned int *)JavaUtilArrays_sortWithNSObjectArray_withInt_withInt_();
  }
  return result;
}

unsigned int *sub_100246894(unsigned int *result, uint64_t a2, int a3, int a4, void *a5)
{
  if (a4 == a2) {
    int v5 = a4 + 1;
  }
  else {
    int v5 = a4;
  }
  if (v5 < a3)
  {
    int v6 = result;
    if (!result) {
LABEL_38:
    }
      JreThrowNullPointerException();
    uint64_t v8 = v5;
    uint64_t v9 = (int)a2;
    uint64_t v10 = a3;
    uint64_t v24 = a3;
    while (1)
    {
      uint64_t v11 = v6[2];
      if (v8 < 0 || v8 >= (int)v11) {
        IOSArray_throwOutOfBoundsWithMsg(v11, v8);
      }
      CFStringRef v12 = *(void **)&v6[2 * v8 + 6];
      if (v8 <= v9)
      {
        uint64_t v15 = a2;
      }
      else
      {
        if (!a5) {
          goto LABEL_38;
        }
        uint64_t v13 = v9;
        int v14 = v8;
        LODWORD(v15) = a2;
        do
        {
          uint64_t v16 = (v14 + v15) >> 1;
          uint64_t v17 = v6[2];
          if ((int)v16 >= (int)v17) {
            IOSArray_throwOutOfBoundsWithMsg(v17, (v14 + v15) >> 1);
          }
          int v18 = [a5 compareWithId:v12 withId:*(void *)&v6[2 * v16 + 6]];
          if (v18 >= 0) {
            uint64_t v15 = (v16 + 1);
          }
          else {
            uint64_t v15 = v15;
          }
          if (v18 < 0) {
            int v14 = v16;
          }
        }
        while ((int)v15 < v14);
        uint64_t v9 = v13;
        uint64_t v10 = v24;
      }
      uint64_t v19 = (v8 - v15);
      if (v19 == 2) {
        break;
      }
      if (v19 == 1)
      {
        uint64_t v20 = (int)v15 + 1;
LABEL_28:
        uint64_t v23 = v6[2];
        if ((v15 & 0x80000000) != 0 || (int)v15 >= (int)v23) {
          IOSArray_throwOutOfBoundsWithMsg(v23, v15);
        }
        uint64_t v15 = (int)v15;
        IOSObjectArray_Set((uint64_t)v6, v20, *(void **)&v6[2 * (int)v15 + 6]);
        goto LABEL_32;
      }
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v6, v15, v6, (v15 + 1), v19);
      uint64_t v15 = (int)v15;
LABEL_32:
      id result = (unsigned int *)IOSObjectArray_Set((uint64_t)v6, v15, v12);
      if (++v8 >= v10) {
        return result;
      }
    }
    uint64_t v21 = v6[2];
    int v22 = v15 + 1;
    uint64_t v20 = (int)v15 + 1;
    if ((int)v15 + 1 < 0 || v22 >= (int)v21) {
      IOSArray_throwOutOfBoundsWithMsg(v21, v22);
    }
    IOSObjectArray_Set((uint64_t)v6, (int)v15 + 2, *(void **)&v6[2 * v20 + 6]);
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_100246ABC(unsigned int *a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v5 = (a2 + 1);
  if (v5 == a3) {
    return 1;
  }
  if (!a4 || !a1) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = a1[2];
  if ((v5 & 0x80000000) != 0 || (int)v5 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v5);
  }
  LODWORD(v11) = a2 + 2;
  if ((a2 & 0x80000000) != 0 || (int)v10 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v10, a2);
  }
  if (([a4 compareWithId:*(void *)&a1[2 * (int)v5 + 6] withId:*(void *)&a1[2 * (int)a2 + 6]] & 0x80000000) != 0)
  {
    LODWORD(v14) = a2 + 2;
    if ((int)v11 < a3)
    {
      uint64_t v14 = (int)v11;
      while (1)
      {
        uint64_t v15 = a1[2];
        if (v14 < 0 || v14 >= (int)v15) {
          IOSArray_throwOutOfBoundsWithMsg(v15, v14);
        }
        int v16 = v14 - 1;
        if ((int)v14 - 1 < 0 || v16 >= (int)v15) {
          IOSArray_throwOutOfBoundsWithMsg(v15, v16);
        }
        if (([a4 compareWithId:*(void *)&a1[2 * v14 + 6] withId:*(void *)&a1[2 * v16 + 6]] & 0x80000000) == 0)break; {
        if (a3 == ++v14)
        }
        {
          LODWORD(v14) = a3;
          break;
        }
      }
    }
    sub_1001F6CD0(a1, a2, v14);
    LODWORD(v11) = v14;
  }
  else if ((int)v11 < a3)
  {
    uint64_t v11 = (int)v11;
    while (1)
    {
      uint64_t v12 = a1[2];
      if (v11 < 0 || v11 >= (int)v12) {
        IOSArray_throwOutOfBoundsWithMsg(v12, v11);
      }
      int v13 = v11 - 1;
      if ((int)v11 - 1 < 0 || v13 >= (int)v12) {
        IOSArray_throwOutOfBoundsWithMsg(v12, v13);
      }
      if (([a4 compareWithId:*(void *)&a1[2 * v11 + 6] withId:*(void *)&a1[2 * v13 + 6]] & 0x80000000) != 0)break; {
      if (a3 == ++v11)
      }
      {
        LODWORD(v11) = a3;
        return (v11 - a2);
      }
    }
  }
  return (v11 - a2);
}

void sub_100246CE8()
{
}

uint64_t sub_100246D44(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3) {
    goto LABEL_8;
  }
  int v5 = *(_DWORD *)(a1 + 40);
  uint64_t v6 = *(unsigned int *)(v3 + 8);
  if (v5 < 0 || v5 >= (int)v6) {
    IOSArray_throwOutOfBoundsWithMsg(v6, v5);
  }
  *(_DWORD *)(v3 + 12 + 4 * v5) = a2;
  uint64_t v7 = *(void *)(a1 + 56);
  if (!v7) {
LABEL_8:
  }
    JreThrowNullPointerException();
  int v8 = *(_DWORD *)(a1 + 40);
  uint64_t result = *(unsigned int *)(v7 + 8);
  if (v8 < 0 || v8 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v8);
  }
  *(_DWORD *)(v7 + 12 + 4 * v8) = a3;
  ++*(_DWORD *)(a1 + 40);
  return result;
}

uint64_t sub_100246E20(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 40);
  if (v1 >= 2)
  {
    uint64_t v2 = result;
    do
    {
      uint64_t v3 = *(void *)(v2 + 56);
      uint64_t v4 = (v1 - 2);
      if (v1 == 2) {
        goto LABEL_9;
      }
      if (!v3) {
        goto LABEL_29;
      }
      uint64_t v5 = (v1 - 3);
      uint64_t v6 = *(unsigned int *)(v3 + 8);
      if ((int)v5 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 3));
      }
      if ((int)v4 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 2));
      }
      uint64_t v7 = (v1 - 1);
      if (v1 > (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 1));
      }
      if (*(_DWORD *)(v3 + 12 + 4 * v5) > *(_DWORD *)(v3 + 12 + 4 * v7) + *(_DWORD *)(v3 + 12 + 4 * v4))
      {
LABEL_9:
        if (!v3) {
LABEL_29:
        }
          JreThrowNullPointerException();
        uint64_t result = *(unsigned int *)(v3 + 8);
        if ((int)v4 >= (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, (v1 - 2));
        }
        if (v1 > (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, (v1 - 1));
        }
        if (*(_DWORD *)(v3 + 12 + 4 * v4) > *(_DWORD *)(v3 + 12 + 4 * (v1 - 1))) {
          return result;
        }
      }
      else
      {
        uint64_t v8 = *(unsigned int *)(v3 + 8);
        if ((int)v5 >= (int)v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, (v1 - 3));
        }
        if (v1 > (int)v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, (v1 - 1));
        }
        if (*(_DWORD *)(v3 + 12 + 4 * v5) >= *(_DWORD *)(v3 + 12 + 4 * v7)) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v5;
        }
      }
      uint64_t result = (uint64_t)sub_100247138(v2, v4);
      int v1 = *(_DWORD *)(v2 + 40);
    }
    while (v1 > 1);
  }
  return result;
}

_DWORD *sub_100247038(_DWORD *result)
{
  int v1 = result[10];
  if (v1 >= 2)
  {
    uint64_t v2 = (uint64_t)result;
    do
    {
      if (v1 == 2)
      {
        uint64_t v3 = 0;
      }
      else
      {
        uint64_t v4 = *(void *)(v2 + 56);
        if (!v4) {
          JreThrowNullPointerException();
        }
        uint64_t v5 = (v1 - 3);
        uint64_t v6 = *(unsigned int *)(v4 + 8);
        if ((int)v5 >= (int)v6) {
          IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 3));
        }
        if (v1 > (int)v6) {
          IOSArray_throwOutOfBoundsWithMsg(v6, (v1 - 1));
        }
        if (*(_DWORD *)(v4 + 12 + 4 * v5) >= *(_DWORD *)(*(void *)(v2 + 56) + 12 + 4 * (v1 - 1))) {
          uint64_t v3 = (v1 - 2);
        }
        else {
          uint64_t v3 = v5;
        }
      }
      uint64_t result = sub_100247138(v2, v3);
      int v1 = *(_DWORD *)(v2 + 40);
    }
    while (v1 > 1);
  }
  return result;
}

id sub_100247138(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (!v2) {
    goto LABEL_38;
  }
  uint64_t v4 = *(unsigned int *)(v2 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v4 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v4, a2);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (!v5) {
    goto LABEL_38;
  }
  int v6 = *(_DWORD *)(v2 + 12 + 4 * (int)a2);
  uint64_t v7 = *(unsigned int *)(v5 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v7 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v7, a2);
  }
  int v8 = *(_DWORD *)(v5 + 12 + 4 * (int)a2);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(unsigned int *)(v9 + 8);
  int v11 = a2 + 1;
  uint64_t v12 = (int)a2 + 1;
  if ((int)a2 + 1 < 0 || v11 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v11);
  }
  uint64_t v13 = *(int *)(v9 + 12 + 4 * v12);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(unsigned int *)(v14 + 8);
  if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v15) {
    IOSArray_throwOutOfBoundsWithMsg(v15, v12);
  }
  int v16 = *(_DWORD *)(v14 + 12 + 4 * v12);
  if ((a2 & 0x80000000) != 0 || (int)v15 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v15, a2);
  }
  *(_DWORD *)(*(void *)(a1 + 56) + 12 + 4 * (int)a2) = v16 + v8;
  int v17 = *(_DWORD *)(a1 + 40);
  if (v17 - 3 == a2)
  {
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v19 = *(unsigned int *)(v18 + 8);
    int v20 = a2 + 2;
    uint64_t v21 = (int)a2 + 2;
    if ((int)a2 + 2 < 0 || v20 >= (int)v19) {
      IOSArray_throwOutOfBoundsWithMsg(v19, v20);
    }
    int v22 = *(_DWORD *)(v18 + 12 + 4 * v21);
    if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v19) {
      IOSArray_throwOutOfBoundsWithMsg(v19, v12);
    }
    *(_DWORD *)(*(void *)(a1 + 48) + 12 + 4 * v12) = v22;
    uint64_t v23 = *(void *)(a1 + 56);
    uint64_t v24 = *(unsigned int *)(v23 + 8);
    if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v24) {
      IOSArray_throwOutOfBoundsWithMsg(v24, v21);
    }
    int v25 = *(_DWORD *)(v23 + 12 + 4 * v21);
    if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v24) {
      IOSArray_throwOutOfBoundsWithMsg(v24, v12);
    }
    *(_DWORD *)(v23 + 12 + 4 * v12) = v25;
    int v17 = *(_DWORD *)(a1 + 40);
  }
  *(_DWORD *)(a1 + 40) = v17 - 1;
  uint64_t v26 = *(void *)(a1 + 8);
  if (!v26) {
LABEL_38:
  }
    JreThrowNullPointerException();
  uint64_t v27 = *(unsigned int *)(v26 + 8);
  if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v27) {
    IOSArray_throwOutOfBoundsWithMsg(v27, v13);
  }
  id result = (id)sub_100247824(*(void *)(v26 + 24 + 8 * v13), *(void *)(a1 + 8), v6, v8, 0, *(void **)(a1 + 16));
  uint64_t v29 = (v8 - result);
  if (v8 != result)
  {
    int v30 = (int)result;
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = *(unsigned int *)(v31 + 8);
    int v33 = v6 + v8 - 1;
    if (v33 < 0 || v33 >= (int)v32) {
      IOSArray_throwOutOfBoundsWithMsg(v32, v33);
    }
    id result = (id)sub_100247568(*(void *)(v31 + 24 + 8 * v33), *(void *)(a1 + 8), v13, v16, v16 - 1, *(void **)(a1 + 16));
    if (result)
    {
      uint64_t v34 = (v30 + v6);
      if ((int)v29 <= (int)result)
      {
        return sub_100247AC4(a1, v34, v29, v13, (int)result);
      }
      else
      {
        return sub_100248158(a1, v34, v29, v13, (uint64_t)result);
      }
    }
  }
  return result;
}

void sub_100247544()
{
}

uint64_t sub_100247568(uint64_t a1, uint64_t a2, int a3, int a4, int a5, void *a6)
{
  if (!a6 || !a2) {
    JreThrowNullPointerException();
  }
  uint64_t v12 = *(unsigned int *)(a2 + 8);
  int v13 = a5 + a3;
  uint64_t v14 = a5 + a3;
  if (a5 + a3 < 0 || v13 >= (int)v12) {
    IOSArray_throwOutOfBoundsWithMsg(v12, v13);
  }
  if ((int)[a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * v14)] < 1)
  {
    int v21 = a5 + 1;
    int v22 = 1;
    if (a5 + 1 <= 1)
    {
      int v24 = 0;
    }
    else
    {
      int v23 = 0;
      while (1)
      {
        int v24 = v22;
        uint64_t v25 = *(unsigned int *)(a2 + 8);
        int v26 = v14 - v22;
        if (v26 < 0 || v26 >= (int)v25) {
          IOSArray_throwOutOfBoundsWithMsg(v25, v26);
        }
        if ((int)[a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * v26)] > 0) {
          break;
        }
        if ((v24 & 0x40000000) != 0) {
          int v22 = v21;
        }
        else {
          int v22 = (2 * v24) | 1;
        }
        int v23 = v24;
        if (v22 >= v21) {
          goto LABEL_36;
        }
      }
      int v22 = v24;
      int v24 = v23;
    }
LABEL_36:
    if (v22 >= v21) {
      int v22 = v21;
    }
    int v28 = a5 - v22;
    uint64_t v29 = (a5 - v24);
  }
  else
  {
    int v15 = a4 - a5;
    int v16 = 1;
    if (a4 - a5 < 2)
    {
      int v18 = 0;
    }
    else
    {
      int v17 = 0;
      while (1)
      {
        int v18 = v16;
        uint64_t v19 = *(unsigned int *)(a2 + 8);
        int v20 = v16 + v14;
        if (v20 < 0 || v20 >= (int)v19) {
          IOSArray_throwOutOfBoundsWithMsg(v19, v20);
        }
        if ((int)[a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * v20)] < 1) {
          break;
        }
        if ((v18 & 0x40000000) != 0) {
          int v16 = v15;
        }
        else {
          int v16 = (2 * v18) | 1;
        }
        int v17 = v18;
        if (v16 >= v15) {
          goto LABEL_31;
        }
      }
      int v16 = v18;
      int v18 = v17;
    }
LABEL_31:
    if (v16 >= v15) {
      int v27 = v15;
    }
    else {
      int v27 = v16;
    }
    int v28 = v18 + a5;
    uint64_t v29 = (v27 + a5);
  }
  int v30 = v28 + 1;
  while (v30 < (int)v29)
  {
    unsigned int v31 = v30 + ((v29 - v30) >> 1);
    uint64_t v32 = *(unsigned int *)(a2 + 8);
    int v33 = v31 + a3;
    if ((int)(v31 + a3) < 0 || v33 >= (int)v32) {
      IOSArray_throwOutOfBoundsWithMsg(v32, v33);
    }
    int v34 = [a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * (int)(v31 + a3))];
    if (v34 <= 0) {
      uint64_t v29 = v31;
    }
    else {
      uint64_t v29 = v29;
    }
    if (v34 > 0) {
      int v30 = v31 + 1;
    }
  }
  return v29;
}

uint64_t sub_100247824(uint64_t a1, uint64_t a2, int a3, int a4, int a5, void *a6)
{
  if (!a6 || !a2) {
    JreThrowNullPointerException();
  }
  uint64_t v12 = *(unsigned int *)(a2 + 8);
  int v13 = a5 + a3;
  uint64_t v14 = a5 + a3;
  if (a5 + a3 < 0 || v13 >= (int)v12) {
    IOSArray_throwOutOfBoundsWithMsg(v12, v13);
  }
  if (([a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * v14)] & 0x80000000) != 0)
  {
    int v21 = a5 + 1;
    int v22 = 1;
    if (a5 + 1 < 2)
    {
      int v23 = 0;
    }
    else
    {
      int v23 = 0;
      while (1)
      {
        int v24 = v22;
        uint64_t v25 = *(unsigned int *)(a2 + 8);
        int v26 = v14 - v22;
        if (v26 < 0 || v26 >= (int)v25) {
          IOSArray_throwOutOfBoundsWithMsg(v25, v26);
        }
        if (([a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * v26)] & 0x80000000) == 0) {
          break;
        }
        if ((v24 & 0x40000000) != 0) {
          int v22 = v21;
        }
        else {
          int v22 = (2 * v24) | 1;
        }
        int v23 = v24;
        if (v22 >= v21) {
          goto LABEL_36;
        }
      }
      int v22 = v24;
    }
LABEL_36:
    if (v22 >= v21) {
      int v22 = v21;
    }
    int v28 = a5 - v22;
    uint64_t v29 = (a5 - v23);
  }
  else
  {
    int v15 = a4 - a5;
    int v16 = 1;
    if (a4 - a5 < 2)
    {
      int v17 = 0;
    }
    else
    {
      int v17 = 0;
      while (1)
      {
        int v18 = v16;
        uint64_t v19 = *(unsigned int *)(a2 + 8);
        int v20 = v16 + v14;
        if (v20 < 0 || v20 >= (int)v19) {
          IOSArray_throwOutOfBoundsWithMsg(v19, v20);
        }
        if (([a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * v20)] & 0x80000000) != 0) {
          break;
        }
        if ((v18 & 0x40000000) != 0) {
          int v16 = v15;
        }
        else {
          int v16 = (2 * v18) | 1;
        }
        int v17 = v18;
        if (v16 >= v15) {
          goto LABEL_31;
        }
      }
      int v16 = v18;
    }
LABEL_31:
    if (v16 >= v15) {
      int v27 = v15;
    }
    else {
      int v27 = v16;
    }
    int v28 = v17 + a5;
    uint64_t v29 = (v27 + a5);
  }
  int v30 = v28 + 1;
  while (v30 < (int)v29)
  {
    unsigned int v31 = v30 + ((v29 - v30) >> 1);
    uint64_t v32 = *(unsigned int *)(a2 + 8);
    int v33 = v31 + a3;
    if ((int)(v31 + a3) < 0 || v33 >= (int)v32) {
      IOSArray_throwOutOfBoundsWithMsg(v32, v33);
    }
    if ((int)[a6 compareWithId:a1 withId:*(void *)(a2 + 24 + 8 * (int)(v31 + a3))] < 0)
    {
      uint64_t v29 = v31;
    }
    else
    {
      int v30 = v31 + 1;
      uint64_t v29 = v29;
    }
  }
  return v29;
}

id sub_100247AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(unsigned int **)(a1 + 8);
  unint64_t v57 = (unsigned int *)sub_100248804(a1, a3);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, a2, v57, 0, v7);
  if (!v9) {
    goto LABEL_75;
  }
  LODWORD(v10) = a2 + 1;
  uint64_t v11 = v9[2];
  if ((a4 & 0x80000000) != 0 || (int)v11 <= (int)a4) {
    IOSArray_throwOutOfBoundsWithMsg(v11, a4);
  }
  IOSObjectArray_Set((uint64_t)v9, (int)a2, *(void **)&v9[2 * (int)a4 + 6]);
  unsigned int v54 = a5 - 1;
  if (a5 == 1)
  {
    int v16 = v57;
    uint64_t v17 = 0;
    int v18 = v9;
    uint64_t v19 = (a2 + 1);
LABEL_10:
    return JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v16, v17, v18, v19, v7);
  }
  uint64_t v12 = (a4 + 1);
  if (v7 != 1)
  {
    int v55 = *(void **)(a1 + 16);
    if (v55)
    {
      uint64_t v21 = 0;
      int v56 = *(_DWORD *)(a1 + 24);
      uint64_t v22 = (uint64_t)v57;
LABEL_15:
      LODWORD(v23) = 0;
      int v24 = 0;
      int v25 = v10;
      do
      {
        uint64_t v26 = v9[2];
        if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v26) {
          IOSArray_throwOutOfBoundsWithMsg(v26, v12);
        }
        if (!v22) {
          goto LABEL_75;
        }
        int v53 = v24;
        uint64_t v27 = (int)v12;
        uint64_t v28 = (uint64_t)v9;
        uint64_t v29 = *(void *)&v9[2 * (int)v12 + 6];
        uint64_t v30 = *(unsigned int *)(v22 + 8);
        if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v30) {
          IOSArray_throwOutOfBoundsWithMsg(v30, v21);
        }
        uint64_t v31 = (int)v21;
        uint64_t v32 = v22;
        unsigned int v33 = [v55 compareWithId:v29 withId:*(void *)(v22 + 24 + 8 * (int)v21)];
        uint64_t v10 = (v25 + 1);
        if ((v33 & 0x80000000) != 0)
        {
          uint64_t v9 = (unsigned int *)v28;
          uint64_t v36 = *(unsigned int *)(v28 + 8);
          if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v36) {
            IOSArray_throwOutOfBoundsWithMsg(v36, v12);
          }
          uint64_t v12 = (v12 + 1);
          IOSObjectArray_Set(v28, v25, *(void **)(v28 + 24 + 8 * v27));
          uint64_t v23 = 0;
          if (!--v54) {
            goto LABEL_63;
          }
          int v24 = v53 + 1;
        }
        else
        {
          uint64_t v34 = *(unsigned int *)(v32 + 8);
          if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v34) {
            IOSArray_throwOutOfBoundsWithMsg(v34, v21);
          }
          uint64_t v21 = (v21 + 1);
          uint64_t v35 = *(void **)(v32 + 24 + 8 * v31);
          uint64_t v9 = (unsigned int *)v28;
          IOSObjectArray_Set(v28, v25, v35);
          uint64_t v7 = (v7 - 1);
          if (v7 == 1)
          {
LABEL_59:
            int v48 = v56;
            if (v56 <= 1) {
              int v48 = 1;
            }
            *(_DWORD *)(a1 + 24) = v48;
            uint64_t v42 = v10;
            uint64_t v23 = v54;
LABEL_69:
            JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, v12, v9, v42, v23);
            uint64_t v13 = (int)v23 + (int)v42;
            uint64_t v50 = v57[2];
            if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v50) {
              IOSArray_throwOutOfBoundsWithMsg(v50, (int)v21);
            }
            int v15 = *(void **)&v57[2 * (int)v21 + 6];
            goto LABEL_72;
          }
          int v24 = 0;
          LODWORD(v23) = v23 + 1;
        }
        uint64_t v22 = (uint64_t)v57;
        ++v25;
      }
      while ((int)(v24 | v23) < v56);
      while (1)
      {
        uint64_t v37 = v9[2];
        if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v37) {
          IOSArray_throwOutOfBoundsWithMsg(v37, v12);
        }
        uint64_t v38 = (int)v12;
        int v39 = (void *)v22;
        uint64_t v40 = sub_100247824(*(void *)&v9[2 * (int)v12 + 6], v22, v21, v7, 0, v55);
        if (v40)
        {
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v39, v21, v9, v10, v40);
          uint64_t v10 = (v40 + v10);
          uint64_t v21 = (v40 + v21);
          uint64_t v7 = (v7 - v40);
          if ((int)v7 < 2) {
            break;
          }
        }
        uint64_t v41 = v9[2];
        if ((v12 & 0x80000000) != 0 || (int)v12 >= (int)v41) {
          IOSArray_throwOutOfBoundsWithMsg(v41, v12);
        }
        uint64_t v42 = (v10 + 1);
        uint64_t v12 = (v12 + 1);
        IOSObjectArray_Set((uint64_t)v9, (int)v10, *(void **)&v9[2 * v38 + 6]);
        unsigned int v43 = v54 - 1;
        if (v54 == 1) {
          goto LABEL_57;
        }
        uint64_t v44 = v57[2];
        if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v44) {
          IOSArray_throwOutOfBoundsWithMsg(v44, v21);
        }
        uint64_t v45 = (int)v21;
        uint64_t v46 = sub_100247568(*(void *)&v57[2 * (int)v21 + 6], (uint64_t)v9, v12, v54 - 1, 0, v55);
        if (v46)
        {
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, v12, v9, (v10 + 1), v46);
          uint64_t v42 = (v46 + v42);
          uint64_t v12 = (v46 + v12);
          v43 -= v46;
          if (!v43)
          {
LABEL_57:
            uint64_t v23 = 0;
            goto LABEL_64;
          }
        }
        unsigned int v54 = v43;
        uint64_t v47 = v57[2];
        if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)v47) {
          IOSArray_throwOutOfBoundsWithMsg(v47, v21);
        }
        uint64_t v10 = (v42 + 1);
        uint64_t v21 = (v21 + 1);
        IOSObjectArray_Set((uint64_t)v9, (int)v42, *(void **)&v57[2 * v45 + 6]);
        uint64_t v7 = (v7 - 1);
        if (v7 == 1) {
          goto LABEL_59;
        }
        --v56;
        uint64_t v22 = (uint64_t)v57;
        if ((int)v40 <= 6 && (int)v46 <= 6)
        {
          int v56 = (v56 & ~(v56 >> 31)) + 2;
          goto LABEL_15;
        }
      }
      uint64_t v23 = v54;
LABEL_63:
      uint64_t v42 = v10;
LABEL_64:
      int v16 = v57;
      int v49 = v56;
      if (v56 <= 1) {
        int v49 = 1;
      }
      *(_DWORD *)(a1 + 24) = v49;
      if (v7 == 1) {
        goto LABEL_69;
      }
      if (!v7)
      {
        int v51 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Comparison method violates its general contract!");
        objc_exception_throw(v51);
      }
      uint64_t v17 = v21;
      int v18 = v9;
      uint64_t v19 = v42;
      goto LABEL_10;
    }
LABEL_75:
    JreThrowNullPointerException();
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, (a4 + 1), v9, (a2 + 1), v54);
  if (!v57) {
    goto LABEL_75;
  }
  uint64_t v13 = a5 + (int)a2;
  uint64_t v14 = v57[2];
  if ((int)v14 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v14, 0);
  }
  int v15 = (void *)*((void *)v57 + 3);
LABEL_72:
  return IOSObjectArray_Set((uint64_t)v9, v13, v15);
}

id sub_100248158(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(a1 + 8);
  uint64_t v11 = (unsigned int *)sub_100248804(a1, a5);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v10, a4, v11, 0, a5);
  if (!v10) {
    goto LABEL_77;
  }
  unsigned int v65 = a2;
  int v12 = a3 + a2;
  uint64_t v13 = (v12 - 1);
  uint64_t v14 = (uint64_t)v10;
  int v15 = a5 + a4;
  uint64_t v16 = (int)a5 + (int)a4 - 1;
  int v73 = (unsigned int *)v14;
  uint64_t v17 = *(unsigned int *)(v14 + 8);
  if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v17) {
    IOSArray_throwOutOfBoundsWithMsg(v17, v13);
  }
  uint64_t v18 = (a5 - 1);
  int v19 = v15 - 2;
  int v20 = (unsigned int *)v14;
  IOSObjectArray_Set(v14, v16, *(void **)(v14 + 24 + 8 * (int)v13));
  unsigned int v66 = a3 - 1;
  if (a3 != 1)
  {
    int v21 = v19;
    if (a5 == 1)
    {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v73, v65, v73, v19 - v66 + 1, v66);
      if (v11)
      {
        uint64_t v22 = (int)(v19 - v66);
        uint64_t v23 = v11[2];
        if ((int)v18 >= (int)v23) {
          IOSArray_throwOutOfBoundsWithMsg(v23, 0);
        }
LABEL_74:
        unsigned int v63 = *(void **)&v11[2 * v18 + 6];
        return IOSObjectArray_Set((uint64_t)v73, v22, v63);
      }
    }
    else
    {
      char v68 = *(void **)(a1 + 16);
      if (v68 && v11)
      {
        unsigned int v72 = a5;
        uint64_t v29 = (v12 - 2);
        int v69 = *(_DWORD *)(a1 + 24);
        uint64_t v30 = v18;
        int v31 = v21;
LABEL_16:
        int v32 = 0;
        LODWORD(v33) = 0;
        int v34 = v31;
        do
        {
          int v67 = v32;
          int v70 = v33;
          uint64_t v35 = v11[2];
          if ((v30 & 0x80000000) != 0 || (int)v30 >= (int)v35) {
            IOSArray_throwOutOfBoundsWithMsg(v35, v30);
          }
          uint64_t v36 = (int)v30;
          uint64_t v37 = v20[2];
          if ((v29 & 0x80000000) != 0 || (int)v29 >= (int)v37) {
            IOSArray_throwOutOfBoundsWithMsg(v37, v29);
          }
          uint64_t v38 = (int)v29;
          if (([v68 compareWithId:*(void *)&v11[2 * (int)v30 + 6] withId:*(void *)&v73[2 * (int)v29 + 6]] & 0x80000000) != 0)
          {
            uint64_t v40 = v73[2];
            if ((v29 & 0x80000000) != 0 || (int)v29 >= (int)v40) {
              IOSArray_throwOutOfBoundsWithMsg(v40, v29);
            }
            uint64_t v29 = (v29 - 1);
            uint64_t v41 = *(void **)&v73[2 * v38 + 6];
            int v20 = v73;
            IOSObjectArray_Set((uint64_t)v73, v34, v41);
            uint64_t v33 = 0;
            BOOL v42 = v66-- == 1;
            int v31 = v34 - 1;
            if (v42) {
              goto LABEL_67;
            }
            int v32 = v67 + 1;
          }
          else
          {
            uint64_t v39 = v11[2];
            if ((v30 & 0x80000000) != 0 || (int)v30 >= (int)v39) {
              IOSArray_throwOutOfBoundsWithMsg(v39, v30);
            }
            uint64_t v30 = (v30 - 1);
            int v20 = v73;
            IOSObjectArray_Set((uint64_t)v73, v34, *(void **)&v11[2 * v36 + 6]);
            if (--v72 == 1)
            {
              uint64_t v43 = v66;
              int v31 = v34 - 1;
LABEL_61:
              int v59 = v69;
              if (v69 <= 1) {
                int v59 = 1;
              }
              *(_DWORD *)(a1 + 24) = v59;
              uint64_t v33 = v43;
              goto LABEL_72;
            }
            int v32 = 0;
            LODWORD(v33) = v70 + 1;
            int v31 = v34 - 1;
          }
          int v34 = v31;
        }
        while ((int)(v33 | v32) < v69);
        uint64_t v43 = v66;
        while (1)
        {
          uint64_t v44 = v11[2];
          if ((v30 & 0x80000000) != 0 || (int)v30 >= (int)v44) {
            IOSArray_throwOutOfBoundsWithMsg(v44, v30);
          }
          uint64_t v45 = (int)v30;
          uint64_t v46 = sub_100247824(*(void *)&v11[2 * (int)v30 + 6], (uint64_t)v20, v65, v43, (int)v43 - 1, v68);
          uint64_t v47 = (v43 - v46);
          if (v43 != v46)
          {
            uint64_t v48 = v46;
            v31 -= v47;
            uint64_t v29 = (v29 - v47);
            JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v20, (v29 + 1), v20, (v31 + 1), v47);
            if (!v48)
            {
              uint64_t v33 = 0;
              goto LABEL_67;
            }
            uint64_t v43 = v48;
          }
          int v71 = v47;
          uint64_t v49 = v11[2];
          if ((v30 & 0x80000000) != 0 || (int)v30 >= (int)v49) {
            IOSArray_throwOutOfBoundsWithMsg(v49, v30);
          }
          int v50 = v31 - 1;
          uint64_t v30 = (v30 - 1);
          IOSObjectArray_Set((uint64_t)v20, v31, *(void **)&v11[2 * v45 + 6]);
          unsigned int v51 = v72 - 1;
          if (v72 == 2)
          {
            --v31;
            goto LABEL_61;
          }
          uint64_t v52 = v43;
          uint64_t v53 = v20[2];
          if ((v29 & 0x80000000) != 0 || (int)v29 >= (int)v53) {
            IOSArray_throwOutOfBoundsWithMsg(v53, v29);
          }
          uint64_t v54 = (int)v29;
          int v55 = sub_100247568(*(void *)&v20[2 * (int)v29 + 6], (uint64_t)v11, 0, v72 - 1, v72 - 2, v68);
          --v72;
          uint64_t v56 = v51 - v55;
          if (v56)
          {
            int v57 = v55;
            v50 -= v56;
            uint64_t v30 = (v30 - v56);
            JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v11, (v30 + 1), v20, (v50 + 1), v56);
            unsigned int v72 = v57;
            if (v57 < 2) {
              break;
            }
          }
          uint64_t v58 = v20[2];
          if ((v29 & 0x80000000) != 0 || (int)v29 >= (int)v58) {
            IOSArray_throwOutOfBoundsWithMsg(v58, v29);
          }
          uint64_t v29 = (v29 - 1);
          IOSObjectArray_Set((uint64_t)v20, v50, *(void **)&v20[2 * v54 + 6]);
          uint64_t v43 = (v52 - 1);
          if (v52 == 1)
          {
            uint64_t v33 = 0;
            int v31 = v50 - 1;
            goto LABEL_67;
          }
          --v69;
          int v31 = v50 - 1;
          if (v71 <= 6 && (int)v56 <= 6)
          {
            unsigned int v66 = v43;
            int v69 = (v69 & ~(v69 >> 31)) + 2;
            goto LABEL_16;
          }
        }
        uint64_t v33 = v52;
        unsigned int v72 = v57;
        int v31 = v50;
LABEL_67:
        int v60 = v69;
        if (v69 <= 1) {
          int v60 = 1;
        }
        *(_DWORD *)(a1 + 24) = v60;
        if (v72 != 1)
        {
          if (!v72)
          {
            unint64_t v64 = new_JavaLangIllegalArgumentException_initWithNSString_(@"Comparison method violates its general contract!");
            objc_exception_throw(v64);
          }
          uint64_t v27 = v72;
          uint64_t v24 = v31 - v72 + 1;
          int v25 = v11;
          uint64_t v26 = v20;
          goto LABEL_10;
        }
LABEL_72:
        int v61 = v31 - v33;
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v73, (v29 - v33 + 1), v73, (v31 - v33 + 1), v33);
        uint64_t v22 = v61;
        uint64_t v18 = (int)v30;
        uint64_t v62 = v11[2];
        if ((v30 & 0x80000000) != 0 || (int)v30 >= (int)v62) {
          IOSArray_throwOutOfBoundsWithMsg(v62, (int)v30);
        }
        goto LABEL_74;
      }
    }
LABEL_77:
    JreThrowNullPointerException();
  }
  uint64_t v24 = (v19 - v18);
  int v25 = v11;
  uint64_t v26 = v73;
  uint64_t v27 = a5;
LABEL_10:
  return JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v25, 0, v26, v24, v27);
}

id sub_100248804(uint64_t a1, int a2)
{
  uint64_t v3 = (id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(v2 + 8) >= a2) {
    return (id)v2;
  }
  int v4 = a2 | (a2 >> 1) | ((a2 | (a2 >> 1)) >> 2);
  int v5 = v4 | (v4 >> 4) | ((v4 | (v4 >> 4)) >> 8);
  uint64_t v6 = (v5 | (v5 >> 16)) + 1;
  if ((int)v6 >= 0)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7)
    {
      a2 = JavaLangMath_minWithInt_withInt_(v6, *(_DWORD *)(v7 + 8) >> 1);
      goto LABEL_6;
    }
LABEL_10:
    JreThrowNullPointerException();
  }
LABEL_6:
  int v8 = +[IOSObjectArray arrayWithLength:a2 type:NSObject_class_()];
  objc_opt_class();
  if (v8 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  JreStrongAssign(v3, v8);
  return *v3;
}

JavaLangClassNotFoundException *new_JavaLangClassNotFoundException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangClassNotFoundException alloc];
  JavaLangReflectiveOperationException_initWithNSString_withJavaLangThrowable_(v2, a1, 0);
  return v2;
}

_DWORD *sub_100248B28(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_100248FA4(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, 2 * a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_100249478(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_100249A84(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, 2 * a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_100249EE8(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, 4 * a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_10024A34C(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, 8 * a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_10024A7B0(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, 4 * a1, 0);
  result[2] = a1;
  return result;
}

_DWORD *sub_10024AC18(unsigned int a1)
{
  if ((a1 & 0x80000000) != 0) {
    objc_exception_throw(objc_alloc_init(JavaLangNegativeArraySizeException));
  }
  uint64_t v2 = (objc_class *)objc_opt_class();
  id result = NSAllocateObject(v2, 8 * a1, 0);
  result[2] = a1;
  return result;
}

id JavaLangStringBuilder_initWithNSString_(void *a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaLangAbstractStringBuilder_initWithInt_((uint64_t)a1, [a2 length] + 16);
  return [a1 appendWithNSString:a2];
}

JavaLangStringBuilder *new_JavaLangStringBuilder_init()
{
  uint64_t v0 = [JavaLangStringBuilder alloc];
  JavaLangAbstractStringBuilder_init((uint64_t)v0);
  return v0;
}

JavaLangStringBuilder *new_JavaLangStringBuilder_initWithInt_(unsigned int a1)
{
  uint64_t v2 = [JavaLangStringBuilder alloc];
  JavaLangAbstractStringBuilder_initWithInt_((uint64_t)v2, a1);
  return v2;
}

JavaLangStringBuilder *new_JavaLangStringBuilder_initWithJavaLangCharSequence_(void *a1)
{
  uint64_t v2 = [JavaLangStringBuilder alloc];
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  JavaLangStringBuilder_initWithNSString_(v2, [a1 description]);
  return v3;
}

JavaLangStringBuilder *new_JavaLangStringBuilder_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaLangStringBuilder alloc];
  JavaLangStringBuilder_initWithNSString_(v2, a1);
  return v2;
}

CFStringRef JavaLangRealToString_doubleToStringWithDouble_(double a1)
{
  return RealToString_convertDouble(0, a1);
}

CFStringRef JavaLangRealToString_appendDoubleWithJavaLangAbstractStringBuilder_withDouble_(uint64_t a1, double a2)
{
  return RealToString_convertDouble(a1 + 8, a2);
}

CFStringRef JavaLangRealToString_floatToStringWithFloat_(float a1)
{
  return RealToString_convertFloat(0, a1);
}

CFStringRef JavaLangRealToString_appendFloatWithJavaLangAbstractStringBuilder_withFloat_(uint64_t a1, float a2)
{
  return RealToString_convertFloat(a1 + 8, a2);
}

void *JavaUtilConcurrentLocksReentrantLock_init(uint64_t a1)
{
  int v1 = (id *)(a1 + 8);
  uint64_t v2 = [JavaUtilConcurrentLocksReentrantLock_NonfairSync alloc];
  JavaUtilConcurrentLocksAbstractQueuedSynchronizer_init(v2, v3);
  return JreStrongAssignAndConsume(v1, v2);
}

id JavaUtilConcurrentLocksReentrantLock_initWithBoolean_(uint64_t a1, int a2)
{
  uint64_t v3 = off_1003F0F30;
  if (!a2) {
    uint64_t v3 = off_1003F0F38;
  }
  id v4 = objc_alloc(*v3);
  JavaUtilConcurrentLocksAbstractQueuedSynchronizer_init(v4, v5);
  id v6 = v4;
  return JreStrongAssign((id *)(a1 + 8), v6);
}

uint64_t sub_10024BE80(void *a1, uint64_t a2)
{
  id v4 = JavaLangThread_currentThread();
  unsigned int v5 = [a1 getState];
  if (v5)
  {
    unsigned int v6 = v5;
    if (v4 != [a1 getExclusiveOwnerThread]) {
      return 0;
    }
    if ((int)(v6 + a2) < 0)
    {
      uint64_t v9 = new_JavaLangError_initWithNSString_(@"Maximum lock count exceeded");
      objc_exception_throw(v9);
    }
    [a1 setStateWithInt:v6 + a2];
  }
  else
  {
    unsigned int v8 = [a1 compareAndSetStateWithInt:0 withInt:a2];
    uint64_t result = 0;
    if (!v8) {
      return result;
    }
    [a1 setExclusiveOwnerThreadWithJavaLangThread:v4];
  }
  return 1;
}

JavaIoFilePermission *new_JavaIoFilePermission_initWithNSString_withNSString_()
{
  uint64_t v0 = [JavaIoFilePermission alloc];
  JavaSecurityPermission_initWithNSString_(v0, &stru_10048C1F8);
  return v0;
}

id JavaNioChannelsSpiAbstractSelector_initWithJavaNioChannelsSpiSelectorProvider_(id *a1, void *a2)
{
  JavaNioChannelsSelector_init();
  id v4 = new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(1u);
  JreStrongAssignAndConsume(a1 + 1, v4);
  JreStrongAssign(a1 + 2, 0);
  unsigned int v5 = new_JavaUtilHashSet_init();
  JreStrongAssignAndConsume(a1 + 3, v5);
  unsigned int v6 = [JavaNioChannelsSpiAbstractSelector_WakeUpTask alloc];
  objc_storeWeak((id *)&v6->this$0_, a1);
  JreStrongAssignAndConsume(a1 + 4, v6);
  return JreStrongAssign(a1 + 2, a2);
}

void sub_10024CE0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaLangPackage_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_withNSString_withJavaNetURL_(id *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9)
{
  JreStrongAssign(a1 + 1, a2);
  JreStrongAssign(a1 + 2, a3);
  JreStrongAssign(a1 + 3, a4);
  JreStrongAssign(a1 + 4, a5);
  JreStrongAssign(a1 + 5, a6);
  JreStrongAssign(a1 + 6, a7);
  JreStrongAssign(a1 + 7, a8);
  return JreStrongAssign(a1 + 8, a9);
}

id JavaLangPackage_getPackageWithNSString_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangPackage__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t SystemClassLoader = (void *)JavaLangClassLoader_getSystemClassLoader();
  if (!SystemClassLoader) {
    JreThrowNullPointerException();
  }
  return [SystemClassLoader getPackageWithNSString:a1];
}

id JavaLangPackage_getPackages()
{
  if ((atomic_load_explicit(JavaLangPackage__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t SystemClassLoader = (void *)JavaLangClassLoader_getSystemClassLoader();
  if (!SystemClassLoader) {
    JreThrowNullPointerException();
  }
  return [SystemClassLoader getPackages];
}

uint64_t JavaLangPackage_class_()
{
  if ((atomic_load_explicit(JavaLangPackage__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_1005611D0 != -1) {
    dispatch_once(&qword_1005611D0, &stru_1004630E8);
  }
  return qword_1005611C8;
}

void sub_10024D5CC(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_1005611C8 = IOSClass_fromClass(v1);
}

JavaIoNotSerializableException *new_JavaIoNotSerializableException_init()
{
  uint64_t v0 = [JavaIoNotSerializableException alloc];
  JavaIoObjectStreamException_init(v0, v1);
  return v0;
}

void sub_10024D860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaLangDouble_compareWithDouble_withDouble_(double a1, double a2)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > a2) {
    return 1;
  }
  if (a2 > a1) {
    return 0xFFFFFFFFLL;
  }
  if (a1 != 0.0 && a1 == a2) {
    return 0;
  }
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v5 = *(void *)&a1;
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    uint64_t v5 = *(void *)&a1;
  }
  return (*(void *)&a2 >> 63) + (v5 >> 63);
}

uint64_t JavaLangDouble_doubleToLongBitsWithDouble_(double a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return *(void *)&a1;
}

uint64_t JavaLangDouble_doubleToRawLongBitsWithDouble_(double a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return *(void *)&a1;
}

BOOL JavaLangDouble_isInfiniteWithDouble_(double a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return fabs(a1) == INFINITY;
}

uint64_t JavaLangDouble_isNaNWithDouble_()
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return 0;
}

double JavaLangDouble_longBitsToDoubleWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return *(double *)&a1;
}

double JavaLangDouble_parseDoubleWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangStringToReal_parseDoubleWithNSString_(a1);
}

CFStringRef JavaLangDouble_toStringWithDouble_(double a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangRealToString_doubleToStringWithDouble_(a1);
}

JavaLangDouble *JavaLangDouble_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  double v2 = JavaLangDouble_parseDoubleWithNSString_(a1);
  return JavaLangDouble_valueOfWithDouble_(v2);
}

JavaLangDouble *JavaLangDouble_valueOfWithDouble_(double a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  double v2 = [JavaLangDouble alloc];
  v2->value_ = a1;
  return v2;
}

CFStringRef JavaLangDouble_toHexStringWithDouble_(double a1)
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 == INFINITY) {
    return @"Infinity";
  }
  if (a1 == -INFINITY) {
    return @"-Infinity";
  }
  uint64_t v3 = JavaLangDouble_doubleToLongBitsWithDouble_(a1);
  uint64_t v4 = v3;
  uint64_t v5 = ((unint64_t)v3 >> 52) & 0x7FF;
  unint64_t v6 = v3 & 0xFFFFFFFFFFFFFLL;
  if (!(v5 | v3 & 0xFFFFFFFFFFFFFLL))
  {
    if (v3 < 0) {
      return @"-0x0.0p0";
    }
    else {
      return @"0x0.0p0";
    }
  }
  uint64_t v7 = new_JavaLangStringBuilder_initWithInt_(0xAu);
  unsigned int v8 = v7;
  if (v4 < 0) {
    CFStringRef v9 = @"-0x";
  }
  else {
    CFStringRef v9 = @"0x";
  }
  [(JavaLangStringBuilder *)v7 appendWithNSString:v9];
  BOOL v11 = (v4 & 0xF) == 0 && v6 != 0;
  if (!v5)
  {
    [(JavaLangStringBuilder *)v8 appendWithNSString:@"0."];
    int v21 = 13;
    if (v11)
    {
      unint64_t v22 = v6;
      do
      {
        unint64_t v6 = v22 >> 4;
        --v21;
        if (v22 < 0x10) {
          break;
        }
        uint64_t v23 = v22 & 0xF0;
        v22 >>= 4;
      }
      while (!v23);
    }
    uint64_t v24 = JavaLangLong_toHexStringWithLong_(v6);
    int v25 = v24;
    if (v6)
    {
      if (!v24) {
        goto LABEL_48;
      }
      if (v21 > (int)[(NSString *)v24 length])
      {
        unsigned int v26 = [(NSString *)v25 length];
        if (v21 != v26)
        {
          unsigned int v27 = v26 - v21;
          do
          {
            [(JavaLangStringBuilder *)v8 appendWithChar:48];
            BOOL v19 = __CFADD__(v27++, 1);
          }
          while (!v19);
        }
      }
    }
    [(JavaLangStringBuilder *)v8 appendWithNSString:v25];
    CFStringRef v20 = @"p-1022";
    goto LABEL_45;
  }
  [(JavaLangStringBuilder *)v8 appendWithNSString:@"1."];
  int v12 = 13;
  if (v11)
  {
    unint64_t v13 = v6;
    do
    {
      unint64_t v6 = v13 >> 4;
      --v12;
      if (v13 < 0x10) {
        break;
      }
      uint64_t v14 = v13 & 0xF0;
      v13 >>= 4;
    }
    while (!v14);
  }
  int v15 = JavaLangLong_toHexStringWithLong_(v6);
  uint64_t v16 = v15;
  if (!v6) {
    goto LABEL_29;
  }
  if (!v15) {
LABEL_48:
  }
    JreThrowNullPointerException();
  if (v12 > (int)[(NSString *)v15 length])
  {
    unsigned int v17 = [(NSString *)v16 length];
    if (v12 != v17)
    {
      unsigned int v18 = v17 - v12;
      do
      {
        [(JavaLangStringBuilder *)v8 appendWithChar:48];
        BOOL v19 = __CFADD__(v18++, 1);
      }
      while (!v19);
    }
  }
LABEL_29:
  [(JavaLangStringBuilder *)v8 appendWithNSString:v16];
  [(JavaLangStringBuilder *)v8 appendWithChar:112];
  CFStringRef v20 = JavaLangLong_toStringWithLong_(v5 - 1023);
LABEL_45:
  [(JavaLangStringBuilder *)v8 appendWithNSString:v20];
  return (const __CFString *)[(JavaLangStringBuilder *)v8 description];
}

JavaLangDouble *new_JavaLangDouble_initWithDouble_(double a1)
{
  uint64_t result = [JavaLangDouble alloc];
  result->value_ = a1;
  return result;
}

uint64_t JavaLangDouble_class_()
{
  if ((atomic_load_explicit(JavaLangDouble__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_1005611E0 != -1) {
    dispatch_once(&qword_1005611E0, &stru_100463DE0);
  }
  return qword_1005611D8;
}

void sub_10024E508(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_1005611D8 = IOSClass_fromClass(v1);
}

id JavaNetHttpURLConnection_initWithJavaNetURL_(uint64_t a1, void *a2)
{
  JavaNetURLConnection_initWithJavaNetURL_(a1, a2);
  id result = JreStrongAssign((id *)(a1 + 64), @"GET");
  *(_DWORD *)(a1 + 72) = -1;
  *(unsigned char *)(a1 + 88) = byte_10055E0C8;
  *(_DWORD *)(a1 + 92) = -1;
  *(_DWORD *)(a1 + 96) = -1;
  *(void *)(a1 + 104) = -1;
  return result;
}

uint64_t JavaUtilSimpleTimeZone_initWithInt_withNSString_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_(_DWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12)
{
  int v17 = a2;
  JavaUtilTimeZone_init(a1, a2);
  a1[19] = 3600000;
  [a1 setIDWithNSString:a3];
  a1[6] = v17;
  if (a12 <= 0)
  {
    CFStringRef v34 = JreStrcat("$I", v19, v20, v21, v22, v23, v24, v25, @"Invalid daylightSavings: ");
    uint64_t v35 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v34);
    objc_exception_throw(v35);
  }
  a1[19] = a12;
  a1[8] = a4;
  a1[9] = a5;
  a1[10] = a6;
  a1[11] = a7;
  sub_10025060C((uint64_t)a1, v19, v20, v21, v22, v23, v24, v25);
  a1[12] = a8;
  a1[13] = a9;
  a1[14] = a10;
  a1[15] = a11;
  return sub_1002503C4((uint64_t)a1, v26, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_10024FC7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result >= 0xC)
  {
    unsigned int v8 = @"Invalid month: ";
    goto LABEL_8;
  }
  if ((a2 - 8) <= 0xFFFFFFF8)
  {
    unsigned int v8 = @"Invalid day of week: ";
    goto LABEL_8;
  }
  if (a3 >= 0x5265C00)
  {
    unsigned int v8 = @"Invalid time: ";
LABEL_8:
    CFStringRef v9 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, v8);
    uint64_t v10 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v9);
    objc_exception_throw(v10);
  }
  return result;
}

uint64_t sub_10024FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  if ((int)a2 < 1) {
    goto LABEL_11;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)JavaUtilGregorianCalendar__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaUtilGregorianCalendar_DaysInMonth_) {
    JreThrowNullPointerException();
  }
  uint64_t result = *(unsigned int *)(JavaUtilGregorianCalendar_DaysInMonth_ + 8);
  if ((a1 & 0x80000000) != 0 || (int)result <= (int)a1) {
    IOSArray_throwOutOfBoundsWithMsg(result, a1);
  }
  if (*(char *)(JavaUtilGregorianCalendar_DaysInMonth_ + 12 + (int)a1) < v8)
  {
LABEL_11:
    CFStringRef v11 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Invalid day of month: ");
    int v12 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v11);
    objc_exception_throw(v12);
  }
  return result;
}

void sub_10024FF58()
{
}

void sub_10025009C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002503C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = (unsigned int *)result;
  int v9 = *(_DWORD *)(result + 56);
  if (v9)
  {
    if (v9 < 0)
    {
      *(_DWORD *)(result + 56) = -v9;
      int v11 = *(_DWORD *)(result + 52);
      if (v11 < 0)
      {
        *(_DWORD *)(result + 52) = -v11;
        int v10 = 4;
      }
      else
      {
        int v10 = 3;
      }
    }
    else
    {
      int v10 = 2;
    }
  }
  else
  {
    int v10 = 1;
  }
  *(_DWORD *)(result + 68) = v10;
  int v12 = *(_DWORD *)(result + 36);
  if (v12) {
    LOBYTE(v12) = *(_DWORD *)(result + 52) != 0;
  }
  *(unsigned char *)(result + 72) = v12;
  if (*(_DWORD *)(result + 52))
  {
    uint64_t v13 = *(unsigned int *)(result + 48);
    if (v8[17] == 1) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = v8[14];
    }
    uint64_t result = sub_10024FC7C(v13, v14, v8[15], a4, a5, a6, a7, a8);
    if (v8[17] == 2)
    {
      if (v8[13] - 6 <= 0xFFFFFFF4)
      {
        CFStringRef v22 = JreStrcat("$I", v15, v16, v17, v18, v19, v20, v21, @"Day of week in month: ");
        uint64_t v23 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v22);
        objc_exception_throw(v23);
      }
    }
    else
    {
      uint64_t result = sub_10024FD04(v8[12], v8[13], v16, v17, v18, v19, v20, v21);
    }
  }
  if (v8[17] != 1) {
    --v8[14];
  }
  return result;
}

uint64_t sub_10025060C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = (unsigned int *)result;
  int v9 = *(_DWORD *)(result + 40);
  if (v9)
  {
    if (v9 < 0)
    {
      *(_DWORD *)(result + 40) = -v9;
      int v11 = *(_DWORD *)(result + 36);
      if (v11 < 0)
      {
        *(_DWORD *)(result + 36) = -v11;
        int v10 = 4;
      }
      else
      {
        int v10 = 3;
      }
    }
    else
    {
      int v10 = 2;
    }
  }
  else
  {
    int v10 = 1;
  }
  *(_DWORD *)(result + 64) = v10;
  int v12 = *(_DWORD *)(result + 36);
  if (v12) {
    LOBYTE(v12) = *(_DWORD *)(result + 52) != 0;
  }
  *(unsigned char *)(result + 72) = v12;
  if (*(_DWORD *)(result + 36))
  {
    uint64_t v13 = *(unsigned int *)(result + 32);
    if (v8[16] == 1) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = v8[10];
    }
    uint64_t result = sub_10024FC7C(v13, v14, v8[11], a4, a5, a6, a7, a8);
    if (v8[16] == 2)
    {
      if (v8[9] - 6 <= 0xFFFFFFF4)
      {
        CFStringRef v22 = JreStrcat("$I", v15, v16, v17, v18, v19, v20, v21, @"Day of week in month: ");
        uint64_t v23 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v22);
        objc_exception_throw(v23);
      }
    }
    else
    {
      uint64_t result = sub_10024FD04(v8[8], v8[9], v16, v17, v18, v19, v20, v21);
    }
  }
  if (v8[16] != 1) {
    --v8[10];
  }
  return result;
}

JavaUtilSimpleTimeZone *new_JavaUtilSimpleTimeZone_initWithInt_withNSString_(int a1, uint64_t a2)
{
  uint64_t v4 = [JavaUtilSimpleTimeZone alloc];
  JavaUtilTimeZone_init();
  v4->dstSavings_ = 3600000;
  [(JavaUtilTimeZone *)v4 setIDWithNSString:a2];
  v4->rawOffset_ = a1;
  return v4;
}

__CFString *sub_100250CF8(uint64_t a1, void *a2)
{
  id v4 = [(id)a1 charset];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (v4)
    {
      int v12 = new_JavaNioCharsetUnsupportedCharsetException_initWithNSString_((__CFString *)[v4 name]);
      objc_exception_throw(v12);
    }
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)(a1 + 36);
  if (v5)
  {
    if (!a2) {
      goto LABEL_18;
    }
    uint64_t v6 = *(unsigned int *)(v5 + 8);
    uint64_t v7 = +[IOSByteArray arrayWithLength:](IOSByteArray, "arrayWithLength:", (int)([a2 remaining] + v6));
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 36), 0, v7, 0, *(unsigned int *)(*(void *)(a1 + 36) + 8));
    JreStrongAssign((id *)(a1 + 36), 0);
    if (!v7) {
      goto LABEL_18;
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_18;
    }
    uint64_t v7 = +[IOSByteArray arrayWithLength:](IOSByteArray, "arrayWithLength:", (int)[a2 remaining]);
    uint64_t v6 = 0;
    if (!v7) {
      goto LABEL_18;
    }
  }
  [a2 getWithByteArray:v7 withInt:v6 withInt:(v7->super.size_ - v6)];
  objc_opt_class();
  if (!v4) {
    goto LABEL_18;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  int v8 = (__CFString *)sub_100250EE0((uint64_t)v7, (uint64_t)[v4 nsEncoding]);
  if (!v8) {
LABEL_18:
  }
    JreThrowNullPointerException();
  int v9 = v8;
  if ([(__CFString *)v8 isEmpty]) {
    int v10 = v7;
  }
  else {
    int v10 = 0;
  }
  JreStrongAssign((id *)(a1 + 36), v10);
  return v9;
}

CFStringRef sub_100250EE0(uint64_t a1, uint64_t a2)
{
  CFStringRef result = (const __CFString *)[objc_alloc((Class)NSString) initWithBytes:a1 + 12 length:*(int *)(a1 + 8) encoding:a2];
  if (!result) {
    return &stru_10048C1F8;
  }
  return result;
}

JavaNioCharsetIOSCharsetDecoder *new_JavaNioCharsetIOSCharsetDecoder_initWithJavaNioCharsetCharset_(void *a1)
{
  double v2 = [JavaNioCharsetIOSCharsetDecoder alloc];
  JavaNioCharsetCharsetDecoder_initWithJavaNioCharsetCharset_withFloat_withFloat_((uint64_t)v2, a1, 1.0, 4.0);
  return v2;
}

JavaNioBufferUnderflowException *new_JavaNioBufferUnderflowException_init()
{
  uint64_t v0 = [JavaNioBufferUnderflowException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

uint64_t JavaUtilResourceBundle_init(uint64_t result)
{
  *(void *)(result + 24) = 0;
  return result;
}

JavaUtilPropertyResourceBundle *JavaUtilResourceBundle_getBundleWithNSString_(__CFString *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t SystemClassLoader = (__CFString *)JavaLangClassLoader_getSystemClassLoader();
  if (!SystemClassLoader) {
    uint64_t SystemClassLoader = (__CFString *)+[JavaUtilResourceBundle getLoader]_0();
  }
  uint64_t Default = (JavaUtilLocale *)JavaUtilLocale_getDefault();
  return JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_(a1, Default, SystemClassLoader);
}

JavaUtilPropertyResourceBundle *JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_(__CFString *a1, JavaUtilLocale *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t SystemClassLoader = (__CFString *)JavaLangClassLoader_getSystemClassLoader();
  if (!SystemClassLoader) {
    uint64_t SystemClassLoader = (__CFString *)+[JavaUtilResourceBundle getLoader]_0();
  }
  return JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_(a1, a2, SystemClassLoader);
}

JavaUtilPropertyResourceBundle *JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_(__CFString *a1, JavaUtilLocale *a2, __CFString *a3)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire))
  {
    if (a3) {
      goto LABEL_3;
    }
LABEL_15:
    CFStringRef v15 = @"loader == null";
    goto LABEL_17;
  }
  objc_opt_class();
  if (!a3) {
    goto LABEL_15;
  }
LABEL_3:
  if (!a1)
  {
    CFStringRef v15 = @"bundleName == null";
LABEL_17:
    uint64_t v16 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v15);
    objc_exception_throw(v16);
  }
  uint64_t Default = (JavaUtilLocale *)JavaUtilLocale_getDefault();
  if (!qword_100561208) {
    goto LABEL_13;
  }
  if (([(id)qword_100561208 isEqual:Default] & 1) == 0)
  {
    if (!qword_100561200) {
      goto LABEL_13;
    }
    [(id)qword_100561200 clear];
    JreStrongAssign((id *)&qword_100561208, Default);
  }
  if (!a2) {
LABEL_13:
  }
    JreThrowNullPointerException();
  if ([(JavaUtilLocale *)a2 isEqual:Default] || (CFStringRef result = sub_100251BBC(0, a1, a2, a3)) == 0)
  {
    CFStringRef result = sub_100251BBC(1, a1, Default, a3);
    if (!result)
    {
      uint64_t v17 = (__CFString *)JreStrcat("$C@", v8, v9, v10, v11, v12, v13, v14, a1);
      sub_100251300(v17, &stru_10048C1F8, v18, v19, v20, v21, v22, v23);
    }
  }
  return result;
}

void sub_100251300(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  CFStringRef v10 = JreStrcat("$$$$C", (uint64_t)a2, a3, a4, a5, a6, a7, a8, @"Can't find resource for bundle '");
  uint64_t v11 = new_JavaUtilMissingResourceException_initWithNSString_withNSString_withNSString_((uint64_t)v10, a1, a2);
  objc_exception_throw(v11);
}

void *JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilResourceBundle_Control_(uint64_t a1, void *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t Default = JavaUtilLocale_getDefault();
  id v5 = +[JavaUtilResourceBundle getLoader]_0();
  return JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_withJavaUtilResourceBundle_Control_(a1, Default, (uint64_t)v5, a2);
}

void *JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaUtilResourceBundle_Control_(uint64_t a1, uint64_t a2, void *a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v6 = +[JavaUtilResourceBundle getLoader]_0();
  return JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_withJavaUtilResourceBundle_Control_(a1, a2, (uint64_t)v6, a3);
}

void *JavaUtilResourceBundle_getBundleWithNSString_withJavaUtilLocale_withJavaLangClassLoader_withJavaUtilResourceBundle_Control_(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire))
  {
    if (!a4) {
      goto LABEL_17;
    }
  }
  else
  {
    objc_opt_class();
    if (!a4) {
      goto LABEL_17;
    }
  }
  id v8 = [a4 toBundleNameWithNSString:a1 withJavaUtilLocale:a2];
  if (a3) {
    CFStringRef v9 = (const __CFString *)a3;
  }
  else {
    CFStringRef v9 = @"null";
  }
  CFStringRef v10 = sub_100251F74((uint64_t)v9);
  if (!v10) {
LABEL_17:
  }
    JreThrowNullPointerException();
  uint64_t v11 = v10;
  uint64_t v12 = [(JavaUtilHashtable *)v10 getWithId:v8];
  if (v12
    && ((id v13 = [a4 getTimeToLiveWithNSString:a1 withJavaUtilLocale:a2], v13 == (id)-2)
     || !v13
     || (uint64_t v21 = (uint64_t)v13 + v12[3], v21 < JavaLangSystem_currentTimeMillis())))
  {
    if ((void *)qword_1005611F0 == v12)
    {
LABEL_19:
      uint64_t v24 = (__CFString *)JreStrcat("$C@", v14, v15, v16, v17, v18, v19, v20, v8);
      uint64_t v25 = new_JavaUtilMissingResourceException_initWithNSString_withNSString_withNSString_(0, v24, off_10055E0D8);
      objc_exception_throw(v25);
    }
  }
  else
  {
    uint64_t v22 = sub_10025163C(a1, a2, a3, a4, v12 != 0, (uint64_t)v12);
    if (!v22)
    {
      [(JavaUtilHashtable *)v11 putWithId:v8 withId:qword_1005611F0];
      goto LABEL_19;
    }
    uint64_t v12 = (void *)v22;
    [(JavaUtilHashtable *)v11 putWithId:v8 withId:v22];
    v12[3] = JavaLangSystem_currentTimeMillis();
  }
  return v12;
}

uint64_t sub_10025163C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a4) {
      goto LABEL_3;
    }
LABEL_37:
    JreThrowNullPointerException();
  }
  if (!a4) {
    goto LABEL_37;
  }
LABEL_3:
  obid j = [a4 getCandidateLocalesWithNSString:a1 withJavaUtilLocale:a2];
  if (!obj) {
    goto LABEL_38;
  }
  id v10 = [a4 getFormatsWithNSString:a1];
  if ((atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((id)JavaUtilResourceBundle_Control_FORMAT_CLASS_ == v10) {
    goto LABEL_38;
  }
  if ((atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((id)JavaUtilResourceBundle_Control_FORMAT_PROPERTIES_ == v10) {
    goto LABEL_38;
  }
  if ((atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((id)JavaUtilResourceBundle_Control_FORMAT_DEFAULT_ == v10)
  {
LABEL_38:
    uint64_t v19 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v19);
  }
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v24 = [obj countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v24)
  {
    uint64_t v23 = *(void *)v32;
    do
    {
      uint64_t v25 = 0;
      uint64_t v11 = v10;
      do
      {
        if (*(void *)v32 != v23)
        {
          objc_enumerationMutation(obj);
          uint64_t v11 = v10;
        }
        uint64_t v12 = *(void *)(*((void *)&v31 + 1) + 8 * (void)v25);
        long long v27 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        if (!v11) {
          JreThrowNullPointerException();
        }
        id v13 = [v11 countByEnumeratingWithState:&v27 objects:v35 count:16];
        if (v13)
        {
          uint64_t v14 = *(void *)v28;
LABEL_21:
          uint64_t v15 = 0;
          while (1)
          {
            if (*(void *)v28 != v14) {
              objc_enumerationMutation(v10);
            }
            if (a5
               ? objc_msgSend(a4, "newBundleWithNSString:withJavaUtilLocale:withNSString:withJavaLangClassLoader:withBoolean:", a1, v12, *(void *)(*((void *)&v27 + 1) + 8 * v15), a3, objc_msgSend(a4, "needsReloadWithNSString:withJavaUtilLocale:withNSString:withJavaLangClassLoader:withJavaUtilResourceBundle:withLong:", a1, v12, *(void *)(*((void *)&v27 + 1) + 8 * v15), a3, a6, JavaLangSystem_currentTimeMillis())): objc_msgSend(a4, "newBundleWithNSString:withJavaUtilLocale:withNSString:withJavaLangClassLoader:withBoolean:",
                   a1,
                   v12,
                   *(void *)(*((void *)&v27 + 1) + 8 * v15),
                   a3,
                   0))
            {
              break;
            }
            if (v13 == (id)++v15)
            {
              id v13 = [v10 countByEnumeratingWithState:&v27 objects:v35 count:16];
              if (v13) {
                goto LABEL_21;
              }
              break;
            }
          }
        }
        uint64_t v25 = (char *)v25 + 1;
        uint64_t v11 = v10;
      }
      while (v25 != v24);
      id v24 = [obj countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v24);
  }
  uint64_t v21 = 0;
  id v17 = [a4 getFallbackLocaleWithNSString:a1 withJavaUtilLocale:a2];
  if (v17) {
    return sub_10025163C(a1, v17, a3, a4, a5, a6);
  }
  return v21;
}

id sub_100251ABC(void *a1, void *a2)
{
  while (1)
  {
    uint64_t v3 = a1;
    id result = [a1 handleGetObjectWithNSString:a2];
    if (result) {
      break;
    }
    a1 = (void *)v3[1];
    if (!a1)
    {
      id v5 = objc_msgSend(objc_msgSend(v3, "getClass"), "getName");
      sub_100251300(v5, a2, v6, v7, v8, v9, v10, v11);
    }
  }
  return result;
}

JavaUtilPropertyResourceBundle *sub_100251BBC(char a1, __CFString *a2, JavaUtilLocale *a3, __CFString *a4)
{
  if (a4) {
    CFStringRef v7 = a4;
  }
  else {
    CFStringRef v7 = @"null";
  }
  while (1)
  {
    if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire))
    {
      if (!a3) {
        goto LABEL_50;
      }
    }
    else
    {
      objc_opt_class();
      if (!a3) {
        goto LABEL_50;
      }
    }
    uint64_t v8 = [(JavaUtilLocale *)a3 description];
    if (!v8) {
      goto LABEL_50;
    }
    uint64_t v16 = a2;
    if (![(NSString *)v8 isEmpty]) {
      uint64_t v16 = (__CFString *)JreStrcat("$C$", v9, v10, v11, v12, v13, v14, v15, a2);
    }
    id v17 = sub_100251F74((uint64_t)v7);
    if (!v17) {
      goto LABEL_50;
    }
    uint64_t v18 = v17;
    id v19 = [(JavaUtilHashtable *)v17 getWithId:v16];
    if (!v19) {
      break;
    }
    if (v19 == (id)qword_1005611F8) {
      return 0;
    }
    if (v19 != (id)qword_1005611F0 || (a1 & 1) == 0)
    {
      if (v19 == (id)qword_1005611F0) {
        return 0;
      }
      else {
        return (JavaUtilPropertyResourceBundle *)v19;
      }
    }
    a3 = sub_10025205C(a3);
    a1 = 1;
    if (!a3) {
      return 0;
    }
  }
  uint64_t v20 = (void *)IOSClass_forName_initialize_classLoader_(v16, 1, a4);
  if ([(id)JavaUtilResourceBundle_class_() isAssignableFrom:v20])
  {
    if (!v20) {
      JreThrowNullPointerException();
    }
    uint64_t v21 = (JavaUtilPropertyResourceBundle *)[v20 newInstance];
    objc_opt_class();
    if (v21)
    {
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        JreThrowClassCastException();
      }
      JreStrongAssign((id *)&v21->super.locale_, a3);
      uint64_t v22 = sub_10025205C(a3);
LABEL_34:
      if (v22)
      {
        uint64_t v35 = sub_100251BBC(a1 & 1, a2, v22, a4);
        if (v35) {
          [(JavaUtilResourceBundle *)v21 setParentWithJavaUtilResourceBundle:v35];
        }
      }
      goto LABEL_44;
    }
  }
  id v23 = [(__CFString *)v16 replace:46 withChar:47];
  CFStringRef v31 = JreStrcat("$$", v24, v25, v26, v27, v28, v29, v30, v23);
  if (a4) {
    id SystemResourceAsStreamWithNSString = [(__CFString *)a4 getResourceAsStreamWithNSString:v31];
  }
  else {
    id SystemResourceAsStreamWithNSString = JavaLangClassLoader_getSystemResourceAsStreamWithNSString_((uint64_t)v31);
  }
  long long v33 = SystemResourceAsStreamWithNSString;
  if (SystemResourceAsStreamWithNSString)
  {
    if ((atomic_load_explicit(JavaNioCharsetCharsets__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    long long v34 = new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(v33, (void *)JavaNioCharsetCharsets_UTF_8_);
    uint64_t v21 = new_JavaUtilPropertyResourceBundle_initWithJavaIoReader_((uint64_t)v34);
    JreStrongAssign((id *)&v21->super.locale_, a3);
    LibcoreIoIoUtils_closeQuietlyWithJavaLangAutoCloseable_(v33);
    uint64_t v22 = sub_10025205C(a3);
    if (v21) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v22 = sub_10025205C(a3);
  }
  if (v22)
  {
    if (a1) {
      goto LABEL_42;
    }
    uint64_t v36 = [(JavaUtilLocale *)v22 description];
    if (!v36) {
LABEL_50:
    }
      JreThrowNullPointerException();
    if (![(NSString *)v36 isEmpty])
    {
LABEL_42:
      uint64_t v37 = sub_100251BBC(a1 & 1, a2, v22, a4);
      if (v37)
      {
        uint64_t v21 = (JavaUtilPropertyResourceBundle *)v37;
LABEL_44:
        [(JavaUtilHashtable *)v18 putWithId:v16 withId:v21];
        return v21;
      }
    }
  }
  uint64_t v38 = &qword_1005611F8;
  if ((a1 & 1) == 0) {
    uint64_t v38 = &qword_1005611F0;
  }
  [(JavaUtilHashtable *)v18 putWithId:v16 withId:*v38];
  return 0;
}

void sub_100251F20(_Unwind_Exception *a1)
{
}

void sub_100251F40(void *a1, int a2)
{
  if (a2 == 4) {
    objc_end_catch();
  }
  JUMPOUT(0x100251E10);
}

JavaUtilHashtable *sub_100251F74(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  double v2 = (void *)qword_100561200;
  objc_sync_enter((id)qword_100561200);
  if (!qword_100561200) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = (JavaUtilHashtable *)[(id)qword_100561200 getWithId:a1];
  if (!v3)
  {
    uint64_t v3 = new_JavaUtilHashtable_init();
    [(id)qword_100561200 putWithId:a1 withId:v3];
  }
  objc_sync_exit(v2);
  return v3;
}

void sub_100252014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilLocale *sub_10025205C(void *a1)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_17;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_17;
    }
  }
  double v2 = (__CFString *)[a1 getLanguage];
  uint64_t v3 = (__CFString *)[a1 getCountry];
  id v4 = (__CFString *)[a1 getVariant];
  if (!v4) {
    goto LABEL_17;
  }
  id v5 = v4;
  if (![(__CFString *)v4 isEmpty])
  {
    id v5 = &stru_10048C1F8;
    goto LABEL_13;
  }
  if (!v3) {
    goto LABEL_17;
  }
  if (![(__CFString *)v3 isEmpty])
  {
    uint64_t v3 = &stru_10048C1F8;
    goto LABEL_13;
  }
  if (!v2) {
LABEL_17:
  }
    JreThrowNullPointerException();
  if ([(__CFString *)v2 isEmpty]) {
    return 0;
  }
  double v2 = &stru_10048C1F8;
LABEL_13:
  CFStringRef v7 = new_JavaUtilLocale_initWithNSString_withNSString_withNSString_(v2, v3, v5);
  return v7;
}

id JavaUtilResourceBundle_clearCacheWithJavaLangClassLoader_(uint64_t a1)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_8:
    id v4 = new_JavaLangNullPointerException_initWithNSString_(@"loader == null");
    objc_exception_throw(v4);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_8;
  }
LABEL_3:
  double v2 = (void *)qword_100561200;
  if (!qword_100561200) {
    JreThrowNullPointerException();
  }
  return [v2 removeWithId:a1];
}

id JavaUtilResourceBundle_clearCache()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = (void *)qword_100561200;
  if (!qword_100561200) {
    JreThrowNullPointerException();
  }
  uint64_t SystemClassLoader = JavaLangClassLoader_getSystemClassLoader();
  return [v0 removeWithId:SystemClassLoader];
}

uint64_t JavaUtilResourceBundle_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100561218 != -1) {
    dispatch_once(&qword_100561218, &stru_100466258);
  }
  return qword_100561210;
}

void sub_1002525A0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561210 = IOSClass_fromClass(v1);
}

id JavaUtilResourceBundle_Control_init(uint64_t a1)
{
  double v2 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)&JavaUtilResourceBundle_Control_listClass_, v2);
  [(id)JavaUtilResourceBundle_Control_listClass_ addWithId:JavaUtilResourceBundle_Control_JAVACLASS_];
  [(id)JavaUtilResourceBundle_Control_listClass_ addWithId:JavaUtilResourceBundle_Control_JAVAPROPERTIES_];
  uint64_t v3 = JavaUtilCollections_unmodifiableListWithJavaUtilList_((void *)JavaUtilResourceBundle_Control_listClass_);
  return JreStrongAssign((id *)(a1 + 8), v3);
}

uint64_t JavaUtilResourceBundle_Control_getControlWithJavaUtilList_(void *a1)
{
  if (atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_13:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_13;
  }
LABEL_3:
  unsigned int v2 = [a1 size];
  if (v2 == 2)
  {
    if ([a1 isEqual:JavaUtilResourceBundle_Control_FORMAT_DEFAULT_])
    {
      uint64_t v3 = &qword_100561230;
      return *v3;
    }
LABEL_14:
    id v5 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v5);
  }
  if (v2 != 1) {
    goto LABEL_14;
  }
  if (([a1 containsWithId:JavaUtilResourceBundle_Control_JAVACLASS_] & 1) == 0)
  {
    if ([a1 containsWithId:JavaUtilResourceBundle_Control_JAVAPROPERTIES_])
    {
      uint64_t v3 = &qword_100561220;
      return *v3;
    }
    goto LABEL_14;
  }
  uint64_t v3 = &qword_100561228;
  return *v3;
}

uint64_t JavaUtilResourceBundle_Control_getNoFallbackControlWithJavaUtilList_(void *a1)
{
  if (atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_15:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_15;
  }
LABEL_3:
  unsigned int v2 = [a1 size];
  if (v2 == 2)
  {
    if ([a1 isEqual:JavaUtilResourceBundle_Control_FORMAT_DEFAULT_])
    {
      uint64_t v3 = &qword_100561248;
      if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle_NoFallbackControl__initialized, memory_order_acquire))return *v3; {
LABEL_13:
      }
      objc_opt_class();
      return *v3;
    }
LABEL_16:
    id v5 = new_JavaLangIllegalArgumentException_init();
    objc_exception_throw(v5);
  }
  if (v2 != 1) {
    goto LABEL_16;
  }
  if (![a1 containsWithId:JavaUtilResourceBundle_Control_JAVACLASS_])
  {
    if ([a1 containsWithId:JavaUtilResourceBundle_Control_JAVAPROPERTIES_])
    {
      uint64_t v3 = &qword_100561240;
      if (atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle_NoFallbackControl__initialized, memory_order_acquire))return *v3; {
      goto LABEL_13;
      }
    }
    goto LABEL_16;
  }
  uint64_t v3 = &qword_100561238;
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilResourceBundle_NoFallbackControl__initialized, memory_order_acquire) & 1) == 0)goto LABEL_13; {
  return *v3;
  }
}

NSString *sub_100252C0C(void *a1, uint64_t a2)
{
  if (!a2)
  {
    id v5 = new_JavaLangNullPointerException_initWithNSString_(@"suffix == null");
    objc_exception_throw(v5);
  }
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = new_JavaLangStringBuilder_initWithNSString_([a1 replace:46 withChar:47]);
  [(JavaLangStringBuilder *)v3 appendWithChar:46];
  [(JavaLangStringBuilder *)v3 appendWithNSString:a2];
  return [(JavaLangStringBuilder *)v3 description];
}

id sub_100253150(uint64_t a1, uint64_t a2)
{
  JavaUtilResourceBundle_Control_init(a1);
  if ((atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v4 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)&JavaUtilResourceBundle_Control_listClass_, v4);
  if ((atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  [(id)JavaUtilResourceBundle_Control_listClass_ addWithId:a2];
  if ((atomic_load_explicit(JavaUtilResourceBundle_Control__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v5 = JavaUtilCollections_unmodifiableListWithJavaUtilList_((void *)JavaUtilResourceBundle_Control_listClass_);
  return JreStrongAssign((id *)(a1 + 8), v5);
}

void sub_100253580()
{
}

void sub_1002535A8()
{
}

void sub_100253624()
{
}

void sub_100253650()
{
}

void *JreStringBuilder_initWithCapacity(uint64_t a1, int a2)
{
  id result = malloc_type_malloc(2 * a2, 0x1000040BDFB0063uLL);
  *(void *)a1 = result;
  if (!result) {
    sub_100254F80();
  }
  *(_DWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 12) = 0;
  return result;
}

void *JavaLangAbstractStringBuilder_init(uint64_t a1)
{
  id result = malloc_type_malloc(0x20uLL, 0x1000040BDFB0063uLL);
  *(void *)(a1 + 8) = result;
  if (!result) {
    sub_100254F80();
  }
  *(_DWORD *)(a1 + 16) = 16;
  return result;
}

void *JavaLangAbstractStringBuilder_initWithInt_(uint64_t a1, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0)
  {
    id v5 = [[JavaLangNegativeArraySizeException alloc] initWithNSString:JavaLangInteger_toStringWithInt_(a2)];
    objc_exception_throw(v5);
  }
  id result = malloc_type_malloc(2 * a2, 0x1000040BDFB0063uLL);
  *(void *)(a1 + 8) = result;
  if (!result) {
    sub_100254F80();
  }
  *(_DWORD *)(a1 + 16) = a2;
  return result;
}

id JavaLangAbstractStringBuilder_initWithNSString_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  unsigned int v4 = [a2 length];
  *(_DWORD *)(a1 + 20) = v4;
  unsigned int v5 = v4 + 16;
  uint64_t v6 = malloc_type_malloc(2 * (int)(v4 + 16), 0x1000040BDFB0063uLL);
  *(void *)(a1 + 8) = v6;
  if (!v6) {
    sub_100254F80();
  }
  *(_DWORD *)(a1 + 16) = v5;
  uint64_t v7 = *(int *)(a1 + 20);
  return objc_msgSend(a2, "getCharacters:range:", v6, 0, v7);
}

double JreStringBuilder_appendNull(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 12);
  int v3 = v2 + 4;
  if (v2 + 4 > *(_DWORD *)(a1 + 8))
  {
    sub_100253A7C(a1, v3);
    int v2 = *(_DWORD *)(a1 + 12);
    int v3 = v2 + 4;
  }
  double result = 1.2461147e-306;
  *(void *)(*(void *)a1 + 2 * v2) = 0x6C006C0075006ELL;
  *(_DWORD *)(a1 + 12) = v3;
  return result;
}

void *sub_100253A7C(uint64_t a1, int a2)
{
  if (*(_DWORD *)(a1 + 8) + (*(int *)(a1 + 8) >> 1) + 2 <= a2) {
    int v3 = a2;
  }
  else {
    int v3 = *(_DWORD *)(a1 + 8) + (*(int *)(a1 + 8) >> 1) + 2;
  }
  double result = malloc_type_realloc(*(void **)a1, 2 * v3, 0x1000040BDFB0063uLL);
  *(void *)a1 = result;
  if (!result) {
    sub_100254F80();
  }
  *(_DWORD *)(a1 + 8) = v3;
  return result;
}

void *JreStringBuilder_appendBuffer(uint64_t a1, void *__src, int a3)
{
  int v6 = *(_DWORD *)(a1 + 12);
  int v7 = v6 + a3;
  if (v6 + a3 > *(_DWORD *)(a1 + 8))
  {
    sub_100253A7C(a1, v6 + a3);
    int v6 = *(_DWORD *)(a1 + 12);
  }
  double result = memcpy((void *)(*(void *)a1 + 2 * v6), __src, 2 * a3);
  *(_DWORD *)(a1 + 12) = v7;
  return result;
}

void *JreStringBuilder_appendCharArray(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v2 = *(_DWORD *)(a2 + 8);
  int v3 = (void *)(a2 + 12);
  return JreStringBuilder_appendBuffer(a1, v3, v2);
}

void *JreStringBuilder_appendCharArraySubset(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a2 + 8), a3, a4);
  return JreStringBuilder_appendBuffer(a1, (void *)(a2 + 12 + 2 * a3), a4);
}

_DWORD *JreStringBuilder_appendChar(_DWORD *result, __int16 a2)
{
  int v3 = result;
  int v4 = result[3];
  if (v4 == result[2])
  {
    double result = sub_100253A7C((uint64_t)result, v4 + 1);
    int v4 = v3[3];
  }
  uint64_t v5 = *(void *)v3;
  v3[3] = v4 + 1;
  *(_WORD *)(v5 + 2 * v4) = a2;
  return result;
}

double JreStringBuilder_appendString(uint64_t a1, CFStringRef theString)
{
  if (theString)
  {
    int Length = CFStringGetLength(theString);
    int v5 = *(_DWORD *)(a1 + 12);
    int v6 = v5 + Length;
    if (v5 + Length > *(_DWORD *)(a1 + 8))
    {
      sub_100253A7C(a1, v6);
      int v5 = *(_DWORD *)(a1 + 12);
    }
    v9.length = Length;
    v9.location = 0;
    CFStringGetCharacters(theString, v9, (UniChar *)(*(void *)a1 + 2 * v5));
    *(_DWORD *)(a1 + 12) = v6;
  }
  else
  {
    return JreStringBuilder_appendNull(a1);
  }
  return result;
}

uint64_t JreStringBuilder_appendCharSequence(uint64_t a1, __CFString *a2, uint64_t a3, int a4)
{
  if (a2) {
    int v4 = a2;
  }
  else {
    int v4 = @"null";
  }
  int v5 = a4 - a3;
  if (a4 < (int)a3
    || (uint64_t v7 = a3, ((a4 | a3) & 0x80000000) != 0)
    || (int)[(__CFString *)v4 length] < a4)
  {
    objc_exception_throw(objc_alloc_init(JavaLangIndexOutOfBoundsException));
  }
  int v9 = *(_DWORD *)(a1 + 12);
  int v10 = v9 + v5;
  if (v9 + v5 > *(_DWORD *)(a1 + 8)) {
    sub_100253A7C(a1, v9 + v5);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t result = (uint64_t)-[__CFString getCharacters:range:](v4, "getCharacters:range:", *(void *)a1 + 2 * *(int *)(a1 + 12), (int)v7, v5);
  }
  else
  {
    objc_opt_class();
    uint64_t result = objc_opt_isKindOfClass();
    if (result)
    {
      uint64_t result = (uint64_t)memcpy((void *)(*(void *)a1 + 2 * *(int *)(a1 + 12)), (const void *)(v4->info + 2 * (int)v7), 2 * v5);
    }
    else if (a4 > (int)v7)
    {
      int v12 = *(_DWORD *)(a1 + 12);
      do
      {
        uint64_t result = (uint64_t)[(__CFString *)v4 charAtWithInt:v7];
        *(_WORD *)(*(void *)a1 + 2 * v12++) = result;
        uint64_t v7 = (v7 + 1);
      }
      while (a4 != v7);
    }
  }
  *(_DWORD *)(a1 + 12) = v10;
  return result;
}

void sub_100253E88(uint64_t a1, uint64_t a2)
{
}

_DWORD *JreStringBuilder_delete(_DWORD *result, uint64_t a2, int a3)
{
  int v3 = result;
  if ((a2 & 0x80000000) != 0) {
    goto LABEL_10;
  }
  int v4 = result[3];
  if (v4 < a3) {
    a3 = result[3];
  }
  int v5 = a2 - a3;
  if (a2 != a3)
  {
    if ((int)a2 < a3)
    {
      if (v4 - a3 >= 0)
      {
        uint64_t result = memmove((void *)(*(void *)result + 2 * a2), (const void *)(*(void *)result + 2 * a3), 2 * (v4 - a3));
        int v4 = v3[3];
      }
      v3[3] = v5 + v4;
      return result;
    }
LABEL_10:
    sub_100253F2C((uint64_t)result, a2, a3);
  }
  return result;
}

void sub_100253F2C(uint64_t a1, uint64_t a2, int a3)
{
}

_DWORD *JreStringBuilder_deleteCharAt(_DWORD *result, uint64_t a2)
{
  int v2 = result;
  if ((a2 & 0x80000000) != 0 || (int v3 = result[3], v3 <= (int)a2)) {
    sub_100253E88((uint64_t)result, a2);
  }
  if (v3 + ~a2 >= 1)
  {
    uint64_t result = memmove((void *)(*(void *)result + 2 * a2), (const void *)(*(void *)result + 2 * a2 + 2), 2 * (v3 + ~a2));
    int v3 = v2[3];
  }
  v2[3] = v3 - 1;
  return result;
}

_DWORD *JreStringBuilder_insertCharArray(_DWORD *result, uint64_t a2, uint64_t a3)
{
  unsigned int v3 = a2;
  int v4 = result;
  if ((a2 & 0x80000000) != 0 || result[3] < (int)a2) {
    sub_100253E88((uint64_t)result, a2);
  }
  if (!a3) {
    JreThrowNullPointerException();
  }
  int v6 = *(_DWORD *)(a3 + 8);
  if (v6)
  {
    sub_100254194((char **)result, v6, v3);
    uint64_t result = memcpy((void *)(*(void *)v4 + 2 * v3), (const void *)(a3 + 12), 2 * *(int *)(a3 + 8));
    v4[3] += *(_DWORD *)(a3 + 8);
  }
  return result;
}

void sub_100254194(char **a1, int a2, unsigned int a3)
{
  int v7 = *((_DWORD *)a1 + 2);
  int v6 = *((_DWORD *)a1 + 3);
  if (v7 - v6 >= a2)
  {
    uint64_t v13 = &(*a1)[2 * a3];
    size_t v14 = 2 * (int)(v6 - a3);
    memmove(&v13[2 * a2], v13, v14);
  }
  else
  {
    int v8 = v6 + a2;
    int v9 = 2 * v7 + 2;
    if (v8 <= v9) {
      int v10 = v9;
    }
    else {
      int v10 = v8;
    }
    uint64_t v11 = *a1;
    int v12 = (char *)malloc_type_malloc(2 * v10, 0x1000040BDFB0063uLL);
    *a1 = v12;
    if (!v12) {
      sub_100254F80();
    }
    *((_DWORD *)a1 + 2) = v10;
    memcpy(v12, v11, 2 * a3);
    memcpy(&(*a1)[2 * a3 + 2 * a2], &v11[2 * a3], 2 * (int)(*((_DWORD *)a1 + 3) - a3));
    free(v11);
  }
}

_DWORD *JreStringBuilder_insertCharArraySubset(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a3) {
    JreThrowNullPointerException();
  }
  unsigned int v5 = a5;
  unsigned int v6 = a4;
  unsigned int v8 = a2;
  int v9 = result;
  if ((a2 & 0x80000000) != 0
    || ((a5 | a4) & 0x80000000) != 0
    || result[3] < (int)a2
    || *(_DWORD *)(a3 + 8) - (int)a4 < (int)a5)
  {
    objc_exception_throw(objc_autorelease(-[JavaLangStringIndexOutOfBoundsException initWithNSString:]([JavaLangStringIndexOutOfBoundsException alloc], "initWithNSString:", +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"this.length=%d; index=%d; chars.length=%d; start=%d; length=%d",
            result[3],
            a2,
            *(unsigned int *)(a3 + 8),
            a4,
            a5))));
  }
  if (a5)
  {
    sub_100254194((char **)result, a5, a2);
    uint64_t result = memcpy((void *)(*(void *)v9 + 2 * v8), (const void *)(a3 + 12 + 2 * v6), 2 * v5);
    v9[3] += v5;
  }
  return result;
}

void JreStringBuilder_insertChar(uint64_t a1, uint64_t a2, __int16 a3)
{
  unsigned int v3 = a2;
  if ((a2 & 0x80000000) != 0 || *(_DWORD *)(a1 + 12) < (int)a2) {
    objc_exception_throw([[JavaLangArrayIndexOutOfBoundsException alloc] initWithInt:*(unsigned int *)(a1 + 12) withInt:a2]);
  }
  sub_100254194((char **)a1, 1, a2);
  *(_WORD *)(*(void *)a1 + 2 * v3) = a3;
  ++*(_DWORD *)(a1 + 12);
}

id JreStringBuilder_insertString(uint64_t a1, uint64_t a2, __CFString *a3)
{
  unsigned int v3 = a2;
  if ((a2 & 0x80000000) != 0 || *(_DWORD *)(a1 + 12) < (int)a2) {
    sub_100253E88(a1, a2);
  }
  if (a3) {
    unsigned int v5 = a3;
  }
  else {
    unsigned int v5 = @"null";
  }
  id result = [(__CFString *)v5 length];
  int v7 = (int)result;
  if (result)
  {
    sub_100254194((char **)a1, (int)result, v3);
    id result = -[__CFString getCharacters:range:](v5, "getCharacters:range:", *(void *)a1 + 2 * v3, 0, v7);
    *(_DWORD *)(a1 + 12) += v7;
  }
  return result;
}

id JreStringBuilder_insertCharSequence(uint64_t a1, uint64_t a2, __CFString *a3, uint64_t a4, uint64_t a5)
{
  if (a3) {
    unsigned int v5 = a3;
  }
  else {
    unsigned int v5 = @"null";
  }
  if (((a4 | a2 | a5) & 0x80000000) != 0
    || (int)a4 > (int)a5
    || *(_DWORD *)(a1 + 12) < (int)a2
    || (int)[(__CFString *)v5 length] < (int)a5)
  {
    objc_exception_throw(objc_alloc_init(JavaLangIndexOutOfBoundsException));
  }
  int v10 = (__CFString *)objc_msgSend(-[__CFString subSequenceFrom:to:](v5, "subSequenceFrom:to:", a4, a5), "description");
  return JreStringBuilder_insertString(a1, a2, v10);
}

id JreStringBuilder_replace(uint64_t a1, uint64_t a2, int a3, __CFString *a4)
{
  int v4 = a3;
  unsigned int v5 = a2;
  if ((a2 & 0x80000000) != 0) {
    goto LABEL_18;
  }
  if (*(_DWORD *)(a1 + 12) >= a3) {
    int v4 = a3;
  }
  else {
    int v4 = *(_DWORD *)(a1 + 12);
  }
  if (v4 > (int)a2)
  {
    if (!a4) {
      JreThrowNullPointerException();
    }
    signed int v8 = [(__CFString *)a4 length];
    signed int v9 = v8;
    int v10 = v4 - (v8 + v5);
    if (v10 < 1)
    {
      if (v10 < 0) {
        sub_100254194((char **)a1, v8 + v5 - v4, v4);
      }
    }
    else
    {
      memmove((void *)(*(void *)a1 + 2 * v5 + 2 * v8), (const void *)(*(void *)a1 + 2 * v4), 2 * (*(_DWORD *)(a1 + 12) - v4));
    }
    id result = -[__CFString getCharacters:range:](a4, "getCharacters:range:", *(void *)a1 + 2 * v5, 0, v9);
    *(_DWORD *)(a1 + 12) -= v10;
    return result;
  }
  if (v4 != a2) {
LABEL_18:
  }
    sub_100253F2C(a1, a2, v4);
  if (!a4) {
    objc_exception_throw([[JavaLangNullPointerException alloc] initWithNSString:@"string == null"]);
  }
  return JreStringBuilder_insertString(a1, a2, a4);
}

uint64_t JreStringBuilder_reverse(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 12);
  if (v1 >= 2)
  {
    LODWORD(v2) = 0;
    unsigned int v3 = *(unsigned __int16 **)result;
    int v4 = v1 - 1;
    unsigned __int16 v5 = *(_WORD *)(*(void *)result + 2 * (v1 - 1));
    unsigned __int16 v6 = **(_WORD **)result;
    LOBYTE(v7) = 1;
    LOBYTE(v8) = 1;
    while (1)
    {
      uint64_t v9 = (int)v2;
      uint64_t v2 = (int)v2 + 1;
      unsigned int v10 = v3[v2];
      id result = (v4 - 1);
      unsigned int v11 = v3[(int)result];
      int v12 = v8 & (v10 >> 10 > 0x36);
      if (v10 >= 0xE000) {
        int v12 = 0;
      }
      if ((unsigned __int16)(v6 >> 11) <= 0x1Au) {
        int v12 = 0;
      }
      if ((unsigned __int16)(v6 >> 10) >= 0x37u) {
        int v12 = 0;
      }
      if (v1 == 2 && (v12 & 1) != 0) {
        break;
      }
      int v13 = v7 & (v11 >> 11 > 0x1A);
      if (v11 >> 10 >= 0x37) {
        int v13 = 0;
      }
      if ((unsigned __int16)(v5 >> 10) <= 0x36u) {
        int v13 = 0;
      }
      if (v5 >= 0xE000u) {
        int v13 = 0;
      }
      if (v12 == v13)
      {
        if (v12)
        {
          v3[v4] = v10;
          v3[(int)result] = v6;
          v3[v9] = v11;
          v3[v2] = v5;
          LODWORD(v2) = v9 + 2;
          unsigned __int16 v6 = v3[v9 + 2];
          v4 -= 2;
          int v8 = 1;
          int v7 = 1;
          unsigned __int16 v5 = v3[v4];
        }
        else
        {
          v3[v4] = v6;
          v3[v9] = v5;
          int v8 = 1;
          --v4;
          unsigned __int16 v6 = v10;
          unsigned __int16 v5 = v11;
          int v7 = 1;
        }
      }
      else if (v12)
      {
        int v8 = 0;
        v3[v4] = v10;
        v3[v9] = v5;
        int v7 = 1;
        --v4;
        unsigned __int16 v5 = v11;
      }
      else
      {
        int v7 = 0;
        v3[v4] = v6;
        v3[v9] = v11;
        int v8 = 1;
        --v4;
        unsigned __int16 v6 = v10;
      }
      if ((int)v2 >= (int)(v1 >> 1))
      {
        if ((v1 & 1) != 0 && (v8 & v7 & 1) == 0)
        {
          if (v8) {
            unsigned __int16 v14 = v5;
          }
          else {
            unsigned __int16 v14 = v6;
          }
          v3[v4] = v14;
        }
        return result;
      }
    }
  }
  return result;
}

CFStringRef JreStringBuilder_toString(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 12)) {
    return (const __CFString *)+[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:", *(void *)a1);
  }
  else {
    return &stru_10048C1F8;
  }
}

CFStringRef JreStringBuilder_toStringAndDealloc(uint64_t a1)
{
  CFIndex v2 = *(int *)(a1 + 12);
  if (v2)
  {
    int v3 = *(_DWORD *)(a1 + 8) - v2;
    if (v3 <= 255 && (v3 >= 16 ? (BOOL v4 = v3 < (int)v2 >> 1) : (BOOL v4 = 1), v4))
    {
      unsigned __int16 v5 = (__CFString *)CFStringCreateWithCharactersNoCopy(0, *(const UniChar **)a1, v2, kCFAllocatorMalloc);
    }
    else
    {
      unsigned __int16 v5 = (__CFString *)CFStringCreateWithCharacters(0, *(const UniChar **)a1, v2);
      free(*(void **)a1);
    }
    return v5;
  }
  else
  {
    free(*(void **)a1);
    return &stru_10048C1F8;
  }
}

void sub_100254F80()
{
}

uint64_t JavaMathElementary_compareArraysWithIntArray_withIntArray_withInt_(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v3) = a3;
  do
  {
    uint64_t v3 = (v3 - 1);
    if ((int)v3 < 0) {
      return 0;
    }
    if (!a1) {
      goto LABEL_17;
    }
    uint64_t v5 = *(unsigned int *)(a1 + 8);
    if ((int)v3 >= (int)v5) {
      IOSArray_throwOutOfBoundsWithMsg(v5, v3);
    }
    if (!a2) {
LABEL_17:
    }
      JreThrowNullPointerException();
    uint64_t v6 = *(unsigned int *)(a2 + 8);
    if ((int)v3 >= (int)v6) {
      IOSArray_throwOutOfBoundsWithMsg(v6, v3);
    }
  }
  while (*(_DWORD *)(a1 + 12 + 4 * v3) == *(_DWORD *)(a2 + 12 + 4 * v3));
  uint64_t v8 = *(unsigned int *)(a1 + 8);
  if ((int)v3 >= (int)v8) {
    IOSArray_throwOutOfBoundsWithMsg(v8, v3);
  }
  unsigned int v9 = *(_DWORD *)(a1 + 12 + 4 * v3);
  uint64_t v10 = *(unsigned int *)(a2 + 8);
  if ((int)v3 >= (int)v10) {
    IOSArray_throwOutOfBoundsWithMsg(v10, v3);
  }
  if (v9 < *(_DWORD *)(a2 + 12 + 4 * v3)) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 1;
  }
}

void sub_1002550CC()
{
}

JavaMathBigInteger *JavaMathElementary_addWithJavaMathBigInteger_withJavaMathBigInteger_(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_39;
  }
  CFIndex v2 = (JavaMathBigInteger *)a2;
  if (!a2) {
    goto LABEL_39;
  }
  int v4 = *(_DWORD *)(a1 + 20);
  if (!v4) {
    return v2;
  }
  int v5 = *(_DWORD *)(a2 + 20);
  if (!v5) {
    return (JavaMathBigInteger *)a1;
  }
  uint64_t v6 = *(int *)(a1 + 16);
  uint64_t v7 = *(int *)(a2 + 16);
  if (v7 + v6 != 2)
  {
    if (v4 == v5)
    {
      if ((int)v6 >= (int)v7)
      {
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v30 = *(void *)(a2 + 8);
        uint64_t v18 = +[IOSIntArray arrayWithLength:(int)v6 + 1];
        id v19 = v18;
        uint64_t v20 = v29;
        uint64_t v21 = v6;
        uint64_t v22 = v30;
        uint64_t v23 = v7;
      }
      else
      {
        uint64_t v16 = *(void *)(a2 + 8);
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = +[IOSIntArray arrayWithLength:(int)v7 + 1];
        id v19 = v18;
        uint64_t v20 = v16;
        uint64_t v21 = v7;
        uint64_t v22 = v17;
        uint64_t v23 = v6;
      }
      sub_10025549C((uint64_t)v18, v20, v21, v22, v23);
LABEL_33:
      if (v19)
      {
        CFIndex v2 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v4, v19->super.size_, v19);
        [(JavaMathBigInteger *)v2 cutOffLeadingZeroes];
        return v2;
      }
LABEL_39:
      JreThrowNullPointerException();
    }
    if (v6 == v7)
    {
      int v24 = JavaMathElementary_compareArraysWithIntArray_withIntArray_withInt_(*(void *)(a1 + 8), *(void *)(a2 + 8), *(_DWORD *)(a1 + 16));
      if (v24 != 1)
      {
        if (!v24)
        {
          if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          return (JavaMathBigInteger *)JavaMathBigInteger_ZERO_;
        }
        goto LABEL_32;
      }
    }
    else if ((int)v6 <= (int)v7)
    {
LABEL_32:
      uint64_t digits = (uint64_t)v2->digits_;
      uint64_t v34 = *(void *)(a1 + 8);
      id v19 = +[IOSIntArray arrayWithLength:v7];
      sub_100255C38((uint64_t)v19, digits, v7, v34, v6);
      int v4 = v5;
      goto LABEL_33;
    }
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (uint64_t)v2->digits_;
    id v19 = +[IOSIntArray arrayWithLength:v6];
    sub_100255C38((uint64_t)v19, v31, v6, v32, v7);
    goto LABEL_33;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (!v8) {
    goto LABEL_39;
  }
  uint64_t v9 = *(unsigned int *)(v8 + 8);
  if ((int)v9 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v9, 0);
  }
  uint64_t v10 = *(unsigned int *)(v8 + 12);
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(unsigned int *)(v11 + 8);
  if ((int)v12 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v12, 0);
  }
  uint64_t v13 = *(unsigned int *)(v11 + 12);
  if (v4 == v5)
  {
    int v14 = v13 + v10;
    unint64_t v15 = (unint64_t)(v13 + v10) >> 32;
    if (v15)
    {
      v36[0] = v14;
      v36[1] = v15;
      return new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v4, 2, +[IOSIntArray arrayWithInts:v36 count:2]);
    }
    uint64_t v35 = new_JavaMathBigInteger_initWithInt_withInt_(v4, v14);
    return v35;
  }
  else
  {
    unint64_t v25 = v13 - v10;
    unint64_t v26 = v10 - v13;
    if (v4 >= 0) {
      unint64_t v27 = v26;
    }
    else {
      unint64_t v27 = v25;
    }
    return JavaMathBigInteger_valueOfWithLong_(v27);
  }
}

uint64_t sub_10025549C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2) {
    goto LABEL_56;
  }
  uint64_t v6 = *(unsigned int *)(a2 + 8);
  if ((int)v6 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v6, 0);
  }
  if (!a4) {
    goto LABEL_56;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 12);
  uint64_t v8 = *(unsigned int *)(a4 + 8);
  if ((int)v8 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v8, 0);
  }
  if (!a1) {
LABEL_56:
  }
    JreThrowNullPointerException();
  unsigned int v9 = *(_DWORD *)(a4 + 12) + v7;
  uint64_t result = *(unsigned int *)(a1 + 8);
  if ((int)result <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(result, 0);
  }
  unint64_t v11 = v9 < v7;
  *(_DWORD *)(a1 + 12) = v9;
  if ((int)a3 < (int)a5)
  {
    if ((int)a3 < 2)
    {
      a3 = 1;
    }
    else
    {
      uint64_t v12 = 1;
      do
      {
        uint64_t v13 = *(int *)(a2 + 8);
        if (v12 >= v13) {
          IOSArray_throwOutOfBoundsWithMsg(v13, v12);
        }
        uint64_t v14 = *(int *)(a4 + 8);
        if (v12 >= v14) {
          IOSArray_throwOutOfBoundsWithMsg(v14, v12);
        }
        uint64_t result = *(int *)(a1 + 8);
        if (v12 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v12);
        }
        unint64_t v15 = v11 + *(unsigned int *)(a2 + 12 + 4 * v12) + *(unsigned int *)(a4 + 12 + 4 * v12);
        *(_DWORD *)(a1 + 12 + 4 * v12) = v15;
        unint64_t v11 = HIDWORD(v15);
        ++v12;
      }
      while (a3 != v12);
    }
    if ((int)a3 < (int)a5)
    {
      uint64_t v20 = a3;
      do
      {
        uint64_t v21 = *(int *)(a4 + 8);
        if (v20 >= v21) {
          IOSArray_throwOutOfBoundsWithMsg(v21, v20);
        }
        uint64_t v22 = *(unsigned int *)(a4 + 12 + 4 * v20);
        uint64_t result = *(int *)(a1 + 8);
        if (v20 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v20);
        }
        *(_DWORD *)(a1 + 12 + 4 * v20) = v11 + v22;
        unint64_t v11 = (v11 + v22) >> 32;
        ++v20;
      }
      while (a5 != v20);
      a5 = a5;
      goto LABEL_48;
    }
    a5 = a3;
    if (!v11) {
      return result;
    }
    goto LABEL_49;
  }
  if ((int)a5 < 2)
  {
    a5 = 1;
  }
  else
  {
    uint64_t v16 = 1;
    do
    {
      uint64_t v17 = *(int *)(a2 + 8);
      if (v16 >= v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, v16);
      }
      uint64_t v18 = *(int *)(a4 + 8);
      if (v16 >= v18) {
        IOSArray_throwOutOfBoundsWithMsg(v18, v16);
      }
      uint64_t result = *(int *)(a1 + 8);
      if (v16 >= result) {
        IOSArray_throwOutOfBoundsWithMsg(result, v16);
      }
      unint64_t v19 = v11 + *(unsigned int *)(a2 + 12 + 4 * v16) + *(unsigned int *)(a4 + 12 + 4 * v16);
      *(_DWORD *)(a1 + 12 + 4 * v16) = v19;
      unint64_t v11 = HIDWORD(v19);
      ++v16;
    }
    while (a5 != v16);
  }
  if ((int)a5 >= (int)a3)
  {
LABEL_48:
    if (!v11) {
      return result;
    }
    goto LABEL_49;
  }
  uint64_t v23 = a5;
  do
  {
    uint64_t v24 = *(int *)(a2 + 8);
    if (v23 >= v24) {
      IOSArray_throwOutOfBoundsWithMsg(v24, v23);
    }
    uint64_t v25 = *(unsigned int *)(a2 + 12 + 4 * v23);
    uint64_t result = *(int *)(a1 + 8);
    if (v23 >= result) {
      IOSArray_throwOutOfBoundsWithMsg(result, v23);
    }
    *(_DWORD *)(a1 + 12 + 4 * v23) = v11 + v25;
    unint64_t v11 = (v11 + v25) >> 32;
    ++v23;
  }
  while (a3 != v23);
  a5 = a3;
  if (v11)
  {
LABEL_49:
    uint64_t result = *(unsigned int *)(a1 + 8);
    if ((int)a5 >= (int)result) {
      IOSArray_throwOutOfBoundsWithMsg(result, a5);
    }
    *(_DWORD *)(a1 + 12 + 4 * (int)a5) = v11;
  }
  return result;
}

void sub_10025590C()
{
}

JavaMathBigInteger *JavaMathElementary_subtractWithJavaMathBigInteger_withJavaMathBigInteger_(uint64_t a1, uint64_t a2)
{
  if (!a1 || !a2) {
    goto LABEL_38;
  }
  uint64_t v3 = (JavaMathBigInteger *)a1;
  int v4 = *(_DWORD *)(a2 + 20);
  if (!v4) {
    return v3;
  }
  int v5 = *(_DWORD *)(a1 + 20);
  if (v5)
  {
    uint64_t v6 = *(int *)(a1 + 16);
    uint64_t v7 = *(int *)(a2 + 16);
    if (v7 + v6 == 2)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      if (v8)
      {
        uint64_t v9 = *(unsigned int *)(v8 + 8);
        if ((int)v9 <= 0) {
          IOSArray_throwOutOfBoundsWithMsg(v9, 0);
        }
        uint64_t v10 = *(unsigned int *)(v8 + 12);
        uint64_t v11 = *(void *)(a2 + 8);
        uint64_t v12 = *(unsigned int *)(v11 + 8);
        if ((int)v12 <= 0) {
          IOSArray_throwOutOfBoundsWithMsg(v12, 0);
        }
        uint64_t v13 = *(unsigned int *)(v11 + 12);
        if (v5 >= 0) {
          uint64_t v14 = v10;
        }
        else {
          uint64_t v14 = -v10;
        }
        if (v4 >= 0) {
          uint64_t v13 = -v13;
        }
        return JavaMathBigInteger_valueOfWithLong_(v13 + v14);
      }
LABEL_38:
      JreThrowNullPointerException();
    }
    if (v6 == v7)
    {
      int v16 = JavaMathElementary_compareArraysWithIntArray_withIntArray_withInt_(*(void *)(a1 + 8), *(void *)(a2 + 8), *(_DWORD *)(a1 + 16));
      if (v16 != -1)
      {
        if (v5 == v4)
        {
          if (!v16)
          {
            if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
              objc_opt_class();
            }
            return (JavaMathBigInteger *)JavaMathBigInteger_ZERO_;
          }
          goto LABEL_29;
        }
        goto LABEL_32;
      }
    }
    else if ((int)v6 > (int)v7)
    {
      if (v5 == v4)
      {
LABEL_29:
        uint64_t digits = (uint64_t)v3->digits_;
        uint64_t v18 = *(void *)(a2 + 8);
        unint64_t v19 = +[IOSIntArray arrayWithLength:v6];
        sub_100255C38((uint64_t)v19, digits, v6, v18, v7);
LABEL_35:
        if (!v19) {
          goto LABEL_38;
        }
        uint64_t v3 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v5, v19->super.size_, v19);
        [(JavaMathBigInteger *)v3 cutOffLeadingZeroes];
        return v3;
      }
LABEL_32:
      uint64_t v22 = (uint64_t)v3->digits_;
      uint64_t v23 = *(void *)(a2 + 8);
      unint64_t v19 = +[IOSIntArray arrayWithLength:(int)v6 + 1];
      sub_10025549C((uint64_t)v19, v22, v6, v23, v7);
      goto LABEL_35;
    }
    uint64_t v20 = *(void *)(a2 + 8);
    uint64_t v21 = (uint64_t)v3->digits_;
    if (v5 == v4)
    {
      unint64_t v19 = +[IOSIntArray arrayWithLength:v7];
      sub_100255C38((uint64_t)v19, v20, v7, v21, v6);
    }
    else
    {
      unint64_t v19 = +[IOSIntArray arrayWithLength:(int)v7 + 1];
      sub_10025549C((uint64_t)v19, v20, v7, v21, v6);
    }
    int v5 = -v4;
    goto LABEL_35;
  }
  return (JavaMathBigInteger *)[(id)a2 negate];
}

uint64_t sub_100255C38(uint64_t result, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5 = result;
  if (a5 >= 1)
  {
    if (a2)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = *(int *)(a2 + 8);
        if (v6 >= v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, v6);
        }
        if (!a4) {
          break;
        }
        uint64_t v9 = *(int *)(a4 + 8);
        if (v6 >= v9) {
          IOSArray_throwOutOfBoundsWithMsg(v9, v6);
        }
        if (!v5) {
          break;
        }
        uint64_t result = *(int *)(v5 + 8);
        if (v6 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v6);
        }
        uint64_t v10 = *(unsigned int *)(a2 + 12 + 4 * v6) - (unint64_t)*(unsigned int *)(a4 + 12 + 4 * v6) + v7;
        *(_DWORD *)(v5 + 12 + 4 * v6) = v10;
        uint64_t v7 = v10 >> 32;
        if (a5 == ++v6) {
          goto LABEL_15;
        }
      }
    }
LABEL_26:
    JreThrowNullPointerException();
  }
  uint64_t v7 = 0;
  a5 = 0;
LABEL_15:
  if (a5 < a3)
  {
    if (a2)
    {
      uint64_t v11 = a5;
      while (1)
      {
        uint64_t v12 = *(int *)(a2 + 8);
        if (v11 >= v12) {
          IOSArray_throwOutOfBoundsWithMsg(v12, v11);
        }
        if (!v5) {
          break;
        }
        uint64_t v13 = *(unsigned int *)(a2 + 12 + 4 * v11);
        uint64_t result = *(int *)(v5 + 8);
        if (v11 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v11);
        }
        *(_DWORD *)(v5 + 12 + 4 * v11) = v7 + v13;
        uint64_t v7 = (v7 + v13) >> 32;
        if (a3 == ++v11) {
          return result;
        }
      }
    }
    goto LABEL_26;
  }
  return result;
}

id JavaMathElementary_inplaceAddWithJavaMathBigInteger_withJavaMathBigInteger_(uint64_t a1, uint64_t a2)
{
  if (!a1
    || !a2
    || (sub_10025549C(*(void *)(a1 + 8), *(void *)(a1 + 8), *(unsigned int *)(a1 + 16), *(void *)(a2 + 8), *(unsigned int *)(a2 + 16)), int v4 = JavaLangMath_maxWithInt_withInt_(*(unsigned int *)(a1 + 16), *(_DWORD *)(a2 + 16)), (v5 = *(void *)(a1 + 8)) == 0))
  {
    JreThrowNullPointerException();
  }
  *(_DWORD *)(a1 + 16) = JavaLangMath_minWithInt_withInt_((v4 + 1), *(_DWORD *)(v5 + 8));
  [(id)a1 cutOffLeadingZeroes];
  return [(id)a1 unCache];
}

unint64_t JavaMathElementary_inplaceAddWithIntArray_withInt_withInt_(uint64_t a1, int a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if (a3 && a2 >= 1)
  {
    if (!a1) {
      JreThrowNullPointerException();
    }
    uint64_t v5 = 0;
    unint64_t v3 = a3;
    do
    {
      uint64_t v6 = *(unsigned int *)(a1 + 8);
      if ((int)v5 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v5);
      }
      uint64_t v7 = *(unsigned int *)(a1 + 12 + 4 * v5);
      *(_DWORD *)(a1 + 12 + 4 * v5) = v3 + v7;
      unint64_t v3 = (v3 + v7) >> 32;
      ++v5;
      if (v3) {
        BOOL v8 = (int)v5 < a2;
      }
      else {
        BOOL v8 = 0;
      }
    }
    while (v8);
  }
  return v3;
}

id JavaMathElementary_inplaceAddWithJavaMathBigInteger_withInt_(uint64_t a1, unint64_t a2)
{
  if (!a1) {
    goto LABEL_10;
  }
  if (JavaMathElementary_inplaceAddWithIntArray_withInt_withInt_(*(void *)(a1 + 8), *(_DWORD *)(a1 + 16), a2) != 1)goto LABEL_7; {
  uint64_t v3 = *(void *)(a1 + 8);
  }
  if (!v3) {
LABEL_10:
  }
    JreThrowNullPointerException();
  int v4 = *(_DWORD *)(a1 + 16);
  uint64_t v5 = *(unsigned int *)(v3 + 8);
  if (v4 < 0 || v4 >= (int)v5) {
    IOSArray_throwOutOfBoundsWithMsg(v5, v4);
  }
  *(_DWORD *)(v3 + 12 + 4 * v4) = 1;
  ++*(_DWORD *)(a1 + 16);
LABEL_7:
  return [(id)a1 unCache];
}

id JavaMathElementary_inplaceSubtractWithJavaMathBigInteger_withJavaMathBigInteger_(uint64_t a1, uint64_t a2)
{
  if (!a1 || !a2) {
    JreThrowNullPointerException();
  }
  sub_100255C38(*(void *)(a1 + 8), *(void *)(a1 + 8), *(_DWORD *)(a1 + 16), *(void *)(a2 + 8), *(_DWORD *)(a2 + 16));
  [(id)a1 cutOffLeadingZeroes];
  return [(id)a1 unCache];
}

uint64_t sub_1002561B4(uint64_t result, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5 = result;
  if (a3 >= a5)
  {
    if (a5 < 1)
    {
      uint64_t v12 = 0;
      a5 = 0;
LABEL_40:
      if (a5 >= a3) {
        return result;
      }
      if (a2)
      {
        uint64_t v19 = a5;
        while (1)
        {
          uint64_t v20 = *(int *)(a2 + 8);
          if (v19 >= v20) {
            IOSArray_throwOutOfBoundsWithMsg(v20, v19);
          }
          if (!v5) {
            break;
          }
          uint64_t v21 = *(unsigned int *)(a2 + 12 + 4 * v19);
          uint64_t result = *(int *)(v5 + 8);
          if (v19 >= result) {
            IOSArray_throwOutOfBoundsWithMsg(result, v19);
          }
          *(_DWORD *)(v5 + 12 + 4 * v19) = v12 - v21;
          uint64_t v12 = (v12 - v21) >> 32;
          if (a3 == ++v19) {
            return result;
          }
        }
      }
    }
    else if (a4)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      while (1)
      {
        uint64_t v13 = *(int *)(a4 + 8);
        if (v11 >= v13) {
          IOSArray_throwOutOfBoundsWithMsg(v13, v11);
        }
        if (!a2) {
          break;
        }
        uint64_t v14 = *(int *)(a2 + 8);
        if (v11 >= v14) {
          IOSArray_throwOutOfBoundsWithMsg(v14, v11);
        }
        if (!v5) {
          break;
        }
        uint64_t result = *(int *)(v5 + 8);
        if (v11 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v11);
        }
        uint64_t v15 = *(unsigned int *)(a4 + 12 + 4 * v11) - (unint64_t)*(unsigned int *)(a2 + 12 + 4 * v11) + v12;
        *(_DWORD *)(v5 + 12 + 4 * v11) = v15;
        uint64_t v12 = v15 >> 32;
        if (a5 == ++v11) {
          goto LABEL_40;
        }
      }
    }
LABEL_51:
    JreThrowNullPointerException();
  }
  if (a3 >= 1)
  {
    if (a4)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = *(int *)(a4 + 8);
        if (v6 >= v8) {
          IOSArray_throwOutOfBoundsWithMsg(v8, v6);
        }
        if (!a2) {
          break;
        }
        uint64_t v9 = *(int *)(a2 + 8);
        if (v6 >= v9) {
          IOSArray_throwOutOfBoundsWithMsg(v9, v6);
        }
        if (!v5) {
          break;
        }
        uint64_t result = *(int *)(v5 + 8);
        if (v6 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v6);
        }
        uint64_t v10 = *(unsigned int *)(a4 + 12 + 4 * v6) - (unint64_t)*(unsigned int *)(a2 + 12 + 4 * v6) + v7;
        *(_DWORD *)(v5 + 12 + 4 * v6) = v10;
        uint64_t v7 = v10 >> 32;
        if (a3 == ++v6) {
          goto LABEL_29;
        }
      }
    }
    goto LABEL_51;
  }
  uint64_t v7 = 0;
  a3 = 0;
LABEL_29:
  if (a3 < a5)
  {
    if (a4)
    {
      uint64_t v16 = a3;
      while (1)
      {
        uint64_t v17 = *(int *)(a4 + 8);
        if (v16 >= v17) {
          IOSArray_throwOutOfBoundsWithMsg(v17, v16);
        }
        if (!v5) {
          break;
        }
        uint64_t v18 = *(unsigned int *)(a4 + 12 + 4 * v16);
        uint64_t result = *(int *)(v5 + 8);
        if (v16 >= result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v16);
        }
        *(_DWORD *)(v5 + 12 + 4 * v16) = v7 + v18;
        uint64_t v7 = (v7 + v18) >> 32;
        if (a5 == ++v16) {
          return result;
        }
      }
    }
    goto LABEL_51;
  }
  return result;
}

id JavaMathElementary_completeInPlaceSubtractWithJavaMathBigInteger_withJavaMathBigInteger_(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_15;
  }
  unsigned int v4 = [(id)a1 compareToWithId:a2];
  int v5 = *(_DWORD *)(a1 + 20);
  if (!v5)
  {
    if (a2)
    {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a2 + 8), 0, *(void **)(a1 + 8), 0, *(unsigned int *)(a2 + 16));
      int v13 = *(_DWORD *)(a2 + 20);
      goto LABEL_11;
    }
LABEL_15:
    JreThrowNullPointerException();
  }
  if (!a2) {
    goto LABEL_15;
  }
  unsigned int v6 = v4;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v5 != *(_DWORD *)(a2 + 20))
  {
    sub_10025549C(v7, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16), *(void *)(a2 + 8), *(unsigned int *)(a2 + 16));
    *(_DWORD *)(a1 + 20) = v6;
    goto LABEL_12;
  }
  int v8 = sub_1002568A8(v7, *(void *)(a2 + 8), *(_DWORD *)(a1 + 16), *(_DWORD *)(a2 + 16));
  uint64_t v9 = *(void *)(a1 + 8);
  int v10 = *(_DWORD *)(a1 + 16);
  uint64_t v11 = *(void *)(a2 + 8);
  int v12 = *(_DWORD *)(a2 + 16);
  if (v8 >= 1)
  {
    sub_100255C38(v9, v9, v10, v11, v12);
    goto LABEL_12;
  }
  sub_1002561B4(v9, v9, v10, v11, v12);
  int v13 = *(_DWORD *)(a1 + 20);
LABEL_11:
  *(_DWORD *)(a1 + 20) = -v13;
LABEL_12:
  *(_DWORD *)(a1 + 16) = JavaLangMath_maxWithInt_withInt_(*(unsigned int *)(a1 + 16), *(_DWORD *)(a2 + 16)) + 1;
  [(id)a1 cutOffLeadingZeroes];
  return [(id)a1 unCache];
}

void **JavaMathElementary_completeInPlaceAddWithJavaMathBigInteger_withJavaMathBigInteger_(void **result, uint64_t a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v3 = result;
  int v4 = *((_DWORD *)result + 5);
  if (!v4)
  {
    if (a2)
    {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a2 + 8), 0, result[1], 0, *(unsigned int *)(a2 + 16));
      goto LABEL_13;
    }
LABEL_16:
    JreThrowNullPointerException();
  }
  if (!a2) {
    goto LABEL_16;
  }
  int v5 = *(_DWORD *)(a2 + 20);
  if (!v5) {
    return result;
  }
  uint64_t v6 = (uint64_t)result[1];
  if (v4 == v5)
  {
    sub_10025549C(v6, (uint64_t)v3[1], *((unsigned int *)v3 + 4), *(void *)(a2 + 8), *(unsigned int *)(a2 + 16));
  }
  else
  {
    int v7 = sub_1002568A8(v6, *(void *)(a2 + 8), *((_DWORD *)v3 + 4), *(_DWORD *)(a2 + 16));
    uint64_t v8 = (uint64_t)v3[1];
    int v9 = *((_DWORD *)v3 + 4);
    uint64_t v10 = *(void *)(a2 + 8);
    int v11 = *(_DWORD *)(a2 + 16);
    if (v7 < 1)
    {
      sub_1002561B4(v8, v8, v9, v10, v11);
      *((_DWORD *)v3 + 5) = -*((_DWORD *)v3 + 5);
    }
    else
    {
      sub_100255C38(v8, v8, v9, v10, v11);
    }
  }
LABEL_13:
  *((_DWORD *)v3 + 4) = JavaLangMath_maxWithInt_withInt_(*((unsigned int *)v3 + 4), *(_DWORD *)(a2 + 16)) + 1;
  [v3 cutOffLeadingZeroes];
  return (void **)[v3 unCache];
}

uint64_t sub_1002568A8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (a3 > a4) {
    return 1;
  }
  if (a3 < a4) {
    return 0xFFFFFFFFLL;
  }
  LODWORD(v5) = a3;
  do
  {
    uint64_t v5 = (v5 - 1);
    if ((int)v5 < 0) {
      return 0;
    }
    if (!a1) {
      goto LABEL_21;
    }
    uint64_t v7 = *(unsigned int *)(a1 + 8);
    if ((int)v5 >= (int)v7) {
      IOSArray_throwOutOfBoundsWithMsg(v7, v5);
    }
    if (!a2) {
LABEL_21:
    }
      JreThrowNullPointerException();
    uint64_t v8 = *(unsigned int *)(a2 + 8);
    if ((int)v5 >= (int)v8) {
      IOSArray_throwOutOfBoundsWithMsg(v8, v5);
    }
  }
  while (*(_DWORD *)(a1 + 12 + 4 * v5) == *(_DWORD *)(a2 + 12 + 4 * v5));
  uint64_t v9 = *(unsigned int *)(a1 + 8);
  if ((int)v5 >= (int)v9) {
    IOSArray_throwOutOfBoundsWithMsg(v9, v5);
  }
  unsigned int v10 = *(_DWORD *)(a1 + 12 + 4 * v5);
  uint64_t v11 = *(unsigned int *)(a2 + 8);
  if ((int)v5 >= (int)v11) {
    IOSArray_throwOutOfBoundsWithMsg(v11, v5);
  }
  if (v10 < *(_DWORD *)(a2 + 12 + 4 * v5)) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 1;
  }
}

void sub_1002569DC()
{
}

void sub_100256C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100256D3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *JavaNioChannelsSpiAbstractInterruptibleChannel_init(unsigned __int8 *a1)
{
  atomic_store(0, a1 + 9);
  atomic_store(0, a1 + 8);
  CFIndex v2 = (id *)(a1 + 16);
  uint64_t v3 = [JavaNioChannelsSpiAbstractInterruptibleChannel_ChannelCloser alloc];
  objc_storeWeak((id *)&v3->this$0_, a1);
  return JreStrongAssignAndConsume(v2, v3);
}

unsigned __int8 *sub_100256E38(unsigned __int8 *result)
{
  int v1 = result + 9;
  unsigned __int8 v2 = atomic_load(result + 9);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = result;
    objc_sync_enter(result);
    unsigned __int8 v4 = atomic_load(v1);
    if ((v4 & 1) == 0)
    {
      atomic_store(1u, v3 + 9);
      [v3 implCloseChannel];
    }
    return (unsigned __int8 *)objc_sync_exit(v3);
  }
  return result;
}

void sub_100256EA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100257004(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
}

id JavaNioChannelsSelectionKey_init(uint64_t a1)
{
  return JreVolatileStrongAssign((atomic_ullong *)(a1 + 8), 0);
}

uint64_t sub_100257334(uint64_t a1)
{
  unsigned __int8 v2 = (id *)(a1 + 8);
  uint64_t v3 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume(v2, v3);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100257888;
  v5[3] = &unk_100407B30;
  v5[4] = a1;
  return atexit_b(v5);
}

uint64_t JavaLangRuntime_getRuntime()
{
  if ((atomic_load_explicit(JavaLangRuntime__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return qword_100561250;
}

id sub_100257888(uint64_t a1)
{
  return [*(id *)(a1 + 32) runShutdownHooks];
}

id JavaLangThreadGroup_initWithJavaLangThreadGroup_withNSString_(uint64_t a1, _DWORD *a2, void *a3)
{
  *(_DWORD *)(a1 + 32) = 10;
  uint64_t v6 = (id *)(a1 + 40);
  id v7 = +[IOSObjectArray newArrayWithLength:5 type:JavaLangThread_class_()];
  JreStrongAssignAndConsume(v6, v7);
  if (qword_100561260 != -1) {
    dispatch_once(&qword_100561260, &stru_100468868);
  }
  JreStrongAssignAndConsume((id *)(a1 + 48), +[IOSObjectArray newArrayWithLength:3 type:qword_100561258]);
  JreStrongAssignAndConsume((id *)(a1 + 56), [JavaLangThreadGroup_ChildrenGroupsLock alloc]);
  JreStrongAssignAndConsume((id *)(a1 + 64), [JavaLangThreadGroup_ChildrenThreadsLock alloc]);
  JreStrongAssign((id *)(a1 + 24), a3);
  id result = sub_100258AFC((id *)a1, a2);
  if (a2)
  {
    int v9 = a2[8];
    return (id)sub_1002589C4(a1, v9);
  }
  return result;
}

id JavaLangThreadGroup_initWithJavaLangThreadGroup_(uint64_t a1, void *a2)
{
  *(_DWORD *)(a1 + 32) = 10;
  unsigned __int8 v4 = (id *)(a1 + 40);
  id v5 = +[IOSObjectArray newArrayWithLength:5 type:JavaLangThread_class_()];
  JreStrongAssignAndConsume(v4, v5);
  if (qword_100561260 != -1) {
    dispatch_once(&qword_100561260, &stru_100468868);
  }
  JreStrongAssignAndConsume((id *)(a1 + 48), +[IOSObjectArray newArrayWithLength:3 type:qword_100561258]);
  JreStrongAssignAndConsume((id *)(a1 + 56), [JavaLangThreadGroup_ChildrenGroupsLock alloc]);
  JreStrongAssignAndConsume((id *)(a1 + 64), [JavaLangThreadGroup_ChildrenThreadsLock alloc]);
  JreStrongAssign((id *)(a1 + 24), @"main");
  return sub_100258AFC((id *)a1, a2);
}

void sub_100257D4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100257E38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100257F60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100257F80(uint64_t a1, void *a2)
{
  unsigned __int8 v4 = *(void **)(a1 + 56);
  objc_sync_enter(v4);
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v11 = new_JavaLangIllegalThreadStateException_init();
    objc_exception_throw(v11);
  }
  uint64_t v5 = *(void *)(a1 + 48);
  if (!v5) {
    JreThrowNullPointerException();
  }
  int v6 = *(_DWORD *)(v5 + 8);
  uint64_t v7 = *(int *)(a1 + 20);
  if (v6 == v7)
  {
    if (qword_100561260 != -1) {
      dispatch_once(&qword_100561260, &stru_100468868);
    }
    uint64_t v8 = +[IOSObjectArray arrayWithLength:2 * v6 type:qword_100561258];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 48), 0, v8, 0, *(unsigned int *)(a1 + 20));
    uint64_t v9 = *(int *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v9 + 1;
    IOSObjectArray_Set((uint64_t)v8, v9, a2);
    JreStrongAssign((id *)(a1 + 48), v8);
  }
  else
  {
    *(_DWORD *)(a1 + 20) = v7 + 1;
    IOSObjectArray_Set(v5, v7, a2);
  }
  return objc_sync_exit(v4);
}

void sub_1002580B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002580D8(uint64_t a1)
{
  unsigned __int8 v2 = *(void **)(a1 + 64);
  objc_sync_enter(v2);
  uint64_t v3 = *(void **)(a1 + 56);
  objc_sync_enter(v3);
  int v4 = *(_DWORD *)(a1 + 20);
  if (v4 >= 1)
  {
    do
    {
      uint64_t v5 = *(void *)(a1 + 48);
      if (!v5) {
        goto LABEL_13;
      }
      uint64_t v6 = *(unsigned int *)(v5 + 8);
      if ((int)v6 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v6, 0);
      }
      if (!*(void *)(v5 + 24)) {
LABEL_13:
      }
        JreThrowNullPointerException();
      sub_1002580D8();
      --v4;
    }
    while (v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7) {
    sub_100258898(v7, a1);
  }
  *(unsigned char *)(a1 + 72) = 1;
  objc_sync_exit(v3);
  return objc_sync_exit(v2);
}

void sub_1002581C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100258200(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = 48;
  if (a5) {
    uint64_t v9 = 40;
  }
  uint64_t v10 = *(void *)(a1 + v9);
  uint64_t v11 = 56;
  if (a5) {
    uint64_t v11 = 64;
  }
  int v12 = *(void **)(a1 + v11);
  if (a5) {
    uint64_t v13 = 16;
  }
  else {
    uint64_t v13 = 20;
  }
  obid j = v12;
  objc_sync_enter(v12);
  LODWORD(v14) = *(_DWORD *)(a1 + v13);
  if ((int)v14 - 1 >= 0)
  {
    uint64_t v15 = v10 + 8 * (v14 - 1);
    do
    {
      uint64_t v14 = (v14 - 1);
      if (!a5) {
        goto LABEL_15;
      }
      uint64_t v16 = *(unsigned int *)(v10 + 8);
      if ((int)v14 >= (int)v16) {
        IOSArray_throwOutOfBoundsWithMsg(v16, v14);
      }
      uint64_t v17 = *(void **)(v15 + 24);
      objc_opt_class();
      if (!v17) {
LABEL_36:
      }
        JreThrowNullPointerException();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        JreThrowClassCastException();
      }
      if ([v17 isAlive])
      {
LABEL_15:
        if (!a2) {
          goto LABEL_36;
        }
        if ((int)a4 >= *(_DWORD *)(a2 + 8)) {
          goto LABEL_34;
        }
        uint64_t v18 = *(unsigned int *)(v10 + 8);
        if ((int)v14 >= (int)v18) {
          IOSArray_throwOutOfBoundsWithMsg(v18, v14);
        }
        IOSObjectArray_Set(a2, (int)a4, *(void **)(v15 + 24));
        a4 = (a4 + 1);
      }
      v15 -= 8;
    }
    while ((int)v14 > 0);
  }
  objc_sync_exit(obj);
  if (a3)
  {
    obid j = *(id *)(a1 + 56);
    objc_sync_enter(obj);
    if (*(int *)(a1 + 20) >= 1)
    {
      if (!a2) {
LABEL_37:
      }
        JreThrowNullPointerException();
      uint64_t v19 = 0;
      while ((int)a4 < *(_DWORD *)(a2 + 8))
      {
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20) {
          goto LABEL_37;
        }
        uint64_t v21 = *(unsigned int *)(v20 + 8);
        if ((int)v19 >= (int)v21) {
          IOSArray_throwOutOfBoundsWithMsg(v21, v19);
        }
        uint64_t v22 = *(void *)(v20 + 24 + 8 * v19);
        if (!v22) {
          goto LABEL_37;
        }
        a4 = sub_100258200(v22, a2, 1, a4, a5);
        if ((int)++v19 >= *(_DWORD *)(a1 + 20)) {
          break;
        }
      }
    }
LABEL_34:
    objc_sync_exit(obj);
  }
  return a4;
}

void sub_10025842C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

uint64_t sub_1002584A4(uint64_t a1, int a2)
{
  if (a2 >= 1)
  {
    int v4 = a2;
    while (1)
    {
      if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      if (!JavaLangSystem_out_) {
        break;
      }
      [(id)JavaLangSystem_out_ printWithNSString:@"    "];
      if (!--v4) {
        goto LABEL_7;
      }
    }
LABEL_36:
    JreThrowNullPointerException();
  }
LABEL_7:
  if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaLangSystem_out_) {
    goto LABEL_36;
  }
  objc_msgSend((id)JavaLangSystem_out_, "printlnWithNSString:", objc_msgSend((id)a1, "description"));
  obid j = *(id *)(a1 + 64);
  objc_sync_enter(obj);
  if (*(int *)(a1 + 16) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((a2 & 0x80000000) == 0)
      {
        int v6 = 0;
        do
        {
          if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          [(id)JavaLangSystem_out_ printWithNSString:@"    "];
          ++v6;
        }
        while (v6 <= a2);
      }
      if ((atomic_load_explicit(JavaLangSystem__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v7 = *(void *)(a1 + 40);
      if (!v7) {
        JreThrowNullPointerException();
      }
      uint64_t v8 = *(int *)(v7 + 8);
      if (v5 >= v8) {
        IOSArray_throwOutOfBoundsWithMsg(v8, v5);
      }
      [(id)JavaLangSystem_out_ printlnWithId:*(void *)(v7 + 24 + 8 * v5++)];
    }
    while (v5 < *(int *)(a1 + 16));
  }
  objc_sync_exit(obj);
  uint64_t v9 = *(void **)(a1 + 56);
  objc_sync_enter(v9);
  if (*(int *)(a1 + 20) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = (a2 + 1);
    do
    {
      uint64_t v12 = *(void *)(a1 + 48);
      if (!v12) {
        goto LABEL_35;
      }
      uint64_t v13 = *(unsigned int *)(v12 + 8);
      if ((int)v10 >= (int)v13) {
        IOSArray_throwOutOfBoundsWithMsg(v13, v10);
      }
      uint64_t v14 = *(void *)(v12 + 24 + 8 * v10);
      if (!v14) {
LABEL_35:
      }
        JreThrowNullPointerException();
      sub_1002584A4(v14, v11);
      ++v10;
    }
    while ((int)v10 < *(_DWORD *)(a1 + 20));
  }
  return objc_sync_exit(v9);
}

void sub_100258704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_100258878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100258898(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 56);
  objc_sync_enter(v4);
  if (*(int *)(a1 + 20) >= 1)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6) {
        goto LABEL_14;
      }
      uint64_t v7 = *(unsigned int *)(v6 + 8);
      if ((int)v5 >= (int)v7) {
        IOSArray_throwOutOfBoundsWithMsg(v7, v5);
      }
      uint64_t v8 = *(void **)(v6 + 24 + 8 * v5);
      if (!v8) {
LABEL_14:
      }
        JreThrowNullPointerException();
      if ([v8 isEqual:a2]) {
        break;
      }
      if ((int)++v5 >= *(_DWORD *)(a1 + 20)) {
        goto LABEL_11;
      }
    }
    int v9 = *(_DWORD *)(a1 + 20) - 1;
    *(_DWORD *)(a1 + 20) = v9;
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 48), (v5 + 1), *(void **)(a1 + 48), v5, (v9 - v5));
    IOSObjectArray_Set(*(void *)(a1 + 48), *(int *)(a1 + 20), 0);
  }
LABEL_11:
  return objc_sync_exit(v4);
}

void sub_1002589A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002589C4(uint64_t result, int a2)
{
  if (*(_DWORD *)(result + 32) >= a2)
  {
    uint64_t v2 = result;
    if (a2 <= 1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = a2;
    }
    uint64_t v4 = *(void *)(result + 8);
    int v5 = v3;
    if (v4) {
      int v5 = *(_DWORD *)(v4 + 32);
    }
    if (v5 >= (int)v3) {
      int v5 = v3;
    }
    *(_DWORD *)(result + 32) = v5;
    uint64_t v6 = *(void **)(result + 56);
    objc_sync_enter(v6);
    if (*(int *)(v2 + 20) >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = *(void *)(v2 + 48);
        if (!v8) {
          goto LABEL_20;
        }
        uint64_t v9 = *(unsigned int *)(v8 + 8);
        if ((int)v7 >= (int)v9) {
          IOSArray_throwOutOfBoundsWithMsg(v9, v7);
        }
        uint64_t v10 = *(void *)(v8 + 24 + 8 * v7);
        if (!v10) {
LABEL_20:
        }
          JreThrowNullPointerException();
        sub_1002589C4(v10, v3);
        ++v7;
      }
      while ((int)v7 < *(_DWORD *)(v2 + 20));
    }
    return objc_sync_exit(v6);
  }
  return result;
}

void sub_100258ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100258AFC(id *a1, void *a2)
{
  if (a2) {
    sub_100257F80((uint64_t)a2, a1);
  }
  return JreStrongAssign(a1 + 1, a2);
}

void sub_100258CD0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561258 = IOSClass_fromClass(v1);
}

id JavaIoByteArrayInputStream_initWithByteArray_(uint64_t a1, _DWORD *a2)
{
  JavaIoInputStream_init(a1, a2);
  *(_DWORD *)(a1 + 20) = 0;
  id result = JreStrongAssign((id *)(a1 + 8), a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  *(_DWORD *)(a1 + 24) = a2[2];
  return result;
}

id JavaIoByteArrayInputStream_initWithByteArray_withInt_withInt_(uint64_t a1, _DWORD *a2, int a3, int a4)
{
  JavaIoInputStream_init(a1, a2);
  id result = JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 20) = a3;
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v9 = a4 + a3;
  if (a4 + a3 >= a2[2]) {
    int v9 = a2[2];
  }
  *(_DWORD *)(a1 + 24) = v9;
  return result;
}

void sub_100258FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002590C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoByteArrayInputStream *new_JavaIoByteArrayInputStream_initWithByteArray_(_DWORD *a1)
{
  uint64_t v2 = [JavaIoByteArrayInputStream alloc];
  JavaIoByteArrayInputStream_initWithByteArray_((uint64_t)v2, a1);
  return v2;
}

id JavaNetInetSocketAddress_init(uint64_t a1)
{
  JavaNetSocketAddress_init();
  JreStrongAssign((id *)(a1 + 8), 0);
  id result = JreStrongAssign((id *)(a1 + 16), 0);
  *(_DWORD *)(a1 + 24) = -1;
  return result;
}

id JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_(uint64_t a1, void *a2, unsigned int a3)
{
  JavaNetSocketAddress_init();
  if (a3 >= 0x10000)
  {
    CFStringRef v14 = JreStrcat("$I", v6, v7, v8, v9, v10, v11, v12, @"port=");
    uint64_t v15 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
    objc_exception_throw(v15);
  }
  if (!a2)
  {
    if ((atomic_load_explicit(JavaNetInet4Address__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    a2 = (void *)JavaNetInet4Address_ANY_;
  }
  JreStrongAssign((id *)(a1 + 8), a2);
  id result = JreStrongAssign((id *)(a1 + 16), 0);
  *(_DWORD *)(a1 + 24) = a3;
  return result;
}

id JavaNetInetSocketAddress_initWithNSString_withInt_withBoolean_(uint64_t a1, void *a2, unsigned int a3, int a4)
{
  JavaNetSocketAddress_init();
  if (!a2 || a3 >= 0x10000)
  {
    CFStringRef v16 = JreStrcat("$$$I", v8, v9, v10, v11, v12, v13, v14, @"host=");
    uint64_t v17 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v16);
    objc_exception_throw(v17);
  }
  if (a4)
  {
    uint64_t v15 = JavaNetInetAddress_getByNameWithNSString_(a2);
    a2 = 0;
  }
  else
  {
    uint64_t v15 = 0;
  }
  JreStrongAssign((id *)(a1 + 8), v15);
  id result = JreStrongAssign((id *)(a1 + 16), a2);
  *(_DWORD *)(a1 + 24) = a3;
  return result;
}

JavaNetInetSocketAddress *JavaNetInetSocketAddress_createUnresolvedWithNSString_withInt_(void *a1, unsigned int a2)
{
  uint64_t v4 = [JavaNetInetSocketAddress alloc];
  JavaNetInetSocketAddress_initWithNSString_withInt_withBoolean_((uint64_t)v4, a1, a2, 0);
  return v4;
}

JavaNetInetSocketAddress *new_JavaNetInetSocketAddress_init()
{
  uint64_t v0 = [JavaNetInetSocketAddress alloc];
  JavaNetInetSocketAddress_init((uint64_t)v0);
  return v0;
}

JavaNetInetSocketAddress *new_JavaNetInetSocketAddress_initWithInt_(unsigned int a1)
{
  uint64_t v2 = [JavaNetInetSocketAddress alloc];
  JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_((uint64_t)v2, 0, a1);
  return v2;
}

JavaNetInetSocketAddress *new_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_(void *a1, unsigned int a2)
{
  uint64_t v4 = [JavaNetInetSocketAddress alloc];
  JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_((uint64_t)v4, a1, a2);
  return v4;
}

uint64_t JavaNetInetSocketAddress_class_()
{
  if (qword_100561270 != -1) {
    dispatch_once(&qword_100561270, &stru_100469118);
  }
  return qword_100561268;
}

void sub_1002599A4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100561268 = IOSClass_fromClass(v1);
}

id JavaNetURI_initWithNSString_withNSString_withNSString_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(a1 + 56) = -1;
  *(unsigned char *)(a1 + 90) = 0;
  *(_DWORD *)(a1 + 92) = -1;
  uint64_t v8 = new_JavaLangStringBuilder_init();
  uint64_t v9 = v8;
  if (a2)
  {
    [(JavaLangStringBuilder *)v8 appendWithNSString:a2];
    [(JavaLangStringBuilder *)v9 appendWithChar:58];
  }
  if (a3)
  {
    if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
      goto LABEL_12;
    }
    [(id)JavaNetURI_ALL_LEGAL_ENCODER_ appendEncodedWithJavaLangStringBuilder:v9 withNSString:a3];
  }
  if (!a4) {
    goto LABEL_9;
  }
  [(JavaLangStringBuilder *)v9 appendWithChar:35];
  if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
LABEL_12:
  }
    JreThrowNullPointerException();
  [(id)JavaNetURI_ALL_LEGAL_ENCODER_ appendEncodedWithJavaLangStringBuilder:v9 withNSString:a4];
LABEL_9:
  uint64_t v10 = [(JavaLangStringBuilder *)v9 description];
  return sub_10025A018(a1, v10, 0);
}

id JavaNetURI_initWithNSString_withNSString_withNSString_withInt_withNSString_withNSString_withNSString_(uint64_t a1, uint64_t a2, uint64_t a3, __CFString *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = a4;
  *(_DWORD *)(a1 + 56) = -1;
  *(unsigned char *)(a1 + 90) = 0;
  *(_DWORD *)(a1 + 92) = -1;
  if (!a2 && !a3 && !a4 && !a6 && !a7 && !a8)
  {
    CFStringRef v16 = (id *)(a1 + 64);
    return JreStrongAssign(v16, &stru_10048C1F8);
  }
  if (a2
    && a6
    && ([a6 isEmpty] & 1) == 0
    && [a6 charAtWithInt:0] != 47)
  {
    uint64_t v28 = new_JavaNetURISyntaxException_initWithNSString_withNSString_(a6, @"Relative path");
    objc_exception_throw(v28);
  }
  uint64_t v18 = new_JavaLangStringBuilder_init();
  uint64_t v19 = v18;
  if (a2)
  {
    [(JavaLangStringBuilder *)v18 appendWithNSString:a2];
    [(JavaLangStringBuilder *)v19 appendWithChar:58];
  }
  if (a3 || v12 || a5 != -1)
  {
    [(JavaLangStringBuilder *)v19 appendWithNSString:@"//"];
    if (a3)
    {
      if (!JavaNetURI_USER_INFO_ENCODER_) {
        goto LABEL_42;
      }
      [(id)JavaNetURI_USER_INFO_ENCODER_ appendEncodedWithJavaLangStringBuilder:v19 withNSString:a3];
      [(JavaLangStringBuilder *)v19 appendWithChar:64];
    }
    if (v12)
    {
      if ([(__CFString *)v12 indexOf:58] != -1
        && [(__CFString *)v12 indexOf:93] == -1
        && [(__CFString *)v12 indexOf:91] == -1)
      {
        uint64_t v12 = (__CFString *)JreStrcat("C$C", v20, v21, v22, v23, v24, v25, v26, (id)0x5B);
      }
      [(JavaLangStringBuilder *)v19 appendWithNSString:v12];
    }
    if (a5 != -1)
    {
      [(JavaLangStringBuilder *)v19 appendWithChar:58];
      [(JavaLangStringBuilder *)v19 appendWithInt:a5];
    }
  }
  if (a6)
  {
    if (!JavaNetURI_PATH_ENCODER_) {
      goto LABEL_42;
    }
    [(id)JavaNetURI_PATH_ENCODER_ appendEncodedWithJavaLangStringBuilder:v19 withNSString:a6];
  }
  if (a7)
  {
    [(JavaLangStringBuilder *)v19 appendWithChar:63];
    if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
      goto LABEL_42;
    }
    [(id)JavaNetURI_ALL_LEGAL_ENCODER_ appendEncodedWithJavaLangStringBuilder:v19 withNSString:a7];
  }
  if (a8)
  {
    [(JavaLangStringBuilder *)v19 appendWithChar:35];
    if (JavaNetURI_ALL_LEGAL_ENCODER_)
    {
      [(id)JavaNetURI_ALL_LEGAL_ENCODER_ appendEncodedWithJavaLangStringBuilder:v19 withNSString:a8];
      goto LABEL_39;
    }
LABEL_42:
    JreThrowNullPointerException();
  }
LABEL_39:
  unint64_t v27 = [(JavaLangStringBuilder *)v19 description];
  return sub_10025A018(a1, v27, 1);
}

id JavaNetURI_initWithNSString_withNSString_withNSString_withNSString_withNSString_(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(a1 + 56) = -1;
  *(unsigned char *)(a1 + 90) = 0;
  *(_DWORD *)(a1 + 92) = -1;
  if (a2
    && a4
    && ([a4 isEmpty] & 1) == 0
    && [a4 charAtWithInt:0] != 47)
  {
    CFStringRef v16 = new_JavaNetURISyntaxException_initWithNSString_withNSString_(a4, @"Relative path");
    objc_exception_throw(v16);
  }
  uint64_t v12 = new_JavaLangStringBuilder_init();
  uint64_t v13 = v12;
  if (a2)
  {
    [(JavaLangStringBuilder *)v12 appendWithNSString:a2];
    [(JavaLangStringBuilder *)v13 appendWithChar:58];
  }
  if (a3)
  {
    [(JavaLangStringBuilder *)v13 appendWithNSString:@"//"];
    if (!JavaNetURI_AUTHORITY_ENCODER_) {
      goto LABEL_22;
    }
    [(id)JavaNetURI_AUTHORITY_ENCODER_ appendEncodedWithJavaLangStringBuilder:v13 withNSString:a3];
  }
  if (a4)
  {
    if (!JavaNetURI_PATH_ENCODER_) {
      goto LABEL_22;
    }
    [(id)JavaNetURI_PATH_ENCODER_ appendEncodedWithJavaLangStringBuilder:v13 withNSString:a4];
  }
  if (a5)
  {
    [(JavaLangStringBuilder *)v13 appendWithChar:63];
    if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
      goto LABEL_22;
    }
    [(id)JavaNetURI_ALL_LEGAL_ENCODER_ appendEncodedWithJavaLangStringBuilder:v13 withNSString:a5];
  }
  if (!a6) {
    goto LABEL_19;
  }
  [(JavaLangStringBuilder *)v13 appendWithChar:35];
  if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
LABEL_22:
  }
    JreThrowNullPointerException();
  [(id)JavaNetURI_ALL_LEGAL_ENCODER_ appendEncodedWithJavaLangStringBuilder:v13 withNSString:a6];
LABEL_19:
  uint64_t v14 = [(JavaLangStringBuilder *)v13 description];
  return sub_10025A018(a1, v14, 0);
}

id sub_10025A018(uint64_t a1, void *a2, int a3)
{
  JreStrongAssign((id *)(a1 + 8), a2);
  if (!a2) {
    goto LABEL_25;
  }
  uint64_t FirstOfWithNSString_withNSString_withInt_withInt = LibcoreNetUrlUrlUtils_findFirstOfWithNSString_withNSString_withInt_withInt_(a2, @"#", 0, (int)[a2 length]);
  if ((int)FirstOfWithNSString_withNSString_withInt_withInt < (int)[a2 length])
  {
    if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
      goto LABEL_25;
    }
    JreStrongAssign((id *)(a1 + 80), objc_msgSend((id)JavaNetURI_ALL_LEGAL_ENCODER_, "validateWithNSString:withInt:withInt:withNSString:", a2, (FirstOfWithNSString_withNSString_withInt_withInt + 1), objc_msgSend(a2, "length"), @"fragment"));
  }
  uint64_t v7 = LibcoreNetUrlUrlUtils_findFirstOfWithNSString_withNSString_withInt_withInt_(a2, @":", 0, FirstOfWithNSString_withNSString_withInt_withInt);
  if ((int)v7 >= (int)LibcoreNetUrlUrlUtils_findFirstOfWithNSString_withNSString_withInt_withInt_(a2, @"/?#", 0, FirstOfWithNSString_withNSString_withInt_withInt))
  {
    uint64_t v9 = 0;
    *(unsigned char *)(a1 + 89) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 89) = 1;
    id v8 = sub_10025A36C(a2, v7);
    JreStrongAssign((id *)(a1 + 16), v8);
    uint64_t v9 = (v7 + 1);
    if (v9 == FirstOfWithNSString_withNSString_withInt_withInt)
    {
      CFStringRef v14 = @"Scheme-specific part expected";
      uint64_t v15 = a2;
      int v16 = FirstOfWithNSString_withNSString_withInt_withInt;
      goto LABEL_28;
    }
    if (([a2 regionMatches:v9 aString:@"/" otherOffset:0 count:1] & 1) == 0)
    {
      *(unsigned char *)(a1 + 88) = 1;
      if (JavaNetURI_ALL_LEGAL_ENCODER_)
      {
        id v10 = [(id)JavaNetURI_ALL_LEGAL_ENCODER_ validateWithNSString:a2 withInt:v9 withInt:FirstOfWithNSString_withNSString_withInt_withInt withNSString:@"scheme specific part"];
        return JreStrongAssign((id *)(a1 + 24), v10);
      }
LABEL_25:
      JreThrowNullPointerException();
    }
  }
  *(unsigned char *)(a1 + 88) = 0;
  JreStrongAssign((id *)(a1 + 24), [a2 substring:v9 endIndex:FirstOfWithNSString_withNSString_withInt_withInt]);
  if (![a2 regionMatches:v9 aString:@"//" otherOffset:0 count:2]) {
    goto LABEL_18;
  }
  uint64_t v12 = (v9 + 2);
  uint64_t v9 = LibcoreNetUrlUrlUtils_findFirstOfWithNSString_withNSString_withInt_withInt_(a2, @"/?", v12, FirstOfWithNSString_withNSString_withInt_withInt);
  if (v12 == [a2 length])
  {
    int v16 = [a2 length];
    CFStringRef v14 = @"Authority expected";
    uint64_t v15 = a2;
LABEL_28:
    uint64_t v17 = new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(v15, (uint64_t)v14, v16);
    objc_exception_throw(v17);
  }
  if ((int)v12 < (int)v9)
  {
    if (!JavaNetURI_AUTHORITY_ENCODER_) {
      goto LABEL_25;
    }
    JreStrongAssign((id *)(a1 + 32), [(id)JavaNetURI_AUTHORITY_ENCODER_ validateWithNSString:a2 withInt:v12 withInt:v9 withNSString:@"authority"]);
  }
LABEL_18:
  uint64_t v13 = LibcoreNetUrlUrlUtils_findFirstOfWithNSString_withNSString_withInt_withInt_(a2, @"?", v9, FirstOfWithNSString_withNSString_withInt_withInt);
  if (!JavaNetURI_PATH_ENCODER_) {
    goto LABEL_25;
  }
  JreStrongAssign((id *)(a1 + 64), [(id)JavaNetURI_PATH_ENCODER_ validateWithNSString:a2 withInt:v9 withInt:v13 withNSString:@"path"]);
  if ((int)v13 < (int)FirstOfWithNSString_withNSString_withInt_withInt)
  {
    if (!JavaNetURI_ALL_LEGAL_ENCODER_) {
      goto LABEL_25;
    }
    JreStrongAssign((id *)(a1 + 72), [(id)JavaNetURI_ALL_LEGAL_ENCODER_ validateWithNSString:a2 withInt:(v13 + 1) withInt:FirstOfWithNSString_withNSString_withInt_withInt withNSString:@"query"]);
  }
  return (id)sub_10025A428(a1, a3);
}

id sub_10025A36C(void *a1, uint64_t a2)
{
  if (!a2)
  {
    CFStringRef v6 = @"Scheme expected";
    goto LABEL_13;
  }
  if ((int)a2 >= 1)
  {
    if (a1)
    {
      uint64_t v4 = 0;
      while ((LibcoreNetUrlUrlUtils_isValidSchemeCharWithInt_withChar_(v4, [a1 charAtWithInt:v4]) & 1) != 0)
      {
        uint64_t v4 = (v4 + 1);
        if (a2 == v4) {
          goto LABEL_7;
        }
      }
      CFStringRef v6 = @"Illegal character in scheme";
LABEL_13:
      uint64_t v7 = new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(a1, (uint64_t)v6, 0);
      objc_exception_throw(v7);
    }
LABEL_11:
    JreThrowNullPointerException();
  }
LABEL_7:
  if (!a1) {
    goto LABEL_11;
  }
  return [a1 substring:0 endIndex:a2];
}

uint64_t sub_10025A428(uint64_t result, int a2)
{
  uint64_t v2 = *(void **)(result + 32);
  if (!v2) {
    return result;
  }
  uint64_t v4 = result;
  id v5 = [*(id *)(result + 32) indexOf:64];
  if (v5 == -1)
  {
    id v7 = 0;
    LODWORD(v8) = 0;
  }
  else
  {
    int v6 = (int)v5;
    id v7 = [v2 substring:0 endIndex:v5];
    sub_10025A654(*(void **)(v4 + 32), v7, 0);
    uint64_t v8 = (v6 + 1);
    id v9 = [v2 substring:v8];
    if (!v9) {
      goto LABEL_23;
    }
    uint64_t v2 = v9;
  }
  id v10 = [v2 lastIndexOf:58];
  int v11 = [v2 indexOf:93];
  if (v10 == -1 || v11 >= (int)v10)
  {
    int v13 = -1;
    goto LABEL_17;
  }
  id v14 = [v2 substring:0 endIndex:v10];
  if ((int)v10 >= (int)([v2 length] - 1))
  {
    int v13 = -1;
LABEL_16:
    uint64_t v2 = v14;
    if (v14)
    {
LABEL_17:
      id result = (uint64_t)[v2 isEmpty];
      if (result)
      {
        if (a2)
        {
          uint64_t v25 = new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(*(void **)(v4 + 32), @"Expected host", v8);
          objc_exception_throw(v25);
        }
      }
      else
      {
        id result = sub_10025A6F8(a2, v2);
        if (result)
        {
          JreStrongAssign((id *)(v4 + 40), v7);
          id result = (uint64_t)JreStrongAssign((id *)(v4 + 48), v2);
          *(_DWORD *)(v4 + 56) = v13;
          *(unsigned char *)(v4 + 90) = 1;
        }
      }
      return result;
    }
LABEL_23:
    JreThrowNullPointerException();
  }
  uint64_t v15 = (v10 + 1);
  id v16 = [v2 substring:v15];
  id result = JavaLangInteger_parseIntWithNSString_(v16, v17, v18, v19, v20, v21, v22, v23);
  int v13 = result;
  if ((result & 0x80000000) == 0) {
    goto LABEL_16;
  }
  if (a2)
  {
    uint64_t v24 = new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(*(void **)(v4 + 32), @"Invalid port number", (int)v15 + (int)v8);
    objc_exception_throw(v24);
  }
  return result;
}

void sub_10025A634(_Unwind_Exception *a1)
{
}

id sub_10025A654(void *a1, void *a2, int a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  id result = [a2 length];
  if ((int)result >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      unsigned int v8 = [a2 charAtWithInt:v7];
      if (v8 == 93 || v8 == 91)
      {
        id v9 = new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(a1, @"Illegal character in userInfo", a3 + (int)v7);
        objc_exception_throw(v9);
      }
      uint64_t v7 = (v7 + 1);
      id result = [a2 length];
    }
    while ((int)v7 < (int)result);
  }
  return result;
}

uint64_t sub_10025A6F8(int a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if ([a2 hasPrefix:@"["])
  {
    if ([a2 hasSuffix:@"]"])
    {
      if (JavaNetInetAddress_isNumericWithNSString_(a2))
      {
        char isKindOfClass = 1;
        return isKindOfClass & 1;
      }
      id v9 = new_JavaNetURISyntaxException_initWithNSString_withNSString_(a2, @"Malformed IPv6 address");
LABEL_20:
      objc_exception_throw(v9);
    }
    CFStringRef v7 = @"Expected a closing square bracket for IPv6 address";
LABEL_19:
    id v9 = new_JavaNetURISyntaxException_initWithNSString_withNSString_withInt_(a2, (uint64_t)v7, 0);
    goto LABEL_20;
  }
  if ([a2 indexOf:91] != -1 || objc_msgSend(a2, "indexOf:", 93) != -1) {
    goto LABEL_17;
  }
  unsigned int v5 = [a2 lastIndexOf:46];
  if ((v5 & 0x80000000) == 0)
  {
    unsigned int v6 = v5;
    if (v5 != [a2 length] - 1
      && JavaLangCharacter_isDigitWithChar_((UChar32)[a2 charAtWithInt:v6 + 1]))
    {
      JavaNetInetAddress_parseNumericAddressWithNSString_(a2);
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (isKindOfClass & 1 | ((a1 & 1) == 0)) {
        return isKindOfClass & 1;
      }
      CFStringRef v7 = @"Malformed IPv4 address";
      goto LABEL_19;
    }
  }
  char isKindOfClass = sub_10025A87C(a2);
  if ((isKindOfClass & 1) == 0)
  {
    if (a1)
    {
LABEL_17:
      CFStringRef v7 = @"Illegal character in host name";
      goto LABEL_19;
    }
  }
  return isKindOfClass & 1;
}

uint64_t sub_10025A87C(void *a1)
{
  LibcoreNetUriCodec_validateSimpleWithNSString_withNSString_(a1, @"-.");
  if (!a1 || (uint64_t v2 = (char *)[a1 split:@"\\."]) == 0) {
LABEL_11:
  }
    JreThrowNullPointerException();
  uint64_t v3 = (void **)(v2 + 24);
  unint64_t v4 = (unint64_t)&v2[8 * *((int *)v2 + 2) + 24];
  if ((unint64_t)(v2 + 24) >= v4) {
    return 0;
  }
  do
  {
    unsigned int v6 = *v3++;
    unsigned int v5 = v6;
    if (!v6) {
      goto LABEL_11;
    }
    if (([v5 hasPrefix:@"-"] & 1) != 0
      || ([v5 hasSuffix:@"-"] & 1) != 0)
    {
      return 0;
    }
  }
  while ((unint64_t)v3 < v4);
  if ([v5 isEqual:a1]) {
    return 1;
  }
  unsigned int v7 = [v5 charAtWithInt:0];
  uint64_t result = 0;
  if (v7 - 58 <= 0xFFFFFFF5) {
    return 1;
  }
  return result;
}

JavaNetURI *JavaNetURI_createWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaNetURI__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = [JavaNetURI alloc];
  v2->port_ = -1;
  v2->serverAuthority_ = 0;
  v2->hash__ = -1;
  sub_10025A018((uint64_t)v2, a1, 0);
  return v2;
}

JavaNetURI *sub_10025ABB4(uint64_t a1)
{
  uint64_t v2 = [JavaNetURI alloc];
  v2->port_ = -1;
  v2->serverAuthority_ = 0;
  v2->hash__ = -1;
  uint64_t v3 = v2;
  v3->absolute_ = *(unsigned char *)(a1 + 89);
  JreStrongAssign((id *)&v3->authority_, *(void **)(a1 + 32));
  JreStrongAssign((id *)&v3->fragment_, *(void **)(a1 + 80));
  JreStrongAssign((id *)&v3->host_, *(void **)(a1 + 48));
  v3->opaque_ = *(unsigned char *)(a1 + 88);
  JreStrongAssign((id *)&v3->path_, *(void **)(a1 + 64));
  v3->port_ = *(_DWORD *)(a1 + 56);
  JreStrongAssign((id *)&v3->query_, *(void **)(a1 + 72));
  JreStrongAssign((id *)&v3->scheme_, *(void **)(a1 + 16));
  JreStrongAssign((id *)&v3->schemeSpecificPart_, *(void **)(a1 + 24));
  JreStrongAssign((id *)&v3->userInfo_, *(void **)(a1 + 40));
  v3->serverAuthority_ = *(unsigned char *)(a1 + 90);
  return v3;
}

NSString *sub_10025AC84(void *a1)
{
  uint64_t v2 = new_JavaLangStringBuilder_initWithNSString_(&stru_10048C1F8);
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t v3 = v2;
  if ([a1 indexOf:37] == -1) {
    return (NSString *)a1;
  }
  unsigned int v4 = [a1 indexOf:37 fromIndex:0];
  if (v4 != -1)
  {
    unsigned int v5 = v4;
    uint64_t v6 = 0;
    while (1)
    {
      -[JavaLangStringBuilder appendWithNSString:](v3, "appendWithNSString:", [a1 substring:v6 endIndex:v5 + 1]);
      uint64_t v6 = v5 + 3;
      id v7 = [a1 substring:v5 + 1 endIndex:v6];
      if (!v7) {
        break;
      }
      unsigned int v8 = v7;
      if ((atomic_load_explicit(JavaUtilLocale__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      -[JavaLangStringBuilder appendWithNSString:](v3, "appendWithNSString:", [v8 lowercaseStringWithJRELocale:JavaUtilLocale_US_]);
      unsigned int v5 = [a1 indexOf:37 fromIndex:v6];
      if (v5 == -1) {
        goto LABEL_9;
      }
    }
LABEL_13:
    JreThrowNullPointerException();
  }
LABEL_9:
  return [(JavaLangStringBuilder *)v3 description];
}

id sub_10025ADE4(void *a1, void *a2)
{
  if (!a1 || (unsigned int v4 = [a1 length], !a2)) {
    JreThrowNullPointerException();
  }
  if (v4 != [a2 length]) {
    return 0;
  }
  unsigned int v5 = [a1 indexOf:37 fromIndex:0];
  if (v5 != [a2 indexOf:37 fromIndex:0]) {
    return 0;
  }
  uint64_t v6 = 0;
  while (v5 != -1)
  {
    if ([a1 regionMatches:v6 aString:a2 otherOffset:v6 count:v5 - v6])
    {
      if ([a1 regionMatches:1 thisOffset:v5 + 1 aString:a2 otherOffset:v5 + 1 count:2])
      {
        uint64_t v6 = v5 + 3;
        unsigned int v5 = [a1 indexOf:37 fromIndex:v6];
        if (v5 == [a2 indexOf:37 fromIndex:v6]) {
          continue;
        }
      }
    }
    return 0;
  }
  uint64_t v8 = [a2 length] - v6;
  return [a1 regionMatches:v6 aString:a2 otherOffset:v6 count:v8];
}

uint64_t JavaNetURI_getEffectivePortWithNSString_withInt_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaNetURI__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a2 == -1)
  {
    if ([@"http" equalsIgnoreCase:a1])
    {
      return 80;
    }
    else if ([@"https" equalsIgnoreCase:a1])
    {
      return 443;
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return a2;
}

CFStringRef sub_10025B428(__CFString *a1, int a2)
{
  uint64_t v2 = LibcoreNetUrlUrlUtils_canonicalizePathWithNSString_withBoolean_(a1, a2);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  unsigned int v4 = [(__CFString *)v2 indexOf:58];
  if (v4 != -1 && ((v5 = v4, signed int v6 = [(__CFString *)v3 indexOf:47], v6 == -1) || v5 < v6)) {
    return JreStrcat("$$", v7, v8, v9, v10, v11, v12, v13, @"./");
  }
  else {
    return v3;
  }
}

JavaNetURI_PartEncoder *sub_10025BD78(void *a1)
{
  uint64_t v2 = [JavaNetURI_PartEncoder alloc];
  LibcoreNetUriCodec_init(v2, v3);
  JreStrongAssign((id *)&v2->extraLegalCharacters_, a1);
  return v2;
}

JavaNetURI *new_JavaNetURI_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaNetURI alloc];
  v2->port_ = -1;
  v2->serverAuthority_ = 0;
  v2->hash__ = -1;
  sub_10025A018((uint64_t)v2, a1, 0);
  return v2;
}

JavaNetURI *new_JavaNetURI_initWithNSString_withNSString_withNSString_withNSString_(uint64_t a1, __CFString *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = [JavaNetURI alloc];
  JavaNetURI_initWithNSString_withNSString_withNSString_withInt_withNSString_withNSString_withNSString_((uint64_t)v8, a1, 0, a2, 0xFFFFFFFFLL, a3, 0, a4);
  return v8;
}

JavaNetURI *new_JavaNetURI_initWithNSString_withNSString_withNSString_withNSString_withNSString_(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = [JavaNetURI alloc];
  JavaNetURI_initWithNSString_withNSString_withNSString_withNSString_withNSString_((uint64_t)v10, a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_10025C12C(uint64_t a1)
{
  if (!a1 || (uint64_t v1 = *(void *)(a1 + 8)) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v2 = (unsigned __int8 *)(v1 + 12);
  uint64_t v3 = *(int *)(v1 + 8);
  if (v2 >= &v2[v3])
  {
    return 0;
  }
  else
  {
    __int16 v4 = 0;
    do
    {
      unsigned int v5 = *v2++;
      int8x16_t v6 = (int8x16_t)vdupq_n_s32(v5);
      __int16 v4 = vaddvq_s16(vsubq_s16((int16x8_t)(unsigned __int16)v4, (int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqzq_s32((int32x4_t)vandq_s8(v6, (int8x16_t)xmmword_100320950)), (int16x8_t)vceqzq_s32((int32x4_t)vandq_s8(v6, (int8x16_t)xmmword_100320960))))));
      --v3;
    }
    while (v3);
  }
  return v4;
}

JavaNetInterfaceAddress *new_JavaNetInterfaceAddress_initWithJavaNetInet4Address_withJavaNetInet4Address_withJavaNetInet4Address_(void *a1, void *a2, uint64_t a3)
{
  int8x16_t v6 = [JavaNetInterfaceAddress alloc];
  JreStrongAssign((id *)&v6->address_, a1);
  JreStrongAssign((id *)&v6->broadcastAddress_, a2);
  v6->prefixLength_ = sub_10025C12C(a3);
  return v6;
}

JavaNetInterfaceAddress *new_JavaNetInterfaceAddress_initWithJavaNetInet6Address_withShort_(void *a1, signed __int16 a2)
{
  __int16 v4 = [JavaNetInterfaceAddress alloc];
  JreStrongAssign((id *)&v4->address_, a1);
  JreStrongAssign((id *)&v4->broadcastAddress_, 0);
  v4->prefixLength_ = a2;
  return v4;
}

id sub_10025C4D4(id *a1, void *a2, void *a3)
{
  if (!a2)
  {
    int8x16_t v6 = new_JavaLangNullPointerException_initWithNSString_(@"service == null");
    objc_exception_throw(v6);
  }
  JreStrongAssign(a1 + 1, a2);
  JreStrongAssign(a1 + 2, a3);
  unsigned int v5 = new_JavaUtilHashSet_init();
  JreStrongAssignAndConsume(a1 + 3, v5);
  return [a1 reload];
}

JavaUtilServiceLoader *JavaUtilServiceLoader_load__WithIOSClass_withJavaLangClassLoader_(void *a1, void *a2)
{
  uint64_t SystemClassLoader = a2;
  if (!a2) {
    uint64_t SystemClassLoader = (void *)JavaLangClassLoader_getSystemClassLoader();
  }
  __int16 v4 = [JavaUtilServiceLoader alloc];
  sub_10025C4D4((id *)&v4->super.isa, a1, SystemClassLoader);
  return v4;
}

JavaUtilServiceLoader *JavaUtilServiceLoader_load__WithIOSClass_(void *a1)
{
  uint64_t v2 = JavaLangThread_currentThread();
  if (!v2) {
    JreThrowNullPointerException();
  }
  id v3 = [(JavaLangThread *)v2 getContextClassLoader];
  return JavaUtilServiceLoader_load__WithIOSClass_withJavaLangClassLoader_(a1, v3);
}

JavaUtilServiceLoader *JavaUtilServiceLoader_loadInstalledWithIOSClass_(void *a1)
{
  id SystemClassLoader = (id)JavaLangClassLoader_getSystemClassLoader();
  id v3 = SystemClassLoader;
  if (SystemClassLoader)
  {
    while ([SystemClassLoader getParent])
    {
      id SystemClassLoader = [v3 getParent];
      id v3 = SystemClassLoader;
    }
  }
  return JavaUtilServiceLoader_load__WithIOSClass_withJavaLangClassLoader_(a1, v3);
}

id JavaUtilServiceLoader_loadFromSystemPropertyWithIOSClass_(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)[a1 getName]);
  if (!PropertyWithNSString) {
    return 0;
  }
  id SystemClassLoader = (void *)JavaLangClassLoader_getSystemClassLoader();
  if (!SystemClassLoader
    || (id v3 = [SystemClassLoader loadClassWithNSString:PropertyWithNSString]) == 0)
  {
    JreThrowNullPointerException();
  }
  return [v3 newInstance];
}

void sub_10025C82C(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    id v3 = new_JavaLangError_initWithJavaLangThrowable_(v2);
    objc_exception_throw(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10025C854()
{
}

id sub_10025C94C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 32) = 0;
  __int16 v4 = (id *)(a1 + 40);
  unsigned int v5 = new_JavaUtilLinkedList_init();
  JreStrongAssignAndConsume(v4, v5);
  if (!a2) {
    JreThrowNullPointerException();
  }
  JreStrongAssign((id *)(a1 + 8), *(void **)(a2 + 16));
  JreStrongAssign((id *)(a1 + 16), *(void **)(a2 + 8));
  int8x16_t v6 = *(void **)(a2 + 24);
  return JreStrongAssign((id *)(a1 + 24), v6);
}

void sub_10025CC78(_Unwind_Exception *a1)
{
}

void sub_10025CD78(_Unwind_Exception *a1)
{
}

id sub_10025CDAC(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id result = [a1 length];
  if ((int)result >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      UChar32 v4 = [a1 charAtWithInt:v3];
      BOOL isJavaIdentifierPartWithChar = JavaLangCharacter_isJavaIdentifierPartWithChar_(v4);
      if (v4 != 46 && !isJavaIdentifierPartWithChar)
      {
        CFStringRef v13 = JreStrcat("$C$", v6, v7, v8, v9, v10, v11, v12, @"Bad character '");
        id v14 = new_JavaUtilServiceConfigurationError_initWithNSString_((uint64_t)v13);
        objc_exception_throw(v14);
      }
      uint64_t v3 = (v3 + 1);
      id result = [a1 length];
    }
    while ((int)v3 < (int)result);
  }
  return result;
}

id JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  return [a1 run];
}

id JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedExceptionAction_(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  return [a1 run];
}

void sub_10025CF74()
{
}

void sub_10025CFB4()
{
}

id JavaUtilIllegalFormatFlagsException_initWithNSString_(uint64_t a1, void *a2)
{
  JavaUtilIllegalFormatException_init(a1, a2);
  if (!a2)
  {
    unsigned int v5 = new_JavaLangNullPointerException_initWithNSString_(@"flags == null");
    objc_exception_throw(v5);
  }
  return JreStrongAssign((id *)(a1 + 88), a2);
}

JavaUtilIllegalFormatFlagsException *new_JavaUtilIllegalFormatFlagsException_initWithNSString_(void *a1)
{
  id v2 = [JavaUtilIllegalFormatFlagsException alloc];
  JavaUtilIllegalFormatFlagsException_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

JavaNioCharsetMalformedInputException *new_JavaNioCharsetMalformedInputException_initWithInt_(unsigned int a1)
{
  id v2 = [JavaNioCharsetMalformedInputException alloc];
  JavaNioCharsetCharacterCodingException_init(v2, v3);
  *(&v2->super.super.super.super.rawFrameCount + 1) = a1;
  return v2;
}

int32x2_t *unsafeBulkCopy(int32x2_t *result, int8x8_t *a2, int a3, int a4, char a5)
{
  if ((a5 & 1) == 0) {
    return (int32x2_t *)memcpy(result, a2, a3);
  }
  switch(a4)
  {
    case 8:
      if (a3 >= 0) {
        int v10 = a3;
      }
      else {
        int v10 = a3 + 7;
      }
      if ((a3 + 7) >= 0xF)
      {
        uint64_t v11 = (uint64_t)v10 >> 3;
        do
        {
          int8x8_t v12 = *a2++;
          *result++ = vrev64_s32((int32x2_t)vrev32_s8(v12));
          --v11;
        }
        while (v11);
      }
      break;
    case 4:
      if (a3 >= 0) {
        int v13 = a3;
      }
      else {
        int v13 = a3 + 3;
      }
      if ((a3 + 3) >= 7)
      {
        uint64_t v14 = (uint64_t)v13 >> 2;
        do
        {
          unsigned int v15 = a2->i32[0];
          a2 = (int8x8_t *)((char *)a2 + 4);
          result->i32[0] = bswap32(v15);
          id result = (int32x2_t *)((char *)result + 4);
          --v14;
        }
        while (v14);
      }
      break;
    case 2:
      if (a3 >= 0) {
        int v5 = a3;
      }
      else {
        int v5 = a3 + 1;
      }
      unsigned int v6 = v5 >> 1;
      unint64_t v7 = (uint64_t)v5 >> 1;
      if (v6 >= 2)
      {
        unint64_t v8 = v7 >> 1;
        do
        {
          unsigned int v9 = a2->i32[0];
          a2 = (int8x8_t *)((char *)a2 + 4);
          result->i32[0] = __rev16(v9);
          id result = (int32x2_t *)((char *)result + 4);
          --v8;
        }
        while (v8);
      }
      if (v7) {
        result->i16[0] = bswap32(a2->u16[0]) >> 16;
      }
      break;
  }
  return result;
}

uint64_t LibcoreIoMemory_peekIntWithByteArray_withInt_withJavaNioByteOrder_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaNioByteOrder_BIG_ENDIAN__ != a3)
  {
    if (a1)
    {
      uint64_t v6 = *(unsigned int *)(a1 + 8);
      if ((a2 & 0x80000000) != 0 || (int)v6 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v6, a2);
      }
      int v7 = a2 + 1;
      if ((int)a2 + 1 < 0 || v7 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v7);
      }
      int v8 = *(unsigned __int8 *)(a1 + 12 + (int)a2) | (*(unsigned __int8 *)(a1 + 12 + v7) << 8);
      int v9 = a2 + 2;
      if ((int)a2 + 2 < 0 || v9 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v9);
      }
      int v10 = v8 | (*(unsigned __int8 *)(a1 + 12 + v9) << 16);
      int v11 = a2 + 3;
      if ((int)a2 + 3 < 0 || v11 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v11);
      }
      return v10 | (*(unsigned __int8 *)(a1 + 12 + v11) << 24);
    }
LABEL_24:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_24;
  }
  uint64_t v13 = *(unsigned int *)(a1 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v13 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v13, a2);
  }
  int v14 = a2 + 1;
  if ((int)a2 + 1 < 0 || v14 >= (int)v13) {
    IOSArray_throwOutOfBoundsWithMsg(v13, v14);
  }
  int v15 = (*(unsigned __int8 *)(a1 + 12 + (int)a2) << 24) | (*(unsigned __int8 *)(a1 + 12 + v14) << 16);
  int v16 = a2 + 2;
  if ((int)a2 + 2 < 0 || v16 >= (int)v13) {
    IOSArray_throwOutOfBoundsWithMsg(v13, v16);
  }
  int v17 = v15 | (*(unsigned __int8 *)(a1 + 12 + v16) << 8);
  int v18 = a2 + 3;
  if ((int)a2 + 3 < 0 || v18 >= (int)v13) {
    IOSArray_throwOutOfBoundsWithMsg(v13, v18);
  }
  return v17 | *(unsigned __int8 *)(a1 + 12 + v18);
}

void sub_10025D58C()
{
}

unint64_t LibcoreIoMemory_peekLongWithByteArray_withInt_withJavaNioByteOrder_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaNioByteOrder_BIG_ENDIAN__ != a3)
  {
    if (a1)
    {
      uint64_t v6 = *(unsigned int *)(a1 + 8);
      if ((a2 & 0x80000000) != 0 || (int)v6 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v6, a2);
      }
      int v7 = a2 + 1;
      if ((int)a2 + 1 < 0 || v7 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v7);
      }
      uint64_t v8 = *(unsigned __int8 *)(a1 + 12 + v7);
      int v9 = a2 + 2;
      if ((int)a2 + 2 < 0 || v9 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v9);
      }
      uint64_t v10 = *(unsigned __int8 *)(a1 + 12 + v9);
      int v11 = a2 + 3;
      if ((int)a2 + 3 < 0 || v11 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v11);
      }
      uint64_t v12 = *(unsigned __int8 *)(a1 + 12 + v11);
      int v13 = a2 + 4;
      if ((int)a2 + 4 < 0 || v13 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v13);
      }
      unint64_t v14 = *(unsigned __int8 *)(a1 + 12 + (int)a2) | (unint64_t)(v8 << 8);
      int v15 = *(unsigned __int8 *)(a1 + 12 + v13);
      int v16 = a2 + 5;
      if ((int)a2 + 5 < 0 || v16 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v16);
      }
      uint64_t v17 = v14 | (v10 << 16);
      int v18 = v15 | (*(unsigned __int8 *)(a1 + 12 + v16) << 8);
      int v19 = a2 + 6;
      if ((int)a2 + 6 < 0 || v19 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v19);
      }
      unint64_t v20 = v17 | (v12 << 24);
      int v21 = v18 | (*(unsigned __int8 *)(a1 + 12 + v19) << 16);
      int v22 = a2 + 7;
      if ((int)a2 + 7 < 0 || v22 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v22);
      }
      unint64_t v23 = (unint64_t)(v21 | (*(unsigned __int8 *)(a1 + 12 + v22) << 24)) << 32;
      return v23 | v20;
    }
LABEL_41:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_41;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v24 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v24, a2);
  }
  int v25 = a2 + 1;
  if ((int)a2 + 1 < 0 || v25 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v25);
  }
  int v26 = *(unsigned __int8 *)(a1 + 12 + v25);
  int v27 = a2 + 2;
  if ((int)a2 + 2 < 0 || v27 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v27);
  }
  int v28 = *(unsigned __int8 *)(a1 + 12 + v27);
  int v29 = a2 + 3;
  if ((int)a2 + 3 < 0 || v29 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v29);
  }
  unsigned int v30 = *(unsigned __int8 *)(a1 + 12 + v29);
  int v31 = a2 + 4;
  if ((int)a2 + 4 < 0 || v31 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v31);
  }
  int v32 = (*(unsigned __int8 *)(a1 + 12 + (int)a2) << 24) | (v26 << 16);
  unint64_t v33 = (unint64_t)*(unsigned __int8 *)(a1 + 12 + v31) << 24;
  int v34 = a2 + 5;
  if ((int)a2 + 5 < 0 || v34 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v34);
  }
  int v35 = v32 | (v28 << 8);
  unint64_t v36 = v33 | ((unint64_t)*(unsigned __int8 *)(a1 + 12 + v34) << 16);
  int v37 = a2 + 6;
  if ((int)a2 + 6 < 0 || v37 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v37);
  }
  unint64_t v38 = v36 | ((unint64_t)*(unsigned __int8 *)(a1 + 12 + v37) << 8);
  int v39 = a2 + 7;
  if ((int)a2 + 7 < 0 || v39 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v39);
  }
  unint64_t v23 = v38 | *(unsigned __int8 *)(a1 + 12 + v39);
  unint64_t v20 = (unint64_t)(v35 | v30) << 32;
  return v23 | v20;
}

void sub_10025D9C8()
{
}

uint64_t LibcoreIoMemory_peekShortWithByteArray_withInt_withJavaNioByteOrder_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaNioByteOrder_BIG_ENDIAN__ != a3)
  {
    if (a1)
    {
      uint64_t v6 = *(unsigned int *)(a1 + 8);
      int v7 = a2 + 1;
      if ((int)a2 + 1 < 0 || v7 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v7);
      }
      __int16 v8 = *(unsigned __int8 *)(a1 + 12 + (int)a2 + 1) << 8;
      uint64_t v9 = (int)a2;
      if ((a2 & 0x80000000) != 0 || (int)v6 <= (int)a2)
      {
        uint64_t v10 = a2;
        goto LABEL_20;
      }
      return (v8 | *(unsigned __int8 *)(a1 + 12 + v9));
    }
LABEL_16:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_16;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v6 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v6, a2);
  }
  __int16 v8 = *(unsigned __int8 *)(a1 + 12 + (int)a2) << 8;
  int v11 = a2 + 1;
  uint64_t v9 = (int)a2 + 1;
  if ((int)a2 + 1 < 0 || v11 >= (int)v6)
  {
    uint64_t v10 = v11;
LABEL_20:
    IOSArray_throwOutOfBoundsWithMsg(v6, v10);
  }
  return (v8 | *(unsigned __int8 *)(a1 + 12 + v9));
}

void sub_10025DB34()
{
}

uint64_t LibcoreIoMemory_pokeIntWithByteArray_withInt_withInt_withJavaNioByteOrder_(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaNioByteOrder_BIG_ENDIAN__ != a4)
  {
    if (a1)
    {
      uint64_t v8 = *(unsigned int *)(a1 + 8);
      if ((a2 & 0x80000000) != 0 || (int)v8 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v8, a2);
      }
      *(unsigned char *)(a1 + 12 + (int)a2) = a3;
      uint64_t v9 = *(unsigned int *)(a1 + 8);
      int v10 = a2 + 1;
      if ((int)a2 + 1 < 0 || v10 >= (int)v9) {
        IOSArray_throwOutOfBoundsWithMsg(v9, v10);
      }
      *(unsigned char *)(a1 + 12 + v10) = BYTE1(a3);
      uint64_t v11 = *(unsigned int *)(a1 + 8);
      int v12 = a2 + 2;
      if ((int)a2 + 2 < 0 || v12 >= (int)v11) {
        IOSArray_throwOutOfBoundsWithMsg(v11, v12);
      }
      *(unsigned char *)(a1 + 12 + (int)a2 + 2) = BYTE2(a3);
      a3 >>= 24;
      goto LABEL_20;
    }
LABEL_23:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_23;
  }
  uint64_t v13 = *(unsigned int *)(a1 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v13 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v13, a2);
  }
  *(unsigned char *)(a1 + 12 + (int)a2) = HIBYTE(a3);
  uint64_t v14 = *(unsigned int *)(a1 + 8);
  int v15 = a2 + 1;
  if ((int)a2 + 1 < 0 || v15 >= (int)v14) {
    IOSArray_throwOutOfBoundsWithMsg(v14, v15);
  }
  *(unsigned char *)(a1 + 12 + v15) = BYTE2(a3);
  uint64_t v16 = *(unsigned int *)(a1 + 8);
  int v17 = a2 + 2;
  if ((int)a2 + 2 < 0 || v17 >= (int)v16) {
    IOSArray_throwOutOfBoundsWithMsg(v16, v17);
  }
  *(unsigned char *)(a1 + 12 + (int)a2 + 2) = BYTE1(a3);
LABEL_20:
  uint64_t result = *(unsigned int *)(a1 + 8);
  uint64_t v19 = (a2 + 3);
  if ((int)v19 < 0 || (int)v19 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v19);
  }
  *(unsigned char *)(a1 + 12 + (int)v19) = a3;
  return result;
}

uint64_t LibcoreIoMemory_pokeLongWithByteArray_withInt_withLong_withJavaNioByteOrder_(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaNioByteOrder_BIG_ENDIAN__ != a4)
  {
    if (a1)
    {
      uint64_t v8 = *(unsigned int *)(a1 + 8);
      if ((a2 & 0x80000000) != 0 || (int)v8 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v8, a2);
      }
      *(unsigned char *)(a1 + 12 + (int)a2) = a3;
      uint64_t v9 = *(unsigned int *)(a1 + 8);
      int v10 = a2 + 1;
      if ((int)a2 + 1 < 0 || v10 >= (int)v9) {
        IOSArray_throwOutOfBoundsWithMsg(v9, v10);
      }
      *(unsigned char *)(a1 + 12 + v10) = BYTE1(a3);
      uint64_t v11 = *(unsigned int *)(a1 + 8);
      int v12 = a2 + 2;
      if ((int)a2 + 2 < 0 || v12 >= (int)v11) {
        IOSArray_throwOutOfBoundsWithMsg(v11, v12);
      }
      *(unsigned char *)(a1 + 12 + v12) = BYTE2(a3);
      uint64_t v13 = *(unsigned int *)(a1 + 8);
      int v14 = a2 + 3;
      if ((int)a2 + 3 < 0 || v14 >= (int)v13) {
        IOSArray_throwOutOfBoundsWithMsg(v13, v14);
      }
      *(unsigned char *)(a1 + 12 + v14) = BYTE3(a3);
      uint64_t v15 = *(unsigned int *)(a1 + 8);
      int v16 = a2 + 4;
      if ((int)a2 + 4 < 0 || v16 >= (int)v15) {
        IOSArray_throwOutOfBoundsWithMsg(v15, v16);
      }
      *(unsigned char *)(a1 + 12 + v16) = BYTE4(a3);
      uint64_t v17 = *(unsigned int *)(a1 + 8);
      int v18 = a2 + 5;
      if ((int)a2 + 5 < 0 || v18 >= (int)v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, v18);
      }
      *(unsigned char *)(a1 + 12 + v18) = BYTE5(a3);
      uint64_t v19 = *(unsigned int *)(a1 + 8);
      int v20 = a2 + 6;
      if ((int)a2 + 6 < 0 || v20 >= (int)v19) {
        IOSArray_throwOutOfBoundsWithMsg(v19, v20);
      }
      *(unsigned char *)(a1 + 12 + (int)a2 + 6) = BYTE6(a3);
      a3 >>= 56;
      goto LABEL_36;
    }
LABEL_39:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_39;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v21 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v21, a2);
  }
  *(unsigned char *)(a1 + 12 + (int)a2) = HIBYTE(a3);
  uint64_t v22 = *(unsigned int *)(a1 + 8);
  int v23 = a2 + 1;
  if ((int)a2 + 1 < 0 || v23 >= (int)v22) {
    IOSArray_throwOutOfBoundsWithMsg(v22, v23);
  }
  *(unsigned char *)(a1 + 12 + v23) = BYTE6(a3);
  uint64_t v24 = *(unsigned int *)(a1 + 8);
  int v25 = a2 + 2;
  if ((int)a2 + 2 < 0 || v25 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v25);
  }
  *(unsigned char *)(a1 + 12 + v25) = BYTE5(a3);
  uint64_t v26 = *(unsigned int *)(a1 + 8);
  int v27 = a2 + 3;
  if ((int)a2 + 3 < 0 || v27 >= (int)v26) {
    IOSArray_throwOutOfBoundsWithMsg(v26, v27);
  }
  *(unsigned char *)(a1 + 12 + v27) = BYTE4(a3);
  uint64_t v28 = *(unsigned int *)(a1 + 8);
  int v29 = a2 + 4;
  if ((int)a2 + 4 < 0 || v29 >= (int)v28) {
    IOSArray_throwOutOfBoundsWithMsg(v28, v29);
  }
  *(unsigned char *)(a1 + 12 + v29) = BYTE3(a3);
  uint64_t v30 = *(unsigned int *)(a1 + 8);
  int v31 = a2 + 5;
  if ((int)a2 + 5 < 0 || v31 >= (int)v30) {
    IOSArray_throwOutOfBoundsWithMsg(v30, v31);
  }
  *(unsigned char *)(a1 + 12 + v31) = BYTE2(a3);
  uint64_t v32 = *(unsigned int *)(a1 + 8);
  int v33 = a2 + 6;
  if ((int)a2 + 6 < 0 || v33 >= (int)v32) {
    IOSArray_throwOutOfBoundsWithMsg(v32, v33);
  }
  *(unsigned char *)(a1 + 12 + (int)a2 + 6) = BYTE1(a3);
LABEL_36:
  uint64_t result = *(unsigned int *)(a1 + 8);
  uint64_t v35 = (a2 + 7);
  if ((int)v35 < 0 || (int)v35 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v35);
  }
  *(unsigned char *)(a1 + 12 + (int)v35) = a3;
  return result;
}

uint64_t LibcoreIoMemory_pokeShortWithByteArray_withInt_withShort_withJavaNioByteOrder_(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  if ((atomic_load_explicit(JavaNioByteOrder__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaNioByteOrder_BIG_ENDIAN__ != a4)
  {
    if (a1)
    {
      uint64_t v8 = (a2 + 1);
      uint64_t v9 = *(unsigned int *)(a1 + 8);
      if ((a2 & 0x80000000) != 0 || (int)v9 <= (int)a2) {
        IOSArray_throwOutOfBoundsWithMsg(v9, a2);
      }
      *(unsigned char *)(a1 + 12 + (int)a2) = a3;
      LOBYTE(a3) = HIBYTE(a3);
      goto LABEL_12;
    }
LABEL_15:
    JreThrowNullPointerException();
  }
  if (!a1) {
    goto LABEL_15;
  }
  uint64_t v8 = (a2 + 1);
  uint64_t v10 = *(unsigned int *)(a1 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v10 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v10, a2);
  }
  *(unsigned char *)(a1 + 12 + (int)a2) = HIBYTE(a3);
LABEL_12:
  uint64_t result = *(unsigned int *)(a1 + 8);
  if ((v8 & 0x80000000) != 0 || (int)v8 >= (int)result) {
    IOSArray_throwOutOfBoundsWithMsg(result, v8);
  }
  *(unsigned char *)(a1 + 12 + (int)v8) = a3;
  return result;
}

uint64_t LibcoreIoMemory_memmoveWithId_withInt_withId_withInt_withLong_(uint64_t a1, int a2, uint64_t a3, int a4, size_t a5)
{
  if (!a1) {
    goto LABEL_19;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    uint64_t result = objc_opt_isKindOfClass();
    if ((result & 1) == 0) {
      return result;
    }
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      return result;
    }
LABEL_8:
    if (a3)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t result = *(unsigned int *)(a3 + 8);
        if ((int)result <= 0) {
          IOSArray_throwOutOfBoundsWithMsg(result, 0);
        }
        uint64_t v12 = a3 + 12;
        if (a3 == -12) {
          return result;
        }
      }
      else
      {
        objc_opt_class();
        uint64_t result = objc_opt_isKindOfClass();
        if ((result & 1) == 0) {
          return result;
        }
        uint64_t v12 = *(void *)(a3 + 32);
        if (!v12) {
          return result;
        }
      }
      return (uint64_t)memmove((void *)(v11 + a2), (const void *)(v12 + a4), a5);
    }
LABEL_19:
    JreThrowNullPointerException();
  }
  uint64_t result = *(unsigned int *)(a1 + 8);
  if ((int)result <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(result, 0);
  }
  uint64_t v11 = a1 + 12;
  if (v11) {
    goto LABEL_8;
  }
  return result;
}

uint64_t LibcoreIoMemory_peekByteWithLong_(char *a1)
{
  return *a1;
}

uint64_t LibcoreIoMemory_peekIntWithLong_withBoolean_(unsigned int *a1, int a2)
{
  uint64_t result = *a1;
  if (a2) {
    return JavaLangInteger_reverseBytesWithInt_(result);
  }
  return result;
}

unint64_t LibcoreIoMemory_peekLongWithLong_withBoolean_(unint64_t *a1, int a2)
{
  unint64_t result = *a1;
  if (a2) {
    return JavaLangLong_reverseBytesWithLong_(result);
  }
  return result;
}

uint64_t LibcoreIoMemory_peekShortWithLong_withBoolean_(__int16 *a1, int a2)
{
  uint64_t result = *a1;
  if (a2) {
    return JavaLangShort_reverseBytesWithShort_(result);
  }
  return result;
}

void *LibcoreIoMemory_peekByteArrayWithLong_withByteArray_withInt_withInt_(void *__src, uint64_t a2, int a3, int a4)
{
  return memmove((void *)(a2 + 12 + a3), __src, a4);
}

uint64_t LibcoreIoMemory_peekCharArrayWithLong_withCharArray_withInt_withInt_withBoolean_(unsigned int *__src, uint64_t a2, uint64_t a3, signed int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v9 = (_DWORD *)(a2 + 12 + 2 * (int)a3);
    if (a4 >= 2)
    {
      unint64_t v10 = (unint64_t)a4 >> 1;
      do
      {
        unsigned int v11 = *__src++;
        *v9++ = __rev16(v11);
        --v10;
      }
      while (v10);
    }
    if (a4) {
      *(_WORD *)uint64_t v9 = bswap32(*(unsigned __int16 *)__src) >> 16;
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    return (uint64_t)memmove((void *)(a2 + 12 + 2 * (int)a3), __src, 2 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_peekDoubleArrayWithLong_withDoubleArray_withInt_withInt_withBoolean_(int8x8_t *__src, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (int32x2_t *)(a2 + 16 + 8 * (int)a3);
      do
      {
        int8x8_t v11 = *__src++;
        *v10++ = vrev64_s32((int32x2_t)vrev32_s8(v11));
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    return (uint64_t)memmove((void *)(a2 + 16 + 8 * (int)a3), __src, 8 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_peekFloatArrayWithLong_withFloatArray_withInt_withInt_withBoolean_(unsigned int *__src, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (_DWORD *)(a2 + 12 + 4 * (int)a3);
      do
      {
        unsigned int v11 = *__src++;
        *v10++ = bswap32(v11);
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    return (uint64_t)memmove((void *)(a2 + 12 + 4 * (int)a3), __src, 4 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_peekIntArrayWithLong_withIntArray_withInt_withInt_withBoolean_(unsigned int *__src, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (_DWORD *)(a2 + 12 + 4 * (int)a3);
      do
      {
        unsigned int v11 = *__src++;
        *v10++ = bswap32(v11);
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    return (uint64_t)memmove((void *)(a2 + 12 + 4 * (int)a3), __src, 4 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_peekLongArrayWithLong_withLongArray_withInt_withInt_withBoolean_(int8x8_t *__src, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (int32x2_t *)(a2 + 16 + 8 * (int)a3);
      do
      {
        int8x8_t v11 = *__src++;
        *v10++ = vrev64_s32((int32x2_t)vrev32_s8(v11));
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    return (uint64_t)memmove((void *)(a2 + 16 + 8 * (int)a3), __src, 8 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_peekShortArrayWithLong_withShortArray_withInt_withInt_withBoolean_(unsigned int *__src, uint64_t a2, uint64_t a3, signed int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v9 = (_DWORD *)(a2 + 12 + 2 * (int)a3);
    if (a4 >= 2)
    {
      unint64_t v10 = (unint64_t)a4 >> 1;
      do
      {
        unsigned int v11 = *__src++;
        *v9++ = __rev16(v11);
        --v10;
      }
      while (v10);
    }
    if (a4) {
      *(_WORD *)uint64_t v9 = bswap32(*(unsigned __int16 *)__src) >> 16;
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    return (uint64_t)memmove((void *)(a2 + 12 + 2 * (int)a3), __src, 2 * a4);
  }
  return result;
}

unsigned char *LibcoreIoMemory_pokeByteWithLong_withByte_(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t LibcoreIoMemory_pokeIntWithLong_withInt_withBoolean_(uint64_t result, unsigned int a2, int a3)
{
  uint64_t v3 = (_DWORD *)result;
  if (a3)
  {
    uint64_t result = JavaLangInteger_reverseBytesWithInt_(a2);
    a2 = result;
  }
  *uint64_t v3 = a2;
  return result;
}

unint64_t LibcoreIoMemory_pokeLongWithLong_withLong_withBoolean_(unint64_t result, unint64_t a2, int a3)
{
  uint64_t v3 = (void *)result;
  if (a3)
  {
    uint64_t result = JavaLangLong_reverseBytesWithLong_(a2);
    a2 = result;
  }
  *uint64_t v3 = a2;
  return result;
}

uint64_t LibcoreIoMemory_pokeShortWithLong_withShort_withBoolean_(uint64_t result, __int16 a2, int a3)
{
  uint64_t v3 = (_WORD *)result;
  if (a3)
  {
    uint64_t result = JavaLangShort_reverseBytesWithShort_(a2);
    a2 = result;
  }
  *uint64_t v3 = a2;
  return result;
}

void *LibcoreIoMemory_pokeByteArrayWithLong_withByteArray_withInt_withInt_(void *a1, uint64_t a2, int a3, int a4)
{
  return memmove(a1, (const void *)(a2 + 12 + a3), a4);
}

uint64_t LibcoreIoMemory_pokeCharArrayWithLong_withCharArray_withInt_withInt_withBoolean_(_DWORD *__dst, uint64_t a2, uint64_t a3, signed int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v9 = (unsigned int *)(a2 + 12 + 2 * (int)a3);
    if (a4 >= 2)
    {
      unint64_t v10 = (unint64_t)a4 >> 1;
      do
      {
        unsigned int v11 = *v9++;
        *__dst++ = __rev16(v11);
        --v10;
      }
      while (v10);
    }
    if (a4) {
      *(_WORD *)__dst = bswap32(*(unsigned __int16 *)v9) >> 16;
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v12 = (const void *)(a2 + 12 + 2 * (int)a3);
    return (uint64_t)memmove(__dst, v12, 2 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_pokeDoubleArrayWithLong_withDoubleArray_withInt_withInt_withBoolean_(int32x2_t *__dst, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (int8x8_t *)(a2 + 16 + 8 * (int)a3);
      do
      {
        int8x8_t v11 = *v10++;
        *__dst++ = vrev64_s32((int32x2_t)vrev32_s8(v11));
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v12 = (const void *)(a2 + 16 + 8 * (int)a3);
    return (uint64_t)memmove(__dst, v12, 8 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_pokeFloatArrayWithLong_withFloatArray_withInt_withInt_withBoolean_(_DWORD *__dst, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (unsigned int *)(a2 + 12 + 4 * (int)a3);
      do
      {
        unsigned int v11 = *v10++;
        *__dst++ = bswap32(v11);
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v12 = (const void *)(a2 + 12 + 4 * (int)a3);
    return (uint64_t)memmove(__dst, v12, 4 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_pokeIntArrayWithLong_withIntArray_withInt_withInt_withBoolean_(_DWORD *__dst, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (unsigned int *)(a2 + 12 + 4 * (int)a3);
      do
      {
        unsigned int v11 = *v10++;
        *__dst++ = bswap32(v11);
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v12 = (const void *)(a2 + 12 + 4 * (int)a3);
    return (uint64_t)memmove(__dst, v12, 4 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_pokeLongArrayWithLong_withLongArray_withInt_withInt_withBoolean_(int32x2_t *__dst, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    if (a4)
    {
      uint64_t v9 = a4;
      unint64_t v10 = (int8x8_t *)(a2 + 16 + 8 * (int)a3);
      do
      {
        int8x8_t v11 = *v10++;
        *__dst++ = vrev64_s32((int32x2_t)vrev32_s8(v11));
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v12 = (const void *)(a2 + 16 + 8 * (int)a3);
    return (uint64_t)memmove(__dst, v12, 8 * a4);
  }
  return result;
}

uint64_t LibcoreIoMemory_pokeShortArrayWithLong_withShortArray_withInt_withInt_withBoolean_(_DWORD *__dst, uint64_t a2, uint64_t a3, signed int a4, int a5)
{
  uint64_t result = *(unsigned int *)(a2 + 8);
  BOOL v8 = (int)a3 < 0 || (int)result <= (int)a3;
  if (a5)
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v9 = (unsigned int *)(a2 + 12 + 2 * (int)a3);
    if (a4 >= 2)
    {
      unint64_t v10 = (unint64_t)a4 >> 1;
      do
      {
        unsigned int v11 = *v9++;
        *__dst++ = __rev16(v11);
        --v10;
      }
      while (v10);
    }
    if (a4) {
      *(_WORD *)__dst = bswap32(*(unsigned __int16 *)v9) >> 16;
    }
  }
  else
  {
    if (v8) {
      IOSArray_throwOutOfBoundsWithMsg(result, a3);
    }
    uint64_t v12 = (const void *)(a2 + 12 + 2 * (int)a3);
    return (uint64_t)memmove(__dst, v12, 2 * a4);
  }
  return result;
}

JavaLangArrayIndexOutOfBoundsException *new_JavaLangArrayIndexOutOfBoundsException_init()
{
  uint64_t v0 = [JavaLangArrayIndexOutOfBoundsException alloc];
  JavaLangIndexOutOfBoundsException_init(v0, v1);
  return v0;
}

JavaLangArrayIndexOutOfBoundsException *new_JavaLangArrayIndexOutOfBoundsException_initWithInt_()
{
  uint64_t v0 = [JavaLangArrayIndexOutOfBoundsException alloc];
  CFStringRef v8 = JreStrcat("$I", v1, v2, v3, v4, v5, v6, v7, @"index=");
  JavaLangIndexOutOfBoundsException_initWithNSString_(v0, v8);
  return v0;
}

JavaLangArrayIndexOutOfBoundsException *new_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangArrayIndexOutOfBoundsException alloc];
  JavaLangIndexOutOfBoundsException_initWithNSString_(v2, a1);
  return v2;
}

JavaLangArrayIndexOutOfBoundsException *new_JavaLangArrayIndexOutOfBoundsException_initWithInt_withInt_withInt_()
{
  uint64_t v0 = [JavaLangArrayIndexOutOfBoundsException alloc];
  CFStringRef v8 = JreStrcat("$I$I$I", v1, v2, v3, v4, v5, v6, v7, @"length=");
  JavaLangIndexOutOfBoundsException_initWithNSString_(v0, v8);
  return v0;
}

id sub_10025F5D0(uint64_t a1, int a2)
{
  if (a2 < 8)
  {
    uint64_t v6 = 8;
  }
  else
  {
    unsigned int v3 = a2 | (a2 >> 1) | ((a2 | (a2 >> 1)) >> 2);
    unsigned int v4 = v3 | (v3 >> 4) | ((v3 | (v3 >> 4)) >> 8);
    int v5 = v4 | HIWORD(v4);
    if (v5 + 1 >= 0) {
      uint64_t v6 = (v5 + 1);
    }
    else {
      uint64_t v6 = 0x40000000;
    }
  }
  uint64_t v7 = +[IOSObjectArray arrayWithLength:v6 type:NSObject_class_()];
  objc_opt_class();
  if (v7 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return JreStrongAssign((id *)(a1 + 8), v7);
}

id sub_10025F698(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    JreThrowNullPointerException();
  }
  int v2 = *(_DWORD *)(v1 + 8);
  if (2 * v2 < 0)
  {
    uint64_t v7 = new_JavaLangIllegalStateException_initWithNSString_(@"Sorry, deque too big");
    objc_exception_throw(v7);
  }
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  int v5 = +[IOSObjectArray arrayWithLength:(2 * v2) type:NSObject_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), v4, v5, 0, (v2 - v4));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), 0, v5, (v2 - v4), v4);
  objc_opt_class();
  if (v5 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  id result = JreStrongAssign((id *)(a1 + 8), v5);
  *(_DWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 20) = v2;
  return result;
}

void *sub_10025F7CC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 20);
  if ((int)v4 < v5)
  {
    uint64_t v6 = *(void **)(a1 + 8);
    uint64_t v7 = (uint64_t)[(id)a1 size];
    CFStringRef v8 = v6;
    uint64_t v9 = v4;
    unint64_t v10 = a2;
    uint64_t v11 = 0;
LABEL_6:
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v8, v9, v10, v11, v7);
    return a2;
  }
  if ((int)v4 > v5)
  {
    uint64_t v12 = *(_DWORD **)(a1 + 8);
    if (!v12) {
      JreThrowNullPointerException();
    }
    uint64_t v13 = (v12[2] - v4);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v12, v4, a2, 0, v13);
    CFStringRef v8 = *(void **)(a1 + 8);
    uint64_t v7 = *(unsigned int *)(a1 + 20);
    uint64_t v9 = 0;
    unint64_t v10 = a2;
    uint64_t v11 = v13;
    goto LABEL_6;
  }
  return a2;
}

id JavaUtilArrayDeque_init(uint64_t a1, uint64_t a2)
{
  JavaUtilAbstractCollection_init(a1, a2);
  unsigned int v3 = +[IOSObjectArray arrayWithLength:16 type:NSObject_class_()];
  objc_opt_class();
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return JreStrongAssign((id *)(a1 + 8), v3);
}

id JavaUtilArrayDeque_initWithJavaUtilCollection_(void *a1, void *a2)
{
  JavaUtilAbstractCollection_init(a1, a2);
  if (!a2) {
    JreThrowNullPointerException();
  }
  sub_10025F5D0((uint64_t)a1, (int)[a2 size]);
  return [a1 addAllWithJavaUtilCollection:a2];
}

BOOL sub_10026008C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = *(int *)(a1 + 16);
  uint64_t v6 = *(unsigned int *)(a1 + 20);
  uint64_t v7 = (*(_DWORD *)(v2 + 8) - 1);
  uint64_t v8 = (a2 - v5) & v7;
  if ((int)v8 >= ((v6 - v5) & v7))
  {
    uint64_t v22 = new_JavaUtilConcurrentModificationException_init();
    objc_exception_throw(v22);
  }
  int v9 = (v6 - a2) & v7;
  if ((int)v8 < v9)
  {
    if ((int)a2 >= (int)v5)
    {
      int v13 = v5 + 1;
      uint64_t v15 = *(void **)(a1 + 8);
      uint64_t v16 = v5;
      uint64_t v17 = (void *)v2;
      uint64_t v18 = (v5 + 1);
      uint64_t v14 = v8;
    }
    else
    {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), 0, (void *)v2, 1, a2);
      uint64_t v12 = *(unsigned int *)(v2 + 8);
      if ((v7 & 0x80000000) != 0 || (int)v7 >= (int)v12) {
        IOSArray_throwOutOfBoundsWithMsg(v12, v7);
      }
      IOSObjectArray_Set(v2, 0, *(void **)(v2 + 24 + 8 * (int)v7));
      int v13 = v5 + 1;
      uint64_t v14 = (v7 - v5);
      uint64_t v15 = (void *)v2;
      uint64_t v16 = v5;
      uint64_t v17 = (void *)v2;
      uint64_t v18 = (v5 + 1);
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v15, v16, v17, v18, v14);
    IOSObjectArray_Set(v2, v5, 0);
    int v11 = v13 & v7;
    int v20 = &OBJC_IVAR___JavaUtilArrayDeque_head_;
  }
  else
  {
    uint64_t v10 = (a2 + 1);
    if ((int)v6 <= (int)a2)
    {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), v10, (void *)v2, a2, (v7 - a2));
      uint64_t v19 = *(unsigned int *)(v2 + 8);
      if ((int)v19 <= 0) {
        IOSArray_throwOutOfBoundsWithMsg(v19, 0);
      }
      IOSObjectArray_Set(v2, (int)v7, *(void **)(v2 + 24));
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_((id)v2, 1, (void *)v2, 0, v6);
      int v11 = (v6 - 1) & v7;
    }
    else
    {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), v10, (void *)v2, a2, (v6 - a2) & v7);
      int v11 = v6 - 1;
    }
    int v20 = &OBJC_IVAR___JavaUtilArrayDeque_tail_;
  }
  BOOL result = (int)v8 >= v9;
  *(_DWORD *)(a1 + *v20) = v11;
  return result;
}

void sub_1002608CC(_Unwind_Exception *a1)
{
}

JavaUtilArrayDeque *new_JavaUtilArrayDeque_init()
{
  uint64_t v0 = [JavaUtilArrayDeque alloc];
  JavaUtilArrayDeque_init((uint64_t)v0, v1);
  return v0;
}

JavaUtilArrayDeque *new_JavaUtilArrayDeque_initWithInt_(int a1)
{
  uint64_t v2 = [JavaUtilArrayDeque alloc];
  JavaUtilAbstractCollection_init(v2, v3);
  sub_10025F5D0((uint64_t)v2, a1);
  return v2;
}

JavaNioChannelsNonWritableChannelException *new_JavaNioChannelsNonWritableChannelException_init()
{
  uint64_t v0 = [JavaNioChannelsNonWritableChannelException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

uint64_t init_j2objc_thread_data()
{
  return pthread_key_create((pthread_key_t *)&qword_100561280, (void (__cdecl *)(void *))sub_1002610A4);
}

void sub_1002610A4(void **a1)
{
  pthread_setspecific(qword_100561280, 0);
  if (*a1) {
    free(*a1);
  }
  free(a1);
}

int objc_sync_enter(id obj)
{
  if (obj)
  {
    uint64_t v1 = sub_100261134((unint64_t)obj, 0);
    if (v1)
    {
      uint64_t v2 = (pthread_mutex_t *)(v1 + 24);
      LODWORD(obj) = pthread_mutex_lock(v2);
    }
    else
    {
      LODWORD(obj) = -3;
    }
  }
  return (int)obj;
}

char *sub_100261134(unint64_t a1, int a2)
{
  uint64_t v4 = sub_100261530(0);
  uint64_t v5 = v4;
  if (!v4 || (uint64_t v6 = v4[1], !v6))
  {
LABEL_6:
    if (a2 == 3) {
      return 0;
    }
    int v9 = (char *)&unk_1005612C0 + 64 * ((a1 >> 5) & 0x3F);
    uint64_t v10 = v9 + 8;
    os_unfair_lock_lock((os_unfair_lock_t)v9);
    int v11 = (char *)*((void *)v9 + 1);
    if (v11)
    {
      uint64_t v12 = 0;
      do
      {
        if (*((void *)v11 + 1) == a1)
        {
          atomic_fetch_add((atomic_uint *volatile)v11 + 4, 1u);
          goto LABEL_34;
        }
        if (!v12)
        {
          if (atomic_load((unsigned int *)v11 + 4)) {
            uint64_t v12 = 0;
          }
          else {
            uint64_t v12 = v11;
          }
        }
        int v11 = *(char **)v11;
      }
      while (v11);
      if ((a2 - 1) < 2) {
        goto LABEL_25;
      }
      if (v12)
      {
        *((void *)v12 + 1) = a1;
        atomic_store(1u, (unsigned int *)v12 + 4);
        int v11 = v12;
        goto LABEL_34;
      }
    }
    else if ((a2 - 1) < 2)
    {
LABEL_25:
      int v11 = 0;
      goto LABEL_34;
    }
    int v11 = (char *)malloc_type_malloc(0x88uLL, 0x10A0040502F9262uLL);
    *((void *)v11 + 1) = a1;
    atomic_store(1u, (unsigned int *)v11 + 4);
    if ((byte_1005622C0 & 1) == 0
      && !pthread_mutexattr_init(&stru_1005622C8)
      && !pthread_mutexattr_settype(&stru_1005622C8, 2))
    {
      byte_1005622C0 = 1;
    }
    if (!pthread_mutex_init((pthread_mutex_t *)(v11 + 24), &stru_1005622C8)
      && !pthread_cond_init((pthread_cond_t *)(v11 + 88), 0))
    {
      *(void *)int v11 = *v10;
      *uint64_t v10 = v11;
    }
LABEL_34:
    os_unfair_lock_unlock((os_unfair_lock_t)v9);
    BOOL result = 0;
    if (a2 || !v11) {
      return result;
    }
    if (*((void *)v11 + 1) == a1)
    {
      if (!v5) {
        uint64_t v5 = sub_100261530(1);
      }
      uint64_t v16 = v5[1];
      v5[1] = v16 + 1;
      uint64_t v17 = &v5[4 * v16];
      *((void *)v17 + 1) = v11;
      v17[4] = 1;
      return v11;
    }
    return 0;
  }
  uint64_t v7 = v4 + 4;
  while (1)
  {
    BOOL result = (char *)*((void *)v7 - 1);
    if (*((void *)result + 1) == a1) {
      break;
    }
    v7 += 4;
    if (!--v6) {
      goto LABEL_6;
    }
  }
  int v14 = atomic_load((unsigned int *)result + 4);
  if (v14 < 1) {
    return 0;
  }
  int v15 = *v7;
  if (!*v7) {
    return 0;
  }
  if (a2 == 1)
  {
    int v18 = v15 - 1;
    *uint64_t v7 = v18;
    if (!v18)
    {
      unsigned int v19 = v5[1] - 1;
      v5[1] = v19;
      *(_OWORD *)(v7 - 2) = *(_OWORD *)&v5[4 * v19 + 2];
      atomic_fetch_add((atomic_uint *volatile)result + 4, 0xFFFFFFFF);
    }
  }
  else if (!a2)
  {
    *uint64_t v7 = v15 + 1;
  }
  return result;
}

int objc_sync_exit(id obj)
{
  if (obj)
  {
    uint64_t v1 = sub_100261134((unint64_t)obj, 1);
    if (v1)
    {
      LODWORD(obj) = pthread_mutex_unlock((pthread_mutex_t *)(v1 + 24));
      if (obj == 1) {
        LODWORD(obj) = -1;
      }
    }
    else
    {
      LODWORD(obj) = -1;
    }
  }
  return (int)obj;
}

uint64_t j2objc_sync_wait(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100261134(a1, 2);
  if (!v3) {
    return 0xFFFFFFFFLL;
  }
  if (a2)
  {
    v7.tv_sec = a2 / 1000;
    v7.tv_nsec = 1000000 * (a2 % 1000);
    int v4 = pthread_cond_timedwait_relative_np((pthread_cond_t *)(v3 + 88), (pthread_mutex_t *)(v3 + 24), &v7);
  }
  else
  {
    int v4 = pthread_cond_wait((pthread_cond_t *)(v3 + 88), (pthread_mutex_t *)(v3 + 24));
  }
  if (v4 == 60) {
    unsigned int v6 = -2;
  }
  else {
    unsigned int v6 = v4;
  }
  if (v4 == 1) {
    return 0xFFFFFFFFLL;
  }
  else {
    return v6;
  }
}

uint64_t j2objc_sync_notify(unint64_t a1)
{
  uint64_t v1 = sub_100261134(a1, 2);
  if (!v1) {
    return 0xFFFFFFFFLL;
  }
  LODWORD(result) = pthread_cond_signal((pthread_cond_t *)(v1 + 88));
  if (result == 1) {
    return 0xFFFFFFFFLL;
  }
  else {
    return result;
  }
}

uint64_t j2objc_sync_notifyAll(unint64_t a1)
{
  uint64_t v1 = sub_100261134(a1, 2);
  if (!v1) {
    return 0xFFFFFFFFLL;
  }
  LODWORD(result) = pthread_cond_broadcast((pthread_cond_t *)(v1 + 88));
  if (result == 1) {
    return 0xFFFFFFFFLL;
  }
  else {
    return result;
  }
}

BOOL j2objc_sync_holds_lock(unint64_t a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  return sub_100261134(a1, 3) != 0;
}

int *sub_100261530(int a1)
{
  pthread_once(&stru_10055E7B8, (void (*)(void))init_j2objc_thread_data);
  uint64_t v2 = (int **)pthread_getspecific(qword_100561280);
  if (v2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = a1 == 0;
  }
  if (v3) {
    return 0;
  }
  int v4 = v2;
  if (!v2)
  {
    int v4 = (int **)malloc_type_calloc(1uLL, 8uLL, 0x2004093837F09uLL);
    pthread_setspecific(qword_100561280, v4);
  }
  uint64_t result = *v4;
  if (*v4)
  {
    int v6 = *result;
    goto LABEL_11;
  }
  if (!a1) {
    return 0;
  }
  uint64_t result = (int *)malloc_type_calloc(1uLL, 0x48uLL, 0x19FBEF0EuLL);
  *int v4 = result;
  int v6 = 4;
  *uint64_t result = 4;
LABEL_11:
  if (v6 == result[1])
  {
    unsigned int v7 = 2 * v6;
    *uint64_t result = v7;
    uint64_t result = (int *)malloc_type_realloc(result, (32 * (v7 >> 1)) | 8, 0x9F04F99uLL);
    *int v4 = result;
  }
  return result;
}

JavaLangCloneNotSupportedException *new_JavaLangCloneNotSupportedException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaLangCloneNotSupportedException alloc];
  JavaLangException_initWithNSString_(v2, a1);
  return v2;
}

JavaIoSyncFailedException *new_JavaIoSyncFailedException_initWithNSString_(uint64_t a1)
{
  uint64_t v2 = [JavaIoSyncFailedException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

uint64_t sub_100261754(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = result;
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    uint64_t result = objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    uint64_t result = objc_opt_class();
  }
  if (v8 >= 0x110000)
  {
    CFStringRef v9 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Invalid code point: ");
    uint64_t v10 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v9);
    objc_exception_throw(v10);
  }
  return result;
}

JavaLangCharacter *JavaLangCharacter_valueOfWithChar_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > 0x7F)
  {
    BOOL v3 = [JavaLangCharacter alloc];
    v3->value_ = a1;
    return v3;
  }
  else
  {
    return (JavaLangCharacter *)sub_10026193C(a1);
  }
}

uint64_t sub_10026193C(int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562708 != -1) {
    dispatch_once(&qword_100562708, &stru_100471A88);
  }
  return qword_100562308[a1];
}

BOOL JavaLangCharacter_isValidCodePointWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return a1 < 0x110000;
}

BOOL JavaLangCharacter_isHighSurrogateWithChar_(__int16 a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (a1 & 0xFC00) == 55296;
}

BOOL JavaLangCharacter_isSurrogatePairWithChar_withChar_(__int16 a1, __int16 a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a1 & 0xFC00) != 0xD800) {
    return 0;
  }
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (a2 & 0xFC00) == 56320;
}

uint64_t JavaLangCharacter_charCountWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 < 0x10000) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t JavaLangCharacter_toCodePointWithChar_withChar_(__int16 a1, __int16 a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (a2 & 0x3FF | ((unsigned __int16)(a1 & 0x3FF) << 10)) + 0x10000;
}

uint64_t JavaLangCharacter_codePointAtWithJavaLangCharSequence_withInt_(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v10 = new_JavaLangNullPointerException_initWithNSString_(@"seq == null");
    goto LABEL_14;
  }
  if (!a1) {
    goto LABEL_12;
  }
LABEL_3:
  int v4 = [a1 length];
  if ((a2 & 0x80000000) != 0 || (int v5 = v4, v4 <= (int)a2))
  {
    uint64_t v10 = new_JavaLangIndexOutOfBoundsException_init();
LABEL_14:
    objc_exception_throw(v10);
  }
  uint64_t v6 = (a2 + 1);
  id v7 = [a1 charAtWithInt:a2];
  if ((int)v6 >= v5) {
    return (uint64_t)v7;
  }
  __int16 v8 = (unsigned __int16)[a1 charAtWithInt:v6];
  if (!JavaLangCharacter_isSurrogatePairWithChar_withChar_((__int16)v7, v8)) {
    return (uint64_t)v7;
  }
  return JavaLangCharacter_toCodePointWithChar_withChar_((__int16)v7, v8);
}

uint64_t JavaLangCharacter_codePointAtRaw(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(unsigned __int16 *)(a1 + 2 * a2);
  if (a2 + 1 >= a3) {
    return v3;
  }
  __int16 v4 = *(_WORD *)(a1 + 2 * (a2 + 1));
  if (!JavaLangCharacter_isSurrogatePairWithChar_withChar_(*(_WORD *)(a1 + 2 * a2), v4)) {
    return v3;
  }
  return JavaLangCharacter_toCodePointWithChar_withChar_(v3, v4);
}

uint64_t JavaLangCharacter_codePointAtWithCharArray_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v6 = [[JavaLangNullPointerException alloc] initWithNSString:@"seq == null"];
    goto LABEL_11;
  }
  if (!a1) {
    goto LABEL_9;
  }
LABEL_3:
  if (a2 < 0 || (int v4 = *(_DWORD *)(a1 + 8), v4 <= a2))
  {
    uint64_t v6 = objc_alloc_init(JavaLangIndexOutOfBoundsException);
LABEL_11:
    objc_exception_throw(v6);
  }
  return JavaLangCharacter_codePointAtRaw(a1 + 12, a2, v4);
}

uint64_t JavaLangCharacter_codePointAtWithCharArray_withInt_withInt_(uint64_t a1, int a2, int a3)
{
  if (atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire))
  {
    if (a2 < 0) {
      goto LABEL_11;
    }
  }
  else
  {
    objc_opt_class();
    if (a2 < 0) {
      goto LABEL_11;
    }
  }
  if (a2 >= a3 || a3 < 0) {
    goto LABEL_11;
  }
  if (!a1) {
    JreThrowNullPointerException();
  }
  if (*(_DWORD *)(a1 + 8) < a3) {
LABEL_11:
  }
    objc_exception_throw(objc_alloc_init(JavaLangIndexOutOfBoundsException));
  return JavaLangCharacter_codePointAtRaw(a1 + 12, a2, a3);
}

uint64_t JavaLangCharacter_codePointBeforeWithJavaLangCharSequence_withInt_(void *a1, int a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_12:
    __int16 v8 = new_JavaLangNullPointerException_initWithNSString_(@"seq == null");
    goto LABEL_14;
  }
  if (!a1) {
    goto LABEL_12;
  }
LABEL_3:
  signed int v4 = [a1 length];
  if (a2 < 1 || v4 < a2)
  {
    __int16 v8 = new_JavaLangIndexOutOfBoundsException_init();
LABEL_14:
    objc_exception_throw(v8);
  }
  id v5 = [a1 charAtWithInt:(a2 - 1)];
  if (a2 <= 1) {
    return (uint64_t)v5;
  }
  __int16 v6 = (unsigned __int16)[a1 charAtWithInt:(a2 - 2)];
  if (!JavaLangCharacter_isSurrogatePairWithChar_withChar_(v6, (__int16)v5)) {
    return (uint64_t)v5;
  }
  return JavaLangCharacter_toCodePointWithChar_withChar_(v6, (__int16)v5);
}

uint64_t JavaLangCharacter_codePointBeforeRaw(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(unsigned __int16 *)(a1 + 2 * (a2 - 1));
  if (a2 - 2 < a3) {
    return v3;
  }
  __int16 v4 = *(_WORD *)(a1 + 2 * (a2 - 2));
  if (!JavaLangCharacter_isSurrogatePairWithChar_withChar_(v4, v3)) {
    return v3;
  }
  return JavaLangCharacter_toCodePointWithChar_withChar_(v4, v3);
}

uint64_t JavaLangCharacter_codePointBeforeWithCharArray_withInt_(uint64_t a1, int a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_9:
    id v5 = [[JavaLangNullPointerException alloc] initWithNSString:@"seq == null"];
    goto LABEL_11;
  }
  if (!a1) {
    goto LABEL_9;
  }
LABEL_3:
  if (a2 < 1 || *(_DWORD *)(a1 + 8) < a2)
  {
    id v5 = objc_alloc_init(JavaLangIndexOutOfBoundsException);
LABEL_11:
    objc_exception_throw(v5);
  }
  return JavaLangCharacter_codePointBeforeRaw(a1 + 12, a2, 0);
}

uint64_t JavaLangCharacter_codePointBeforeWithCharArray_withInt_withInt_(uint64_t a1, int a2, int a3)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_11:
    __int16 v8 = [[JavaLangNullPointerException alloc] initWithNSString:@"seq == null"];
    goto LABEL_13;
  }
  if (!a1) {
    goto LABEL_11;
  }
LABEL_3:
  if (a2 <= a3 || (int v6 = *(_DWORD *)(a1 + 8), v6 <= a3) || a3 < 0 || v6 < a2)
  {
    __int16 v8 = objc_alloc_init(JavaLangIndexOutOfBoundsException);
LABEL_13:
    objc_exception_throw(v8);
  }
  return JavaLangCharacter_codePointBeforeRaw(a1 + 12, a2, a3);
}

uint64_t JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a3;
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  sub_100261754(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!a2)
  {
    uint64_t v16 = new_JavaLangNullPointerException_initWithNSString_(@"dst == null");
LABEL_21:
    objc_exception_throw(v16);
  }
  if ((v8 & 0x80000000) != 0 || *(_DWORD *)(a2 + 8) <= (int)v8)
  {
LABEL_19:
    uint64_t v16 = new_JavaLangIndexOutOfBoundsException_init();
    goto LABEL_21;
  }
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!((a1 - 0x10000) >> 20))
  {
    uint64_t v11 = *(unsigned int *)(a2 + 8);
    if (v11 - 1 != v8)
    {
      if ((int)v11 <= (int)v8) {
        IOSArray_throwOutOfBoundsWithMsg(v11, v8);
      }
      *(_WORD *)(a2 + 12 + 2 * v8) = ((a1 - 0x10000) >> 10) | 0xD800;
      __int16 v12 = a1 & 0x3FF | 0xDC00;
      uint64_t v8 = (v8 + 1);
      uint64_t v13 = *(unsigned int *)(a2 + 8);
      if ((int)v8 >= (int)v13) {
        IOSArray_throwOutOfBoundsWithMsg(v13, v8);
      }
      uint64_t result = 2;
      goto LABEL_15;
    }
    goto LABEL_19;
  }
  uint64_t v15 = *(unsigned int *)(a2 + 8);
  if ((int)v15 <= (int)v8) {
    IOSArray_throwOutOfBoundsWithMsg(v15, v8);
  }
  uint64_t result = 1;
  __int16 v12 = a1;
LABEL_15:
  *(_WORD *)(a2 + 12 + 2 * v8) = v12;
  return result;
}

IOSCharArray *JavaLangCharacter_toCharsWithInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  sub_100261754(a1, a2, a3, a4, a5, a6, a7, a8);
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a1 - 0x10000) >> 20)
  {
    __int16 v12 = a1;
    CFStringRef v9 = &v12;
    uint64_t v10 = 1;
  }
  else
  {
    v13[0] = ((a1 - 0x10000) >> 10) | 0xD800;
    v13[1] = a1 & 0x3FF | 0xDC00;
    CFStringRef v9 = v13;
    uint64_t v10 = 2;
  }
  return +[IOSCharArray arrayWithChars:v9 count:v10];
}

uint64_t JavaLangCharacter_codePointCountWithJavaLangCharSequence_withInt_withInt_(void *a1, uint64_t a2, int a3)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_21:
    uint64_t v11 = new_JavaLangNullPointerException_initWithNSString_(@"seq == null");
    goto LABEL_23;
  }
  if (!a1) {
    goto LABEL_21;
  }
LABEL_3:
  signed int v6 = [a1 length];
  if ((int)a2 > a3 || (a2 & 0x80000000) != 0 || v6 < a3)
  {
    uint64_t v11 = new_JavaLangIndexOutOfBoundsException_init();
LABEL_23:
    objc_exception_throw(v11);
  }
  if ((int)a2 >= a3) {
    return 0;
  }
  LODWORD(v7) = 0;
  do
  {
    unsigned __int16 v8 = (unsigned __int16)[a1 charAtWithInt:a2];
    if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if ((v8 & 0xFC00) == 0xD800)
    {
      a2 = (a2 + 1);
      if ((int)a2 < a3)
      {
        unsigned __int16 v9 = (unsigned __int16)[a1 charAtWithInt:a2];
        if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        if ((v9 & 0xFC00) != 0xDC00) {
          LODWORD(v7) = v7 + 1;
        }
      }
    }
    uint64_t v7 = (v7 + 1);
    a2 = (a2 + 1);
  }
  while ((int)a2 < a3);
  return v7;
}

uint64_t JavaLangCharacter_codePointCountRaw(uint64_t a1, int a2, int a3)
{
  int v3 = a3 + a2;
  if (a3 + a2 <= a2) {
    return 0;
  }
  LODWORD(v4) = a2;
  LODWORD(v6) = 0;
  do
  {
    __int16 v7 = *(_WORD *)(a1 + 2 * (int)v4);
    if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if ((v7 & 0xFC00) == 0xD800)
    {
      uint64_t v4 = (int)v4 + 1;
      if ((int)v4 < v3)
      {
        __int16 v8 = *(_WORD *)(a1 + 2 * v4);
        if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        if ((v8 & 0xFC00) != 0xDC00) {
          LODWORD(v6) = v6 + 1;
        }
      }
    }
    uint64_t v6 = (v6 + 1);
    LODWORD(v4) = v4 + 1;
  }
  while ((int)v4 < v3);
  return v6;
}

uint64_t JavaLangCharacter_codePointCountWithCharArray_withInt_withInt_(uint64_t a1, int a2, int a3)
{
  if (atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a1 + 8), a2, a3);
  return JavaLangCharacter_codePointCountRaw(a1 + 12, a2, a3);
}

uint64_t JavaLangCharacter_offsetByCodePointsWithJavaLangCharSequence_withInt_withInt_(void *a1, uint64_t a2, int a3)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    if (a1) {
      goto LABEL_3;
    }
LABEL_34:
    uint64_t v17 = new_JavaLangNullPointerException_initWithNSString_(@"seq == null");
    goto LABEL_36;
  }
  if (!a1) {
    goto LABEL_34;
  }
LABEL_3:
  int v6 = [a1 length];
  if ((a2 & 0x80000000) != 0 || (int v7 = v6, v6 < (int)a2))
  {
LABEL_35:
    uint64_t v17 = new_JavaLangIndexOutOfBoundsException_init();
LABEL_36:
    objc_exception_throw(v17);
  }
  if (a3)
  {
    if (a3 >= 1)
    {
      int v8 = a3 + 1;
      while ((int)a2 < v7)
      {
        unsigned __int16 v9 = (unsigned __int16)[a1 charAtWithInt:a2];
        if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        if ((v9 & 0xFC00) == 0xD800 && (int)a2 + 1 < v7)
        {
          unsigned __int16 v10 = (unsigned __int16)[a1 charAtWithInt:(a2 + 1)];
          if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          if ((v10 & 0xFC00) == 0xDC00) {
            LODWORD(a2) = a2 + 1;
          }
        }
        a2 = (a2 + 1);
        if (--v8 <= 1) {
          return a2;
        }
      }
      goto LABEL_35;
    }
    if (-a3 >= 1)
    {
      unsigned int v11 = 1 - a3;
      int v12 = a2;
      while (v12 > 0)
      {
        a2 = (v12 - 1);
        unsigned __int16 v13 = (unsigned __int16)[a1 charAtWithInt:a2];
        if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        if ((v13 & 0xFC00) == 0xDC00)
        {
          unsigned int v14 = v12 - 2;
          if (v12 >= 2)
          {
            unsigned __int16 v15 = (unsigned __int16)[a1 charAtWithInt:(v12 - 2)];
            if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
              objc_opt_class();
            }
            if ((v15 & 0xFC00) == 0xD800) {
              a2 = v14;
            }
            else {
              a2 = a2;
            }
          }
        }
        --v11;
        int v12 = a2;
        if (v11 <= 1) {
          return a2;
        }
      }
      goto LABEL_35;
    }
  }
  return a2;
}

uint64_t JavaLangCharacter_offsetByCodePointsRaw(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if ((int)a4 < a2) {
    goto LABEL_34;
  }
  uint64_t v5 = a4;
  int v7 = a3 + a2;
  if (a3 + a2 < (int)a4) {
    goto LABEL_34;
  }
  if (a5)
  {
    if (a5 >= 1)
    {
      int v9 = a5 + 1;
      while ((int)v5 < v7)
      {
        __int16 v10 = *(_WORD *)(a1 + 2 * (int)v5);
        if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        int v11 = v10 & 0xFC00;
        uint64_t v12 = (int)v5 + 1;
        if (v11 == 55296 && (int)v12 < v7)
        {
          __int16 v14 = *(_WORD *)(a1 + 2 * v12);
          if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          if ((v14 & 0xFC00) == 0xDC00) {
            LODWORD(v5) = v5 + 1;
          }
        }
        uint64_t v5 = (v5 + 1);
        if (--v9 <= 1) {
          return v5;
        }
      }
      goto LABEL_34;
    }
    if (-a5 >= 1)
    {
      unsigned int v15 = 1 - a5;
      int v16 = a4;
      while (1)
      {
        uint64_t v5 = (v16 - 1);
        if ((int)v5 < a2) {
          break;
        }
        __int16 v17 = *(_WORD *)(a1 + 2 * (int)v5);
        if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        if ((v17 & 0xFC00) == 0xDC00)
        {
          int v18 = v16 - 2;
          if (v18 >= a2)
          {
            __int16 v19 = *(_WORD *)(a1 + 2 * v18);
            if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
              objc_opt_class();
            }
            if ((v19 & 0xFC00) == 0xD800) {
              uint64_t v5 = v18;
            }
            else {
              uint64_t v5 = v5;
            }
          }
        }
        --v15;
        int v16 = v5;
        if (v15 <= 1) {
          return v5;
        }
      }
LABEL_34:
      objc_exception_throw(objc_alloc_init(JavaLangIndexOutOfBoundsException));
    }
  }
  return v5;
}

uint64_t JavaLangCharacter_offsetByCodePointsWithCharArray_withInt_withInt_withInt_withInt_(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if (atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a1 + 8), a2, a3);
  return JavaLangCharacter_offsetByCodePointsRaw(a1 + 12, a2, a3, a4, a5);
}

uint64_t JavaLangCharacter_digitWithChar_withInt_(UChar32 ch, int8_t a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_digitWithInt_withInt_(ch, a2);
}

uint64_t JavaLangCharacter_digitWithInt_withInt_(UChar32 ch, int8_t a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_digit(ch, a2);
}

uint64_t JavaLangCharacter_forDigitWithInt_withInt_(int32_t digit, int8_t a2)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (unsigned __int16)u_forDigit(digit, a2);
}

CFStringRef JavaLangCharacter_getNameWithInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  sub_100261754(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!JavaLangCharacter_getTypeWithInt_(a1)) {
    return 0;
  }
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v16 = JavaLangCharacter_UnicodeBlock_ofWithInt_(a1, v9, v10, v11, v12, v13, v14, v15);
  if (!v16 || (__int16 v17 = *(void **)(v16 + 8)) == 0) {
    JreThrowNullPointerException();
  }
  id v18 = [v17 replace:95 withChar:32];
  JavaLangIntegralToString_intToHexStringWithInt_withBoolean_withInt_(a1, 1, 0);
  return JreStrcat("$C$", v19, v20, v21, v22, v23, v24, v25, v18);
}

uint64_t JavaLangCharacter_getNumericValueWithChar_(int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_getNumericValueWithInt_(a1);
}

uint64_t JavaLangCharacter_getNumericValueWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((a1 - 65345) >= 0x1A) {
    int v2 = -1;
  }
  else {
    int v2 = a1 - 65335;
  }
  if ((a1 - 65313) <= 0x19) {
    unsigned int v3 = a1 - 65303;
  }
  else {
    unsigned int v3 = v2;
  }
  unsigned int v4 = a1 - 48;
  if ((a1 - 65) >= 0x1A) {
    int v5 = -1;
  }
  else {
    int v5 = a1 - 55;
  }
  if ((a1 - 97) <= 0x19) {
    unsigned int v6 = a1 - 87;
  }
  else {
    unsigned int v6 = v5;
  }
  if (v4 >= 0xA) {
    unsigned int v4 = v6;
  }
  if (a1 <= 127) {
    return v4;
  }
  else {
    return v3;
  }
}

uint64_t JavaLangCharacter_getTypeWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_getTypeWithInt_(c);
}

uint64_t JavaLangCharacter_getTypeWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  LODWORD(result) = u_charType(c);
  if ((int)result <= 16) {
    return result;
  }
  else {
    return (result + 1);
  }
}

uint64_t JavaLangCharacter_getDirectionalityWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_getDirectionalityWithInt_(c);
}

uint64_t JavaLangCharacter_getDirectionalityWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (JavaLangCharacter_getTypeWithInt_(c) && (UCharDirection v2 = u_charDirection(c), v2 <= U_BOUNDARY_NEUTRAL)) {
    return (char)byte_100320970[v2];
  }
  else {
    return -1;
  }
}

BOOL JavaLangCharacter_isMirroredWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isMirroredWithInt_(c);
}

BOOL JavaLangCharacter_isMirroredWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isMirrored(c) != 0;
}

BOOL JavaLangCharacter_isAlphabeticWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 >= 0x8000) {
    return 0;
  }
  unsigned int v3 = +[NSCharacterSet letterCharacterSet];
  return [(NSCharacterSet *)v3 characterIsMember:(unsigned __int16)a1];
}

BOOL JavaLangCharacter_isDefinedWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isDefinedWithInt_(c);
}

BOOL JavaLangCharacter_isDefinedWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isdefined(c) != 0;
}

BOOL JavaLangCharacter_isDigitWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isDigitWithInt_(c);
}

BOOL JavaLangCharacter_isDigitWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isdigit(c) != 0;
}

BOOL JavaLangCharacter_isIdentifierIgnorableWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isIdentifierIgnorableWithInt_(c);
}

BOOL JavaLangCharacter_isIdeographicWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_getIntPropertyValue(c, UCHAR_IDEOGRAPHIC) != 0;
}

BOOL JavaLangCharacter_isIdentifierIgnorableWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isIDIgnorable(c) != 0;
}

BOOL JavaLangCharacter_isISOControlWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isISOControlWithInt_(c);
}

BOOL JavaLangCharacter_isISOControlWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isISOControl(c) != 0;
}

BOOL JavaLangCharacter_isJavaIdentifierPartWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isJavaIdentifierPartWithInt_(c);
}

BOOL JavaLangCharacter_isJavaIdentifierPartWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isJavaIDPart(c) != 0;
}

BOOL JavaLangCharacter_isJavaIdentifierStartWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isJavaIdentifierStartWithInt_(c);
}

BOOL JavaLangCharacter_isJavaIdentifierStartWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isJavaIDStart(c) != 0;
}

BOOL JavaLangCharacter_isJavaLetterWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isJavaIdentifierStartWithChar_(c);
}

BOOL JavaLangCharacter_isJavaLetterOrDigitWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isJavaIdentifierPartWithChar_(c);
}

BOOL JavaLangCharacter_isLetterWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isLetterWithInt_(c);
}

BOOL JavaLangCharacter_isLetterWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isalpha(c) != 0;
}

BOOL JavaLangCharacter_isLetterOrDigitWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isLetterOrDigitWithInt_(c);
}

BOOL JavaLangCharacter_isLetterOrDigitWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isalnum(c) != 0;
}

BOOL JavaLangCharacter_isLowerCaseWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isLowerCaseWithInt_(c);
}

BOOL JavaLangCharacter_isLowerCaseWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_islower(c) != 0;
}

uint64_t JavaLangCharacter_isSpaceWithChar_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (a1 < 0x21) & (0x100003600uLL >> a1);
}

BOOL JavaLangCharacter_isSpaceCharWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isSpaceCharWithInt_(c);
}

BOOL JavaLangCharacter_isSpaceCharWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isJavaSpaceChar(c) != 0;
}

BOOL JavaLangCharacter_isTitleCaseWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isTitleCaseWithInt_(c);
}

BOOL JavaLangCharacter_isTitleCaseWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_istitle(c) != 0;
}

BOOL JavaLangCharacter_isUnicodeIdentifierPartWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isUnicodeIdentifierPartWithInt_(c);
}

BOOL JavaLangCharacter_isUnicodeIdentifierPartWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isIDPart(c) != 0;
}

BOOL JavaLangCharacter_isUnicodeIdentifierStartWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isUnicodeIdentifierStartWithInt_(c);
}

BOOL JavaLangCharacter_isUnicodeIdentifierStartWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isIDStart(c) != 0;
}

BOOL JavaLangCharacter_isUpperCaseWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isUpperCaseWithInt_(c);
}

BOOL JavaLangCharacter_isUpperCaseWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isupper(c) != 0;
}

BOOL JavaLangCharacter_isWhitespaceWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_isWhitespaceWithInt_(c);
}

BOOL JavaLangCharacter_isWhitespaceWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_isWhitespace(c) != 0;
}

uint64_t JavaLangCharacter_toLowerCaseWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (unsigned __int16)JavaLangCharacter_toLowerCaseWithInt_(c);
}

uint64_t JavaLangCharacter_toLowerCaseWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_tolower(c);
}

NSString *JavaLangCharacter_toStringWithChar_(__int16 a1)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return NSString_valueOfChar_(a1);
}

uint64_t JavaLangCharacter_toTitleCaseWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (unsigned __int16)JavaLangCharacter_toTitleCaseWithInt_(c);
}

uint64_t JavaLangCharacter_toTitleCaseWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_totitle(c);
}

uint64_t JavaLangCharacter_toUpperCaseWithChar_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (unsigned __int16)JavaLangCharacter_toUpperCaseWithInt_(c);
}

uint64_t JavaLangCharacter_toUpperCaseWithInt_(UChar32 c)
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return u_toupper(c);
}

uint64_t JavaLangCharacter_UnicodeBlock_ofWithInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangCharacter_UnicodeBlock__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  sub_100261754(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = sub_100264BC8(a1);
  if (v9 == -1) {
    return 0;
  }
  if (!qword_1005622E8) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned int *)(qword_1005622E8 + 8);
  if ((int)v10 >= (int)v11) {
    return 0;
  }
  if ((v10 & 0x80000000) != 0) {
    IOSArray_throwOutOfBoundsWithMsg(v11, v10);
  }
  return *(void *)(qword_1005622E8 + 24 + 8 * (int)v10);
}

uint64_t JavaLangCharacter_class_()
{
  if ((atomic_load_explicit(JavaLangCharacter__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_1005622E0 != -1) {
    dispatch_once(&qword_1005622E0, &stru_10046E880);
  }
  return qword_1005622D8;
}

void sub_1002647C4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_1005622D8 = IOSClass_fromClass(v1);
}

id JavaLangCharacter_Subset_initWithNSString_(uint64_t a1, void *a2)
{
  if (!a2)
  {
    int v5 = new_JavaLangNullPointerException_initWithNSString_(@"name == null");
    objc_exception_throw(v5);
  }
  unsigned int v3 = (id *)(a1 + 8);
  return JreStrongAssign(v3, a2);
}

uint64_t JavaLangCharacter_UnicodeBlock_forNameWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaLangCharacter_UnicodeBlock__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v13 = new_JavaLangNullPointerException_initWithNSString_(@"blockName == null");
    goto LABEL_13;
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v2 = sub_100264AA4(a1);
  if (v2 == -1)
  {
    CFStringRef v14 = JreStrcat("$$", v3, v4, v5, v6, v7, v8, v9, @"Unknown block: ");
    uint64_t v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v14);
LABEL_13:
    objc_exception_throw(v13);
  }
  if (!qword_1005622E8) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = v2;
  uint64_t v11 = *(unsigned int *)(qword_1005622E8 + 8);
  if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)v11) {
    IOSArray_throwOutOfBoundsWithMsg(v11, v10);
  }
  return *(void *)(qword_1005622E8 + 24 + 8 * (int)v10);
}

uint64_t JavaLangCharacter_UnicodeBlock_ofWithChar_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangCharacter_UnicodeBlock__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangCharacter_UnicodeBlock_ofWithInt_(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100264AA4(void *a1)
{
  if (atomic_load_explicit(JavaLangCharacter_UnicodeBlock__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_16;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_16;
    }
  }
  id v2 = [a1 uppercaseString];
  if (!v2) {
    goto LABEL_16;
  }
  id v3 = [v2 replace:32 withChar:95];
  if (!v3) {
    goto LABEL_16;
  }
  id v4 = [v3 replace:45 withChar:95];
  if (!qword_1005622F0) {
    goto LABEL_16;
  }
  if ([(id)qword_1005622F0 containsKeyWithId:v4])
  {
    uint64_t v5 = [(id)qword_1005622F0 getWithId:v4];
    if (!v5) {
      goto LABEL_16;
    }
    id v4 = (id)v5[1];
  }
  uint64_t v6 = qword_1005622E8;
  if (!qword_1005622E8) {
LABEL_16:
  }
    JreThrowNullPointerException();
  uint64_t v7 = 1;
  while ((int)v7 < *(_DWORD *)(v6 + 8))
  {
    if (v4)
    {
      uint64_t v8 = *(void *)(v6 + 24 + 8 * v7);
      if (v8)
      {
        if ([v4 isEqual:*(void *)(v8 + 8)]) {
          return v7;
        }
        uint64_t v6 = qword_1005622E8;
        ++v7;
        if (qword_1005622E8) {
          continue;
        }
      }
    }
    goto LABEL_16;
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_100264BC8(int a1)
{
  if ((atomic_load_explicit(JavaLangCharacter_UnicodeBlock__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = qword_1005622E8;
  if (!qword_1005622E8) {
LABEL_16:
  }
    JreThrowNullPointerException();
  uint64_t v3 = 1;
  while (v3 < *(int *)(v2 + 8))
  {
    uint64_t v4 = *(void *)(v2 + 24 + 8 * v3);
    if (!v4) {
      goto LABEL_16;
    }
    if (*(_DWORD *)(v4 + 16) <= a1)
    {
      uint64_t v5 = *(int *)(v2 + 8);
      if (v3 >= v5) {
        IOSArray_throwOutOfBoundsWithMsg(v5, v3);
      }
      if (*(_DWORD *)(v4 + 20) >= a1) {
        return v3;
      }
      uint64_t v2 = qword_1005622E8;
    }
    ++v3;
    if (!v2) {
      goto LABEL_16;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t JavaLangCharacter_UnicodeBlock_class_()
{
  if ((atomic_load_explicit(JavaLangCharacter_UnicodeBlock__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562300 != -1) {
    dispatch_once(&qword_100562300, &stru_100471A68);
  }
  return qword_1005622F8;
}

void sub_10026AA28(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_1005622F8 = IOSClass_fromClass(v1);
}

void sub_10026AA54(id a1)
{
  for (uint64_t i = 0; i != 128; ++i)
    qword_100562308[i] = [[JavaLangCharacter alloc] initWithChar:(unsigned __int16)i];
}

JavaNetDefaultFileNameMap *new_JavaNetDefaultFileNameMap_init()
{
  return [JavaNetDefaultFileNameMap alloc];
}

uint64_t JavaLangFloat_compareWithFloat_withFloat_(float a1, float a2)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 > a2) {
    return 1;
  }
  if (a2 > a1) {
    return 0xFFFFFFFFLL;
  }
  if (a1 != 0.0 && a1 == a2) {
    return 0;
  }
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v5 = LODWORD(a1);
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0)
  {
    objc_opt_class();
    int v5 = LODWORD(a1);
  }
  return ((LODWORD(a2) >> 31) + (v5 >> 31));
}

uint64_t JavaLangFloat_floatToIntBitsWithFloat_(float a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return LODWORD(a1);
}

uint64_t JavaLangFloat_floatToRawIntBitsWithFloat_(float a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return LODWORD(a1);
}

float JavaLangFloat_intBitsToFloatWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return *(float *)&a1;
}

BOOL JavaLangFloat_isInfiniteWithFloat_(float a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return fabsf(a1) == INFINITY;
}

uint64_t JavaLangFloat_isNaNWithFloat_()
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return 0;
}

void JavaLangFloat_parseFloatWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JavaLangStringToReal_parseFloatWithNSString_(a1);
}

CFStringRef JavaLangFloat_toStringWithFloat_(float a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangRealToString_floatToStringWithFloat_(a1);
}

JavaLangFloat *JavaLangFloat_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JavaLangFloat_parseFloatWithNSString_(a1);
  return JavaLangFloat_valueOfWithFloat_(v2);
}

JavaLangFloat *JavaLangFloat_valueOfWithFloat_(float a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  float v2 = [JavaLangFloat alloc];
  v2->value_ = a1;
  return v2;
}

CFStringRef JavaLangFloat_toHexStringWithFloat_(float a1)
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 == INFINITY) {
    return @"Infinity";
  }
  if (a1 == -INFINITY) {
    return @"-Infinity";
  }
  int v3 = JavaLangFloat_floatToIntBitsWithFloat_(a1);
  int v4 = v3;
  int v5 = (v3 >> 23);
  unsigned int v6 = 2 * (v3 & 0x7FFFFF);
  if (!(v5 | v6))
  {
    if (v3 < 0) {
      return @"-0x0.0p0";
    }
    else {
      return @"0x0.0p0";
    }
  }
  uint64_t v7 = new_JavaLangStringBuilder_initWithInt_(0xAu);
  uint64_t v8 = v7;
  if (v4 < 0) {
    CFStringRef v9 = @"-0x";
  }
  else {
    CFStringRef v9 = @"0x";
  }
  [(JavaLangStringBuilder *)v7 appendWithNSString:v9];
  BOOL v11 = (v4 & 7) == 0 && v6 != 0;
  if (!v5)
  {
    [(JavaLangStringBuilder *)v8 appendWithNSString:@"0."];
    int v20 = 6;
    if (v11)
    {
      unsigned int v21 = v6;
      do
      {
        unsigned int v6 = v21 >> 4;
        --v20;
        if (v21 < 0x10) {
          break;
        }
        int v22 = v21 & 0xF0;
        v21 >>= 4;
      }
      while (!v22);
    }
    uint64_t v23 = JavaLangInteger_toHexStringWithInt_(v6);
    uint64_t v24 = v23;
    if (v6)
    {
      if (!v23) {
        goto LABEL_48;
      }
      if (v20 > (int)[(NSString *)v23 length])
      {
        unsigned int v25 = [(NSString *)v24 length];
        if (v20 != v25)
        {
          unsigned int v26 = v25 - v20;
          do
          {
            [(JavaLangStringBuilder *)v8 appendWithChar:48];
            BOOL v19 = __CFADD__(v26++, 1);
          }
          while (!v19);
        }
      }
    }
    [(JavaLangStringBuilder *)v8 appendWithNSString:v24];
    [(JavaLangStringBuilder *)v8 appendWithNSString:@"p-126"];
    goto LABEL_45;
  }
  [(JavaLangStringBuilder *)v8 appendWithNSString:@"1."];
  int v12 = 6;
  if (v11)
  {
    unsigned int v13 = v6;
    do
    {
      unsigned int v6 = v13 >> 4;
      --v12;
      if (v13 < 0x10) {
        break;
      }
      int v14 = v13 & 0xF0;
      v13 >>= 4;
    }
    while (!v14);
  }
  uint64_t v15 = JavaLangInteger_toHexStringWithInt_(v6);
  uint64_t v16 = v15;
  if (!v6) {
    goto LABEL_29;
  }
  if (!v15) {
LABEL_48:
  }
    JreThrowNullPointerException();
  if (v12 > (int)[(NSString *)v15 length])
  {
    unsigned int v17 = [(NSString *)v16 length];
    if (v12 != v17)
    {
      unsigned int v18 = v17 - v12;
      do
      {
        [(JavaLangStringBuilder *)v8 appendWithChar:48];
        BOOL v19 = __CFADD__(v18++, 1);
      }
      while (!v19);
    }
  }
LABEL_29:
  [(JavaLangStringBuilder *)v8 appendWithNSString:v16];
  [(JavaLangStringBuilder *)v8 appendWithChar:112];
  [(JavaLangStringBuilder *)v8 appendWithInt:(v5 - 127)];
LABEL_45:
  return (const __CFString *)[(JavaLangStringBuilder *)v8 description];
}

JavaLangFloat *new_JavaLangFloat_initWithFloat_(float a1)
{
  uint64_t result = [JavaLangFloat alloc];
  result->value_ = a1;
  return result;
}

uint64_t JavaLangFloat_class_()
{
  if ((atomic_load_explicit(JavaLangFloat__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562718 != -1) {
    dispatch_once(&qword_100562718, &stru_1004724F0);
  }
  return qword_100562710;
}

void sub_10026B848(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562710 = IOSClass_fromClass(v1);
}

id OrgXmlSaxHelpersParserFactory_makeParser()
{
  id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_(@"org.xml.sax.parser");
  if (!PropertyWithNSString)
  {
    int v4 = new_JavaLangNullPointerException_initWithNSString_(@"No value for sax.parser property");
    objc_exception_throw(v4);
  }
  id v1 = OrgXmlSaxHelpersNewInstance_newInstanceWithNSString_(PropertyWithNSString);
  float v2 = (void *)OrgXmlSaxParser_class_();
  if (v1 && ([v2 isInstance:v1] & 1) == 0) {
    JreThrowClassCastException();
  }
  return v1;
}

id JavaUtilObjects_deepEqualsWithId_withId_(void *a1, uint64_t a2)
{
  if (!a1 || !a2) {
    return (id)(a1 == (void *)a2);
  }
  uint64_t v4 = NSObject_class_();
  if (objc_msgSend((id)IOSClass_arrayType(v4, 1u), "isInstance:", a1))
  {
    uint64_t v5 = NSObject_class_();
    if (objc_msgSend((id)IOSClass_arrayType(v5, 1u), "isInstance:", a2))
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          return (id)JavaUtilArrays_deepEqualsWithNSObjectArray_withNSObjectArray_((uint64_t)a1, a2);
        }
      }
LABEL_70:
      JreThrowClassCastException();
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_70;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_70;
    }
    return (id)JavaUtilArrays_equalsWithBooleanArray_withBooleanArray_((uint64_t)a1, a2);
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_70;
      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_70;
      }
      return (id)JavaUtilArrays_equalsWithByteArray_withByteArray_((uint64_t)a1, a2);
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          goto LABEL_70;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          goto LABEL_70;
        }
        return (id)JavaUtilArrays_equalsWithCharArray_withCharArray_((uint64_t)a1, a2);
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_70;
          }
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_70;
          }
          return (id)JavaUtilArrays_equalsWithDoubleArray_withDoubleArray_((uint64_t)a1, a2);
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0) {
              goto LABEL_70;
            }
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0) {
              goto LABEL_70;
            }
            return (id)JavaUtilArrays_equalsWithFloatArray_withFloatArray_((uint64_t)a1, a2);
          }
          else
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0) {
                goto LABEL_70;
              }
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0) {
                goto LABEL_70;
              }
              return (id)JavaUtilArrays_equalsWithIntArray_withIntArray_((uint64_t)a1, a2);
            }
            else
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
              {
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) == 0) {
                  goto LABEL_70;
                }
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) == 0) {
                  goto LABEL_70;
                }
                return (id)JavaUtilArrays_equalsWithLongArray_withLongArray_((uint64_t)a1, a2);
              }
              else
              {
                objc_opt_class();
                if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
                {
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) == 0) {
                    goto LABEL_70;
                  }
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) == 0) {
                    goto LABEL_70;
                  }
                  return (id)JavaUtilArrays_equalsWithShortArray_withShortArray_((uint64_t)a1, a2);
                }
                else
                {
                  return [a1 isEqual:a2];
                }
              }
            }
          }
        }
      }
    }
  }
}

id JavaUtilObjects_equalsWithId_withId_(void *a1, uint64_t a2)
{
  if (a1) {
    return [a1 isEqual:a2];
  }
  else {
    return (id)(a2 == 0);
  }
}

id JavaUtilObjects_hashCodeWithId_(id result)
{
  if (result) {
    return [result hash];
  }
  return result;
}

uint64_t JavaUtilObjects_requireNonNullWithId_(uint64_t result)
{
  if (!result)
  {
    id v1 = new_JavaLangNullPointerException_init();
    objc_exception_throw(v1);
  }
  return result;
}

uint64_t JavaUtilObjects_requireNonNullWithId_withNSString_(uint64_t result, uint64_t a2)
{
  if (!result)
  {
    float v2 = new_JavaLangNullPointerException_initWithNSString_(a2);
    objc_exception_throw(v2);
  }
  return result;
}

id makeException(objc_class *a1)
{
  id v1 = objc_alloc_init(a1);
  id v2 = v1;
  return v1;
}

CFStringRef NSString_valueOf_(void *a1)
{
  if (a1) {
    return (const __CFString *)[a1 description];
  }
  else {
    return @"null";
  }
}

CFStringRef NSString_valueOfBool_(int a1)
{
  if (a1) {
    return @"true";
  }
  else {
    return @"false";
  }
}

NSString *NSString_valueOfChar_(__int16 a1)
{
  __int16 v2 = a1;
  return +[NSString stringWithCharacters:&v2 length:1];
}

NSString *NSString_valueOfChars_(uint64_t a1)
{
  return NSString_valueOfChars_offset_count_(a1, 0, *(unsigned int *)(a1 + 8));
}

NSString *NSString_valueOfChars_offset_count_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a2 & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    if ((a3 & 0x80000000) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  unsigned int v6 = [[JavaLangStringIndexOutOfBoundsException alloc] initWithInt:a2];
  uint64_t v10 = v6;
  if ((a3 & 0x80000000) != 0)
  {
LABEL_3:
    unsigned int v6 = [[JavaLangStringIndexOutOfBoundsException alloc] initWithInt:a3];
    uint64_t v7 = v6;
  }
LABEL_4:
  if ((int)a3 + (int)a2 > *(_DWORD *)(a1 + 8))
  {
    unsigned int v6 = [[JavaLangStringIndexOutOfBoundsException alloc] initWithInt:a2];
    uint64_t v8 = v6;
  }
  if (v6) {
    objc_exception_throw(v6);
  }
  return +[NSString stringWithCharacters:a1 + 12 + 2 * (int)a2 length:(int)a3];
}

CFStringRef NSString_valueOfDouble_(double a1)
{
  return RealToString_convertDouble(0, a1);
}

CFStringRef NSString_valueOfFloat_(float a1)
{
  return RealToString_convertFloat(0, a1);
}

NSString *NSString_valueOfInt_(unsigned int a1)
{
  return IntegralToString_convertInt(0, a1);
}

CFStringRef NSString_valueOfLong_(uint64_t a1)
{
  return IntegralToString_convertLong(0, a1);
}

id NSString_formatWithNSString_withNSObjectArray_(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_alloc_init(JavaUtilFormatter);
  id v5 = objc_msgSend(-[JavaUtilFormatter formatWithNSString:withNSObjectArray:](v4, "formatWithNSString:withNSObjectArray:", a1, a2), "description");

  return v5;
}

id NSString_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = [[[JavaUtilFormatter alloc] initWithJavaUtilLocale:a1] formatWithNSString:a2 withNSObjectArray:a3];
  return [v3 description];
}

uint64_t NSString_class_()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&NSString__initialized);
  if ((v0 & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562728 != -1) {
    dispatch_once(&qword_100562728, &stru_100472E00);
  }
  return qword_100562720;
}

void sub_10026DFD8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562720 = IOSClass_fromClass(v1);
}

id JavaUtilIdentityHashMap_initWithInt_(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  JavaUtilAbstractMap_init(a1, a2);
  *(_DWORD *)(a1 + 40) = 0;
  if (v2 < 0)
  {
    CFStringRef v15 = JreStrcat("$I", v4, v5, v6, v7, v8, v9, v10, @"maxSize < 0: ");
    uint64_t v16 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v15);
    objc_exception_throw(v16);
  }
  *(_DWORD *)(a1 + 32) = 0;
  if (v2 <= 3) {
    int v11 = 3;
  }
  else {
    int v11 = v2;
  }
  *(_DWORD *)(a1 + 36) = v11;
  int v12 = 2 * (10000 * *(_DWORD *)(a1 + 36) / 7500);
  if (((10000 * *(_DWORD *)(a1 + 36) / 7500) & 0x40000000) != 0) {
    int v12 = -2 * (10000 * *(_DWORD *)(a1 + 36) / 7500);
  }
  unsigned int v13 = +[IOSObjectArray arrayWithLength:v12 type:NSObject_class_()];
  return JreStrongAssign((id *)(a1 + 24), v13);
}

id JavaUtilIdentityHashMap_initWithJavaUtilMap_(void *a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if ((int)[a2 size] >= 6) {
    uint64_t v4 = 2 * [a2 size];
  }
  else {
    uint64_t v4 = 11;
  }
  JavaUtilIdentityHashMap_initWithInt_((uint64_t)a1, v4);
  return [a1 putAllImplWithJavaUtilMap:a2];
}

uint64_t sub_10026E3E8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v4 = *(_DWORD *)(a2 + 8);
  int v5 = JavaUtilCollections_secondaryIdentityHashWithId_(a1);
  if (v4 >= 0) {
    int v6 = v4;
  }
  else {
    int v6 = v4 + 1;
  }
  int v7 = v5 - (v5 & 0x7FFFFFFF) / (v6 >> 1) * (v6 >> 1);
  uint64_t v8 = (2 * v7);
  int v9 = (v4 + 2 * v7 - 2) % v4;
  if (v8 != v9)
  {
    while (1)
    {
      uint64_t v10 = *(unsigned int *)(a2 + 8);
      if ((v8 & 0x80000000) != 0 || (int)v8 >= (int)v10) {
        IOSArray_throwOutOfBoundsWithMsg(v10, v8);
      }
      uint64_t v11 = *(void *)(a2 + 24 + 8 * (int)v8);
      if (v11 == a1) {
        break;
      }
      uint64_t v12 = *(unsigned int *)(a2 + 8);
      if ((v8 & 0x80000000) != 0 || (int)v8 >= (int)v12) {
        IOSArray_throwOutOfBoundsWithMsg(v12, v8);
      }
      if (!v11) {
        break;
      }
      uint64_t v8 = (((int)v8 + 2) % v4);
      if (v8 == v9) {
        return ((v4 + 2 * v7 - 2) % v4);
      }
    }
  }
  return v8;
}

void sub_10026E6D4()
{
}

JavaUtilIdentityHashMap_IdentityHashMapEntry *sub_10026E6E4(void *a1, uint64_t a2)
{
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = qword_100562730;
  }
  uint64_t v4 = sub_10026E3E8(v3, a1[3]);
  uint64_t v5 = a1[3];
  if (!v5) {
    JreThrowNullPointerException();
  }
  uint64_t v6 = v4;
  uint64_t v7 = (int)v4;
  uint64_t v8 = *(unsigned int *)(v5 + 8);
  if ((v6 & 0x80000000) != 0 || (int)v6 >= (int)v8) {
    IOSArray_throwOutOfBoundsWithMsg(v8, v6);
  }
  if (*(void *)(v5 + 24 + 8 * v7) != v3) {
    return 0;
  }
  return sub_10026E7CC(a1, v6);
}

JavaUtilIdentityHashMap_IdentityHashMapEntry *sub_10026E7CC(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[3];
  if (!v2) {
    JreThrowNullPointerException();
  }
  uint64_t v4 = *(unsigned int *)(v2 + 8);
  if ((a2 & 0x80000000) != 0 || (int)v4 <= (int)a2) {
    IOSArray_throwOutOfBoundsWithMsg(v4, a2);
  }
  uint64_t v5 = v2;
  uint64_t v6 = *(void **)(v2 + 24 + 8 * (int)a2);
  uint64_t v7 = (a2 + 1);
  if ((int)v7 < 0 || (int)v7 >= (int)v4) {
    IOSArray_throwOutOfBoundsWithMsg(v4, v7);
  }
  if (v6 == (void *)qword_100562730) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v6;
  }
  if (*(void *)(v5 + 24 + 8 * (int)v7) == qword_100562730) {
    int v9 = 0;
  }
  else {
    int v9 = *(void **)(v5 + 24 + 8 * (int)v7);
  }
  uint64_t v10 = new_JavaUtilIdentityHashMap_IdentityHashMapEntry_initWithJavaUtilIdentityHashMap_withId_withId_(a1, v8, v9);
  return v10;
}

void sub_10026E8B8()
{
}

void sub_10026EAAC()
{
}

void sub_10026EF64()
{
}

JavaUtilIdentityHashMap_IdentityHashMapEntrySet *new_JavaUtilIdentityHashMap_IdentityHashMapEntrySet_initWithJavaUtilIdentityHashMap_(void *a1)
{
  uint64_t v2 = [JavaUtilIdentityHashMap_IdentityHashMapEntrySet alloc];
  JavaUtilAbstractSet_init(v2, v3);
  JreStrongAssign((id *)&v2->associatedMap_, a1);
  return v2;
}

JavaUtilIdentityHashMap_KeySet *new_JavaUtilIdentityHashMap_KeySet_initWithJavaUtilIdentityHashMap_(void *a1)
{
  uint64_t v2 = [JavaUtilIdentityHashMap_KeySet alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractSet_init(v2, v3);
  return v2;
}

JavaUtilIdentityHashMap_ValuesCollection *new_JavaUtilIdentityHashMap_ValuesCollection_initWithJavaUtilIdentityHashMap_(void *a1)
{
  uint64_t v2 = [JavaUtilIdentityHashMap_ValuesCollection alloc];
  objc_storeWeak((id *)&v2->this$0_, a1);
  JavaUtilAbstractCollection_init(v2, v3);
  return v2;
}

void sub_10026F314(_Unwind_Exception *a1)
{
}

JavaUtilIdentityHashMap *new_JavaUtilIdentityHashMap_init()
{
  unsigned __int8 v0 = [JavaUtilIdentityHashMap alloc];
  JavaUtilIdentityHashMap_initWithInt_((uint64_t)v0, 21);
  return v0;
}

JavaUtilIdentityHashMap_IdentityHashMapEntry *new_JavaUtilIdentityHashMap_IdentityHashMapEntry_initWithJavaUtilIdentityHashMap_withId_withId_(void *a1, void *a2, void *a3)
{
  uint64_t v6 = [JavaUtilIdentityHashMap_IdentityHashMapEntry alloc];
  JavaUtilMapEntry_initWithId_withId_((uint64_t)v6, a2, a3);
  JreStrongAssign((id *)&v6->map_, a1);
  return v6;
}

id JavaUtilIdentityHashMap_IdentityHashMapIterator_initWithJavaUtilMapEntry_Type_withJavaUtilIdentityHashMap_(uint64_t a1, void *a2, _DWORD *a3)
{
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  JreStrongAssign((id *)(a1 + 8), a3);
  id result = JreStrongAssign((id *)(a1 + 24), a2);
  if (!a3) {
    JreThrowNullPointerException();
  }
  *(_DWORD *)(a1 + 16) = a3[10];
  return result;
}

JavaSecurityAllPermissionCollection *new_JavaSecurityAllPermissionCollection_init()
{
  unsigned __int8 v0 = [JavaSecurityAllPermissionCollection alloc];
  JavaSecurityPermissionCollection_init(v0, v1);
  return v0;
}

void *JavaIoWriter_init(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 8);
  id v2 = objc_alloc((Class)NSObject);
  return JreStrongAssignAndConsume(v1, v2);
}

id JavaIoWriter_initWithId_(uint64_t a1, void *a2)
{
  if (!a2)
  {
    uint64_t v5 = new_JavaLangNullPointerException_initWithNSString_(@"lock == null");
    objc_exception_throw(v5);
  }
  uint64_t v3 = (id *)(a1 + 8);
  return JreStrongAssign(v3, a2);
}

void sub_100270734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100270880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100271270(uint64_t a1, _DWORD *a2, int a3)
{
  JreStrongAssign((id *)(a1 + 32), a2);
  JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = -1;
  *(_DWORD *)(a1 + 24) = -1;
  *(_DWORD *)(a1 + 20) = a2[2];
  if (a3 < 0 || (id result = [a2 size], (int)result < a3))
  {
    uint64_t v7 = new_JavaLangIndexOutOfBoundsException_init();
    objc_exception_throw(v7);
  }
  *(_DWORD *)(a1 + 16) = a3 - 1;
  return result;
}

id sub_1002715AC(uint64_t a1, void *a2, int a3, int a4)
{
  JavaUtilAbstractCollection_init(a1, a2);
  id result = JreStrongAssign((id *)(a1 + 16), a2);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    JreThrowNullPointerException();
  }
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v9 + 8);
  *(_DWORD *)(a1 + 24) = a3;
  *(_DWORD *)(a1 + 28) = a4 - a3;
  return result;
}

id JavaTextDecimalFormat_init(uint64_t a1, uint64_t a2)
{
  JavaTextNumberFormat_init(a1, a2);
  if ((atomic_load_explicit(JavaMathRoundingModeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JreStrongAssign((id *)(a1 + 44), (void *)qword_100563CC0);
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  uint64_t v4 = new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(Default);
  JreStrongAssignAndConsume((id *)(a1 + 28), v4);
  uint64_t v5 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(Default);
  if (!v5) {
    JreThrowNullPointerException();
  }
  numberPattern = v5->numberPattern_;
  return [(id)a1 initNativeWithNSString:numberPattern];
}

id JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(uint64_t a1, uint64_t a2, void *a3)
{
  JavaTextNumberFormat_init(a1, a2);
  if ((atomic_load_explicit(JavaMathRoundingModeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JreStrongAssign((id *)(a1 + 44), (void *)qword_100563CC0);
  if (!a3) {
    JreThrowNullPointerException();
  }
  id v6 = [a3 clone];
  objc_opt_class();
  if (v6 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  JreStrongAssign((id *)(a1 + 28), v6);
  return [(id)a1 initNativeWithNSString:a2];
}

id JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_(uint64_t a1, uint64_t a2, void *a3)
{
  JavaTextNumberFormat_init(a1, a2);
  if ((atomic_load_explicit(JavaMathRoundingModeEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JreStrongAssign((id *)(a1 + 44), (void *)qword_100563CC0);
  id v6 = new_JavaTextDecimalFormatSymbols_initWithJavaUtilLocale_(a3);
  JreStrongAssignAndConsume((id *)(a1 + 28), v6);
  return [(id)a1 initNativeWithNSString:a2];
}

uint64_t sub_10027276C(uint64_t result, uint64_t a2)
{
  if (!result)
  {
    CFStringRef v2 = @"buffer == null";
    goto LABEL_6;
  }
  if (!a2)
  {
    CFStringRef v2 = @"position == null";
LABEL_6:
    uint64_t v3 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v2);
    objc_exception_throw(v3);
  }
  return result;
}

void sub_100272998(_Unwind_Exception *a1)
{
}

void sub_1002729B8(void *a1)
{
}

JavaTextDecimalFormat *new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(uint64_t a1, void *a2)
{
  uint64_t v4 = [JavaTextDecimalFormat alloc];
  JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_((uint64_t)v4, a1, a2);
  return v4;
}

JavaTextDecimalFormat *new_JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_(uint64_t a1, void *a2)
{
  uint64_t v4 = [JavaTextDecimalFormat alloc];
  JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_((uint64_t)v4, a1, a2);
  return v4;
}

JavaNioFloatArrayBuffer *JavaNioFloatBuffer_allocateWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v10 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    uint64_t v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v10);
    objc_exception_throw(v11);
  }
  uint64_t v8 = new_JavaNioFloatArrayBuffer_initWithFloatArray_((unsigned int *)+[IOSFloatArray arrayWithLength:a1]);
  return v8;
}

JavaNioFloatArrayBuffer *JavaNioFloatBuffer_wrapWithFloatArray_withInt_withInt_(unsigned int *a1, int a2, int a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(a1[2], a2, a3);
  id result = new_JavaNioFloatArrayBuffer_initWithFloatArray_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3 + a2;
  return result;
}

uint64_t JavaNioFloatBuffer_initWithInt_withLong_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaNioBuffer_initWithInt_withInt_withLong_(a1, 2, a2, a3, a5, a6, a7, a8);
}

JavaLangRuntimeException *new_JavaLangRuntimeException_initWithNSString_(uint64_t a1)
{
  CFStringRef v2 = [JavaLangRuntimeException alloc];
  JavaLangException_initWithNSString_(v2, a1);
  return v2;
}

JavaLangRuntimeException *new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [JavaLangRuntimeException alloc];
  JavaLangException_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

JavaLangRuntimeException *new_JavaLangRuntimeException_initWithJavaLangThrowable_(uint64_t a1)
{
  CFStringRef v2 = [JavaLangRuntimeException alloc];
  JavaLangException_initWithJavaLangThrowable_(v2, a1);
  return v2;
}

JavaLangIndexOutOfBoundsException *new_JavaLangIndexOutOfBoundsException_init()
{
  unsigned __int8 v0 = [JavaLangIndexOutOfBoundsException alloc];
  JavaLangRuntimeException_init(v0, v1);
  return v0;
}

JavaLangIndexOutOfBoundsException *new_JavaLangIndexOutOfBoundsException_initWithNSString_(uint64_t a1)
{
  CFStringRef v2 = [JavaLangIndexOutOfBoundsException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

void sub_10027452C(_Unwind_Exception *a1)
{
}

JavaIoFileDescriptor *new_JavaIoFileDescriptor_init()
{
  id result = [JavaIoFileDescriptor alloc];
  result->descriptor_ = -1;
  return result;
}

uint64_t JavaIoFileDescriptor_class_()
{
  if ((atomic_load_explicit(JavaIoFileDescriptor__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562748 != -1) {
    dispatch_once(&qword_100562748, &stru_100476C00);
  }
  return qword_100562740;
}

void sub_100274700(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562740 = IOSClass_fromClass(v1);
}

JavaNioByteBufferAsLongBuffer *JavaNioByteBufferAsLongBuffer_asLongBufferWithJavaNioByteBuffer_(void *a1)
{
  if (!a1 || (CFStringRef v2 = (uint64_t *)[a1 slice]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, "orderWithJavaNioByteOrder:", objc_msgSend(a1, "order"));
  uint64_t v4 = [JavaNioByteBufferAsLongBuffer alloc];
  sub_1002747D4((uint64_t)v4, v3);
  return v4;
}

id sub_1002747D4(uint64_t a1, uint64_t *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  signed int v4 = [a2 capacity];
  JavaNioLongBuffer_initWithInt_withLong_(a1, (v4 / 8), a2[4], v5, v6, v7, v8, v9);
  JreStrongAssign((id *)(a1 + 40), a2);
  CFStringRef v10 = *(void **)(a1 + 40);
  return [v10 clear];
}

uint64_t JavaLangAssertionError_initWithId_(void *a1, void *a2)
{
  CFStringRef v4 = NSString_valueOf_(a2);
  JavaLangError_initWithNSString_(a1, v4);
  objc_opt_class();
  uint64_t result = objc_opt_isKindOfClass();
  if (result)
  {
    objc_opt_class();
    if (a2 && (objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    return (uint64_t)[a1 initCauseWithJavaLangThrowable:a2];
  }
  return result;
}

JavaLangAssertionError *new_JavaLangAssertionError_init()
{
  unsigned __int8 v0 = [JavaLangAssertionError alloc];
  JavaLangError_init(v0, v1);
  return v0;
}

JavaLangAssertionError *new_JavaLangAssertionError_initWithNSString_withJavaLangThrowable_(uint64_t a1, uint64_t a2)
{
  CFStringRef v4 = [JavaLangAssertionError alloc];
  JavaLangError_initWithNSString_withJavaLangThrowable_(v4, a1, a2);
  return v4;
}

JavaLangAssertionError *new_JavaLangAssertionError_initWithId_(void *a1)
{
  CFStringRef v2 = [JavaLangAssertionError alloc];
  JavaLangAssertionError_initWithId_(v2, a1);
  return v2;
}

uint64_t LibcoreIoIoBridge_availableWithJavaIoFileDescriptor_(uint64_t a1)
{
  CFStringRef v2 = new_LibcoreUtilMutableInt_initWithInt_(0);
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  [(id)LibcoreIoLibcore_os_ ioctlIntWithJavaIoFileDescriptor:a1 withInt:1074030207 withLibcoreUtilMutableInt:v2];
  uint64_t result = v2->value_;
  if ((result & 0x80000000) != 0)
  {
    v2->value_ = 0;
    return v2->value_;
  }
  return result;
}

void sub_1002754DC()
{
}

void sub_100275530()
{
}

id LibcoreIoIoBridge_bindWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_(uint64_t a1, JavaNetInet6Address *a2, uint64_t a3)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (!a2) {
      JreThrowNullPointerException();
    }
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      JreThrowClassCastException();
    }
    if (![(JavaNetInet6Address *)a2 getScopeId]
      && [(JavaNetInet6Address *)a2 isLinkLocalAddress])
    {
      uint64_t v6 = (void *)JavaNetNetworkInterface_getByInetAddressWithJavaNetInetAddress_((uint64_t)a2);
      if (!v6)
      {
        CFStringRef v15 = JreStrcat("$@", v7, v8, v9, v10, v11, v12, v13, @"Can't bind to a link-local address without a scope id: ");
        uint64_t v16 = new_JavaNetSocketException_initWithNSString_((uint64_t)v15);
        objc_exception_throw(v16);
      }
      a2 = JavaNetInet6Address_getByAddressWithNSString_withByteArray_withInt_(-[JavaNetInetAddress getHostName](a2, "getHostName"), -[JavaNetInetAddress getAddress](a2, "getAddress"), (int)[v6 getIndex]);
    }
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  return [(id)LibcoreIoLibcore_os_ bindWithJavaIoFileDescriptor:a1 withJavaNetInetAddress:a2 withInt:a3];
}

id LibcoreIoIoBridge_connectWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return LibcoreIoIoBridge_connectWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_withInt_(a1, a2, a3, 0);
}

id LibcoreIoIoBridge_connectWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_10027587C(a1, a2, a3, a4);
}

id sub_10027587C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a4)
  {
    LibcoreIoIoUtils_setBlockingWithJavaIoFileDescriptor_withBoolean_(a1, 0);
    JavaLangSystem_currentTimeMillis();
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    [(id)LibcoreIoLibcore_os_ connectWithJavaIoFileDescriptor:a1 withJavaNetInetAddress:a2 withInt:a3];
    return LibcoreIoIoUtils_setBlockingWithJavaIoFileDescriptor_withBoolean_(a1, 1);
  }
  else
  {
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v8 = (void *)LibcoreIoLibcore_os_;
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    return [v8 connectWithJavaIoFileDescriptor:a1 withJavaNetInetAddress:a2 withInt:a3];
  }
}

void sub_100275A6C()
{
}

__CFString *sub_100275A90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a3;
  uint64_t v23 = (__CFString *)JreStrcat("$@$IC", a2, a3, (uint64_t)a4, a5, a6, a7, a8, @"failed to connect to ");
  if (v9 >= 1) {
    JreStrAppendStrong(&v23, "$I$", v10, v11, v12, v13, v14, v15, @" after ");
  }
  if (a4)
  {
    [a4 getMessage];
    JreStrAppendStrong(&v23, "$$", v16, v17, v18, v19, v20, v21, @": ");
  }
  return v23;
}

id LibcoreIoIoBridge_closeSocketWithJavaIoFileDescriptor_(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id result = [a1 valid];
  if (result)
  {
    id v3 = [a1 getInt$];
    [a1 setInt$WithInt:0xFFFFFFFFLL];
    CFStringRef v4 = new_JavaIoFileDescriptor_init();
    [(JavaIoFileDescriptor *)v4 setInt$WithInt:v3];
    LibcoreIoAsynchronousCloseMonitor_signalBlockedThreadsWithJavaIoFileDescriptor_(v4);
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    return [(id)LibcoreIoLibcore_os_ closeWithJavaIoFileDescriptor:v4];
  }
  return result;
}

uint64_t LibcoreIoIoBridge_isConnectedWithJavaIoFileDescriptor_withJavaNetInetAddress_withInt_withInt_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = new_LibcoreIoStructPollfd_init();
  uint64_t v7 = +[IOSObjectArray arrayWithObjects:&v15 count:1 type:LibcoreIoStructPollfd_class_()];
  uint64_t size = v7->super.size_;
  if ((int)size <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(size, 0);
  }
  elementTypuint64_t e = v7->elementType_;
  if (!elementType) {
    goto LABEL_14;
  }
  JreStrongAssign((id *)&elementType[1].super.isa, a1);
  uint64_t v10 = v7->super.size_;
  if ((int)v10 <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(v10, 0);
  }
  uint64_t v11 = v7->elementType_;
  if (!v11) {
LABEL_14:
  }
    JreThrowNullPointerException();
  LOWORD(v11[2].super.isa) = 4;
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  uint64_t result = (uint64_t)objc_msgSend((id)LibcoreIoLibcore_os_, "pollWithLibcoreIoStructPollfdArray:withInt:", v7, a5, v15);
  if (result)
  {
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    unsigned int v13 = [(id)LibcoreIoLibcore_os_ getsockoptIntWithJavaIoFileDescriptor:a1 withInt:0xFFFFLL withInt:4103];
    if (v13)
    {
      uint64_t v14 = new_LibcoreIoErrnoException_initWithNSString_withInt_(@"isConnected", v13);
      objc_exception_throw(v14);
    }
    return 1;
  }
  return result;
}

void sub_100275E10(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    uint64_t v6 = objc_begin_catch(exception_object);
    if (v5)
    {
      uint64_t v7 = v6;
      if (([v5 valid] & 1) == 0)
      {
        unsigned int v13 = new_JavaNetSocketException_initWithNSString_(@"Socket closed");
        objc_exception_throw(v13);
      }
      if (v7)
      {
        int v8 = v7[21];
        objc_end_catch();
        if (v8 == 4) {
          JUMPOUT(0x100275D78);
        }
        uint64_t v14 = sub_100275A90(v4, v3, v2, v7, v9, v10, v11, v12);
        if (v7[21] == 60)
        {
          uint64_t v15 = new_JavaNetSocketTimeoutException_initWithNSString_withJavaLangThrowable_((uint64_t)v14, (uint64_t)v7);
          objc_exception_throw(v15);
        }
        uint64_t v16 = new_JavaNetConnectException_initWithNSString_withJavaLangThrowable_((uint64_t)v14, (uint64_t)v7);
        objc_exception_throw(v16);
      }
    }
    JreThrowNullPointerException();
  }
  _Unwind_Resume(exception_object);
}

void sub_100275ED4(_Unwind_Exception *a1)
{
}

void sub_100275EDC()
{
}

JavaLangInteger *LibcoreIoIoBridge_getSocketOptionWithJavaIoFileDescriptor_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100275F60(a1, a2, a3, a4, a5, a6, a7, a8);
}

JavaLangInteger *sub_100275F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((int)a2 > 30)
  {
    if ((int)a2 > 4096)
    {
      switch((int)a2)
      {
        case 4097:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          unsigned int v13 = (void *)LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_82;
          }
          uint64_t v14 = a1;
          uint64_t v15 = 0xFFFFLL;
          uint64_t v16 = 4097;
          goto LABEL_69;
        case 4098:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          unsigned int v13 = (void *)LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_82;
          }
          uint64_t v14 = a1;
          uint64_t v15 = 0xFFFFLL;
          uint64_t v16 = 4098;
          goto LABEL_69;
        case 4099:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          uint64_t v9 = (void *)LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_82;
          }
          uint64_t v10 = a1;
          uint64_t v11 = 0xFFFFLL;
          uint64_t v12 = 256;
          goto LABEL_77;
        case 4102:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_82;
          }
          id v20 = [(id)LibcoreIoLibcore_os_ getsockoptTimevalWithJavaIoFileDescriptor:a1 withInt:0xFFFFLL withInt:4102];
          if (!v20) {
            goto LABEL_82;
          }
          int v19 = [v20 toMillis];
          goto LABEL_70;
        default:
          goto LABEL_83;
      }
    }
    if (a2 != 31)
    {
      if (a2 == 32)
      {
        if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v9 = (void *)LibcoreIoLibcore_os_;
        if (LibcoreIoLibcore_os_)
        {
          uint64_t v10 = a1;
          uint64_t v11 = 0xFFFFLL;
          uint64_t v12 = 32;
          goto LABEL_77;
        }
LABEL_82:
        JreThrowNullPointerException();
      }
      if (a2 != 128)
      {
LABEL_83:
        CFStringRef v23 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Unknown socket option: ");
        uint64_t v24 = new_JavaNetSocketException_initWithNSString_((uint64_t)v23);
        objc_exception_throw(v24);
      }
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_82;
      }
      uint64_t v17 = [(id)LibcoreIoLibcore_os_ getsockoptLingerWithJavaIoFileDescriptor:a1 withInt:0xFFFFLL withInt:128];
      if (!v17) {
        goto LABEL_82;
      }
      uint64_t v18 = v17;
      if (([v17 isOn] & 1) == 0)
      {
        BOOL v22 = 0;
        goto LABEL_78;
      }
      int v19 = v18[3];
      goto LABEL_70;
    }
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    unsigned int v13 = (void *)LibcoreIoLibcore_os_;
    if (!LibcoreIoLibcore_os_) {
      goto LABEL_82;
    }
    uint64_t v14 = a1;
    uint64_t v15 = 41;
    uint64_t v16 = 9;
LABEL_69:
    int v19 = [v13 getsockoptIntWithJavaIoFileDescriptor:v14 withInt:v15 withInt:v16];
LABEL_70:
    return JavaLangInteger_valueOfWithInt_(v19);
  }
  if ((int)a2 <= 15)
  {
    switch((int)a2)
    {
      case 1:
        if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v9 = (void *)LibcoreIoLibcore_os_;
        if (!LibcoreIoLibcore_os_) {
          goto LABEL_82;
        }
        uint64_t v10 = a1;
        uint64_t v11 = 6;
        uint64_t v12 = 1;
        goto LABEL_77;
      case 3:
        if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        unsigned int v13 = (void *)LibcoreIoLibcore_os_;
        if (!LibcoreIoLibcore_os_) {
          goto LABEL_82;
        }
        uint64_t v14 = a1;
        uint64_t v15 = 41;
        uint64_t v16 = 36;
        goto LABEL_69;
      case 4:
        if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v9 = (void *)LibcoreIoLibcore_os_;
        if (!LibcoreIoLibcore_os_) {
          goto LABEL_82;
        }
        uint64_t v10 = a1;
        uint64_t v11 = 0xFFFFLL;
        uint64_t v12 = 4;
        goto LABEL_77;
      case 8:
        if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v9 = (void *)LibcoreIoLibcore_os_;
        if (!LibcoreIoLibcore_os_) {
          goto LABEL_82;
        }
        uint64_t v10 = a1;
        uint64_t v11 = 0xFFFFLL;
        uint64_t v12 = 8;
        goto LABEL_77;
      default:
        goto LABEL_83;
    }
  }
  if (a2 != 16)
  {
    if (a2 != 17)
    {
      if (a2 == 18)
      {
        if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
          objc_opt_class();
        }
        uint64_t v9 = (void *)LibcoreIoLibcore_os_;
        if (LibcoreIoLibcore_os_)
        {
          uint64_t v10 = a1;
          uint64_t v11 = 41;
          uint64_t v12 = 11;
LABEL_77:
          BOOL v22 = [v9 getsockoptIntWithJavaIoFileDescriptor:v10 withInt:v11 withInt:v12] != 0;
LABEL_78:
          return (JavaLangInteger *)JavaLangBoolean_valueOfWithBoolean_(v22);
        }
        goto LABEL_82;
      }
      goto LABEL_83;
    }
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    unsigned int v13 = (void *)LibcoreIoLibcore_os_;
    if (!LibcoreIoLibcore_os_) {
      goto LABEL_82;
    }
    uint64_t v14 = a1;
    uint64_t v15 = 41;
    uint64_t v16 = 10;
    goto LABEL_69;
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v21 = (void *)LibcoreIoLibcore_os_;
  if (!LibcoreIoLibcore_os_) {
    goto LABEL_82;
  }
  return (JavaLangInteger *)[v21 getsockoptInAddrWithJavaIoFileDescriptor:a1 withInt:0 withInt:9];
}

id LibcoreIoIoBridge_setSocketOptionWithJavaIoFileDescriptor_withInt_withId_(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100276528(a1, a2, a3, a4, a5, a6, a7, a8);
}

id sub_100276528(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a2;
  switch((int)a2)
  {
    case 1:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v32 = LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 BOOLeanValue];
      CFStringRef v23 = (void *)v32;
      uint64_t v24 = a1;
      uint64_t v25 = 6;
      uint64_t v26 = 1;
      goto LABEL_111;
    case 2:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
LABEL_131:
      CFStringRef v50 = JreStrcat("$I", a2, (uint64_t)a3, a4, a5, a6, a7, a8, @"Unknown socket option: ");
      unsigned int v51 = new_JavaNetSocketException_initWithNSString_((uint64_t)v50);
      goto LABEL_133;
    case 3:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      int v33 = (void *)LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      objc_msgSend(v33, "setsockoptIntWithJavaIoFileDescriptor:withInt:withInt:withInt:", a1, 0, 3, objc_msgSend(a3, "intValue"));
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v34 = LibcoreIoLibcore_os_;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 intValue];
      CFStringRef v23 = (void *)v34;
      uint64_t v24 = a1;
      uint64_t v25 = 41;
      uint64_t v26 = 36;
      goto LABEL_111;
    case 4:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v35 = LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 BOOLeanValue];
      CFStringRef v23 = (void *)v35;
      uint64_t v24 = a1;
      uint64_t v25 = 0xFFFFLL;
      uint64_t v26 = 4;
      goto LABEL_111;
    case 8:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v36 = LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 BOOLeanValue];
      CFStringRef v23 = (void *)v36;
      uint64_t v24 = a1;
      uint64_t v25 = 0xFFFFLL;
      uint64_t v26 = 8;
      goto LABEL_111;
    case 16:
      unsigned int v51 = new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use IP_MULTICAST_IF2 on Android");
LABEL_133:
      objc_exception_throw(v51);
    case 17:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      int v37 = (void *)LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      objc_msgSend(v37, "setsockoptByteWithJavaIoFileDescriptor:withInt:withInt:withInt:", a1, 0, 10, objc_msgSend(a3, "intValue"));
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v38 = LibcoreIoLibcore_os_;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 intValue];
      CFStringRef v23 = (void *)v38;
      uint64_t v24 = a1;
      uint64_t v25 = 41;
      uint64_t v26 = 10;
      goto LABEL_111;
    case 18:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      int v39 = (void *)LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      objc_msgSend(v39, "setsockoptByteWithJavaIoFileDescriptor:withInt:withInt:withInt:", a1, 0, 11, objc_msgSend(a3, "BOOLeanValue"));
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v40 = LibcoreIoLibcore_os_;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 BOOLeanValue];
      CFStringRef v23 = (void *)v40;
      uint64_t v24 = a1;
      uint64_t v25 = 41;
      uint64_t v26 = 11;
      goto LABEL_111;
    case 19:
    case 20:
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = 41;
      }
      if (v9 == 19) {
        uint64_t v28 = 80;
      }
      else {
        uint64_t v28 = 81;
      }
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      int v29 = (void *)LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      return [v29 setsockoptGroupReqWithJavaIoFileDescriptor:a1 withInt:v27 withInt:v28 withLibcoreIoStructGroupReq:a3];
    case 21:
    case 22:
    case 23:
    case 24:
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = 41;
      }
      uint64_t v19 = sub_100276FD0(v9, v11, v12, v13, v14, v15, v16, v17);
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      id v20 = (void *)LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      return [v20 setsockoptGroupSourceReqWithJavaIoFileDescriptor:a1 withInt:v18 withInt:v19 withLibcoreIoStructGroupSourceReq:a3];
    case 31:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v41 = (void *)LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      objc_msgSend(v41, "setsockoptIpMreqnWithJavaIoFileDescriptor:withInt:withInt:withInt:", a1, 0, 9, objc_msgSend(a3, "intValue"));
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v42 = LibcoreIoLibcore_os_;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 intValue];
      CFStringRef v23 = (void *)v42;
      uint64_t v24 = a1;
      uint64_t v25 = 41;
      uint64_t v26 = 9;
      goto LABEL_111;
    case 32:
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      uint64_t v43 = LibcoreIoLibcore_os_;
      if (!LibcoreIoLibcore_os_) {
        goto LABEL_130;
      }
      objc_opt_class();
      if (!a3) {
        goto LABEL_130;
      }
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_129;
      }
      id v22 = [a3 BOOLeanValue];
      CFStringRef v23 = (void *)v43;
      uint64_t v24 = a1;
      uint64_t v25 = 0xFFFFLL;
      uint64_t v26 = 32;
LABEL_111:
      return [v23 setsockoptIntWithJavaIoFileDescriptor:v24 withInt:v25 withInt:v26 withInt:v22];
    default:
      switch((int)a2)
      {
        case 4097:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          uint64_t v21 = LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_130;
          }
          objc_opt_class();
          if (!a3) {
            goto LABEL_130;
          }
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_129;
          }
          id v22 = [a3 intValue];
          CFStringRef v23 = (void *)v21;
          uint64_t v24 = a1;
          uint64_t v25 = 0xFFFFLL;
          uint64_t v26 = 4097;
          goto LABEL_111;
        case 4098:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          uint64_t v44 = LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_130;
          }
          objc_opt_class();
          if (!a3) {
            goto LABEL_130;
          }
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_129;
          }
          id v22 = [a3 intValue];
          CFStringRef v23 = (void *)v44;
          uint64_t v24 = a1;
          uint64_t v25 = 0xFFFFLL;
          uint64_t v26 = 4098;
          goto LABEL_111;
        case 4099:
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          uint64_t v45 = LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_130;
          }
          objc_opt_class();
          if (!a3) {
            goto LABEL_130;
          }
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_129;
          }
          id v22 = [a3 BOOLeanValue];
          CFStringRef v23 = (void *)v45;
          uint64_t v24 = a1;
          uint64_t v25 = 0xFFFFLL;
          uint64_t v26 = 256;
          goto LABEL_111;
        case 4100:
        case 4101:
          goto LABEL_131;
        case 4102:
          objc_opt_class();
          if (!a3) {
            goto LABEL_130;
          }
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_129;
          }
          uint64_t v46 = LibcoreIoStructTimeval_fromMillisWithLong_((int)[a3 intValue]);
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          uint64_t v47 = (void *)LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
            goto LABEL_130;
          }
          return [v47 setsockoptTimevalWithJavaIoFileDescriptor:a1 withInt:0xFFFFLL withInt:4102 withLibcoreIoStructTimeval:v46];
        default:
          if (a2 != 128) {
            goto LABEL_131;
          }
          objc_opt_class();
          char isKindOfClass = objc_opt_isKindOfClass();
          if (isKindOfClass)
          {
            objc_opt_class();
            if (!a3) {
              goto LABEL_130;
            }
            if ((objc_opt_isKindOfClass() & 1) == 0) {
LABEL_129:
            }
              JreThrowClassCastException();
            int v31 = JavaLangMath_minWithInt_withInt_((uint64_t)[a3 intValue], 0xFFFF);
          }
          else
          {
            int v31 = 0;
          }
          uint64_t v48 = new_LibcoreIoStructLinger_initWithInt_withInt_(isKindOfClass & 1, v31);
          if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
            objc_opt_class();
          }
          uint64_t v49 = (void *)LibcoreIoLibcore_os_;
          if (!LibcoreIoLibcore_os_) {
LABEL_130:
          }
            JreThrowNullPointerException();
          return [v49 setsockoptLingerWithJavaIoFileDescriptor:a1 withInt:0xFFFFLL withInt:128 withLibcoreIoStructLinger:v48];
      }
  }
}

uint64_t sub_100276FD0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 - 21) >= 4)
  {
    int v9 = (__CFString *)JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Unknown java value for setsocketopt op lookup: ");
    uint64_t v10 = new_JavaLangAssertionError_initWithId_(v9);
    objc_exception_throw(v10);
  }
  return (a1 + 61);
}

id LibcoreIoIoBridge_openWithNSString_withInt_(uint64_t a1, uint64_t a2)
{
  if ((a2 & 3) != 0) {
    uint64_t v4 = 384;
  }
  else {
    uint64_t v4 = 0;
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  id v5 = [(id)LibcoreIoLibcore_os_ openWithNSString:a1 withInt:a2 withInt:v4];
  if ([(NSString *)[(NSDictionary *)[+[NSFileManager defaultManager] attributesOfItemAtPath:a1 error:0] fileType] isEqualToString:NSFileTypeDirectory])
  {
    uint64_t v7 = new_LibcoreIoErrnoException_initWithNSString_withInt_(@"open", 0x15u);
    objc_exception_throw(v7);
  }
  return v5;
}

void sub_1002771B8(_Unwind_Exception *a1)
{
}

uint64_t LibcoreIoIoBridge_readWithJavaIoFileDescriptor_withByteArray_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a2 + 8), a3, a4);
  if (!a4) {
    return 0;
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  LODWORD(result) = [(id)LibcoreIoLibcore_os_ readWithJavaIoFileDescriptor:a1 withByteArray:a2 withInt:a3 withInt:a4];
  if (result) {
    return result;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

void sub_100277334()
{
}

id LibcoreIoIoBridge_writeWithJavaIoFileDescriptor_withByteArray_withInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  id result = (id)JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a2 + 8), a3, a4);
  if ((int)v4 >= 1)
  {
    do
    {
      if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
        objc_opt_class();
      }
      if (!LibcoreIoLibcore_os_) {
        JreThrowNullPointerException();
      }
      id result = [(id)LibcoreIoLibcore_os_ writeWithJavaIoFileDescriptor:a1 withByteArray:a2 withInt:v5 withInt:v4];
      uint64_t v4 = (v4 - result);
      uint64_t v5 = (result + v5);
    }
    while ((int)v4 > 0);
  }
  return result;
}

void sub_100277428(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    if (v2) {
      objc_exception_throw([v2 rethrowAsIOException]);
    }
    JreThrowNullPointerException();
  }
  _Unwind_Resume(exception_object);
}

void sub_100277458()
{
}

id LibcoreIoIoBridge_sendtoWithJavaIoFileDescriptor_withByteArray_withInt_withInt_withInt_withJavaNetInetAddress_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  if ((int)a4 <= 0 && !a6) {
    return 0;
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  LODWORD(v15) = a7;
  return [(id)LibcoreIoLibcore_os_ sendtoWithJavaIoFileDescriptor:a1 withByteArray:a2 withInt:a3 withInt:a4 withInt:a5 withJavaNetInetAddress:a6 withInt:v15];
}

id LibcoreIoIoBridge_sendtoWithJavaIoFileDescriptor_withJavaNioByteBuffer_withInt_withJavaNetInetAddress_withInt_(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    goto LABEL_4;
  }
  if (!a2) {
    JreThrowNullPointerException();
  }
  id result = [a2 remaining];
  if (result)
  {
LABEL_4:
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    if (!LibcoreIoLibcore_os_) {
      JreThrowNullPointerException();
    }
    return [(id)LibcoreIoLibcore_os_ sendtoWithJavaIoFileDescriptor:a1 withJavaNioByteBuffer:a2 withInt:a3 withJavaNetInetAddress:a4 withInt:a5];
  }
  return result;
}

uint64_t sub_1002776B8(uint64_t result, _DWORD *a2)
{
  if (!result)
  {
    if (a2)
    {
      if (a2[21] != 35) {
        goto LABEL_5;
      }
      return result;
    }
LABEL_9:
    JreThrowNullPointerException();
  }
  if (!a2) {
    goto LABEL_9;
  }
  int v2 = a2[21];
  if (v2 != 54 && v2 != 61) {
LABEL_5:
  }
    objc_exception_throw([a2 rethrowAsSocketException]);
  return result;
}

uint64_t LibcoreIoIoBridge_recvfromWithBoolean_withJavaIoFileDescriptor_withByteArray_withInt_withInt_withInt_withJavaNetDatagramPacket_withBoolean_(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char a8)
{
  uint64_t v16 = 0;
  if (a7 && (a8 & 1) == 0) {
    uint64_t v16 = new_JavaNetInetSocketAddress_init();
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  return sub_1002779A8(a1, a7, a8, v16, (uint64_t)[(id)LibcoreIoLibcore_os_ recvfromWithJavaIoFileDescriptor:a2 withByteArray:a3 withInt:a4 withInt:a5 withInt:a6 withJavaNetInetSocketAddress:v16]);
}

uint64_t LibcoreIoIoBridge_recvfromWithBoolean_withJavaIoFileDescriptor_withJavaNioByteBuffer_withInt_withJavaNetDatagramPacket_withBoolean_(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v12 = 0;
  if (a5 && (a6 & 1) == 0) {
    uint64_t v12 = new_JavaNetInetSocketAddress_init();
  }
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  return sub_1002779A8(a1, a5, a6, v12, (uint64_t)[(id)LibcoreIoLibcore_os_ recvfromWithJavaIoFileDescriptor:a2 withJavaNioByteBuffer:a3 withInt:a4 withJavaNetInetSocketAddress:v12]);
}

uint64_t sub_1002779A8(char a1, void *a2, char a3, void *a4, uint64_t a5)
{
  uint64_t v5 = a5;
  if (!a5 && (a1 & 1) != 0) {
    return 0xFFFFFFFFLL;
  }
  if (a2)
  {
    [a2 setReceivedLengthWithInt:a5];
    if ((a3 & 1) == 0)
    {
      if (!a4) {
        JreThrowNullPointerException();
      }
      objc_msgSend(a2, "setAddressWithJavaNetInetAddress:", objc_msgSend(a4, "getAddress"));
      objc_msgSend(a2, "setPortWithInt:", objc_msgSend(a4, "getPort"));
    }
  }
  return v5;
}

uint64_t sub_100277A5C(uint64_t result, int a2, _DWORD *a3)
{
  if (!result)
  {
    if (a2)
    {
      if (a3)
      {
        int v3 = a3[21];
        if (v3 == 61)
        {
          uint64_t v4 = new_JavaNetPortUnreachableException_initWithNSString_withJavaLangThrowable_((uint64_t)&stru_10048C1F8, (uint64_t)a3);
          goto LABEL_13;
        }
LABEL_11:
        if (v3 != 35) {
LABEL_15:
        }
          objc_exception_throw([a3 rethrowAsSocketException]);
        uint64_t v4 = new_JavaNetSocketTimeoutException_initWithJavaLangThrowable_((uint64_t)a3);
LABEL_13:
        objc_exception_throw(v4);
      }
    }
    else if (a3)
    {
      int v3 = a3[21];
      goto LABEL_11;
    }
LABEL_14:
    JreThrowNullPointerException();
  }
  if (!a3) {
    goto LABEL_14;
  }
  if (a3[21] != 35) {
    goto LABEL_15;
  }
  return result;
}

id LibcoreIoIoBridge_socketWithBoolean_(int a1)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  if (a1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = 2;
  }
  id v3 = [(id)LibcoreIoLibcore_os_ socketWithInt:30 withInt:v2 withInt:0];
  if ((a1 & 1) == 0)
  {
    if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    [(id)LibcoreIoLibcore_os_ setsockoptIntWithJavaIoFileDescriptor:v3 withInt:41 withInt:10 withInt:1];
  }
  return v3;
}

void sub_100277BE8(_Unwind_Exception *a1)
{
}

id LibcoreIoIoBridge_getSocketLocalAddressWithJavaIoFileDescriptor_(uint64_t a1)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  id v2 = [(id)LibcoreIoLibcore_os_ getsocknameWithJavaIoFileDescriptor:a1];
  objc_opt_class();
  if (!v2) {
    JreThrowNullPointerException();
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return [v2 getAddress];
}

void sub_100277C9C(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    if (v2) {
      objc_exception_throw([v2 rethrowAsSocketException]);
    }
    JreThrowNullPointerException();
  }
  _Unwind_Resume(exception_object);
}

void sub_100277CCC()
{
}

id LibcoreIoIoBridge_getSocketLocalPortWithJavaIoFileDescriptor_(uint64_t a1)
{
  if ((atomic_load_explicit(LibcoreIoLibcore__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!LibcoreIoLibcore_os_) {
    JreThrowNullPointerException();
  }
  id v2 = [(id)LibcoreIoLibcore_os_ getsocknameWithJavaIoFileDescriptor:a1];
  objc_opt_class();
  if (!v2) {
    JreThrowNullPointerException();
  }
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return [v2 getPort];
}

void sub_100277D80(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    if (v2) {
      objc_exception_throw([v2 rethrowAsSocketException]);
    }
    JreThrowNullPointerException();
  }
  _Unwind_Resume(exception_object);
}

void sub_100277DB0()
{
}

id JavaLangReflectAccessibleObject_setAccessibleWithJavaLangReflectAccessibleObjectArray_withBoolean_(void *a1, uint64_t a2)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id result = [a1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (result)
  {
    id v5 = result;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(a1);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v7) setAccessibleWithBoolean:a2];
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id result = [a1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      id v5 = result;
    }
    while (result);
  }
  return result;
}

BOOL validTypeEncoding(const char *a1)
{
  return strlen(a1) == 1 && memchr("@#cSsilLqQZfdBv", *a1, 0x10uLL) != 0;
}

id decodeTypeEncoding(const char *a1)
{
  size_t v2 = strlen(a1);
  int v3 = *(unsigned __int8 *)a1;
  if (v2 >= 4 && v3 == 64)
  {
    uint64_t v4 = a1 + 2;
    if (a1[2] == 60)
    {
      uint64_t v4 = a1 + 3;
      size_t v5 = v2 - 5;
    }
    else
    {
      size_t v5 = v2 - 3;
    }
    uint64_t v7 = strndup(v4, v5);
    long long v8 = +[NSString stringWithUTF8String:v7];
    free(v7);
    return +[IOSClass forName:v8];
  }
  if ((char)v3 > 80)
  {
    switch((char)v3)
    {
      case 'c':
        return +[IOSClass byteClass];
      case 'd':
        return +[IOSClass doubleClass];
      case 'e':
      case 'g':
      case 'h':
      case 'j':
      case 'k':
      case 'm':
      case 'n':
      case 'o':
      case 'p':
      case 'r':
      case 't':
      case 'u':
        goto LABEL_52;
      case 'f':
        return +[IOSClass floatClass];
      case 'i':
        return +[IOSClass intClass];
      case 'l':
      case 'q':
        goto LABEL_28;
      case 's':
        return +[IOSClass shortClass];
      case 'v':
        return +[IOSClass voidClass];
      default:
        if ((char)v3 == 81) {
          goto LABEL_28;
        }
        if ((char)v3 != 83) {
          goto LABEL_52;
        }
        id result = +[IOSClass charClass];
        break;
    }
    return result;
  }
  if ((char)v3 > 65)
  {
    if ((char)v3 != 66)
    {
      if ((char)v3 == 76)
      {
LABEL_28:
        return +[IOSClass longClass];
      }
      goto LABEL_52;
    }
    return +[IOSClass BOOLeanClass];
  }
  else
  {
    if ((char)v3 != 35)
    {
      if ((char)v3 == 64)
      {
        return (id)NSObject_class_();
      }
LABEL_52:
      objc_exception_throw([(JavaLangError *)[JavaLangAssertionError alloc] initWithNSString:+[NSString stringWithFormat:@"unknown Java type encoding: '%s'", a1]]);
    }
    return (id)IOSClass_class_();
  }
}

id JavaUtilZipInflater_initWithBoolean_(uint64_t a1, int a2)
{
  *(_OWORD *)(a1 + 24) = xmmword_10031FBF0;
  uint64_t v4 = (id *)(a1 + 40);
  size_t v5 = DalvikSystemCloseGuard_get();
  JreStrongAssign(v4, v5);
  *(void *)(a1 + 24) = sub_1002784D0(a2);
  uint64_t v6 = *(void **)(a1 + 40);
  if (!v6) {
    JreThrowNullPointerException();
  }
  return [v6 openWithNSString:@"end"];
}

z_stream *sub_1002784D0(int a1)
{
  size_t v2 = (z_stream *)malloc_type_malloc(0x70uLL, 0x10B0040E8CA615DuLL);
  int v3 = v2;
  v2->zfreuint64_t e = 0;
  v2->opaquuint64_t e = 0;
  v2->zalloc = 0;
  v2->adler = 1;
  if (a1) {
    int v4 = -15;
  }
  else {
    int v4 = 15;
  }
  if (inflateInit2_(v2, v4, "1.2.12", 112))
  {
    free(v3);
    objc_exception_throw(objc_alloc_init(JavaLangIllegalArgumentException));
  }
  return v3;
}

void sub_1002785D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002786A0()
{
}

void sub_1002786DC()
{
}

void sub_10027876C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002787FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100278850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10027891C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100278984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100278AB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100278AD0(uint64_t a1, int *a2, int a3, uInt a4, z_stream *a5)
{
  if (!a2) {
    return 0xFFFFFFFFLL;
  }
  if (a2[2] <= 0)
  {
    next_out = a5->next_out;
  }
  else
  {
    long long v8 = (Bytef *)[a2 byteRefAtIndex:a3];
    LODWORD(next_out) = v8;
    a5->next_out = v8;
  }
  a5->avail_out = a4;
  next_in = a5->next_in;
  int v12 = inflate(a5, 2) + 2;
  uint64_t result = 0;
  uint64_t v13 = 17;
  switch(v12)
  {
    case 0:
      return result;
    case 2:
      goto LABEL_9;
    case 3:
      uint64_t v13 = 16;
      goto LABEL_8;
    case 4:
LABEL_8:
      *(unsigned char *)(a1 + v13) = 1;
LABEL_9:
      uint64_t result = (LODWORD(a5->next_out) - next_out);
      *(_DWORD *)(a1 + 12) += LODWORD(a5->next_in) - next_in;
      break;
    default:
      objc_exception_throw(objc_alloc_init(JavaUtilZipDataFormatException));
  }
  return result;
}

void sub_100278CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100278CC0(z_stream *a1)
{
  uint64_t result = inflateReset(a1);
  if (result) {
    objc_exception_throw(objc_alloc_init(JavaLangIllegalArgumentException));
  }
  return result;
}

void sub_100278D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100278E04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100278E18(void *a1, int a2, uInt a3, z_stream *a4)
{
  uint64_t result = inflateSetDictionary(a4, (const Bytef *)[a1 byteRefAtIndex:a2], a3);
  if (result) {
    objc_exception_throw(objc_alloc_init(JavaLangIllegalArgumentException));
  }
  return result;
}

void sub_100278EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100278F94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100278FA8(uint64_t a1, void *a2, int a3, int a4, uint64_t a5)
{
  size_t v10 = a4;
  long long v11 = malloc_type_malloc(a4, 0x1217A55FuLL);
  if (!v11) {
    objc_exception_throw(objc_alloc_init(JavaLangOutOfMemoryError));
  }
  int v12 = v11;
  uint64_t v13 = *(void **)(a1 + 32);
  if (v13) {
    free(v13);
  }
  *(void *)(a1 + 32) = v12;
  *(void *)a5 = v12;
  *(_DWORD *)(a5 + 8) = a4;
  if (a4 >= 1)
  {
    id v14 = [a2 byteRefAtIndex:a3];
    memcpy(v12, v14, v10);
  }
}

void sub_100279100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100279114(void *a1, void *a2, off_t a3, uint64_t a4, uint64_t a5)
{
  size_t v10 = [[JavaIoFileInputStream alloc] initWithJavaIoFileDescriptor:a2];
  lseek((int)[a2 getInt$], a3, 0);
  long long v11 = +[IOSByteArray arrayWithLength:(int)a4];
  if ([(JavaIoFileInputStream *)v10 readWithByteArray:v11 withInt:0 withInt:a4] < 0)objc_exception_throw(objc_alloc_init(JavaIoIOException)); {
  [a1 setInputImplWithByteArray:v11 withInt:0 withInt:a4 withLong:a5];
  }
  [(JavaIoFileInputStream *)v10 close];

  return a4;
}

JavaUtilZipInflater *new_JavaUtilZipInflater_initWithBoolean_(int a1)
{
  size_t v2 = [JavaUtilZipInflater alloc];
  JavaUtilZipInflater_initWithBoolean_((uint64_t)v2, a1);
  return v2;
}

uint64_t sub_1002794CC(unint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    long long v8 = JavaLangIllegalArgumentException;
    goto LABEL_12;
  }
  int v4 = JavaLangThread_currentThread();
  size_t v5 = v4;
  if (v4->interrupted_)
  {
    v4->interrupted_ = 0;
LABEL_11:
    long long v8 = JavaLangInterruptedException;
    goto LABEL_12;
  }
  if (v4->blocker_) {
    sub_1002796B0();
  }
  v4->blocker_ = (id)a1;
  uint64_t result = j2objc_sync_wait(a1, a2);
  v5->blocker_ = 0;
  BOOL interrupted = v5->interrupted_;
  v5->interrupted_ = 0;
  if (interrupted) {
    goto LABEL_11;
  }
  if (result != -2 && result)
  {
    if (result != -1)
    {
      long long v9 = [[JavaLangInternalError alloc] initWithNSString:+[NSString stringWithFormat:@"system error %d", result]];
LABEL_13:
      objc_exception_throw(v9);
    }
    long long v8 = JavaLangIllegalMonitorStateException;
LABEL_12:
    long long v9 = (JavaLangInternalError *)objc_alloc_init(v8);
    goto LABEL_13;
  }
  return result;
}

uint64_t NSObject_class_()
{
  if (qword_100562758 != -1) {
    dispatch_once(&qword_100562758, &stru_100478568);
  }
  return qword_100562750;
}

void sub_100279684(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562750 = IOSClass_fromClass(v1);
}

void sub_1002796B0()
{
  __assert_rtn("doWait", "NSObject+JavaObject.m", 124, "javaThread->blocker_ == nil");
}

void sub_100279BC8(void *a1)
{
}

id sub_100279BD8(uint64_t a1, void *a2)
{
  int v3 = *(void **)(a1 + 136);
  if (!v3) {
LABEL_15:
  }
    JreThrowNullPointerException();
  unsigned int v5 = [v3 size];
  if ((int)(v5 - 1) < 0) {
    return 0;
  }
  LODWORD(v6) = v5;
  while (1)
  {
    uint64_t v6 = (v6 - 1);
    id v7 = [*(id *)(a1 + 136) getWithInt:v6];
    long long v8 = v7;
    if (!a2) {
      break;
    }
    if (!v7) {
      goto LABEL_15;
    }
    if (objc_msgSend(a2, "isEqual:", objc_msgSend(v7, "getKey"))) {
      goto LABEL_12;
    }
LABEL_10:
    if ((int)v6 < 1) {
      return 0;
    }
  }
  if (!v7) {
    goto LABEL_15;
  }
  if ([v7 getKey]) {
    goto LABEL_10;
  }
LABEL_12:
  return [v8 getValue];
}

uint64_t sub_100279E48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaLangLong_parseLongWithNSString_(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_100279E74(void *a1)
{
}

id sub_100279F7C(uint64_t a1, void *a2, void *a3)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  int v3 = *(void **)(a1 + 136);
  if (!v3) {
LABEL_14:
  }
    JreThrowNullPointerException();
  id v7 = [*(id *)(a1 + 136) countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v3);
        }
        uint64_t v11 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        if (!v11) {
          goto LABEL_14;
        }
        if (*(void **)(v11 + 8) == a2)
        {
          [*(id *)(a1 + 136) removeWithId:(void)v13];
          return objc_msgSend(*(id *)(a1 + 136), "addWithId:", sub_10027B5D4(a2, a3));
        }
      }
      id v8 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
  return objc_msgSend(*(id *)(a1 + 136), "addWithId:", sub_10027B5D4(a2, a3));
}

id sub_10027A134(uint64_t a1, void *a2, void *a3)
{
  int v3 = *(void **)(a1 + 136);
  if (!v3) {
    JreThrowNullPointerException();
  }
  int v4 = sub_10027B5D4(a2, a3);
  return [v3 addWithId:v4];
}

id sub_10027A298(uint64_t a1, uint64_t a2)
{
  size_t v2 = *(void **)(a1 + 136);
  if (!v2 || (id v4 = [v2 iterator]) == 0) {
LABEL_11:
  }
    JreThrowNullPointerException();
  unsigned int v5 = v4;
  while (1)
  {
    id result = [v5 hasNext];
    if ((result & 1) == 0) {
      return result;
    }
    id v7 = [v5 next];
    if (!v7) {
      goto LABEL_11;
    }
    if (v7[1] == a2)
    {
      return [v5 remove];
    }
  }
}

void sub_10027A400(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 72) == -1)
  {
    size_t v2 = *(void **)(a1 + 152);
    if (v2) {
      objc_exception_throw(v2);
    }
    [(id)a1 connect];
    id v4 = +[NSMutableURLRequest requestWithURL:](NSMutableURLRequest, "requestWithURL:", +[NSURL URLWithString:](NSURL, "URLWithString:", [*(id *)(a1 + 8) toExternalForm]));
    [(NSMutableURLRequest *)v4 setHTTPShouldHandleCookies:0];
    [(NSMutableURLRequest *)v4 setHTTPMethod:*(void *)(a1 + 64)];
    [(NSMutableURLRequest *)v4 setCachePolicy:*(unsigned char *)(a1 + 32) == 0];
    int v5 = [(id)a1 getReadTimeout];
    if (v5 < 1) {
      double v6 = 1.79769313e308;
    }
    else {
      double v6 = (double)v5 / 1000.0;
    }
    [(NSMutableURLRequest *)v4 setTimeoutInterval:v6];
    int v7 = [*(id *)(a1 + 136) size];
    if (v7 >= 1)
    {
      int v8 = v7;
      uint64_t v9 = 0;
      do
      {
        size_t v10 = [*(id *)(a1 + 136) getWithInt:v9];
        if (v10[1]) {
          -[NSMutableURLRequest setValue:forHTTPHeaderField:](v4, "setValue:forHTTPHeaderField:", [v10 getValue], v10[1]);
        }
        uint64_t v9 = (v9 + 1);
      }
      while (v8 != v9);
    }
    if (*(unsigned char *)(a1 + 34))
    {
      if ([*(id *)(a1 + 64) isEqualToString:@"GET"])
      {
        *(void *)(a1 + 64) = @"POST";
      }
      else if (([*(id *)(a1 + 64) isEqualToString:@"POST"] & 1) == 0 {
             && ([*(id *)(a1 + 64) isEqualToString:@"PUT"] & 1) == 0
      }
             && ([*(id *)(a1 + 64) isEqualToString:@"PATCH"] & 1) == 0)
      {
        uint64_t v32 = [[JavaNetProtocolException alloc] initWithNSString:+[NSString stringWithFormat:@"%@ does not support writing", *(void *)(a1 + 64)]];
        *(void *)(a1 + 152) = v32;
        objc_exception_throw(v32);
      }
      uint64_t v11 = *(void **)(a1 + 112);
      if (v11) {
        -[NSMutableURLRequest setHTTPBody:](v4, "setHTTPBody:", [v11 data]);
      }
    }
    uint64_t v50 = 0;
    unsigned int v51 = &v50;
    uint64_t v52 = 0x3052000000;
    uint64_t v53 = sub_10027B534;
    uint64_t v54 = sub_10027B544;
    uint64_t v55 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = &v44;
    uint64_t v46 = 0x3052000000;
    uint64_t v47 = sub_10027B534;
    uint64_t v48 = sub_10027B544;
    uint64_t v49 = 0;
    uint64_t v38 = 0;
    int v39 = &v38;
    uint64_t v40 = 0x3052000000;
    uint64_t v41 = sub_10027B534;
    uint64_t v42 = sub_10027B544;
    uint64_t v43 = 0;
    int v12 = dispatch_semaphore_create(0);
    long long v13 = +[NSURLSession sessionWithConfiguration:delegate:delegateQueue:](NSURLSession, "sessionWithConfiguration:delegate:delegateQueue:", +[NSURLSessionConfiguration defaultSessionConfiguration], a1, 0);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_10027B550;
    v37[3] = &unk_100478F60;
    v37[6] = &v44;
    v37[7] = &v38;
    v37[4] = v12;
    v37[5] = &v50;
    [(NSURLSessionDataTask *)[(NSURLSession *)v13 dataTaskWithRequest:v4 completionHandler:v37] resume];
    dispatch_semaphore_wait(v12, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v12);
    [(NSURLSession *)v13 finishTasksAndInvalidate];
    id v14 = (id)v51[5];
    id v15 = (id)v45[5];
    id v16 = (id)v39[5];
    if (!v45[5]) {
      goto LABEL_23;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      int v29 = [JavaLangAssertionError alloc];
      uint64_t v30 = (objc_class *)objc_opt_class();
      int v31 = [(JavaLangError *)v29 initWithNSString:+[NSString stringWithFormat:@"Unknown class %@", NSStringFromClass(v30)]];
      objc_exception_throw(v31);
    }
    uint64_t v17 = (void *)v45[5];
    if (v17)
    {
      unsigned int v18 = [(id)v45[5] statusCode];
    }
    else
    {
LABEL_23:
      unsigned int v18 = [(id)v51[5] code];
      uint64_t v17 = 0;
    }
    *(_DWORD *)(a1 + 72) = v18;
    id v19 = sub_10027ACA0(*(_DWORD *)(a1 + 72));
    JreStrongAssign((id *)(a1 + 80), v19);
    id v20 = v39;
    uint64_t v21 = (void *)v39[5];
    if (v21)
    {
      LODWORD(v21) = [v21 length];
      id v20 = v39;
    }
    *(_DWORD *)(a1 + 144) = v21;
    if (v20[5])
    {
      id v22 = [NSDataInputStream alloc];
      CFStringRef v23 = [(NSDataInputStream *)v22 initWithData:v39[5]];
      uint64_t v24 = &OBJC_IVAR___ComGoogleJ2objcNetIosHttpURLConnection_errorDataStream_;
      if (!v51[5] && (uint64_t)[v17 statusCode] <= 399) {
        uint64_t v24 = &OBJC_IVAR___ComGoogleJ2objcNetIosHttpURLConnection_responseDataStream_;
      }
      JreStrongAssign((id *)(a1 + *v24), v23);
    }
    id v25 = [*(id *)(a1 + 8) description];
    uint64_t v26 = (void *)v51[5];
    if (v26)
    {
      if (objc_msgSend(objc_msgSend(v26, "domain"), "isEqualToString:", @"NSURLErrorDomain"))
      {
        id v27 = [(id)v51[5] code];
        uint64_t v28 = off_1003F0EF8;
        switch((unint64_t)v27)
        {
          case 0xFFFFFFFFFFFFFC0FLL:
          case 0xFFFFFFFFFFFFFC14:
            goto LABEL_41;
          case 0xFFFFFFFFFFFFFC10:
          case 0xFFFFFFFFFFFFFC11:
          case 0xFFFFFFFFFFFFFC12:
          case 0xFFFFFFFFFFFFFC13:
          case 0xFFFFFFFFFFFFFC16:
            break;
          case 0xFFFFFFFFFFFFFC15:
            uint64_t v28 = off_1003F0F08;
            goto LABEL_43;
          case 0xFFFFFFFFFFFFFC17:
            uint64_t v28 = off_1003F0F00;
            goto LABEL_43;
          case 0xFFFFFFFFFFFFFC18:
LABEL_43:
            int v33 = (JavaNetConnectException *)objc_alloc(*v28);
            goto LABEL_44;
          default:
            if (v27 != (id)-1200) {
              break;
            }
LABEL_41:
            int v33 = [JavaNetConnectException alloc];
            id v25 = [(id)v51[5] description];
LABEL_44:
            *(void *)(a1 + 152) = [(JavaNetConnectException *)v33 initWithNSString:v25];
            break;
        }
      }
      uint64_t v34 = *(JavaIoIOException **)(a1 + 152);
      if (!v34)
      {
        uint64_t v35 = [JavaIoIOException alloc];
        uint64_t v34 = -[JavaIoIOException initWithNSString:](v35, "initWithNSString:", [(id)v51[5] description]);
        *(void *)(a1 + 152) = v34;
      }
      objc_exception_throw(v34);
    }
    [*(id *)(a1 + 136) clear];
    JreStrongAssign((id *)(a1 + 8), -[JavaNetURL initWithNSString:]([JavaNetURL alloc], "initWithNSString:", objc_msgSend(objc_msgSend(v17, "URL"), "absoluteString")));
    [(id)a1 addHeaderWithNSString:0, +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"HTTP/1.1 %d %@", *(unsigned int *)(a1 + 72), *(void *)(a1 + 80)) withNSString];
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    _DWORD v36[2] = sub_10027B5C4;
    v36[3] = &unk_100478F88;
    v36[4] = a1;
    objc_msgSend(objc_msgSend(v17, "allHeaderFields"), "enumerateKeysAndObjectsUsingBlock:", v36);
    _Block_object_dispose(&v38, 8);
    _Block_object_dispose(&v44, 8);
    _Block_object_dispose(&v50, 8);
  }
}

void sub_10027AB78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 152), 8);
  _Unwind_Resume(a1);
}

id sub_10027ACA0(int a1)
{
  if ((atomic_load_explicit(ComGoogleJ2objcNetIosHttpURLConnection__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  size_t v2 = (void *)qword_100562760;
  if (!qword_100562760) {
    JreThrowNullPointerException();
  }
  int v3 = JavaLangInteger_valueOfWithInt_(a1);
  return [v2 getWithId:v3];
}

ComGoogleJ2objcNetIosHttpURLConnection *new_ComGoogleJ2objcNetIosHttpURLConnection_initWithJavaNetURL_(void *a1)
{
  size_t v2 = [ComGoogleJ2objcNetIosHttpURLConnection alloc];
  JavaNetHttpURLConnection_initWithJavaNetURL_((uint64_t)v2, a1);
  int v3 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)&v2->headers_, v3);
  return v2;
}

void sub_10027B534(uint64_t a1, uint64_t a2)
{
}

void sub_10027B544(uint64_t a1)
{
}

intptr_t sub_10027B550(void *a1, void *a2, void *a3, void *a4)
{
  *(void *)(*(void *)(a1[5] + 8) + 40) = a4;
  *(void *)(*(void *)(a1[6] + 8) + 40) = a3;
  *(void *)(*(void *)(a1[7] + 8) + 40) = a2;
  int v7 = a1[4];
  return dispatch_semaphore_signal(v7);
}

id sub_10027B5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) addHeaderWithNSString:a2 withNSString:a3];
}

ComGoogleJ2objcNetIosHttpURLConnection_HeaderEntry *sub_10027B5D4(void *a1, void *a2)
{
  id v4 = [ComGoogleJ2objcNetIosHttpURLConnection_HeaderEntry alloc];
  JreStrongAssign((id *)&v4->key_, a1);
  JreStrongAssign((id *)&v4->value_, a2);
  return v4;
}

JavaUtilLoggingLoggingPermission *new_JavaUtilLoggingLoggingPermission_initWithNSString_withNSString_()
{
  unsigned __int8 v0 = [JavaUtilLoggingLoggingPermission alloc];
  JavaSecurityBasicPermission_initWithNSString_withNSString_((uint64_t)v0);
  return v0;
}

__CFString *sub_10027BAC0(void *a1, __CFString *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  if ([(__CFString *)a2 hasPrefix:@"/"])
  {
    id v4 = a2;
  }
  else
  {
    if (!a1) {
      return a2;
    }
    id v5 = objc_msgSend(a1, "substring:endIndex:", 0, objc_msgSend(a1, "lastIndexOf:", 47) + 1);
    id v4 = (__CFString *)JreStrcat("$$", v6, v7, v8, v9, v10, v11, v12, v5);
  }
  return LibcoreNetUrlUrlUtils_canonicalizePathWithNSString_withBoolean_(v4, 1);
}

JavaNioCharsetUnmappableCharacterException *new_JavaNioCharsetUnmappableCharacterException_initWithInt_(unsigned int a1)
{
  size_t v2 = [JavaNioCharsetUnmappableCharacterException alloc];
  JavaNioCharsetCharacterCodingException_init(v2, v3);
  *(&v2->super.super.super.super.rawFrameCount + 1) = a1;
  return v2;
}

JavaNetPlainServerSocketImpl *new_JavaNetPlainServerSocketImpl_init()
{
  unsigned __int8 v0 = [JavaNetPlainServerSocketImpl alloc];
  JavaNetPlainSocketImpl_init((uint64_t)v0);
  return v0;
}

uint64_t JavaLangInteger_compareWithInt_withInt_(int a1, int a2)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 < a2) {
    return 0xFFFFFFFFLL;
  }
  else {
    return a1 != a2;
  }
}

void sub_10027C530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  CFStringRef v8 = JreStrcat("$$C", a2, a3, a4, a5, a6, a7, a8, @"Invalid int: \"");
  uint64_t v9 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v8);
  objc_exception_throw(v9);
}

double JavaLangInteger_decodeWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_24:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_24;
  }
LABEL_3:
  unsigned int v9 = [a1 length];
  if (!v9) {
    goto LABEL_25;
  }
  unsigned int v10 = [a1 charAtWithInt:0];
  unsigned int v11 = v10;
  if (v10 == 45)
  {
    if (v9 == 1) {
      goto LABEL_25;
    }
    uint64_t v12 = 1;
    unsigned int v10 = [a1 charAtWithInt:1];
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (v10 == 35)
  {
    uint64_t v12 = (v12 + 1);
  }
  else
  {
    if (v10 != 48)
    {
      int v14 = 10;
      goto LABEL_16;
    }
    if (v12 + 1 == v9)
    {
      int v13 = 0;
      goto LABEL_17;
    }
    if (([a1 charAtWithInt:(v12 + 1)] & 0xFFFFFFDF) != 0x58)
    {
      int v14 = 8;
      uint64_t v12 = (v12 + 1);
      goto LABEL_16;
    }
    uint64_t v12 = v12 | 2;
  }
  if (v12 == v9) {
LABEL_25:
  }
    sub_10027C530((uint64_t)a1, v2, v3, v4, v5, v6, v7, v8);
  int v14 = 16;
LABEL_16:
  int v13 = sub_10027CB10(a1, v12, v14, v11 == 45);
LABEL_17:
  JavaLangInteger_valueOfWithInt_(v13);
  return result;
}

void JavaLangInteger_getIntegerWithNSString_(void *a1)
{
  if (atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire))
  {
    if (!a1) {
      return;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      return;
    }
  }
  if ([a1 length])
  {
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)a1);
    if (PropertyWithNSString) {
      JavaLangInteger_decodeWithNSString_(PropertyWithNSString);
    }
  }
}

void JavaLangInteger_getIntegerWithNSString_withInt_(void *a1, int a2)
{
  if (atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire))
  {
    if (!a1) {
      goto LABEL_7;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      goto LABEL_7;
    }
  }
  if ([a1 length])
  {
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)a1);
    if (PropertyWithNSString)
    {
      JavaLangInteger_decodeWithNSString_(PropertyWithNSString);
      return;
    }
  }
LABEL_7:
  JavaLangInteger_valueOfWithInt_(a2);
}

uint64_t JavaLangInteger_getIntegerWithNSString_withJavaLangInteger_(void *a1, uint64_t a2)
{
  if (atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire))
  {
    if (!a1) {
      return a2;
    }
  }
  else
  {
    objc_opt_class();
    if (!a1) {
      return a2;
    }
  }
  if ([a1 length])
  {
    id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_((uint64_t)a1);
    if (PropertyWithNSString)
    {
      JavaLangInteger_decodeWithNSString_(PropertyWithNSString);
      return v5;
    }
  }
  return a2;
}

uint64_t JavaLangInteger_parseIntWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangInteger_parseIntWithNSString_withInt_(a1, 10, a3, a4, a5, a6, a7, a8);
}

uint64_t JavaLangInteger_parseIntWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if ((v8 - 37) <= 0xFFFFFFDC)
  {
    CFStringRef v20 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Invalid radix: ");
    uint64_t v21 = new_JavaLangNumberFormatException_initWithNSString_((uint64_t)v20);
    objc_exception_throw(v21);
  }
  if (!a1) {
    sub_10027C530(0, a2, a3, a4, a5, a6, a7, a8);
  }
  unsigned int v17 = [a1 length];
  if (!v17) {
    goto LABEL_12;
  }
  unsigned int v18 = [a1 charAtWithInt:0];
  uint64_t v10 = 0;
  if (v18 != 45) {
    goto LABEL_9;
  }
  if (v17 == 1) {
LABEL_12:
  }
    sub_10027C530((uint64_t)a1, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v10 = 1;
LABEL_9:
  return sub_10027CB10(a1, v10, v8, v18 == 45);
}

uint64_t sub_10027CB10(void *a1, uint64_t a2, int a3, char a4)
{
  if (atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_15:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_15;
  }
LABEL_3:
  int v8 = [a1 length];
  uint64_t v16 = 0;
  if ((int)a2 <= v8) {
    int v17 = v8;
  }
  else {
    int v17 = a2;
  }
  while (v17 != a2)
  {
    int v18 = JavaLangCharacter_digitWithChar_withInt_((UChar32)[a1 charAtWithInt:a2], a3);
    if (v18 != -1 && (int)0x80000000 / a3 <= (int)v16)
    {
      a2 = (a2 + 1);
      BOOL v19 = (int)v16 * a3 - v18 <= (int)v16;
      uint64_t v16 = (v16 * a3 - v18);
      if (v19) {
        continue;
      }
    }
    goto LABEL_16;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = -(int)v16;
    if ((int)v16 < 0) {
LABEL_16:
    }
      sub_10027C530((uint64_t)a1, v9, v10, v11, v12, v13, v14, v15);
  }
  return v16;
}

NSString *JavaLangInteger_toBinaryStringWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_intToBinaryStringWithInt_(a1);
}

NSString *JavaLangInteger_toHexStringWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_intToHexStringWithInt_withBoolean_withInt_(a1, 0, 0);
}

NSString *JavaLangInteger_toOctalStringWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_intToOctalStringWithInt_(a1);
}

NSString *JavaLangInteger_toStringWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_intToStringWithInt_(a1);
}

NSString *JavaLangInteger_toStringWithInt_withInt_(unsigned int a1, int a2)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangIntegralToString_intToStringWithInt_withInt_(a1, a2);
}

JavaLangInteger *JavaLangInteger_valueOfWithNSString_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v9 = JavaLangInteger_parseIntWithNSString_(a1, a2, a3, a4, a5, a6, a7, a8);
  return JavaLangInteger_valueOfWithInt_(v9);
}

JavaLangInteger *JavaLangInteger_valueOfWithNSString_withInt_(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v10 = JavaLangInteger_parseIntWithNSString_withInt_(a1, a2, a3, a4, a5, a6, a7, a8);
  return JavaLangInteger_valueOfWithInt_(v10);
}

uint64_t JavaLangInteger_highestOneBitWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v2 = a1 | (a1 >> 1) | ((a1 | (a1 >> 1)) >> 2);
  int v3 = v2 | (v2 >> 4) | ((v2 | (v2 >> 4)) >> 8);
  return (v3 | (v3 >> 16)) - ((v3 | (v3 >> 16)) >> 1);
}

uint64_t JavaLangInteger_numberOfLeadingZerosWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = a1 << 16;
  if (a1 < 0x10000)
  {
    int v3 = 17;
  }
  else
  {
    unsigned int v2 = a1;
    int v3 = 1;
  }
  unsigned int v4 = HIBYTE(v2);
  if (!HIBYTE(v2)) {
    v2 <<= 8;
  }
  if (!v4) {
    v3 |= 8u;
  }
  unsigned int v5 = v2 >> 28;
  if (!(v2 >> 28)) {
    v2 *= 16;
  }
  if (!v5) {
    v3 |= 4u;
  }
  unsigned int v6 = v2 >> 30;
  if (!(v2 >> 30)) {
    v2 *= 4;
  }
  if (!v6) {
    v3 |= 2u;
  }
  unsigned int v7 = v3 + ((int)v2 >> 31);
  if (a1 <= 0) {
    return ~(a1 >> 26) & 0x20;
  }
  else {
    return v7;
  }
}

uint64_t JavaLangInteger_numberOfTrailingZerosWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100562768) {
    JreThrowNullPointerException();
  }
  unint64_t v2 = (unint64_t)(72416175 * (-a1 & a1)) >> 26;
  uint64_t v3 = *(unsigned int *)(qword_100562768 + 8);
  if ((int)v2 >= (int)v3) {
    IOSArray_throwOutOfBoundsWithMsg(v3, v2);
  }
  return *(char *)(qword_100562768 + 12 + v2);
}

uint64_t JavaLangInteger_bitCountWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v2 = ((((a1 - ((a1 >> 1) & 0x55555555)) >> 2) & 0x33333333)
      + ((a1 - ((a1 >> 1) & 0x55555555)) & 0x33333333)
      + (((((a1 - ((a1 >> 1) & 0x55555555)) >> 2) & 0x33333333) + ((a1 - ((a1 >> 1) & 0x55555555)) & 0x33333333)) >> 4)) & 0xF0F0F0F;
  return (v2 + (v2 >> 8) + ((v2 + (v2 >> 8)) >> 16)) & 0x3F;
}

uint64_t JavaLangInteger_rotateLeftWithInt_withInt_(int a1, char a2)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return __ROR4__(a1, -a2);
}

uint64_t JavaLangInteger_reverseBytesWithInt_(unsigned int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return bswap32(a1);
}

uint64_t JavaLangInteger_signumWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return (a1 >> 31) | (a1 > 0);
}

JavaLangInteger *JavaLangInteger_valueOfWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 == (char)a1)
  {
    if (!qword_100562770) {
      JreThrowNullPointerException();
    }
    uint64_t v4 = (a1 + 128);
    uint64_t v5 = *(unsigned int *)(qword_100562770 + 8);
    if ((int)v4 >= (int)v5) {
      IOSArray_throwOutOfBoundsWithMsg(v5, v4);
    }
    return *(JavaLangInteger **)(qword_100562770 + 24 + 8 * v4);
  }
  else
  {
    unsigned int v2 = [JavaLangInteger alloc];
    v2->value_ = a1;
    return v2;
  }
}

JavaLangInteger *new_JavaLangInteger_initWithInt_(int a1)
{
  double result = [JavaLangInteger alloc];
  result->value_ = a1;
  return result;
}

uint64_t JavaLangInteger_class_()
{
  if ((atomic_load_explicit(JavaLangInteger__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562780 != -1) {
    dispatch_once(&qword_100562780, &stru_10047A0E0);
  }
  return qword_100562778;
}

void sub_10027D69C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562778 = IOSClass_fromClass(v1);
}

JavaUtilConcurrentAtomicAtomicLong *new_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(unint64_t a1)
{
  double result = [JavaUtilConcurrentAtomicAtomicLong alloc];
  atomic_store(a1, (unint64_t *)&result->value_);
  return result;
}

JavaUtilConcurrentAtomicAtomicLong *new_JavaUtilConcurrentAtomicAtomicLong_init()
{
  return [JavaUtilConcurrentAtomicAtomicLong alloc];
}

JavaNioByteBufferAsShortBuffer *JavaNioByteBufferAsShortBuffer_asShortBufferWithJavaNioByteBuffer_(void *a1)
{
  if (!a1 || (unsigned int v2 = (uint64_t *)[a1 slice]) == 0) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, "orderWithJavaNioByteOrder:", objc_msgSend(a1, "order"));
  uint64_t v4 = [JavaNioByteBufferAsShortBuffer alloc];
  sub_10027DA04((uint64_t)v4, v3);
  return v4;
}

id sub_10027DA04(uint64_t a1, uint64_t *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  int v4 = [a2 capacity];
  if (v4 >= 0) {
    int v10 = v4;
  }
  else {
    int v10 = v4 + 1;
  }
  JavaNioShortBuffer_initWithInt_withLong_(a1, (v10 >> 1), a2[4], v5, v6, v7, v8, v9);
  JreStrongAssign((id *)(a1 + 40), a2);
  uint64_t v11 = *(void **)(a1 + 40);
  return [v11 clear];
}

id JavaNioShortArrayBuffer_initWithShortArray_(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaNioShortBuffer_initWithInt_withLong_(a1, a2[2], 0, a4, a5, a6, a7, a8);
  id result = JreStrongAssign((id *)(a1 + 40), a2);
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 52) = 0;
  return result;
}

JavaNioShortArrayBuffer *sub_10027E3B0(uint64_t a1, int a2, BOOL a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v5 = sub_10027E5D8((uint64_t)[(id)a1 capacity], *(void **)(a1 + 40), *(_DWORD *)(a1 + 48), a3);
  v5->super.super.limit_ = *(_DWORD *)(a1 + 12);
  v5->super.super.position_ = [(id)a1 position];
  v5->super.super.mark_ = a2;
  return v5;
}

JavaNioShortArrayBuffer *sub_10027E5D8(uint64_t a1, void *a2, int a3, BOOL a4)
{
  uint64_t v8 = [JavaNioShortArrayBuffer alloc];
  JavaNioShortBuffer_initWithInt_withLong_((uint64_t)v8, a1, 0, v9, v10, v11, v12, v13);
  JreStrongAssign((id *)&v8->backingArray_, a2);
  v8->arrayOffset_ = a3;
  v8->isReadOnly_ = a4;
  return v8;
}

JavaNioShortArrayBuffer *new_JavaNioShortArrayBuffer_initWithShortArray_(unsigned int *a1)
{
  unsigned int v2 = [JavaNioShortArrayBuffer alloc];
  JavaNioShortArrayBuffer_initWithShortArray_((uint64_t)v2, a1, v3, v4, v5, v6, v7, v8);
  return v2;
}

JavaNioDoubleArrayBuffer *JavaNioDoubleBuffer_allocateWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 & 0x80000000) != 0)
  {
    CFStringRef v10 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    uint64_t v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v10);
    objc_exception_throw(v11);
  }
  uint64_t v8 = new_JavaNioDoubleArrayBuffer_initWithDoubleArray_((unsigned int *)+[IOSDoubleArray arrayWithLength:a1]);
  return v8;
}

JavaNioDoubleArrayBuffer *JavaNioDoubleBuffer_wrapWithDoubleArray_withInt_withInt_(unsigned int *a1, int a2, int a3)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(a1[2], a2, a3);
  id result = new_JavaNioDoubleArrayBuffer_initWithDoubleArray_(a1);
  result->super.super.position_ = a2;
  result->super.super.limit_ = a3 + a2;
  return result;
}

uint64_t JavaNioDoubleBuffer_initWithInt_withLong_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaNioBuffer_initWithInt_withInt_withLong_(a1, 3, a2, a3, a5, a6, a7, a8);
}

void sub_10027F6D8(id a1)
{
  qword_100562788 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangSafeVarargs);
}

NSString *Java_java_lang_IntegralToString_intToString__II(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  if (a4 == 10 || (a4 - 37) <= 0xFFFFFFDC)
  {
    return IntegralToString_convertInt(0, a3);
  }
  else
  {
    __chkstk_darwin();
    uint64_t v9 = (char *)&v13 - v8;
    int v10 = v6;
    do
    {
      *(_WORD *)&v9[2 * --v10] = a0123456789abcd_0[v7 / v5 * v5 - v7];
      v7 /= v5;
    }
    while (v7);
    if (v4 < 0)
    {
      uint64_t v11 = --v10;
      *(_WORD *)&v9[2 * v10] = 45;
    }
    else
    {
      uint64_t v11 = v10;
    }
    return +[NSString stringWithCharacters:&v9[2 * v11] length:v6 - v10];
  }
}

NSString *IntegralToString_convertInt(uint64_t a1, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0)
  {
    uint64_t v7 = -a2;
    if ((int)v7 > 99)
    {
LABEL_20:
      __chkstk_darwin();
      int v15 = 11;
      if (v14 < 0x10000)
      {
        if (!v14) {
          goto LABEL_26;
        }
      }
      else
      {
        unsigned int v16 = v14;
        do
        {
          unsigned int v14 = v16 / 0x64;
          unsigned int v17 = v16 % 0x64;
          v20[v15 - 1] = a0123456789abcd_0[v17 + 36];
          v15 -= 2;
          v20[v15] = a0123456789abcd_0[v17 + 136];
          unsigned int v16 = v14;
        }
        while (HIWORD(v14));
      }
      do
      {
        v20[--v15] = a0123456789abcd_0[v14 - 10 * ((52429 * v14) >> 19)];
        BOOL v18 = v14 > 9;
        unsigned int v14 = (52429 * v14) >> 19;
      }
      while (v18);
LABEL_26:
      if ((a2 & 0x80000000) != 0)
      {
        v20[--v15] = 45;
        if (a1) {
          goto LABEL_28;
        }
      }
      else if (a1)
      {
LABEL_28:
        JreStringBuilder_appendBuffer(a1, &v20[v15], 11 - v15);
        return 0;
      }
      return +[NSString stringWithCharacters:&v20[v15] length:11 - v15];
    }
    if ((v7 & 0x80000000) != 0)
    {
      CFStringRef v4 = @"-2147483648";
      goto LABEL_18;
    }
    CFStringRef v4 = (const __CFString *)qword_100562798[v7];
    if (v4) {
      goto LABEL_18;
    }
    if (v7 > 9)
    {
      __int16 v12 = a0123456789abcd_0[v7 + 136];
      __int16 v13 = a0123456789abcd_0[v7 + 36];
      __int16 v21 = 45;
      __int16 v22 = v12;
      __int16 v23 = v13;
      id v9 = objc_alloc((Class)NSString);
      uint64_t v10 = 3;
    }
    else
    {
      __int16 v8 = a0123456789abcd_0[v7 + 36];
      __int16 v21 = 45;
      __int16 v22 = v8;
      id v9 = objc_alloc((Class)NSString);
      uint64_t v10 = 2;
    }
    CFStringRef v4 = (const __CFString *)[v9 initWithCharacters:&v21 length:v10];
    qword_100562798[v7] = v4;
  }
  else
  {
    if (a2 > 0x63) {
      goto LABEL_20;
    }
    CFStringRef v4 = (const __CFString *)qword_100562AB8[a2];
    if (v4) {
      goto LABEL_18;
    }
    if (a2 > 9)
    {
      __int16 v11 = a0123456789abcd_0[a2 + 36];
      __int16 v21 = a0123456789abcd_0[a2 + 136];
      __int16 v22 = v11;
      id v5 = objc_alloc((Class)NSString);
      uint64_t v6 = 2;
    }
    else
    {
      __int16 v21 = a0123456789abcd_0[a2 + 36];
      id v5 = objc_alloc((Class)NSString);
      uint64_t v6 = 1;
    }
    CFStringRef v4 = (const __CFString *)[v5 initWithCharacters:&v21 length:v6];
    qword_100562AB8[a2] = v4;
  }
  if (!v4) {
    goto LABEL_20;
  }
LABEL_18:
  if (a1)
  {
    JreStringBuilder_appendString(a1, v4);
    return 0;
  }
  return (NSString *)v4;
}

CFStringRef Java_java_lang_IntegralToString_longToString__JI(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a3 == (int)a3)
  {
    return (const __CFString *)JavaLangIntegralToString_intToStringWithInt_withInt_(a3, a4);
  }
  else if (a4 == 10 || (a4 - 37) <= 0xFFFFFFDC)
  {
    return IntegralToString_convertLong(0, a3);
  }
  else
  {
    __chkstk_darwin();
    uint64_t v10 = (char *)&v13 - v9;
    int v11 = v7;
    do
    {
      *(_WORD *)&v10[2 * --v11] = a0123456789abcd_0[(int)(v8 / v6 * v6 - v8)];
      v8 /= (uint64_t)v6;
    }
    while (v8);
    if (v5 < 0)
    {
      uint64_t v12 = --v11;
      *(_WORD *)&v10[2 * v11] = 45;
    }
    else
    {
      uint64_t v12 = v11;
    }
    return (const __CFString *)+[NSString stringWithCharacters:&v10[2 * v12] length:v7 - v11];
  }
}

CFStringRef IntegralToString_convertLong(uint64_t a1, uint64_t a2)
{
  if (a2 != (int)a2)
  {
    unint64_t v5 = a2;
    if (a2 < 0)
    {
      unint64_t v5 = -a2;
      if (a2 > 0)
      {
        if (!a1) {
          return @"-9223372036854775808";
        }
        JreStringBuilder_appendString(a1, @"-9223372036854775808");
        return 0;
      }
    }
    __chkstk_darwin();
    int v6 = sub_10027FF24((uint64_t)v13, 20, v5 % 0x3B9ACA00);
    if (v6 != 11)
    {
      int v7 = v6 - 1;
      do
        v13[v7--] = 48;
      while (v7 != 10);
    }
    unint64_t v8 = 0x8E47CE423A2E9C6DLL * ((v5 - v5 % 0x3B9ACA00) >> 9);
    if (HIDWORD(v8))
    {
      int v10 = byte_100320B9C[(unint64_t)(-1015176667 * ((v5 - v5 % 0x3B9ACA00) >> 9)
                                            + ((976133229 * ((v5 - v5 % 0x3B9ACA00) >> 9)) >> 1)
                                            + ((976133229 * ((v5 - v5 % 0x3B9ACA00) >> 9)) >> 3)) >> 28]
          - (((0x8E47CE423A2E9C6DLL * ((v5 - v5 % 0x3B9ACA00) >> 9)) >> 30) & 0xFFFFFFFC);
      int v11 = v10 + (v10 < 0 ? 0xA : 0);
      v13[10] = a0123456789abcd_0[v11];
      LODWORD(v8) = -858993459 * ((v8 - v11) >> 1);
      uint64_t v9 = 10;
    }
    else
    {
      uint64_t v9 = 11;
    }
    int v12 = sub_10027FF24((uint64_t)v13, v9, v8);
    if (a2 < 0)
    {
      v13[--v12] = 45;
      if (a1) {
        goto LABEL_15;
      }
    }
    else if (a1)
    {
LABEL_15:
      JreStringBuilder_appendBuffer(a1, &v13[v12], 20 - v12);
      return 0;
    }
    return (const __CFString *)+[NSString stringWithCharacters:&v13[v12] length:20 - v12];
  }
  return (const __CFString *)IntegralToString_convertInt(a1, a2);
}

uint64_t sub_10027FF24(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (a3 >= 0x10000)
  {
    unsigned int v3 = a3;
    do
    {
      a3 = v3 / 0x64;
      unsigned int v4 = v3 % 0x64;
      *(_WORD *)(a1 + 2 * ((int)a2 - 1)) = a0123456789abcd_0[v4 + 36];
      LODWORD(a2) = a2 - 2;
      *(_WORD *)(a1 + 2 * (int)a2) = a0123456789abcd_0[v4 + 136];
      unsigned int v3 = a3;
    }
    while (HIWORD(a3));
  }
  else if (!a3)
  {
    return a2;
  }
  do
  {
    a2 = (a2 - 1);
    *(_WORD *)(a1 + 2 * (int)a2) = a0123456789abcd_0[a3 - 10 * ((52429 * a3) >> 19)];
    BOOL v5 = a3 > 9;
    a3 = (52429 * a3) >> 19;
  }
  while (v5);
  return a2;
}

NSString *Java_java_lang_IntegralToString_intToBinaryString(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = 0;
  BOOL v5 = &v8;
  do
  {
    *((_WORD *)v5 - 1) = a0123456789abcd_0[a3 & 1];
    BOOL v5 = (uint64_t *)((char *)v5 - 2);
    v4 += (uint64_t)&_mh_execute_header;
    BOOL v6 = a3 > 1;
    a3 >>= 1;
  }
  while (v6);
  return +[NSString stringWithCharacters:v5 length:v4 >> 32];
}

NSString *Java_java_lang_IntegralToString_longToBinaryString(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 31)
  {
    __chkstk_darwin();
    BOOL v5 = &v8;
    uint64_t v6 = 0;
    do
    {
      *((_WORD *)v5 - 1) = a0123456789abcd_0[v4 & 1];
      BOOL v5 = (uint64_t *)((char *)v5 - 2);
      v6 += (uint64_t)&_mh_execute_header;
      BOOL v7 = v4 > 1;
      v4 >>= 1;
    }
    while (v7);
    return +[NSString stringWithCharacters:v5 length:v6 >> 32];
  }
  else
  {
    return JavaLangIntegralToString_intToBinaryStringWithInt_(a3);
  }
}

void *Java_java_lang_IntegralToString_appendByteAsHex(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4, int a5)
{
  if (!a3) {
    JreThrowNullPointerException();
  }
  if (a5) {
    BOOL v7 = L"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  }
  else {
    BOOL v7 = a0123456789abcd_0;
  }
  [a3 appendWithChar:(unsigned __int16)v7[a4 >> 4]];
  [a3 appendWithChar:(unsigned __int16)v7[a4 & 0xF]];
  return a3;
}

NSString *Java_java_lang_IntegralToString_byteToHexString(uint64_t a1, uint64_t a2, unsigned __int8 a3, int a4)
{
  unint64_t v4 = a0123456789abcd_0;
  if (a4) {
    unint64_t v4 = L"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  }
  v6[0] = v4[a3 >> 4];
  v6[1] = v4[a3 & 0xF];
  return +[NSString stringWithCharacters:v6 length:2];
}

NSString *Java_java_lang_IntegralToString_bytesToHexString()
{
  __chkstk_darwin();
  unint64_t v4 = (char *)&v9 - v3;
  if ((int)v2 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (unsigned __int8 *)(v0 + 12);
    do
    {
      unsigned int v7 = *v6++;
      *(_WORD *)&v4[2 * (int)v5] = *(_WORD *)(v1 + (((unint64_t)v7 >> 3) & 0x1E));
      *(_WORD *)&v4[2 * (int)v5 + 2] = *(_WORD *)(v1 + 2 * (v7 & 0xF));
      v5 += 2;
    }
    while (2 * v2 != v5);
  }
  return +[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:");
}

NSString *Java_java_lang_IntegralToString_intToHexString(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5)
{
  uint64_t v5 = a0123456789abcd_0;
  if (a4) {
    uint64_t v5 = L"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  }
  int v6 = 1;
  for (int i = 7; ; --i)
  {
    v9[i] = v5[a3 & 0xF];
    if (a3 <= 0xF) {
      break;
    }
    a3 >>= 4;
LABEL_8:
    ++v6;
  }
  if (v6 < a5)
  {
    a3 = 0;
    goto LABEL_8;
  }
  return +[NSString stringWithCharacters:&v9[i] length:v6];
}

NSString *Java_java_lang_IntegralToString_longToHexString(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 31)
  {
    __chkstk_darwin();
    uint64_t v5 = &v8;
    uint64_t v6 = 0;
    do
    {
      *((_WORD *)v5 - 1) = a0123456789abcd_0[v4 & 0xF];
      uint64_t v5 = (uint64_t *)((char *)v5 - 2);
      v6 += (uint64_t)&_mh_execute_header;
      BOOL v7 = v4 > 0xF;
      v4 >>= 4;
    }
    while (v7);
    return +[NSString stringWithCharacters:v5 length:v6 >> 32];
  }
  else
  {
    return JavaLangIntegralToString_intToHexStringWithInt_withBoolean_withInt_(a3, 0, 0);
  }
}

NSString *Java_java_lang_IntegralToString_intToOctalString(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = 0;
  uint64_t v5 = &v8;
  do
  {
    *((_WORD *)v5 - 1) = a0123456789abcd_0[a3 & 7];
    uint64_t v5 = (uint64_t *)((char *)v5 - 2);
    v4 += (uint64_t)&_mh_execute_header;
    BOOL v6 = a3 > 7;
    a3 >>= 3;
  }
  while (v6);
  return +[NSString stringWithCharacters:v5 length:v4 >> 32];
}

NSString *Java_java_lang_IntegralToString_longToOctalString(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 31)
  {
    __chkstk_darwin();
    uint64_t v5 = 0;
    BOOL v6 = &v8;
    do
    {
      *((_WORD *)v6 - 1) = a0123456789abcd_0[v4 & 7];
      BOOL v6 = (int *)((char *)v6 - 2);
      v5 += (uint64_t)&_mh_execute_header;
      BOOL v7 = v4 > 7;
      v4 >>= 3;
    }
    while (v7);
    return +[NSString stringWithCharacters:v6 length:v5 >> 32];
  }
  else
  {
    return JavaLangIntegralToString_intToOctalStringWithInt_(a3);
  }
}

id JavaNioChannelsSpiAbstractSelectableChannel_initWithJavaNioChannelsSpiSelectorProvider_(uint64_t a1, void *a2)
{
  JavaNioChannelsSelectableChannel_init();
  unint64_t v4 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 39), v4);
  JreStrongAssignAndConsume((id *)(a1 + 47), objc_alloc((Class)NSObject));
  *(unsigned char *)(a1 + 24) = 1;
  return JreStrongAssign((id *)(a1 + 31), a2);
}

void sub_1002807AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002807C8(uint64_t a1, id a2)
{
  objc_sync_enter((id)a1);
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  unint64_t v4 = *(void **)(a1 + 39);
  if (!v4) {
    JreThrowNullPointerException();
  }
  id v5 = [*(id *)(a1 + 39) countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v11;
LABEL_4:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v11 != v6) {
        objc_enumerationMutation(v4);
      }
      uint64_t v8 = *(void *)(*((void *)&v10 + 1) + 8 * v7);
      if (v8)
      {
        if (objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * v7), "selector", (void)v10) == a2) {
          break;
        }
      }
      if (v5 == (id)++v7)
      {
        id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v5) {
          goto LABEL_4;
        }
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    uint64_t v8 = 0;
  }
  objc_sync_exit((id)a1);
  return v8;
}

void sub_1002808F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100280AB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100280BE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100280D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100280E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100280EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaMathBitLevel_bitLengthWithJavaMathBigInteger_(uint64_t a1)
{
  if (!a1) {
    goto LABEL_10;
  }
  int v2 = *(_DWORD *)(a1 + 20);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
LABEL_10:
  }
    JreThrowNullPointerException();
  int v4 = *(_DWORD *)(a1 + 16);
  uint64_t v5 = *(unsigned int *)(v3 + 8);
  int v6 = v4 - 1;
  if (v4 - 1 < 0 || v6 >= (int)v5) {
    IOSArray_throwOutOfBoundsWithMsg(v5, v6);
  }
  int v7 = *(_DWORD *)(v3 + 12 + 4 * (v4 - 1));
  if (v2 < 0) {
    v7 -= [(id)a1 getFirstNonzeroDigit] == *(_DWORD *)(a1 + 16) - 1;
  }
  return 32 * v4 - JavaLangInteger_numberOfLeadingZerosWithInt_(v7);
}

void sub_100281044()
{
}

uint64_t JavaMathBitLevel_bitCountWithJavaMathBigInteger_(uint64_t a1)
{
  if (!a1) {
    goto LABEL_25;
  }
  if (!*(_DWORD *)(a1 + 20)) {
    return 0;
  }
  id v2 = [(id)a1 getFirstNonzeroDigit];
  uint64_t v3 = (uint64_t)v2;
  if (*(int *)(a1 + 20) >= 1)
  {
    if ((int)v2 < *(_DWORD *)(a1 + 16))
    {
      LODWORD(v4) = 0;
      uint64_t v5 = (int)v2;
      while (1)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        if (!v6) {
          break;
        }
        uint64_t v7 = *(unsigned int *)(v6 + 8);
        if (v5 < 0 || v5 >= (int)v7) {
          IOSArray_throwOutOfBoundsWithMsg(v7, v5);
        }
        uint64_t v4 = JavaLangInteger_bitCountWithInt_(*(_DWORD *)(v6 + 12 + 4 * v5++)) + v4;
        if (v5 >= *(int *)(a1 + 16)) {
          return v4;
        }
      }
LABEL_25:
      JreThrowNullPointerException();
    }
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (!v8) {
    goto LABEL_25;
  }
  uint64_t v9 = *(unsigned int *)(v8 + 8);
  if ((v3 & 0x80000000) != 0 || (int)v3 >= (int)v9) {
    IOSArray_throwOutOfBoundsWithMsg(v9, v3);
  }
  int v10 = JavaLangInteger_bitCountWithInt_(-*(_DWORD *)(v8 + 12 + 4 * (int)v3));
  LODWORD(v11) = *(_DWORD *)(a1 + 16);
  if ((int)v3 + 1 < (int)v11)
  {
    uint64_t v12 = (int)v3 + 1;
    do
    {
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = *(unsigned int *)(v13 + 8);
      if (v12 < 0 || v12 >= (int)v14) {
        IOSArray_throwOutOfBoundsWithMsg(v14, v12);
      }
      v10 += JavaLangInteger_bitCountWithInt_(~*(_DWORD *)(v13 + 12 + 4 * v12++));
      uint64_t v11 = *(int *)(a1 + 16);
    }
    while (v12 < v11);
  }
  return (32 * v11 - v10);
}

uint64_t JavaMathBitLevel_testBitWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if (!a1 || (uint64_t v2 = *(void *)(a1 + 8)) == 0) {
    JreThrowNullPointerException();
  }
  int v3 = a2 >> 5;
  uint64_t v4 = *(unsigned int *)(v2 + 8);
  if (a2 < 0 || v3 >= (int)v4) {
    IOSArray_throwOutOfBoundsWithMsg(v4, (a2 >> 5));
  }
  return (*(_DWORD *)(v2 + 12 + 4 * v3) >> a2) & 1;
}

BOOL JavaMathBitLevel_nonZeroDroppedBitsWithInt_withIntArray_(int a1, uint64_t a2)
{
  char v2 = a1;
  uint64_t v3 = (a1 >> 5);
  if (a1 < 32)
  {
    int v5 = 0;
  }
  else
  {
    if (!a2) {
      goto LABEL_18;
    }
    uint64_t v4 = 0;
    if ((int)v3 <= 1) {
      int v5 = 1;
    }
    else {
      int v5 = a1 >> 5;
    }
    while (1)
    {
      uint64_t v6 = *(unsigned int *)(a2 + 8);
      if ((int)v4 >= (int)v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v4);
      }
      if (*(_DWORD *)(a2 + 12 + 4 * v4)) {
        break;
      }
      if (v5 == ++v4) {
        goto LABEL_13;
      }
    }
    int v5 = v4;
  }
LABEL_13:
  if (v5 != v3) {
    return 1;
  }
  if (!a2) {
LABEL_18:
  }
    JreThrowNullPointerException();
  uint64_t v7 = *(unsigned int *)(a2 + 8);
  if ((int)v3 >= (int)v7) {
    IOSArray_throwOutOfBoundsWithMsg(v7, v3);
  }
  return *(_DWORD *)(a2 + 12 + 4 * (int)v3) << -v2 != 0;
}

JavaMathBigInteger *JavaMathBitLevel_shiftLeftWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v3 = (a2 >> 5);
  int v4 = *(_DWORD *)(a1 + 16);
  int v5 = a2 & 0x1F;
  if ((a2 & 0x1F) != 0) {
    int v6 = v3 + 1;
  }
  else {
    int v6 = a2 >> 5;
  }
  int v7 = v6 + v4;
  uint64_t v8 = +[IOSIntArray arrayWithLength:v6 + v4];
  JavaMathBitLevel_shiftLeftWithIntArray_withIntArray_withInt_withInt_(v8, *(unsigned int **)(a1 + 8), v3, v5);
  uint64_t v9 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(*(_DWORD *)(a1 + 20), v7, v8);
  [(JavaMathBigInteger *)v9 cutOffLeadingZeroes];
  return v9;
}

id JavaMathBitLevel_inplaceShiftLeftWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    JreThrowNullPointerException();
  }
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = *(unsigned int *)(v2 + 8);
  int v7 = v5 - 1;
  if (v5 - 1 < 0 || v7 >= (int)v6) {
    IOSArray_throwOutOfBoundsWithMsg(v6, (v5 - 1));
  }
  *(_DWORD *)(a1 + 16) += ((JavaLangInteger_numberOfLeadingZerosWithInt_(*(_DWORD *)(v2 + 12 + 4 * v7))
                          - (a2 & 0x1F)) >> 31)
                        + (a2 >> 5);
  JavaMathBitLevel_shiftLeftWithIntArray_withIntArray_withInt_withInt_(*(_DWORD **)(a1 + 8), *(unsigned int **)(a1 + 8), (a2 >> 5), a2 & 0x1F);
  [(id)a1 cutOffLeadingZeroes];
  return [(id)a1 unCache];
}

uint64_t JavaMathBitLevel_shiftLeftWithIntArray_withIntArray_withInt_withInt_(_DWORD *a1, unsigned int *a2, uint64_t a3, int a4)
{
  int v4 = a3;
  if (!a4)
  {
    if (a1)
    {
      int v17 = a3;
      uint64_t result = (uint64_t)JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a2, 0, a1, a3, (a1[2] - a3));
      int v4 = v17;
      goto LABEL_23;
    }
    goto LABEL_30;
  }
  if (!a1) {
    goto LABEL_30;
  }
  uint64_t result = a1[2];
  int v7 = result - 1;
  if ((int)result <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(result, v7);
  }
  a1[v7 + 3] = 0;
  int v8 = a1[2];
  if (v8 - 1 > (int)a3)
  {
    if (a2)
    {
      uint64_t v9 = v8 - 1;
      uint64_t v10 = (v8 - 2);
      do
      {
        uint64_t v11 = a2[2];
        int v12 = v10 - a3;
        uint64_t v13 = (int)v10 - (int)a3;
        if ((int)v10 - (int)a3 < 0 || v12 >= (int)v11) {
          IOSArray_throwOutOfBoundsWithMsg(v11, v12);
        }
        uint64_t v14 = a1[2];
        if (v9 < 0 || v9 >= (int)v14) {
          IOSArray_throwOutOfBoundsWithMsg(v14, (v10 + 1));
        }
        a1[v9 + 3] |= a2[v13 + 3] >> (-(char)a4 & 0x1F);
        uint64_t v15 = a2[2];
        if ((v13 & 0x80000000) != 0 || (int)v13 >= (int)v15) {
          IOSArray_throwOutOfBoundsWithMsg(v15, v13);
        }
        unsigned int v16 = a2[v13 + 3];
        uint64_t result = a1[2];
        if ((v10 & 0x80000000) != 0 || (int)v10 >= (int)result) {
          IOSArray_throwOutOfBoundsWithMsg(result, v10);
        }
        a1[(int)v10 + 3] = v16 << (a4 & 0x1F);
        --v9;
        uint64_t v10 = (v10 - 1);
      }
      while (v9 > (int)a3);
      goto LABEL_23;
    }
LABEL_30:
    JreThrowNullPointerException();
  }
LABEL_23:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; a1[i++ + 3] = 0)
    {
      uint64_t result = (int)a1[2];
      if (i >= result) {
        IOSArray_throwOutOfBoundsWithMsg(result, i);
      }
    }
  }
  return result;
}

void sub_100281868()
{
}

uint64_t JavaMathBitLevel_shiftLeftOneBitWithIntArray_withIntArray_withInt_(uint64_t result, uint64_t a2, int a3)
{
  if (a3 >= 1)
  {
    if (!a2) {
LABEL_16:
    }
      JreThrowNullPointerException();
    uint64_t v3 = result;
    uint64_t v4 = 0;
    unsigned int v5 = 0;
    do
    {
      uint64_t v6 = *(int *)(a2 + 8);
      if (v4 >= v6) {
        IOSArray_throwOutOfBoundsWithMsg(v6, v4);
      }
      if (!v3) {
        goto LABEL_16;
      }
      unsigned int v7 = *(_DWORD *)(a2 + 12 + 4 * v4);
      uint64_t result = *(int *)(v3 + 8);
      if (v4 >= result) {
        IOSArray_throwOutOfBoundsWithMsg(result, v4);
      }
      *(_DWORD *)(v3 + 12 + 4 * v4) = v5 | (2 * v7);
      unsigned int v5 = v7 >> 31;
      ++v4;
    }
    while (a3 != v4);
    if ((v7 & 0x80000000) != 0)
    {
      uint64_t result = *(unsigned int *)(v3 + 8);
      if (a3 < 0 || (int)result <= a3) {
        IOSArray_throwOutOfBoundsWithMsg(result, a3);
      }
      *(_DWORD *)(v3 + 12 + 4 * a3) = v5;
    }
  }
  return result;
}

JavaMathBigInteger *JavaMathBitLevel_shiftLeftOneBitWithJavaMathBigInteger_(uint64_t a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v3 = +[IOSIntArray arrayWithLength:v2 + 1];
  JavaMathBitLevel_shiftLeftOneBitWithIntArray_withIntArray_withInt_((uint64_t)v3, *(void *)(a1 + 8), v2);
  uint64_t v4 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(*(_DWORD *)(a1 + 20), v2 + 1, v3);
  [(JavaMathBigInteger *)v4 cutOffLeadingZeroes];
  return v4;
}

JavaMathBigInteger *JavaMathBitLevel_shiftRightWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if (!a1) {
    goto LABEL_40;
  }
  uint64_t v4 = (a2 >> 5);
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 - v4);
  if (v5 <= (int)v4)
  {
    int v13 = *(_DWORD *)(a1 + 20);
    if ((atomic_load_explicit(JavaMathBigInteger__initialized, memory_order_acquire) & 1) == 0) {
      objc_opt_class();
    }
    uint64_t v14 = &JavaMathBigInteger_MINUS_ONE_;
    if (v13 >= 0) {
      uint64_t v14 = &JavaMathBigInteger_ZERO_;
    }
    return (JavaMathBigInteger *)*v14;
  }
  else
  {
    int v7 = a2 & 0x1F;
    int v8 = +[IOSIntArray arrayWithLength:(int)v6 + 1];
    JavaMathBitLevel_shiftRightWithIntArray_withInt_withIntArray_withInt_withInt_((int *)v8, v6, *(int **)(a1 + 8), v4, a2 & 0x1F);
    if ((*(_DWORD *)(a1 + 20) & 0x80000000) != 0)
    {
      if (a2 >= 32)
      {
        uint64_t v9 = 0;
        if ((int)v4 <= 1) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v4;
        }
        while (1)
        {
          uint64_t v11 = *(void *)(a1 + 8);
          if (!v11) {
            break;
          }
          uint64_t v12 = *(unsigned int *)(v11 + 8);
          if ((int)v9 >= (int)v12) {
            IOSArray_throwOutOfBoundsWithMsg(v12, v9);
          }
          if (*(_DWORD *)(v11 + 12 + 4 * v9)) {
            goto LABEL_24;
          }
          if (v10 == ++v9) {
            goto LABEL_20;
          }
        }
LABEL_40:
        JreThrowNullPointerException();
      }
      uint64_t v10 = 0;
LABEL_20:
      if (v7)
      {
        uint64_t v16 = *(void *)(a1 + 8);
        if (!v16) {
          goto LABEL_40;
        }
        uint64_t v17 = *(unsigned int *)(v16 + 8);
        if ((int)v10 >= (int)v17) {
          IOSArray_throwOutOfBoundsWithMsg(v17, v10);
        }
        if (*(_DWORD *)(v16 + 12 + 4 * v10) << -(char)v7)
        {
LABEL_24:
          if ((int)v6 < 1)
          {
            LODWORD(v18) = 0;
          }
          else
          {
            uint64_t v18 = 0;
            while (1)
            {
              uint64_t size = v8->super.size_;
              if (v18 >= size) {
                IOSArray_throwOutOfBoundsWithMsg(size, v18);
              }
              if (*(&v8->super.size_ + v18 + 1) != -1) {
                break;
              }
              uint64_t v20 = v8->super.size_;
              if (v18 >= v20) {
                IOSArray_throwOutOfBoundsWithMsg(v20, v18);
              }
              *(&v8->super.size_ + ++v18) = 0;
              if (v6 == v18)
              {
                LODWORD(v18) = v6;
                break;
              }
            }
          }
          if (v18 == v6) {
            LODWORD(v6) = v6 + 1;
          }
          uint64_t v21 = v8->super.size_;
          if ((int)v18 >= (int)v21) {
            IOSArray_throwOutOfBoundsWithMsg(v21, v18);
          }
          ++*(&v8->super.size_ + v18 + 1);
        }
      }
    }
    uint64_t v15 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(*(_DWORD *)(a1 + 20), v6, v8);
    [(JavaMathBigInteger *)v15 cutOffLeadingZeroes];
  }
  return v15;
}

void sub_100281D1C()
{
}

id JavaMathBitLevel_inplaceShiftRightWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if (!a1) {
    goto LABEL_29;
  }
  id result = [(id)a1 signum];
  if (!a2) {
    return result;
  }
  int v5 = (int)result;
  id result = [(id)a1 signum];
  if (!result) {
    return result;
  }
  *(_DWORD *)(a1 + 16) -= a2 >> 5;
  if ((JavaMathBitLevel_shiftRightWithIntArray_withInt_withIntArray_withInt_withInt_(*(int **)(a1 + 8), *(unsigned int *)(a1 + 16), *(int **)(a1 + 8), (a2 >> 5), a2 & 0x1F) & 1) == 0&& v5 < 0)
  {
    int v6 = *(_DWORD *)(a1 + 16);
    if (v6 < 1)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          goto LABEL_29;
        }
        uint64_t v9 = *(unsigned int *)(v8 + 8);
        if ((int)v7 >= (int)v9) {
          IOSArray_throwOutOfBoundsWithMsg(v9, v7);
        }
        if (*(_DWORD *)(v8 + 12 + 4 * v7) != -1) {
          break;
        }
        uint64_t v10 = *(void *)(a1 + 8);
        if (!v10) {
          goto LABEL_29;
        }
        uint64_t v11 = *(unsigned int *)(v10 + 8);
        if ((int)v7 >= (int)v11) {
          IOSArray_throwOutOfBoundsWithMsg(v11, v7);
        }
        *(_DWORD *)(v10 + 12 + 4 * v7) = 0;
        int v6 = *(_DWORD *)(a1 + 16);
        if ((int)++v7 >= v6) {
          goto LABEL_20;
        }
      }
      int v6 = *(_DWORD *)(a1 + 16);
LABEL_20:
      uint64_t v12 = v7;
    }
    if (v12 == v6) {
      *(_DWORD *)(a1 + 16) = v6 + 1;
    }
    uint64_t v13 = *(void *)(a1 + 8);
    if (v13)
    {
      uint64_t v14 = *(unsigned int *)(v13 + 8);
      if ((int)v12 >= (int)v14) {
        IOSArray_throwOutOfBoundsWithMsg(v14, v12);
      }
      ++*(_DWORD *)(v13 + 12 + 4 * (int)v12);
      goto LABEL_26;
    }
LABEL_29:
    JreThrowNullPointerException();
  }
LABEL_26:
  [(id)a1 cutOffLeadingZeroes];
  return [(id)a1 unCache];
}

uint64_t JavaMathBitLevel_shiftRightWithIntArray_withInt_withIntArray_withInt_withInt_(int *a1, uint64_t a2, int *a3, uint64_t a4, int a5)
{
  if ((int)a4 >= 1)
  {
    if (!a3) {
      goto LABEL_38;
    }
    uint64_t v7 = 0;
    LOBYTE(v8) = 1;
    do
    {
      uint64_t v9 = a3[2];
      if (v7 >= v9) {
        IOSArray_throwOutOfBoundsWithMsg(v9, v7);
      }
      uint64_t v8 = v8 & (a3[v7++ + 3] == 0);
    }
    while (a4 != v7);
    uint64_t v10 = a4;
    if (a5) {
      goto LABEL_9;
    }
LABEL_28:
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a3, a4, a1, 0, a2);
    return v8;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 1;
  if (!a5) {
    goto LABEL_28;
  }
LABEL_9:
  if (!a3) {
    goto LABEL_38;
  }
  int v11 = -a5;
  uint64_t v12 = a3[2];
  if ((int)v10 >= (int)v12) {
    IOSArray_throwOutOfBoundsWithMsg(v12, v10);
  }
  if (a3[(int)v10 + 3] << v11) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v8;
  }
  uint64_t v13 = (a2 - 1);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    char v15 = v11 & 0x1F;
    while (1)
    {
      int v16 = a4 + v14;
      uint64_t v17 = a3[2];
      if (a4 + v14 < 0 || v16 >= (int)v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, a4 + v14);
      }
      unsigned int v18 = a3[v16 + 3];
      int v19 = a4 + v14 + 1;
      if (v19 < 0 || v19 >= (int)v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, a4 + v14 + 1);
      }
      if (!a1) {
        goto LABEL_38;
      }
      int v20 = a3[v19 + 3];
      uint64_t v21 = a1[2];
      if (v14 >= v21) {
        IOSArray_throwOutOfBoundsWithMsg(v21, v14);
      }
      a1[v14++ + 3] = (v20 << v15) | (v18 >> (a5 & 0x1F));
      if (v13 == v14) {
        goto LABEL_30;
      }
    }
  }
  uint64_t v13 = 0;
LABEL_30:
  uint64_t v22 = a3[2];
  int v23 = v13 + a4;
  if ((int)v13 + (int)a4 < 0 || v23 >= (int)v22) {
    IOSArray_throwOutOfBoundsWithMsg(v22, v23);
  }
  if (!a1) {
LABEL_38:
  }
    JreThrowNullPointerException();
  uint64_t v24 = a1[2];
  if ((int)v13 >= (int)v24) {
    IOSArray_throwOutOfBoundsWithMsg(v24, v13);
  }
  a1[(int)v13 + 3] = a3[(int)v13 + 3 + (int)a4] >> a5;
  return v8;
}

void sub_100282248()
{
}

JavaMathBigInteger *JavaMathBitLevel_flipBitWithJavaMathBigInteger_withInt_(uint64_t a1, int a2)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  unsigned int v4 = *(_DWORD *)(a1 + 20);
  uint64_t v5 = (a2 >> 5);
  int v6 = v5 + 1;
  int v7 = JavaLangMath_maxWithInt_withInt_((v5 + 1), *(_DWORD *)(a1 + 16)) + 1;
  uint64_t v8 = +[IOSIntArray arrayWithLength:v7];
  int v9 = 1 << a2;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(*(id *)(a1 + 8), 0, v8, 0, *(unsigned int *)(a1 + 16));
  if ((*(_DWORD *)(a1 + 20) & 0x80000000) == 0) {
    goto LABEL_3;
  }
  if ((int)v5 >= *(_DWORD *)(a1 + 16))
  {
    uint64_t size = v8->super.size_;
    if (a2 < 0 || (int)v5 >= (int)size) {
      IOSArray_throwOutOfBoundsWithMsg(size, v5);
    }
    *(&v8->super.size_ + (int)v5 + 1) = v9;
  }
  else
  {
    int v11 = [(id)a1 getFirstNonzeroDigit];
    if ((int)v5 > v11)
    {
LABEL_3:
      uint64_t v10 = v8->super.size_;
      if (a2 < 0 || (int)v5 >= (int)v10) {
        IOSArray_throwOutOfBoundsWithMsg(v10, v5);
      }
      *(&v8->super.size_ + (int)v5 + 1) ^= v9;
      goto LABEL_49;
    }
    if ((int)v5 >= v11)
    {
      uint64_t v17 = v8->super.size_;
      if (a2 < 0 || (int)v5 >= (int)v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, v5);
      }
      int v18 = -(v9 ^ -*(&v8->super.size_ + (int)v5 + 1));
      if (a2 < 0 || (int)v5 >= (int)v17) {
        IOSArray_throwOutOfBoundsWithMsg(v17, v5);
      }
      *(&v8->super.size_ + (int)v5 + 1) = v18;
      uint64_t v19 = v8->super.size_;
      if (a2 < 0 || (int)v5 >= (int)v19) {
        IOSArray_throwOutOfBoundsWithMsg(v19, v5);
      }
      if (!*(&v8->super.size_ + (int)v5 + 1))
      {
        while (1)
        {
          uint64_t v20 = v8->super.size_;
          if (v6 < 0 || v6 >= (int)v20) {
            IOSArray_throwOutOfBoundsWithMsg(v20, v6);
          }
          int v21 = *(&v8->super.size_ + v6 + 1);
          uint64_t v22 = v8->super.size_;
          BOOL v23 = v6 >= 0 && v6 < (int)v22;
          BOOL v24 = !v23;
          if (v21 != -1) {
            break;
          }
          if (v24) {
            IOSArray_throwOutOfBoundsWithMsg(v22, v6);
          }
          *(&v8->super.size_ + ++v6) = 0;
        }
        if (v24) {
          IOSArray_throwOutOfBoundsWithMsg(v22, v6);
        }
        *(&v8->super.size_ + v6 + 1) = v21 + 1;
      }
    }
    else
    {
      int v12 = v11;
      uint64_t v13 = v8->super.size_;
      if (a2 < 0 || (int)v5 >= (int)v13) {
        IOSArray_throwOutOfBoundsWithMsg(v13, v5);
      }
      *(&v8->super.size_ + (int)v5 + 1) = -v9;
      if (v6 < v12)
      {
        uint64_t v14 = (int)v5 + 1;
        do
        {
          uint64_t v15 = v8->super.size_;
          if (v14 < 0 || v14 >= (int)v15) {
            IOSArray_throwOutOfBoundsWithMsg(v15, v14);
          }
          *(&v8->super.size_ + ++v14) = -1;
        }
        while (v12 != v14);
        int v6 = v12;
      }
      uint64_t v25 = v6;
      uint64_t v26 = v8->super.size_;
      if (v6 < 0 || v6 >= (int)v26) {
        IOSArray_throwOutOfBoundsWithMsg(v26, v6);
      }
      int v27 = *(&v8->super.size_ + v6 + 1);
      *(&v8->super.size_ + v25 + 1) = v27 - 1;
      uint64_t v28 = v8->super.size_;
      if ((v25 & 0x80000000) != 0 || (int)v25 >= (int)v28) {
        IOSArray_throwOutOfBoundsWithMsg(v28, v25);
      }
      *(&v8->super.size_ + v25 + 1) = v27;
    }
  }
LABEL_49:
  if (v4 <= 1) {
    int v29 = 1;
  }
  else {
    int v29 = v4;
  }
  uint64_t v30 = new_JavaMathBigInteger_initWithInt_withInt_withIntArray_(v29, v7, v8);
  [(JavaMathBigInteger *)v30 cutOffLeadingZeroes];
  return v30;
}

void sub_10028266C()
{
}

id JavaNioChannelsFileLock_initWithJavaNioChannelsFileChannel_withLong_withLong_withBoolean_(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a4 | a3) < 0 || a4 + a3 < 0)
  {
    CFStringRef v13 = JreStrcat("$J$J", (uint64_t)a2, a3, a4, a5, a6, a7, a8, @"position=");
    uint64_t v14 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v13);
    objc_exception_throw(v14);
  }
  char v10 = a5;
  id result = objc_storeWeak((id *)(a1 + 8), a2);
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = a4;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

float Java_java_lang_StringToReal_parseFltImpl(uint64_t a1, uint64_t a2, void *a3, unsigned int a4)
{
  uint64_t v5 = (const char *)[a3 UTF8String];
  if (!v5) {
    return 0.0;
  }
  int v6 = v5;
  v18[0] = 0;
  int v7 = *(unsigned __int8 *)v5;
  unsigned int v8 = 1;
  while (1)
  {
    if ((v7 - 48) > 9)
    {
      int v13 = strlen(v6);
      *(float *)&unsigned int v8 = NAN;
      float v14 = NAN;
      goto LABEL_17;
    }
    __memcpy_chk();
    unsigned int appended = simpleAppendDecimalDigitHighPrecision((unsigned int *)v18, v8, v7 - 48);
    if (appended)
    {
      v18[v8] = appended;
      if ((int)(v8 + 1) >= 8)
      {
        __memcpy_chk();
LABEL_12:
        int v15 = strlen(v6);
        if (v15 <= 0)
        {
          if ((v8 & 0x80000000) != 0) {
            return *(float *)&v8;
          }
          unsigned int v17 = v8;
          unsigned int v16 = a4;
        }
        else
        {
          if ((v8 & 0x80000000) != 0) {
            return *(float *)&v8;
          }
          unsigned int v16 = v15 + a4;
          if ((int)(v15 + a4) > 0) {
            return INFINITY;
          }
          unsigned int v17 = v8;
        }
        return sub_100282BA8((unsigned int *)v18, v17, v16);
      }
      if (v8++ > 0x7FFFFFFE) {
        break;
      }
    }
    int v11 = *(unsigned __int8 *)++v6;
    int v7 = v11;
    if (!v11) {
      goto LABEL_12;
    }
  }
  int v13 = strlen(v6);
  *(float *)&unsigned int v8 = -0.0;
  float v14 = -0.0;
LABEL_17:
  if (v13 > 0) {
    return *(float *)&v8;
  }
  return v14;
}

double Java_java_lang_StringToReal_parseDblImpl(uint64_t a1, uint64_t a2, void *a3, unsigned int a4)
{
  uint64_t v5 = (const char *)[a3 UTF8String];
  if (v5)
  {
    int v6 = v5;
    v18[0] = 0;
    int v7 = *(unsigned __int8 *)v5;
    unsigned int v8 = 1;
    double v9 = NAN;
    while (1)
    {
      if ((v7 - 48) > 9) {
        return v9;
      }
      __memcpy_chk();
      unsigned int appended = simpleAppendDecimalDigitHighPrecision((unsigned int *)v18, v8, v7 - 48);
      if (appended)
      {
        v18[v8] = appended;
        if ((int)(v8 + 1) >= 17)
        {
          __memcpy_chk();
LABEL_11:
          int v13 = strlen(v6);
          if (v13 < 1)
          {
            if ((v8 & 0x80000000) != 0) {
              return v9;
            }
            if (a4)
            {
              unsigned int v15 = v8;
              unsigned int v14 = a4;
              return sub_1002833C0((int *)v18, v15, v14);
            }
          }
          else
          {
            if ((v8 & 0x80000000) != 0) {
              return v9;
            }
            unsigned int v14 = v13 + a4;
            if (v13 + a4)
            {
              if ((v14 & 0x80000000) == 0) {
                return INFINITY;
              }
              unsigned int v15 = v8;
              return sub_1002833C0((int *)v18, v15, v14);
            }
          }
          return toDoubleHighPrecision((unsigned int *)v18, v8);
        }
        if (v8++ > 0x7FFFFFFE) {
          return v9;
        }
      }
      int v12 = *(unsigned __int8 *)++v6;
      int v7 = v12;
      if (!v12) {
        goto LABEL_11;
      }
    }
  }
  return 0.0;
}

float sub_100282BA8(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  int v6 = highestSetBitHighPrecision((uint64_t)a1, a2) + 1;
  if (a3 <= 0xA && v6 <= 24) {
    return flt_100320C00[a3] * (float)(int)*a1;
  }
  if ((a3 & 0x80000000) != 0 && v6 <= 24)
  {
    if ((signed int)-a3 <= 10) {
      return (float)(int)*a1 / flt_100320C00[-a3];
    }
  }
  else
  {
    if (a3 <= 0x26)
    {
      double v8 = toDoubleHighPrecision(a1, a2);
      float v9 = v8 * __exp10((double)(int)a3);
      goto LABEL_35;
    }
    if ((int)a3 >= 39)
    {
      float v10 = toDoubleHighPrecision(a1, a2);
      BOOL v14 = v10 == 0.0;
      float v9 = INFINITY;
      if (v14) {
        float v9 = COERCE_FLOAT(1);
      }
      goto LABEL_35;
    }
  }
  float v9 = 0.0;
  if (a3 >= 0xFFFFFECC)
  {
    double v11 = toDoubleHighPrecision(a1, a2);
    double v12 = v11 / __exp10((double)-a3);
    double v13 = v12;
    if ((HIDWORD(v12) & 0x7FF00000) == 0)
    {
      float v7 = 0.0;
      BOOL v14 = !LODWORD(v13) && (HIDWORD(v12) & 0xFFFFF) == 0;
      if (!v14) {
        return v7;
      }
    }
    int v15 = doubleExponent(v12) + 51;
    unint64_t v16 = doubleMantissa(v12);
    float v7 = 0.0;
    if (v15 < -154) {
      return v7;
    }
    if (v15 > -127)
    {
      float v9 = v12;
      goto LABEL_35;
    }
    unint64_t v17 = v16 >> 29;
    unsigned int v18 = 8 * v16;
    if (v15 == -127 || 8 * v16 == 0)
    {
      if ((v18 & 0x80000000) != 0)
      {
        if ((v16 & 0xFFFFFFF) != 0) {
          unsigned int v22 = v17 + 1;
        }
        else {
          unsigned int v22 = ((v16 & 0x20000000) != 0) + (v16 >> 29);
        }
        goto LABEL_33;
      }
      unint64_t v20 = v16 >> 29;
    }
    else
    {
      do
      {
        unsigned int v18 = (v18 | (v17 << 31)) >> 1;
        LODWORD(v20) = v17 >> 1;
        if (v15 > 0xFFFFFF7F) {
          break;
        }
        ++v15;
        unsigned int v21 = v18 | (v17 >> 1);
        LODWORD(v17) = v17 >> 1;
      }
      while (v21);
    }
    unsigned int v22 = v20 + (((v18 & 0x3FFFFFFC) != 0) & (v18 >> 30));
LABEL_33:
    float v9 = *(float *)&v22;
  }
LABEL_35:
  BOOL v23 = 0;
  BOOL v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (v9 == 0.0 || (int)a3 < -308) {
    float v7 = COERCE_FLOAT(1);
  }
  else {
    float v7 = v9;
  }
  unint64_t v64 = 0;
  unsigned int v54 = a2 + 1;
  uint64_t __n = 8 * a2;
  uint64_t v62 = a2;
  int v56 = -a3;
  int v28 = (signed int)-a3 / 19;
  uint64_t v53 = (v28 + 2);
  uint64_t v52 = 8 * (v28 + 1);
  int v55 = v28 + 3;
  unsigned int v57 = a2 + a3 / 0x13 + 2;
  unsigned int v29 = a3 / 0x13 + 1;
  uint64_t v30 = v29 + a2;
  unsigned int v59 = a2;
  uint64_t size = 8 * (int)v30;
  size_t v58 = 8 * v29;
  for (i = v30; ; uint64_t v30 = i)
  {
    unint64_t v64 = floatMantissa(v7);
    unsigned int v31 = floatExponent(v7);
    if (v23 && v23 != a1) {
      free(v23);
    }
    free(v24);
    free(v25);
    free(v26);
    if ((a3 & 0x80000000) != 0 || (v31 & 0x80000000) != 0)
    {
      if ((a3 & 0x80000000) != 0)
      {
        if ((v31 & 0x80000000) != 0)
        {
          LODWORD(v30) = v54 + ((signed int)-v31 >> 6);
          int v39 = (unsigned int *)malloc_type_malloc(8 * (int)v30, 0x100004000313F17uLL);
          if (!v39) {
            goto LABEL_100;
          }
          BOOL v23 = v39;
          bzero(&v39[2 * v62], 8 * (int)(v30 - v59));
          memcpy(v23, a1, __n);
          simpleShiftLeftHighPrecision(v23, v30, -v31);
          uint64_t v40 = (unint64_t *)malloc_type_malloc(8 * (int)v53, 0x100004000313F17uLL);
          BOOL v24 = v40;
          if (!v40) {
            goto LABEL_97;
          }
          bzero(v40 + 1, v52);
          *BOOL v24 = v64;
          LODWORD(v34) = v53;
          timesTenToTheEHighPrecision((unsigned int *)v24, v53, v56);
        }
        else
        {
          uint64_t v34 = v55 + (v31 >> 6);
          uint64_t v38 = (unint64_t *)malloc_type_malloc(8 * (int)v34, 0x100004000313F17uLL);
          BOOL v24 = v38;
          if (!v38) {
            goto LABEL_100;
          }
          bzero(v38 + 1, 8 * ((int)v34 - 1));
          *BOOL v24 = v64;
          timesTenToTheEHighPrecision((unsigned int *)v24, v34, v56);
          simpleShiftLeftHighPrecision(v24, v34, v31);
          BOOL v23 = a1;
          LODWORD(v30) = v59;
        }
      }
      else
      {
        uint64_t v30 = v57 + ((signed int)-v31 >> 6);
        uint64_t v36 = (unsigned int *)malloc_type_malloc(8 * (int)v30, 0x100004000313F17uLL);
        if (!v36) {
          goto LABEL_100;
        }
        BOOL v23 = v36;
        bzero(&v36[2 * v62], 8 * (int)(v30 - v59));
        memcpy(v23, a1, __n);
        timesTenToTheEHighPrecision(v23, v30, a3);
        simpleShiftLeftHighPrecision(v23, v30, -v31);
        int v37 = (unint64_t *)malloc_type_malloc(8uLL, 0x100004000313F17uLL);
        BOOL v24 = v37;
        if (!v37) {
          goto LABEL_97;
        }
        *int v37 = v64;
        LODWORD(v34) = 1;
      }
    }
    else
    {
      uint64_t v32 = (unsigned int *)malloc_type_malloc(size, 0x100004000313F17uLL);
      if (!v32) {
        goto LABEL_100;
      }
      BOOL v23 = v32;
      bzero(&v32[2 * v62], v58);
      memcpy(v23, a1, __n);
      timesTenToTheEHighPrecision(v23, v30, a3);
      unsigned int v33 = v31 >> 6;
      LODWORD(v34) = (v31 >> 6) + 2;
      uint64_t v35 = (unint64_t *)malloc_type_malloc((8 * v34), 0x100004000313F17uLL);
      BOOL v24 = v35;
      if (!v35) {
        goto LABEL_97;
      }
      bzero(v35 + 1, 8 * v33 + 8);
      *BOOL v24 = v64;
      simpleShiftLeftHighPrecision(v24, v33 + 2, v31);
    }
    int v41 = compareHighPrecision((uint64_t)v23, v30, (uint64_t)v24, v34);
    int v42 = v41;
    if (v41 < 1)
    {
      if (v41)
      {
        uint64_t v44 = malloc_type_malloc(8 * (int)v34, 0x100004000313F17uLL);
        uint64_t v25 = v44;
        if (!v44) {
          goto LABEL_97;
        }
        memcpy(v44, v24, 8 * (int)v34);
        subtractHighPrecision((unint64_t *)v25, v34, (unint64_t *)v23, v30);
        LODWORD(v30) = v34;
      }
      else
      {
        uint64_t v45 = malloc_type_malloc(8uLL, 0x100004000313F17uLL);
        uint64_t v25 = v45;
        if (!v45) {
          goto LABEL_97;
        }
        *uint64_t v45 = 0;
        LODWORD(v30) = 1;
      }
    }
    else
    {
      uint64_t v43 = malloc_type_malloc(8 * (int)v30, 0x100004000313F17uLL);
      uint64_t v25 = v43;
      if (!v43) {
        goto LABEL_97;
      }
      memcpy(v43, v23, 8 * (int)v30);
      subtractHighPrecision((unint64_t *)v25, v30, v24, v34);
    }
    unsigned int v46 = v30 + 1;
    uint64_t v26 = malloc_type_malloc(8 * ((int)v30 + 1), 0x100004000313F17uLL);
    if (!v26)
    {
LABEL_97:
      if (v23 && v23 != a1) {
        free(v23);
      }
LABEL_100:
      free(v24);
      free(v25);
      free(v26);
      objc_exception_throw(objc_alloc_init(JavaLangOutOfMemoryError));
    }
    v64 *= 2;
    multiplyHighPrecision((unsigned int *)v25, v30, (unsigned int *)&v64, 1, v26, v30 + 1);
    v64 >>= 1;
    int v47 = compareHighPrecision((uint64_t)v26, (int)v30 + 1, (uint64_t)v24, v34);
    if (v47 < 0)
    {
      if (v7 == 1.1755e-38) {
        goto LABEL_89;
      }
      if ((v42 & 0x80000000) == 0) {
        goto LABEL_89;
      }
      if (v64 != 0x800000) {
        goto LABEL_89;
      }
      simpleShiftLeftHighPrecision(v26, v46, 1);
      if ((int)compareHighPrecision((uint64_t)v26, v46, (uint64_t)v24, v34) < 1) {
        goto LABEL_89;
      }
      int v49 = LODWORD(v7) - 1;
      goto LABEL_84;
    }
    if (!v47) {
      break;
    }
    float v48 = v7;
    if (v42 < 0) {
      goto LABEL_83;
    }
    if (v7 == INFINITY) {
      goto LABEL_89;
    }
    int v49 = LODWORD(v7) + 1;
LABEL_84:
    float v7 = *(float *)&v49;
  }
  if ((v64 & 1) == 0)
  {
    if ((v42 & 0x80000000) == 0 || v64 != 0x800000) {
      goto LABEL_89;
    }
    float v48 = v7;
LABEL_83:
    int v49 = LODWORD(v48) - 1;
    goto LABEL_84;
  }
  if (v42 < 0) {
    int v50 = LODWORD(v7) - 1;
  }
  else {
    int v50 = LODWORD(v7) + 1;
  }
  float v7 = *(float *)&v50;
LABEL_89:
  if (v23 && v23 != a1) {
    free(v23);
  }
  free(v24);
  free(v25);
  free(v26);
  return v7;
}

double sub_1002833C0(int *a1, unsigned int a2, unsigned int a3)
{
  int v6 = highestSetBitHighPrecision((uint64_t)a1, a2);
  int v7 = v6 - lowestSetBitHighPrecision(a1, a2) + 1;
  if (a3 <= 0x16 && v7 <= 53) {
    return toDoubleHighPrecision((unsigned int *)a1, a2) * dbl_100320C30[a3];
  }
  if ((a3 & 0x80000000) != 0 && v7 <= 53)
  {
    if ((signed int)-a3 <= 22) {
      return toDoubleHighPrecision((unsigned int *)a1, a2) / dbl_100320C30[-a3];
    }
    goto LABEL_14;
  }
  if (a3 > 0x134)
  {
    if ((int)a3 < 309)
    {
LABEL_14:
      double v12 = toDoubleHighPrecision((unsigned int *)a1, a2);
      if (a3 < 0xFFFFFECC) {
        double v10 = v12 * __exp10((double)(int)(a3 + 52)) * 1.0e-52;
      }
      else {
        double v10 = v12 / __exp10((double)-a3);
      }
      unsigned int v11 = a2;
      goto LABEL_18;
    }
    if (toDoubleHighPrecision((unsigned int *)a1, a2) != 0.0) {
      return INFINITY;
    }
    *(void *)&double v10 = 1;
  }
  else
  {
    double v9 = toDoubleHighPrecision((unsigned int *)a1, a2);
    double v10 = v9 * __exp10((double)(int)a3);
  }
  unsigned int v11 = a2;
LABEL_18:
  double v13 = 0;
  BOOL v14 = 0;
  int v15 = 0;
  unint64_t v16 = 0;
  if (v10 == 0.0) {
    double v8 = COERCE_DOUBLE(1);
  }
  else {
    double v8 = v10;
  }
  unint64_t v55 = 0;
  unsigned int v45 = v11 + 1;
  uint64_t __n = 8 * v11;
  uint64_t v53 = v11;
  int v47 = -a3;
  int v17 = (signed int)-a3 / 19;
  uint64_t v44 = (v17 + 2);
  uint64_t v43 = 8 * (v17 + 1);
  int v46 = v17 + 3;
  unsigned int v48 = v11 + a3 / 0x13 + 2;
  unsigned int v18 = a3 / 0x13 + 1;
  uint64_t v19 = v18 + v11;
  unsigned int v50 = v11;
  uint64_t size = 8 * (int)v19;
  size_t v49 = 8 * v18;
  for (i = v19; ; uint64_t v19 = i)
  {
    unint64_t v55 = doubleMantissa(v8);
    unsigned int v20 = doubleExponent(v8);
    if (v13 && v13 != a1) {
      free(v13);
    }
    free(v14);
    free(v15);
    free(v16);
    if ((a3 & 0x80000000) != 0 || (v20 & 0x80000000) != 0)
    {
      if ((a3 & 0x80000000) != 0)
      {
        if ((v20 & 0x80000000) != 0)
        {
          int v29 = -v20;
          LODWORD(v19) = v45 + (v29 >> 6);
          uint64_t v30 = (int *)malloc_type_malloc(8 * (int)v19, 0x100004000313F17uLL);
          if (!v30) {
            goto LABEL_78;
          }
          double v13 = v30;
          bzero(&v30[2 * v53], 8 * (int)(v19 - v50));
          memcpy(v13, a1, __n);
          simpleShiftLeftHighPrecision(v13, v19, v29);
          unsigned int v31 = (unint64_t *)malloc_type_malloc(8 * (int)v44, 0x100004000313F17uLL);
          BOOL v14 = v31;
          if (!v31) {
            goto LABEL_75;
          }
          bzero(v31 + 1, v43);
          *BOOL v14 = v55;
          LODWORD(v23) = v44;
          timesTenToTheEHighPrecision((unsigned int *)v14, v44, v47);
        }
        else
        {
          uint64_t v23 = v46 + (v20 >> 6);
          int v28 = (unint64_t *)malloc_type_malloc(8 * (int)v23, 0x100004000313F17uLL);
          BOOL v14 = v28;
          if (!v28) {
            goto LABEL_78;
          }
          bzero(v28 + 1, 8 * ((int)v23 - 1));
          *BOOL v14 = v55;
          timesTenToTheEHighPrecision((unsigned int *)v14, v23, v47);
          simpleShiftLeftHighPrecision(v14, v23, v20);
          double v13 = a1;
          LODWORD(v19) = v50;
        }
      }
      else
      {
        int v25 = -v20;
        uint64_t v19 = v48 + (v25 >> 6);
        uint64_t v26 = (int *)malloc_type_malloc(8 * (int)v19, 0x100004000313F17uLL);
        if (!v26) {
          goto LABEL_78;
        }
        double v13 = v26;
        bzero(&v26[2 * v53], 8 * (int)(v19 - v50));
        memcpy(v13, a1, __n);
        timesTenToTheEHighPrecision((unsigned int *)v13, v19, a3);
        simpleShiftLeftHighPrecision(v13, v19, v25);
        int v27 = (unint64_t *)malloc_type_malloc(8uLL, 0x100004000313F17uLL);
        BOOL v14 = v27;
        if (!v27) {
          goto LABEL_75;
        }
        *int v27 = v55;
        LODWORD(v23) = 1;
      }
    }
    else
    {
      unsigned int v21 = (int *)malloc_type_malloc(size, 0x100004000313F17uLL);
      if (!v21) {
        goto LABEL_78;
      }
      double v13 = v21;
      bzero(&v21[2 * v53], v49);
      memcpy(v13, a1, __n);
      timesTenToTheEHighPrecision((unsigned int *)v13, v19, a3);
      unsigned int v22 = v20 >> 6;
      LODWORD(v23) = (v20 >> 6) + 2;
      BOOL v24 = (unint64_t *)malloc_type_malloc((8 * v23), 0x100004000313F17uLL);
      BOOL v14 = v24;
      if (!v24) {
        goto LABEL_75;
      }
      bzero(v24 + 1, 8 * v22 + 8);
      *BOOL v14 = v55;
      simpleShiftLeftHighPrecision(v14, v22 + 2, v20);
    }
    int v32 = compareHighPrecision((uint64_t)v13, v19, (uint64_t)v14, v23);
    int v33 = v32;
    if (v32 < 1)
    {
      if (v32)
      {
        uint64_t v35 = malloc_type_malloc(8 * (int)v23, 0x100004000313F17uLL);
        int v15 = v35;
        if (!v35) {
          goto LABEL_75;
        }
        memcpy(v35, v14, 8 * (int)v23);
        subtractHighPrecision((unint64_t *)v15, v23, (unint64_t *)v13, v19);
        LODWORD(v19) = v23;
      }
      else
      {
        uint64_t v36 = malloc_type_malloc(8uLL, 0x100004000313F17uLL);
        int v15 = v36;
        if (!v36) {
          goto LABEL_75;
        }
        *uint64_t v36 = 0;
        LODWORD(v19) = 1;
      }
    }
    else
    {
      uint64_t v34 = malloc_type_malloc(8 * (int)v19, 0x100004000313F17uLL);
      int v15 = v34;
      if (!v34) {
        goto LABEL_75;
      }
      memcpy(v34, v13, 8 * (int)v19);
      subtractHighPrecision((unint64_t *)v15, v19, v14, v23);
    }
    unsigned int v37 = v19 + 1;
    unint64_t v16 = malloc_type_malloc(8 * ((int)v19 + 1), 0x100004000313F17uLL);
    if (!v16)
    {
LABEL_75:
      if (v13 && v13 != a1) {
        free(v13);
      }
LABEL_78:
      free(v14);
      free(v15);
      free(v16);
      objc_exception_throw(objc_alloc_init(JavaLangOutOfMemoryError));
    }
    v55 *= 2;
    multiplyHighPrecision((unsigned int *)v15, v19, (unsigned int *)&v55, 1, v16, v19 + 1);
    v55 >>= 1;
    int v38 = compareHighPrecision((uint64_t)v16, (int)v19 + 1, (uint64_t)v14, v23);
    if (v38 < 0)
    {
      if (v8 == 2.22507386e-308) {
        goto LABEL_70;
      }
      if ((v33 & 0x80000000) == 0) {
        goto LABEL_70;
      }
      if (v55 != 0x10000000000000) {
        goto LABEL_70;
      }
      simpleShiftLeftHighPrecision(v16, v37, 1);
      if ((int)compareHighPrecision((uint64_t)v16, v37, (uint64_t)v14, v23) < 1) {
        goto LABEL_70;
      }
      uint64_t v40 = *(void *)&v8 - 1;
      goto LABEL_64;
    }
    if (!v38) {
      break;
    }
    double v39 = v8;
    if (v33 < 0) {
      goto LABEL_63;
    }
    if (v8 == INFINITY) {
      goto LABEL_70;
    }
    uint64_t v40 = *(void *)&v8 + 1;
LABEL_64:
    double v8 = *(double *)&v40;
  }
  if ((v55 & 1) == 0)
  {
    if ((v33 & 0x80000000) == 0 || v55 != 0x10000000000000) {
      goto LABEL_70;
    }
    double v39 = v8;
LABEL_63:
    uint64_t v40 = *(void *)&v39 - 1;
    goto LABEL_64;
  }
  if (v33 < 0) {
    uint64_t v41 = *(void *)&v8 - 1;
  }
  else {
    uint64_t v41 = *(void *)&v8 + 1;
  }
  double v8 = *(double *)&v41;
LABEL_70:
  if (v13 && v13 != a1) {
    free(v13);
  }
  free(v14);
  free(v15);
  free(v16);
  return v8;
}

JavaTextSimpleDateFormat *JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100284540(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
  if (!a2)
  {
    double v13 = new_JavaLangNullPointerException_initWithNSString_(@"locale == null");
    objc_exception_throw(v13);
  }
  double v10 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a2);
  if (!v10) {
    JreThrowNullPointerException();
  }
  unsigned int v11 = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_([(LibcoreIcuLocaleData *)v10 getDateFormatWithInt:a1], a2);
  return v11;
}

JavaTextSimpleDateFormat *JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100284588(a2, a2, a3, a4, a5, a6, a7, a8);
  sub_100284540(a1, v10, v11, v12, v13, v14, v15, v16);
  uint64_t Default = (void *)JavaUtilLocale_getDefault();
  return JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_withJavaUtilLocale_(a1, a2, Default, v18, v19, v20, v21, v22);
}

JavaTextSimpleDateFormat *JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_withJavaUtilLocale_(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100284588(a2, a2, (uint64_t)a3, a4, a5, a6, a7, a8);
  sub_100284540(a1, v11, v12, v13, v14, v15, v16, v17);
  if (!a3)
  {
    unsigned int v31 = new_JavaLangNullPointerException_initWithNSString_(@"locale == null");
    objc_exception_throw(v31);
  }
  uint64_t v18 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a3);
  if (!v18) {
    JreThrowNullPointerException();
  }
  uint64_t v19 = v18;
  id v20 = [(LibcoreIcuLocaleData *)v18 getDateFormatWithInt:a1];
  [(LibcoreIcuLocaleData *)v19 getTimeFormatWithInt:a2];
  int v28 = (__CFString *)JreStrcat("$C$", v21, v22, v23, v24, v25, v26, v27, v20);
  int v29 = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(v28, a3);
  return v29;
}

JavaTextSimpleDateFormat *JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100284588(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
  if (!a2)
  {
    uint64_t v13 = new_JavaLangNullPointerException_initWithNSString_(@"locale == null");
    objc_exception_throw(v13);
  }
  uint64_t v10 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a2);
  if (!v10) {
    JreThrowNullPointerException();
  }
  uint64_t v11 = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_([(LibcoreIcuLocaleData *)v10 getTimeFormatWithInt:a1], a2);
  return v11;
}

uint64_t sub_100284540(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result >= 4)
  {
    CFStringRef v8 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Illegal date style: ");
    double v9 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v8);
    objc_exception_throw(v9);
  }
  return result;
}

uint64_t sub_100284588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result >= 4)
  {
    CFStringRef v8 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Illegal time style: ");
    double v9 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v8);
    objc_exception_throw(v9);
  }
  return result;
}

JavaTextSimpleDateFormat *JavaTextDateFormat_getDateTimeInstance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(2, 2, a3, a4, a5, a6, a7, a8);
}

JavaTextSimpleDateFormat *JavaTextDateFormat_getInstance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(3, 3, a3, a4, a5, a6, a7, a8);
}

id JavaTextDateFormat_Field_initWithNSString_withInt_(uint64_t a1, uint64_t a2, int a3)
{
  id result = (id)JavaTextFormat_Field_initWithNSString_(a1, a2);
  *(_DWORD *)(a1 + 16) = -1;
  *(_DWORD *)(a1 + 16) = a3;
  if (a3 != -1)
  {
    if (!qword_100562DD8) {
      JreThrowNullPointerException();
    }
    id result = [(id)qword_100562DD8 getWithId:JavaLangInteger_valueOfWithInt_(a3)];
    if (!result)
    {
      int v6 = (void *)qword_100562DD8;
      int v7 = JavaLangInteger_valueOfWithInt_(a3);
      return [v6 putWithId:v7 withId:a1];
    }
  }
  return result;
}

id JavaTextDateFormat_Field_ofCalendarFieldWithInt_(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((atomic_load_explicit(JavaTextDateFormat_Field__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a1 >= 0x11)
  {
    CFStringRef v12 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"Field out of range: ");
    uint64_t v13 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
    objc_exception_throw(v13);
  }
  double v9 = (void *)qword_100562DD8;
  if (!qword_100562DD8) {
    JreThrowNullPointerException();
  }
  uint64_t v10 = JavaLangInteger_valueOfWithInt_(a1);
  return [v9 getWithId:v10];
}

ComGoogleJ2objcNetIosHttpsHandler *new_ComGoogleJ2objcNetIosHttpsHandler_init()
{
  uint64_t v0 = [ComGoogleJ2objcNetIosHttpsHandler alloc];
  ComGoogleJ2objcNetIosHttpHandler_init(v0, v1);
  return v0;
}

OrgXmlSaxHelpersNamespaceSupport *new_OrgXmlSaxHelpersNamespaceSupport_init()
{
  uint64_t v0 = [OrgXmlSaxHelpersNamespaceSupport alloc];
  [(OrgXmlSaxHelpersNamespaceSupport *)v0 reset];
  return v0;
}

void *OrgXmlSaxHelpersNamespaceSupport_Context_initWithOrgXmlSaxHelpersNamespaceSupport_(uint64_t a1, void *a2)
{
  objc_storeWeak((id *)(a1 + 56), a2);
  JreStrongAssign((id *)(a1 + 40), 0);
  *(unsigned char *)(a1 + 48) = 1;
  JreStrongAssign((id *)(a1 + 64), 0);
  *(unsigned char *)(a1 + 72) = 0;
  JreStrongAssign((id *)(a1 + 80), 0);
  return -[OrgXmlSaxHelpersNamespaceSupport_Context copyTables]_0(a1);
}

void sub_100286164(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562DE8 = IOSClass_fromClass(v1);
}

id JavaLangThread_init(uint64_t a1)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  int v2 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v2);
  uint64_t v3 = (void *)off_10055F770;
  return sub_100286948(a1, 0, 0, v3, 0, 1);
}

id JavaLangThread_initWithJavaLangRunnable_(uint64_t a1, uint64_t a2)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  unsigned int v4 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v4);
  uint64_t v5 = (void *)off_10055F770;
  return sub_100286948(a1, 0, a2, v5, 0, 1);
}

id JavaLangThread_initWithJavaLangRunnable_withNSString_(uint64_t a1, uint64_t a2, void *a3)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  int v6 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v6);
  return sub_100286948(a1, 0, a2, a3, 0, 1);
}

id JavaLangThread_initWithNSString_(uint64_t a1, void *a2)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  unsigned int v4 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v4);
  return sub_100286948(a1, 0, 0, a2, 0, 1);
}

id JavaLangThread_initWithJavaLangThreadGroup_withJavaLangRunnable_(uint64_t a1, void *a2, uint64_t a3)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  int v6 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v6);
  int v7 = (void *)off_10055F770;
  return sub_100286948(a1, a2, a3, v7, 0, 1);
}

id JavaLangThread_initWithJavaLangThreadGroup_withJavaLangRunnable_withNSString_withLong_(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  uint64_t v10 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v10);
  return sub_100286948(a1, a2, a3, a4, a5, 1);
}

id JavaLangThread_initWithJavaLangThreadGroup_withJavaLangRunnable_withNSString_(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  CFStringRef v8 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v8);
  return sub_100286948(a1, a2, a3, a4, 0, 1);
}

id JavaLangThread_initWithJavaLangThreadGroup_withNSString_(uint64_t a1, void *a2, void *a3)
{
  JreStrongAssignAndConsume((id *)(a1 + 48), objc_alloc((Class)NSObject));
  *(_DWORD *)(a1 + 80) = 1;
  JreStrongAssignAndConsume((id *)(a1 + 88), objc_alloc((Class)NSObject));
  int v6 = new_JavaUtilArrayList_init();
  JreStrongAssignAndConsume((id *)(a1 + 96), v6);
  return sub_100286948(a1, a2, 0, a3, 0, 1);
}

id sub_100286948(uint64_t a1, id a2, uint64_t a3, id a4, uint64_t a5, int a6)
{
  CFStringRef v12 = +[NSThread currentThread];
  uint64_t v13 = [(NSThread *)v12 threadDictionary];
  if (!a2)
  {
    a2 = objc_msgSend(+[JavaLangThread currentThread](JavaLangThread, "currentThread"), "getThreadGroup");
    if (!a2) {
      sub_10028886C();
    }
  }
  uint64_t v14 = (id *)(a1 + 72);
  objc_storeWeak((id *)(a1 + 72), a2);
  if (a6)
  {
    if (!a3) {
      a3 = a1;
    }
    uint64_t v31 = a3;
    uint64_t v15 = (NSThread *)[objc_alloc((Class)NSThread) initWithTarget:a1 selector:"run0WithId:" object:0];
    uint64_t v16 = v15;
    uint64_t v17 = [(NSThread *)v15 threadDictionary];
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    id v18 = [(NSMutableDictionary *)v13 countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v18)
    {
      id v19 = v18;
      id v30 = a4;
      uint64_t v20 = *(void *)v33;
      do
      {
        for (uint64_t i = 0; i != v19; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v33 != v20) {
            objc_enumerationMutation(v13);
          }
          uint64_t v22 = *(void **)(*((void *)&v32 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0
            && ([v22 hasPrefix:off_10055F778] & 1) == 0)
          {
            [(NSMutableDictionary *)v17 setObject:[(NSMutableDictionary *)v13 objectForKey:v22] forKey:v22];
          }
        }
        id v19 = [(NSMutableDictionary *)v13 countByEnumeratingWithState:&v32 objects:v36 count:16];
      }
      while (v19);
      uint64_t v13 = v17;
      a4 = v30;
      uint64_t v14 = (id *)(a1 + 72);
    }
    else
    {
      uint64_t v13 = v17;
    }
    a3 = v31;
    if (v31) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v15 = v12;
    if (a3) {
LABEL_21:
    }
      [(NSMutableDictionary *)v13 setObject:a3 forKey:off_10055F748[0]];
  }
  if (a5) {
    [(NSThread *)v15 setStackSize:a5];
  }
  +[NSThread threadPriority];
  -[NSThread setThreadPriority:](v15, "setThreadPriority:");
  uint64_t v23 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", +[JavaLangThread getNextThreadId]_0());
  [(NSMutableDictionary *)v13 setObject:v23 forKey:off_10055F750[0]];
  if (!a4)
  {
    int v28 = objc_alloc_init(JavaLangNullPointerException);
    int v29 = v28;
    objc_exception_throw(v28);
  }
  if ([a4 isEqual:off_10055F770]) {
    a4 = [a4 stringByAppendingFormat:@"%@", v23];
  }
  [(NSThread *)v15 setName:a4];
  [(id)a1 setNameWithNSString:a4];
  if ([(NSThread *)v12 isMainThread])
  {
    uint64_t v24 = 5;
  }
  else
  {
    [(NSThread *)v12 threadPriority];
    uint64_t v24 = (int)(v25 * 10.0);
  }
  [(id)a1 setPriority0WithInt:v24];
  [objc_loadWeak(v14) addWithJavaLangThread:a1];
  *(void *)(a1 + 40) = v15;
  uint64_t v26 = v15;
  return [(NSMutableDictionary *)v13 setObject:a1 forKey:off_10055F760];
}

void sub_100286DC4(_Unwind_Exception *a1)
{
}

void sub_100286E1C(void *a1)
{
}

void sub_100286E34()
{
  if (v0) {
    JUMPOUT(0x100286E3CLL);
  }
  JUMPOUT(0x100286E40);
}

id JavaLangThread_enumerateWithJavaLangThreadArray_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v2 = JavaLangThread_currentThread();
  if (!v2 || (id v3 = [(JavaLangThread *)v2 getThreadGroup]) == 0) {
    JreThrowNullPointerException();
  }
  return [v3 enumerateWithJavaLangThreadArray:a1];
}

void sub_100287328(_Unwind_Exception *a1)
{
  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10028735C(void *a1)
{
  id result = [a1 isAlive];
  if (result)
  {
    id v3 = (void *)a1[6];
    objc_sync_enter(v3);
    while ([a1 isAlive])
    {
      unsigned int v4 = (void *)a1[6];
      if (!v4) {
        JreThrowNullPointerException();
      }
      [v4 waitWithLong:20];
    }
    return (id)objc_sync_exit(v3);
  }
  return result;
}

void sub_1002873D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1002873FC(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8 = a3;
  unint64_t v9 = a2;
  if ((a2 & 0x8000000000000000) != 0 || a3 >= 0xF4240)
  {
    CFStringRef v17 = JreStrcat("$J$I", a2, a3, a4, a5, a6, a7, a8, @"bad timeout: millis=");
    id v18 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v17);
    objc_exception_throw(v18);
  }
  if (a3 | a2 && (a3 ^ 0x7FFFFFFFFFFFFFC0uLL) / 0xF4240 > a2)
  {
    id result = [a1 isAlive];
    if (result)
    {
      CFStringRef v12 = (void *)a1[6];
      objc_sync_enter(v12);
      if ([a1 isAlive])
      {
        uint64_t v13 = JavaLangSystem_nanoTime();
        uint64_t v14 = v8 + 1000000 * v9;
        while (1)
        {
          uint64_t v15 = (void *)a1[6];
          if (v9 < 0x15)
          {
            if (!v15) {
LABEL_23:
            }
              JreThrowNullPointerException();
            [v15 waitWithLong:v9 withInt:v8];
          }
          else
          {
            if (!v15) {
              goto LABEL_23;
            }
            [v15 waitWithLong:20];
          }
          if (![a1 isAlive]) {
            break;
          }
          uint64_t v16 = v14 + v13 - JavaLangSystem_nanoTime();
          if (v16 < 1) {
            break;
          }
          unint64_t v9 = v16 / 0xF4240uLL;
          unint64_t v8 = v16 % 0xF4240uLL;
        }
      }
      return (id)objc_sync_exit(v12);
    }
  }
  else
  {
    return sub_10028735C(a1);
  }
  return result;
}

void sub_1002875B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaLangThread_sleepWithLong_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JavaLangThread_sleepWithLong_withInt_(a1, 0);
}

uint64_t JavaLangThread_sleepWithLong_withInt_(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unsigned int v4 = JavaLangThread_currentThread();
  if (!v4) {
    JreThrowNullPointerException();
  }
  id vmThread = v4->vmThread_;
  objc_sync_enter(vmThread);
  if (!vmThread) {
    JreThrowNullPointerException();
  }
  [vmThread waitWithLong:a1 withInt:a2];
  return objc_sync_exit(vmThread);
}

void sub_100287774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL JavaLangThread_holdsLockWithId_(unint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return j2objc_sync_holds_lock(a1);
}

void sub_100287948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100287A48(_Unwind_Exception *a1)
{
  objc_end_catch();
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100287B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaLangThread_setDefaultUncaughtExceptionHandlerWithJavaLangThread_UncaughtExceptionHandler_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return JreStrongAssign((id *)&qword_100562DF8, a1);
}

void sub_100287D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100287E2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaLangThread *JavaLangThread_currentThread()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v0 = [+[NSThread currentThread] threadDictionary];
  uint64_t v1 = (JavaLangThread *)[(NSMutableDictionary *)v0 objectForKey:off_10055F760];
  if (!v1)
  {
    int v2 = [+[NSThread currentThread] name];
    id v3 = [JavaLangThread alloc];
    uint64_t v1 = [(JavaLangThread *)v3 initWithJavaLangThreadGroup:qword_100562E08 withNSString:v2 withBoolean:0];
    unsigned int v4 = v1;
  }
  return v1;
}

id JavaLangThread_activeCount()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v0 = JavaLangThread_currentThread();
  if (!v0 || (id v1 = [(JavaLangThread *)v0 getThreadGroup]) == 0) {
    JreThrowNullPointerException();
  }
  return [v1 activeCount];
}

id JavaLangThread_dumpStack()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v0 = new_JavaLangThrowable_initWithNSString_(@"stack dump");
  return [(JavaLangThrowable *)v0 printStackTrace];
}

BOOL JavaLangThread_interrupted()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v0 = JavaLangThread_currentThread();
  BOOL interrupted = v0->interrupted_;
  v0->interrupted_ = 0;
  return interrupted;
}

id JavaLangThread_yield()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!JavaLangThread_currentThread()) {
    JreThrowNullPointerException();
  }
  return +[NSThread sleepForTimeInterval:0.0];
}

uint64_t JavaLangThread_getDefaultUncaughtExceptionHandler()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return qword_100562DF8;
}

uint64_t JavaLangThread_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangThread__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562E18 != -1) {
    dispatch_once(&qword_100562E18, &stru_10047EE98);
  }
  return qword_100562E10;
}

void sub_1002882DC(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562E10 = IOSClass_fromClass(v1);
}

IOSObjectArray *JavaLangThread_StateEnum_values()
{
  if ((atomic_load_explicit(JavaLangThread_StateEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v0 = JavaLangThread_StateEnum_class_();
  return +[IOSObjectArray arrayWithObjects:&JavaLangThread_StateEnum_values_ count:6 type:v0];
}

void *JavaLangThread_StateEnum_valueOfWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaLangThread_StateEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = 0;
  while (1)
  {
    id v3 = (void *)JavaLangThread_StateEnum_values_[v2];
    if (objc_msgSend(a1, "isEqual:", objc_msgSend(v3, "name"))) {
      break;
    }
    if (++v2 == 6) {
      objc_exception_throw([[JavaLangIllegalArgumentException alloc] initWithNSString:a1]);
    }
  }
  return v3;
}

uint64_t JavaLangThread_StateEnum_class_()
{
  if ((atomic_load_explicit(JavaLangThread_StateEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562E28 != -1) {
    dispatch_once(&qword_100562E28, &stru_10047F078);
  }
  return qword_100562E20;
}

void sub_1002885D4(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562E20 = IOSClass_fromClass(v1);
}

void sub_100288714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10028886C()
{
  __assert_rtn("JavaLangThread_createWithJavaLangThreadGroup_withJavaLangRunnable_withNSString_withLong_withBoolean_", "Thread.m", 937, "group != nil");
}

id JavaUtilEventListenerProxy_initWithJavaUtilEventListener_(uint64_t a1, void *a2)
{
  return JreStrongAssign((id *)(a1 + 8), a2);
}

uint64_t OrgXmlSaxParser_class_()
{
  if (qword_100562E38 != -1) {
    dispatch_once(&qword_100562E38, &stru_10047F618);
  }
  return qword_100562E30;
}

void sub_100288A04(id a1)
{
  qword_100562E30 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___OrgXmlSaxParser);
}

JavaUtilConcurrentAtomicAtomicReference *new_JavaUtilConcurrentAtomicAtomicReference_init()
{
  return [JavaUtilConcurrentAtomicAtomicReference alloc];
}

uint64_t maybeThrowIcuException(uint64_t a1, UErrorCode code)
{
  if (code > U_ZERO_ERROR)
  {
    uint64_t v12 = v2;
    uint64_t v10 = +[NSString stringWithFormat:@"%s failed: %s", a1, u_errorName(code), v5, v4, v3, v12, v6, v7];
    if (code <= U_INVALID_TABLE_FILE)
    {
      if (code != U_ILLEGAL_ARGUMENT_ERROR)
      {
        if (code == U_INDEX_OUTOFBOUNDS_ERROR) {
          goto LABEL_7;
        }
LABEL_10:
        uint64_t v11 = off_1003F0EE8;
        goto LABEL_14;
      }
      uint64_t v11 = off_1003F0EE0;
    }
    else
    {
      switch(code)
      {
        case U_FORMAT_INEXACT_ERROR:
          uint64_t v11 = off_1003F0ED0;
          break;
        case U_UNSUPPORTED_ERROR:
          uint64_t v11 = off_1003F0EF0;
          break;
        case U_BUFFER_OVERFLOW_ERROR:
LABEL_7:
          uint64_t v11 = off_1003F0ED8;
          break;
        default:
          goto LABEL_10;
      }
    }
LABEL_14:
    objc_exception_throw([objc_alloc(*v11) initWithNSString:v10]);
  }
  return 0;
}

void Java_java_util_regex_Matcher_closeImpl(int a1, int a2, URegularExpression *regexp)
{
}

BOOL Java_java_util_regex_Matcher_findImpl(int a1, int a2, URegularExpression *regexp, int32_t startIndex, uint64_t a5)
{
  UErrorCode status = U_ZERO_ERROR;
  int v7 = uregex_find(regexp, startIndex, &status);
  if (v7) {
    sub_100288DDC(regexp, a5, &status);
  }
  maybeThrowIcuException((uint64_t)"uregex_find", status);
  return v7 != 0;
}

uint64_t sub_100288DDC(URegularExpression *a1, uint64_t a2, UErrorCode *status)
{
  uint64_t result = uregex_groupCount(a1, status);
  if ((result & 0x80000000) == 0)
  {
    int32_t v7 = result;
    int32_t v8 = 0;
    int v9 = 1;
    do
    {
      *(_DWORD *)(a2 + 12 + 4 * (v9 - 1)) = uregex_start(a1, v8, status);
      uint64_t result = uregex_end(a1, v8, status);
      *(_DWORD *)(a2 + 12 + 4 * v9) = result;
      ++v8;
      v9 += 2;
    }
    while (v8 <= v7);
  }
  return result;
}

BOOL Java_java_util_regex_Matcher_findNextImpl(int a1, int a2, URegularExpression *regexp, uint64_t a4)
{
  UErrorCode status = U_ZERO_ERROR;
  int Next = uregex_findNext(regexp, &status);
  if (Next) {
    sub_100288DDC(regexp, a4, &status);
  }
  maybeThrowIcuException((uint64_t)"uregex_findNext", status);
  return Next != 0;
}

uint64_t Java_java_util_regex_Matcher_groupCountImpl(int a1, int a2, URegularExpression *regexp)
{
  UErrorCode status = U_ZERO_ERROR;
  uint64_t v3 = uregex_groupCount(regexp, &status);
  maybeThrowIcuException((uint64_t)"uregex_groupCount", status);
  return v3;
}

BOOL Java_java_util_regex_Matcher_hitEndImpl(int a1, int a2, URegularExpression *regexp)
{
  UErrorCode status = U_ZERO_ERROR;
  BOOL v3 = uregex_hitEnd(regexp, &status) != 0;
  maybeThrowIcuException((uint64_t)"uregex_hitEnd", status);
  return v3;
}

BOOL Java_java_util_regex_Matcher_lookingAtImpl(int a1, int a2, URegularExpression *regexp, uint64_t a4)
{
  UErrorCode status = U_ZERO_ERROR;
  int v6 = uregex_lookingAt(regexp, -1, &status);
  if (v6) {
    sub_100288DDC(regexp, a4, &status);
  }
  maybeThrowIcuException((uint64_t)"uregex_lookingAt", status);
  return v6 != 0;
}

BOOL Java_java_util_regex_Matcher_matchesImpl(int a1, int a2, URegularExpression *regexp, uint64_t a4)
{
  UErrorCode status = U_ZERO_ERROR;
  int v6 = uregex_matches(regexp, -1, &status);
  if (v6) {
    sub_100288DDC(regexp, a4, &status);
  }
  maybeThrowIcuException((uint64_t)"uregex_matches", status);
  return v6 != 0;
}

URegularExpression *Java_java_util_regex_Matcher_openImpl(int a1, int a2, URegularExpression *regexp)
{
  UErrorCode status = U_ZERO_ERROR;
  BOOL v3 = uregex_clone(regexp, &status);
  maybeThrowIcuException((uint64_t)"uregex_clone", status);
  return v3;
}

BOOL Java_java_util_regex_Matcher_requireEndImpl(int a1, int a2, URegularExpression *regexp)
{
  UErrorCode status = U_ZERO_ERROR;
  BOOL v3 = uregex_requireEnd(regexp, &status) != 0;
  maybeThrowIcuException((uint64_t)"uregex_requireEnd", status);
  return v3;
}

uint64_t Java_java_util_regex_Matcher_setInputImpl(int a1, int a2, URegularExpression *regexp, uint64_t a4, int32_t a5, int32_t a6)
{
  UErrorCode status = U_ZERO_ERROR;
  uregex_setText(regexp, (const UChar *)(a4 + 12), *(_DWORD *)(a4 + 8), &status);
  uregex_setRegion(regexp, a5, a6, &status);
  return maybeThrowIcuException((uint64_t)"uregex_setText", status);
}

uint64_t Java_java_util_regex_Matcher_useAnchoringBoundsImpl(int a1, int a2, URegularExpression *regexp, UBool b)
{
  UErrorCode status = U_ZERO_ERROR;
  uregex_useAnchoringBounds(regexp, b, &status);
  return maybeThrowIcuException((uint64_t)"uregex_useAnchoringBounds", status);
}

uint64_t Java_java_util_regex_Matcher_useTransparentBoundsImpl(int a1, int a2, URegularExpression *regexp, UBool b)
{
  UErrorCode status = U_ZERO_ERROR;
  uregex_useTransparentBounds(regexp, b, &status);
  return maybeThrowIcuException((uint64_t)"uregex_useTransparentBounds", status);
}

LibcoreIoStructPollfd *new_LibcoreIoStructPollfd_init()
{
  return [LibcoreIoStructPollfd alloc];
}

uint64_t LibcoreIoStructPollfd_class_()
{
  if (qword_100562E48 != -1) {
    dispatch_once(&qword_100562E48, &stru_10047FA78);
  }
  return qword_100562E40;
}

void sub_100289350(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562E40 = IOSClass_fromClass(v1);
}

JavaNioChannelsUnresolvedAddressException *new_JavaNioChannelsUnresolvedAddressException_init()
{
  uint64_t v0 = [JavaNioChannelsUnresolvedAddressException alloc];
  JavaLangIllegalArgumentException_init(v0, v1);
  return v0;
}

id JavaUtilMissingFormatWidthException_initWithNSString_(uint64_t a1, void *a2)
{
  JavaUtilIllegalFormatException_init(a1, a2);
  if (!a2)
  {
    uint64_t v5 = new_JavaLangNullPointerException_initWithNSString_(@"s == null");
    objc_exception_throw(v5);
  }
  return JreStrongAssign((id *)(a1 + 88), a2);
}

JavaUtilMissingFormatWidthException *new_JavaUtilMissingFormatWidthException_initWithNSString_(void *a1)
{
  uint64_t v2 = [JavaUtilMissingFormatWidthException alloc];
  JavaUtilMissingFormatWidthException_initWithNSString_((uint64_t)v2, a1);
  return v2;
}

id LibcoreIoStreams_readSingleByteWithJavaIoInputStream_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = +[IOSByteArray arrayWithLength:1];
  if (!a1) {
    JreThrowNullPointerException();
  }
  BOOL v3 = v2;
  id result = [a1 readWithByteArray:v2 withInt:0 withInt:1];
  if (result != -1)
  {
    uint64_t size = v3->super.size_;
    if ((int)size <= 0) {
      IOSArray_throwOutOfBoundsWithMsg(size, 0);
    }
    return (id)*((unsigned __int8 *)&v3->super.size_ + 4);
  }
  return result;
}

id LibcoreIoStreams_writeSingleByteWithJavaIoOutputStream_withInt_(void *a1, char a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = +[IOSByteArray arrayWithLength:1];
  uint64_t size = v4->super.size_;
  if ((int)size <= 0) {
    IOSArray_throwOutOfBoundsWithMsg(size, 0);
  }
  *((unsigned char *)&v4->super.size_ + 4) = a2;
  if (!a1) {
    JreThrowNullPointerException();
  }
  return [a1 writeWithByteArray:v4];
}

uint64_t LibcoreIoStreams_readFullyWithJavaIoInputStream_withByteArray_(uint64_t a1, uint64_t a2)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire))
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a2) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(unsigned int *)(a2 + 8);
  return LibcoreIoStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(a1, a2, 0, v4);
}

uint64_t LibcoreIoStreams_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  int32_t v7 = (void *)result;
  if (atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire))
  {
    if (!a4) {
      return result;
    }
  }
  else
  {
    id result = objc_opt_class();
    if (!v4) {
      return result;
    }
  }
  if (!v7)
  {
    CFStringRef v10 = @"in == null";
LABEL_16:
    int v9 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v10);
    goto LABEL_13;
  }
  if (!a2)
  {
    CFStringRef v10 = @"dst == null";
    goto LABEL_16;
  }
  id result = JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(*(unsigned int *)(a2 + 8), a3, v4);
  if ((int)v4 >= 1)
  {
    while (1)
    {
      id result = (uint64_t)[v7 readWithByteArray:a2 withInt:a3 withInt:v4];
      if ((result & 0x80000000) != 0) {
        break;
      }
      a3 = (result + a3);
      BOOL v8 = __OFSUB__(v4, result);
      uint64_t v4 = (v4 - result);
      if (((int)v4 < 0) ^ v8 | (v4 == 0)) {
        return result;
      }
    }
    int v9 = new_JavaIoEOFException_init();
LABEL_13:
    objc_exception_throw(v9);
  }
  return result;
}

id LibcoreIoStreams_readFullyWithJavaIoInputStream_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id FullyNoCloseWithJavaIoInputStream = LibcoreIoStreams_readFullyNoCloseWithJavaIoInputStream_(a1);
  if (!a1) {
    JreThrowNullPointerException();
  }
  [a1 close];
  return FullyNoCloseWithJavaIoInputStream;
}

void sub_1002898A8()
{
  if (v0) {
    JUMPOUT(0x1002898B0);
  }
  JUMPOUT(0x1002898B4);
}

id LibcoreIoStreams_readFullyNoCloseWithJavaIoInputStream_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = new_JavaIoByteArrayOutputStream_init();
  BOOL v3 = +[IOSByteArray arrayWithLength:1024];
  if (!a1) {
    JreThrowNullPointerException();
  }
  uint64_t v4 = v3;
  id v5 = [a1 readWithByteArray:v3];
  if (v5 != -1)
  {
    id v6 = v5;
    do
    {
      [(JavaIoByteArrayOutputStream *)v2 writeWithByteArray:v4 withInt:0 withInt:v6];
      id v6 = [a1 readWithByteArray:v4];
    }
    while (v6 != -1);
  }
  return [(JavaIoByteArrayOutputStream *)v2 toByteArray];
}

id LibcoreIoStreams_readFullyWithJavaIoReader_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = new_JavaIoStringWriter_init();
  BOOL v3 = +[IOSCharArray arrayWithLength:1024];
  if (!a1) {
    JreThrowNullPointerException();
  }
  for (uint64_t i = v3;
        ;
        [(JavaIoStringWriter *)v2 writeWithCharArray:i withInt:0 withInt:v5])
  {
    id v5 = [a1 readWithCharArray:i];
    if (v5 == -1) {
      break;
    }
  }
  id v6 = [(JavaIoStringWriter *)v2 description];
  [a1 close];
  return v6;
}

void sub_100289A5C(_Unwind_Exception *exception_object)
{
  if (v1) {
    objc_end_catch();
  }
  _Unwind_Resume(exception_object);
}

void sub_100289A68(void *a1)
{
  objc_begin_catch(a1);
  if (!v1) {
    JreThrowNullPointerException();
  }
  JUMPOUT(0x100289A1CLL);
}

id LibcoreIoStreams_skipAllWithJavaIoInputStream_(void *a1)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_6:
    JreThrowNullPointerException();
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_6;
  }
  do
  {
LABEL_3:
    [a1 skipWithLong:0x7FFFFFFFFFFFFFFFLL];
    id result = [a1 read];
  }
  while (result != -1);
  return result;
}

uint64_t LibcoreIoStreams_skipByReadingWithJavaIoInputStream_withLong_(void *a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100562E50) {
LABEL_19:
  }
    JreThrowNullPointerException();
  uint64_t v4 = (IOSByteArray *)[(id)qword_100562E50 getAndSetWithId:0];
  if (!v4) {
    uint64_t v4 = +[IOSByteArray arrayWithLength:4096];
  }
  uint64_t v5 = 0;
  do
  {
    if (a2 <= v5) {
      break;
    }
    if (!v4) {
      goto LABEL_19;
    }
    uint64_t v6 = JavaLangMath_minWithLong_withLong_(a2 - v5, v4->super.size_);
    if (!a1) {
      goto LABEL_19;
    }
    signed int v7 = v6;
    signed int v8 = [a1 readWithByteArray:v4 withInt:0 withInt:v6];
    signed int v9 = v8 == -1 ? 0 : v8;
    v5 += v9;
  }
  while (v8 != -1 && v8 >= v7);
  [(id)qword_100562E50 setWithId:v4];
  return v5;
}

uint64_t LibcoreIoStreams_copy__WithJavaIoInputStream_withJavaIoOutputStream_(void *a1, void *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v4 = +[IOSByteArray arrayWithLength:0x2000];
  if (!a1) {
    goto LABEL_11;
  }
  uint64_t v5 = v4;
  unsigned int v6 = [a1 readWithByteArray:v4];
  if (v6 != -1)
  {
    unsigned int v7 = v6;
    LODWORD(v8) = 0;
    while (a2)
    {
      uint64_t v8 = v7 + v8;
      objc_msgSend(a2, "writeWithByteArray:withInt:withInt:", v5, 0);
      unsigned int v7 = [a1 readWithByteArray:v5];
      if (v7 == -1) {
        return v8;
      }
    }
LABEL_11:
    JreThrowNullPointerException();
  }
  return 0;
}

NSString *LibcoreIoStreams_readAsciiLineWithJavaIoInputStream_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&LibcoreIoStreams__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v2 = new_JavaLangStringBuilder_initWithInt_(0x50u);
  if (!a1) {
    JreThrowNullPointerException();
  }
  for (uint64_t i = v2; ; [(JavaLangStringBuilder *)i appendWithChar:(unsigned __int16)v4])
  {
    unsigned int v4 = [a1 read];
    if (v4 == 10) {
      break;
    }
    if (v4 == -1)
    {
      uint64_t v8 = new_JavaIoEOFException_init();
      objc_exception_throw(v8);
    }
  }
  int v5 = [(JavaLangStringBuilder *)i length];
  uint64_t v6 = (v5 - 1);
  if (v5 >= 1 && [(JavaLangAbstractStringBuilder *)i charAtWithInt:v6] == 13) {
    [(JavaLangAbstractStringBuilder *)i setLengthWithInt:v6];
  }
  return [(JavaLangStringBuilder *)i description];
}

JavaUtilLocale *LibcoreIcuICU_localeFromStringWithNSString_(void *a1)
{
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v2 = [a1 indexOf:95];
  id v3 = [a1 indexOf:95 fromIndex:(v2 + 1)];
  uint64_t v4 = (v2 + 1);
  if (v2 == -1)
  {
    int v5 = new_JavaUtilLocale_initWithNSString_(a1);
  }
  else
  {
    id v6 = v3;
    id v7 = [a1 substring:0 endIndex:v2];
    if (v6 == -1) {
      int v5 = new_JavaUtilLocale_initWithNSString_withNSString_(v7, [a1 substring:v4]);
    }
    else {
      int v5 = new_JavaUtilLocale_initWithNSString_withNSString_withNSString_(v7, [a1 substring:v4 endIndex:v6], objc_msgSend(a1, "substring:", (v6 + 1)));
    }
  }
  return v5;
}

id LibcoreIcuICU_localesFromStringsWithNSStringArray_(uint64_t a1)
{
  id v2 = new_JavaUtilLinkedHashSet_init();
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v3 = v2;
  uint64_t v4 = (void **)(a1 + 24);
  unint64_t v5 = a1 + 24 + 8 * *(int *)(a1 + 8);
  while ((unint64_t)v4 < v5)
  {
    id v6 = *v4++;
    [(JavaUtilHashSet *)v3 addWithId:LibcoreIcuICU_localeFromStringWithNSString_(v6)];
  }
  id v7 = +[IOSObjectArray arrayWithLength:[(JavaUtilHashSet *)v3 size] type:JavaUtilLocale_class_()];
  return [(JavaUtilAbstractCollection *)v3 toArrayWithNSObjectArray:v7];
}

id LibcoreIcuICU_getDisplayCountryNativeWithNSString_withNSString_(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:a2];
  id v4 = [v3 objectForKey:NSLocaleCountryCode];

  if (v4) {
    return v4;
  }
  else {
    return (id)a1;
  }
}

id LibcoreIcuICU_getDisplayLanguageNativeWithNSString_withNSString_(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:a2];
  id v4 = [v3 objectForKey:NSLocaleLanguageCode];

  if (v4) {
    return v4;
  }
  else {
    return (id)a1;
  }
}

id LibcoreIcuICU_getDisplayVariantNativeWithNSString_withNSString_(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:a2];
  id v4 = [v3 objectForKey:NSLocaleVariantCode];

  if (v4) {
    return v4;
  }
  else {
    return (id)a1;
  }
}

void LibcoreIcuICU_getISO3CountryNativeWithNSString_()
{
}

void LibcoreIcuICU_getISO3LanguageNativeWithNSString_()
{
}

id LibcoreIcuICU_getCurrencyCodeWithNSString_(uint64_t a1)
{
  id v1 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:a1];
  id v2 = objc_alloc_init((Class)NSNumberFormatter);
  [v2 setNumberStyle:2];
  [v2 setLocale:v1];
  return [v2 currencyCode];
}

id LibcoreIcuICU_getCurrencySymbolWithNSString_(uint64_t a1)
{
  id v1 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:a1];
  id v2 = objc_alloc_init((Class)NSNumberFormatter);
  [v2 setNumberStyle:2];
  [v2 setLocale:v1];
  return [v2 currencySymbol];
}

id LibcoreIcuICU_getCurrencyFractionDigitsWithNSString_(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSNumberFormatter);
  [v2 setCurrencyCode:a1];
  return [v2 maximumFractionDigits];
}

id LibcoreIcuICU_getISOLanguages()
{
  int v0 = (void *)qword_100562E58;
  if (!qword_100562E58)
  {
    id v1 = +[LibcoreIcuICU getISOLanguagesNative]_0();
    JreStrongAssign((id *)&qword_100562E58, v1);
    int v0 = (void *)qword_100562E58;
    if (!qword_100562E58) {
      JreThrowNullPointerException();
    }
  }
  return [v0 clone];
}

id LibcoreIcuICU_getISOCountries()
{
  int v0 = (void *)qword_100562E60;
  if (!qword_100562E60)
  {
    id v1 = +[LibcoreIcuICU getISOCountriesNative]_0();
    JreStrongAssign((id *)&qword_100562E60, v1);
    int v0 = (void *)qword_100562E60;
    if (!qword_100562E60) {
      JreThrowNullPointerException();
    }
  }
  return [v0 clone];
}

id LibcoreIcuICU_getAvailableLocales()
{
  int v0 = (void *)qword_100562E68;
  if (!qword_100562E68)
  {
    id v1 = +[IOSObjectArray arrayWithNSArray:type:](IOSObjectArray, "arrayWithNSArray:type:", +[NSLocale availableLocaleIdentifiers], NSString_class_());
    id v2 = LibcoreIcuICU_localesFromStringsWithNSStringArray_((uint64_t)v1);
    JreStrongAssign((id *)&qword_100562E68, v2);
    int v0 = (void *)qword_100562E68;
    if (!qword_100562E68) {
      JreThrowNullPointerException();
    }
  }
  return [v0 clone];
}

id LibcoreIcuICU_getAvailableCalendarLocales()
{
  int v0 = +[LibcoreIcuICU getAvailableCalendarLocalesNative]_0();
  return LibcoreIcuICU_localesFromStringsWithNSStringArray_((uint64_t)v0);
}

id LibcoreIcuICU_getAvailableDateFormatLocales()
{
  int v0 = +[LibcoreIcuICU getAvailableDateFormatLocalesNative]_0();
  return LibcoreIcuICU_localesFromStringsWithNSStringArray_((uint64_t)v0);
}

id LibcoreIcuICU_getAvailableDateFormatSymbolsLocales()
{
  int v0 = +[LibcoreIcuICU getAvailableDateFormatLocalesNative]_0();
  return LibcoreIcuICU_localesFromStringsWithNSStringArray_((uint64_t)v0);
}

id LibcoreIcuICU_getAvailableDecimalFormatSymbolsLocales()
{
  int v0 = +[LibcoreIcuICU getAvailableNumberFormatLocalesNative]_0();
  return LibcoreIcuICU_localesFromStringsWithNSStringArray_((uint64_t)v0);
}

id LibcoreIcuICU_getAvailableNumberFormatLocales()
{
  int v0 = +[LibcoreIcuICU getAvailableNumberFormatLocalesNative]_0();
  return LibcoreIcuICU_localesFromStringsWithNSStringArray_((uint64_t)v0);
}

IOSObjectArray *LibcoreIcuICU_getAvailableCurrencyCodes()
{
  int v0 = +[NSLocale ISOCurrencyCodes];
  uint64_t v1 = NSString_class_();
  return +[IOSObjectArray arrayWithNSArray:v0 type:v1];
}

uint64_t JavaUtilListIterator_class_()
{
  if (qword_100562E78 != -1) {
    dispatch_once(&qword_100562E78, &stru_1004808A0);
  }
  return qword_100562E70;
}

void sub_10028ADC0(id a1)
{
  qword_100562E70 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaUtilListIterator);
}

uint64_t JavaLangAnnotationInherited_class_()
{
  if (qword_100562E88 != -1) {
    dispatch_once(&qword_100562E88, &stru_100480930);
  }
  return qword_100562E80;
}

void sub_10028AFD0(id a1)
{
  qword_100562E80 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangAnnotationInherited);
}

id LibcoreIoAsynchronousCloseMonitor_signalBlockedThreadsWithJavaIoFileDescriptor_(void *a1)
{
  id v1 = [a1 getInt$];
  return +[AsynchronousSocketCloseMonitor signalBlockedThreads:v1];
}

AsynchronousSocketCloseMonitor *LibcoreIoAsynchronousCloseMonitor_newAsynchronousSocketCloseMonitorWithInt_(uint64_t a1)
{
  id v1 = [[AsynchronousSocketCloseMonitor alloc] initWithFileDescriptor:a1];
  return v1;
}

id sub_10028C398(void *a1)
{
  JavaLangReflectType *returnType;
  IOSObjectArray *formalTypeParameters;
  uint64_t vars8;

  id result = [a1 metadata];
  if (result)
  {
    id v3 = [result genericSignature];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    id v5 = [a1 getExceptionTypes];
    id v6 = [[LibcoreReflectGenericSignatureParser alloc] initWithJavaLangClassLoader:JavaLangClassLoader_getSystemClassLoader()];
    id v7 = v6;
    if (isKindOfClass) {
      [(LibcoreReflectGenericSignatureParser *)v6 parseForMethodWithJavaLangReflectGenericDeclaration:a1 withNSString:v3 withIOSClassArray:v5];
    }
    else {
      [(LibcoreReflectGenericSignatureParser *)v6 parseForConstructorWithJavaLangReflectGenericDeclaration:a1 withNSString:v3 withIOSClassArray:v5];
    }
    uint64_t v8 = [GenericInfo alloc];
    exceptionTypes = v7->exceptionTypes_;
    parameterTypes = v7->parameterTypes_;
    returnTypuint64_t e = v7->returnType_;
    formalTypeParameters = v7->formalTypeParameters_;
    return [(GenericInfo *)v8 init:exceptionTypes parameters:parameterTypes returnType:returnType typeParameters:formalTypeParameters];
  }
  return result;
}

id sub_10028CD6C(void *a1)
{
  if ([a1 isEqualToString:@"Byte"])
  {
    return +[IOSClass byteClass];
  }
  else if ([a1 isEqualToString:@"Short"])
  {
    return +[IOSClass shortClass];
  }
  else if ([a1 isEqualToString:@"Int"])
  {
    return +[IOSClass intClass];
  }
  else if ([a1 isEqualToString:@"Long"])
  {
    return +[IOSClass longClass];
  }
  else if ([a1 isEqualToString:@"Float"])
  {
    return +[IOSClass floatClass];
  }
  else if ([a1 isEqualToString:@"Double"])
  {
    return +[IOSClass doubleClass];
  }
  else if ([a1 isEqualToString:@"Char"])
  {
    return +[IOSClass charClass];
  }
  else if ([a1 isEqualToString:@"Boolean"])
  {
    return +[IOSClass BOOLeanClass];
  }
  else
  {
    return 0;
  }
}

JavaLangArithmeticException *new_JavaLangArithmeticException_initWithNSString_(uint64_t a1)
{
  id v2 = [JavaLangArithmeticException alloc];
  JavaLangRuntimeException_initWithNSString_(v2, a1);
  return v2;
}

unint64_t JreDefaultFastEnumeration(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  id v7 = (id)a2[3];
  if (v7)
  {
    uint64_t v8 = (uint64_t (*)(id, const char *))a2[5];
  }
  else
  {
    a2[2] = &unk_10055F8A8;
    id v7 = [a1 iterator];
    a2[3] = v7;
    a2[4] = [v7 methodForSelector:"hasNext"];
    uint64_t v8 = (uint64_t (*)(id, const char *))[v7 methodForSelector:"next"];
    a2[5] = v8;
  }
  signed int v9 = (unsigned int (*)(id, const char *))a2[4];
  a2[1] = a3;
  unint64_t v10 = 0;
  if (v9(v7, "hasNext")) {
    BOOL v11 = a4 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    do
      *(void *)(a3 + 8 * v10++) = v8(v7, "next");
    while (v9(v7, "hasNext") && v10 < a4);
  }
  return v10;
}

id JavaUtilLoggingHandler_init(id *a1)
{
  id v2 = a1 + 1;
  id v3 = new_JavaUtilLoggingErrorManager_init();
  JreStrongAssignAndConsume(v2, v3);
  JreStrongAssign(a1 + 3, (void *)qword_100562E98);
  JreStrongAssign(a1 + 2, 0);
  JreStrongAssign(a1 + 5, 0);
  JreStrongAssign(a1 + 4, 0);
  id v4 = objc_msgSend(objc_msgSend(a1, "getClass"), "getName");
  return JreStrongAssign(a1 + 6, v4);
}

id sub_10028D1A0(id result)
{
  if (result)
  {
    id v1 = (void *)IOSClass_forName_(result);
    if (!v1) {
      JreThrowNullPointerException();
    }
    return [v1 newInstance];
  }
  return result;
}

id sub_10028D1F0(uint64_t a1)
{
  id v2 = JavaLangThread_currentThread();
  if (!v2
    || (id SystemClassLoader = [(JavaLangThread *)v2 getContextClassLoader]) == 0
    && (id SystemClassLoader = (id)JavaLangClassLoader_getSystemClassLoader()) == 0
    || (id v4 = [SystemClassLoader loadClassWithNSString:a1]) == 0)
  {
    JreThrowNullPointerException();
  }
  return [v4 newInstance];
}

uint64_t JavaUtilLoggingHandler_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaUtilLoggingHandler__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562EA8 != -1) {
    dispatch_once(&qword_100562EA8, &stru_100481570);
  }
  return qword_100562EA0;
}

void sub_10028DBC8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562EA0 = IOSClass_fromClass(v1);
}

id sub_10028DD60(void *a1, void *a2, int a3, int a4)
{
  id v8 = [a1 getMetadata];
  id v9 = [v8 allMethods];
  id result = [v8 methodCount];
  if (result)
  {
    unint64_t v11 = 0;
    do
    {
      id v12 = [v9 objectAtIndex:v11];
      if ([v12 isConstructor] == a4)
      {
        unsigned int v14 = [v12 modifiers];
        unsigned int v15 = v14;
        if (!a3 || (v14 & 1) != 0)
        {
          id v16 = [v12 selector];
          CFStringRef v17 = (void *)a1[1];
          if ((v15 & 8) != 0) {
            id v18 = [v17 methodSignatureForSelector:v16];
          }
          else {
            id v18 = [v17 instanceMethodSignatureForSelector:v16];
          }
          id v13 = v18;
          if (v18) {
            objc_msgSend(a2, "setObject:forKey:", +[JavaLangReflectMethod methodWithMethodSignature:selector:class:isStatic:metadata:](JavaLangReflectMethod, "methodWithMethodSignature:selector:class:isStatic:metadata:", v18, v16, a1, (v15 >> 3) & 1, v12), objc_msgSend(v12, "name"));
          }
        }
      }
      ++v11;
      id result = objc_msgSend(v8, "methodCount", v13);
    }
    while (v11 < result);
  }
  return result;
}

JavaNioChannelsClosedSelectorException *new_JavaNioChannelsClosedSelectorException_init()
{
  int v0 = [JavaNioChannelsClosedSelectorException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

JavaNetProtocolException *new_JavaNetProtocolException_initWithNSString_(uint64_t a1)
{
  id v2 = [JavaNetProtocolException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

id JavaNioSelectionKeyImpl_initWithJavaNioChannelsSpiAbstractSelectableChannel_withInt_withId_withJavaNioSelectorImpl_(uint64_t a1, void *a2, int a3, uint64_t a4, void *a5)
{
  JavaNioChannelsSpiAbstractSelectionKey_init(a1);
  JreStrongAssign((id *)(a1 + 17), a2);
  *(_DWORD *)(a1 + 25) = a3;
  JreStrongAssign((id *)(a1 + 33), a5);
  return [(id)a1 attachWithId:a4];
}

JavaNioSelectionKeyImpl *new_JavaNioSelectionKeyImpl_initWithJavaNioChannelsSpiAbstractSelectableChannel_withInt_withId_withJavaNioSelectorImpl_(void *a1, int a2, uint64_t a3, void *a4)
{
  id v8 = [JavaNioSelectionKeyImpl alloc];
  JavaNioSelectionKeyImpl_initWithJavaNioChannelsSpiAbstractSelectableChannel_withInt_withId_withJavaNioSelectorImpl_((uint64_t)v8, a1, a2, a3, a4);
  return v8;
}

uint64_t JavaLangCharSequence_class_()
{
  if (qword_100562EB8 != -1) {
    dispatch_once(&qword_100562EB8, &stru_100481C00);
  }
  return qword_100562EB0;
}

void sub_10028E540(id a1)
{
  qword_100562EB0 = IOSClass_fromProtocol((uint64_t)&OBJC_PROTOCOL___JavaLangCharSequence);
}

uint64_t JavaNioBuffer_initWithInt_withInt_withLong_(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(result + 16) = 0xFFFFFFFFLL;
  *(_DWORD *)(result + 24) = a2;
  if ((a3 & 0x80000000) != 0)
  {
    CFStringRef v8 = JreStrcat("$I", a2, a3, a4, a5, a6, a7, a8, @"capacity < 0: ");
    id v9 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v8);
    objc_exception_throw(v9);
  }
  *(_DWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 12) = a3;
  *(void *)(result + 32) = a4;
  return result;
}

IOSObjectArray *JavaUtilTimeZone_getAvailableIDsWithInt_(int a1)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = (void *)JavaUtilTimeZone_class_();
  objc_sync_enter(v2);
  id v3 = +[NSTimeZone knownTimeZoneNames];
  id v4 = +[NSMutableArray array];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = [(NSArray *)v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = (void *)(a1 / 1000);
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8 * i);
        if ((void *)-[NSTimeZone secondsFromGMT](+[NSTimeZone timeZoneWithName:](NSTimeZone, "timeZoneWithName:", v9), "secondsFromGMT") == v6)[v4 addObject:v9]; {
      }
        }
      id v5 = [(NSArray *)v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }
  unint64_t v10 = +[IOSObjectArray arrayWithNSArray:v4 type:NSString_class_()];
  objc_sync_exit(v2);
  return v10;
}

void sub_10028F05C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10028F28C(uint64_t a1, int a2, unsigned int a3, void *a4)
{
  if (a4)
  {
    id v8 = +[NSMutableDictionary dictionary];
    objc_msgSend(v8, "setObject:forKey:", objc_msgSend(a4, "getLanguage"), NSLocaleLanguageCode);
    objc_msgSend(v8, "setObject:forKey:", objc_msgSend(a4, "getCountry"), NSLocaleCountryCode);
    objc_msgSend(v8, "setObject:forKey:", objc_msgSend(a4, "getVariant"), NSLocaleVariantCode);
    uint64_t v9 = (NSLocale *)objc_msgSend(objc_alloc((Class)NSLocale), "initWithLocaleIdentifier:", +[NSLocale localeIdentifierFromComponents:](NSLocale, "localeIdentifierFromComponents:", v8));
  }
  else
  {
    uint64_t v9 = +[NSLocale currentLocale];
  }
  unint64_t v10 = v9;
  uint64_t v11 = 2;
  if (a3) {
    uint64_t v11 = 3;
  }
  if (a2) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = a3;
  }
  long long v13 = *(void **)(a1 + 16);
  return [v13 localizedName:v12 locale:v10];
}

id sub_10028F3A4(void *a1, int a2, unsigned int a3)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v6 = JavaLangInteger_toStringWithInt_(a3);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  if ((int)(a2 - [(NSString *)v6 length]) >= 1)
  {
    int v8 = 0;
    while (a1)
    {
      [a1 appendWithChar:48];
      if (++v8 >= (int)(a2 - [(NSString *)v7 length])) {
        goto LABEL_8;
      }
    }
LABEL_12:
    JreThrowNullPointerException();
  }
LABEL_8:
  if (!a1) {
    goto LABEL_12;
  }
  return [a1 appendWithNSString:v7];
}

NSString *JavaUtilTimeZone_createGmtOffsetStringWithBoolean_withBoolean_withInt_(int a1, int a2, int a3)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (a3 >= -59999) {
    unsigned int v6 = a3 / 60000;
  }
  else {
    unsigned int v6 = a3 / -60000;
  }
  if (a3 >= -59999) {
    uint64_t v7 = 43;
  }
  else {
    uint64_t v7 = 45;
  }
  int v8 = new_JavaLangStringBuilder_initWithInt_(9u);
  uint64_t v9 = v8;
  if (a1) {
    [(JavaLangStringBuilder *)v8 appendWithNSString:@"GMT"];
  }
  [(JavaLangStringBuilder *)v9 appendWithChar:v7];
  sub_10028F3A4(v9, 2, v6 / 0x3C);
  if (a2) {
    [(JavaLangStringBuilder *)v9 appendWithChar:58];
  }
  sub_10028F3A4(v9, 2, v6 % 0x3C);
  return [(JavaLangStringBuilder *)v9 description];
}

id JavaUtilTimeZone_getTimeZoneWithNSString_(void *a1)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = (void *)JavaUtilTimeZone_class_();
  objc_sync_enter(v2);
  if (!a1)
  {
    int v8 = new_JavaLangNullPointerException_initWithNSString_(@"id == null");
    objc_exception_throw(v8);
  }
  if ([a1 length] != 3) {
    goto LABEL_14;
  }
  if ([a1 isEqual:@"GMT"])
  {
    if (qword_100562EC8)
    {
      id v3 = [(id)qword_100562EC8 clone];
      objc_opt_class();
      if (!v3) {
        goto LABEL_23;
      }
      goto LABEL_12;
    }
LABEL_32:
    JreThrowNullPointerException();
  }
  if (![a1 isEqual:@"UTC"])
  {
LABEL_14:
    if (qword_100562ED8)
    {
      id v4 = [(id)qword_100562ED8 getWithId:a1];
      if (v4)
      {
        id v3 = [v4 clone];
        objc_opt_class();
        if (!v3) {
          goto LABEL_23;
        }
        goto LABEL_17;
      }
      id v3 = sub_10028F8E0((uint64_t)a1);
      if (v3
        || (int)[a1 length] >= 4
        && [a1 hasPrefix:@"GMT"]
        && (id v3 = sub_10028FB54(a1)) != 0)
      {
        id v5 = (void *)qword_100562ED8;
        id v6 = [v3 clone];
        objc_opt_class();
        if (!v6 || (objc_opt_isKindOfClass() & 1) != 0)
        {
          [v5 putWithId:a1 withId:v6];
          goto LABEL_23;
        }
        goto LABEL_31;
      }
      if (qword_100562EC8)
      {
        id v3 = [(id)qword_100562EC8 clone];
        objc_opt_class();
        if (!v3) {
          goto LABEL_23;
        }
LABEL_17:
        if (objc_opt_isKindOfClass()) {
          goto LABEL_23;
        }
LABEL_31:
        JreThrowClassCastException();
      }
    }
    JreThrowNullPointerException();
  }
  if (!qword_100562ED0) {
    goto LABEL_32;
  }
  id v3 = [(id)qword_100562ED0 clone];
  objc_opt_class();
  if (!v3) {
    goto LABEL_23;
  }
LABEL_12:
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
LABEL_23:
  objc_sync_exit(v2);
  return v3;
}

void sub_10028F8C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

NSTimeZone *sub_10028F8E0(uint64_t a1)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = +[NSTimeZone timeZoneWithAbbreviation:a1];
  if (v2
    || (result = +[NSTimeZone timeZoneWithName:a1], (id v2 = result) != 0))
  {
    uint64_t v4 = 1000 * [(NSTimeZone *)v2 secondsFromGMT];
    unsigned int v5 = [(NSTimeZone *)v2 isDaylightSavingTime];
    id v6 = [(NSTimeZone *)v2 nextDaylightSavingTimeTransition];
    uint64_t v7 = [(NSTimeZone *)v2 nextDaylightSavingTimeTransitionAfterDate:v6];
    BOOL v8 = v5 == 0;
    if (v5) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = v7;
    }
    if (!v8) {
      id v6 = v7;
    }
    if (v9) {
      BOOL v10 = v6 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10)
    {
      uint64_t v11 = [[JavaUtilSimpleTimeZone alloc] initWithInt:v4 withNSString:[(NSTimeZone *)v2 name]];
    }
    else
    {
      [(NSTimeZone *)v2 daylightSavingTimeOffsetForDate:v6];
      unint64_t v13 = (unint64_t)(v12 * 1000.0);
      if ([(NSTimeZone *)v2 isDaylightSavingTime]) {
        int v14 = v13;
      }
      else {
        int v14 = 0;
      }
      uint64_t v15 = (v4 - v14);
      id v16 = +[NSCalendar currentCalendar];
      CFStringRef v17 = [(NSCalendar *)v16 components:248 fromDate:v6];
      id v18 = [(NSCalendar *)v16 components:248 fromDate:v9];
      LODWORD(v16) = 3600 * [(NSDateComponents *)v17 hour];
      LODWORD(v16) = v16 + 60 * [(NSDateComponents *)v17 minute];
      uint64_t v19 = 1000 * (v16 + [(NSDateComponents *)v17 second]);
      unsigned int v20 = 3600 * [(NSDateComponents *)v18 hour];
      unsigned int v21 = v20 + 60 * [(NSDateComponents *)v18 minute];
      HIDWORD(v22) = 1000 * (v21 + [(NSDateComponents *)v18 second]);
      LODWORD(v23) = v13;
      LODWORD(v22) = 0;
      uint64_t v11 = -[JavaUtilSimpleTimeZone initWithInt:withNSString:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:]([JavaUtilSimpleTimeZone alloc], "initWithInt:withNSString:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:", v15, [(NSTimeZone *)v2 name], [(NSDateComponents *)v17 month] - 1, [(NSDateComponents *)v17 day], 0, v19, __PAIR64__([(NSDateComponents *)v18 day], [(NSDateComponents *)v18 month] - 1), v22, v23);
    }
    return (NSTimeZone *)v11;
  }
  return result;
}

JavaUtilSimpleTimeZone *sub_10028FB54(void *a1)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100562EC0) {
    goto LABEL_24;
  }
  id v2 = [(id)qword_100562EC0 matcherWithJavaLangCharSequence:a1];
  if (!v2) {
    goto LABEL_24;
  }
  id v3 = v2;
  if (([v2 matches] & 1) == 0) {
    return (JavaUtilSimpleTimeZone *)qword_100562EC8;
  }
  if (!a1) {
    goto LABEL_24;
  }
  if ([a1 isEqual:@"GMT-00"]) {
    return (JavaUtilSimpleTimeZone *)qword_100562EC8;
  }
  id v5 = [v3 groupWithInt:1];
  unsigned int v13 = JavaLangInteger_parseIntWithNSString_(v5, v6, v7, v8, v9, v10, v11, v12);
  if ([v3 groupWithInt:3])
  {
    id v14 = [v3 groupWithInt:3];
    int v22 = JavaLangInteger_parseIntWithNSString_(v14, v15, v16, v17, v18, v19, v20, v21);
  }
  else
  {
    int v22 = 0;
  }
  id result = 0;
  if (v13 <= 0x17 && (v22 & 0x80000000) == 0 && v22 <= 59)
  {
    unsigned int v23 = [a1 charAtWithInt:3];
    if (v23 == 45) {
      int v24 = -(3600000 * v13 + 60000 * v22);
    }
    else {
      int v24 = 3600000 * v13 + 60000 * v22;
    }
    CFStringRef v25 = @"GMT%c%02d:%02d";
    if (![v3 groupWithInt:2]) {
      goto LABEL_23;
    }
    id v26 = [v3 groupWithInt:2];
    if (v26)
    {
      if (!JavaLangCharacter_isDigitWithChar_((UChar32)[v26 charAtWithInt:0])) {
        CFStringRef v25 = @"GMT%c%02d%02d";
      }
LABEL_23:
      v29[0] = JavaLangCharacter_valueOfWithChar_(v23);
      v29[1] = JavaLangInteger_valueOfWithInt_(v13);
      v29[2] = JavaLangInteger_valueOfWithInt_(v22);
      uint64_t v27 = +[IOSObjectArray arrayWithObjects:v29 count:3 type:NSObject_class_()];
      id v28 = NSString_formatWithNSString_withNSObjectArray_((uint64_t)v25, (uint64_t)v27);
      return new_JavaUtilSimpleTimeZone_initWithInt_withNSString_(v24, (uint64_t)v28);
    }
LABEL_24:
    JreThrowNullPointerException();
  }
  return result;
}

void sub_10028FD4C(_Unwind_Exception *exception_object)
{
}

uint64_t JavaUtilTimeZone_setDefaultWithJavaUtilTimeZone_(id a1)
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v2 = (void *)JavaUtilTimeZone_class_();
  objc_sync_enter(v2);
  if (a1)
  {
    a1 = [a1 clone];
    objc_opt_class();
    if (a1)
    {
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        JreThrowClassCastException();
      }
    }
  }
  JreStrongAssign((id *)&qword_100562EE0, a1);
  return objc_sync_exit(v2);
}

void sub_10028FE88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

IOSObjectArray *JavaUtilTimeZone_getAvailableIDs()
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v0 = (void *)JavaUtilTimeZone_class_();
  objc_sync_enter(v0);
  uint64_t v1 = +[IOSObjectArray arrayWithNSArray:type:](IOSObjectArray, "arrayWithNSArray:type:", +[NSTimeZone knownTimeZoneNames], NSString_class_());
  objc_sync_exit(v0);
  return v1;
}

void sub_100290130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaUtilTimeZone_getDefault()
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  int v0 = (void *)JavaUtilTimeZone_class_();
  objc_sync_enter(v0);
  uint64_t v1 = (void *)qword_100562EE0;
  if (!qword_100562EE0)
  {
    id v2 = +[JavaUtilTimeZone getDefaultNativeTimeZone]_0();
    JreStrongAssign((id *)&qword_100562EE0, v2);
    uint64_t v1 = (void *)qword_100562EE0;
    if (!qword_100562EE0) {
      JreThrowNullPointerException();
    }
  }
  id v3 = [v1 clone];
  objc_opt_class();
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  objc_sync_exit(v0);
  return v3;
}

void sub_1002901F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaUtilTimeZone_class_()
{
  if ((atomic_load_explicit(JavaUtilTimeZone__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562EF0 != -1) {
    dispatch_once(&qword_100562EF0, &stru_100482C38);
  }
  return qword_100562EE8;
}

void sub_100290270(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562EE8 = IOSClass_fromClass(v1);
}

id sub_100290498(void *a1)
{
  id v1 = OrgXmlSaxHelpersNewInstance_newInstanceWithNSString_(a1);
  id v2 = (void *)OrgXmlSaxXMLReader_class_();
  if (v1 && ([v2 isInstance:v1] & 1) == 0) {
    JreThrowClassCastException();
  }
  return v1;
}

void sub_1002904E4()
{
}

void sub_10029061C()
{
}

OrgXmlSaxHelpersParserAdapter *OrgXmlSaxHelpersXMLReaderFactory_createXMLReader()
{
  id PropertyWithNSString = JavaLangSystem_getPropertyWithNSString_(off_10055F8B8);
  if (PropertyWithNSString)
  {
    return (OrgXmlSaxHelpersParserAdapter *)sub_100290498(PropertyWithNSString);
  }
  else
  {
    id Parser = OrgXmlSaxHelpersParserFactory_makeParser();
    return new_OrgXmlSaxHelpersParserAdapter_initWithOrgXmlSaxParser_(Parser);
  }
}

IOSByteArray *JavaNioCharsetCharsets_toBigEndianUtf16BytesWithCharArray_withInt_withInt_(uint64_t a1, int a2, int a3)
{
  if ((atomic_load_explicit(JavaNioCharsetCharsets__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v6 = +[IOSByteArray arrayWithLength:2 * a3];
  if (a3 + a2 > a2)
  {
    if (!a1) {
      JreThrowNullPointerException();
    }
    uint64_t v7 = 0;
    uint64_t v8 = a2;
    uint64_t v9 = a1 + 2 * a2;
    do
    {
      uint64_t v10 = *(unsigned int *)(a1 + 8);
      if (v8 < 0 || v8 >= (int)v10) {
        IOSArray_throwOutOfBoundsWithMsg(v10, v8);
      }
      __int16 v11 = *(_WORD *)(v9 + 12 + v7);
      uint64_t size = v6->super.size_;
      if ((v7 & 0x80000000) != 0 || (int)v7 >= (int)size) {
        IOSArray_throwOutOfBoundsWithMsg(size, v7);
      }
      int v13 = v7 + 1;
      *((unsigned char *)&v6->super.size_ + (int)v7 + 4) = HIBYTE(v11);
      uint64_t v14 = v6->super.size_;
      if ((v7 & 0x80000000) != 0 || v13 >= (int)v14) {
        IOSArray_throwOutOfBoundsWithMsg(v14, v7 + 1);
      }
      *((unsigned char *)&v6->super.size_ + v13 + 4) = v11;
      ++v8;
      v7 += 2;
      --a3;
    }
    while (a3);
  }
  return v6;
}

id JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(id *a1, void *a2, __CFString *a3)
{
  JavaIoWriter_initWithId_((uint64_t)a1, a2);
  int v13 = JavaNioByteBuffer_allocateWithInt_(0x2000u, v6, v7, v8, v9, v10, v11, v12);
  JreStrongAssign(a1 + 4, v13);
  if (!a3)
  {
    uint64_t v19 = new_JavaLangNullPointerException_initWithNSString_(@"charsetName == null");
    objc_exception_throw(v19);
  }
  JreStrongAssign(a1 + 2, a2);
  id v14 = JavaNioCharsetCharset_forNameWithNSString_(a3);
  if (!v14) {
    JreThrowNullPointerException();
  }
  JreStrongAssign(a1 + 3, [v14 newEncoder]);
  id v15 = a1[3];
  if (!v15) {
    JreThrowNullPointerException();
  }
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  [v15 onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_];
  id v16 = a1[3];
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v17 = JavaNioCharsetCodingErrorAction_REPLACE_;
  return [v16 onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:v17];
}

void sub_100290AE8(_Unwind_Exception *a1)
{
}

id JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_(id *a1, void *a2, void *a3)
{
  JavaIoWriter_initWithId_((uint64_t)a1, a2);
  int v13 = JavaNioByteBuffer_allocateWithInt_(0x2000u, v6, v7, v8, v9, v10, v11, v12);
  JreStrongAssign(a1 + 4, v13);
  JreStrongAssign(a1 + 2, a2);
  if (!a3 || (JreStrongAssign(a1 + 3, [a3 newEncoder]), (id v14 = a1[3]) == 0)) {
    JreThrowNullPointerException();
  }
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  [v14 onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_];
  id v15 = a1[3];
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v16 = JavaNioCharsetCodingErrorAction_REPLACE_;
  return [v15 onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:v16];
}

id JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharsetEncoder_(id *a1, void *a2, void *a3)
{
  JavaIoWriter_initWithId_((uint64_t)a1, a2);
  int v13 = JavaNioByteBuffer_allocateWithInt_(0x2000u, v6, v7, v8, v9, v10, v11, v12);
  JreStrongAssign(a1 + 4, v13);
  if (!a3) {
    JreThrowNullPointerException();
  }
  [a3 charset];
  JreStrongAssign(a1 + 2, a2);
  return JreStrongAssign(a1 + 3, a3);
}

void sub_100290DB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100290EE0(uint64_t a1, int a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  objc_sync_enter(v4);
  sub_1002910D8(a1);
  id v5 = *(void **)(a1 + 32);
  if (!v5) {
    goto LABEL_11;
  }
  id v6 = [v5 position];
  if ((int)v6 >= 1)
  {
    [*(id *)(a1 + 32) flip];
    uint64_t v7 = *(void **)(a1 + 16);
    if (!v7) {
      goto LABEL_11;
    }
    objc_msgSend(v7, "writeWithByteArray:withInt:withInt:", objc_msgSend(*(id *)(a1 + 32), "array"), objc_msgSend(*(id *)(a1 + 32), "arrayOffset"), v6);
    [*(id *)(a1 + 32) clear];
  }
  if (!a2) {
    goto LABEL_8;
  }
  uint64_t v8 = *(void **)(a1 + 16);
  if (!v8) {
LABEL_11:
  }
    JreThrowNullPointerException();
  [v8 flush];
LABEL_8:
  return objc_sync_exit(v4);
}

void sub_100290FE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100291014(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 24);
  if (!v3) {
LABEL_5:
  }
    JreThrowNullPointerException();
  while (1)
  {
    id v5 = [v3 encodeWithJavaNioCharBuffer:a2 withJavaNioByteBuffer:*(void *)(a1 + 32) withBoolean:0];
    if (!v5) {
      goto LABEL_5;
    }
    id v6 = v5;
    if (([v5 isOverflow] & 1) == 0) {
      break;
    }
    sub_100290EE0(a1, 0);
    id v3 = *(void **)(a1 + 24);
    if (!v3) {
      goto LABEL_5;
    }
  }
  id result = [v6 isError];
  if (result)
  {
    return [v6 throwException];
  }
  return result;
}

uint64_t sub_1002910D8(uint64_t result)
{
  if (!*(void *)(result + 24))
  {
    id v1 = new_JavaIoIOException_initWithNSString_(@"OutputStreamWriter is closed");
    objc_exception_throw(v1);
  }
  return result;
}

void sub_10029120C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002912A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002913B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoOutputStreamWriter *new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_(void *a1)
{
  id v2 = [JavaIoOutputStreamWriter alloc];
  id v3 = (void *)JavaNioCharsetCharset_defaultCharset();
  JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_((id *)&v2->super.super.isa, a1, v3);
  return v2;
}

JavaIoOutputStreamWriter *new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(void *a1, __CFString *a2)
{
  uint64_t v4 = [JavaIoOutputStreamWriter alloc];
  JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_((id *)&v4->super.super.isa, a1, a2);
  return v4;
}

JavaIoOutputStreamWriter *new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_(void *a1, void *a2)
{
  uint64_t v4 = [JavaIoOutputStreamWriter alloc];
  JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_((id *)&v4->super.super.isa, a1, a2);
  return v4;
}

__CFString *LibcoreNetUrlUrlUtils_canonicalizePathWithNSString_withBoolean_(__CFString *a1, int a2)
{
  if (!a1) {
LABEL_19:
  }
    JreThrowNullPointerException();
  id v3 = a1;
  uint64_t v4 = 0;
  int v5 = 0;
  uint64_t v6 = 0;
  while ((int)v4 <= (int)[(__CFString *)v3 length])
  {
    uint64_t v7 = v4;
    if (v4 != [(__CFString *)v3 length])
    {
      uint64_t v7 = (v4 + 1);
      if ([(__CFString *)v3 charAtWithInt:v4] != 47) {
        goto LABEL_18;
      }
    }
    if (v4 != v6 + 1
      || ![(__CFString *)v3 regionMatches:v6 aString:@"." otherOffset:0 count:1])
    {
      if (v4 != v6 + 2
        || ![(__CFString *)v3 regionMatches:v6 aString:@".." otherOffset:0 count:2])
      {
        if ((int)v4 > 0) {
          ++v5;
        }
LABEL_16:
        uint64_t v6 = (v4 + 1);
        goto LABEL_17;
      }
      if (v5 <= 0 && !a2) {
        goto LABEL_16;
      }
      --v5;
      uint64_t v6 = [(__CFString *)v3 lastIndexOf:47 fromIndex:(v6 - 2)]+ 1;
    }
    id v8 = [(__CFString *)v3 substring:0 endIndex:v6];
    [(__CFString *)v3 substring:v7];
    id v3 = (__CFString *)JreStrcat("$$", v9, v10, v11, v12, v13, v14, v15, v8);
LABEL_17:
    uint64_t v7 = v6;
LABEL_18:
    uint64_t v4 = v7;
    if (!v3) {
      goto LABEL_19;
    }
  }
  return v3;
}

CFStringRef LibcoreNetUrlUrlUtils_authoritySafePathWithNSString_withNSString_(void *a1, void *a2)
{
  if (!a1 || ([a1 isEmpty] & 1) != 0) {
    return (const __CFString *)a2;
  }
  if (!a2) {
    JreThrowNullPointerException();
  }
  if (([a2 isEmpty] & 1) != 0
    || ([a2 hasPrefix:@"/"] & 1) != 0)
  {
    return (const __CFString *)a2;
  }
  else
  {
    return JreStrcat("C$", v3, v4, v5, v6, v7, v8, v9, (id)0x2F);
  }
}

id LibcoreNetUrlUrlUtils_getSchemePrefixWithNSString_(void *a1)
{
  if (!a1) {
    goto LABEL_17;
  }
  id v2 = [a1 indexOf:58];
  if ((int)v2 < 1) {
    return 0;
  }
  id v3 = v2;
  uint64_t v4 = 0;
  do
  {
    unsigned int v5 = [a1 charAtWithInt:v4];
    if ((v5 & 0xFFFFFFDF) - 65 >= 0x1A
      && (!v4 || v5 - 48 >= 0xA && (v5 > 0x2E || ((1 << v5) & 0x680000000000) == 0)))
    {
      return 0;
    }
    uint64_t v4 = (v4 + 1);
  }
  while (v3 != v4);
  id v6 = [a1 substring:0 endIndex:v3];
  if (!v6) {
LABEL_17:
  }
    JreThrowNullPointerException();
  uint64_t v7 = v6;
  if ((atomic_load_explicit(JavaUtilLocale__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  uint64_t v8 = JavaUtilLocale_US_;
  return [v7 lowercaseStringWithJRELocale:v8];
}

uint64_t LibcoreNetUrlUrlUtils_isValidSchemeCharWithInt_withChar_(int a1, unsigned int a2)
{
  unint64_t v2 = (0x680000000000uLL >> a2) & 1;
  if (a2 > 0x2E) {
    LODWORD(v2) = 0;
  }
  if (a2 - 48 >= 0xA) {
    unsigned int v3 = v2;
  }
  else {
    unsigned int v3 = 1;
  }
  if (a1 < 1) {
    unsigned int v3 = 0;
  }
  if ((a2 & 0xFFFFFFDF) - 65 >= 0x1A) {
    return v3;
  }
  else {
    return 1;
  }
}

uint64_t LibcoreNetUrlUrlUtils_findFirstOfWithNSString_withNSString_withInt_withInt_(void *a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v5 = a3;
  if ((int)a3 < a4)
  {
    if (!a1) {
LABEL_10:
    }
      JreThrowNullPointerException();
    do
    {
      id v8 = [a1 charAtWithInt:v5];
      if (!a2) {
        goto LABEL_10;
      }
      if ([a2 indexOf:v8] != -1) {
        goto LABEL_7;
      }
      uint64_t v5 = (v5 + 1);
    }
    while (a4 != v5);
    LODWORD(v5) = a4;
  }
LABEL_7:
  if ((int)v5 >= a4) {
    return a4;
  }
  else {
    return v5;
  }
}

JavaNetUnknownHostException *new_JavaNetUnknownHostException_initWithNSString_(uint64_t a1)
{
  unint64_t v2 = [JavaNetUnknownHostException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

id OrgXmlSaxSAXException_init(uint64_t a1, uint64_t a2)
{
  JavaLangException_init(a1, a2);
  return JreStrongAssign((id *)(a1 + 88), 0);
}

id OrgXmlSaxSAXException_initWithNSString_(uint64_t a1, uint64_t a2)
{
  JavaLangException_initWithNSString_(a1, a2);
  return JreStrongAssign((id *)(a1 + 88), 0);
}

id OrgXmlSaxSAXException_initWithNSString_withJavaLangException_(uint64_t a1, uint64_t a2, void *a3)
{
  JavaLangException_initWithNSString_(a1, a2);
  return JreStrongAssign((id *)(a1 + 88), a3);
}

OrgXmlSaxSAXException *new_OrgXmlSaxSAXException_initWithNSString_(uint64_t a1)
{
  unint64_t v2 = [OrgXmlSaxSAXException alloc];
  JavaLangException_initWithNSString_(v2, a1);
  JreStrongAssign((id *)&v2->exception_, 0);
  return v2;
}

OrgXmlSaxSAXException *new_OrgXmlSaxSAXException_initWithNSString_withJavaLangException_(uint64_t a1, void *a2)
{
  uint64_t v4 = [OrgXmlSaxSAXException alloc];
  JavaLangException_initWithNSString_(v4, a1);
  JreStrongAssign((id *)&v4->exception_, a2);
  return v4;
}

id JavaLangTypeNotPresentException_initWithNSString_withJavaLangThrowable_(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFStringRef v11 = JreStrcat("$$$", (uint64_t)a2, a3, a4, a5, a6, a7, a8, @"Type ");
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(a1, v11, a3);
  return JreStrongAssign((id *)(a1 + 88), a2);
}

JavaLangTypeNotPresentException *new_JavaLangTypeNotPresentException_initWithNSString_withJavaLangThrowable_(void *a1, uint64_t a2)
{
  uint64_t v4 = [JavaLangTypeNotPresentException alloc];
  JavaLangTypeNotPresentException_initWithNSString_withJavaLangThrowable_((uint64_t)v4, a1, a2, v5, v6, v7, v8, v9);
  return v4;
}

JavaNioChannelsAlreadyConnectedException *new_JavaNioChannelsAlreadyConnectedException_init()
{
  int v0 = [JavaNioChannelsAlreadyConnectedException alloc];
  JavaLangIllegalStateException_init(v0, v1);
  return v0;
}

id JavaIoObjectStreamField_initWithNSString_withIOSClass_withBoolean_(uint64_t a1, void *a2, JavaLangRefWeakReference *a3, char a4)
{
  if (!a2)
  {
    CFStringRef v8 = @"name == null";
    goto LABEL_8;
  }
  uint64_t v4 = a3;
  if (!a3)
  {
    CFStringRef v8 = @"cl == null";
LABEL_8:
    uint64_t v9 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v8);
    objc_exception_throw(v9);
  }
  JreStrongAssign((id *)(a1 + 16), a2);
  if ([(JavaLangRefWeakReference *)v4 getClassLoader]) {
    uint64_t v4 = new_JavaLangRefWeakReference_initWithId_((unint64_t)v4);
  }
  id result = JreStrongAssign((id *)(a1 + 24), v4);
  *(unsigned char *)(a1 + 40) = a4;
  return result;
}

uint64_t JavaIoObjectStreamField_initWithNSString_withNSString_(uint64_t a1, void *a2, void *a3)
{
  if (!a3)
  {
    uint64_t v7 = new_JavaLangNullPointerException_initWithNSString_(@"name == null");
    objc_exception_throw(v7);
  }
  JreStrongAssign((id *)(a1 + 16), a3);
  if (!a2 || (id v5 = [a2 replace:46 withChar:47]) == 0) {
    JreThrowNullPointerException();
  }
  JreStrongAssign((id *)(a1 + 32), [v5 intern]);
  uint64_t result = -[JavaIoObjectStreamField defaultResolve]_0(a1);
  *(unsigned char *)(a1 + 41) = 1;
  return result;
}

uint64_t sub_1002923E8(id a1)
{
  if (+[IOSClass intClass] == a1) {
    return 73;
  }
  if (+[IOSClass byteClass] == a1) {
    return 66;
  }
  if (+[IOSClass charClass] == a1) {
    return 67;
  }
  if (+[IOSClass shortClass] == a1) {
    return 83;
  }
  if (+[IOSClass BOOLeanClass] == a1) {
    return 90;
  }
  if (+[IOSClass longClass] == a1) {
    return 74;
  }
  if (+[IOSClass floatClass] == a1) {
    return 70;
  }
  if (+[IOSClass doubleClass] == a1) {
    return 68;
  }
  if (!a1) {
    JreThrowNullPointerException();
  }
  if ([a1 isArray]) {
    return 91;
  }
  else {
    return 76;
  }
}

JavaIoObjectStreamField *new_JavaIoObjectStreamField_initWithNSString_withIOSClass_(void *a1, JavaLangRefWeakReference *a2)
{
  uint64_t v4 = [JavaIoObjectStreamField alloc];
  JavaIoObjectStreamField_initWithNSString_withIOSClass_withBoolean_((uint64_t)v4, a1, a2, 0);
  return v4;
}

uint64_t JavaIoObjectStreamField_class_()
{
  if (qword_100562F00 != -1) {
    dispatch_once(&qword_100562F00, &stru_1004844A0);
  }
  return qword_100562EF8;
}

void sub_100292A8C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562EF8 = IOSClass_fromClass(v1);
}

id JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(uint64_t a1, void *a2, __CFString *a3)
{
  JavaIoReader_initWithId_(a1, a2);
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v13 = JavaNioByteBuffer_allocateWithInt_(0x2000u, v6, v7, v8, v9, v10, v11, v12);
  JreStrongAssign((id *)(a1 + 40), v13);
  if (!a3)
  {
    uint64_t v19 = new_JavaLangNullPointerException_initWithNSString_(@"charsetName == null");
    objc_exception_throw(v19);
  }
  JreStrongAssign((id *)(a1 + 16), a2);
  id v14 = JavaNioCharsetCharset_forNameWithNSString_(a3);
  if (!v14) {
    goto LABEL_13;
  }
  id v15 = [v14 newDecoder];
  if (!v15) {
    goto LABEL_13;
  }
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v16 = [v15 onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_];
  if (!v16) {
LABEL_13:
  }
    JreThrowNullPointerException();
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JreStrongAssign((id *)(a1 + 32), [v16 onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_]);
  uint64_t v17 = *(void **)(a1 + 40);
  if (!v17) {
    JreThrowNullPointerException();
  }
  return [v17 limitWithInt:0];
}

void sub_100292CDC(_Unwind_Exception *a1)
{
}

id JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharsetDecoder_(uint64_t a1, void *a2, void *a3)
{
  JavaIoReader_initWithId_(a1, a2);
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v13 = JavaNioByteBuffer_allocateWithInt_(0x2000u, v6, v7, v8, v9, v10, v11, v12);
  JreStrongAssign((id *)(a1 + 40), v13);
  if (!a3
    || ([a3 averageCharsPerByte],
        JreStrongAssign((id *)(a1 + 16), a2),
        JreStrongAssign((id *)(a1 + 32), a3),
        (id v14 = *(void **)(a1 + 40)) == 0))
  {
    JreThrowNullPointerException();
  }
  return [v14 limitWithInt:0];
}

id JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(uint64_t a1, void *a2, void *a3)
{
  JavaIoReader_initWithId_(a1, a2);
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v13 = JavaNioByteBuffer_allocateWithInt_(0x2000u, v6, v7, v8, v9, v10, v11, v12);
  JreStrongAssign((id *)(a1 + 40), v13);
  JreStrongAssign((id *)(a1 + 16), a2);
  if (!a3) {
    goto LABEL_12;
  }
  id v14 = [a3 newDecoder];
  if (!v14) {
    goto LABEL_12;
  }
  id v15 = v14;
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  id v16 = [v15 onMalformedInputWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_];
  if (!v16) {
    goto LABEL_12;
  }
  uint64_t v17 = v16;
  if ((atomic_load_explicit(JavaNioCharsetCodingErrorAction__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  JreStrongAssign((id *)(a1 + 32), [v17 onUnmappableCharacterWithJavaNioCharsetCodingErrorAction:JavaNioCharsetCodingErrorAction_REPLACE_]);
  uint64_t v18 = *(void **)(a1 + 40);
  if (!v18) {
LABEL_12:
  }
    JreThrowNullPointerException();
  return [v18 limitWithInt:0];
}

void sub_100292FDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029312C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002934F0()
{
}

void sub_1002935EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaIoInputStreamReader *new_JavaIoInputStreamReader_initWithJavaIoInputStream_(void *a1)
{
  unint64_t v2 = [JavaIoInputStreamReader alloc];
  unsigned int v3 = (void *)JavaNioCharsetCharset_defaultCharset();
  JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_((uint64_t)v2, a1, v3);
  return v2;
}

JavaIoInputStreamReader *new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(void *a1, __CFString *a2)
{
  uint64_t v4 = [JavaIoInputStreamReader alloc];
  JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_((uint64_t)v4, a1, a2);
  return v4;
}

JavaIoInputStreamReader *new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharsetDecoder_(void *a1, void *a2)
{
  uint64_t v4 = [JavaIoInputStreamReader alloc];
  JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharsetDecoder_((uint64_t)v4, a1, a2);
  return v4;
}

JavaIoInputStreamReader *new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(void *a1, void *a2)
{
  uint64_t v4 = [JavaIoInputStreamReader alloc];
  JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_((uint64_t)v4, a1, a2);
  return v4;
}

JavaUtilRegexPattern *JavaUtilRegexPattern_compileWithNSString_withInt_(void *a1, uint64_t a2)
{
  uint64_t v4 = [JavaUtilRegexPattern alloc];
  sub_100293974((uint64_t)v4, a1, a2, v5, v6, v7, v8, v9);
  return v4;
}

JavaUtilRegexPattern *JavaUtilRegexPattern_compileWithNSString_(void *a1)
{
  unint64_t v2 = [JavaUtilRegexPattern alloc];
  JreStrongAssign((id *)&v2->pattern_, a1);
  v2->flags_ = 0;
  sub_100293A04((uint64_t)v2);
  return v2;
}

URegularExpression *sub_100293974(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a3 & 0x80) != 0)
  {
    uint64_t v11 = new_JavaLangUnsupportedOperationException_initWithNSString_(@"CANON_EQ flag not supported");
    goto LABEL_8;
  }
  int v8 = a3;
  if ((a3 & 0xFFFFFF80) != 0)
  {
    CFStringRef v12 = JreStrcat("$I", (uint64_t)a2, a3, a4, a5, a6, a7, a8, @"Unsupported flags: ");
    uint64_t v11 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v12);
LABEL_8:
    objc_exception_throw(v11);
  }
  JreStrongAssign((id *)(a1 + 16), a2);
  *(_DWORD *)(a1 + 24) = v8;
  return sub_100293A04(a1);
}

URegularExpression *sub_100293A04(uint64_t a1)
{
  id v2 = *(id *)(a1 + 16);
  if (!v2)
  {
    uint64_t v5 = new_JavaLangNullPointerException_initWithNSString_(@"pattern == null");
    objc_exception_throw(v5);
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x10) != 0)
  {
    id v2 = JavaUtilRegexPattern_quoteWithNSString_(v2);
    int v3 = *(_DWORD *)(a1 + 24);
  }
  uint64_t result = JavaUtilRegexPattern_compileImplWithNSString_withInt_(v2, v3 & 0x2F);
  *(void *)(a1 + 8) = result;
  return result;
}

BOOL JavaUtilRegexPattern_matchesWithNSString_withJavaLangCharSequence_(void *a1, uint64_t a2)
{
  uint64_t v4 = [JavaUtilRegexPattern alloc];
  JreStrongAssign((id *)&v4->pattern_, a1);
  v4->flags_ = 0;
  sub_100293A04((uint64_t)v4);
  uint64_t v5 = new_JavaUtilRegexMatcher_initWithJavaUtilRegexPattern_withJavaLangCharSequence_((uint64_t)v4, a2);
  return [(JavaUtilRegexMatcher *)v5 matches];
}

id JavaUtilRegexPattern_quoteWithNSString_(void *a1)
{
  id v2 = new_JavaLangStringBuilder_init();
  [(JavaLangStringBuilder *)v2 appendWithNSString:@"\\Q"];
  if (!a1) {
    goto LABEL_13;
  }
  unsigned int v3 = [a1 indexOfString:@"\\E" fromIndex:0];
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = v3 + 2;
      id v6 = -[JavaLangStringBuilder appendWithNSString:](v2, "appendWithNSString:", [a1 substring:v4 endIndex:v5]);
      if (!v6) {
        goto LABEL_13;
      }
      [v6 appendWithNSString:@"\\\\E\\Q"];
      unsigned int v3 = [a1 indexOfString:@"\\E" fromIndex:v5];
      uint64_t v4 = v5;
      if ((v3 & 0x80000000) != 0) {
        goto LABEL_8;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_8:
  id v7 = -[JavaLangStringBuilder appendWithNSString:](v2, "appendWithNSString:", [a1 substring:v5]);
  if (!v7 || (id v8 = [v7 appendWithNSString:@"\\E"]) == 0) {
LABEL_13:
  }
    JreThrowNullPointerException();
  return [v8 description];
}

void sub_100293C50(_Unwind_Exception *a1)
{
}

void JavaUtilRegexPattern_closeImplWithLong_(URegularExpression *regexp)
{
  if (qword_100562F10 != -1) {
    dispatch_once(&qword_100562F10, &stru_100484E00);
  }
  int v2 = qword_100562F08;
  Java_java_util_regex_Pattern_closeImpl((int)J2ObjC_JNIEnv, v2, regexp);
}

URegularExpression *JavaUtilRegexPattern_compileImplWithNSString_withInt_(void *a1, int a2)
{
  if (qword_100562F10 != -1) {
    dispatch_once(&qword_100562F10, &stru_100484E00);
  }
  uint64_t v4 = qword_100562F08;
  return Java_java_util_regex_Pattern_compileImpl((uint64_t)J2ObjC_JNIEnv, v4, a1, a2);
}

void sub_100293DC0(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562F08 = IOSClass_fromClass(v1);
}

void sub_1002940FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilRandom *new_JavaUtilRandom_init()
{
  int v0 = [JavaUtilRandom alloc];
  uint64_t v1 = JavaLangSystem_nanoTime();
  unint64_t v2 = atomic_load((unint64_t *)&qword_100562F18);
  [(JavaUtilRandom *)v0 setSeedWithLong:v2 + v1];
  atomic_fetch_add(&qword_100562F18, 1uLL);
  return v0;
}

LibcoreIoStructAddrinfo *new_LibcoreIoStructAddrinfo_init()
{
  return [LibcoreIoStructAddrinfo alloc];
}

id JavaLangStringBuffer_initWithNSString_(void *a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  JavaLangAbstractStringBuilder_initWithInt_((uint64_t)a1, [a2 length] + 16);
  return [a1 appendWithNSString:a2];
}

void sub_1002944B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002945D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002946D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002947BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002948BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002949E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294A58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294B4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294BAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294D30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100294F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029500C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029511C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002951A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002952E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029535C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002953B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295430(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029549C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100295674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002956D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaLangStringBuffer *new_JavaLangStringBuffer_init()
{
  int v0 = [JavaLangStringBuffer alloc];
  JavaLangAbstractStringBuilder_init((uint64_t)v0);
  return v0;
}

JavaLangStringBuffer *new_JavaLangStringBuffer_initWithInt_(unsigned int a1)
{
  unint64_t v2 = [JavaLangStringBuffer alloc];
  JavaLangAbstractStringBuilder_initWithInt_((uint64_t)v2, a1);
  return v2;
}

id JavaUtilConcurrentCopyOnWriteArrayList_init(uint64_t a1)
{
  if ((atomic_load_explicit(LibcoreUtilEmptyArray__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = (void *)LibcoreUtilEmptyArray_OBJECT_;
  return JreVolatileStrongAssign((atomic_ullong *)(a1 + 8), v2);
}

id JavaUtilConcurrentCopyOnWriteArrayList_initWithJavaUtilCollection_(uint64_t a1, void *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  unsigned int v3 = [a2 toArray];
  objc_opt_class();
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return JavaUtilConcurrentCopyOnWriteArrayList_initWithNSObjectArray_(a1, v3);
}

id JavaUtilConcurrentCopyOnWriteArrayList_initWithNSObjectArray_(uint64_t a1, _DWORD *a2)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  unsigned int v3 = (atomic_ullong *)(a1 + 8);
  unsigned int v4 = a2[2];
  uint64_t v5 = NSObject_class_();
  id v6 = (void *)IOSClass_arrayType(v5, 1u);
  id v7 = JavaUtilArrays_copyOfWithNSObjectArray_withInt_withIOSClass_(a2, v4, v6);
  return JreVolatileStrongAssign(v3, v7);
}

void sub_1002959E8(_Unwind_Exception *a1)
{
}

uint64_t JavaUtilConcurrentCopyOnWriteArrayList_containsAllWithJavaUtilCollection_withNSObjectArray_withInt_withInt_(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  if (!a1) {
    JreThrowNullPointerException();
  }
  id v8 = [a1 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(a1);
        }
        if (JavaUtilConcurrentCopyOnWriteArrayList_indexOfWithId_withNSObjectArray_withInt_withInt_(*(void **)(*((void *)&v13 + 1) + 8 * i), a2, a3, a4) == -1)return 0; {
      }
        }
      id v9 = [a1 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }
  return 1;
}

uint64_t JavaUtilConcurrentCopyOnWriteArrayList_indexOfWithId_withNSObjectArray_withInt_withInt_(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4 = a3;
  if (a1)
  {
    if ((int)a3 < a4)
    {
      if (a2)
      {
        uint64_t v4 = (int)a3;
        while (1)
        {
          uint64_t v8 = *(unsigned int *)(a2 + 8);
          if (v4 < 0 || v4 >= (int)v8) {
            IOSArray_throwOutOfBoundsWithMsg(v8, v4);
          }
          if ([a1 isEqual:*(void *)(a2 + 24 + 8 * v4)]) {
            break;
          }
          if (a4 == ++v4) {
            return 0xFFFFFFFFLL;
          }
        }
        return v4;
      }
LABEL_22:
      JreThrowNullPointerException();
    }
    return 0xFFFFFFFFLL;
  }
  if ((int)a3 >= a4) {
    return 0xFFFFFFFFLL;
  }
  if (!a2) {
    goto LABEL_22;
  }
  for (uint64_t i = a2 + 8 * (int)a3; ; i += 8)
  {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
    if ((v4 & 0x80000000) != 0 || (int)v4 >= (int)v10) {
      IOSArray_throwOutOfBoundsWithMsg(v10, v4);
    }
    if (!*(void *)(i + 24)) {
      break;
    }
    uint64_t v4 = (v4 + 1);
    if (a4 == v4) {
      return 0xFFFFFFFFLL;
    }
  }
  return v4;
}

uint64_t JavaUtilConcurrentCopyOnWriteArrayList_lastIndexOfWithId_withNSObjectArray_withInt_withInt_(void *a1, uint64_t a2, int a3, int a4)
{
  LODWORD(v4) = a4;
  if (a1)
  {
    while (1)
    {
      uint64_t v8 = (v4 - 1);
      if ((int)v8 < a3) {
        break;
      }
      if (!a2) {
        goto LABEL_18;
      }
      uint64_t v4 = (v4 - 1);
      uint64_t v9 = *(unsigned int *)(a2 + 8);
      if ((v8 & 0x80000000) != 0 || (int)v8 >= (int)v9) {
        IOSArray_throwOutOfBoundsWithMsg(v9, v8);
      }
      if ([a1 isEqual:*(void *)(a2 + 24 + 8 * (int)v8)]) {
        return v4;
      }
    }
  }
  else
  {
    while (1)
    {
      uint64_t v4 = (v4 - 1);
      if ((int)v4 < a3) {
        break;
      }
      if (!a2) {
LABEL_18:
      }
        JreThrowNullPointerException();
      uint64_t v10 = *(unsigned int *)(a2 + 8);
      if ((v4 & 0x80000000) != 0 || (int)v4 >= (int)v10) {
        IOSArray_throwOutOfBoundsWithMsg(v10, v4);
      }
      if (!*(void *)(a2 + 24 + 8 * (int)v4)) {
        return v4;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_1002965CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002966D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100296754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029689C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100296A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100296AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100296B54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100296C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100296C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3 = (unint64_t *)(a1 + 8);
  unint64_t v4 = atomic_load((unint64_t *)(a1 + 8));
  if (!v4) {
    JreThrowNullPointerException();
  }
  id v7 = +[IOSObjectArray arrayWithLength:(int)a2 - (int)a3 + *(_DWORD *)(v4 + 8) type:NSObject_class_()];
  uint64_t v8 = (void *)atomic_load(v3);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v8, 0, v7, 0, a2);
  uint64_t v9 = (void *)atomic_load(v3);
  unint64_t v10 = atomic_load(v3);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v9, a3, v7, a2, (*(_DWORD *)(v10 + 8) - a3));
  return JreVolatileStrongAssign((atomic_ullong *)v3, v7);
}

void sub_100296D50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100296DD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100296DEC(uint64_t a1, void *a2, int a3, int a4, uint64_t a5)
{
  if (a4 < (int)a5)
  {
    if (a2)
    {
      uint64_t v8 = (unint64_t *)(a1 + 8);
      uint64_t v9 = a4;
      uint64_t v10 = (int)a5;
      while (1)
      {
        unint64_t v11 = atomic_load(v8);
        if (!v11) {
          goto LABEL_31;
        }
        uint64_t v12 = *(unsigned int *)(v11 + 8);
        if (v9 < 0 || v9 >= (int)v12) {
          IOSArray_throwOutOfBoundsWithMsg(v12, v9);
        }
        if ([a2 containsWithId:*(void *)(v11 + 24 + 8 * v9)] != a3) {
          break;
        }
        if (v10 == ++v9) {
          return 0;
        }
      }
      unint64_t v14 = atomic_load(v8);
      long long v15 = +[IOSObjectArray arrayWithLength:*(_DWORD *)(v14 + 8) - 1 type:NSObject_class_()];
      long long v16 = (void *)atomic_load(v8);
      long long v33 = v15;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v16, 0, v15, 0, v9);
      uint64_t v32 = a5;
      if ((int)v9 + 1 >= (int)a5)
      {
        uint64_t v34 = v9;
      }
      else
      {
        uint64_t v17 = v9 + 1;
        uint64_t v34 = v9;
        do
        {
          unint64_t v18 = atomic_load(v8);
          uint64_t v19 = *(unsigned int *)(v18 + 8);
          if ((int)v9 < -1 || v17 >= (int)v19) {
            IOSArray_throwOutOfBoundsWithMsg(v19, (v9 + 1));
          }
          if ([a2 containsWithId:*(void *)(v18 + 24 + 8 * v17)] == a3)
          {
            unint64_t v20 = atomic_load(v8);
            uint64_t v21 = *(unsigned int *)(v20 + 8);
            if (v17 >= (int)v21) {
              IOSArray_throwOutOfBoundsWithMsg(v21, (v9 + 1));
            }
            IOSObjectArray_Set((uint64_t)v33, (int)v34, *(void **)(v20 + 24 + 8 * v17));
            uint64_t v34 = (v34 + 1);
          }
          ++v17;
          LODWORD(v9) = v9 + 1;
        }
        while (v17 < v10);
      }
      int v22 = (void *)atomic_load(v8);
      unint64_t v23 = atomic_load(v8);
      int v24 = v32;
      CFStringRef v25 = v33;
      int v26 = v34;
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(v22, v32, v33, v34, (*(_DWORD *)(v23 + 8) - v32));
      unint64_t v27 = atomic_load(v8);
      int v28 = *(_DWORD *)(v27 + 8) - v24 + v26;
      if (v28 >= v25->super.size_)
      {
        unint64_t v30 = atomic_load(v8);
        goto LABEL_29;
      }
      int v29 = JavaUtilArrays_copyOfRangeWithNSObjectArray_withInt_withInt_(v33, 0, v28);
      unint64_t v30 = atomic_load(v8);
      if (v29)
      {
        CFStringRef v25 = v29;
LABEL_29:
        uint64_t v13 = (*(_DWORD *)(v30 + 8) - v25->super.size_);
        JreVolatileStrongAssign((atomic_ullong *)v8, v25);
        return v13;
      }
    }
LABEL_31:
    JreThrowNullPointerException();
  }
  return 0;
}

void sub_1002970F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002971E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002973A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

JavaUtilConcurrentCopyOnWriteArrayList *new_JavaUtilConcurrentCopyOnWriteArrayList_init()
{
  int v0 = [JavaUtilConcurrentCopyOnWriteArrayList alloc];
  JavaUtilConcurrentCopyOnWriteArrayList_init((uint64_t)v0);
  return v0;
}

unint64_t JavaUtilConcurrentCopyOnWriteArrayList_CowSubList_initWithJavaUtilConcurrentCopyOnWriteArrayList_withNSObjectArray_withInt_withInt_(uint64_t a1, void *a2, void *a3, int a4, int a5)
{
  JreStrongAssign((id *)(a1 + 16), a2);
  JavaUtilAbstractList_init(a1, v9);
  uint64_t v10 = [JavaUtilConcurrentCopyOnWriteArrayList_Slice alloc];
  JreStrongAssign((id *)&v10->expectedElements_, a3);
  v10->from_ = a4;
  v10->to_ = a5;
  return JreVolatileStrongAssignAndConsume((atomic_ullong *)(a1 + 24), (unint64_t)v10);
}

void sub_100297B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100297C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100297D34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100297DCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100297F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100297FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002980BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10029814C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100298260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100298378(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t JavaNetURL_setURLStreamHandlerFactoryWithJavaNetURLStreamHandlerFactory_(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaNetURL__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  unint64_t v2 = (void *)JavaNetURL_class_();
  objc_sync_enter(v2);
  if (qword_100562F28)
  {
    unint64_t v4 = new_JavaLangError_initWithNSString_(@"Factory already set");
    objc_exception_throw(v4);
  }
  if (!qword_100562F20) {
    JreThrowNullPointerException();
  }
  [(id)qword_100562F20 clear];
  JreStrongAssign((id *)&qword_100562F28, a1);
  return objc_sync_exit(v2);
}

void sub_1002988D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaNetURL_initWithJavaNetURL_withNSString_withJavaNetURLStreamHandler_(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *(_DWORD *)(a1 + 40) = -1;
  if (!a3)
  {
    int v28 = new_JavaNetMalformedURLException_init();
    goto LABEL_24;
  }
  if (a4) {
    JreStrongAssign((id *)(a1 + 8), a4);
  }
  id v7 = [a3 trim];
  uint64_t v8 = (void **)(a1 + 16);
  id SchemePrefixWithNSString = LibcoreNetUrlUrlUtils_getSchemePrefixWithNSString_(v7);
  JreStrongAssign((id *)(a1 + 16), SchemePrefixWithNSString);
  uint64_t v17 = *(void **)(a1 + 16);
  if (v17)
  {
    uint64_t v18 = [v17 length] + 1;
    uint64_t v17 = *v8;
    if (a2 && v17)
    {
      if (([v17 isEqual:*(void *)(a2 + 16)] & 1) == 0)
      {
        uint64_t v17 = *v8;
        goto LABEL_14;
      }
LABEL_11:
      objc_msgSend((id)a1, "setWithNSString:withNSString:withInt:withNSString:withNSString:withNSString:withNSString:withNSString:", *(void *)(a2 + 16), objc_msgSend((id)a2, "getHost"), objc_msgSend((id)a2, "getPort"), objc_msgSend((id)a2, "getAuthority"), objc_msgSend((id)a2, "getUserInfo"), objc_msgSend((id)a2, "getPath"), objc_msgSend((id)a2, "getQuery"), objc_msgSend((id)a2, "getRef"));
      if (!*(void *)(a1 + 8)) {
        JreStrongAssign((id *)(a1 + 8), *(void **)(a2 + 8));
      }
      uint64_t v18 = v18;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v18 = 0;
  }
  if (a2) {
    goto LABEL_11;
  }
LABEL_14:
  if (!v17)
  {
    CFStringRef v29 = JreStrcat("$$", v10, v11, v12, v13, v14, v15, v16, @"Protocol not found: ");
LABEL_23:
    int v28 = new_JavaNetMalformedURLException_initWithNSString_((uint64_t)v29);
LABEL_24:
    objc_exception_throw(v28);
  }
LABEL_15:
  uint64_t v19 = *(void **)(a1 + 8);
  if (!v19)
  {
    [(id)a1 setupStreamHandler];
    uint64_t v19 = *(void **)(a1 + 8);
    if (!v19)
    {
      CFStringRef v29 = JreStrcat("$$", v20, v21, v22, v23, v24, v25, v26, @"Unknown protocol: ");
      goto LABEL_23;
    }
  }
  if (!v7) {
    JreThrowNullPointerException();
  }
  return objc_msgSend(v19, "parseURLWithJavaNetURL:withNSString:withInt:withInt:", a1, v7, v18, objc_msgSend(v7, "length"));
}

void sub_100298B9C(_Unwind_Exception *a1)
{
}

id JavaNetURL_initWithNSString_withNSString_withInt_withNSString_withJavaNetURLStreamHandler_(uint64_t a1, void *a2, __CFString *a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  *(_DWORD *)(a1 + 40) = -1;
  if ((int)a4 <= -2)
  {
    CFStringRef v35 = JreStrcat("$I", (uint64_t)a2, (uint64_t)a3, a4, (uint64_t)a5, (uint64_t)a6, a7, a8, @"port < -1: ");
LABEL_21:
    uint64_t v36 = new_JavaNetMalformedURLException_initWithNSString_((uint64_t)v35);
LABEL_22:
    objc_exception_throw(v36);
  }
  if (!a2)
  {
    uint64_t v36 = new_JavaLangNullPointerException_initWithNSString_(@"protocol == null");
    goto LABEL_22;
  }
  uint64_t v12 = a3;
  if (a3
    && [(__CFString *)a3 contains:@":"]
    && [(__CFString *)v12 charAtWithInt:0] != 91)
  {
    uint64_t v12 = (__CFString *)JreStrcat("C$C", v14, v15, v16, v17, v18, v19, v20, (id)0x5B);
  }
  JreStrongAssign((id *)(a1 + 16), a2);
  JreStrongAssign((id *)(a1 + 32), v12);
  *(_DWORD *)(a1 + 40) = v8;
  uint64_t v21 = (__CFString *)LibcoreNetUrlUrlUtils_authoritySafePathWithNSString_withNSString_(v12, a5);
  if (!v21) {
    JreThrowNullPointerException();
  }
  uint64_t v22 = v21;
  id v23 = [(__CFString *)v21 indexOfString:@"#"];
  if (v23 == -1)
  {
    uint64_t v26 = (id *)(a1 + 48);
    uint64_t v25 = v22;
  }
  else
  {
    int v24 = (int)v23;
    JreStrongAssign((id *)(a1 + 48), [(__CFString *)v22 substring:0 endIndex:v23]);
    uint64_t v25 = (__CFString *)[(__CFString *)v22 substring:(v24 + 1)];
    uint64_t v26 = (id *)(a1 + 56);
  }
  JreStrongAssign(v26, v25);
  [(id)a1 fixURLWithBoolean:0];
  if (!a6)
  {
    id result = [(id)a1 setupStreamHandler];
    if (*(void *)(a1 + 8)) {
      return result;
    }
    CFStringRef v35 = JreStrcat("$$", v28, v29, v30, v31, v32, v33, v34, @"Unknown protocol: ");
    goto LABEL_21;
  }
  return JreStrongAssign((id *)(a1 + 8), a6);
}

void sub_10029978C(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    id v2 = objc_begin_catch(exception_object);
    unsigned int v3 = new_JavaIoIOException_initWithJavaLangThrowable_(v2);
    objc_exception_throw(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002997B4()
{
}

JavaNetURL *new_JavaNetURL_initWithNSString_(void *a1)
{
  id v2 = [JavaNetURL alloc];
  JavaNetURL_initWithJavaNetURL_withNSString_withJavaNetURLStreamHandler_((uint64_t)v2, 0, a1, 0);
  return v2;
}

JavaNetURL *new_JavaNetURL_initWithNSString_withNSString_withNSString_(void *a1, __CFString *a2, void *a3)
{
  id v6 = [JavaNetURL alloc];
  JavaNetURL_initWithNSString_withNSString_withInt_withNSString_withJavaNetURLStreamHandler_((uint64_t)v6, a1, a2, 0xFFFFFFFFLL, a3, 0, v7, v8);
  return v6;
}

JavaNetURL *new_JavaNetURL_initWithNSString_withNSString_withInt_withNSString_withJavaNetURLStreamHandler_(void *a1, __CFString *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10 = [JavaNetURL alloc];
  JavaNetURL_initWithNSString_withNSString_withInt_withNSString_withJavaNetURLStreamHandler_((uint64_t)v10, a1, a2, a3, a4, a5, v11, v12);
  return v10;
}

uint64_t JavaNetURL_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaNetURL__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562F38 != -1) {
    dispatch_once(&qword_100562F38, &stru_100487B50);
  }
  return qword_100562F30;
}

void sub_100299BB8(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562F30 = IOSClass_fromClass(v1);
}

uint64_t JavaNetSocketUtils_setCreatedWithJavaNetSocket_(uint64_t result)
{
  if (!result) {
    JreThrowNullPointerException();
  }
  atomic_store(1u, (unsigned __int8 *)(result + 16));
  return result;
}

uint64_t sub_10029A39C(void *a1, id a2)
{
  if (!a1) {
    return 0;
  }
  id v3 = a1;
  do
  {
    BOOL v4 = v3 == a2;
    if (v3 == a2) {
      break;
    }
    uint64_t v5 = (int *)[v3 getInterfacesInternal];
    if (v5[2] >= 1)
    {
      id v6 = v5;
      uint64_t v7 = 0;
      do
      {
        id v8 = *(id *)&v6[2 * v7 + 6];
        if (v8 == a2 || (sub_10029A39C(v8, a2) & 1) != 0) {
          return 1;
        }
      }
      while (++v7 < v6[2]);
    }
    id v3 = [v3 getSuperclass];
  }
  while (v3);
  return v4;
}

void sub_10029AA44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaLangEnum_initWithNSString_withInt_(uint64_t a1, void *a2, int a3)
{
  id result = JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = a3;
  return result;
}

uint64_t JavaLangEnum_valueOfWithIOSClass_withNSString_(void *a1, void *a2)
{
  if (atomic_load_explicit((atomic_uchar *volatile)&JavaLangEnum__initialized, memory_order_acquire))
  {
    if (a1) {
      goto LABEL_3;
    }
LABEL_12:
    CFStringRef v16 = @"enumType == null";
LABEL_17:
    uint64_t v25 = new_JavaLangNullPointerException_initWithNSString_((uint64_t)v16);
LABEL_15:
    objc_exception_throw(v25);
  }
  objc_opt_class();
  if (!a1) {
    goto LABEL_12;
  }
LABEL_3:
  if (!a2)
  {
    CFStringRef v16 = @"name == null";
    goto LABEL_17;
  }
  SharedConstantsWithIOSClass = (char *)JavaLangEnum_getSharedConstantsWithIOSClass_((uint64_t)a1);
  if (!SharedConstantsWithIOSClass)
  {
    CFStringRef v24 = JreStrcat("@$", v5, v6, v7, v8, v9, v10, v11, a1);
    goto LABEL_14;
  }
  uint64_t v12 = (uint64_t *)(SharedConstantsWithIOSClass + 24);
  unint64_t v13 = (unint64_t)&SharedConstantsWithIOSClass[8 * *((int *)SharedConstantsWithIOSClass + 2) + 24];
  do
  {
    if ((unint64_t)v12 >= v13)
    {
      [a1 getName];
      CFStringRef v24 = JreStrcat("$$$", v17, v18, v19, v20, v21, v22, v23, a2);
LABEL_14:
      uint64_t v25 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v24);
      goto LABEL_15;
    }
    uint64_t v14 = *v12;
    if (!*v12) {
      JreThrowNullPointerException();
    }
    ++v12;
  }
  while (([a2 isEqual:*(void *)(v14 + 8)] & 1) == 0);
  return v14;
}

id JavaLangEnum_getSharedConstantsWithIOSClass_(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (!qword_100562F40) {
    JreThrowNullPointerException();
  }
  id v2 = [(id)qword_100562F40 getWithId:a1];
  objc_opt_class();
  if (v2 && (objc_opt_isKindOfClass() & 1) == 0) {
    JreThrowClassCastException();
  }
  return v2;
}

uint64_t JavaLangEnum_class_()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&JavaLangEnum__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  if (qword_100562F50 != -1) {
    dispatch_once(&qword_100562F50, &stru_100488310);
  }
  return qword_100562F48;
}

void sub_10029AF6C(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562F48 = IOSClass_fromClass(v1);
}

void sub_10029B110(_Unwind_Exception *a1)
{
}

ptrdiff_t sub_10029C5C0(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&SunMiscUnsafe__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  InstanceVariabluint64_t e = class_getInstanceVariable((Class)[a1 objcArrayClass], "buffer_");
  if (!InstanceVariable) {
    objc_exception_throw([(JavaLangError *)[JavaLangAssertionError alloc] initWithNSString:@"buffer_ ivar not found."]);
  }
  return ivar_getOffset(InstanceVariable);
}

void sub_10029C74C(uint64_t a1)
{
}

uint64_t SunMiscUnsafe_getUnsafe()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&SunMiscUnsafe__initialized, memory_order_acquire) & 1) == 0) {
    objc_opt_class();
  }
  return qword_100562F58;
}

id JavaUtilMapEntry_initWithId_withId_(uint64_t a1, void *a2, void *a3)
{
  JreStrongAssign((id *)(a1 + 8), a2);
  return JreStrongAssign((id *)(a1 + 16), a3);
}

JavaNetUnknownServiceException *new_JavaNetUnknownServiceException_init()
{
  int v0 = [JavaNetUnknownServiceException alloc];
  JavaIoIOException_init(v0, v1);
  return v0;
}

JavaNetUnknownServiceException *new_JavaNetUnknownServiceException_initWithNSString_(uint64_t a1)
{
  id v2 = [JavaNetUnknownServiceException alloc];
  JavaIoIOException_initWithNSString_(v2, a1);
  return v2;
}

JavaNioCharsetUnsupportedCharsetException *new_JavaNioCharsetUnsupportedCharsetException_initWithNSString_(__CFString *a1)
{
  id v2 = [JavaNioCharsetUnsupportedCharsetException alloc];
  id v3 = v2;
  if (a1) {
    CFStringRef v4 = a1;
  }
  else {
    CFStringRef v4 = @"null";
  }
  JavaLangIllegalArgumentException_initWithNSString_(v2, v4);
  JreStrongAssign((id *)&v3->charsetName_, a1);
  return v3;
}

id JavaNetPlainDatagramSocketImpl_initWithJavaIoFileDescriptor_withInt_(uint64_t a1, void *a2, int a3)
{
  JavaNetDatagramSocketImpl_init(a1);
  uint64_t v6 = DalvikSystemCloseGuard_get();
  JreStrongAssign((id *)(a1 + 24), v6);
  *(_DWORD *)(a1 + 40) = -1;
  JreStrongAssign((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 16) = a3;
  if (!a2) {
    goto LABEL_8;
  }
  id result = [a2 valid];
  if (!result) {
    return result;
  }
  uint64_t v8 = *(void **)(a1 + 24);
  if (!v8) {
LABEL_8:
  }
    JreThrowNullPointerException();
  return [v8 openWithNSString:@"close"];
}

void *JavaNetPlainDatagramSocketImpl_init(uint64_t a1)
{
  JavaNetDatagramSocketImpl_init(a1);
  id v2 = DalvikSystemCloseGuard_get();
  JreStrongAssign((id *)(a1 + 24), v2);
  *(_DWORD *)(a1 + 40) = -1;
  id v3 = new_JavaIoFileDescriptor_init();
  return JreStrongAssignAndConsume((id *)(a1 + 8), v3);
}

void sub_10029D500(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
}

void sub_10029D698(_Unwind_Exception *a1)
{
}

LibcoreIoStructGroupReq *sub_10029D768(void *a1, void *a2)
{
  if (a2) {
    int v3 = [a2 getIndex];
  }
  else {
    int v3 = 0;
  }
  CFStringRef v4 = new_LibcoreIoStructGroupReq_initWithInt_withJavaNetInetAddress_(v3, a1);
  return v4;
}

id sub_10029DA60(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a2) {
    JreThrowNullPointerException();
  }
  uint64_t v6 = *(void *)(a1 + 8);
  id v7 = [a2 getData];
  id v8 = [a2 getOffset];
  id v9 = [a2 getLength];
  unsigned __int8 v10 = atomic_load((unsigned __int8 *)(a1 + 20));
  id result = (id)LibcoreIoIoBridge_recvfromWithBoolean_withJavaIoFileDescriptor_withByteArray_withInt_withInt_withInt_withJavaNetDatagramPacket_withBoolean_(0, v6, (uint64_t)v7, (uint64_t)v8, (uint64_t)v9, a3, a2, v10 & 1);
  unsigned __int8 v12 = atomic_load((unsigned __int8 *)(a1 + 20));
  if (v12)
  {
    [a2 setAddressWithJavaNetInetAddress:*(void *)(a1 + 32)];
    uint64_t v13 = *(unsigned int *)(a1 + 40);
    return [a2 setPortWithInt:v13];
  }
  return result;
}

void sub_10029DDA4()
{
}

void sub_10029DDF8()
{
}

void sub_10029DF24(_Unwind_Exception *a1)
{
}

JavaNetPlainDatagramSocketImpl *new_JavaNetPlainDatagramSocketImpl_initWithJavaIoFileDescriptor_withInt_(void *a1, int a2)
{
  CFStringRef v4 = [JavaNetPlainDatagramSocketImpl alloc];
  JavaNetPlainDatagramSocketImpl_initWithJavaIoFileDescriptor_withInt_((uint64_t)v4, a1, a2);
  return v4;
}

JavaNetPlainDatagramSocketImpl *new_JavaNetPlainDatagramSocketImpl_init()
{
  int v0 = [JavaNetPlainDatagramSocketImpl alloc];
  JavaNetPlainDatagramSocketImpl_init((uint64_t)v0);
  return v0;
}

id JavaUtilIllegalFormatConversionException_initWithChar_withIOSClass_(uint64_t a1, uint64_t a2, void *a3)
{
  __int16 v4 = a2;
  JavaUtilIllegalFormatException_init(a1, a2);
  *(_WORD *)(a1 + 84) = v4;
  if (!a3)
  {
    id v7 = new_JavaLangNullPointerException_initWithNSString_(@"arg == null");
    objc_exception_throw(v7);
  }
  return JreStrongAssign((id *)(a1 + 88), a3);
}

JavaUtilIllegalFormatConversionException *new_JavaUtilIllegalFormatConversionException_initWithChar_withIOSClass_(uint64_t a1, void *a2)
{
  __int16 v4 = [JavaUtilIllegalFormatConversionException alloc];
  JavaUtilIllegalFormatConversionException_initWithChar_withIOSClass_((uint64_t)v4, a1, a2);
  return v4;
}

LibcoreIoStructGroupReq *new_LibcoreIoStructGroupReq_initWithInt_withJavaNetInetAddress_(int a1, void *a2)
{
  __int16 v4 = [LibcoreIoStructGroupReq alloc];
  v4->gr_interface_ = a1;
  JreStrongAssign((id *)&v4->gr_group_, a2);
  return v4;
}

LibcoreIoErrnoException *new_LibcoreIoErrnoException_initWithNSString_withInt_(void *a1, unsigned int a2)
{
  __int16 v4 = [LibcoreIoErrnoException alloc];
  JavaLangException_init(v4, v5);
  JreStrongAssign((id *)&v4->errno__, a1);
  *(&v4->super.super.rawFrameCount + 1) = a2;
  return v4;
}

JavaUtilIllegalFormatCodePointException *new_JavaUtilIllegalFormatCodePointException_initWithInt_(unsigned int a1)
{
  id v2 = [JavaUtilIllegalFormatCodePointException alloc];
  JavaUtilIllegalFormatException_init(v2, v3);
  *(&v2->super.super.super.super.super.rawFrameCount + 1) = a1;
  return v2;
}

void sub_10029E818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id JavaTextDateFormatSymbols_initWithJavaUtilLocale_(id *a1, void *a2)
{
  JreStrongAssign(a1 + 10, a2);
  JreStrongAssign(a1 + 11, JavaTextSimpleDateFormat_PATTERN_CHARS_);
  __int16 v4 = LibcoreIcuLocaleData_getWithJavaUtilLocale_(a2);
  JreStrongAssign(a1 + 7, v4);
  uint64_t v5 = (void **)a1[7];
  if (!v5) {
    JreThrowNullPointerException();
  }
  JreStrongAssign(a1 + 1, v5[3]);
  JreStrongAssign(a1 + 2, *((void **)a1[7] + 4));
  JreStrongAssign(a1 + 3, *((void **)a1[7] + 5));
  JreStrongAssign(a1 + 4, *((void **)a1[7] + 6));
  JreStrongAssign(a1 + 6, *((void **)a1[7] + 11));
  uint64_t v6 = (void *)*((void *)a1[7] + 12);
  return JreStrongAssign(a1 + 5, v6);
}

JavaTextDateFormatSymbols *JavaTextDateFormatSymbols_getInstanceWithJavaUtilLocale_(void *a1)
{
  if (!a1)
  {
    __int16 v4 = new_JavaLangNullPointerException_initWithNSString_(@"locale == null");
    objc_exception_throw(v4);
  }
  id v2 = [JavaTextDateFormatSymbols alloc];
  JavaTextDateFormatSymbols_initWithJavaUtilLocale_((id *)&v2->super.isa, a1);
  return v2;
}

uint64_t sub_10029EC68(void *a1, void *a2)
{
  if (!a1) {
LABEL_14:
  }
    JreThrowNullPointerException();
  if (a1[8])
  {
    id v4 = [a1 internalZoneStrings];
    if (!a2) {
      goto LABEL_14;
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_14;
    }
    if (!a2[8])
    {
      uint64_t v5 = (void *)a1[10];
      if (!v5) {
        goto LABEL_14;
      }
      if ([v5 isEqual:a2[10]]) {
        return 1;
      }
    }
    id v4 = [a1 internalZoneStrings];
  }
  uint64_t v7 = (uint64_t)v4;
  id v8 = [a2 internalZoneStrings];
  return JavaUtilArrays_deepEqualsWithNSObjectArray_withNSObjectArray_(v7, (uint64_t)v8);
}

IOSObjectArray *sub_10029F1BC(uint64_t a1)
{
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v2 = *(int *)(a1 + 8);
  uint64_t v3 = NSString_class_();
  id v4 = +[IOSObjectArray arrayWithLength:v2 type:IOSClass_arrayType(v3, 1u)];
  if (*(int *)(a1 + 8) >= 1)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(void **)(a1 + 24 + 8 * v5);
      if (!v6) {
        break;
      }
      IOSObjectArray_Set((uint64_t)v4, v5++, [v6 clone]);
      if (v5 >= *(int *)(a1 + 8)) {
        return v4;
      }
    }
LABEL_7:
    JreThrowNullPointerException();
  }
  return v4;
}

JavaTextDateFormatSymbols *new_JavaTextDateFormatSymbols_initWithJavaUtilLocale_(void *a1)
{
  uint64_t v2 = [JavaTextDateFormatSymbols alloc];
  JavaTextDateFormatSymbols_initWithJavaUtilLocale_((id *)&v2->super.isa, a1);
  return v2;
}

uint64_t JavaTextDateFormatSymbols_class_()
{
  if (qword_100562F70 != -1) {
    dispatch_once(&qword_100562F70, &stru_10048B338);
  }
  return qword_100562F68;
}

void sub_10029F964(id a1)
{
  uint64_t v1 = objc_opt_class();
  qword_100562F68 = IOSClass_fromClass(v1);
}

id JavaNioCharsetCharsetDecoder_initWithJavaNioCharsetCharset_withFloat_withFloat_(uint64_t a1, void *a2, float a3, float a4)
{
  if (a3 <= 0.0 || a4 <= 0.0)
  {
    CFStringRef v6 = @"averageCharsPerByte and maxCharsPerByte must be positive";
    goto LABEL_9;
  }
  if (a3 > a4)
  {
    CFStringRef v6 = @"averageCharsPerByte is greater than maxCharsPerByte";
LABEL_9:
    uint64_t v7 = new_JavaLangIllegalArgumentException_initWithNSString_((uint64_t)v6);
    objc_exception_throw(v7);
  }
  *(float *)(a1 + 8) = a3;
  *(float *)(a1 + 12) = a4;
  JreStrongAssign((id *)(a1 + 16), a2);
  return JreStrongAssign((id *)(a1 + 24), @"\uFFFD");
}

void sub_1002A0714(id a1)
{
  id v4 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  uint64_t v1 = dispatch_queue_attr_make_with_qos_class(v4, QOS_CLASS_BACKGROUND, 0);
  dispatch_queue_t v2 = dispatch_queue_create("Background logging", v1);
  uint64_t v3 = (void *)qword_100562F80;
  qword_100562F80 = (uint64_t)v2;
}

id sub_1002A081C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateABGroupKey];
}

void sub_1002A09CC(id a1)
{
  uint64_t v1 = +[ContextConfiguration sharedInstance];
  unsigned int v2 = [v1 debugDisableMetricsLogging];

  if (v2)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "MetricsLogging disabled", v7, 2u);
    }
    uint64_t v3 = (void *)qword_100562F88;
    qword_100562F88 = 0;
  }
  else
  {
    id v4 = objc_alloc_init(MetricsLoggingIOS);
    uint64_t v5 = (void *)qword_100562F88;
    qword_100562F88 = (uint64_t)v4;

    if (qword_100562F88) {
      goto LABEL_8;
    }
    id v6 = [[MetricsLogging alloc] _init];
    uint64_t v3 = (void *)qword_100562F88;
    qword_100562F88 = (uint64_t)v6;
  }

LABEL_8:
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
    sub_1002A1A60();
  }
  [(id)qword_100562F88 _postInit];
}

void sub_1002A1A60()
{
  int v1 = 138412290;
  id v2 = (id)objc_opt_class();
  id v0 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Implementation used for metrics logging: %@", (uint8_t *)&v1, 0xCu);
}

void sub_1002A2F24(id a1)
{
  BOOL v1 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO);
  id v2 = (void *)CKContextKitNotification_ConfigurationUpdate;
  if (v1)
  {
    int v3 = 138412290;
    uint64_t v4 = CKContextKitNotification_ConfigurationUpdate;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "Posting ContextKit configuration update notification: %@", (uint8_t *)&v3, 0xCu);
  }
  if (notify_post((const char *)[v2 UTF8String]))
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v3) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Could not post update notification", (uint8_t *)&v3, 2u);
    }
  }
}

void sub_1002A301C(id a1, int a2)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Received notification to force-update", v2, 2u);
  }
  +[ContextConfiguration _triggerConfigurationUpdate];
}

void sub_1002A36F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1002A3D00(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_class();
  int v3 = sub_1002A567C(v1, v2);

  return v3;
}

id sub_1002A3D60(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_class();
  int v3 = sub_1002A567C(v1, v2);

  return v3;
}

void sub_1002A53A0(unsigned char *a1, void *a2)
{
  int v3 = sub_1002A3D00(a2);
  if (v3)
  {
    id v4 = v3;
    *a1 = [v3 BOOLValue];
    int v3 = v4;
  }
}

void sub_1002A53F8(void **a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  sub_1002A567C(v3, v4);
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v5 = v8;
  if (v8)
  {
    uint64_t v6 = +[NSSet setWithArray:v8];
    uint64_t v7 = *a1;
    *a1 = (void *)v6;

    uint64_t v5 = v8;
  }
}

void sub_1002A5494(_DWORD *a1, void *a2)
{
  id v3 = sub_1002A3D00(a2);
  if (v3)
  {
    id v5 = v3;
    [v3 floatValue];
    id v3 = v5;
    *a1 = v4;
  }
}

void sub_1002A54EC(void *a1, void *a2)
{
  id v3 = sub_1002A3D00(a2);
  if (v3)
  {
    id v4 = v3;
    *a1 = [v3 unsignedIntegerValue];
    id v3 = v4;
  }
}

void sub_1002A5544(void *a1, void *a2)
{
  id v3 = sub_1002A3D00(a2);
  if (v3)
  {
    id v4 = v3;
    *a1 = [v3 integerValue];
    id v3 = v4;
  }
}

void sub_1002A559C(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_class();
  sub_1002A567C(v3, v4);
  obid j = (id)objc_claimAutoreleasedReturnValue();

  id v5 = obj;
  if (obj)
  {
    objc_storeStrong(a1, obj);
    id v5 = obj;
  }
}

void sub_1002A5624(void *a1, void *a2)
{
  id v3 = sub_1002A3D00(a2);
  if (v3)
  {
    id v5 = v3;
    [v3 doubleValue];
    id v3 = v5;
    *a1 = v4;
  }
}

id sub_1002A567C(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    if (objc_opt_isKindOfClass())
    {
      id v4 = v3;
LABEL_4:
      id v5 = v4;
      goto LABEL_11;
    }
    if ([a2 isSubclassOfClass:objc_opt_class()])
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", [v3 bytes], 4);
        id v4 = (id)objc_claimAutoreleasedReturnValue();
        goto LABEL_4;
      }
    }
    uint64_t v6 = (void *)qword_100562FC0;
    if (os_log_type_enabled((os_log_t)qword_100562FC0, OS_LOG_TYPE_ERROR)) {
      sub_1002A5F4C((uint64_t)a2, v6, (uint64_t)v3);
    }
  }
  id v5 = 0;
LABEL_11:

  return v5;
}

id sub_1002A5774(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_class();
  id v3 = sub_1002A567C(v1, v2);

  return v3;
}

uint64_t sub_1002A5898(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1002A5EC4(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "No developer-specific configuration found", v1, 2u);
}

void sub_1002A5F08(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "No index-specific configuration found", v1, 2u);
}

void sub_1002A5F4C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  int v7 = 138412802;
  uint64_t v8 = a1;
  __int16 v9 = 2112;
  id v10 = (id)objc_opt_class();
  __int16 v11 = 2112;
  uint64_t v12 = a3;
  id v6 = v10;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Configuration object is not of expected type: %@, but is %@: %@", (uint8_t *)&v7, 0x20u);
}

int64_t sub_1002A66D0(id a1, id a2, id a3)
{
  if (a2 < a3) {
    return -1;
  }
  else {
    return a2 != a3;
  }
}

void sub_1002A6E5C(id *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  NLTag v8 = NLTagOther;
  id v15 = v7;
  if (v7) {
    NLTag v8 = (NLTag)v7;
  }
  __int16 v9 = v8;
  if ([a1[4] containsObject:v9])
  {
    id v10 = objc_msgSend(a1[5], "substringWithRange:", a3, a4);
    __int16 v11 = v9;
    uint64_t v12 = [a1[6] objectForKeyedSubscript:v11];
    if (v12)
    {
      uint64_t v13 = +[NSMutableSet setWithSet:v12];
      [v13 addObject:v10];
      id v14 = [v13 copy];
      [a1[6] setObject:v14 forKeyedSubscript:v11];
    }
    else
    {
      uint64_t v13 = +[NSSet setWithObject:v10];
      [a1[6] setObject:v13 forKeyedSubscript:v11];
    }
  }
}

void sub_1002A7BF4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)v2[22];
  CFStringRef v4 = @"null";
  if (*(void *)(a1 + 40)) {
    CFStringRef v4 = *(const __CFString **)(a1 + 40);
  }
  v10[0] = v4;
  id v5 = [v2 abGroupLoggingKey];
  id v6 = sub_1002A7D1C(v5, *(void *)(a1 + 48));
  v10[1] = v6;
  id v7 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
  v10[2] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  v10[3] = v8;
  __int16 v9 = +[NSArray arrayWithObjects:v10 count:4];
  [v3 trackEventWithPropertyValues:v9 value:*(double *)(a1 + 64)];
}

__CFString *sub_1002A7D1C(void *a1, uint64_t a2)
{
  id v3 = a1;
  CFStringRef v4 = v3;
  if (a2 == 15)
  {
    id v5 = @"unsol";
  }
  else if (a2 == 17)
  {
    id v5 = @"grouping";
  }
  else if (v3)
  {
    id v5 = (__CFString *)v3;
  }
  else
  {
    id v5 = @"null";
  }

  return v5;
}

void sub_1002A7E8C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)v2[23];
  CFStringRef v4 = @"null";
  if (*(void *)(a1 + 40)) {
    CFStringRef v4 = *(const __CFString **)(a1 + 40);
  }
  v10[0] = v4;
  id v5 = [v2 abGroupLoggingKey];
  id v6 = sub_1002A7D1C(v5, *(void *)(a1 + 48));
  v10[1] = v6;
  id v7 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
  v10[2] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  v10[3] = v8;
  __int16 v9 = +[NSArray arrayWithObjects:v10 count:4];
  [v3 trackEventWithPropertyValues:v9 value:*(double *)(a1 + 64)];
}

void sub_1002A80C8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  CFStringRef v4 = (void *)v2[24];
  if (v3)
  {
    id v5 = *(void **)(a1 + 40);
  }
  else
  {
    uint64_t v20 = [v2 abGroupLoggingKey];
    id v5 = sub_1002A7D1C(v20, *(void *)(a1 + 56));
    id v2 = *(void **)(a1 + 32);
  }
  v22[0] = v5;
  id v6 = [v2 abGroupLoggingKey];
  id v7 = sub_1002A7D1C(v6, *(void *)(a1 + 56));
  v22[1] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  v22[2] = v8;
  __int16 v9 = +[NSArray arrayWithObjects:v22 count:3];
  [v4 trackEventWithPropertyValues:v9 value:(double)*(unint64_t *)(a1 + 64)];

  if (!v3)
  {
  }
  id v10 = *(void **)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = (void *)v10[30];
  if (v11)
  {
    uint64_t v13 = *(void **)(a1 + 40);
  }
  else
  {
    id v5 = [v10 abGroupLoggingKey];
    uint64_t v13 = sub_1002A7D1C(v5, *(void *)(a1 + 56));
    id v10 = *(void **)(a1 + 32);
  }
  v21[0] = v13;
  id v14 = [v10 abGroupLoggingKey];
  uint64_t v15 = sub_1002A7D1C(v14, *(void *)(a1 + 56));
  CFStringRef v16 = (void *)v15;
  CFStringRef v17 = *(const __CFString **)(a1 + 48);
  if (!v17) {
    CFStringRef v17 = @"unknown";
  }
  v21[1] = v15;
  v21[2] = v17;
  uint64_t v18 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 72)];
  v21[3] = v18;
  uint64_t v19 = +[NSArray arrayWithObjects:v21 count:4];
  [v12 trackEventWithPropertyValues:v19];

  if (!v11)
  {
  }
}

void sub_1002A8424(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = (void *)v2[25];
  CFStringRef v4 = @"null";
  if (a1[5]) {
    CFStringRef v4 = (const __CFString *)a1[5];
  }
  id v5 = objc_msgSend(v2, "abGroupLoggingKey", v4);
  id v6 = sub_1002A7D1C(v5, a1[6]);
  v11[1] = v6;
  id v7 = +[NSNumber numberWithUnsignedInteger:a1[6]];
  v11[2] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:a1[7]];
  v11[3] = v8;
  __int16 v9 = +[NSNumber numberWithUnsignedInteger:a1[8]];
  v11[4] = v9;
  id v10 = +[NSArray arrayWithObjects:v11 count:5];
  [v3 trackEventWithPropertyValues:v10];
}

void sub_1002A86C4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)v2[26];
  CFStringRef v4 = @"null";
  if (*(void *)(a1 + 40)) {
    CFStringRef v4 = *(const __CFString **)(a1 + 40);
  }
  v12[0] = v4;
  id v5 = [v2 abGroupLoggingKey];
  id v6 = sub_1002A7D1C(v5, *(void *)(a1 + 56));
  v12[1] = v6;
  id v7 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  v12[2] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 72)];
  v12[3] = v8;
  __int16 v9 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 88)];
  v12[4] = v9;
  id v10 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 80)];
  v12[5] = v10;
  uint64_t v11 = +[NSArray arrayWithObjects:v12 count:6];
  [v3 trackEventWithPropertyValues:v11];

  if (*(void *)(a1 + 48)
    && (objc_msgSend(*(id *)(*(void *)(a1 + 32) + 264), "record:") & 1) == 0
    && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1002A9778();
  }
}

void sub_1002A89B8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)v2[27];
  CFStringRef v4 = @"null";
  if (*(void *)(a1 + 40)) {
    CFStringRef v4 = *(const __CFString **)(a1 + 40);
  }
  v13[0] = v4;
  id v5 = [v2 abGroupLoggingKey];
  id v6 = sub_1002A7D1C(v5, *(void *)(a1 + 56));
  v13[1] = v6;
  id v7 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  _WORD v13[2] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 72)];
  v13[3] = v8;
  __int16 v9 = +[NSArray arrayWithObjects:v13 count:4];
  [v3 trackEventWithPropertyValues:v9];

  id v10 = [*(id *)(a1 + 48) topicId];
  if (v10)
  {
    uint64_t v11 = *(void **)(*(void *)(a1 + 32) + 272);
    uint64_t v12 = +[NSArray arrayWithObject:v10];
    LOBYTE(v11) = [v11 record:v12];

    if ((v11 & 1) == 0 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002A97C0();
    }
  }
}

void sub_1002A8C68(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = (void *)v2[28];
  CFStringRef v4 = @"null";
  if (a1[5]) {
    CFStringRef v4 = (const __CFString *)a1[5];
  }
  id v5 = objc_msgSend(v2, "abGroupLoggingKey", v4);
  id v6 = sub_1002A7D1C(v5, a1[6]);
  v9[1] = v6;
  id v7 = +[NSNumber numberWithUnsignedInteger:a1[7]];
  v9[2] = v7;
  NLTag v8 = +[NSArray arrayWithObjects:v9 count:3];
  [v3 trackEventWithPropertyValues:v8];
}

void sub_1002A8DFC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) common];
  uint64_t v3 = [*(id *)(a1 + 32) index];
  if (!v2)
  {
    id v4 = 0;
    goto LABEL_7;
  }
  if ([v2 compatibilityVersion] == (id)0x7FFFFFFFFFFFFFFFLL) {
    id v4 = 0;
  }
  else {
    id v4 = [v2 compatibilityVersion];
  }
  if ([v2 assetVersion] == (id)0x7FFFFFFFFFFFFFFFLL)
  {
LABEL_7:
    id v5 = 0;
    if (v3) {
      goto LABEL_8;
    }
LABEL_12:
    NLTag v8 = +[NSString stringWithFormat:@"%@cmaj:%lu:cmin:%lu:imaj:%lu:imin:%lu:id:%@", @"com.apple.proactive.Context.assetStatus.", v4, v5, 0, 0, @"none"];
    goto LABEL_29;
  }
  id v5 = [v2 assetVersion];
  if (!v3) {
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v6 = [v3 first];
  if (v6)
  {
    uint64_t v20 = [v3 first];
    if ([v20 compatibilityVersion] == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      int v7 = 0;
      id v23 = 0;
    }
    else
    {
      uint64_t v18 = [v3 first];
      id v23 = [v18 compatibilityVersion];
      int v7 = 1;
    }
  }
  else
  {
    int v7 = 0;
    id v23 = 0;
  }
  uint64_t v22 = (void *)v6;
  __int16 v9 = [v3 first];
  int v21 = v7;
  id v10 = v4;
  if (v9)
  {
    uint64_t v19 = [v3 first];
    if ([v19 assetVersion] == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      int v11 = 0;
      id v12 = 0;
    }
    else
    {
      CFStringRef v17 = [v3 first];
      id v12 = [v17 assetVersion];
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
    id v12 = 0;
  }
  uint64_t v13 = [v3 second];
  if (v13)
  {
    id v14 = (void *)v13;
    uint64_t v15 = [v3 second];
    NLTag v8 = +[NSString stringWithFormat:@"%@cmaj:%lu:cmin:%lu:imaj:%lu:imin:%lu:id:%@", @"com.apple.proactive.Context.assetStatus.", v10, v5, v23, v12, v15];

    if ((v11 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  NLTag v8 = +[NSString stringWithFormat:@"%@cmaj:%lu:cmin:%lu:imaj:%lu:imin:%lu:id:%@", @"com.apple.proactive.Context.assetStatus.", v10, v5, v23, v12, @"none"];
  if (v11) {
LABEL_22:
  }

LABEL_23:
  if (!v9)
  {

    if (!v21) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  if (v21) {
LABEL_25:
  }

LABEL_26:
  if (v22) {

  }
LABEL_29:
  if (([*(id *)(*(void *)(a1 + 40) + 168) isEqualToString:v8] & 1) == 0)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 168), v8);
    uint64_t v16 = *(void *)(a1 + 32);
    v24.receiver = *(id *)(a1 + 40);
    v24.super_class = (Class)MetricsLoggingIOS;
    objc_msgSendSuper2(&v24, "recordAssetInfo:", v16);
    ADClientSetValueForScalarKey();
  }
}

void sub_1002A921C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    id v2 = &OBJC_IVAR___MetricsLoggingIOS__findResultsTimeoutEvent;
  }
  else {
    id v2 = &OBJC_IVAR___MetricsLoggingIOS__findResultsSlowEvent;
  }
  uint64_t v3 = *(char **)(a1 + 32);
  id v4 = *(void **)&v3[*v2];
  CFStringRef v5 = @"null";
  if (*(void *)(a1 + 40)) {
    CFStringRef v5 = *(const __CFString **)(a1 + 40);
  }
  uint64_t v6 = objc_msgSend(v3, "abGroupLoggingKey", v5);
  int v7 = sub_1002A7D1C(v6, *(void *)(a1 + 48));
  v10[1] = v7;
  NLTag v8 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 57)];
  v10[2] = v8;
  __int16 v9 = +[NSArray arrayWithObjects:v10 count:3];
  [v4 trackEventWithPropertyValues:v9];
}

void sub_1002A9424(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = (void *)v2[29];
  CFStringRef v4 = @"null";
  if (*(void *)(a1 + 40)) {
    CFStringRef v4 = *(const __CFString **)(a1 + 40);
  }
  CFStringRef v5 = objc_msgSend(v2, "abGroupLoggingKey", v4);
  uint64_t v6 = sub_1002A7D1C(v5, *(void *)(a1 + 48));
  v11[1] = v6;
  int v7 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
  v11[2] = v7;
  NLTag v8 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  v11[3] = v8;
  __int16 v9 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 64)];
  v11[4] = v9;
  id v10 = +[NSArray arrayWithObjects:v11 count:5];
  [v3 trackEventWithPropertyValues:v10];
}

void sub_1002A9778()
{
  *(_WORD *)id v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Error while recording shown results to Differential Privacy", v0, 2u);
}

void sub_1002A97C0()
{
  *(_WORD *)id v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Error while recording engaged result to Differential Privacy", v0, 2u);
}

void sub_1002A9D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002A9D68(uint64_t a1)
{
  id v2 = dispatch_get_global_queue(17, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002A9E18;
  block[3] = &unk_10048BA80;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_async(v2, block);

  objc_destroyWeak(&v4);
}

void sub_1002A9E18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateConfiguration];
}

void sub_1002A9EB8(uint64_t a1)
{
  if (a1)
  {
    id v2 = *(NSObject **)(a1 + 152);
    if (v2)
    {
      dispatch_source_cancel(v2);
      uint64_t v3 = *(void **)(a1 + 152);
      *(void *)(a1 + 152) = 0;
    }
  }
}

void sub_1002A9F18(uint64_t a1)
{
  if (a1)
  {
    id v2 = *(void **)(a1 + 192);
    *(void *)(a1 + 192) = 0;

    uint64_t v3 = *(void **)(a1 + 208);
    *(void *)(a1 + 208) = 0;

    [*(id *)(a1 + 216) close];
    id v4 = *(void **)(a1 + 216);
    *(void *)(a1 + 216) = 0;

    [*(id *)(a1 + 200) close];
    CFStringRef v5 = *(void **)(a1 + 200);
    *(void *)(a1 + 200) = 0;

    [*(id *)(a1 + 168) decRef];
    uint64_t v6 = *(void **)(a1 + 168);
    *(void *)(a1 + 168) = 0;
  }
}

void sub_1002AA284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002AA29C(uint64_t a1)
{
  if (!a1) {
    return;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 40));
  sub_1002A9F18(a1);
  id v2 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = 0;

  uint64_t v3 = [*(id *)(a1 + 32) index];
  id v4 = *(id *)(a1 + 104);
  if (v4)
  {
    CFStringRef v5 = v4;
    uint64_t v6 = +[NSFileManager defaultManager];
    unsigned int v7 = [v6 fileExistsAtPath:v5];

    NLTag v8 = qword_100562FE8;
    BOOL v9 = os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v9)
      {
        id v10 = *(void **)(a1 + 104);
        *(_DWORD *)buf = 138412290;
        v123 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Using Lucene index override: %@", buf, 0xCu);
      }
      if (v3)
      {
        int v11 = [v3 second];
        id v12 = [v11 copy];
        uint64_t v13 = *(void **)(a1 + 128);
        *(void *)(a1 + 128) = v12;
      }
      goto LABEL_22;
    }
    if (v9)
    {
      id v14 = *(void **)(a1 + 104);
      *(_DWORD *)buf = 138412290;
      v123 = v14;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Lucene index does not exist: %@", buf, 0xCu);
    }
  }
  if (v3)
  {
    uint64_t v15 = [v3 first];
    CFStringRef v5 = [v15 filesystemPathForAssetDataRelativePath:@"lucene.tagged.53.idx"];

    uint64_t v16 = (void *)qword_100562FE8;
    if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v17 = v16;
      uint64_t v18 = [v3 second];
      uint64_t v19 = [v3 first];
      id v20 = [v19 assetVersion];
      *(_DWORD *)buf = 138412546;
      v123 = v18;
      __int16 v124 = 2048;
      id v125 = v20;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Using Lucene index asset: %@; version: %lu",
        buf,
        0x16u);
    }
    int v21 = [v3 second];
    id v22 = [v21 copy];
    id v23 = *(void **)(a1 + 128);
    *(void *)(a1 + 128) = v22;

    if (v5) {
      goto LABEL_22;
    }
  }
  else
  {
    objc_super v24 = qword_100562FE8;
    if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Lucene index asset is selected but is not available", buf, 2u);
    }
  }
  uint64_t v25 = +[CTKPaths database];
  CFStringRef v5 = [v25 stringByAppendingPathComponent:@"lucene.tagged.53.idx"];

  uint64_t v26 = +[NSFileManager defaultManager];
  unsigned int v27 = [v26 fileExistsAtPath:v5];

  if (!v27)
  {

    goto LABEL_29;
  }
  uint64_t v28 = qword_100562FE8;
  if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Falling back to development index", buf, 2u);
  }
  if (!v5) {
    goto LABEL_29;
  }
LABEL_22:
  uint64_t v29 = [v5 stringByResolvingSymlinksInPath];

  if (!v29)
  {
LABEL_29:
    uint64_t v36 = qword_100562FE8;
    if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Not loading Lucene index", buf, 2u);
    }
    uint64_t v29 = 0;
    goto LABEL_63;
  }
  uint64_t v30 = qword_100562FE8;
  if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v123 = v29;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Using Lucene index from: %@", buf, 0xCu);
  }
  v118 = [v29 stringByAppendingPathComponent:@"bloomfilter.dat"];
  uint64_t v31 = +[_PASBloomFilter bloomFilterWithPathToFile:v118];
  uint64_t v32 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v31;

  if ([*(id *)(a1 + 184) numHashes])
  {
    *(unsigned char *)(a1 + 160) = 1;
    uint64_t v33 = qword_100562FE8;
    if (!os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_35;
    }
    uint64_t v34 = *(void **)(a1 + 184);
    *(_DWORD *)buf = 138412290;
    v123 = v34;
    CFStringRef v35 = "Using bloom filter: %@";
  }
  else
  {
    *(unsigned char *)(a1 + 160) = 0;
    id v37 = [objc_alloc((Class)_PASBloomFilter) initWithData:0 numBits:0 hashFunctionCode:2 numHashFunctions:1];
    int v38 = *(void **)(a1 + 184);
    *(void *)(a1 + 184) = v37;

    uint64_t v33 = qword_100562FE8;
    if (!os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_35;
    }
    double v39 = *(void **)(a1 + 184);
    *(_DWORD *)buf = 138412290;
    v123 = v39;
    CFStringRef v35 = "Using dummy bloom filter: %@";
  }
  _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, v35, buf, 0xCu);
LABEL_35:
  uint64_t v40 = [Wordlist alloc];
  uint64_t v41 = +[NSString stringWithFormat:@"%@/stopwords.txt", v29];
  int v42 = +[NSString stringWithFormat:@"%@/auxiliary.txt", v29];
  uint64_t v43 = [(Wordlist *)v40 initWithPathToStopwords:v41 pathToAuxiliary:v42];
  uint64_t v44 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v43;

  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  objc_opt_class();
  v117 = OrgLukhnosPortmobileFilePaths_getWithNSString_(v29);
  [(id)a1 setReader:0];
  unsigned int v45 = [[ComAppleProactiveLuceneNSDataDirectory alloc] initWithOrgLukhnosPortmobileFilePath:v117 withInt:*(unsigned int *)(a1 + 112) withBoolean:0 withBoolean:0 withInt:*(unsigned int *)(a1 + 144)];
  int v46 = +[OrgApacheLuceneIndexDirectoryReader openWithOrgApacheLuceneStoreDirectory:v45];
  [(id)a1 setReader:v46];

  int v47 = [(id)a1 reader];
  [v47 incRef];

  unsigned int v48 = [(id)a1 reader];
  *(_DWORD *)(a1 + 16) = [v48 maxDoc];

  size_t v49 = [(id)a1 reader];
  *(void *)(a1 + 24) = [v49 getSumTotalTermFreqWithNSString:@"text"];

  if ([(OrgApacheLuceneStoreFSDirectory *)v45 fileLengthWithNSString:@"treasuremap.dat"] < 1)
  {
    unsigned int v57 = *(void **)(a1 + 192);
    *(void *)(a1 + 192) = 0;

    uint64_t v58 = qword_100562FE8;
    if (!os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_INFO)) {
      goto LABEL_41;
    }
    *(_WORD *)buf = 0;
    unsigned int v54 = "No treasure map found";
    unint64_t v55 = v58;
    uint32_t v56 = 2;
  }
  else
  {
    uint64_t v50 = +[KeylessMap keylessMapForDirectory:v45 fileName:@"treasuremap.dat"];
    unsigned int v51 = *(void **)(a1 + 192);
    *(void *)(a1 + 192) = v50;

    uint64_t v52 = qword_100562FE8;
    if (!os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_INFO)) {
      goto LABEL_41;
    }
    uint64_t v53 = *(void **)(a1 + 192);
    *(_DWORD *)buf = 138412290;
    v123 = v53;
    unsigned int v54 = "Loaded treasure map: %@";
    unint64_t v55 = v52;
    uint32_t v56 = 12;
  }
  _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_INFO, v54, buf, v56);
LABEL_41:
  unsigned int v59 = [v29 stringByAppendingPathComponent:@"qid-to-categories.tsm"];
  int v60 = +[NSFileManager defaultManager];
  unsigned int v61 = [v60 fileExistsAtPath:v59];

  if (v61)
  {
    uint64_t v62 = [ComAppleContextkitCategoriesConstellation alloc];
    unsigned int v63 = [QIDCategoryProviderImpl alloc];
    unint64_t v64 = +[KeylessMap keylessMapForDirectory:v45 fileName:@"qid-to-categories.tsm"];
    unsigned int v65 = [(QIDCategoryProviderImpl *)v63 initWithTreasureMap:v64];
    unsigned int v66 = [(ComAppleContextkitCategoriesConstellation *)v62 initWithDirectory:v45 titlesFile:@"categories-titles-en.dat" qidToCategoryIdTreasureMap:v65];
    int v67 = *(void **)(a1 + 200);
    *(void *)(a1 + 200) = v66;

    char v68 = [(id)a1 config];
    int v69 = [v68 desiredLanguageTags];

    if ([v69 count])
    {
      int v70 = [[JavaUtilArrayList alloc] initWithInt:1];
      int v71 = [v69 firstObject];
      [(JavaUtilArrayList *)v70 addWithId:v71];

      [*(id *)(a1 + 200) setDesiredLanguages:v70];
      unsigned int v72 = (id)qword_100562FE8;
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEBUG)) {
        sub_1002AD0C8(v121, [(JavaUtilArrayList *)v70 size], v72);
      }
    }
    int v73 = qword_100562FE8;
    if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEBUG)) {
      sub_1002AD090(v73, v74, v75, v76, v77, v78, v79, v80);
    }
  }
  else
  {
    long long v81 = *(void **)(a1 + 200);
    *(void *)(a1 + 200) = 0;
  }
  long long v82 = [v29 stringByAppendingPathComponent:@"qid-to-queries.tsm"];
  long long v83 = [v29 stringByAppendingPathComponent:@"queries.spa"];
  long long v84 = +[NSFileManager defaultManager];
  if ([v84 fileExistsAtPath:v82])
  {
    uint64_t v85 = +[NSFileManager defaultManager];
    unsigned int v86 = [v85 fileExistsAtPath:v83];

    if (v86)
    {
      uint64_t v87 = +[KeylessMap keylessMapForDirectory:v45 fileName:@"qid-to-queries.tsm"];
      uint64_t v88 = *(void **)(a1 + 208);
      *(void *)(a1 + 208) = v87;

      uint64_t v89 = [[ComAppleContextkitUtilObjcSpindleArray alloc] initWithOrgApacheLuceneStoreDirectory:v45 withNSString:@"queries.spa"];
      uint64_t v90 = *(void **)(a1 + 216);
      *(void *)(a1 + 216) = v89;

      uint64_t v91 = qword_100562FE8;
      if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEBUG)) {
        sub_1002AD014(v91, v92, v93, v94, v95, v96, v97, v98);
      }
      goto LABEL_56;
    }
  }
  else
  {
  }
  int v99 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = 0;

  int v100 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = 0;

LABEL_56:
  int v101 = [v29 stringByAppendingPathComponent:@"tags.tsm"];
  int v102 = +[NSFileManager defaultManager];
  unsigned int v103 = [v102 fileExistsAtPath:v101];

  if (v103)
  {
    uint64_t v104 = +[KeylessMap keylessMapForDirectory:v45 fileName:@"tags.tsm"];
    v105 = *(void **)(a1 + 224);
    *(void *)(a1 + 224) = v104;

    int v106 = qword_100562FE8;
    if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEBUG)) {
      sub_1002ACF98(v106, v107, v108, v109, v110, v111, v112, v113);
    }
  }
  else
  {
    v114 = *(void **)(a1 + 224);
    *(void *)(a1 + 224) = 0;
  }
  v115 = (void *)qword_100562FE8;
  if (os_log_type_enabled((os_log_t)qword_100562FE8, OS_LOG_TYPE_DEBUG)) {
    sub_1002ACEE0(v115, (void *)a1);
  }

LABEL_63:
  objc_storeStrong((id *)(a1 + 120), v29);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 40));
  if (!*(void *)(a1 + 120))
  {
    unsigned int v116 = +[_PASDeviceState isClassCLocked];
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v119 = 67109120;
      unsigned int v120 = v116;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "No effective index path; isClassCLocked=%i",
        v119,
        8u);
    }
    if (v116)
    {
      +[_PASDeviceState runBlockWhenDeviceIsClassCUnlocked:&stru_10048BAA0];
    }
    else if ((sub_1002AB2E4(@"/private/var/MobileAsset/Assets/com_apple_MobileAsset_ContextKit/com_apple_MobileAsset_ContextKit.plist") & 1) != 0 {
           || sub_1002AB2E4(@"/System/Library/Assets/com_apple_MobileAsset_ContextKit/com_apple_MobileAsset_ContextKit.plist"))
    }
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v119 = 0;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Requesting service shutdown; we came up when mobileasset was still working on our assets",
          v119,
          2u);
      }
      +[CKContextXPCProtocolImpl _shutdownServiceWithReply:0];
    }
  }
}

void sub_1002AAFCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a2 == 1)
  {
    id v23 = objc_begin_catch(exception_object);
    objc_super v24 = (id)qword_100562FE8;
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      [v23 getStackTrace];
      objc_claimAutoreleasedReturnValue();
      sub_1002AD110();
    }

    objc_end_catch();
    JUMPOUT(0x1002AAC58);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002AB228(id a1)
{
  id v1 = dispatch_get_global_queue(9, 0);
  dispatch_async(v1, &stru_10048BAC0);
}

void sub_1002AB278(id a1)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v1 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Requesting service shutdown; we came up before Class C unlock and couldn't get an effective index path",
      v1,
      2u);
  }
  +[CKContextXPCProtocolImpl _shutdownServiceWithReply:0];
}

uint64_t sub_1002AB2E4(void *a1)
{
  id v1 = a1;
  id v2 = +[NSFileManager defaultManager];
  uint64_t v3 = [v2 attributesOfItemAtPath:v1 error:0];

  if (v3)
  {
    id v4 = [v3 objectForKeyedSubscript:NSFileModificationDate];
    if (!v4)
    {
      id v4 = [v3 objectForKeyedSubscript:NSFileCreationDate];
      if (!v4) {
        goto LABEL_9;
      }
    }
    [v4 timeIntervalSinceNow];
    if (v5 < 0.0) {
      double v5 = -v5;
    }
    if (v5 < 300.0) {
      uint64_t v6 = 1;
    }
    else {
LABEL_9:
    }
      uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_1002AB688(uint64_t a1, void *a2)
{
  id v16 = a2;
  +[Util elapsedMillisSinceMachAbsolute:*(void *)(a1 + 56)];
  double v4 = v3;
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  id v5 = [*(id *)(a1 + 32) type];
  if (v5 == (id)6)
  {
    uint64_t v6 = [v16 level1Topics];
    id v7 = [v6 count];

    NLTag v8 = [*(id *)(a1 + 32) url];
    unsigned int v9 = [v8 hasPrefix:@"app://"];

    if (v9) {
      uint64_t v10 = 7;
    }
    else {
      uint64_t v10 = 8;
    }
  }
  else
  {
    uint64_t v10 = (uint64_t)v5;
    int v11 = [v16 results];
    id v7 = [v11 count];
  }
  id v12 = [*(id *)(a1 + 40) indexId];
  uint64_t v13 = +[MetricsLogging instance];
  objc_msgSend(v13, "recordQueryLuceneMsec:queryType:requestType:indexId:", objc_msgSend((id)objc_opt_class(), "queryTypeForRequest:", *(void *)(a1 + 32)), v10, v12, v4);

  id v14 = +[MetricsLogging instance];
  uint64_t v15 = [v16 error];
  [v14 recordQueryEventWithLuceneResultCount:v7 error:v15 requestType:v10 indexId:v12];
}

void sub_1002AC868(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_alloc((Class)CKContextResult);
  NLTag v8 = [v5 title];
  id v9 = [v7 initWithTitle:v8 query:0 url:0 category:0];

  uint64_t v10 = [v5 title];
  [v9 setTitle:v10];

  int v11 = [v5 topicId];
  [v9 setTopicId:v11];

  id v12 = objc_alloc_init((Class)NSMutableOrderedSet);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v13 = v6;
  id v14 = [v13 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v21;
    do
    {
      CFStringRef v17 = 0;
      do
      {
        if (*(void *)v21 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", objc_msgSend(*(id *)(*((void *)&v20 + 1) + 8 * (void)v17), "unsignedIntValue", (void)v20));
        uint64_t v19 = [v18 uuid];

        if (v19) {
          [v12 addObject:v19];
        }

        CFStringRef v17 = (char *)v17 + 1;
      }
      while (v15 != v17);
      id v15 = [v13 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v15);
  }

  [v9 setRelatedItems:v12];
  [*(id *)(a1 + 40) addObject:v9];
}

uint64_t sub_1002ACDC4(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  return result;
}

void sub_1002ACDDC(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

void sub_1002ACE08(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1002ACE28(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [a2 wordlist];
  id v5 = [v4 words];
  [v5 count];
  sub_1002ACE08((void *)&_mh_execute_header, v6, v7, "Wordlist size: %lu", v8, v9, v10, v11, 0);
}

void sub_1002ACEE0(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [a2 wordlist];
  id v5 = [v4 words];
  [v5 count];
  sub_1002ACE08((void *)&_mh_execute_header, v6, v7, "Wordlist size: %lu", v8, v9, v10, v11, 0);
}

void sub_1002ACF98(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002ACFD0()
{
  sub_1002ACDF8();
  sub_1002ACDC4(v1, v2, v3, 5.778e-34);
  sub_1002ACDDC((void *)&_mh_execute_header, "Exception while initializing tags map: %@ %@", v4, v5);
}

void sub_1002AD014(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002AD04C()
{
  sub_1002ACDF8();
  sub_1002ACDC4(v1, v2, v3, 5.778e-34);
  sub_1002ACDDC((void *)&_mh_execute_header, "Exception while initializing query index: %@ %@", v4, v5);
}

void sub_1002AD090(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002AD0C8(uint8_t *buf, int a2, os_log_t log)
{
  *(_DWORD *)buf = 67109120;
  *((_DWORD *)buf + 1) = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Number of Constellation languages: %d", buf, 8u);
}

void sub_1002AD110()
{
  sub_1002ACDF8();
  sub_1002ACDC4(v1, v2, v3, 5.778e-34);
  sub_1002ACDDC((void *)&_mh_execute_header, "Exception while initializing Constellation: %@ %@", v4, v5);
}

void sub_1002AD154()
{
  sub_1002ACDF8();
  sub_1002ACDC4(v1, v2, v3, 5.778e-34);
  sub_1002ACDDC((void *)&_mh_execute_header, "Exception while opening Lucene index: %@ %@", v4, v5);
}

void sub_1002AD198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002AD1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002AE224(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 error];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_1002AE374(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    BOOL v2 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG);
    if (v2) {
      sub_1002B1D08(v2, v3, v4, v5, v6, v7, v8, v9);
    }
    if ([*(id *)(a1 + 32) type] == (id)6)
    {
      uint64_t v10 = [WeakRetained _contextEngineInstance];
      uint64_t v11 = v10;
      if (v10
        && ![v10 disabled]
        && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        id v31 = v11;
        uint64_t v29 = -[RequestTransaction initWithTransactionId:decPending:]([RequestTransaction alloc], "initWithTransactionId:decPending:", @"ContextService.findCategorizations", [*(id *)(a1 + 32) incPending]);
        id v12 = objc_alloc_init((Class)NSMutableDictionary);
        uint64_t v30 = a1;
        [*(id *)(a1 + 32) urls];
        long long v33 = 0u;
        long long v34 = 0u;
        long long v35 = 0u;
        long long v36 = 0u;
        id v13 = (id)objc_claimAutoreleasedReturnValue();
        id v14 = [v13 countByEnumeratingWithState:&v33 objects:v37 count:16];
        if (v14)
        {
          id v15 = v14;
          uint64_t v16 = *(void *)v34;
          do
          {
            for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v34 != v16) {
                objc_enumerationMutation(v13);
              }
              uint64_t v18 = *(void **)(*((void *)&v33 + 1) + 8 * i);
              if ([v18 length])
              {
                id v20 = objc_alloc_init((Class)CKContextResponse);
                long long v21 = [WeakRetained[9] currentLayout];
                [v21 bounds];
                objc_msgSend(v20, "setAvailableLayoutSize:", v22, v23);

                objc_super v24 = +[NSURL URLWithString:v18];
                if (v24) {
                  +[LuceneContextRequest addTopicsForURL:v24 withEngine:v31 toResponse:v20];
                }
                [v12 setObject:v20 forKeyedSubscript:v18];
              }
            }
            id v15 = [v13 countByEnumeratingWithState:&v33 objects:v37 count:16];
          }
          while (v15);
        }

        (*(void (**)(void))(*(void *)(v30 + 40) + 16))();
        [(RequestTransaction *)v29 discard];

        uint64_t v25 = v31;
      }
      else
      {
        uint64_t v28 = *(void *)(a1 + 40);
        uint64_t v25 = +[CKContextResponse serviceDisabledError];
        (*(void (**)(uint64_t, void, void *))(v28 + 16))(v28, 0, v25);
      }
    }
    else
    {
      uint64_t v26 = *(void *)(a1 + 40);
      unsigned int v27 = +[CKContextResponse malformedRequestError];
      (*(void (**)(uint64_t, void, void *))(v26 + 16))(v26, 0, v27);
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1002AEBA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002AEBCC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 72);
  id v7 = a2;
  uint64_t v4 = [v3 currentLayout];
  [v4 bounds];
  objc_msgSend(v7, "setAvailableLayoutSize:", v5, v6);

  [*(id *)(a1 + 40) discard];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1002AED7C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 discard];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1002B0390(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002B04B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002B04C4(uint64_t a1)
{
}

void sub_1002B04CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 80) && [*(id *)(a1 + 32) includeRequestInResponse]) {
    [v3 setDebugRequest:*(void *)(a1 + 32)];
  }
  id v4 = [*(id *)(a1 + 32) text];
  if ([*(id *)(a1 + 32) includePartsOfSpeech])
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Parsing parts of speech from original text", buf, 2u);
    }
    double v5 = +[LanguageUtilities partsOfSpeechInText:v4];
    id v6 = [v5 copy];
    [v3 setPartsOfSpeechToTexts:v6];
  }
  id v7 = [*(id *)(a1 + 32) donorBundleIdentifiers];
  [v3 setDonorBundleIdentifiers:v7];

  +[Util elapsedMillisSinceMachAbsolute:*(void *)(a1 + 72)];
  double v9 = v8;
  if (([*(id *)(a1 + 32) debug] & 1) != 0
    || [*(id *)(a1 + 32) timing])
  {
    objc_msgSend(v3, "addDebug:", @"tTotal:%f", *(void *)&v9);
  }
  uint64_t v10 = [v3 error];

  if (v10)
  {
    id v11 = [*(id *)(a1 + 32) type];
    if (v11 == (id)15 || v11 == (id)1)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        id v12 = [v3 error];
        id v13 = [*(id *)(a1 + 32) type];
        *(_DWORD *)buf = 138412546;
        id v20 = v12;
        __int16 v21 = 2048;
        id v22 = v13;
        id v14 = "ContextKit error for Safari request: %@ for type:%lu";
LABEL_18:
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, v14, buf, 0x16u);
      }
    }
    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = [v3 error];
      id v15 = [*(id *)(a1 + 32) type];
      *(_DWORD *)buf = 138412546;
      id v20 = v12;
      __int16 v21 = 2048;
      id v22 = v15;
      id v14 = "ContextKit error: %@ for type:%lu";
      goto LABEL_18;
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  uint64_t v16 = +[MetricsLogging instance];
  objc_msgSend(v16, "recordFindResultsMsec:queryType:requestType:indexId:", +[LuceneContextEngine queryTypeForRequest:](LuceneContextEngine, "queryTypeForRequest:", *(void *)(a1 + 32)), objc_msgSend(*(id *)(a1 + 32), "type"), *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v9);

  CFStringRef v17 = +[MetricsLogging instance];
  [v17 recordAssetInfo:*(void *)(*(void *)(a1 + 40) + 8)];

  id v18 = self;
}

void sub_1002B07F8(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  if (a3 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    double v6 = *(double *)(a1 + 40) * 1000.0;
    id v7 = *(void **)(a1 + 32);
    double v8 = [v5 context];
    int v9 = 134218240;
    double v10 = v6;
    __int16 v11 = 2048;
    id v12 = [v7 _totalDonationsToWaitForWithDonationState:v8];
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "Timed out waiting for donations with timeout Msec:%f ; total donations to wait for: %lu",
      (uint8_t *)&v9,
      0x16u);
  }
}

void sub_1002B08FC(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void *)(v5 + 40);
  double v6 = (id *)(v5 + 40);
  if (v7)
  {
    BOOL v8 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG);
    if (v8) {
      sub_1002B20DC(v8, v9, v10, v11, v12, v13, v14, v15);
    }
  }
  else
  {
    objc_storeStrong(v6, a2);
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  }
}

void sub_1002B161C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002B19DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_1002B1A04(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1002B1A20(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1002B1A48()
{
  sub_1002B19F8();
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Request count was negative: %zi", v0, 0xCu);
}

void sub_1002B1AC4()
{
  sub_1002B19F8();
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Request count got negative: %zi", v0, 0xCu);
}

void sub_1002B1B40()
{
  sub_1002B1A3C();
  sub_1002B19DC((void *)&_mh_execute_header, &_os_log_default, v0, "Could not set notification status, error:%i", v1, v2, v3, v4, v5);
}

void sub_1002B1BB0()
{
  sub_1002B1A3C();
  sub_1002B19DC((void *)&_mh_execute_header, &_os_log_default, v0, "Could not register notification, error:%i", v1, v2, v3, v4, v5);
}

void sub_1002B1C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B1C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B1C98()
{
  sub_1002B19F8();
  sub_1002B1A04((void *)&_mh_execute_header, &_os_log_default, v0, "Warm-up path: %@", v1, v2, v3, v4, v5);
}

void sub_1002B1D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B1D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B1D80(void *a1, uint64_t a2, uint8_t *buf)
{
  uint64_t v4 = *(void *)(*(void *)a2 + 40);
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(void *)(buf + 14) = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Using Context engine: %@; id:%@",
    buf,
    0x16u);
}

void sub_1002B1DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B1E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B1E68()
{
  sub_1002B19F8();
  sub_1002B1A04((void *)&_mh_execute_header, &_os_log_default, v0, "Received %lu extraction items from the donor process", v1, v2, v3, v4, v5);
}

void sub_1002B1ED8()
{
  sub_1002B19F8();
  sub_1002B1A04((void *)&_mh_execute_header, &_os_log_default, v0, "Received %lu UI elements from the donor process", v1, v2, v3, v4, v5);
}

void sub_1002B1F48(uint8_t *buf, uint64_t a2, uint64_t a3, double a4)
{
  *(_DWORD *)buf = 134218496;
  *(void *)(buf + 4) = a2;
  *((_WORD *)buf + 6) = 2048;
  *(void *)(buf + 14) = a3;
  *((_WORD *)buf + 11) = 2048;
  *((double *)buf + 3) = a4;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Received %lu donations from %lu sources after %f Msec", buf, 0x20u);
}

void sub_1002B1FA8()
{
  sub_1002B1A3C();
  sub_1002B19DC((void *)&_mh_execute_header, &_os_log_default, v0, "Could not post notification, error:%i", v1, v2, v3, v4, v5);
}

void sub_1002B2018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B2054(uint8_t *buf, uint64_t a2)
{
  *(_DWORD *)buf = 134217984;
  *(void *)(buf + 4) = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Text is too short, length:%lu", buf, 0xCu);
}

void sub_1002B20A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B20DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B2370(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v13 = a2;
  uint64_t v9 = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", a3, a4);
  uint64_t v10 = [*(id *)(a1 + 40) objectForKey:v13];
  if (!v10)
  {
    uint64_t v10 = objc_opt_new();
    [*(id *)(a1 + 40) setObject:v10 forKey:v13];
  }
  uint64_t v11 = [v10 objectForKey:v9];
  if (v11)
  {
    uint64_t v12 = v11;
    [(CTKNamedEntity *)v11 incOccurenceWithPosition:a5];
  }
  else
  {
    uint64_t v12 = [[CTKNamedEntity alloc] initWithName:v9 firstOccurrence:a3 tagType:v13];
    [v10 setObject:v12 forKey:v9];
  }
}

void sub_1002B43BC(id *a1, NSString *a2)
{
  if (NLTagPersonalName == a2)
  {
    objc_msgSend(a1[4], "substringWithRange:");
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v3 = +[NSCharacterSet whitespaceCharacterSet];
    uint64_t v4 = [v9 componentsSeparatedByCharactersInSet:v3];
    id v5 = [v4 count];

    if ((unint64_t)v5 >= 2)
    {
      double v6 = [[LuceneContextResult alloc] initWithText:v9];
      [a1[5] frameInWindow];
      -[LuceneContextResult setFrameInWindow:](v6, "setFrameInWindow:");
      [a1[5] absoluteOriginOnScreen];
      -[LuceneContextResult setAbsoluteOriginOnScreen:](v6, "setAbsoluteOriginOnScreen:");
      -[LuceneContextResult setOnScreen:](v6, "setOnScreen:", [a1[5] isOnScreen]);
      uint64_t v7 = +[NSSet setWithObject:CKContextTagTypePersonReal];
      [(LuceneContextResult *)v6 setTags:v7];

      [(LuceneContextResult *)v6 setMinPrefix:1];
      [(LuceneContextResult *)v6 setSourceUIElement:a1[5]];
      BOOL v8 = [a1[8] debugStringForStructuredResult:v6];
      [(LuceneContextResult *)v6 setDebug:v8];
      if (([a1[6] containsObject:v6] & 1) == 0
        && ([a1[7] containsObject:v9] & 1) == 0)
      {
        [a1[6] addObject:v6];
      }
    }
  }
}

void sub_1002B4754(id a1)
{
  v3[0] = NSTextCheckingNameKey;
  v3[1] = NSTextCheckingJobTitleKey;
  v3[2] = NSTextCheckingOrganizationKey;
  v3[3] = NSTextCheckingStreetKey;
  v3[4] = NSTextCheckingCityKey;
  v3[5] = NSTextCheckingStateKey;
  v3[6] = NSTextCheckingZIPKey;
  v3[7] = NSTextCheckingCountryKey;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:8];
  uint64_t v2 = (void *)qword_100563078;
  qword_100563078 = v1;
}

void sub_1002B4834(uint8_t *buf, unsigned char *a2)
{
  *buf = 0;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Not including a match because of merging.", buf, 2u);
}

void sub_1002B4878(uint8_t *buf, unsigned char *a2)
{
  *buf = 0;
  *a2 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Not including a result because it was already found.", buf, 2u);
}

id sub_1002B4DA0(uint64_t a1)
{
  uint64_t v2 = qword_100563088;
  if (os_log_type_enabled((os_log_t)qword_100563088, OS_LOG_TYPE_DEBUG)) {
    sub_1002B5F98(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  return [*(id *)(a1 + 32) _loadCommonAsset];
}

id sub_1002B4DEC(uint64_t a1)
{
  uint64_t v2 = qword_100563088;
  if (os_log_type_enabled((os_log_t)qword_100563088, OS_LOG_TYPE_DEBUG)) {
    sub_1002B6010(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  return [*(id *)(a1 + 32) _loadCommonAsset];
}

id sub_1002B50A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

void sub_1002B5D7C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x1002B5D14);
  }
  _Unwind_Resume(exception_object);
}

id sub_1002B5DC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _invokeIndexChangeHandler];
}

void sub_1002B5EC4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_1002B5EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B5F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B5F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B5F98(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B6010(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B6088()
{
  sub_1002B19F8();
  sub_1002B1A04((void *)&_mh_execute_header, v0, v1, "Loaded plist from %@", v2, v3, v4, v5, v6);
}

void sub_1002B60F0(os_log_t log)
{
  int v1 = 138412290;
  CFStringRef v2 = @"IndexMetadata";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%@ has missing or ill-formatted LanguageMapping dictionary.", (uint8_t *)&v1, 0xCu);
}

void sub_1002B6174(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "No suitable index for user's NSLocale settings; no fallback either",
    v1,
    2u);
}

void sub_1002B61B8()
{
  sub_1002B19F8();
  sub_1002B1A04((void *)&_mh_execute_header, v0, v1, "No suitable index for user's NSLocale settings; using fallback index language: %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1002B6220(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, (const char *)&unk_1003DF0BB, v1, 2u);
}

void sub_1002B6264()
{
  sub_1002B19F8();
  sub_1002B5EC4((void *)&_mh_execute_header, v0, v1, "Selecting index language via LanguageMapping[%@] == %@");
}

void sub_1002B62D8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B6348()
{
  sub_1002B19F8();
  sub_1002B1A04((void *)&_mh_execute_header, v0, v1, "Assets for IndexId: %@ not available, attempting fallback index", v2, v3, v4, v5, v6);
}

void sub_1002B63B0(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&v3[4] = *a1;
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = a2;
  sub_1002B5EC4((void *)&_mh_execute_header, a2, a3, "Index ID recomputed, changing from %@ to %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

uint64_t sub_1002B659C()
{
  qword_100563090 = objc_opt_new();
  return _objc_release_x1();
}

void sub_1002B68A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1002B6988;
    v8[3] = &unk_10048BD58;
    v8[4] = a1;
    id v9 = v6;
    if (+[Util linewiseFromFile:v5 dataReadingOptions:1 withIterator:v8]&& os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG))
    {
      sub_1002B69B8((uint64_t)v5);
    }
  }
}

id sub_1002B6988(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) setObject:*(void *)(a1 + 40) forKeyedSubscript:a2];
}

void sub_1002B69B8(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Loaded wordlist entries from %@", (uint8_t *)&v1, 0xCu);
}

void sub_1002B79F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a63, 8);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x220], 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Block_object_dispose(&STACK[0x270], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002B7AA0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1002B7AB0(uint64_t a1)
{
}

uint64_t sub_1002B7AB8(uint64_t a1, void *a2, unsigned char *a3)
{
  id v41 = a2;
  if ([v41 characterAtIndex:0] != 92)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 56) + 40));
    uint64_t v11 = [WeakRetained inspectTitle:v41 titleForTokenization:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) conditionals:*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40)];

    uint64_t v12 = *(void *)(*(void *)(a1 + 104) + 8);
    id v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = 0;

    uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = 0;

    if (v11)
    {
      ++*(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 24);
      objc_msgSend(v11, "setIndex:");
      [*(id *)(*(void *)(*(void *)(a1 + 120) + 8) + 40) addObject:v11];
    }
    goto LABEL_10;
  }
  if ((unint64_t)[v41 length] < 2) {
    goto LABEL_11;
  }
  unsigned int v5 = [v41 characterAtIndex:1];
  if (v5 == 86)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 0;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
    *a3 = 1;
    goto LABEL_11;
  }
  if (v5 != 76)
  {
    id v6 = v41;
    if (v5 == 36)
    {
      if ((unint64_t)[v41 length] >= 3)
      {
        uint64_t v7 = [v41 substringFromIndex:2];
        uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
        id v9 = *(void **)(v8 + 40);
        *(void *)(v8 + 40) = v7;
      }
      goto LABEL_11;
    }
    goto LABEL_57;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
  if ((unint64_t)[v41 length] >= 4
    && [v41 getCString:*(void *)(a1 + 128) maxLength:256 encoding:4])
  {
    int v16 = 0;
    char v17 = 0;
    uint64_t v18 = 1;
LABEL_18:
    uint64_t v19 = (v18 << 32) + 0x200000000;
    int v20 = v18 + 2;
    uint64_t v18 = (int)v18 + 1;
    while (1)
    {
      uint64_t v21 = *(void *)(a1 + 128);
      int v22 = *(char *)(v21 + v18);
      if (!*(unsigned char *)(v21 + v18))
      {
        int v23 = 0;
        int v24 = v20 - 1;
        int v20 = -1;
        goto LABEL_30;
      }
      if (v22 == 45)
      {
        int v23 = 1;
        goto LABEL_29;
      }
      if (v22 == 42)
      {
        int v16 = v20 - 1;
        char v17 = 1;
        goto LABEL_18;
      }
      if (v22 == 32) {
        break;
      }
      v19 += (uint64_t)&_mh_execute_header;
      ++v20;
      ++v18;
      if (([(id)qword_1005630B8 characterIsMember:(unsigned __int16)v22] & 1) == 0) {
        goto LABEL_11;
      }
    }
    int v23 = 0;
LABEL_29:
    int v24 = v20 - 1;
    int v16 = v20 - 1;
LABEL_30:
    int v25 = v16 ? v16 : v24;
    if (v25 >= 3)
    {
      uint64_t v11 = objc_msgSend(v41, "substring:endIndex:", 2);
      if ([v11 isEqualToString:*(void *)(a1 + 32)])
      {
        if (!*(void *)(a1 + 136)) {
          goto LABEL_61;
        }
        if (v22)
        {
          uint64_t v26 = *(void *)(a1 + 128);
          char v27 = *(unsigned char *)(v26 + (v19 >> 32));
          if (v27)
          {
            int v28 = 0;
            uint64_t v29 = (unsigned __int8 *)((v19 >> 32) + v26 + 1);
            do
            {
              unsigned __int8 v30 = v27 - 48;
              if ((v27 - 48) >= 0xAu)
              {
                if ((v27 - 97) > 0x19u) {
                  goto LABEL_10;
                }
                unsigned __int8 v30 = v27 - 87;
              }
              int v28 = 36 * v28 + v30;
              int v31 = *v29++;
              char v27 = v31;
            }
            while (v31);
          }
          else
          {
            int v28 = 1;
          }
          if (v23) {
            int v28 = -v28;
          }
          goto LABEL_56;
        }
        if (v20 == v24)
        {
          if (v23) {
            int v28 = -1;
          }
          else {
            int v28 = 1;
          }
LABEL_56:
          *(_DWORD *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = v28;

          id v6 = v41;
LABEL_57:
          uint64_t v32 = *(void **)(*(void *)(*(void *)(a1 + 104) + 8) + 40);
          if (!v32)
          {
            uint64_t v33 = objc_opt_new();
            uint64_t v34 = *(void *)(*(void *)(a1 + 104) + 8);
            long long v35 = *(void **)(v34 + 40);
            *(void *)(v34 + 40) = v33;

            id v6 = v41;
            uint64_t v32 = *(void **)(*(void *)(*(void *)(a1 + 104) + 8) + 40);
          }
          [v32 addObject:v6];
          goto LABEL_11;
        }
        if (v20 == -1) {
          goto LABEL_61;
        }
      }
      else if (v20 == -1 {
             && (([*(id *)(a1 + 40) isEqualToString:v11] & 1) != 0
      }
              || *(unsigned char *)(a1 + 144) && ([*(id *)(a1 + 48) containsObject:v11] & 1) != 0))
      {
LABEL_61:
        *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
        if (v17) {
          long long v36 = v11;
        }
        else {
          long long v36 = 0;
        }
        uint64_t v37 = *(void *)(*(void *)(a1 + 88) + 8);
        id v38 = v36;
        double v39 = *(void **)(v37 + 40);
        *(void *)(v37 + 40) = v38;
      }
LABEL_10:
    }
  }
LABEL_11:
  return _objc_release_x1();
}

int64_t sub_1002B7ED0(id a1, TitleInfo *a2, TitleInfo *a3)
{
  uint64_t v4 = a2;
  unsigned int v5 = a3;
  int64_t v6 = [(TitleInfo *)v4 minPrefix];
  if (v6 < [(TitleInfo *)v5 minPrefix]) {
    goto LABEL_2;
  }
  id v8 = [(TitleInfo *)v4 minPrefix];
  if (v8 != (id)[(TitleInfo *)v5 minPrefix])
  {
LABEL_12:
    int64_t v7 = 1;
    goto LABEL_13;
  }
  id v9 = [(TitleInfo *)v4 tokenCountMatching];
  if (v9 <= (id)[(TitleInfo *)v5 tokenCountMatching])
  {
    id v10 = [(TitleInfo *)v4 tokenCountMatching];
    if (v10 == (id)[(TitleInfo *)v5 tokenCountMatching])
    {
      id v11 = [(TitleInfo *)v4 tokenCountPrimary];
      if (v11 <= (id)[(TitleInfo *)v5 tokenCountPrimary])
      {
        id v12 = [(TitleInfo *)v4 tokenCountPrimary];
        if (v12 != (id)[(TitleInfo *)v5 tokenCountPrimary]) {
          goto LABEL_12;
        }
        id v13 = [(TitleInfo *)v4 index];
        if (v13 >= (id)[(TitleInfo *)v5 index])
        {
          if (v4 == v5)
          {
            int64_t v7 = 0;
            goto LABEL_13;
          }
          goto LABEL_12;
        }
      }
    }
    else
    {
      id v14 = [(TitleInfo *)v4 tokenCountMatching];
      if (v14 <= (id)[(TitleInfo *)v5 tokenCountMatching]) {
        goto LABEL_12;
      }
    }
  }
LABEL_2:
  int64_t v7 = -1;
LABEL_13:

  return v7;
}

float sub_1002B8B80(uint64_t a1, void *a2, int *a3, void *a4)
{
  int64_t v6 = *(NSMapTable **)(*(void *)(a1 + 32) + 136);
  uint64_t v7 = a3[8];
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  id v11 = NSMapGet(v6, (const void *)(v7 + (int)[v8 docID]));

  id v12 = [v11 phrases];
  [v12 addObject:v10];

  [v8 score];
  float v14 = v13;

  return v14;
}

float sub_1002B8C44(uint64_t a1, void *a2, int *a3, void *a4)
{
  int64_t v6 = *(NSMapTable **)(*(void *)(a1 + 32) + 136);
  uint64_t v7 = a3[8];
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  id v11 = NSMapGet(v6, (const void *)(v7 + (int)[v8 docID]));

  id v12 = [v11 terms];
  [v12 addObject:v10];

  [v8 score];
  float v14 = v13;

  return v14;
}

float sub_1002B8D08(uint64_t a1, void *a2, int *a3, void *a4)
{
  int64_t v6 = *(NSMapTable **)(*(void *)(a1 + 32) + 136);
  uint64_t v7 = a3[8];
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  id v11 = NSMapGet(v6, (const void *)(v7 + (int)[v8 docID]));

  id v12 = [v11 secondary];
  [v12 addObject:v10];

  [v8 score];
  float v14 = v13;

  return v14;
}

void sub_1002BA23C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  _Block_object_dispose(&STACK[0x208], 8);
  if (a2 == 1)
  {
    id v24 = objc_begin_catch(a1);
    id v25 = &_os_log_default;
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002C9128();
    }

    uint64_t v26 = objc_opt_new();
    char v27 = [[JavaIoPrintWriter alloc] initWithJavaIoWriter:v26 withBoolean:0];
    [v24 printStackTraceWithJavaIoPrintWriter:v27];
    [(JavaIoPrintWriter *)v27 close];
    if (*(unsigned char *)(a21 + 265)) {
      int v28 = v26;
    }
    else {
      int v28 = v24;
    }
    uint64_t v29 = [v28 description];
    id v30 = objc_alloc(*(Class *)(v21 + 3688));
    int v31 = +[NSDictionary dictionaryWithObject:v29 forKey:NSLocalizedFailureReasonErrorKey];
    uint64_t v32 = +[NSError errorWithDomain:ContextKitErrorDomain code:1 userInfo:v31];
    id v33 = objc_msgSend(v30, "initWithError:requestType:", v32, objc_msgSend(*(id *)(a21 + 272), "type"));
    uint64_t v34 = *(void **)(a21 + 304);
    *(void *)(a21 + 304) = v33;

    if (!*(unsigned char *)(a21 + 265))
    {
      long long v35 = [v26 description];
      +[_PASCrashHelper simulateCrashWithDescription:v35];
      [v35 enumerateLinesUsingBlock:&stru_10048BE50];
      v24;
    }
    objc_end_catch();
    JUMPOUT(0x1002B99A4);
  }
  _Block_object_dispose(&STACK[0x238], 8);
  _Unwind_Resume(a1);
}

void sub_1002BA51C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (!v2
    || (unint64_t)[v2 length] < 2
    || *(unsigned char *)(a1 + 56)
    && ([*(id *)(a1 + 32) isLanguageSupported:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)] & 1) == 0)
  {
    uint64_t v3 = +[Util languageTagForString:*(void *)(a1 + 40)];
    uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
    unsigned int v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_INFO, "Detected language: %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

id sub_1002BA62C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _tokenizeText];
}

uint64_t sub_1002BA634(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(a1 + 32) _constructQuery];
  return _objc_release_x1();
}

uint64_t sub_1002BA680(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = +[Util languageTagForString:*(void *)(a1 + 32)];
  return _objc_release_x1();
}

void sub_1002BA6D4(id a1, NSString *a2, BOOL *a3)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1002C92D4();
  }
}

void sub_1002BA714(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 288));
  uint64_t v3 = [WeakRetained constellation];

  unsigned int v4 = [*(id *)(*(void *)(a1 + 32) + 272) overrideConstellationMinCount];
  if (v4 <= 1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = v4;
  }
  unsigned int v6 = [*(id *)(*(void *)(a1 + 32) + 272) overrideConstellationMinWeight];
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 3;
  }
  uint64_t v8 = objc_msgSend(v3, "newRequestWithMaxCategories:minQidCount:minWeight:", objc_msgSend(*(id *)(*(void *)(a1 + 32) + 272), "maxConstellationTopics"), v5, v7);
  id v10 = [v8 newQIDContainer];
  id v11 = *(void **)(a1 + 40);
  v47[0] = _NSConcreteStackBlock;
  v47[1] = 3221225472;
  v47[2] = sub_1002BAB64;
  v47[3] = &unk_10048BE78;
  id v48 = v10;
  id v12 = v10;
  [v11 enumerateKeysAndObjectsUsingBlock:v47];
  objc_msgSend(v8, "prepareItemsWithComAppleContextkitCategoriesConstellation_Request_QIDCountPQ:", v12);

  [v8 trimCounts];
  [v8 subtractAncestorCounts];
  float v14 = [v3 newTitleMapper];
  uint64_t v34 = v3;
  uint64_t v37 = [v3 newQIDMapper];
  uint64_t v15 = [*(id *)(*(void *)(a1 + 32) + 304) level2Topics];
  int v16 = v15;
  if (v15) {
    id v17 = v15;
  }
  else {
    id v17 = (id)objc_opt_new();
  }
  uint64_t v18 = v17;

  [*(id *)(*(void *)(a1 + 32) + 304) setLevel2Topics:v18];
  id v33 = v8;
  [v8 trimMatches];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  obid j = (id)objc_claimAutoreleasedReturnValue();
  id v38 = [obj countByEnumeratingWithState:&v43 objects:v50 count:16];
  if (v38)
  {
    uint64_t v36 = *(void *)v44;
    do
    {
      for (uint64_t i = 0; i != v38; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v44 != v36) {
          objc_enumerationMutation(obj);
        }
        uint64_t v20 = *(void *)(*((void *)&v43 + 1) + 8 * i);
        uint64_t v21 = [v14 categoryIdToTitleWithInt:*(unsigned int *)(v20 + 8)];
        id v22 = objc_alloc((Class)CKContextResult);
        int v23 = [v14 categoryIdToTitleWithInt:*(unsigned int *)(v20 + 24)];
        id v24 = [v22 initWithTitle:v21 query:0 url:0 category:v23];

        id v25 = [v37 categoryIdToTitleWithInt:*(unsigned int *)(v20 + 8)];
        [v24 setTopicId:v25];

        uint64_t v26 = +[NSMutableOrderedSet orderedSetWithCapacity:](NSMutableOrderedSet, "orderedSetWithCapacity:", (int)[*(id *)(v20 + 32) size]);
        long long v39 = 0u;
        long long v40 = 0u;
        long long v41 = 0u;
        long long v42 = 0u;
        id v27 = *(id *)(v20 + 32);
        id v28 = [v27 countByEnumeratingWithState:&v39 objects:v49 count:16];
        if (v28)
        {
          id v29 = v28;
          uint64_t v30 = *(void *)v40;
          do
          {
            for (id j = 0; j != v29; id j = (char *)j + 1)
            {
              if (*(void *)v40 != v30) {
                objc_enumerationMutation(v27);
              }
              [v26 addObject:*(void *)(*((void *)&v39 + 1) + 8 * (void)j)];
            }
            id v29 = [v27 countByEnumeratingWithState:&v39 objects:v49 count:16];
          }
          while (v29);
        }

        [v24 setRelatedItems:v26];
        [v18 addObject:v24];
      }
      id v38 = [obj countByEnumeratingWithState:&v43 objects:v50 count:16];
    }
    while (v38);
  }
}

void sub_1002BAB64(uint64_t a1, void *a2, void *a3)
{
  unsigned int v4 = *(void **)(a1 + 32);
  id v5 = a2;
  objc_msgSend(v4, "addItemWithNSString:withInt:", v5, objc_msgSend(a3, "integerValue"));
}

id sub_1002BABC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) addCoreNLPTags];
}

id sub_1002BD7E4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_1002BF234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a58, 8);
  _Block_object_dispose(&a62, 8);
  _Block_object_dispose(&a66, 8);
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose(&STACK[0x208], 8);
  _Block_object_dispose(&STACK[0x228], 8);
  _Block_object_dispose(&STACK[0x248], 8);
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose(&STACK[0x288], 8);
  _Block_object_dispose(&STACK[0x2A8], 8);
  _Block_object_dispose((const void *)(v70 - 248), 8);
  _Block_object_dispose((const void *)(v70 - 216), 8);
  _Block_object_dispose((const void *)(v70 - 184), 8);
  _Block_object_dispose((const void *)(v70 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1002BF30C(void *a1, void *a2)
{
  id v3 = a1;
  unsigned int v4 = a2;
  if (v3)
  {
    [v3 reset];
    char v6 = 1;
    int v5 = 10001;
    do
    {
      if (![v3 incrementToken]) {
        break;
      }
      if (!--v5) {
        break;
      }
      v4[2](v4, &v6);
    }
    while (v6);
    [v3 end];
    [v3 close];
  }
}

void sub_1002BF3BC(_Unwind_Exception *a1)
{
}

void sub_1002BF3DC(void *a1)
{
}

void sub_1002BF3E8(uint64_t a1, unsigned char *a2)
{
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  id v4 = [*(id *)(a1 + 32) length];
  uint64_t v5 = *(void *)(a1 + 40);
  if ((int)v4 < *(_DWORD *)(v5 + 48) || (id v6 = v4, (int)v4 > *(_DWORD *)(v5 + 52)))
  {
    ++*(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
    ++*(_DWORD *)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
    ++*(_DWORD *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
    return;
  }
  uint64_t v7 = [*(id *)(a1 + 32) buffer];
  uint64_t v8 = +[NSString valueOfChars:v7 offset:0 count:v6];

  if ([v8 length])
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = *(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8)
                                                                            + 24);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24) = *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8)
                                                                           + 24);
    *(_DWORD *)(*(void *)(*(void *)(a1 + 128) + 8) + 24) = [*(id *)(a1 + 48) startOffset];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) = [*(id *)(a1 + 48) endOffset];
    uint64_t v69 = 0;
    uint64_t v70 = &v69;
    uint64_t v71 = 0x3032000000;
    unsigned int v72 = sub_1002B7AA0;
    int v73 = sub_1002B7AB0;
    id v74 = [*(id *)(*(void *)(a1 + 40) + 80) objectForKey:v8];
    id v9 = (void *)v70[5];
    id v10 = v9;
    if (!v9)
    {
      v66[0] = _NSConcreteStackBlock;
      v66[1] = 3221225472;
      v66[2] = sub_1002BFFB4;
      v66[3] = &unk_10048BEC8;
      uint64_t v11 = *(void *)(a1 + 40);
      char v68 = &v69;
      v66[4] = v11;
      id v67 = v8;
      +[Util elapsedMillisForBlock:v66 enableTiming:*(unsigned __int8 *)(*(void *)(a1 + 40) + 24)];
      uint64_t v12 = *(void *)(*(void *)(a1 + 136) + 8);
      *(float *)&double v13 = v13 + *(float *)(v12 + 24);
      *(_DWORD *)(v12 + 24) = LODWORD(v13);
      if ([(id)v70[5] valid])
      {
        [(id)v70[5] setFirstOccurence:*(unsigned int *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)];
        [(id)v70[5] setFirstOccurenceUnique:*(unsigned int *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)];
        if (*(void *)(a1 + 184) >= (unint64_t)*(unsigned int *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)) {
          [*(id *)(*(void *)(a1 + 40) + 96) addObject:v70[5]];
        }
        id v14 = [(id)v70[5] needOffsets];
        [(id)v70[5] setAddOffsets:v14];
        if ([(id)v70[5] isPrimary]) {
          ++*(_DWORD *)(*(void *)(*(void *)(a1 + 144) + 8) + 24);
        }
      }

      id v10 = (void *)v70[5];
    }
    if ([v10 valid])
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8) + 24) = objc_msgSend((id)qword_1005630E8, "characterIsMember:", objc_msgSend(*(id *)(a1 + 56), "charAtWithInt:", *(unsigned int *)(*(void *)(*(void *)(a1 + 128) + 8) + 24)));
      if (*(int *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) >= 1)
      {
        int v15 = *(_DWORD *)(*(void *)(*(void *)(a1 + 128) + 8) + 24);
        if (v15 >= 1)
        {
          id v16 = [*(id *)(a1 + 56) charAtWithInt:(v15 - 1)];
          if ([*(id *)(*(void *)(a1 + 40) + 240) characterIsMember:v16])
          {
            int v17 = *(_DWORD *)(*(void *)(*(void *)(a1 + 128) + 8) + 24);
            uint64_t v18 = (v17 - 2);
            if (v17 < 2
              || (objc_msgSend((id)qword_1005630F8, "characterIsMember:", objc_msgSend(*(id *)(a1 + 56), "charAtWithInt:", v18)) & 1) != 0)
            {
              objc_msgSend((id)v70[5], "setStartsQuotedCount:", objc_msgSend((id)v70[5], "startsQuotedCount", v18) + 1);
              [(id)v70[5] setAddOffsets:1];
            }
          }
          if ([*(id *)(*(void *)(a1 + 40) + 248) characterIsMember:v16]) {
            objc_msgSend((id)v70[5], "setPartialNgramCount:", objc_msgSend((id)v70[5], "partialNgramCount") + 1);
          }
        }
      }
      if (*(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) < *(_DWORD *)(a1 + 232))
      {
        id v19 = objc_msgSend(*(id *)(a1 + 56), "charAtWithInt:");
        if ([*(id *)(*(void *)(a1 + 40) + 240) characterIsMember:v19]
          && (*(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) + 1 >= *(_DWORD *)(a1 + 232)
           || (objc_msgSend((id)qword_1005630F8, "characterIsMember:", objc_msgSend(*(id *)(a1 + 56), "charAtWithInt:")) & 1) != 0))
        {
          objc_msgSend((id)v70[5], "setEndsQuotedCount:", objc_msgSend((id)v70[5], "endsQuotedCount") + 1);
          [(id)v70[5] setAddOffsets:1];
        }
        if ([*(id *)(*(void *)(a1 + 40) + 248) characterIsMember:v19]) {
          objc_msgSend((id)v70[5], "setPartialNgramCount:", objc_msgSend((id)v70[5], "partialNgramCount") + 1);
        }
      }
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8) + 24) = 0;
    }
    uint64_t v20 = (void *)v70[5];
    BOOL v21 = v20[1] < 2uLL;
    [v20 incrementCount];
    id v22 = *(void **)(*(void *)(*(void *)(a1 + 152) + 8) + 40);
    if (v22)
    {
      int v23 = [v22 token];
      if (v23)
      {
        id v24 = [(id)v70[5] token];

        if (v24)
        {
          [*(id *)(*(void *)(*(void *)(a1 + 152) + 8) + 40) weight];
          if (v25 <= 0.0 && ([(id)v70[5] weight], v26 <= 0.0)) {
            unsigned int v27 = +[TokenInfo isSurnameType:*(void *)(v70[5] + 8)];
          }
          else {
            unsigned int v27 = 1;
          }
          if (*(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24))
          {
            char v28 = *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8) + 24) != 0;
            if (!v27) {
              goto LABEL_66;
            }
          }
          else
          {
            char v28 = 0;
            if (!v27) {
              goto LABEL_66;
            }
          }
          uint64_t v29 = *(unsigned int *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
          if ((int)v29 < 1)
          {
            int v35 = 1;
          }
          else
          {
            int v30 = *(_DWORD *)(*(void *)(*(void *)(a1 + 128) + 8) + 24);
            int v31 = 1;
            while ((int)v29 < v30)
            {
              id v32 = [*(id *)(a1 + 56) charAtWithInt:v29];
              if ([*(id *)(*(void *)(a1 + 40) + 224) characterIsMember:v32]) {
                goto LABEL_66;
              }
              unsigned __int8 v33 = [(id)qword_1005630F0 characterIsMember:v32];
              uint64_t v34 = *(void **)(*(void *)(a1 + 40) + 232);
              if (v34) {
                v31 &= [v34 characterIsMember:v32];
              }
              v28 &= v33 ^ 1;
              uint64_t v29 = (v29 + 1);
              int v30 = *(_DWORD *)(*(void *)(*(void *)(a1 + 128) + 8) + 24);
            }
            int v35 = v31 & 1;
          }
          BOOL v36 = v9 == 0;
          if (*(void *)(a1 + 192) >= (unint64_t)(*(_DWORD *)(*(void *)(*(void *)(a1 + 64)
                                                                                               + 8)
                                                                                   + 24)
                                                                       - *(_DWORD *)(*(void *)(*(void *)(a1 + 160)
                                                                                               + 8)
                                                                                   + 24))
            || *(_DWORD *)(*(void *)(*(void *)(a1 + 128) + 8) + 24)
             - *(_DWORD *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) < *(_DWORD *)(a1 + 200))
          {
            uint64_t v37 = [*(id *)(*(void *)(*(void *)(a1 + 152) + 8) + 40) token];
            [*(id *)(*(void *)(*(void *)(a1 + 168) + 8) + 40) setTokenA:v37];

            id v38 = [(id)v70[5] token];
            [*(id *)(*(void *)(*(void *)(a1 + 168) + 8) + 40) setTokenB:v38];

            uint64_t v60 = 0;
            unsigned int v61 = &v60;
            uint64_t v62 = 0x3032000000;
            unsigned int v63 = sub_1002B7AA0;
            unint64_t v64 = sub_1002B7AB0;
            id v65 = [*(id *)(*(void *)(a1 + 40) + 88) objectForKey:*(void *)(*(void *)(*(void *)(a1 + 168) + 8) + 40)];
            long long v39 = (void *)v61[5];
            if (!v39)
            {
              v53[0] = _NSConcreteStackBlock;
              v53[1] = 3221225472;
              v53[2] = sub_1002C001C;
              v53[3] = &unk_10048BEF0;
              uint64_t v40 = *(void *)(a1 + 168);
              uint64_t v54 = *(void *)(a1 + 40);
              uint64_t v55 = v40;
              uint64_t v41 = *(void *)(a1 + 152);
              uint32_t v56 = &v60;
              uint64_t v57 = v41;
              uint64_t v58 = &v69;
              long long v59 = *(_OWORD *)(a1 + 112);
              +[Util elapsedMillisForBlock:v53 enableTiming:*(unsigned __int8 *)(v54 + 24)];
              uint64_t v42 = *(void *)(*(void *)(a1 + 136) + 8);
              *(float *)&double v43 = v43 + *(float *)(v42 + 24);
              *(_DWORD *)(v42 + 24) = LODWORD(v43);
              if ([(id)v61[5] valid])
              {
                [(id)v61[5] setFirstOccurence:*(unsigned int *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)];
                [(id)v61[5] setFirstOccurenceUnique:*(unsigned int *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)];
                objc_msgSend((id)v61[5], "setContinuous:", v35 | objc_msgSend((id)v61[5], "continuous"));
                if (*(void *)(a1 + 184) >= (unint64_t)*(unsigned int *)(*(void *)(*(void *)(a1 + 64) + 8)
                                                                                + 24))
                  [*(id *)(*(void *)(a1 + 40) + 104) addObject:v61[5]];
                if (([(id)v70[5] addOffsets] & 1) == 0)
                {
                  long long v44 = [(id)v70[5] offsets];

                  if (!v44
                    && (+[TokenInfo isTopicType:*(void *)(v61[5] + 8)]
                     || +[TokenInfo isSurnameType:*(void *)(v61[5] + 8)]))
                  {
                    [(id)v70[5] setAddOffsets:1];
                  }
                }
              }
              long long v39 = (void *)v61[5];
              BOOL v36 = 1;
            }
            BOOL v21 = v39[1] < 2uLL;
            [v39 incrementCount];
            if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 312) + 128)) {
              char v45 = v28;
            }
            else {
              char v45 = 0;
            }
            BOOL v46 = (v45 & 1) != 0 && *(void *)(v70[5] + 8) == 5;
            if (*(void *)(v61[5] + 8)) {
              BOOL v48 = v46;
            }
            else {
              BOOL v48 = 0;
            }
            unsigned __int8 v49 = +[TokenInfo isSurnameType:*(void *)(*(void *)(*(void *)(*(void *)(a1 + 152) + 8) + 40) + 8)];
            uint64_t v50 = *(void **)(*(void *)(*(void *)(a1 + 152) + 8) + 40);
            BOOL v51 = (v49 & 1) != 0 || v50[1] == 8;
            if (v48 && v51)
            {
              uint64_t v52 = (void *)v70[5];
              if (v50 != v52) {
                objc_msgSend(v52, "addPrecedingToken:");
              }
            }
            _Block_object_dispose(&v60, 8);

            if (!v36)
            {
LABEL_67:
              if (v21)
              {
                uint64_t v47 = *(void *)(a1 + 80);
LABEL_88:
                ++*(_DWORD *)(*(void *)(v47 + 8) + 24);
LABEL_90:
                if ([(id)v70[5] addOffsets]) {
                  [(id)v70[5] addOffset:*(void *)(a1 + 48)];
                }
                objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 152) + 8) + 40), (id)v70[5]);
                _Block_object_dispose(&v69, 8);

                goto LABEL_93;
              }
              goto LABEL_89;
            }
LABEL_80:
            ++*(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
            if (!v21) {
              ++*(_DWORD *)(*(void *)(*(void *)(a1 + 176) + 8) + 24);
            }
            if (*(void *)(a1 + 208) <= (unint64_t)*(unsigned int *)(*(void *)(*(void *)(a1 + 144) + 8)
                                                                            + 24)
              || *(void *)(a1 + 216) <= (unint64_t)*(unsigned int *)(*(void *)(*(void *)(a1 + 176) + 8)
                                                                            + 24)
              || *(void *)(a1 + 224) <= (unint64_t)*(unsigned int *)(*(void *)(*(void *)(a1 + 72) + 8)
                                                                            + 24))
            {
              *a2 = 0;
            }
            if (v21)
            {
              ++*(_DWORD *)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
              uint64_t v47 = *(void *)(a1 + 88);
              goto LABEL_88;
            }
LABEL_89:
            *(_DWORD *)(*(void *)(*(void *)(a1 + 160) + 8) + 24) = *(_DWORD *)(*(void *)(*(void *)(a1 + 64)
                                                                                                 + 8)
                                                                                     + 24);
            goto LABEL_90;
          }
        }
      }
    }
LABEL_66:
    if (v9) {
      goto LABEL_67;
    }
    goto LABEL_80;
  }
LABEL_93:
}

void sub_1002BFF64(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

id sub_1002BFFB4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _tokenInfoForToken:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = *(void **)(*(void *)(a1 + 32) + 80);
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  return [v6 setObject:v7 forKey:v5];
}

void sub_1002C001C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)) {
    BOOL v3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) != 0;
  }
  else {
    BOOL v3 = 0;
  }
  id v7 = v2;
  uint64_t v4 = [*(id *)(a1 + 32) _bigramInfoForTokenA:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) tokenB:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) bigram:v2 bothStartUppercase:v3];
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  [*(id *)(*(void *)(a1 + 32) + 88) setObject:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forKey:v7];
}

void sub_1002C0724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a59, 8);
  _Block_object_dispose(&a65, 8);
  _Unwind_Resume(a1);
}

void sub_1002C07B4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) length];
  if (v2)
  {
    id v3 = v2;
    if ((int)v2 <= *(_DWORD *)(*(void *)(a1 + 40) + 52))
    {
      uint64_t v4 = [*(id *)(a1 + 32) buffer];
      id v21 = +[NSString valueOfChars:v4 offset:0 count:v3];

      if ([v21 length])
      {
        if ([*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) length]) {
          [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) appendString:@" "];
        }
        [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) appendString:v21];
        objc_msgSend(*(id *)(a1 + 48), "setTokenCount:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCount") + 1);
        uint64_t v5 = [*(id *)(*(void *)(a1 + 40) + 80) objectForKey:v21];
        id v6 = v5;
        if (v5)
        {
          id v7 = [v5 token];

          if (v7)
          {
            if (+[TokenInfo isTitleMatchType:v6[1]])
            {
              uint64_t v8 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
              id v9 = [v6 token];
              [v8 addObject:v9];

              objc_msgSend(*(id *)(a1 + 48), "setTokenCountMatching:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountMatching") + 1);
              if ([v6 isPrimary]) {
                objc_msgSend(*(id *)(a1 + 48), "setTokenCountPrimary:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountPrimary") + 1);
              }
            }
            else
            {
              objc_msgSend(*(id *)(a1 + 48), "setTokenCount:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCount") - 1);
            }
            id v10 = *(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
            if (v10)
            {
              uint64_t v11 = [v10 token];

              if (v11)
              {
                uint64_t v12 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) token];
                [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) setTokenA:v12];

                double v13 = [v6 token];
                [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) setTokenB:v13];

                id v14 = [*(id *)(*(void *)(a1 + 40) + 88) objectForKey:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
                if (v14 && +[TokenInfo isTitleMatchType:v14[1]])
                {
                  int v15 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) token];
                  id v16 = [v6 token];
                  int v17 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
                  uint64_t v18 = +[NSString stringWithFormat:@"%@ %@", v15, v16];
                  [v17 addObject:v18];

                  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:v15];
                  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:v16];
                  if (+[TokenInfo isTitleMatchType:v6[1]])
                  {
                    objc_msgSend(*(id *)(a1 + 48), "setTokenCount:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCount") - 1);
                    objc_msgSend(*(id *)(a1 + 48), "setTokenCountMatching:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountMatching") - 1);
                  }
                  if (+[TokenInfo isTitleMatchType:*(void *)(*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) + 8)])
                  {
                    objc_msgSend(*(id *)(a1 + 48), "setTokenCount:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCount") - 1);
                    objc_msgSend(*(id *)(a1 + 48), "setTokenCountMatching:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountMatching") - 1);
                  }
                  objc_msgSend(*(id *)(a1 + 48), "setTokenCount:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCount") + 2);
                  objc_msgSend(*(id *)(a1 + 48), "setTokenCountMatching:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountMatching") + 2);
                  if ([v14 isPrimary]) {
                    objc_msgSend(*(id *)(a1 + 48), "setTokenCountPrimary:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountPrimary") + 2);
                  }
                }
              }
            }
          }
          else
          {
            objc_msgSend(*(id *)(a1 + 48), "setTokenCountMatching:", (char *)objc_msgSend(*(id *)(a1 + 48), "tokenCountMatching") + 1);
          }
        }
        uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8);
        uint64_t v20 = *(void **)(v19 + 40);
        *(void *)(v19 + 40) = v6;
      }
    }
  }
}

void sub_1002C0C2C(uint64_t a1, unsigned char *a2)
{
  id v4 = [*(id *)(a1 + 32) length];
  uint64_t v5 = *(void *)(a1 + 40);
  if ((int)v4 >= *(_DWORD *)(v5 + 48))
  {
    id v6 = v4;
    if ((int)v4 <= *(_DWORD *)(v5 + 52))
    {
      id v7 = [*(id *)(a1 + 32) buffer];
      id v9 = +[NSString valueOfChars:v7 offset:0 count:v6];

      if ([v9 length])
      {
        uint64_t v8 = [*(id *)(*(void *)(a1 + 40) + 80) objectForKey:v9];

        if (!v8)
        {
          *a2 = 0;
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
        }
      }
    }
  }
}

void sub_1002C14E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002C1590(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 32) + 8);
  if (*(float *)(v1 + 24) < 0.0) {
    *(_DWORD *)(v1 + 24) = 1061158912;
  }
  return result;
}

void sub_1002C4470(uint64_t a1)
{
  id v2 = [[ComAppleProactiveLuceneCachingQuery alloc] initWithOrgApacheLuceneSearchQuery:*(void *)(a1 + 32) withOrgApacheLuceneSearchIndexSearcher:*(void *)(*(void *)(a1 + 40) + 32)];
  uint64_t v52 = 0;
  v53[0] = &v52;
  v53[1] = 0x3032000000;
  v53[2] = sub_1002B7AA0;
  v53[3] = sub_1002B7AB0;
  id v54 = 0;
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472;
  v48[2] = sub_1002C4940;
  v48[3] = &unk_10048BFB8;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v50 = &v52;
  v48[4] = v4;
  uint64_t v5 = v2;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v41 = v5;
  unsigned __int8 v49 = v5;
  uint64_t v51 = v6;
  +[Util elapsedMillisForBlock:v48 enableTiming:*(unsigned __int8 *)(*(void *)(a1 + 40) + 24)];
  uint64_t v8 = *(void *)(a1 + 40);
  if (*(unsigned char *)(v8 + 24))
  {
    float v9 = v7;
    [*(id *)(v8 + 304) addDebug:@"tTopDocs: %f, nTopDocs: %i", v9, *(unsigned int *)(*(void *)(v53[0] + 40) + 8), context];
    uint64_t v8 = *(void *)(a1 + 40);
  }
  if (*(unsigned char *)(v8 + 266) && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
    sub_1002C9904((uint64_t)v53, v10, v11);
  }

  uint64_t v12 = *(void *)(v53[0] + 40);
  if (*(_DWORD *)(v12 + 8))
  {
    signed int v13 = [*(id *)(v12 + 16) length];
    long long v14 = *(_OWORD *)&NSIntegerMapKeyCallBacks.retain;
    *(_OWORD *)&keyCallBacks.int hash = *(_OWORD *)&NSIntegerMapKeyCallBacks.hash;
    *(_OWORD *)&keyCallBacks.retain = v14;
    *(_OWORD *)&keyCallBacks.describuint64_t e = *(_OWORD *)&NSIntegerMapKeyCallBacks.describe;
    NSMapTableValueCallBacks valueCallBacks = NSObjectMapValueCallBacks;
    int v15 = NSCreateMapTable(&keyCallBacks, &valueCallBacks, v13);
    uint64_t v16 = *(void *)(a1 + 40);
    int v17 = *(void **)(v16 + 136);
    *(void *)(v16 + 136) = v15;

    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    id v18 = *(id *)(*(void *)(v53[0] + 40) + 16);
    id v19 = [v18 countByEnumeratingWithState:&v42 objects:v55 count:16];
    if (v19)
    {
      uint64_t v20 = *(void *)v43;
      id v21 = &OBJC_IVAR___OrgApacheLuceneSearchScoreDoc_score_;
      do
      {
        for (uint64_t i = 0; i != v19; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v43 != v20) {
            objc_enumerationMutation(v18);
          }
          uint64_t v23 = *(void *)(*((void *)&v42 + 1) + 8 * i);
          int v24 = *(_DWORD *)(v23 + *v21);
          BOOL v25 = (v24 & 0x7FFFFFFFu) - 1 < 0x7FFFFF;
          BOOL v26 = ((v24 & 0x7FFFFFFFu) - 0x800000) >> 24 < 0x7F;
          if (v24 >= 0)
          {
            BOOL v26 = 0;
            BOOL v25 = 0;
          }
          int v27 = v24 & 0x7FFFFFFF;
          if (!v27) {
            BOOL v25 = 1;
          }
          BOOL v28 = v27 <= 2139095040;
          int v29 = v27 == 2139095040 || v25;
          if (!v28) {
            int v29 = 1;
          }
          if ((v29 | v26) == 1
            || (int v30 = (const void *)*(int *)(v23 + 12), (v30 & 0x80000000) != 0)
            || (uint64_t v31 = *(void *)(a1 + 40), (int)v30 >= *(_DWORD *)(v31 + 8)))
          {
            *(_DWORD *)(v23 + 12) = -1;
          }
          else
          {
            id v32 = v21;
            uint64_t v33 = a1;
            uint64_t v34 = *(NSMapTable **)(v31 + 136);
            int v35 = objc_opt_new();
            NSMapInsertKnownAbsent(v34, v30, v35);

            a1 = v33;
            id v21 = v32;
          }
        }
        id v19 = [v18 countByEnumeratingWithState:&v42 objects:v55 count:16];
      }
      while (v19);
    }

    uint64_t v37 = [ComAppleProactiveLuceneTopDocsFilter alloc];
    id v38 = [(ComAppleProactiveLuceneTopDocsFilter *)v37 initWithOrgApacheLuceneSearchTopDocs:*(void *)(v53[0] + 40)];
    [*(id *)(*(void *)(a1 + 40) + 112) setEnabledWithBoolean:1];
    [*(id *)(*(void *)(a1 + 40) + 120) setEnabledWithBoolean:1];
    [*(id *)(*(void *)(a1 + 40) + 128) setEnabledWithBoolean:1];
    id v39 = objc_msgSend(*(id *)(*(void *)(a1 + 40) + 32), "searchWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchFilter:withInt:", v41, v38, objc_msgSend(*(id *)(*(void *)(v53[0] + 40) + 16), "length"));

    [*(id *)(a1 + 40) _processResults:*(void *)(v53[0] + 40) topK:*(void *)(a1 + 48)];
  }
  _Block_object_dispose(&v52, 8);
}

void sub_1002C4908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

uint64_t sub_1002C4940(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = [*(id *)(*(void *)(a1 + 32) + 32) searchWithOrgApacheLuceneSearchQuery:*(void *)(a1 + 40) withInt:(*(_DWORD *)(a1 + 56) + 5)];
  return _objc_release_x1();
}

int64_t sub_1002C5860(id a1, LuceneContextResult *a2, LuceneContextResult *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a3;
  if ([(LuceneContextResult *)v4 forceBottomRank]
    || ![(LuceneContextResult *)v5 forceBottomRank])
  {
    unsigned int v7 = [(LuceneContextResult *)v4 forceBottomRank];
    if (v7 == [(LuceneContextResult *)v5 forceBottomRank])
    {
      uint64_t v8 = [(LuceneContextResult *)v4 docId];
      float v9 = [(LuceneContextResult *)v5 docId];
      int64_t v6 = (int64_t)[v8 compare:v9];
    }
    else
    {
      int64_t v6 = 1;
    }
  }
  else
  {
    int64_t v6 = -1;
  }

  return v6;
}

int64_t sub_1002C5928(id a1, LuceneContextResult *a2, LuceneContextResult *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a3;
  int64_t v6 = [(LuceneContextResult *)v4 blendedScore];
  unsigned int v7 = [(LuceneContextResult *)v5 blendedScore];
  uint64_t v8 = (uint64_t)[v6 compare:v7];
  if (v8)
  {
    int64_t v9 = -v8;
  }
  else
  {
    uint64_t v10 = [(LuceneContextResult *)v4 title];
    uint64_t v11 = [(LuceneContextResult *)v5 title];
    int64_t v9 = (int64_t)[v10 compare:v11];
  }
  return v9;
}

int64_t sub_1002C600C(id a1, LuceneContextResult *a2, LuceneContextResult *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a3;
  [(LuceneContextResult *)v4 luceneScore];
  float v7 = v6;
  [(LuceneContextResult *)v5 luceneScore];
  if (v7 <= v8)
  {
    [(LuceneContextResult *)v4 luceneScore];
    float v11 = v10;
    [(LuceneContextResult *)v5 luceneScore];
    if (v11 == v12)
    {
      [(LuceneContextResult *)v4 luceneScore];
      float v14 = v13;
      [(LuceneContextResult *)v5 luceneScore];
      if (v14 >= v15) {
        int64_t v9 = 1;
      }
      else {
        int64_t v9 = -1;
      }
    }
    else
    {
      int64_t v9 = 1;
    }
  }
  else
  {
    int64_t v9 = -1;
  }

  return v9;
}

void sub_1002C6274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1002C629C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) length];
  if (v2)
  {
    id v3 = v2;
    if ((int)v2 <= *(_DWORD *)(*(void *)(a1 + 40) + 52))
    {
      uint64_t v4 = [*(id *)(a1 + 32) buffer];
      id v6 = +[NSString valueOfChars:v4 offset:0 count:v3];

      uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
      if (*(unsigned char *)(v5 + 24)) {
        *(unsigned char *)(v5 + 24) = 0;
      }
      else {
        [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) appendString:@" "];
      }
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) appendString:v6];
    }
  }
}

void sub_1002C76E4(_Unwind_Exception *a1)
{
}

id sub_1002C77C0(void *a1)
{
  v7[0] = 0;
  v7[1] = v7;
  v7[2] = 0x3032000000;
  v7[3] = sub_1002B7AA0;
  v7[4] = sub_1002B7AB0;
  id v8 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1002C8F8C;
  v4[3] = &unk_10048C198;
  id v6 = v7;
  id v1 = a1;
  id v5 = v1;
  id v2 = [v4 copy];

  _Block_object_dispose(v7, 8);
  return v2;
}

void sub_1002C78B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1002C78D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) getDocument];
}

id sub_1002C78D8(uint64_t a1)
{
  id v1 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = [v1 getWithNSString:@"portrait"];

  return v2;
}

id sub_1002C7938(uint64_t a1)
{
  unsigned int v4 = 0;
  id v2 = [*(id *)(a1 + 32) bestTitleWithSeeOtherDocIdRelative:&v4];
  [*(id *)(a1 + 32) setSeeOtherDocIdRelative:v4];
  return v2;
}

id sub_1002C7998(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 152) removeAllObjects];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) terms];
  id v3 = [v2 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v32;
LABEL_3:
    uint64_t v6 = 0;
    while (1)
    {
      if (*(void *)v32 != v5) {
        objc_enumerationMutation(v2);
      }
      float v7 = [*(id *)(*((void *)&v31 + 1) + 8 * v6) getQuery];
      id v8 = [v7 getUserObject];

      int64_t v9 = *(void **)(*(void *)(a1 + 32) + 152);
      uint64_t v10 = [v8 term];
      float v11 = [v10 text];
      [v9 addObject:v11];

      if ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 152) count] > 2) {
        break;
      }

      if (v4 == (id)++v6)
      {
        id v4 = [v2 countByEnumeratingWithState:&v31 objects:v36 count:16];
        if (v4) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:

    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v2 = objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), "phrases", 0);
    id v12 = [v2 countByEnumeratingWithState:&v27 objects:v35 count:16];
    if (!v12)
    {
LABEL_17:

      id v25 = *(id *)(*(void *)(a1 + 32) + 152);
      goto LABEL_19;
    }
    id v13 = v12;
    uint64_t v14 = *(void *)v28;
LABEL_11:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(void *)v28 != v14) {
        objc_enumerationMutation(v2);
      }
      uint64_t v16 = [*(id *)(*((void *)&v27 + 1) + 8 * v15) getQuery];
      id v8 = [v16 getUserObject];

      int v17 = *(void **)(*(void *)(a1 + 32) + 152);
      id v18 = [v8 tokenA];
      id v19 = [v18 term];
      uint64_t v20 = [v19 text];
      [v17 addObject:v20];

      id v21 = *(void **)(*(void *)(a1 + 32) + 152);
      id v22 = [v8 tokenB];
      uint64_t v23 = [v22 term];
      int v24 = [v23 text];
      [v21 addObject:v24];

      if ((unint64_t)[*(id *)(*(void *)(a1 + 32) + 152) count] > 2) {
        break;
      }

      if (v13 == (id)++v15)
      {
        id v13 = [v2 countByEnumeratingWithState:&v27 objects:v35 count:16];
        if (v13) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
  }
  id v25 = *(id *)(*(void *)(a1 + 32) + 152);

LABEL_19:
  return v25;
}

void sub_1002C82D8(_Unwind_Exception *a1)
{
}

id sub_1002C8370(uint64_t a1)
{
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  id result = [*(id *)(a1 + 32) length];
  uint64_t v3 = *(void *)(a1 + 40);
  if ((int)result < *(_DWORD *)(v3 + 48)) {
    return result;
  }
  id v4 = result;
  if ((int)result > *(_DWORD *)(v3 + 52)) {
    return result;
  }
  uint64_t v5 = [*(id *)(a1 + 32) buffer];
  int v24 = +[NSString valueOfChars:v5 offset:0 count:v4];

  if ([v24 length])
  {
    uint64_t v6 = [*(id *)(*(void *)(a1 + 40) + 80) objectForKey:v24];
    float v7 = v6;
    if (v6 && ([v6 token], id v8 = objc_claimAutoreleasedReturnValue(), v8, v8))
    {
      unsigned int v9 = +[TokenInfo isTitleMatchType:v7[1]];
      BOOL v10 = v9;
      if (v9)
      {
        if ([v7 isPrimary]) {
          uint64_t v11 = *(void *)(a1 + 56);
        }
        else {
          uint64_t v11 = *(void *)(a1 + 64);
        }
        ++*(void *)(*(void *)(v11 + 8) + 24);
        int v12 = 1;
      }
      else
      {
        int v12 = 0;
      }
      id v13 = *(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
      if (v13)
      {
        uint64_t v14 = [v13 token];

        if (v14)
        {
          [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) weight];
          if (v15 > 0.0 || ([v7 weight], v16 > 0.0))
          {
            int v17 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) token];
            [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) setTokenA:v17];

            id v18 = [v7 token];
            [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) setTokenB:v18];

            uint64_t v19 = [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) tokenA];
            if (v19)
            {
              uint64_t v20 = (void *)v19;
              id v21 = [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) tokenB];

              if (v21)
              {
                id v22 = [*(id *)(*(void *)(a1 + 40) + 88) objectForKey:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
                if (v22 && +[TokenInfo isTitleMatchType:v22[1]])
                {
                  if ([v22 isPrimary]) {
                    uint64_t v23 = *(void *)(a1 + 88);
                  }
                  else {
                    uint64_t v23 = *(void *)(a1 + 96);
                  }
                  ++*(void *)(*(void *)(v23 + 8) + 24);
                  int v12 = 1;
                }

                BOOL v10 = v12 != 0;
              }
            }
          }
        }
      }
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v7);
      if (v10) {
        goto LABEL_29;
      }
    }
    else
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v7);
    }
    ++*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 24);
LABEL_29:
  }
  return (id)_objc_release_x2();
}

int64_t sub_1002C8690(id a1, LuceneContextResult *a2, LuceneContextResult *a3)
{
  id v4 = a2;
  uint64_t v5 = a3;
  int64_t v6 = [(LuceneContextResult *)v4 foldScore];
  if (v6 <= [(LuceneContextResult *)v5 foldScore])
  {
    id v8 = [(LuceneContextResult *)v4 foldScore];
    if (v8 == (id)[(LuceneContextResult *)v5 foldScore])
    {
      int64_t v9 = [(LuceneContextResult *)v4 foldCurrentRank];
      if (v9 < [(LuceneContextResult *)v5 foldCurrentRank]) {
        int64_t v7 = -1;
      }
      else {
        int64_t v7 = 1;
      }
    }
    else
    {
      int64_t v7 = 1;
    }
  }
  else
  {
    int64_t v7 = -1;
  }

  return v7;
}

id sub_1002C8F8C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v2)
  {
    uint64_t v3 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    id v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  return v2;
}

void sub_1002C9000(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_1002C9018(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

void sub_1002C9030(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

unsigned char *sub_1002C904C(unsigned char *result, unsigned char *a2)
{
  *id result = 0;
  *a2 = 0;
  return result;
}

void sub_1002C905C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 8u);
}

void sub_1002C9074()
{
  sub_1002B19F8();
  sub_1002C9030((void *)&_mh_execute_header, &_os_log_default, v0, "Caught Java Exception: %@", v1, v2, v3, v4, v5);
}

void sub_1002C90E4(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)a1 = 134217984;
  *(double *)(a1 + 4) = a2;
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, a4, "Time to perform search: %f ms", (uint8_t *)a1);
}

void sub_1002C9128()
{
  sub_1002B19F8();
  sub_1002C9030((void *)&_mh_execute_header, &_os_log_default, v0, "Exception: %@", v1, v2, v3, v4, v5);
}

void sub_1002C9198(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)a1 = 134217984;
  *(double *)(a1 + 4) = a2;
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, a4, "Time to assemble query: %f ms", (uint8_t *)a1);
}

void sub_1002C91DC(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)a1 = 134217984;
  *(double *)(a1 + 4) = a2;
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, a4, "Time to tokenize / construct bigrams: %f ms", (uint8_t *)a1);
}

void sub_1002C9220(void *a1, uint8_t *buf, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)buf = 134218498;
  *(void *)(buf + 4) = a3;
  *((_WORD *)buf + 6) = 2048;
  *(void *)(buf + 14) = a4;
  *((_WORD *)buf + 11) = 2112;
  *((void *)buf + 3) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Text length: %lu, request type: %lu, language tag: %@", buf, 0x20u);
}

void sub_1002C9294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)uint64_t v3 = 0;
  sub_1002C9018((void *)&_mh_execute_header, &_os_log_default, a3, "RawText mode is disabled; assuming no text was passed in",
    v3);
}

void sub_1002C92D4()
{
  sub_1002B19F8();
  sub_1002C9030((void *)&_mh_execute_header, &_os_log_default, v0, "stacktrace: %@", v1, v2, v3, v4, v5);
}

void sub_1002C9344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)uint64_t v3 = 0;
  sub_1002C9018((void *)&_mh_execute_header, &_os_log_default, a3, "UIElement is contained within a navigation bar subview, so it is likely a title", v3);
}

void sub_1002C9384(unsigned char *a1, unsigned char *a2)
{
  sub_1002C904C(a1, a2);
  sub_1002C9018((void *)&_mh_execute_header, &_os_log_default, v2, "Title is multiple lines, so it is not being considered as a title candidate", v3);
}

void sub_1002C93B8(unsigned char *a1, unsigned char *a2)
{
  sub_1002C904C(a1, a2);
  sub_1002C9018((void *)&_mh_execute_header, &_os_log_default, v2, "UI Element is off screen, so it is not being considered as a title candidate", v3);
}

void sub_1002C93EC(unsigned char *a1, unsigned char *a2)
{
  sub_1002C904C(a1, a2);
  sub_1002C9018((void *)&_mh_execute_header, &_os_log_default, v2, "Ignoring a UI element because it doesn't match the ones requested.", v3);
}

void sub_1002C9420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)uint64_t v3 = 0;
  sub_1002C9018((void *)&_mh_execute_header, &_os_log_default, a3, "Filtering UI elements…", v3);
}

void sub_1002C9460(uint8_t *a1, int a2, _DWORD *a3)
{
  *(_DWORD *)a1 = 67109120;
  *a3 = a2;
  sub_1002C905C((void *)&_mh_execute_header, &_os_log_default, (uint64_t)a3, "Skipping unknown Treasuremap special value: %i", a1);
}

void sub_1002C94A4(uint8_t *a1, int a2, _DWORD *a3)
{
  *(_DWORD *)a1 = 67109120;
  *a3 = a2;
  sub_1002C905C((void *)&_mh_execute_header, &_os_log_default, (uint64_t)a3, "Skipping reserved Treasuremap control value: %i", a1);
}

void sub_1002C94E8()
{
  sub_1002B19F8();
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, v0, "Unsupported URL scheme: %@", v1);
}

double sub_1002C955C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3 = *(float *)(*(void *)a1 + 24);
  int v5 = 134217984;
  double v6 = v3;
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, a3, "Time tTokenInfo: %f ms", (uint8_t *)&v5);
  return result;
}

void sub_1002C95E0(void *a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = 138412290;
  *(void *)(a2 + 4) = a1;
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, a3, "Warning: weight still -1 for %@", (uint8_t *)a2);
}

void sub_1002C9634(void *a1, uint8_t *a2, void *a3)
{
  *(_DWORD *)a2 = 138412290;
  *a3 = a1;
  sub_1002C9000((void *)&_mh_execute_header, &_os_log_default, (uint64_t)a3, "Redirect term not found: %@", a2);
}

void sub_1002C9688(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  int v3 = 134218242;
  uint64_t v4 = v2;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "type:%lu token:%@", (uint8_t *)&v3, 0x16u);
}

void sub_1002C9718(void *a1, void *a2)
{
  int v3 = [a1 token];
  uint64_t v4 = [a2 token];
  int v5 = 134219010;
  uint64_t v6 = 1;
  __int16 v7 = 1024;
  int v8 = 0;
  __int16 v9 = 1024;
  int v10 = 0;
  __int16 v11 = 2112;
  int v12 = v3;
  __int16 v13 = 2112;
  uint64_t v14 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "type:%lu primary:%i secondary:%i topic:NA name:NA bigram:%@ %@", (uint8_t *)&v5, 0x2Cu);
}

void sub_1002C97F4(uint64_t a1, void *a2, void *a3)
{
  id v6 = [*(id *)(a1 + 80) count];
  id v7 = [*(id *)(a1 + 88) count];
  int v8 = [a2 clauses];
  uint64_t v9 = (int)[v8 size];
  int v10 = [a3 clauses];
  int v11 = 134218752;
  id v12 = v6;
  __int16 v13 = 2048;
  id v14 = v7;
  __int16 v15 = 2048;
  uint64_t v16 = v9;
  __int16 v17 = 2048;
  uint64_t v18 = (int)[v10 size];
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Tokens: %lu, Phrases: %lu, Primary queries: %lu, Secondary queries: %lu", (uint8_t *)&v11, 0x2Au);
}

void sub_1002C9904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(*(void *)a1 + 40) + 8);
  v4[0] = 67109120;
  v4[1] = v3;
  sub_1002C905C((void *)&_mh_execute_header, &_os_log_default, a3, "Total hits: %i", (uint8_t *)v4);
}

void sub_1002C9994(char a1, uint64_t a2, uint64_t a3)
{
  v3[0] = 67109120;
  v3[1] = (a1 & 1) == 0;
  sub_1002C905C((void *)&_mh_execute_header, &_os_log_default, a3, "Need re-ranking: %i", (uint8_t *)v3);
}

id sub_1002C9B74(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG)) {
    sub_1002CA144();
  }
  return [*(id *)(a1 + 32) _pruneRecentsFromSafari];
}

void sub_1002CA144()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Received notification to purge Safari metadata", v0, 2u);
}

void sub_1002CA18C(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "We got a donation: %@", (uint8_t *)&v1, 0xCu);
}

void sub_1002CA868(void *a1)
{
  v1[0] = 67109120;
  v1[1] = [a1 processIdentifier];
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Invalidate XPC connection for PID %i", (uint8_t *)v1, 8u);
}

void sub_1002CA8EC(void *a1, uint8_t *buf)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Invalidate XPC connection for %@", buf, 0xCu);
}

void sub_1002CA948()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, "Initialized ServiceDelegate without assets", v0, 2u);
}

void sub_1002CA990(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEBUG, "Set up tmp directory access at %@", (uint8_t *)&v1, 0xCu);
}

void sub_1002CAA10()
{
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Failed to initialize temporary directory: %{darwin.errno}d", (uint8_t *)v1, 8u);
}

void sub_1002CAA9C(_xpc_activity_s *a1)
{
  int v1 = 138412546;
  uint64_t v2 = a1;
  __int16 v3 = 2048;
  statuint64_t e = xpc_activity_get_state(a1);
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not set DEFER state for XPC activity %@ in state %ld", (uint8_t *)&v1, 0x16u);
}

void sub_1002CAB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
    a5,
    a6,
    a7,
    a8,
    0);
}

void sub_1002CAB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100006600(a1, a2, a3, 5.778e-34);
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not set DEFER state for XPC activity %@ in state %ld", v3, 0x16u);
}

void sub_1002CABC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100006600(a1, a2, a3, 5.778e-34);
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not set DONE state for XPC activity %@ in state %ld", v3, 0x16u);
}

void sub_1002CAC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002CAC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t ADClientSetValueForScalarKey()
{
  return _ADClientSetValueForScalarKey();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier)
{
  return _CFCharacterSetGetPredefined(theSetIdentifier);
}

Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar)
{
  return _CFCharacterSetIsCharacterMember(theSet, theChar);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

void CFRelease(CFTypeRef cf)
{
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return _CFSetCreateMutable(allocator, capacity, callBacks);
}

void CFSetRemoveValue(CFMutableSetRef theSet, const void *value)
{
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return _CFStringCreateMutableCopy(alloc, maxLength, theString);
}

CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars)
{
  return _CFStringCreateWithCharacters(alloc, chars, numChars);
}

CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator)
{
  return _CFStringCreateWithCharactersNoCopy(alloc, chars, numChars, contentsDeallocator);
}

void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer)
{
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return _CFStringGetLength(theString);
}

void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale)
{
}

CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer)
{
  return _CFStringTokenizerAdvanceToNextToken(tokenizer);
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return _CFStringTokenizerCreate(alloc, string, range, options, locale);
}

CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer)
{
  CurrentTokenRanguint64_t e = _CFStringTokenizerGetCurrentTokenRange(tokenizer);
  CFIndex length = CurrentTokenRange.length;
  CFIndex location = CurrentTokenRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range)
{
}

Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse)
{
  return _CFStringTransform(string, range, transform, reverse);
}

void CFStringUppercase(CFMutableStringRef theString, CFLocaleRef locale)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

uint64_t DDResultGetType()
{
  return _DDResultGetType();
}

id NSAllocateObject(Class aClass, NSUInteger extraBytes, NSZone *zone)
{
  return _NSAllocateObject(aClass, extraBytes, zone);
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSMapTable *__cdecl NSCreateMapTable(NSMapTableKeyCallBacks *keyCallBacks, NSMapTableValueCallBacks *valueCallBacks, NSUInteger capacity)
{
  return _NSCreateMapTable(keyCallBacks, valueCallBacks, capacity);
}

void NSFreeMapTable(NSMapTable *table)
{
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

void *__cdecl NSMapGet(NSMapTable *table, const void *key)
{
  return _NSMapGet(table, key);
}

void NSMapInsertKnownAbsent(NSMapTable *table, const void *key, const void *value)
{
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return _NSProtocolFromString(namestr);
}

NSRange NSRangeFromString(NSString *aString)
{
  NSRange v3 = _NSRangeFromString(aString);
  NSUInteger length = v3.length;
  NSUInteger location = v3.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return _NSStringFromProtocol(proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

NSString *NSUserName(void)
{
  return _NSUserName();
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _CFCopySystemVersionDictionary()
{
  return __CFCopySystemVersionDictionary();
}

uint64_t _CFStringTokenizerGetCurrentTokenPartOfSpeech()
{
  return __CFStringTokenizerGetCurrentTokenPartOfSpeech();
}

void _Exit(int a1)
{
}

uint64_t _PASMurmur3_x64_128()
{
  return __PASMurmur3_x64_128();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

uint64_t __memcpy_chk()
{
  return ___memcpy_chk();
}

uint64_t __strcat_chk()
{
  return ___strcat_chk();
}

uint64_t __strcpy_chk()
{
  return ___strcpy_chk();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

int accept(int a1, sockaddr *a2, socklen_t *a3)
{
  return _accept(a1, a2, a3);
}

int access(const char *a1, int a2)
{
  return _access(a1, a2);
}

long double acos(long double __x)
{
  return _acos(__x);
}

uint32_t arc4random(void)
{
  return _arc4random();
}

long double asin(long double __x)
{
  return _asin(__x);
}

long double atan(long double __x)
{
  return _atan(__x);
}

long double atan2(long double __y, long double __x)
{
  return _atan2(__y, __x);
}

int atexit_b(void *a1)
{
  return _atexit_b(a1);
}

int backtrace(void **a1, int a2)
{
  return _backtrace(a1, a2);
}

char **__cdecl backtrace_symbols(void *const *a1, int a2)
{
  return _backtrace_symbols(a1, a2);
}

int bind(int a1, const sockaddr *a2, socklen_t a3)
{
  return _bind(a1, a2, a3);
}

void bzero(void *a1, size_t a2)
{
}

long double cbrt(long double __x)
{
  return _cbrt(__x);
}

int chmod(const char *a1, mode_t a2)
{
  return _chmod(a1, a2);
}

int chown(const char *a1, uid_t a2, gid_t a3)
{
  return _chown(a1, a2, a3);
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return _class_addMethod(cls, name, imp, types);
}

Ivar *__cdecl class_copyIvarList(Class cls, unsigned int *outCount)
{
  return _class_copyIvarList(cls, outCount);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return _class_copyMethodList(cls, outCount);
}

objc_property_t *__cdecl class_copyPropertyList(Class cls, unsigned int *outCount)
{
  return _class_copyPropertyList(cls, outCount);
}

Protocol **__cdecl class_copyProtocolList(Class cls, unsigned int *outCount)
{
  return _class_copyProtocolList(cls, outCount);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

size_t class_getInstanceSize(Class cls)
{
  return _class_getInstanceSize(cls);
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return _class_getInstanceVariable(cls, name);
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return _class_getMethodImplementation(cls, name);
}

const char *__cdecl class_getName(Class cls)
{
  return _class_getName(cls);
}

Class class_getSuperclass(Class cls)
{
  return _class_getSuperclass(cls);
}

int close(int a1)
{
  return _close(a1);
}

size_t compression_decode_buffer(uint8_t *dst_buffer, size_t dst_size, const uint8_t *src_buffer, size_t src_size, void *scratch_buffer, compression_algorithm algorithm)
{
  return _compression_decode_buffer(dst_buffer, dst_size, src_buffer, src_size, scratch_buffer, algorithm);
}

size_t compression_decode_scratch_buffer_size(compression_algorithm algorithm)
{
  return _compression_decode_scratch_buffer_size(algorithm);
}

int connect(int a1, const sockaddr *a2, socklen_t a3)
{
  return _connect(a1, a2, a3);
}

long double cos(long double __x)
{
  return _cos(__x);
}

long double cosh(long double __x)
{
  return _cosh(__x);
}

uLong crc32(uLong crc, const Bytef *buf, uInt len)
{
  return _crc32(crc, buf, len);
}

int deflate(z_streamp strm, int flush)
{
  return _deflate(strm, flush);
}

int deflateEnd(z_streamp strm)
{
  return _deflateEnd(strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return _deflateInit2_(strm, level, method, windowBits, memLevel, strategy, version, stream_size);
}

int deflateParams(z_streamp strm, int level, int strategy)
{
  return _deflateParams(strm, level, strategy);
}

int deflateReset(z_streamp strm)
{
  return _deflateReset(strm);
}

int deflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength)
{
  return _deflateSetDictionary(strm, dictionary, dictLength);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

int dup(int a1)
{
  return _dup(a1);
}

int dup2(int a1, int a2)
{
  return _dup2(a1, a2);
}

void exit(int a1)
{
}

long double exp(long double __x)
{
  return _exp(__x);
}

long double expm1(long double __x)
{
  return _expm1(__x);
}

int fchmod(int a1, mode_t a2)
{
  return _fchmod(a1, a2);
}

int fchown(int a1, uid_t a2, gid_t a3)
{
  return _fchown(a1, a2, a3);
}

int fcntl(int a1, int a2, ...)
{
  return _fcntl(a1, a2);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

void freeaddrinfo(addrinfo *a1)
{
}

void freeifaddrs(ifaddrs *a1)
{
}

int fstat(int a1, stat *a2)
{
  return _fstat(a1, a2);
}

int fsync(int a1)
{
  return _fsync(a1);
}

int ftruncate(int a1, off_t a2)
{
  return _ftruncate(a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

const char *__cdecl gai_strerror(int a1)
{
  return _gai_strerror(a1);
}

int getaddrinfo(const char *a1, const char *a2, const addrinfo *a3, addrinfo **a4)
{
  return _getaddrinfo(a1, a2, a3, a4);
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

int getifaddrs(ifaddrs **a1)
{
  return _getifaddrs(a1);
}

int getnameinfo(const sockaddr *a1, socklen_t a2, char *a3, socklen_t a4, char *a5, socklen_t a6, int a7)
{
  return _getnameinfo(a1, a2, a3, a4, a5, a6, a7);
}

pid_t getpid(void)
{
  return _getpid();
}

pid_t getppid(void)
{
  return _getppid();
}

int getsockname(int a1, sockaddr *a2, socklen_t *a3)
{
  return _getsockname(a1, a2, a3);
}

int getsockopt(int a1, int a2, int a3, void *a4, socklen_t *a5)
{
  return _getsockopt(a1, a2, a3, a4, a5);
}

kern_return_t host_page_size(host_t a1, vm_size_t *a2)
{
  return _host_page_size(a1, a2);
}

kern_return_t host_statistics(host_t host_priv, host_flavor_t flavor, host_info_t host_info_out, mach_msg_type_number_t *host_info_outCnt)
{
  return _host_statistics(host_priv, flavor, host_info_out, host_info_outCnt);
}

long double hypot(long double __x, long double __y)
{
  return _hypot(__x, __y);
}

char *__cdecl if_indextoname(unsigned int a1, char *a2)
{
  return _if_indextoname(a1, a2);
}

unsigned int if_nametoindex(const char *a1)
{
  return _if_nametoindex(a1);
}

int inet_pton(int a1, const char *a2, void *a3)
{
  return _inet_pton(a1, a2, a3);
}

int inflate(z_streamp strm, int flush)
{
  return _inflate(strm, flush);
}

int inflateEnd(z_streamp strm)
{
  return _inflateEnd(strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return _inflateInit2_(strm, windowBits, version, stream_size);
}

int inflateReset(z_streamp strm)
{
  return _inflateReset(strm);
}

int inflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength)
{
  return _inflateSetDictionary(strm, dictionary, dictLength);
}

int ioctl(int a1, unint64_t a2, ...)
{
  return _ioctl(a1, a2);
}

int isatty(int a1)
{
  return _isatty(a1);
}

const char *__cdecl ivar_getName(Ivar v)
{
  return _ivar_getName(v);
}

ptrdiff_t ivar_getOffset(Ivar v)
{
  return _ivar_getOffset(v);
}

const char *__cdecl ivar_getTypeEncoding(Ivar v)
{
  return _ivar_getTypeEncoding(v);
}

int listen(int a1, int a2)
{
  return _listen(a1, a2);
}

long double log(long double __x)
{
  return _log(__x);
}

long double log10(long double __x)
{
  return _log10(__x);
}

long double log1p(long double __x)
{
  return _log1p(__x);
}

float log2f(float a1)
{
  return _log2f(a1);
}

off_t lseek(int a1, off_t a2, int a3)
{
  return _lseek(a1, a2, a3);
}

int lstat(const char *a1, stat *a2)
{
  return _lstat(a1, a2);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

mach_port_t mach_host_self(void)
{
  return _mach_host_self();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

int madvise(void *a1, size_t a2, int a3)
{
  return _madvise(a1, a2, a3);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_realloc(ptr, size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return _memchr(__s, __c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

objc_method_description *__cdecl method_getDescription(Method m)
{
  return _method_getDescription(m);
}

SEL method_getName(Method m)
{
  return _method_getName(m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return _method_getTypeEncoding(m);
}

void method_invoke(void)
{
}

int mincore(const void *a1, size_t a2, char *a3)
{
  return _mincore(a1, a2, a3);
}

int mkdir(const char *a1, mode_t a2)
{
  return _mkdir(a1, a2);
}

int mlock(const void *a1, size_t a2)
{
  return _mlock(a1, a2);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return _mmap(a1, a2, a3, a4, a5, a6);
}

int msync(void *a1, size_t a2, int a3)
{
  return _msync(a1, a2, a3);
}

int munlock(const void *a1, size_t a2)
{
  return _munlock(a1, a2);
}

int munmap(void *a1, size_t a2)
{
  return _munmap(a1, a2);
}

long double nextafter(long double __x, long double __y)
{
  return _nextafter(__x, __y);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

uint64_t notify_register_plain()
{
  return _notify_register_plain();
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

Class objc_allocateClassPair(Class superclass, const char *name, size_t extraBytes)
{
  return _objc_allocateClassPair(superclass, name, extraBytes);
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

int objc_getClassList(Class *buffer, int bufferCount)
{
  return _objc_getClassList(buffer, bufferCount);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeak(id *location)
{
  return _objc_loadWeak(location);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

Class objc_lookUpClass(const char *name)
{
  return _objc_lookUpClass(name);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_registerClassPair(Class cls)
{
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

Class object_getClass(id a1)
{
  return _object_getClass(a1);
}

Class object_setClass(id a1, Class a2)
{
  return _object_setClass(a1, a2);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int pipe(int a1[2])
{
  return _pipe(a1);
}

int poll(pollfd *a1, nfds_t a2, int a3)
{
  return _poll(a1, a2, a3);
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

float powf(float a1, float a2)
{
  return _powf(a1, a2);
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return _pread(__fd, __buf, __nbyte, a4);
}

int proc_name(int pid, void *buffer, uint32_t buffersize)
{
  return _proc_name(pid, buffer, buffersize);
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return _proc_pidpath(pid, buffer, buffersize);
}

const char *__cdecl property_getName(objc_property_t property)
{
  return _property_getName(property);
}

objc_method_description *__cdecl protocol_copyMethodDescriptionList(Protocol *p, BOOL isRequiredMethod, BOOL isInstanceMethod, unsigned int *outCount)
{
  return _protocol_copyMethodDescriptionList(p, isRequiredMethod, isInstanceMethod, outCount);
}

Protocol **__cdecl protocol_copyProtocolList(Protocol *proto, unsigned int *outCount)
{
  return _protocol_copyProtocolList(proto, outCount);
}

const char *__cdecl protocol_getName(Protocol *p)
{
  return _protocol_getName(p);
}

int pthread_cond_broadcast(pthread_cond_t *a1)
{
  return _pthread_cond_broadcast(a1);
}

int pthread_cond_init(pthread_cond_t *a1, const pthread_condattr_t *a2)
{
  return _pthread_cond_init(a1, a2);
}

int pthread_cond_signal(pthread_cond_t *a1)
{
  return _pthread_cond_signal(a1);
}

int pthread_cond_timedwait_relative_np(pthread_cond_t *a1, pthread_mutex_t *a2, const timespec *a3)
{
  return _pthread_cond_timedwait_relative_np(a1, a2, a3);
}

int pthread_cond_wait(pthread_cond_t *a1, pthread_mutex_t *a2)
{
  return _pthread_cond_wait(a1, a2);
}

void *__cdecl pthread_getspecific(pthread_key_t a1)
{
  return _pthread_getspecific(a1);
}

int pthread_key_create(pthread_key_t *a1, void (__cdecl *a2)(void *))
{
  return _pthread_key_create(a1, a2);
}

int pthread_kill(pthread_t a1, int a2)
{
  return _pthread_kill(a1, a2);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return _pthread_mutex_destroy(a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return _pthread_mutex_init(a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return _pthread_mutex_lock(a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return _pthread_mutex_unlock(a1);
}

int pthread_mutexattr_destroy(pthread_mutexattr_t *a1)
{
  return _pthread_mutexattr_destroy(a1);
}

int pthread_mutexattr_init(pthread_mutexattr_t *a1)
{
  return _pthread_mutexattr_init(a1);
}

int pthread_mutexattr_settype(pthread_mutexattr_t *a1, int a2)
{
  return _pthread_mutexattr_settype(a1, a2);
}

int pthread_once(pthread_once_t *a1, void (*a2)(void))
{
  return _pthread_once(a1, a2);
}

pthread_t pthread_self(void)
{
  return _pthread_self();
}

int pthread_set_qos_class_self_np(qos_class_t __qos_class, int __relative_priority)
{
  return _pthread_set_qos_class_self_np(__qos_class, __relative_priority);
}

int pthread_setspecific(pthread_key_t a1, const void *a2)
{
  return _pthread_setspecific(a1, a2);
}

ssize_t pwrite(int __fd, const void *__buf, size_t __nbyte, off_t a4)
{
  return _pwrite(__fd, __buf, __nbyte, a4);
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

ssize_t readv(int a1, const iovec *a2, int a3)
{
  return _readv(a1, a2, a3);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return _realpath_DARWIN_EXTSN(a1, a2);
}

ssize_t recvfrom(int a1, void *a2, size_t a3, int a4, sockaddr *a5, socklen_t *a6)
{
  return _recvfrom(a1, a2, a3, a4, a5, a6);
}

long double remainder(long double __x, long double __y)
{
  return _remainder(__x, __y);
}

BOOL remove(const std::__fs::filesystem::path *__p, std::error_code *__ec)
{
  return _remove(__p, __ec);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
}

const char *__cdecl sel_getName(SEL sel)
{
  return _sel_getName(sel);
}

BOOL sel_isEqual(SEL lhs, SEL rhs)
{
  return _sel_isEqual(lhs, rhs);
}

SEL sel_registerName(const char *str)
{
  return _sel_registerName(str);
}

int sendfile(int a1, int a2, off_t a3, off_t *a4, sf_hdtr *a5, int a6)
{
  return _sendfile(a1, a2, a3, a4, a5, a6);
}

ssize_t sendto(int a1, const void *a2, size_t a3, int a4, const sockaddr *a5, socklen_t a6)
{
  return _sendto(a1, a2, a3, a4, a5, a6);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return _setsockopt(a1, a2, a3, a4, a5);
}

int shutdown(int a1, int a2)
{
  return _shutdown(a1, a2);
}

int sigaction(int a1, const sigaction *a2, sigaction *a3)
{
  return _sigaction(a1, a2, a3);
}

long double sin(long double __x)
{
  return _sin(__x);
}

long double sinh(long double __x)
{
  return _sinh(__x);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int socket(int a1, int a2, int a3)
{
  return _socket(a1, a2, a3);
}

int socketpair(int a1, int a2, int a3, int *a4)
{
  return _socketpair(a1, a2, a3, a4);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

int statvfs(const char *a1, statvfs *a2)
{
  return _statvfs(a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return _strchr(__s, __c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

int strerror_r(int __errnum, char *__strerrbuf, size_t __buflen)
{
  return _strerror_r(__errnum, __strerrbuf, __buflen);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return _strncmp(__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return _strncpy(__dst, __src, __n);
}

char *__cdecl strndup(const char *__s1, size_t __n)
{
  return _strndup(__s1, __n);
}

char *__cdecl strsep(char **__stringp, const char *__delim)
{
  return _strsep(__stringp, __delim);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return _strstr(__s1, __s2);
}

int symlink(const char *a1, const char *a2)
{
  return _symlink(a1, a2);
}

uint64_t sysconf(int a1)
{
  return _sysconf(a1);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

long double tan(long double __x)
{
  return _tan(__x);
}

long double tanh(long double __x)
{
  return _tanh(__x);
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return _task_info(target_task, flavor, task_info_out, task_info_outCnt);
}

int tcdrain(int a1)
{
  return _tcdrain(a1);
}

time_t time(time_t *a1)
{
  return _time(a1);
}

UCharDirection u_charDirection(UChar32 c)
{
  return _u_charDirection(c);
}

int8_t u_charType(UChar32 c)
{
  return _u_charType(c);
}

int32_t u_digit(UChar32 ch, int8_t radix)
{
  return _u_digit(ch, radix);
}

const char *__cdecl u_errorName(UErrorCode code)
{
  return _u_errorName(code);
}

UChar32 u_forDigit(int32_t digit, int8_t radix)
{
  return _u_forDigit(digit, radix);
}

int32_t u_getIntPropertyValue(UChar32 c, UProperty which)
{
  return _u_getIntPropertyValue(c, which);
}

UBool u_isIDIgnorable(UChar32 c)
{
  return _u_isIDIgnorable(c);
}

UBool u_isIDPart(UChar32 c)
{
  return _u_isIDPart(c);
}

UBool u_isIDStart(UChar32 c)
{
  return _u_isIDStart(c);
}

UBool u_isISOControl(UChar32 c)
{
  return _u_isISOControl(c);
}

UBool u_isJavaIDPart(UChar32 c)
{
  return _u_isJavaIDPart(c);
}

UBool u_isJavaIDStart(UChar32 c)
{
  return _u_isJavaIDStart(c);
}

UBool u_isJavaSpaceChar(UChar32 c)
{
  return _u_isJavaSpaceChar(c);
}

UBool u_isMirrored(UChar32 c)
{
  return _u_isMirrored(c);
}

UBool u_isWhitespace(UChar32 c)
{
  return _u_isWhitespace(c);
}

UBool u_isalnum(UChar32 c)
{
  return _u_isalnum(c);
}

UBool u_isalpha(UChar32 c)
{
  return _u_isalpha(c);
}

UBool u_isdefined(UChar32 c)
{
  return _u_isdefined(c);
}

UBool u_isdigit(UChar32 c)
{
  return _u_isdigit(c);
}

UBool u_islower(UChar32 c)
{
  return _u_islower(c);
}

UBool u_istitle(UChar32 c)
{
  return _u_istitle(c);
}

UBool u_isupper(UChar32 c)
{
  return _u_isupper(c);
}

UChar32 u_tolower(UChar32 c)
{
  return _u_tolower(c);
}

UChar32 u_totitle(UChar32 c)
{
  return _u_totitle(c);
}

UChar32 u_toupper(UChar32 c)
{
  return _u_toupper(c);
}

int uname(utsname *a1)
{
  return _uname(a1);
}

URegularExpression *__cdecl uregex_clone(const URegularExpression *regexp, UErrorCode *status)
{
  return _uregex_clone(regexp, status);
}

void uregex_close(URegularExpression *regexp)
{
}

int32_t uregex_end(URegularExpression *regexp, int32_t groupNum, UErrorCode *status)
{
  return _uregex_end(regexp, groupNum, status);
}

UBool uregex_find(URegularExpression *regexp, int32_t startIndex, UErrorCode *status)
{
  return _uregex_find(regexp, startIndex, status);
}

UBool uregex_findNext(URegularExpression *regexp, UErrorCode *status)
{
  return _uregex_findNext(regexp, status);
}

int32_t uregex_groupCount(URegularExpression *regexp, UErrorCode *status)
{
  return _uregex_groupCount(regexp, status);
}

UBool uregex_hitEnd(const URegularExpression *regexp, UErrorCode *status)
{
  return _uregex_hitEnd(regexp, status);
}

UBool uregex_lookingAt(URegularExpression *regexp, int32_t startIndex, UErrorCode *status)
{
  return _uregex_lookingAt(regexp, startIndex, status);
}

UBool uregex_matches(URegularExpression *regexp, int32_t startIndex, UErrorCode *status)
{
  return _uregex_matches(regexp, startIndex, status);
}

URegularExpression *__cdecl uregex_open(const UChar *pattern, int32_t patternLength, uint32_t flags, UParseError *pe, UErrorCode *status)
{
  return _uregex_open(pattern, patternLength, flags, pe, status);
}

UBool uregex_requireEnd(const URegularExpression *regexp, UErrorCode *status)
{
  return _uregex_requireEnd(regexp, status);
}

void uregex_setRegion(URegularExpression *regexp, int32_t regionStart, int32_t regionLimit, UErrorCode *status)
{
}

void uregex_setText(URegularExpression *regexp, const UChar *text, int32_t textLength, UErrorCode *status)
{
}

int32_t uregex_start(URegularExpression *regexp, int32_t groupNum, UErrorCode *status)
{
  return _uregex_start(regexp, groupNum, status);
}

void uregex_useAnchoringBounds(URegularExpression *regexp, UBool b, UErrorCode *status)
{
}

void uregex_useTransparentBounds(URegularExpression *regexp, UBool b, UErrorCode *status)
{
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return _write(__fd, __buf, __nbyte);
}

ssize_t writev(int a1, const iovec *a2, int a3)
{
  return _writev(a1, a2, a3);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return _xpc_activity_should_defer(activity);
}

uint64_t xpc_connection_copy_bundle_id()
{
  return _xpc_connection_copy_bundle_id();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

id objc_msgSend_AMSymbol(void *a1, const char *a2, ...)
{
  return [a1 AMSymbol];
}

id objc_msgSend_ISOCountryCodes(void *a1, const char *a2, ...)
{
  return [a1 ISOCountryCodes];
}

id objc_msgSend_ISOCurrencyCodes(void *a1, const char *a2, ...)
{
  return [a1 ISOCurrencyCodes];
}

id objc_msgSend_ISOLanguageCodes(void *a1, const char *a2, ...)
{
  return [a1 ISOLanguageCodes];
}

id objc_msgSend_PMSymbol(void *a1, const char *a2, ...)
{
  return [a1 PMSymbol];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return [a1 URL];
}

id objc_msgSend_URLPathAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 URLPathAllowedCharacterSet];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return [a1 UUID];
}

id objc_msgSend__addTermResults(void *a1, const char *a2, ...)
{
  return [a1 _addTermResults];
}

id objc_msgSend__blendResults(void *a1, const char *a2, ...)
{
  return [a1 _blendResults];
}

id objc_msgSend__computeIndex(void *a1, const char *a2, ...)
{
  return [a1 _computeIndex];
}

id objc_msgSend__constructQuery(void *a1, const char *a2, ...)
{
  return [a1 _constructQuery];
}

id objc_msgSend__contextEngineInstance(void *a1, const char *a2, ...)
{
  return [a1 _contextEngineInstance];
}

id objc_msgSend__discardTokenInfos(void *a1, const char *a2, ...)
{
  return [a1 _discardTokenInfos];
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return [a1 _init];
}

id objc_msgSend__isDeviceLocked(void *a1, const char *a2, ...)
{
  return [a1 _isDeviceLocked];
}

id objc_msgSend__loadCommonAsset(void *a1, const char *a2, ...)
{
  return [a1 _loadCommonAsset];
}

id objc_msgSend__loadFallbackAsset(void *a1, const char *a2, ...)
{
  return [a1 _loadFallbackAsset];
}

id objc_msgSend__postInit(void *a1, const char *a2, ...)
{
  return [a1 _postInit];
}

id objc_msgSend__pruneRecentsFromSafari(void *a1, const char *a2, ...)
{
  return [a1 _pruneRecentsFromSafari];
}

id objc_msgSend__reloadPlists(void *a1, const char *a2, ...)
{
  return [a1 _reloadPlists];
}

id objc_msgSend__sortGroupFilterUIElements(void *a1, const char *a2, ...)
{
  return [a1 _sortGroupFilterUIElements];
}

id objc_msgSend__triggerConfigurationUpdate(void *a1, const char *a2, ...)
{
  return [a1 _triggerConfigurationUpdate];
}

id objc_msgSend__updateABGroupKey(void *a1, const char *a2, ...)
{
  return [a1 _updateABGroupKey];
}

id objc_msgSend__xpcConnection(void *a1, const char *a2, ...)
{
  return [a1 _xpcConnection];
}

id objc_msgSend_abGroupLoggingKey(void *a1, const char *a2, ...)
{
  return [a1 abGroupLoggingKey];
}

id objc_msgSend_abs(void *a1, const char *a2, ...)
{
  return [a1 abs];
}

id objc_msgSend_absoluteOriginOnScreen(void *a1, const char *a2, ...)
{
  return [a1 absoluteOriginOnScreen];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return [a1 absoluteString];
}

id objc_msgSend_accept(void *a1, const char *a2, ...)
{
  return [a1 accept];
}

id objc_msgSend_accepted(void *a1, const char *a2, ...)
{
  return [a1 accepted];
}

id objc_msgSend_activeCount(void *a1, const char *a2, ...)
{
  return [a1 activeCount];
}

id objc_msgSend_activeGroupCount(void *a1, const char *a2, ...)
{
  return [a1 activeGroupCount];
}

id objc_msgSend_addExtraQueryCompletions(void *a1, const char *a2, ...)
{
  return [a1 addExtraQueryCompletions];
}

id objc_msgSend_addOffsets(void *a1, const char *a2, ...)
{
  return [a1 addOffsets];
}

id objc_msgSend_addRequestFingerprint(void *a1, const char *a2, ...)
{
  return [a1 addRequestFingerprint];
}

id objc_msgSend_addStructuredExtraction(void *a1, const char *a2, ...)
{
  return [a1 addStructuredExtraction];
}

id objc_msgSend_additionalDonationsToWaitFor(void *a1, const char *a2, ...)
{
  return [a1 additionalDonationsToWaitFor];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return [a1 address];
}

id objc_msgSend_adjustCounts(void *a1, const char *a2, ...)
{
  return [a1 adjustCounts];
}

id objc_msgSend_aliases(void *a1, const char *a2, ...)
{
  return [a1 aliases];
}

id objc_msgSend_allBundles(void *a1, const char *a2, ...)
{
  return [a1 allBundles];
}

id objc_msgSend_allFields(void *a1, const char *a2, ...)
{
  return [a1 allFields];
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return [a1 allHeaderFields];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_allMethods(void *a1, const char *a2, ...)
{
  return [a1 allMethods];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return [a1 allObjects];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return [a1 allValues];
}

id objc_msgSend_allocInstance(void *a1, const char *a2, ...)
{
  return [a1 allocInstance];
}

id objc_msgSend_allowance(void *a1, const char *a2, ...)
{
  return [a1 allowance];
}

id objc_msgSend_allowedNGramSeparators(void *a1, const char *a2, ...)
{
  return [a1 allowedNGramSeparators];
}

id objc_msgSend_allowedTopicTypeTags(void *a1, const char *a2, ...)
{
  return [a1 allowedTopicTypeTags];
}

id objc_msgSend_allowsFloats(void *a1, const char *a2, ...)
{
  return [a1 allowsFloats];
}

id objc_msgSend_alphanumericCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 alphanumericCharacterSet];
}

id objc_msgSend_alwaysUseRandomAccess(void *a1, const char *a2, ...)
{
  return [a1 alwaysUseRandomAccess];
}

id objc_msgSend_annotationType(void *a1, const char *a2, ...)
{
  return [a1 annotationType];
}

id objc_msgSend_approximateCardinality(void *a1, const char *a2, ...)
{
  return [a1 approximateCardinality];
}

id objc_msgSend_approximation(void *a1, const char *a2, ...)
{
  return [a1 approximation];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return [a1 array];
}

id objc_msgSend_arrayOffset(void *a1, const char *a2, ...)
{
  return [a1 arrayOffset];
}

id objc_msgSend_asList(void *a1, const char *a2, ...)
{
  return [a1 asList];
}

id objc_msgSend_asReadOnlyBuffer(void *a1, const char *a2, ...)
{
  return [a1 asReadOnlyBuffer];
}

id objc_msgSend_asTwoPhaseIterator(void *a1, const char *a2, ...)
{
  return [a1 asTwoPhaseIterator];
}

id objc_msgSend_assetTypeDescriptor(void *a1, const char *a2, ...)
{
  return [a1 assetTypeDescriptor];
}

id objc_msgSend_assetVersion(void *a1, const char *a2, ...)
{
  return [a1 assetVersion];
}

id objc_msgSend_associatedUserActivity(void *a1, const char *a2, ...)
{
  return [a1 associatedUserActivity];
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return [a1 attributes];
}

id objc_msgSend_augmentResultsWithTags(void *a1, const char *a2, ...)
{
  return [a1 augmentResultsWithTags];
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return [a1 available];
}

id objc_msgSend_availableLocaleIdentifiers(void *a1, const char *a2, ...)
{
  return [a1 availableLocaleIdentifiers];
}

id objc_msgSend_availableProcessors(void *a1, const char *a2, ...)
{
  return [a1 availableProcessors];
}

id objc_msgSend_availableServices(void *a1, const char *a2, ...)
{
  return [a1 availableServices];
}

id objc_msgSend_averageCharsPerByte(void *a1, const char *a2, ...)
{
  return [a1 averageCharsPerByte];
}

id objc_msgSend_await(void *a1, const char *a2, ...)
{
  return [a1 await];
}

id objc_msgSend_balancedMarkIncomplete(void *a1, const char *a2, ...)
{
  return [a1 balancedMarkIncomplete];
}

id objc_msgSend_baseRamBytesUsed(void *a1, const char *a2, ...)
{
  return [a1 baseRamBytesUsed];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return [a1 begin];
}

id objc_msgSend_bigramMaxEnclosedStopwords(void *a1, const char *a2, ...)
{
  return [a1 bigramMaxEnclosedStopwords];
}

id objc_msgSend_bigramMaxOffsetDelta(void *a1, const char *a2, ...)
{
  return [a1 bigramMaxOffsetDelta];
}

id objc_msgSend_binaryName(void *a1, const char *a2, ...)
{
  return [a1 binaryName];
}

id objc_msgSend_binaryValue(void *a1, const char *a2, ...)
{
  return [a1 binaryValue];
}

id objc_msgSend_bitLength(void *a1, const char *a2, ...)
{
  return [a1 bitLength];
}

id objc_msgSend_bits(void *a1, const char *a2, ...)
{
  return [a1 bits];
}

id objc_msgSend_blacklistPortrait(void *a1, const char *a2, ...)
{
  return [a1 blacklistPortrait];
}

id objc_msgSend_blacklistTitles(void *a1, const char *a2, ...)
{
  return [a1 blacklistTitles];
}

id objc_msgSend_blendedScore(void *a1, const char *a2, ...)
{
  return [a1 blendedScore];
}

id objc_msgSend_bloomFilter(void *a1, const char *a2, ...)
{
  return [a1 bloomFilter];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_BOOLeanClass(void *a1, const char *a2, ...)
{
  return [a1 BOOLeanClass];
}

id objc_msgSend_BOOLeanValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLeanValue];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return [a1 bounds];
}

id objc_msgSend_buffer(void *a1, const char *a2, ...)
{
  return [a1 buffer];
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return [a1 build];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return [a1 bundleIdentifier];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return [a1 bundlePath];
}

id objc_msgSend_byteBlockCount(void *a1, const char *a2, ...)
{
  return [a1 byteBlockCount];
}

id objc_msgSend_byteClass(void *a1, const char *a2, ...)
{
  return [a1 byteClass];
}

id objc_msgSend_byteValueCount(void *a1, const char *a2, ...)
{
  return [a1 byteValueCount];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_bytesUsed(void *a1, const char *a2, ...)
{
  return [a1 bytesUsed];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return [a1 cancel];
}

id objc_msgSend_cancelledKeys(void *a1, const char *a2, ...)
{
  return [a1 cancelledKeys];
}

id objc_msgSend_capacity(void *a1, const char *a2, ...)
{
  return [a1 capacity];
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return [a1 capitalizedString];
}

id objc_msgSend_cardinality(void *a1, const char *a2, ...)
{
  return [a1 cardinality];
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return [a1 category];
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return [a1 channel];
}

id objc_msgSend_charBuffer(void *a1, const char *a2, ...)
{
  return [a1 charBuffer];
}

id objc_msgSend_charClass(void *a1, const char *a2, ...)
{
  return [a1 charClass];
}

id objc_msgSend_charValue(void *a1, const char *a2, ...)
{
  return [a1 charValue];
}

id objc_msgSend_charset(void *a1, const char *a2, ...)
{
  return [a1 charset];
}

id objc_msgSend_checkAbort(void *a1, const char *a2, ...)
{
  return [a1 checkAbort];
}

id objc_msgSend_checkAccess(void *a1, const char *a2, ...)
{
  return [a1 checkAccess];
}

id objc_msgSend_checkConcurrentMod(void *a1, const char *a2, ...)
{
  return [a1 checkConcurrentMod];
}

id objc_msgSend_checkConsistency(void *a1, const char *a2, ...)
{
  return [a1 checkConsistency];
}

id objc_msgSend_checkIfFrozen(void *a1, const char *a2, ...)
{
  return [a1 checkIfFrozen];
}

id objc_msgSend_checkIntegrity(void *a1, const char *a2, ...)
{
  return [a1 checkIntegrity];
}

id objc_msgSend_checkOpen(void *a1, const char *a2, ...)
{
  return [a1 checkOpen];
}

id objc_msgSend_checkWritable(void *a1, const char *a2, ...)
{
  return [a1 checkWritable];
}

id objc_msgSend_className(void *a1, const char *a2, ...)
{
  return [a1 className];
}

id objc_msgSend_clauses(void *a1, const char *a2, ...)
{
  return [a1 clauses];
}

id objc_msgSend_clear(void *a1, const char *a2, ...)
{
  return [a1 clear];
}

id objc_msgSend_clearAttributes(void *a1, const char *a2, ...)
{
  return [a1 clearAttributes];
}

id objc_msgSend_clone(void *a1, const char *a2, ...)
{
  return [a1 clone];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return [a1 close];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return [a1 code];
}

id objc_msgSend_common(void *a1, const char *a2, ...)
{
  return [a1 common];
}

id objc_msgSend_compact(void *a1, const char *a2, ...)
{
  return [a1 compact];
}

id objc_msgSend_comparator(void *a1, const char *a2, ...)
{
  return [a1 comparator];
}

id objc_msgSend_compatibilityVersion(void *a1, const char *a2, ...)
{
  return [a1 compatibilityVersion];
}

id objc_msgSend_complete(void *a1, const char *a2, ...)
{
  return [a1 complete];
}

id objc_msgSend_components(void *a1, const char *a2, ...)
{
  return [a1 components];
}

id objc_msgSend_compoundFormat(void *a1, const char *a2, ...)
{
  return [a1 compoundFormat];
}

id objc_msgSend_computeFields(void *a1, const char *a2, ...)
{
  return [a1 computeFields];
}

id objc_msgSend_computeHash(void *a1, const char *a2, ...)
{
  return [a1 computeHash];
}

id objc_msgSend_computeTime(void *a1, const char *a2, ...)
{
  return [a1 computeTime];
}

id objc_msgSend_concatenatedRequestsDebugText(void *a1, const char *a2, ...)
{
  return [a1 concatenatedRequestsDebugText];
}

id objc_msgSend_concatenatedRequestsText(void *a1, const char *a2, ...)
{
  return [a1 concatenatedRequestsText];
}

id objc_msgSend_config(void *a1, const char *a2, ...)
{
  return [a1 config];
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return [a1 configurationForDefaultMainDisplayMonitor];
}

id objc_msgSend_connect(void *a1, const char *a2, ...)
{
  return [a1 connect];
}

id objc_msgSend_constellation(void *a1, const char *a2, ...)
{
  return [a1 constellation];
}

id objc_msgSend_constellationMaxOverallTopics(void *a1, const char *a2, ...)
{
  return [a1 constellationMaxOverallTopics];
}

id objc_msgSend_constellationMaxTopicDistance(void *a1, const char *a2, ...)
{
  return [a1 constellationMaxTopicDistance];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return [a1 context];
}

id objc_msgSend_continuous(void *a1, const char *a2, ...)
{
  return [a1 continuous];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return [a1 copy];
}

id objc_msgSend_coreNLPMinScore(void *a1, const char *a2, ...)
{
  return [a1 coreNLPMinScore];
}

id objc_msgSend_coreNLPRelevantScore(void *a1, const char *a2, ...)
{
  return [a1 coreNLPRelevantScore];
}

id objc_msgSend_coreNLPTaggingEnabled(void *a1, const char *a2, ...)
{
  return [a1 coreNLPTaggingEnabled];
}

id objc_msgSend_cost(void *a1, const char *a2, ...)
{
  return [a1 cost];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_countDown(void *a1, const char *a2, ...)
{
  return [a1 countDown];
}

id objc_msgSend_create(void *a1, const char *a2, ...)
{
  return [a1 create];
}

id objc_msgSend_createDatagramSocketImpl(void *a1, const char *a2, ...)
{
  return [a1 createDatagramSocketImpl];
}

id objc_msgSend_createNewFile(void *a1, const char *a2, ...)
{
  return [a1 createNewFile];
}

id objc_msgSend_createSocketImpl(void *a1, const char *a2, ...)
{
  return [a1 createSocketImpl];
}

id objc_msgSend_createState(void *a1, const char *a2, ...)
{
  return [a1 createState];
}

id objc_msgSend_creationTime(void *a1, const char *a2, ...)
{
  return [a1 creationTime];
}

id objc_msgSend_currencyGroupingSeparator(void *a1, const char *a2, ...)
{
  return [a1 currencyGroupingSeparator];
}

id objc_msgSend_currencySymbol(void *a1, const char *a2, ...)
{
  return [a1 currencySymbol];
}

id objc_msgSend_current(void *a1, const char *a2, ...)
{
  return [a1 current];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return [a1 currentCalendar];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return [a1 currentConnection];
}

id objc_msgSend_currentLayout(void *a1, const char *a2, ...)
{
  return [a1 currentLayout];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return [a1 currentLocale];
}

id objc_msgSend_currentOsBuild(void *a1, const char *a2, ...)
{
  return [a1 currentOsBuild];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return [a1 currentThread];
}

id objc_msgSend_cutOffLeadingZeroes(void *a1, const char *a2, ...)
{
  return [a1 cutOffLeadingZeroes];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return [a1 data];
}

id objc_msgSend_database(void *a1, const char *a2, ...)
{
  return [a1 database];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return [a1 dateCreated];
}

id objc_msgSend_dateFormat(void *a1, const char *a2, ...)
{
  return [a1 dateFormat];
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return [a1 day];
}

id objc_msgSend_debug(void *a1, const char *a2, ...)
{
  return [a1 debug];
}

id objc_msgSend_debugDelaySecs(void *a1, const char *a2, ...)
{
  return [a1 debugDelaySecs];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return [a1 debugDescription];
}

id objc_msgSend_debugDisableMetricsLogging(void *a1, const char *a2, ...)
{
  return [a1 debugDisableMetricsLogging];
}

id objc_msgSend_debugFakeResults(void *a1, const char *a2, ...)
{
  return [a1 debugFakeResults];
}

id objc_msgSend_debugForceLanguageTag(void *a1, const char *a2, ...)
{
  return [a1 debugForceLanguageTag];
}

id objc_msgSend_debugLogEnabled(void *a1, const char *a2, ...)
{
  return [a1 debugLogEnabled];
}

id objc_msgSend_debugNSDataBufferSize(void *a1, const char *a2, ...)
{
  return [a1 debugNSDataBufferSize];
}

id objc_msgSend_debugStatus(void *a1, const char *a2, ...)
{
  return [a1 debugStatus];
}

id objc_msgSend_debugUrlString(void *a1, const char *a2, ...)
{
  return [a1 debugUrlString];
}

id objc_msgSend_decPending(void *a1, const char *a2, ...)
{
  return [a1 decPending];
}

id objc_msgSend_decRef(void *a1, const char *a2, ...)
{
  return [a1 decRef];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 decimalDigitCharacterSet];
}

id objc_msgSend_decimalSeparator(void *a1, const char *a2, ...)
{
  return [a1 decimalSeparator];
}

id objc_msgSend_decodeMetaData(void *a1, const char *a2, ...)
{
  return [a1 decodeMetaData];
}

id objc_msgSend_decrementAndGet(void *a1, const char *a2, ...)
{
  return [a1 decrementAndGet];
}

id objc_msgSend_defaultCStringEncoding(void *a1, const char *a2, ...)
{
  return [a1 defaultCStringEncoding];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return [a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultReadObject(void *a1, const char *a2, ...)
{
  return [a1 defaultReadObject];
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 defaultSessionConfiguration];
}

id objc_msgSend_defaultTimeZone(void *a1, const char *a2, ...)
{
  return [a1 defaultTimeZone];
}

id objc_msgSend_defaultWriteObject(void *a1, const char *a2, ...)
{
  return [a1 defaultWriteObject];
}

id objc_msgSend_descendingIterator(void *a1, const char *a2, ...)
{
  return [a1 descendingIterator];
}

id objc_msgSend_descendingMap(void *a1, const char *a2, ...)
{
  return [a1 descendingMap];
}

id objc_msgSend_descendingSet(void *a1, const char *a2, ...)
{
  return [a1 descendingSet];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return [a1 description];
}

id objc_msgSend_desiredAssertionStatus(void *a1, const char *a2, ...)
{
  return [a1 desiredAssertionStatus];
}

id objc_msgSend_desiredLanguageTags(void *a1, const char *a2, ...)
{
  return [a1 desiredLanguageTags];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_digitalHealthEnabled(void *a1, const char *a2, ...)
{
  return [a1 digitalHealthEnabled];
}

id objc_msgSend_directory(void *a1, const char *a2, ...)
{
  return [a1 directory];
}

id objc_msgSend_disabled(void *a1, const char *a2, ...)
{
  return [a1 disabled];
}

id objc_msgSend_discard(void *a1, const char *a2, ...)
{
  return [a1 discard];
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return [a1 disconnect];
}

id objc_msgSend_doClose(void *a1, const char *a2, ...)
{
  return [a1 doClose];
}

id objc_msgSend_docFreq(void *a1, const char *a2, ...)
{
  return [a1 docFreq];
}

id objc_msgSend_docID(void *a1, const char *a2, ...)
{
  return [a1 docID];
}

id objc_msgSend_docId(void *a1, const char *a2, ...)
{
  return [a1 docId];
}

id objc_msgSend_docIdRank(void *a1, const char *a2, ...)
{
  return [a1 docIdRank];
}

id objc_msgSend_docValuesFormat(void *a1, const char *a2, ...)
{
  return [a1 docValuesFormat];
}

id objc_msgSend_docValuesType(void *a1, const char *a2, ...)
{
  return [a1 docValuesType];
}

id objc_msgSend_docVisitor(void *a1, const char *a2, ...)
{
  return [a1 docVisitor];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return [a1 domain];
}

id objc_msgSend_dominantLanguage(void *a1, const char *a2, ...)
{
  return [a1 dominantLanguage];
}

id objc_msgSend_donationTimeout(void *a1, const char *a2, ...)
{
  return [a1 donationTimeout];
}

id objc_msgSend_donations(void *a1, const char *a2, ...)
{
  return [a1 donations];
}

id objc_msgSend_donorBundleIdentifier(void *a1, const char *a2, ...)
{
  return [a1 donorBundleIdentifier];
}

id objc_msgSend_donorBundleIdentifiers(void *a1, const char *a2, ...)
{
  return [a1 donorBundleIdentifiers];
}

id objc_msgSend_dontSkip(void *a1, const char *a2, ...)
{
  return [a1 dontSkip];
}

id objc_msgSend_doubleClass(void *a1, const char *a2, ...)
{
  return [a1 doubleClass];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_dumpEnvironment(void *a1, const char *a2, ...)
{
  return [a1 dumpEnvironment];
}

id objc_msgSend_duplicate(void *a1, const char *a2, ...)
{
  return [a1 duplicate];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return [a1 duration];
}

id objc_msgSend_eldest(void *a1, const char *a2, ...)
{
  return [a1 eldest];
}

id objc_msgSend_elementType(void *a1, const char *a2, ...)
{
  return [a1 elementType];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return [a1 elements];
}

id objc_msgSend_enclosingName(void *a1, const char *a2, ...)
{
  return [a1 enclosingName];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return [a1 end];
}

id objc_msgSend_endOffset(void *a1, const char *a2, ...)
{
  return [a1 endOffset];
}

id objc_msgSend_endPosition(void *a1, const char *a2, ...)
{
  return [a1 endPosition];
}

id objc_msgSend_endsQuotedCount(void *a1, const char *a2, ...)
{
  return [a1 endsQuotedCount];
}

id objc_msgSend_engine(void *a1, const char *a2, ...)
{
  return [a1 engine];
}

id objc_msgSend_enqueueInternal(void *a1, const char *a2, ...)
{
  return [a1 enqueueInternal];
}

id objc_msgSend_ensureInvariants(void *a1, const char *a2, ...)
{
  return [a1 ensureInvariants];
}

id objc_msgSend_ensureOpen(void *a1, const char *a2, ...)
{
  return [a1 ensureOpen];
}

id objc_msgSend_entrySet(void *a1, const char *a2, ...)
{
  return [a1 entrySet];
}

id objc_msgSend_eraSymbols(void *a1, const char *a2, ...)
{
  return [a1 eraSymbols];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return [a1 error];
}

id objc_msgSend_exceptionTypes(void *a1, const char *a2, ...)
{
  return [a1 exceptionTypes];
}

id objc_msgSend_exists(void *a1, const char *a2, ...)
{
  return [a1 exists];
}

id objc_msgSend_exponentSymbol(void *a1, const char *a2, ...)
{
  return [a1 exponentSymbol];
}

id objc_msgSend_extraQueryCompletionsEnabled(void *a1, const char *a2, ...)
{
  return [a1 extraQueryCompletionsEnabled];
}

id objc_msgSend_extraQueryCompletionsTopKLanguages(void *a1, const char *a2, ...)
{
  return [a1 extraQueryCompletionsTopKLanguages];
}

id objc_msgSend_extractedAddressComponents(void *a1, const char *a2, ...)
{
  return [a1 extractedAddressComponents];
}

id objc_msgSend_extractionItems(void *a1, const char *a2, ...)
{
  return [a1 extractionItems];
}

id objc_msgSend_fallbackModeEnabled(void *a1, const char *a2, ...)
{
  return [a1 fallbackModeEnabled];
}

id objc_msgSend_fallbackModeQuerySuggestionsEnabled(void *a1, const char *a2, ...)
{
  return [a1 fallbackModeQuerySuggestionsEnabled];
}

id objc_msgSend_field(void *a1, const char *a2, ...)
{
  return [a1 field];
}

id objc_msgSend_fieldId(void *a1, const char *a2, ...)
{
  return [a1 fieldId];
}

id objc_msgSend_fieldInfosFormat(void *a1, const char *a2, ...)
{
  return [a1 fieldInfosFormat];
}

id objc_msgSend_fieldType(void *a1, const char *a2, ...)
{
  return [a1 fieldType];
}

id objc_msgSend_fields(void *a1, const char *a2, ...)
{
  return [a1 fields];
}

id objc_msgSend_fileModificationDate(void *a1, const char *a2, ...)
{
  return [a1 fileModificationDate];
}

id objc_msgSend_filePosixPermissions(void *a1, const char *a2, ...)
{
  return [a1 filePosixPermissions];
}

id objc_msgSend_fileType(void *a1, const char *a2, ...)
{
  return [a1 fileType];
}

id objc_msgSend_files(void *a1, const char *a2, ...)
{
  return [a1 files];
}

id objc_msgSend_fillBuffer(void *a1, const char *a2, ...)
{
  return [a1 fillBuffer];
}

id objc_msgSend_fillInStackTrace(void *a1, const char *a2, ...)
{
  return [a1 fillInStackTrace];
}

id objc_msgSend_fillPages(void *a1, const char *a2, ...)
{
  return [a1 fillPages];
}

id objc_msgSend_filterStackTrace(void *a1, const char *a2, ...)
{
  return [a1 filterStackTrace];
}

id objc_msgSend_finalizeFoldedResult(void *a1, const char *a2, ...)
{
  return [a1 finalizeFoldedResult];
}

id objc_msgSend_find(void *a1, const char *a2, ...)
{
  return [a1 find];
}

id objc_msgSend_findResultsSlowSecs(void *a1, const char *a2, ...)
{
  return [a1 findResultsSlowSecs];
}

id objc_msgSend_fingerprintMax(void *a1, const char *a2, ...)
{
  return [a1 fingerprintMax];
}

id objc_msgSend_fingerprintPrimary(void *a1, const char *a2, ...)
{
  return [a1 fingerprintPrimary];
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return [a1 finish];
}

id objc_msgSend_finishDocument(void *a1, const char *a2, ...)
{
  return [a1 finishDocument];
}

id objc_msgSend_finishField(void *a1, const char *a2, ...)
{
  return [a1 finishField];
}

id objc_msgSend_finishState(void *a1, const char *a2, ...)
{
  return [a1 finishState];
}

id objc_msgSend_finishTasksAndInvalidate(void *a1, const char *a2, ...)
{
  return [a1 finishTasksAndInvalidate];
}

id objc_msgSend_finishTerm(void *a1, const char *a2, ...)
{
  return [a1 finishTerm];
}

id objc_msgSend_finished(void *a1, const char *a2, ...)
{
  return [a1 finished];
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return [a1 first];
}

id objc_msgSend_firstKey(void *a1, const char *a2, ...)
{
  return [a1 firstKey];
}

id objc_msgSend_firstNode(void *a1, const char *a2, ...)
{
  return [a1 firstNode];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return [a1 firstObject];
}

id objc_msgSend_firstOccurence(void *a1, const char *a2, ...)
{
  return [a1 firstOccurence];
}

id objc_msgSend_firstOccurenceUnique(void *a1, const char *a2, ...)
{
  return [a1 firstOccurenceUnique];
}

id objc_msgSend_firstOccurrence(void *a1, const char *a2, ...)
{
  return [a1 firstOccurrence];
}

id objc_msgSend_firstPosition(void *a1, const char *a2, ...)
{
  return [a1 firstPosition];
}

id objc_msgSend_firstWeekday(void *a1, const char *a2, ...)
{
  return [a1 firstWeekday];
}

id objc_msgSend_flip(void *a1, const char *a2, ...)
{
  return [a1 flip];
}

id objc_msgSend_floatClass(void *a1, const char *a2, ...)
{
  return [a1 floatClass];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return [a1 floatValue];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return [a1 flush];
}

id objc_msgSend_foldCurrentRank(void *a1, const char *a2, ...)
{
  return [a1 foldCurrentRank];
}

id objc_msgSend_foldScore(void *a1, const char *a2, ...)
{
  return [a1 foldScore];
}

id objc_msgSend_foldedResults(void *a1, const char *a2, ...)
{
  return [a1 foldedResults];
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return [a1 fontSize];
}

id objc_msgSend_forceBottomRank(void *a1, const char *a2, ...)
{
  return [a1 forceBottomRank];
}

id objc_msgSend_frameInWindow(void *a1, const char *a2, ...)
{
  return [a1 frameInWindow];
}

id objc_msgSend_free(void *a1, const char *a2, ...)
{
  return [a1 free];
}

id objc_msgSend_freeze(void *a1, const char *a2, ...)
{
  return [a1 freeze];
}

id objc_msgSend_freq(void *a1, const char *a2, ...)
{
  return [a1 freq];
}

id objc_msgSend_genericSignature(void *a1, const char *a2, ...)
{
  return [a1 genericSignature];
}

id objc_msgSend_get(void *a1, const char *a2, ...)
{
  return [a1 get];
}

id objc_msgSend_getAbort(void *a1, const char *a2, ...)
{
  return [a1 getAbort];
}

id objc_msgSend_getAbsoluteFile(void *a1, const char *a2, ...)
{
  return [a1 getAbsoluteFile];
}

id objc_msgSend_getAbsolutePath(void *a1, const char *a2, ...)
{
  return [a1 getAbsolutePath];
}

id objc_msgSend_getAcceptStates(void *a1, const char *a2, ...)
{
  return [a1 getAcceptStates];
}

id objc_msgSend_getActualTypeArguments(void *a1, const char *a2, ...)
{
  return [a1 getActualTypeArguments];
}

id objc_msgSend_getAddress(void *a1, const char *a2, ...)
{
  return [a1 getAddress];
}

id objc_msgSend_getAllAttributeKeys(void *a1, const char *a2, ...)
{
  return [a1 getAllAttributeKeys];
}

id objc_msgSend_getAndDecrement(void *a1, const char *a2, ...)
{
  return [a1 getAndDecrement];
}

id objc_msgSend_getAnnotations(void *a1, const char *a2, ...)
{
  return [a1 getAnnotations];
}

id objc_msgSend_getArgIndex(void *a1, const char *a2, ...)
{
  return [a1 getArgIndex];
}

id objc_msgSend_getArray(void *a1, const char *a2, ...)
{
  return [a1 getArray];
}

id objc_msgSend_getAttributes(void *a1, const char *a2, ...)
{
  return [a1 getAttributes];
}

id objc_msgSend_getAuthority(void *a1, const char *a2, ...)
{
  return [a1 getAuthority];
}

id objc_msgSend_getBeginIndex(void *a1, const char *a2, ...)
{
  return [a1 getBeginIndex];
}

id objc_msgSend_getBinaryParameterTypes(void *a1, const char *a2, ...)
{
  return [a1 getBinaryParameterTypes];
}

id objc_msgSend_getBits(void *a1, const char *a2, ...)
{
  return [a1 getBits];
}

id objc_msgSend_getBitsPerValue(void *a1, const char *a2, ...)
{
  return [a1 getBitsPerValue];
}

id objc_msgSend_getBlockBits(void *a1, const char *a2, ...)
{
  return [a1 getBlockBits];
}

id objc_msgSend_getBoost(void *a1, const char *a2, ...)
{
  return [a1 getBoost];
}

id objc_msgSend_getBuffer(void *a1, const char *a2, ...)
{
  return [a1 getBuffer];
}

id objc_msgSend_getBufferSize(void *a1, const char *a2, ...)
{
  return [a1 getBufferSize];
}

id objc_msgSend_getByteBlock(void *a1, const char *a2, ...)
{
  return [a1 getByteBlock];
}

id objc_msgSend_getBytes(void *a1, const char *a2, ...)
{
  return [a1 getBytes];
}

id objc_msgSend_getBytesReader(void *a1, const char *a2, ...)
{
  return [a1 getBytesReader];
}

id objc_msgSend_getBytesRef(void *a1, const char *a2, ...)
{
  return [a1 getBytesRef];
}

id objc_msgSend_getCanonicalName(void *a1, const char *a2, ...)
{
  return [a1 getCanonicalName];
}

id objc_msgSend_getCanonicalPath(void *a1, const char *a2, ...)
{
  return [a1 getCanonicalPath];
}

id objc_msgSend_getCause(void *a1, const char *a2, ...)
{
  return [a1 getCause];
}

id objc_msgSend_getChannel(void *a1, const char *a2, ...)
{
  return [a1 getChannel];
}

id objc_msgSend_getChecksum(void *a1, const char *a2, ...)
{
  return [a1 getChecksum];
}

id objc_msgSend_getChildResources(void *a1, const char *a2, ...)
{
  return [a1 getChildResources];
}

id objc_msgSend_getChunkSize(void *a1, const char *a2, ...)
{
  return [a1 getChunkSize];
}

id objc_msgSend_getClass(void *a1, const char *a2, ...)
{
  return [a1 getClass];
}

id objc_msgSend_getClassLoader(void *a1, const char *a2, ...)
{
  return [a1 getClassLoader];
}

id objc_msgSend_getClassName(void *a1, const char *a2, ...)
{
  return [a1 getClassName];
}

id objc_msgSend_getCode(void *a1, const char *a2, ...)
{
  return [a1 getCode];
}

id objc_msgSend_getCodec(void *a1, const char *a2, ...)
{
  return [a1 getCodec];
}

id objc_msgSend_getColumnNumber(void *a1, const char *a2, ...)
{
  return [a1 getColumnNumber];
}

id objc_msgSend_getCommandOrResult(void *a1, const char *a2, ...)
{
  return [a1 getCommandOrResult];
}

id objc_msgSend_getComponentType(void *a1, const char *a2, ...)
{
  return [a1 getComponentType];
}

id objc_msgSend_getCompressionMode(void *a1, const char *a2, ...)
{
  return [a1 getCompressionMode];
}

id objc_msgSend_getConstantValue(void *a1, const char *a2, ...)
{
  return [a1 getConstantValue];
}

id objc_msgSend_getContentLengthLong(void *a1, const char *a2, ...)
{
  return [a1 getContentLengthLong];
}

id objc_msgSend_getContentType(void *a1, const char *a2, ...)
{
  return [a1 getContentType];
}

id objc_msgSend_getContext(void *a1, const char *a2, ...)
{
  return [a1 getContext];
}

id objc_msgSend_getContextClassLoader(void *a1, const char *a2, ...)
{
  return [a1 getContextClassLoader];
}

id objc_msgSend_getConversionType(void *a1, const char *a2, ...)
{
  return [a1 getConversionType];
}

id objc_msgSend_getCoreCacheKey(void *a1, const char *a2, ...)
{
  return [a1 getCoreCacheKey];
}

id objc_msgSend_getCount(void *a1, const char *a2, ...)
{
  return [a1 getCount];
}

id objc_msgSend_getCountry(void *a1, const char *a2, ...)
{
  return [a1 getCountry];
}

id objc_msgSend_getCurrencyCode(void *a1, const char *a2, ...)
{
  return [a1 getCurrencyCode];
}

id objc_msgSend_getCurrencySymbol(void *a1, const char *a2, ...)
{
  return [a1 getCurrencySymbol];
}

id objc_msgSend_getDSTSavings(void *a1, const char *a2, ...)
{
  return [a1 getDSTSavings];
}

id objc_msgSend_getData(void *a1, const char *a2, ...)
{
  return [a1 getData];
}

id objc_msgSend_getDataInput(void *a1, const char *a2, ...)
{
  return [a1 getDataInput];
}

id objc_msgSend_getDateSuffix(void *a1, const char *a2, ...)
{
  return [a1 getDateSuffix];
}

id objc_msgSend_getDecimalFormatSymbols(void *a1, const char *a2, ...)
{
  return [a1 getDecimalFormatSymbols];
}

id objc_msgSend_getDecimalSeparator(void *a1, const char *a2, ...)
{
  return [a1 getDecimalSeparator];
}

id objc_msgSend_getDeclaredAnnotations(void *a1, const char *a2, ...)
{
  return [a1 getDeclaredAnnotations];
}

id objc_msgSend_getDeclaredFields(void *a1, const char *a2, ...)
{
  return [a1 getDeclaredFields];
}

id objc_msgSend_getDeclaredPrefixes(void *a1, const char *a2, ...)
{
  return [a1 getDeclaredPrefixes];
}

id objc_msgSend_getDeclaringClass(void *a1, const char *a2, ...)
{
  return [a1 getDeclaringClass];
}

id objc_msgSend_getDelCount(void *a1, const char *a2, ...)
{
  return [a1 getDelCount];
}

id objc_msgSend_getDelGen(void *a1, const char *a2, ...)
{
  return [a1 getDelGen];
}

id objc_msgSend_getDescription(void *a1, const char *a2, ...)
{
  return [a1 getDescription];
}

id objc_msgSend_getDetails(void *a1, const char *a2, ...)
{
  return [a1 getDetails];
}

id objc_msgSend_getDiagnostics(void *a1, const char *a2, ...)
{
  return [a1 getDiagnostics];
}

id objc_msgSend_getDigit(void *a1, const char *a2, ...)
{
  return [a1 getDigit];
}

id objc_msgSend_getDirectory(void *a1, const char *a2, ...)
{
  return [a1 getDirectory];
}

id objc_msgSend_getDoc(void *a1, const char *a2, ...)
{
  return [a1 getDoc];
}

id objc_msgSend_getDocCount(void *a1, const char *a2, ...)
{
  return [a1 getDocCount];
}

id objc_msgSend_getDocPointer(void *a1, const char *a2, ...)
{
  return [a1 getDocPointer];
}

id objc_msgSend_getDocValuesGen(void *a1, const char *a2, ...)
{
  return [a1 getDocValuesGen];
}

id objc_msgSend_getDocValuesReader(void *a1, const char *a2, ...)
{
  return [a1 getDocValuesReader];
}

id objc_msgSend_getDocValuesType(void *a1, const char *a2, ...)
{
  return [a1 getDocValuesType];
}

id objc_msgSend_getDocValuesUpdatesFiles(void *a1, const char *a2, ...)
{
  return [a1 getDocValuesUpdatesFiles];
}

id objc_msgSend_getDocument(void *a1, const char *a2, ...)
{
  return [a1 getDocument];
}

id objc_msgSend_getEffectivePort(void *a1, const char *a2, ...)
{
  return [a1 getEffectivePort];
}

id objc_msgSend_getEnclosingClass(void *a1, const char *a2, ...)
{
  return [a1 getEnclosingClass];
}

id objc_msgSend_getEnclosingConstructor(void *a1, const char *a2, ...)
{
  return [a1 getEnclosingConstructor];
}

id objc_msgSend_getEnclosingMethod(void *a1, const char *a2, ...)
{
  return [a1 getEnclosingMethod];
}

id objc_msgSend_getEndIndex(void *a1, const char *a2, ...)
{
  return [a1 getEndIndex];
}

id objc_msgSend_getErrorIndex(void *a1, const char *a2, ...)
{
  return [a1 getErrorIndex];
}

id objc_msgSend_getExceptionTypes(void *a1, const char *a2, ...)
{
  return [a1 getExceptionTypes];
}

id objc_msgSend_getExclusiveOwnerThread(void *a1, const char *a2, ...)
{
  return [a1 getExclusiveOwnerThread];
}

id objc_msgSend_getExponentSeparator(void *a1, const char *a2, ...)
{
  return [a1 getExponentSeparator];
}

id objc_msgSend_getFD(void *a1, const char *a2, ...)
{
  return [a1 getFD];
}

id objc_msgSend_getFD_(void *a1, const char *a2, ...)
{
  return [a1 getFD$];
}

id objc_msgSend_getFamily(void *a1, const char *a2, ...)
{
  return [a1 getFamily];
}

id objc_msgSend_getField(void *a1, const char *a2, ...)
{
  return [a1 getField];
}

id objc_msgSend_getFieldAttribute(void *a1, const char *a2, ...)
{
  return [a1 getFieldAttribute];
}

id objc_msgSend_getFieldInfos(void *a1, const char *a2, ...)
{
  return [a1 getFieldInfos];
}

id objc_msgSend_getFieldInfosFiles(void *a1, const char *a2, ...)
{
  return [a1 getFieldInfosFiles];
}

id objc_msgSend_getFieldInfosGen(void *a1, const char *a2, ...)
{
  return [a1 getFieldInfosGen];
}

id objc_msgSend_getFields(void *a1, const char *a2, ...)
{
  return [a1 getFields];
}

id objc_msgSend_getFieldsReader(void *a1, const char *a2, ...)
{
  return [a1 getFieldsReader];
}

id objc_msgSend_getFieldsStream(void *a1, const char *a2, ...)
{
  return [a1 getFieldsStream];
}

id objc_msgSend_getFile(void *a1, const char *a2, ...)
{
  return [a1 getFile];
}

id objc_msgSend_getFileName(void *a1, const char *a2, ...)
{
  return [a1 getFileName];
}

id objc_msgSend_getFilePointer(void *a1, const char *a2, ...)
{
  return [a1 getFilePointer];
}

id objc_msgSend_getFirst(void *a1, const char *a2, ...)
{
  return [a1 getFirst];
}

id objc_msgSend_getFirstDayOfWeek(void *a1, const char *a2, ...)
{
  return [a1 getFirstDayOfWeek];
}

id objc_msgSend_getFirstNonzeroDigit(void *a1, const char *a2, ...)
{
  return [a1 getFirstNonzeroDigit];
}

id objc_msgSend_getFormat(void *a1, const char *a2, ...)
{
  return [a1 getFormat];
}

id objc_msgSend_getFormatSpecifierText(void *a1, const char *a2, ...)
{
  return [a1 getFormatSpecifierText];
}

id objc_msgSend_getFormatter(void *a1, const char *a2, ...)
{
  return [a1 getFormatter];
}

id objc_msgSend_getForwardReader(void *a1, const char *a2, ...)
{
  return [a1 getForwardReader];
}

id objc_msgSend_getGeneration(void *a1, const char *a2, ...)
{
  return [a1 getGeneration];
}

id objc_msgSend_getGenericComponentType(void *a1, const char *a2, ...)
{
  return [a1 getGenericComponentType];
}

id objc_msgSend_getGenericDeclaration(void *a1, const char *a2, ...)
{
  return [a1 getGenericDeclaration];
}

id objc_msgSend_getGenericInterfaces(void *a1, const char *a2, ...)
{
  return [a1 getGenericInterfaces];
}

id objc_msgSend_getGenericType(void *a1, const char *a2, ...)
{
  return [a1 getGenericType];
}

id objc_msgSend_getGroupingSeparator(void *a1, const char *a2, ...)
{
  return [a1 getGroupingSeparator];
}

id objc_msgSend_getGroupingSize(void *a1, const char *a2, ...)
{
  return [a1 getGroupingSize];
}

id objc_msgSend_getHandlers(void *a1, const char *a2, ...)
{
  return [a1 getHandlers];
}

id objc_msgSend_getHeapArray(void *a1, const char *a2, ...)
{
  return [a1 getHeapArray];
}

id objc_msgSend_getHost(void *a1, const char *a2, ...)
{
  return [a1 getHost];
}

id objc_msgSend_getHostAddress(void *a1, const char *a2, ...)
{
  return [a1 getHostAddress];
}

id objc_msgSend_getHostName(void *a1, const char *a2, ...)
{
  return [a1 getHostName];
}

id objc_msgSend_getID(void *a1, const char *a2, ...)
{
  return [a1 getID];
}

id objc_msgSend_getIP(void *a1, const char *a2, ...)
{
  return [a1 getIP];
}

id objc_msgSend_getId(void *a1, const char *a2, ...)
{
  return [a1 getId];
}

id objc_msgSend_getIndex(void *a1, const char *a2, ...)
{
  return [a1 getIndex];
}

id objc_msgSend_getIndexOptions(void *a1, const char *a2, ...)
{
  return [a1 getIndexOptions];
}

id objc_msgSend_getIndexReader(void *a1, const char *a2, ...)
{
  return [a1 getIndexReader];
}

id objc_msgSend_getInetAddress(void *a1, const char *a2, ...)
{
  return [a1 getInetAddress];
}

id objc_msgSend_getInetAddresses(void *a1, const char *a2, ...)
{
  return [a1 getInetAddresses];
}

id objc_msgSend_getInfinity(void *a1, const char *a2, ...)
{
  return [a1 getInfinity];
}

id objc_msgSend_getInitialState(void *a1, const char *a2, ...)
{
  return [a1 getInitialState];
}

id objc_msgSend_getInnerClasses(void *a1, const char *a2, ...)
{
  return [a1 getInnerClasses];
}

id objc_msgSend_getInputStream(void *a1, const char *a2, ...)
{
  return [a1 getInputStream];
}

id objc_msgSend_getInt(void *a1, const char *a2, ...)
{
  return [a1 getInt];
}

id objc_msgSend_getInt_(void *a1, const char *a2, ...)
{
  return [a1 getInt$];
}

id objc_msgSend_getInterfaces(void *a1, const char *a2, ...)
{
  return [a1 getInterfaces];
}

id objc_msgSend_getInterfacesInternal(void *a1, const char *a2, ...)
{
  return [a1 getInterfacesInternal];
}

id objc_msgSend_getInternationalCurrencySymbol(void *a1, const char *a2, ...)
{
  return [a1 getInternationalCurrencySymbol];
}

id objc_msgSend_getIterator(void *a1, const char *a2, ...)
{
  return [a1 getIterator];
}

id objc_msgSend_getKeepFullyDeletedSegments(void *a1, const char *a2, ...)
{
  return [a1 getKeepFullyDeletedSegments];
}

id objc_msgSend_getKey(void *a1, const char *a2, ...)
{
  return [a1 getKey];
}

id objc_msgSend_getKeys(void *a1, const char *a2, ...)
{
  return [a1 getKeys];
}

id objc_msgSend_getLanguage(void *a1, const char *a2, ...)
{
  return [a1 getLanguage];
}

id objc_msgSend_getLast(void *a1, const char *a2, ...)
{
  return [a1 getLast];
}

id objc_msgSend_getLength(void *a1, const char *a2, ...)
{
  return [a1 getLength];
}

id objc_msgSend_getLevel(void *a1, const char *a2, ...)
{
  return [a1 getLevel];
}

id objc_msgSend_getLineNumber(void *a1, const char *a2, ...)
{
  return [a1 getLineNumber];
}

id objc_msgSend_getListener(void *a1, const char *a2, ...)
{
  return [a1 getListener];
}

id objc_msgSend_getLiveDocs(void *a1, const char *a2, ...)
{
  return [a1 getLiveDocs];
}

id objc_msgSend_getLocalAddress(void *a1, const char *a2, ...)
{
  return [a1 getLocalAddress];
}

id objc_msgSend_getLocalPatternChars(void *a1, const char *a2, ...)
{
  return [a1 getLocalPatternChars];
}

id objc_msgSend_getLocalPort(void *a1, const char *a2, ...)
{
  return [a1 getLocalPort];
}

id objc_msgSend_getLocale(void *a1, const char *a2, ...)
{
  return [a1 getLocale];
}

id objc_msgSend_getLoggerNames(void *a1, const char *a2, ...)
{
  return [a1 getLoggerNames];
}

id objc_msgSend_getLong(void *a1, const char *a2, ...)
{
  return [a1 getLong];
}

id objc_msgSend_getLowerBounds(void *a1, const char *a2, ...)
{
  return [a1 getLowerBounds];
}

id objc_msgSend_getLowestSetBit(void *a1, const char *a2, ...)
{
  return [a1 getLowestSetBit];
}

id objc_msgSend_getMatchArray(void *a1, const char *a2, ...)
{
  return [a1 getMatchArray];
}

id objc_msgSend_getMatchCount(void *a1, const char *a2, ...)
{
  return [a1 getMatchCount];
}

id objc_msgSend_getMax(void *a1, const char *a2, ...)
{
  return [a1 getMax];
}

id objc_msgSend_getMaxPointer(void *a1, const char *a2, ...)
{
  return [a1 getMaxPointer];
}

id objc_msgSend_getMaxPriority(void *a1, const char *a2, ...)
{
  return [a1 getMaxPriority];
}

id objc_msgSend_getMaxScore(void *a1, const char *a2, ...)
{
  return [a1 getMaxScore];
}

id objc_msgSend_getMaxSize(void *a1, const char *a2, ...)
{
  return [a1 getMaxSize];
}

id objc_msgSend_getMaximumFractionDigits(void *a1, const char *a2, ...)
{
  return [a1 getMaximumFractionDigits];
}

id objc_msgSend_getMaximumIntegerDigits(void *a1, const char *a2, ...)
{
  return [a1 getMaximumIntegerDigits];
}

id objc_msgSend_getMergeInstance(void *a1, const char *a2, ...)
{
  return [a1 getMergeInstance];
}

id objc_msgSend_getMessage(void *a1, const char *a2, ...)
{
  return [a1 getMessage];
}

id objc_msgSend_getMetadata(void *a1, const char *a2, ...)
{
  return [a1 getMetadata];
}

id objc_msgSend_getMethodName(void *a1, const char *a2, ...)
{
  return [a1 getMethodName];
}

id objc_msgSend_getMin(void *a1, const char *a2, ...)
{
  return [a1 getMin];
}

id objc_msgSend_getMinimalDaysInFirstWeek(void *a1, const char *a2, ...)
{
  return [a1 getMinimalDaysInFirstWeek];
}

id objc_msgSend_getMinimumFractionDigits(void *a1, const char *a2, ...)
{
  return [a1 getMinimumFractionDigits];
}

id objc_msgSend_getMinimumIntegerDigits(void *a1, const char *a2, ...)
{
  return [a1 getMinimumIntegerDigits];
}

id objc_msgSend_getMinimumNumberShouldMatch(void *a1, const char *a2, ...)
{
  return [a1 getMinimumNumberShouldMatch];
}

id objc_msgSend_getMinusSign(void *a1, const char *a2, ...)
{
  return [a1 getMinusSign];
}

id objc_msgSend_getModifiers(void *a1, const char *a2, ...)
{
  return [a1 getModifiers];
}

id objc_msgSend_getMonetaryDecimalSeparator(void *a1, const char *a2, ...)
{
  return [a1 getMonetaryDecimalSeparator];
}

id objc_msgSend_getMonths(void *a1, const char *a2, ...)
{
  return [a1 getMonths];
}

id objc_msgSend_getMultiplier(void *a1, const char *a2, ...)
{
  return [a1 getMultiplier];
}

id objc_msgSend_getNaN(void *a1, const char *a2, ...)
{
  return [a1 getNaN];
}

id objc_msgSend_getName(void *a1, const char *a2, ...)
{
  return [a1 getName];
}

id objc_msgSend_getNegativePrefix(void *a1, const char *a2, ...)
{
  return [a1 getNegativePrefix];
}

id objc_msgSend_getNegativeSuffix(void *a1, const char *a2, ...)
{
  return [a1 getNegativeSuffix];
}

id objc_msgSend_getNewValue(void *a1, const char *a2, ...)
{
  return [a1 getNewValue];
}

id objc_msgSend_getNextDelGen(void *a1, const char *a2, ...)
{
  return [a1 getNextDelGen];
}

id objc_msgSend_getNextSkipDoc(void *a1, const char *a2, ...)
{
  return [a1 getNextSkipDoc];
}

id objc_msgSend_getNoOutput(void *a1, const char *a2, ...)
{
  return [a1 getNoOutput];
}

id objc_msgSend_getNodeCount(void *a1, const char *a2, ...)
{
  return [a1 getNodeCount];
}

id objc_msgSend_getNormsReader(void *a1, const char *a2, ...)
{
  return [a1 getNormsReader];
}

id objc_msgSend_getNumChunks(void *a1, const char *a2, ...)
{
  return [a1 getNumChunks];
}

id objc_msgSend_getNumDirtyChunks(void *a1, const char *a2, ...)
{
  return [a1 getNumDirtyChunks];
}

id objc_msgSend_getNumOverlap(void *a1, const char *a2, ...)
{
  return [a1 getNumOverlap];
}

id objc_msgSend_getNumParams(void *a1, const char *a2, ...)
{
  return [a1 getNumParams];
}

id objc_msgSend_getNumStates(void *a1, const char *a2, ...)
{
  return [a1 getNumStates];
}

id objc_msgSend_getNumSubs(void *a1, const char *a2, ...)
{
  return [a1 getNumSubs];
}

id objc_msgSend_getNumTransitions(void *a1, const char *a2, ...)
{
  return [a1 getNumTransitions];
}

id objc_msgSend_getNumWords(void *a1, const char *a2, ...)
{
  return [a1 getNumWords];
}

id objc_msgSend_getOccur(void *a1, const char *a2, ...)
{
  return [a1 getOccur];
}

id objc_msgSend_getOffset(void *a1, const char *a2, ...)
{
  return [a1 getOffset];
}

id objc_msgSend_getOldValue(void *a1, const char *a2, ...)
{
  return [a1 getOldValue];
}

id objc_msgSend_getOriginalString(void *a1, const char *a2, ...)
{
  return [a1 getOriginalString];
}

id objc_msgSend_getOutputStream(void *a1, const char *a2, ...)
{
  return [a1 getOutputStream];
}

id objc_msgSend_getOwnerType(void *a1, const char *a2, ...)
{
  return [a1 getOwnerType];
}

id objc_msgSend_getPackage(void *a1, const char *a2, ...)
{
  return [a1 getPackage];
}

id objc_msgSend_getPackedIntsVersion(void *a1, const char *a2, ...)
{
  return [a1 getPackedIntsVersion];
}

id objc_msgSend_getParameterTypes(void *a1, const char *a2, ...)
{
  return [a1 getParameterTypes];
}

id objc_msgSend_getParameters(void *a1, const char *a2, ...)
{
  return [a1 getParameters];
}

id objc_msgSend_getParent(void *a1, const char *a2, ...)
{
  return [a1 getParent];
}

id objc_msgSend_getPath(void *a1, const char *a2, ...)
{
  return [a1 getPath];
}

id objc_msgSend_getPatternSeparator(void *a1, const char *a2, ...)
{
  return [a1 getPatternSeparator];
}

id objc_msgSend_getPayPointer(void *a1, const char *a2, ...)
{
  return [a1 getPayPointer];
}

id objc_msgSend_getPayload(void *a1, const char *a2, ...)
{
  return [a1 getPayload];
}

id objc_msgSend_getPayloadByteUpto(void *a1, const char *a2, ...)
{
  return [a1 getPayloadByteUpto];
}

id objc_msgSend_getPerMill(void *a1, const char *a2, ...)
{
  return [a1 getPerMill];
}

id objc_msgSend_getPercent(void *a1, const char *a2, ...)
{
  return [a1 getPercent];
}

id objc_msgSend_getPointer(void *a1, const char *a2, ...)
{
  return [a1 getPointer];
}

id objc_msgSend_getPort(void *a1, const char *a2, ...)
{
  return [a1 getPort];
}

id objc_msgSend_getPosBufferUpto(void *a1, const char *a2, ...)
{
  return [a1 getPosBufferUpto];
}

id objc_msgSend_getPosPointer(void *a1, const char *a2, ...)
{
  return [a1 getPosPointer];
}

id objc_msgSend_getPosition(void *a1, const char *a2, ...)
{
  return [a1 getPosition];
}

id objc_msgSend_getPositions(void *a1, const char *a2, ...)
{
  return [a1 getPositions];
}

id objc_msgSend_getPositivePrefix(void *a1, const char *a2, ...)
{
  return [a1 getPositivePrefix];
}

id objc_msgSend_getPositiveSuffix(void *a1, const char *a2, ...)
{
  return [a1 getPositiveSuffix];
}

id objc_msgSend_getPostingsReader(void *a1, const char *a2, ...)
{
  return [a1 getPostingsReader];
}

id objc_msgSend_getPrecision(void *a1, const char *a2, ...)
{
  return [a1 getPrecision];
}

id objc_msgSend_getPrecisionStep(void *a1, const char *a2, ...)
{
  return [a1 getPrecisionStep];
}

id objc_msgSend_getPrefixes(void *a1, const char *a2, ...)
{
  return [a1 getPrefixes];
}

id objc_msgSend_getPrimaryDir(void *a1, const char *a2, ...)
{
  return [a1 getPrimaryDir];
}

id objc_msgSend_getPriority(void *a1, const char *a2, ...)
{
  return [a1 getPriority];
}

id objc_msgSend_getPropertyName(void *a1, const char *a2, ...)
{
  return [a1 getPropertyName];
}

id objc_msgSend_getProtocol(void *a1, const char *a2, ...)
{
  return [a1 getProtocol];
}

id objc_msgSend_getPublicId(void *a1, const char *a2, ...)
{
  return [a1 getPublicId];
}

id objc_msgSend_getQuery(void *a1, const char *a2, ...)
{
  return [a1 getQuery];
}

id objc_msgSend_getRawAuthority(void *a1, const char *a2, ...)
{
  return [a1 getRawAuthority];
}

id objc_msgSend_getRawFragment(void *a1, const char *a2, ...)
{
  return [a1 getRawFragment];
}

id objc_msgSend_getRawOffset(void *a1, const char *a2, ...)
{
  return [a1 getRawOffset];
}

id objc_msgSend_getRawPath(void *a1, const char *a2, ...)
{
  return [a1 getRawPath];
}

id objc_msgSend_getRawQuery(void *a1, const char *a2, ...)
{
  return [a1 getRawQuery];
}

id objc_msgSend_getRawSchemeSpecificPart(void *a1, const char *a2, ...)
{
  return [a1 getRawSchemeSpecificPart];
}

id objc_msgSend_getRawType(void *a1, const char *a2, ...)
{
  return [a1 getRawType];
}

id objc_msgSend_getRawValue(void *a1, const char *a2, ...)
{
  return [a1 getRawValue];
}

id objc_msgSend_getReadTimeout(void *a1, const char *a2, ...)
{
  return [a1 getReadTimeout];
}

id objc_msgSend_getRef(void *a1, const char *a2, ...)
{
  return [a1 getRef];
}

id objc_msgSend_getResolvedType(void *a1, const char *a2, ...)
{
  return [a1 getResolvedType];
}

id objc_msgSend_getResolvedTypes(void *a1, const char *a2, ...)
{
  return [a1 getResolvedTypes];
}

id objc_msgSend_getResourceBundle(void *a1, const char *a2, ...)
{
  return [a1 getResourceBundle];
}

id objc_msgSend_getResponseCode(void *a1, const char *a2, ...)
{
  return [a1 getResponseCode];
}

id objc_msgSend_getReturnType(void *a1, const char *a2, ...)
{
  return [a1 getReturnType];
}

id objc_msgSend_getReverse(void *a1, const char *a2, ...)
{
  return [a1 getReverse];
}

id objc_msgSend_getReverseMul(void *a1, const char *a2, ...)
{
  return [a1 getReverseMul];
}

id objc_msgSend_getReverseReader(void *a1, const char *a2, ...)
{
  return [a1 getReverseReader];
}

id objc_msgSend_getRoundingMode(void *a1, const char *a2, ...)
{
  return [a1 getRoundingMode];
}

id objc_msgSend_getRunLimit(void *a1, const char *a2, ...)
{
  return [a1 getRunLimit];
}

id objc_msgSend_getRunStart(void *a1, const char *a2, ...)
{
  return [a1 getRunStart];
}

id objc_msgSend_getScheme(void *a1, const char *a2, ...)
{
  return [a1 getScheme];
}

id objc_msgSend_getScopeId(void *a1, const char *a2, ...)
{
  return [a1 getScopeId];
}

id objc_msgSend_getSecondaryDir(void *a1, const char *a2, ...)
{
  return [a1 getSecondaryDir];
}

id objc_msgSend_getSegmentInfo(void *a1, const char *a2, ...)
{
  return [a1 getSegmentInfo];
}

id objc_msgSend_getSegmentName(void *a1, const char *a2, ...)
{
  return [a1 getSegmentName];
}

id objc_msgSend_getSegmentsFileName(void *a1, const char *a2, ...)
{
  return [a1 getSegmentsFileName];
}

id objc_msgSend_getSentinelObject(void *a1, const char *a2, ...)
{
  return [a1 getSentinelObject];
}

id objc_msgSend_getSequentialSubReaders(void *a1, const char *a2, ...)
{
  return [a1 getSequentialSubReaders];
}

id objc_msgSend_getShift(void *a1, const char *a2, ...)
{
  return [a1 getShift];
}

id objc_msgSend_getShort(void *a1, const char *a2, ...)
{
  return [a1 getShort];
}

id objc_msgSend_getSimpleName(void *a1, const char *a2, ...)
{
  return [a1 getSimpleName];
}

id objc_msgSend_getSize(void *a1, const char *a2, ...)
{
  return [a1 getSize];
}

id objc_msgSend_getSizeof(void *a1, const char *a2, ...)
{
  return [a1 getSizeof];
}

id objc_msgSend_getSort(void *a1, const char *a2, ...)
{
  return [a1 getSort];
}

id objc_msgSend_getSortedTransitions(void *a1, const char *a2, ...)
{
  return [a1 getSortedTransitions];
}

id objc_msgSend_getStackTrace(void *a1, const char *a2, ...)
{
  return [a1 getStackTrace];
}

id objc_msgSend_getStartPoints(void *a1, const char *a2, ...)
{
  return [a1 getStartPoints];
}

id objc_msgSend_getState(void *a1, const char *a2, ...)
{
  return [a1 getState];
}

id objc_msgSend_getSubs(void *a1, const char *a2, ...)
{
  return [a1 getSubs];
}

id objc_msgSend_getSumDocFreq(void *a1, const char *a2, ...)
{
  return [a1 getSumDocFreq];
}

id objc_msgSend_getSumTotalTermFreq(void *a1, const char *a2, ...)
{
  return [a1 getSumTotalTermFreq];
}

id objc_msgSend_getSuperclass(void *a1, const char *a2, ...)
{
  return [a1 getSuperclass];
}

id objc_msgSend_getSymbol(void *a1, const char *a2, ...)
{
  return [a1 getSymbol];
}

id objc_msgSend_getSystemId(void *a1, const char *a2, ...)
{
  return [a1 getSystemId];
}

id objc_msgSend_getTerm(void *a1, const char *a2, ...)
{
  return [a1 getTerm];
}

id objc_msgSend_getTermBlockOrd(void *a1, const char *a2, ...)
{
  return [a1 getTermBlockOrd];
}

id objc_msgSend_getTermVectorsReader(void *a1, const char *a2, ...)
{
  return [a1 getTermVectorsReader];
}

id objc_msgSend_getTerms(void *a1, const char *a2, ...)
{
  return [a1 getTerms];
}

id objc_msgSend_getThreadGroup(void *a1, const char *a2, ...)
{
  return [a1 getThreadGroup];
}

id objc_msgSend_getThrown(void *a1, const char *a2, ...)
{
  return [a1 getThrown];
}

id objc_msgSend_getTime(void *a1, const char *a2, ...)
{
  return [a1 getTime];
}

id objc_msgSend_getTimeInMillis(void *a1, const char *a2, ...)
{
  return [a1 getTimeInMillis];
}

id objc_msgSend_getTimeToLive(void *a1, const char *a2, ...)
{
  return [a1 getTimeToLive];
}

id objc_msgSend_getTimeZone(void *a1, const char *a2, ...)
{
  return [a1 getTimeZone];
}

id objc_msgSend_getTopLevelBuilder(void *a1, const char *a2, ...)
{
  return [a1 getTopLevelBuilder];
}

id objc_msgSend_getTopReaderContext(void *a1, const char *a2, ...)
{
  return [a1 getTopReaderContext];
}

id objc_msgSend_getTotalHits(void *a1, const char *a2, ...)
{
  return [a1 getTotalHits];
}

id objc_msgSend_getType(void *a1, const char *a2, ...)
{
  return [a1 getType];
}

id objc_msgSend_getTypeCode(void *a1, const char *a2, ...)
{
  return [a1 getTypeCode];
}

id objc_msgSend_getTypeInternal(void *a1, const char *a2, ...)
{
  return [a1 getTypeInternal];
}

id objc_msgSend_getTypeParameters(void *a1, const char *a2, ...)
{
  return [a1 getTypeParameters];
}

id objc_msgSend_getUncaughtExceptionHandler(void *a1, const char *a2, ...)
{
  return [a1 getUncaughtExceptionHandler];
}

id objc_msgSend_getUpperBounds(void *a1, const char *a2, ...)
{
  return [a1 getUpperBounds];
}

id objc_msgSend_getUseCompoundFile(void *a1, const char *a2, ...)
{
  return [a1 getUseCompoundFile];
}

id objc_msgSend_getUseParentHandlers(void *a1, const char *a2, ...)
{
  return [a1 getUseParentHandlers];
}

id objc_msgSend_getUseUnmap(void *a1, const char *a2, ...)
{
  return [a1 getUseUnmap];
}

id objc_msgSend_getUserData(void *a1, const char *a2, ...)
{
  return [a1 getUserData];
}

id objc_msgSend_getUserId(void *a1, const char *a2, ...)
{
  return [a1 getUserId];
}

id objc_msgSend_getUserInfo(void *a1, const char *a2, ...)
{
  return [a1 getUserInfo];
}

id objc_msgSend_getUserObject(void *a1, const char *a2, ...)
{
  return [a1 getUserObject];
}

id objc_msgSend_getValue(void *a1, const char *a2, ...)
{
  return [a1 getValue];
}

id objc_msgSend_getValueCount(void *a1, const char *a2, ...)
{
  return [a1 getValueCount];
}

id objc_msgSend_getValueForNormalization(void *a1, const char *a2, ...)
{
  return [a1 getValueForNormalization];
}

id objc_msgSend_getValueSize(void *a1, const char *a2, ...)
{
  return [a1 getValueSize];
}

id objc_msgSend_getVariant(void *a1, const char *a2, ...)
{
  return [a1 getVariant];
}

id objc_msgSend_getVectorsStream(void *a1, const char *a2, ...)
{
  return [a1 getVectorsStream];
}

id objc_msgSend_getVersion(void *a1, const char *a2, ...)
{
  return [a1 getVersion];
}

id objc_msgSend_getWeekdays(void *a1, const char *a2, ...)
{
  return [a1 getWeekdays];
}

id objc_msgSend_getWidth(void *a1, const char *a2, ...)
{
  return [a1 getWidth];
}

id objc_msgSend_getYear(void *a1, const char *a2, ...)
{
  return [a1 getYear];
}

id objc_msgSend_getZeroDigit(void *a1, const char *a2, ...)
{
  return [a1 getZeroDigit];
}

id objc_msgSend_group(void *a1, const char *a2, ...)
{
  return [a1 group];
}

id objc_msgSend_groupCount(void *a1, const char *a2, ...)
{
  return [a1 groupCount];
}

id objc_msgSend_groupingResults(void *a1, const char *a2, ...)
{
  return [a1 groupingResults];
}

id objc_msgSend_groupingSeparator(void *a1, const char *a2, ...)
{
  return [a1 groupingSeparator];
}

id objc_msgSend_groupingSize(void *a1, const char *a2, ...)
{
  return [a1 groupingSize];
}

id objc_msgSend_grow(void *a1, const char *a2, ...)
{
  return [a1 grow];
}

id objc_msgSend_hasArray(void *a1, const char *a2, ...)
{
  return [a1 hasArray];
}

id objc_msgSend_hasChildren(void *a1, const char *a2, ...)
{
  return [a1 hasChildren];
}

id objc_msgSend_hasDeletions(void *a1, const char *a2, ...)
{
  return [a1 hasDeletions];
}

id objc_msgSend_hasDocValues(void *a1, const char *a2, ...)
{
  return [a1 hasDocValues];
}

id objc_msgSend_hasFieldUpdates(void *a1, const char *a2, ...)
{
  return [a1 hasFieldUpdates];
}

id objc_msgSend_hasFreqs(void *a1, const char *a2, ...)
{
  return [a1 hasFreqs];
}

id objc_msgSend_hasMoreElements(void *a1, const char *a2, ...)
{
  return [a1 hasMoreElements];
}

id objc_msgSend_hasMoreTokens(void *a1, const char *a2, ...)
{
  return [a1 hasMoreTokens];
}

id objc_msgSend_hasNext(void *a1, const char *a2, ...)
{
  return [a1 hasNext];
}

id objc_msgSend_hasNorms(void *a1, const char *a2, ...)
{
  return [a1 hasNorms];
}

id objc_msgSend_hasOffsets(void *a1, const char *a2, ...)
{
  return [a1 hasOffsets];
}

id objc_msgSend_hasOnlyRealTerms(void *a1, const char *a2, ...)
{
  return [a1 hasOnlyRealTerms];
}

id objc_msgSend_hasPayloads(void *a1, const char *a2, ...)
{
  return [a1 hasPayloads];
}

id objc_msgSend_hasPositions(void *a1, const char *a2, ...)
{
  return [a1 hasPositions];
}

id objc_msgSend_hasPrevious(void *a1, const char *a2, ...)
{
  return [a1 hasPrevious];
}

id objc_msgSend_hasProx(void *a1, const char *a2, ...)
{
  return [a1 hasProx];
}

id objc_msgSend_hasQueuedPredecessors(void *a1, const char *a2, ...)
{
  return [a1 hasQueuedPredecessors];
}

id objc_msgSend_hasRemaining(void *a1, const char *a2, ...)
{
  return [a1 hasRemaining];
}

id objc_msgSend_hasVectors(void *a1, const char *a2, ...)
{
  return [a1 hasVectors];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return [a1 hash];
}

id objc_msgSend_hashes(void *a1, const char *a2, ...)
{
  return [a1 hashes];
}

id objc_msgSend_hideCompletionsTimeLimit(void *a1, const char *a2, ...)
{
  return [a1 hideCompletionsTimeLimit];
}

id objc_msgSend_highLevelTopicsEnabled(void *a1, const char *a2, ...)
{
  return [a1 highLevelTopicsEnabled];
}

id objc_msgSend_horizontalGroupBuffer(void *a1, const char *a2, ...)
{
  return [a1 horizontalGroupBuffer];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return [a1 host];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return [a1 hour];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return [a1 identifier];
}

id objc_msgSend_ignoreStopwordBigramSentinel(void *a1, const char *a2, ...)
{
  return [a1 ignoreStopwordBigramSentinel];
}

id objc_msgSend_ignoreStopwordTokenSentinel(void *a1, const char *a2, ...)
{
  return [a1 ignoreStopwordTokenSentinel];
}

id objc_msgSend_ignoreUnknownBigramSentinel(void *a1, const char *a2, ...)
{
  return [a1 ignoreUnknownBigramSentinel];
}

id objc_msgSend_ignoreUnknownTokenSentinel(void *a1, const char *a2, ...)
{
  return [a1 ignoreUnknownTokenSentinel];
}

id objc_msgSend_implCloseChannel(void *a1, const char *a2, ...)
{
  return [a1 implCloseChannel];
}

id objc_msgSend_implCloseSelectableChannel(void *a1, const char *a2, ...)
{
  return [a1 implCloseSelectableChannel];
}

id objc_msgSend_importantTokens(void *a1, const char *a2, ...)
{
  return [a1 importantTokens];
}

id objc_msgSend_incPending(void *a1, const char *a2, ...)
{
  return [a1 incPending];
}

id objc_msgSend_incRef(void *a1, const char *a2, ...)
{
  return [a1 incRef];
}

id objc_msgSend_incShift(void *a1, const char *a2, ...)
{
  return [a1 incShift];
}

id objc_msgSend_includeHigherLevelTopics(void *a1, const char *a2, ...)
{
  return [a1 includeHigherLevelTopics];
}

id objc_msgSend_includeLeadImage(void *a1, const char *a2, ...)
{
  return [a1 includeLeadImage];
}

id objc_msgSend_includePartsOfSpeech(void *a1, const char *a2, ...)
{
  return [a1 includePartsOfSpeech];
}

id objc_msgSend_includeRequestInResponse(void *a1, const char *a2, ...)
{
  return [a1 includeRequestInResponse];
}

id objc_msgSend_includeStructuredExtractionResults(void *a1, const char *a2, ...)
{
  return [a1 includeStructuredExtractionResults];
}

id objc_msgSend_incrementAndGet(void *a1, const char *a2, ...)
{
  return [a1 incrementAndGet];
}

id objc_msgSend_incrementCount(void *a1, const char *a2, ...)
{
  return [a1 incrementCount];
}

id objc_msgSend_incrementToken(void *a1, const char *a2, ...)
{
  return [a1 incrementToken];
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return [a1 index];
}

id objc_msgSend_indexId(void *a1, const char *a2, ...)
{
  return [a1 indexId];
}

id objc_msgSend_indexOptions(void *a1, const char *a2, ...)
{
  return [a1 indexOptions];
}

id objc_msgSend_indexVersionId(void *a1, const char *a2, ...)
{
  return [a1 indexVersionId];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return [a1 init];
}

id objc_msgSend_initIndexInput(void *a1, const char *a2, ...)
{
  return [a1 initIndexInput];
}

id objc_msgSend_initSemaphoreForXPCService(void *a1, const char *a2, ...)
{
  return [a1 initSemaphoreForXPCService];
}

id objc_msgSend_initialValue(void *a1, const char *a2, ...)
{
  return [a1 initialValue];
}

id objc_msgSend_instance(void *a1, const char *a2, ...)
{
  return [a1 instance];
}

id objc_msgSend_intClass(void *a1, const char *a2, ...)
{
  return [a1 intClass];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_interestOpsNoCheck(void *a1, const char *a2, ...)
{
  return [a1 interestOpsNoCheck];
}

id objc_msgSend_intern(void *a1, const char *a2, ...)
{
  return [a1 intern];
}

id objc_msgSend_internalGradingEnabled(void *a1, const char *a2, ...)
{
  return [a1 internalGradingEnabled];
}

id objc_msgSend_internalName(void *a1, const char *a2, ...)
{
  return [a1 internalName];
}

id objc_msgSend_internalZoneStrings(void *a1, const char *a2, ...)
{
  return [a1 internalZoneStrings];
}

id objc_msgSend_internationalCurrencySymbol(void *a1, const char *a2, ...)
{
  return [a1 internationalCurrencySymbol];
}

id objc_msgSend_interrupt(void *a1, const char *a2, ...)
{
  return [a1 interrupt];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return [a1 invalidate];
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return [a1 invoke];
}

id objc_msgSend_invokeExact(void *a1, const char *a2, ...)
{
  return [a1 invokeExact];
}

id objc_msgSend_iosClass(void *a1, const char *a2, ...)
{
  return [a1 iosClass];
}

id objc_msgSend_iosName(void *a1, const char *a2, ...)
{
  return [a1 iosName];
}

id objc_msgSend_isAbsolute(void *a1, const char *a2, ...)
{
  return [a1 isAbsolute];
}

id objc_msgSend_isAlive(void *a1, const char *a2, ...)
{
  return [a1 isAlive];
}

id objc_msgSend_isAnnotation(void *a1, const char *a2, ...)
{
  return [a1 isAnnotation];
}

id objc_msgSend_isAnonymousClass(void *a1, const char *a2, ...)
{
  return [a1 isAnonymousClass];
}

id objc_msgSend_isAnyLocalAddress(void *a1, const char *a2, ...)
{
  return [a1 isAnyLocalAddress];
}

id objc_msgSend_isArray(void *a1, const char *a2, ...)
{
  return [a1 isArray];
}

id objc_msgSend_isBlocking(void *a1, const char *a2, ...)
{
  return [a1 isBlocking];
}

id objc_msgSend_isBound(void *a1, const char *a2, ...)
{
  return [a1 isBound];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return [a1 isCancelled];
}

id objc_msgSend_isClassCLocked(void *a1, const char *a2, ...)
{
  return [a1 isClassCLocked];
}

id objc_msgSend_isClosed(void *a1, const char *a2, ...)
{
  return [a1 isClosed];
}

id objc_msgSend_isCompiled(void *a1, const char *a2, ...)
{
  return [a1 isCompiled];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return [a1 isConnected];
}

id objc_msgSend_isConstructor(void *a1, const char *a2, ...)
{
  return [a1 isConstructor];
}

id objc_msgSend_isCoordDisabled(void *a1, const char *a2, ...)
{
  return [a1 isCoordDisabled];
}

id objc_msgSend_isCurrent(void *a1, const char *a2, ...)
{
  return [a1 isCurrent];
}

id objc_msgSend_isDaylightSavingTime(void *a1, const char *a2, ...)
{
  return [a1 isDaylightSavingTime];
}

id objc_msgSend_isDecimalSeparatorAlwaysShown(void *a1, const char *a2, ...)
{
  return [a1 isDecimalSeparatorAlwaysShown];
}

id objc_msgSend_isDefault(void *a1, const char *a2, ...)
{
  return [a1 isDefault];
}

id objc_msgSend_isDeterministic(void *a1, const char *a2, ...)
{
  return [a1 isDeterministic];
}

id objc_msgSend_isDirect(void *a1, const char *a2, ...)
{
  return [a1 isDirect];
}

id objc_msgSend_isDirectory(void *a1, const char *a2, ...)
{
  return [a1 isDirectory];
}

id objc_msgSend_isEligibleForPrediction(void *a1, const char *a2, ...)
{
  return [a1 isEligibleForPrediction];
}

id objc_msgSend_isEligibleForPublicIndexing(void *a1, const char *a2, ...)
{
  return [a1 isEligibleForPublicIndexing];
}

id objc_msgSend_isEligibleForSearch(void *a1, const char *a2, ...)
{
  return [a1 isEligibleForSearch];
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return [a1 isEmpty];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return [a1 isEnabled];
}

id objc_msgSend_isEnum(void *a1, const char *a2, ...)
{
  return [a1 isEnum];
}

id objc_msgSend_isError(void *a1, const char *a2, ...)
{
  return [a1 isError];
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return [a1 isExecuting];
}

id objc_msgSend_isFinal(void *a1, const char *a2, ...)
{
  return [a1 isFinal];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return [a1 isFinished];
}

id objc_msgSend_isGroupingUsed(void *a1, const char *a2, ...)
{
  return [a1 isGroupingUsed];
}

id objc_msgSend_isHeldExclusively(void *a1, const char *a2, ...)
{
  return [a1 isHeldExclusively];
}

id objc_msgSend_isInfinite(void *a1, const char *a2, ...)
{
  return [a1 isInfinite];
}

id objc_msgSend_isInputShutdown(void *a1, const char *a2, ...)
{
  return [a1 isInputShutdown];
}

id objc_msgSend_isInterface(void *a1, const char *a2, ...)
{
  return [a1 isInterface];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return [a1 isInternalBuild];
}

id objc_msgSend_isInterrupted(void *a1, const char *a2, ...)
{
  return [a1 isInterrupted];
}

id objc_msgSend_isLast(void *a1, const char *a2, ...)
{
  return [a1 isLast];
}

id objc_msgSend_isLenient(void *a1, const char *a2, ...)
{
  return [a1 isLenient];
}

id objc_msgSend_isLinkLocalAddress(void *a1, const char *a2, ...)
{
  return [a1 isLinkLocalAddress];
}

id objc_msgSend_isLocalClass(void *a1, const char *a2, ...)
{
  return [a1 isLocalClass];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return [a1 isMainThread];
}

id objc_msgSend_isMalformed(void *a1, const char *a2, ...)
{
  return [a1 isMalformed];
}

id objc_msgSend_isMatch(void *a1, const char *a2, ...)
{
  return [a1 isMatch];
}

id objc_msgSend_isMulticastAddress(void *a1, const char *a2, ...)
{
  return [a1 isMulticastAddress];
}

id objc_msgSend_isNaN(void *a1, const char *a2, ...)
{
  return [a1 isNaN];
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return [a1 isOn];
}

id objc_msgSend_isOnScreen(void *a1, const char *a2, ...)
{
  return [a1 isOnScreen];
}

id objc_msgSend_isOne(void *a1, const char *a2, ...)
{
  return [a1 isOne];
}

id objc_msgSend_isOpen(void *a1, const char *a2, ...)
{
  return [a1 isOpen];
}

id objc_msgSend_isOutputShutdown(void *a1, const char *a2, ...)
{
  return [a1 isOutputShutdown];
}

id objc_msgSend_isOverflow(void *a1, const char *a2, ...)
{
  return [a1 isOverflow];
}

id objc_msgSend_isParseBigDecimal(void *a1, const char *a2, ...)
{
  return [a1 isParseBigDecimal];
}

id objc_msgSend_isParseIntegerOnly(void *a1, const char *a2, ...)
{
  return [a1 isParseIntegerOnly];
}

id objc_msgSend_isPrecisionSet(void *a1, const char *a2, ...)
{
  return [a1 isPrecisionSet];
}

id objc_msgSend_isPrimary(void *a1, const char *a2, ...)
{
  return [a1 isPrimary];
}

id objc_msgSend_isPrimitive(void *a1, const char *a2, ...)
{
  return [a1 isPrimitive];
}

id objc_msgSend_isProhibited(void *a1, const char *a2, ...)
{
  return [a1 isProhibited];
}

id objc_msgSend_isQuoted(void *a1, const char *a2, ...)
{
  return [a1 isQuoted];
}

id objc_msgSend_isReadOnly(void *a1, const char *a2, ...)
{
  return [a1 isReadOnly];
}

id objc_msgSend_isRealTerm(void *a1, const char *a2, ...)
{
  return [a1 isRealTerm];
}

id objc_msgSend_isRequestingContentFromActiveApplications(void *a1, const char *a2, ...)
{
  return [a1 isRequestingContentFromActiveApplications];
}

id objc_msgSend_isRequired(void *a1, const char *a2, ...)
{
  return [a1 isRequired];
}

id objc_msgSend_isScoring(void *a1, const char *a2, ...)
{
  return [a1 isScoring];
}

id objc_msgSend_isSiteLocalAddress(void *a1, const char *a2, ...)
{
  return [a1 isSiteLocalAddress];
}

id objc_msgSend_isSynthetic(void *a1, const char *a2, ...)
{
  return [a1 isSynthetic];
}

id objc_msgSend_isUIApplicationElement(void *a1, const char *a2, ...)
{
  return [a1 isUIApplicationElement];
}

id objc_msgSend_isUnderflow(void *a1, const char *a2, ...)
{
  return [a1 isUnderflow];
}

id objc_msgSend_isUnlocked(void *a1, const char *a2, ...)
{
  return [a1 isUnlocked];
}

id objc_msgSend_isUnmappable(void *a1, const char *a2, ...)
{
  return [a1 isUnmappable];
}

id objc_msgSend_isUnresolved(void *a1, const char *a2, ...)
{
  return [a1 isUnresolved];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return [a1 isValid];
}

id objc_msgSend_itemIds(void *a1, const char *a2, ...)
{
  return [a1 itemIds];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return [a1 items];
}

id objc_msgSend_iterator(void *a1, const char *a2, ...)
{
  return [a1 iterator];
}

id objc_msgSend_javaName(void *a1, const char *a2, ...)
{
  return [a1 javaName];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return [a1 keyEnumerator];
}

id objc_msgSend_keyIterator(void *a1, const char *a2, ...)
{
  return [a1 keyIterator];
}

id objc_msgSend_keySet(void *a1, const char *a2, ...)
{
  return [a1 keySet];
}

id objc_msgSend_keys(void *a1, const char *a2, ...)
{
  return [a1 keys];
}

id objc_msgSend_knownTimeZoneNames(void *a1, const char *a2, ...)
{
  return [a1 knownTimeZoneNames];
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return [a1 languageCode];
}

id objc_msgSend_languageTag(void *a1, const char *a2, ...)
{
  return [a1 languageTag];
}

id objc_msgSend_last(void *a1, const char *a2, ...)
{
  return [a1 last];
}

id objc_msgSend_lastChild(void *a1, const char *a2, ...)
{
  return [a1 lastChild];
}

id objc_msgSend_lastKey(void *a1, const char *a2, ...)
{
  return [a1 lastKey];
}

id objc_msgSend_lastModified(void *a1, const char *a2, ...)
{
  return [a1 lastModified];
}

id objc_msgSend_lastNode(void *a1, const char *a2, ...)
{
  return [a1 lastNode];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return [a1 lastObject];
}

id objc_msgSend_latestRequest(void *a1, const char *a2, ...)
{
  return [a1 latestRequest];
}

id objc_msgSend_leadImage(void *a1, const char *a2, ...)
{
  return [a1 leadImage];
}

id objc_msgSend_leaves(void *a1, const char *a2, ...)
{
  return [a1 leaves];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_letterCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 letterCharacterSet];
}

id objc_msgSend_level1Topics(void *a1, const char *a2, ...)
{
  return [a1 level1Topics];
}

id objc_msgSend_level2Topics(void *a1, const char *a2, ...)
{
  return [a1 level2Topics];
}

id objc_msgSend_limit(void *a1, const char *a2, ...)
{
  return [a1 limit];
}

id objc_msgSend_list(void *a1, const char *a2, ...)
{
  return [a1 list];
}

id objc_msgSend_listAll(void *a1, const char *a2, ...)
{
  return [a1 listAll];
}

id objc_msgSend_listFiles(void *a1, const char *a2, ...)
{
  return [a1 listFiles];
}

id objc_msgSend_listIterator(void *a1, const char *a2, ...)
{
  return [a1 listIterator];
}

id objc_msgSend_liveDocsFormat(void *a1, const char *a2, ...)
{
  return [a1 liveDocsFormat];
}

id objc_msgSend_loadBlock(void *a1, const char *a2, ...)
{
  return [a1 loadBlock];
}

id objc_msgSend_loadNextFloorBlock(void *a1, const char *a2, ...)
{
  return [a1 loadNextFloorBlock];
}

id objc_msgSend_locale(void *a1, const char *a2, ...)
{
  return [a1 locale];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return [a1 localeIdentifier];
}

id objc_msgSend_localizedCapitalizedString(void *a1, const char *a2, ...)
{
  return [a1 localizedCapitalizedString];
}

id objc_msgSend_longClass(void *a1, const char *a2, ...)
{
  return [a1 longClass];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return [a1 longLongValue];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return [a1 longValue];
}

id objc_msgSend_longValueCount(void *a1, const char *a2, ...)
{
  return [a1 longValueCount];
}

id objc_msgSend_lowercaseLetterCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 lowercaseLetterCharacterSet];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return [a1 lowercaseString];
}

id objc_msgSend_luceneBlendAlpha(void *a1, const char *a2, ...)
{
  return [a1 luceneBlendAlpha];
}

id objc_msgSend_luceneBlendBeta(void *a1, const char *a2, ...)
{
  return [a1 luceneBlendBeta];
}

id objc_msgSend_luceneBlendGamma(void *a1, const char *a2, ...)
{
  return [a1 luceneBlendGamma];
}

id objc_msgSend_luceneForceSecondaryAfterPosition(void *a1, const char *a2, ...)
{
  return [a1 luceneForceSecondaryAfterPosition];
}

id objc_msgSend_luceneIgnoreAfterPosition(void *a1, const char *a2, ...)
{
  return [a1 luceneIgnoreAfterPosition];
}

id objc_msgSend_luceneIndexPath(void *a1, const char *a2, ...)
{
  return [a1 luceneIndexPath];
}

id objc_msgSend_luceneMaxTermAndBigramResults(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxTermAndBigramResults];
}

id objc_msgSend_luceneMaxTermAndBigramResultsWithDocument(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxTermAndBigramResultsWithDocument];
}

id objc_msgSend_luceneMaxTermResults(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxTermResults];
}

id objc_msgSend_luceneMaxTermResultsWithDocument(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxTermResultsWithDocument];
}

id objc_msgSend_luceneMaxUniqueNotSkippedTokens(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxUniqueNotSkippedTokens];
}

id objc_msgSend_luceneMaxUniquePrimaryTokens(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxUniquePrimaryTokens];
}

id objc_msgSend_luceneMaxUniqueTotalTokens(void *a1, const char *a2, ...)
{
  return [a1 luceneMaxUniqueTotalTokens];
}

id objc_msgSend_luceneMinAbsoluteScore(void *a1, const char *a2, ...)
{
  return [a1 luceneMinAbsoluteScore];
}

id objc_msgSend_luceneMinFileSizeForNSDataMMap(void *a1, const char *a2, ...)
{
  return [a1 luceneMinFileSizeForNSDataMMap];
}

id objc_msgSend_luceneMinRelativeScore(void *a1, const char *a2, ...)
{
  return [a1 luceneMinRelativeScore];
}

id objc_msgSend_luceneMinScoreTitleMatch(void *a1, const char *a2, ...)
{
  return [a1 luceneMinScoreTitleMatch];
}

id objc_msgSend_luceneMinScoreTitlePrimary(void *a1, const char *a2, ...)
{
  return [a1 luceneMinScoreTitlePrimary];
}

id objc_msgSend_luceneMinTitleMatchAllNamesOK(void *a1, const char *a2, ...)
{
  return [a1 luceneMinTitleMatchAllNamesOK];
}

id objc_msgSend_luceneMinTitleMatchForScoreBoost(void *a1, const char *a2, ...)
{
  return [a1 luceneMinTitleMatchForScoreBoost];
}

id objc_msgSend_luceneMinTitleMatchPrimaryAllNamesOK(void *a1, const char *a2, ...)
{
  return [a1 luceneMinTitleMatchPrimaryAllNamesOK];
}

id objc_msgSend_luceneQueryDefaultNumResults(void *a1, const char *a2, ...)
{
  return [a1 luceneQueryDefaultNumResults];
}

id objc_msgSend_luceneQueryMaxNumResults(void *a1, const char *a2, ...)
{
  return [a1 luceneQueryMaxNumResults];
}

id objc_msgSend_luceneScore(void *a1, const char *a2, ...)
{
  return [a1 luceneScore];
}

id objc_msgSend_luceneSupportedLanguages(void *a1, const char *a2, ...)
{
  return [a1 luceneSupportedLanguages];
}

id objc_msgSend_luceneTermResultBigramScoreMultiplier(void *a1, const char *a2, ...)
{
  return [a1 luceneTermResultBigramScoreMultiplier];
}

id objc_msgSend_luceneTermResultFirstOccurrencePowerLawDecay(void *a1, const char *a2, ...)
{
  return [a1 luceneTermResultFirstOccurrencePowerLawDecay];
}

id objc_msgSend_luceneTermResultUnigramScoreMultiplier(void *a1, const char *a2, ...)
{
  return [a1 luceneTermResultUnigramScoreMultiplier];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return [a1 mainBundle];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return [a1 mainQueue];
}

id objc_msgSend_malformedRequestError(void *a1, const char *a2, ...)
{
  return [a1 malformedRequestError];
}

id objc_msgSend_mappingCount(void *a1, const char *a2, ...)
{
  return [a1 mappingCount];
}

id objc_msgSend_markIncomplete(void *a1, const char *a2, ...)
{
  return [a1 markIncomplete];
}

id objc_msgSend_markReady(void *a1, const char *a2, ...)
{
  return [a1 markReady];
}

id objc_msgSend_markReadyAndAwaitCompletion(void *a1, const char *a2, ...)
{
  return [a1 markReadyAndAwaitCompletion];
}

id objc_msgSend_markSupported(void *a1, const char *a2, ...)
{
  return [a1 markSupported];
}

id objc_msgSend_matchedABGroups(void *a1, const char *a2, ...)
{
  return [a1 matchedABGroups];
}

id objc_msgSend_matches(void *a1, const char *a2, ...)
{
  return [a1 matches];
}

id objc_msgSend_maxConcurrencySemaphore(void *a1, const char *a2, ...)
{
  return [a1 maxConcurrencySemaphore];
}

id objc_msgSend_maxConcurrencySemaphoreTimeout(void *a1, const char *a2, ...)
{
  return [a1 maxConcurrencySemaphoreTimeout];
}

id objc_msgSend_maxConstellationTopics(void *a1, const char *a2, ...)
{
  return [a1 maxConstellationTopics];
}

id objc_msgSend_maxDoc(void *a1, const char *a2, ...)
{
  return [a1 maxDoc];
}

id objc_msgSend_maxFingerprints(void *a1, const char *a2, ...)
{
  return [a1 maxFingerprints];
}

id objc_msgSend_maxUIContentCount(void *a1, const char *a2, ...)
{
  return [a1 maxUIContentCount];
}

id objc_msgSend_maxUIContextLength(void *a1, const char *a2, ...)
{
  return [a1 maxUIContextLength];
}

id objc_msgSend_maximumFractionDigits(void *a1, const char *a2, ...)
{
  return [a1 maximumFractionDigits];
}

id objc_msgSend_maximumIntegerDigits(void *a1, const char *a2, ...)
{
  return [a1 maximumIntegerDigits];
}

id objc_msgSend_maybeFreeRawCallStack(void *a1, const char *a2, ...)
{
  return [a1 maybeFreeRawCallStack];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return [a1 metadata];
}

id objc_msgSend_methodCount(void *a1, const char *a2, ...)
{
  return [a1 methodCount];
}

id objc_msgSend_methodReturnType(void *a1, const char *a2, ...)
{
  return [a1 methodReturnType];
}

id objc_msgSend_minFontDeltaForTitle(void *a1, const char *a2, ...)
{
  return [a1 minFontDeltaForTitle];
}

id objc_msgSend_minPrefix(void *a1, const char *a2, ...)
{
  return [a1 minPrefix];
}

id objc_msgSend_minPrefixAdditionalResults(void *a1, const char *a2, ...)
{
  return [a1 minPrefixAdditionalResults];
}

id objc_msgSend_minPrimaryTermsRequired(void *a1, const char *a2, ...)
{
  return [a1 minPrimaryTermsRequired];
}

id objc_msgSend_minTitleUIFontSize(void *a1, const char *a2, ...)
{
  return [a1 minTitleUIFontSize];
}

id objc_msgSend_minTokenCountToAugment(void *a1, const char *a2, ...)
{
  return [a1 minTokenCountToAugment];
}

id objc_msgSend_minUIContextLength(void *a1, const char *a2, ...)
{
  return [a1 minUIContextLength];
}

id objc_msgSend_minUIPositionY(void *a1, const char *a2, ...)
{
  return [a1 minUIPositionY];
}

id objc_msgSend_minimumDaysInFirstWeek(void *a1, const char *a2, ...)
{
  return [a1 minimumDaysInFirstWeek];
}

id objc_msgSend_minimumFractionDigits(void *a1, const char *a2, ...)
{
  return [a1 minimumFractionDigits];
}

id objc_msgSend_minimumIntegerDigits(void *a1, const char *a2, ...)
{
  return [a1 minimumIntegerDigits];
}

id objc_msgSend_minusSign(void *a1, const char *a2, ...)
{
  return [a1 minusSign];
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return [a1 minute];
}

id objc_msgSend_missingEntitlementError(void *a1, const char *a2, ...)
{
  return [a1 missingEntitlementError];
}

id objc_msgSend_mkdir(void *a1, const char *a2, ...)
{
  return [a1 mkdir];
}

id objc_msgSend_mkdirs(void *a1, const char *a2, ...)
{
  return [a1 mkdirs];
}

id objc_msgSend_modifiers(void *a1, const char *a2, ...)
{
  return [a1 modifiers];
}

id objc_msgSend_month(void *a1, const char *a2, ...)
{
  return [a1 month];
}

id objc_msgSend_monthSymbols(void *a1, const char *a2, ...)
{
  return [a1 monthSymbols];
}

id objc_msgSend_multiplier(void *a1, const char *a2, ...)
{
  return [a1 multiplier];
}

id objc_msgSend_mustPrefixMatchLength(void *a1, const char *a2, ...)
{
  return [a1 mustPrefixMatchLength];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return [a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_nGramBreakingSeparators(void *a1, const char *a2, ...)
{
  return [a1 nGramBreakingSeparators];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return [a1 name];
}

id objc_msgSend_needOffsets(void *a1, const char *a2, ...)
{
  return [a1 needOffsets];
}

id objc_msgSend_needsDictionary(void *a1, const char *a2, ...)
{
  return [a1 needsDictionary];
}

id objc_msgSend_needsInput(void *a1, const char *a2, ...)
{
  return [a1 needsInput];
}

id objc_msgSend_needsScores(void *a1, const char *a2, ...)
{
  return [a1 needsScores];
}

id objc_msgSend_negate(void *a1, const char *a2, ...)
{
  return [a1 negate];
}

id objc_msgSend_negativeFormat(void *a1, const char *a2, ...)
{
  return [a1 negativeFormat];
}

id objc_msgSend_newArray(void *a1, const char *a2, ...)
{
  return [a1 newArray];
}

id objc_msgSend_newCollector(void *a1, const char *a2, ...)
{
  return [a1 newCollector];
}

id objc_msgSend_newCompressor(void *a1, const char *a2, ...)
{
  return [a1 newCompressor];
}

id objc_msgSend_newDecoder(void *a1, const char *a2, ...)
{
  return [a1 newDecoder];
}

id objc_msgSend_newDecompressor(void *a1, const char *a2, ...)
{
  return [a1 newDecompressor];
}

id objc_msgSend_newEncoder(void *a1, const char *a2, ...)
{
  return [a1 newEncoder];
}

id objc_msgSend_newGroupingRequest(void *a1, const char *a2, ...)
{
  return [a1 newGroupingRequest];
}

id objc_msgSend_newHashesArray(void *a1, const char *a2, ...)
{
  return [a1 newHashesArray];
}

id objc_msgSend_newInstance(void *a1, const char *a2, ...)
{
  return [a1 newInstance];
}

id objc_msgSend_newQIDContainer(void *a1, const char *a2, ...)
{
  return [a1 newQIDContainer];
}

id objc_msgSend_newQIDMapper(void *a1, const char *a2, ...)
{
  return [a1 newQIDMapper];
}

id objc_msgSend_newRAMFile(void *a1, const char *a2, ...)
{
  return [a1 newRAMFile];
}

id objc_msgSend_newState(void *a1, const char *a2, ...)
{
  return [a1 newState];
}

id objc_msgSend_newTermState(void *a1, const char *a2, ...)
{
  return [a1 newTermState];
}

id objc_msgSend_newTitleMapper(void *a1, const char *a2, ...)
{
  return [a1 newTitleMapper];
}

id objc_msgSend_newlineCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 newlineCharacterSet];
}

id objc_msgSend_next(void *a1, const char *a2, ...)
{
  return [a1 next];
}

id objc_msgSend_nextBuffer(void *a1, const char *a2, ...)
{
  return [a1 nextBuffer];
}

id objc_msgSend_nextDaylightSavingTimeTransition(void *a1, const char *a2, ...)
{
  return [a1 nextDaylightSavingTimeTransition];
}

id objc_msgSend_nextDoc(void *a1, const char *a2, ...)
{
  return [a1 nextDoc];
}

id objc_msgSend_nextDouble(void *a1, const char *a2, ...)
{
  return [a1 nextDouble];
}

id objc_msgSend_nextElement(void *a1, const char *a2, ...)
{
  return [a1 nextElement];
}

id objc_msgSend_nextEntry(void *a1, const char *a2, ...)
{
  return [a1 nextEntry];
}

id objc_msgSend_nextEntryNotFailFast(void *a1, const char *a2, ...)
{
  return [a1 nextEntryNotFailFast];
}

id objc_msgSend_nextIndex(void *a1, const char *a2, ...)
{
  return [a1 nextIndex];
}

id objc_msgSend_nextInt(void *a1, const char *a2, ...)
{
  return [a1 nextInt];
}

id objc_msgSend_nextLeaf(void *a1, const char *a2, ...)
{
  return [a1 nextLeaf];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return [a1 nextObject];
}

id objc_msgSend_nextOrd(void *a1, const char *a2, ...)
{
  return [a1 nextOrd];
}

id objc_msgSend_nextPosition(void *a1, const char *a2, ...)
{
  return [a1 nextPosition];
}

id objc_msgSend_nextRun(void *a1, const char *a2, ...)
{
  return [a1 nextRun];
}

id objc_msgSend_nextToken(void *a1, const char *a2, ...)
{
  return [a1 nextToken];
}

id objc_msgSend_nonce(void *a1, const char *a2, ...)
{
  return [a1 nonce];
}

id objc_msgSend_nonretainedObjectValue(void *a1, const char *a2, ...)
{
  return [a1 nonretainedObjectValue];
}

id objc_msgSend_normsFormat(void *a1, const char *a2, ...)
{
  return [a1 normsFormat];
}

id objc_msgSend_notANumberSymbol(void *a1, const char *a2, ...)
{
  return [a1 notANumberSymbol];
}

id objc_msgSend_notify(void *a1, const char *a2, ...)
{
  return [a1 notify];
}

id objc_msgSend_notifyAll(void *a1, const char *a2, ...)
{
  return [a1 notifyAll];
}

id objc_msgSend_nsEncoding(void *a1, const char *a2, ...)
{
  return [a1 nsEncoding];
}

id objc_msgSend_numBuffers(void *a1, const char *a2, ...)
{
  return [a1 numBuffers];
}

id objc_msgSend_numDeletedDocs(void *a1, const char *a2, ...)
{
  return [a1 numDeletedDocs];
}

id objc_msgSend_numDocs(void *a1, const char *a2, ...)
{
  return [a1 numDocs];
}

id objc_msgSend_numHashes(void *a1, const char *a2, ...)
{
  return [a1 numHashes];
}

id objc_msgSend_numTerms(void *a1, const char *a2, ...)
{
  return [a1 numTerms];
}

id objc_msgSend_numberOfApplicationsToWaitFor(void *a1, const char *a2, ...)
{
  return [a1 numberOfApplicationsToWaitFor];
}

id objc_msgSend_numberOfArguments(void *a1, const char *a2, ...)
{
  return [a1 numberOfArguments];
}

id objc_msgSend_numericPrecisionStep(void *a1, const char *a2, ...)
{
  return [a1 numericPrecisionStep];
}

id objc_msgSend_numericType(void *a1, const char *a2, ...)
{
  return [a1 numericType];
}

id objc_msgSend_numericValue(void *a1, const char *a2, ...)
{
  return [a1 numericValue];
}

id objc_msgSend_objcArrayClass(void *a1, const char *a2, ...)
{
  return [a1 objcArrayClass];
}

id objc_msgSend_objcClass(void *a1, const char *a2, ...)
{
  return [a1 objcClass];
}

id objc_msgSend_objcName(void *a1, const char *a2, ...)
{
  return [a1 objcName];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return [a1 object];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 objectEnumerator];
}

id objc_msgSend_offsets(void *a1, const char *a2, ...)
{
  return [a1 offsets];
}

id objc_msgSend_omitNorms(void *a1, const char *a2, ...)
{
  return [a1 omitNorms];
}

id objc_msgSend_omitsNorms(void *a1, const char *a2, ...)
{
  return [a1 omitsNorms];
}

id objc_msgSend_onClose(void *a1, const char *a2, ...)
{
  return [a1 onClose];
}

id objc_msgSend_onDisconnect(void *a1, const char *a2, ...)
{
  return [a1 onDisconnect];
}

id objc_msgSend_onNetwork(void *a1, const char *a2, ...)
{
  return [a1 onNetwork];
}

id objc_msgSend_openConnection(void *a1, const char *a2, ...)
{
  return [a1 openConnection];
}

id objc_msgSend_openSocketChannel(void *a1, const char *a2, ...)
{
  return [a1 openSocketChannel];
}

id objc_msgSend_openStream(void *a1, const char *a2, ...)
{
  return [a1 openStream];
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return [a1 operatingSystemVersion];
}

id objc_msgSend_ord(void *a1, const char *a2, ...)
{
  return [a1 ord];
}

id objc_msgSend_order(void *a1, const char *a2, ...)
{
  return [a1 order];
}

id objc_msgSend_orderedSet(void *a1, const char *a2, ...)
{
  return [a1 orderedSet];
}

id objc_msgSend_ordinal(void *a1, const char *a2, ...)
{
  return [a1 ordinal];
}

id objc_msgSend_overallCategories(void *a1, const char *a2, ...)
{
  return [a1 overallCategories];
}

id objc_msgSend_overrideBlendAlpha(void *a1, const char *a2, ...)
{
  return [a1 overrideBlendAlpha];
}

id objc_msgSend_overrideBlendBeta(void *a1, const char *a2, ...)
{
  return [a1 overrideBlendBeta];
}

id objc_msgSend_overrideBlendGamma(void *a1, const char *a2, ...)
{
  return [a1 overrideBlendGamma];
}

id objc_msgSend_overrideConstellationMinCount(void *a1, const char *a2, ...)
{
  return [a1 overrideConstellationMinCount];
}

id objc_msgSend_overrideConstellationMinWeight(void *a1, const char *a2, ...)
{
  return [a1 overrideConstellationMinWeight];
}

id objc_msgSend_overrideEnableCoreNLPTagging(void *a1, const char *a2, ...)
{
  return [a1 overrideEnableCoreNLPTagging];
}

id objc_msgSend_packageName(void *a1, const char *a2, ...)
{
  return [a1 packageName];
}

id objc_msgSend_pageSize(void *a1, const char *a2, ...)
{
  return [a1 pageSize];
}

id objc_msgSend_parseClassTypeSignature(void *a1, const char *a2, ...)
{
  return [a1 parseClassTypeSignature];
}

id objc_msgSend_parseFieldTypeSignature(void *a1, const char *a2, ...)
{
  return [a1 parseFieldTypeSignature];
}

id objc_msgSend_parseFormalTypeParameter(void *a1, const char *a2, ...)
{
  return [a1 parseFormalTypeParameter];
}

id objc_msgSend_parseOptFormalTypeParameters(void *a1, const char *a2, ...)
{
  return [a1 parseOptFormalTypeParameters];
}

id objc_msgSend_parseOptTypeArguments(void *a1, const char *a2, ...)
{
  return [a1 parseOptTypeArguments];
}

id objc_msgSend_parseReturnType(void *a1, const char *a2, ...)
{
  return [a1 parseReturnType];
}

id objc_msgSend_parseTypeArgument(void *a1, const char *a2, ...)
{
  return [a1 parseTypeArgument];
}

id objc_msgSend_parseTypeSignature(void *a1, const char *a2, ...)
{
  return [a1 parseTypeSignature];
}

id objc_msgSend_parseTypeVariableSignature(void *a1, const char *a2, ...)
{
  return [a1 parseTypeVariableSignature];
}

id objc_msgSend_partialNGramCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 partialNGramCharacterSet];
}

id objc_msgSend_partialNgramCount(void *a1, const char *a2, ...)
{
  return [a1 partialNgramCount];
}

id objc_msgSend_pattern(void *a1, const char *a2, ...)
{
  return [a1 pattern];
}

id objc_msgSend_peek(void *a1, const char *a2, ...)
{
  return [a1 peek];
}

id objc_msgSend_perMillSymbol(void *a1, const char *a2, ...)
{
  return [a1 perMillSymbol];
}

id objc_msgSend_percentSymbol(void *a1, const char *a2, ...)
{
  return [a1 percentSymbol];
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return [a1 phoneNumber];
}

id objc_msgSend_phrases(void *a1, const char *a2, ...)
{
  return [a1 phrases];
}

id objc_msgSend_pipe(void *a1, const char *a2, ...)
{
  return [a1 pipe];
}

id objc_msgSend_poll(void *a1, const char *a2, ...)
{
  return [a1 poll];
}

id objc_msgSend_pollFirst(void *a1, const char *a2, ...)
{
  return [a1 pollFirst];
}

id objc_msgSend_pollFirstEntry(void *a1, const char *a2, ...)
{
  return [a1 pollFirstEntry];
}

id objc_msgSend_pollLast(void *a1, const char *a2, ...)
{
  return [a1 pollLast];
}

id objc_msgSend_pollLastEntry(void *a1, const char *a2, ...)
{
  return [a1 pollLastEntry];
}

id objc_msgSend_pop(void *a1, const char *a2, ...)
{
  return [a1 pop];
}

id objc_msgSend_portraitEnabled(void *a1, const char *a2, ...)
{
  return [a1 portraitEnabled];
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return [a1 position];
}

id objc_msgSend_positiveFormat(void *a1, const char *a2, ...)
{
  return [a1 positiveFormat];
}

id objc_msgSend_positiveInfinitySymbol(void *a1, const char *a2, ...)
{
  return [a1 positiveInfinitySymbol];
}

id objc_msgSend_postingsFormat(void *a1, const char *a2, ...)
{
  return [a1 postingsFormat];
}

id objc_msgSend_precedingTokens(void *a1, const char *a2, ...)
{
  return [a1 precedingTokens];
}

id objc_msgSend_precision(void *a1, const char *a2, ...)
{
  return [a1 precision];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return [a1 preferredLanguages];
}

id objc_msgSend_preferredSceneIdentifiers(void *a1, const char *a2, ...)
{
  return [a1 preferredSceneIdentifiers];
}

id objc_msgSend_prev(void *a1, const char *a2, ...)
{
  return [a1 prev];
}

id objc_msgSend_previous(void *a1, const char *a2, ...)
{
  return [a1 previous];
}

id objc_msgSend_previousIndex(void *a1, const char *a2, ...)
{
  return [a1 previousIndex];
}

id objc_msgSend_primaryCount(void *a1, const char *a2, ...)
{
  return [a1 primaryCount];
}

id objc_msgSend_printStackTrace(void *a1, const char *a2, ...)
{
  return [a1 printStackTrace];
}

id objc_msgSend_println(void *a1, const char *a2, ...)
{
  return [a1 println];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return [a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return [a1 processInfo];
}

id objc_msgSend_processorCount(void *a1, const char *a2, ...)
{
  return [a1 processorCount];
}

id objc_msgSend_propertyName(void *a1, const char *a2, ...)
{
  return [a1 propertyName];
}

id objc_msgSend_propertyNames(void *a1, const char *a2, ...)
{
  return [a1 propertyNames];
}

id objc_msgSend_protectedArray(void *a1, const char *a2, ...)
{
  return [a1 protectedArray];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return [a1 provider];
}

id objc_msgSend_punctuationCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 punctuationCharacterSet];
}

id objc_msgSend_pushContext(void *a1, const char *a2, ...)
{
  return [a1 pushContext];
}

id objc_msgSend_putFields(void *a1, const char *a2, ...)
{
  return [a1 putFields];
}

id objc_msgSend_qidToQueriesMap(void *a1, const char *a2, ...)
{
  return [a1 qidToQueriesMap];
}

id objc_msgSend_queriesArray(void *a1, const char *a2, ...)
{
  return [a1 queriesArray];
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return [a1 query];
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return [a1 queryItems];
}

id objc_msgSend_quotedTokenCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 quotedTokenCharacterSet];
}

id objc_msgSend_ramBytesUsed(void *a1, const char *a2, ...)
{
  return [a1 ramBytesUsed];
}

id objc_msgSend_randomId(void *a1, const char *a2, ...)
{
  return [a1 randomId];
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return [a1 range];
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return [a1 rangeValue];
}

id objc_msgSend_rawHTML(void *a1, const char *a2, ...)
{
  return [a1 rawHTML];
}

id objc_msgSend_rawTextEnabled(void *a1, const char *a2, ...)
{
  return [a1 rawTextEnabled];
}

id objc_msgSend_read(void *a1, const char *a2, ...)
{
  return [a1 read];
}

id objc_msgSend_readByte(void *a1, const char *a2, ...)
{
  return [a1 readByte];
}

id objc_msgSend_readChar(void *a1, const char *a2, ...)
{
  return [a1 readChar];
}

id objc_msgSend_readConfiguration(void *a1, const char *a2, ...)
{
  return [a1 readConfiguration];
}

id objc_msgSend_readFields(void *a1, const char *a2, ...)
{
  return [a1 readFields];
}

id objc_msgSend_readFloat(void *a1, const char *a2, ...)
{
  return [a1 readFloat];
}

id objc_msgSend_readInt(void *a1, const char *a2, ...)
{
  return [a1 readInt];
}

id objc_msgSend_readLine(void *a1, const char *a2, ...)
{
  return [a1 readLine];
}

id objc_msgSend_readLong(void *a1, const char *a2, ...)
{
  return [a1 readLong];
}

id objc_msgSend_readMapOfStrings(void *a1, const char *a2, ...)
{
  return [a1 readMapOfStrings];
}

id objc_msgSend_readObject(void *a1, const char *a2, ...)
{
  return [a1 readObject];
}

id objc_msgSend_readSetOfStrings(void *a1, const char *a2, ...)
{
  return [a1 readSetOfStrings];
}

id objc_msgSend_readShort(void *a1, const char *a2, ...)
{
  return [a1 readShort];
}

id objc_msgSend_readString(void *a1, const char *a2, ...)
{
  return [a1 readString];
}

id objc_msgSend_readStringSet(void *a1, const char *a2, ...)
{
  return [a1 readStringSet];
}

id objc_msgSend_readStringStringMap(void *a1, const char *a2, ...)
{
  return [a1 readStringStringMap];
}

id objc_msgSend_readVInt(void *a1, const char *a2, ...)
{
  return [a1 readVInt];
}

id objc_msgSend_readVLong(void *a1, const char *a2, ...)
{
  return [a1 readVLong];
}

id objc_msgSend_readZInt(void *a1, const char *a2, ...)
{
  return [a1 readZInt];
}

id objc_msgSend_readZLong(void *a1, const char *a2, ...)
{
  return [a1 readZLong];
}

id objc_msgSend_reader(void *a1, const char *a2, ...)
{
  return [a1 reader];
}

id objc_msgSend_readerValue(void *a1, const char *a2, ...)
{
  return [a1 readerValue];
}

id objc_msgSend_ready(void *a1, const char *a2, ...)
{
  return [a1 ready];
}

id objc_msgSend_readyOps(void *a1, const char *a2, ...)
{
  return [a1 readyOps];
}

id objc_msgSend_reap(void *a1, const char *a2, ...)
{
  return [a1 reap];
}

id objc_msgSend_recentsCache(void *a1, const char *a2, ...)
{
  return [a1 recentsCache];
}

id objc_msgSend_recycle(void *a1, const char *a2, ...)
{
  return [a1 recycle];
}

id objc_msgSend_refId(void *a1, const char *a2, ...)
{
  return [a1 refId];
}

id objc_msgSend_regionEnd(void *a1, const char *a2, ...)
{
  return [a1 regionEnd];
}

id objc_msgSend_regionStart(void *a1, const char *a2, ...)
{
  return [a1 regionStart];
}

id objc_msgSend_rehash(void *a1, const char *a2, ...)
{
  return [a1 rehash];
}

id objc_msgSend_relatedField(void *a1, const char *a2, ...)
{
  return [a1 relatedField];
}

id objc_msgSend_relatedItems(void *a1, const char *a2, ...)
{
  return [a1 relatedItems];
}

id objc_msgSend_relativeScore(void *a1, const char *a2, ...)
{
  return [a1 relativeScore];
}

id objc_msgSend_remaining(void *a1, const char *a2, ...)
{
  return [a1 remaining];
}

id objc_msgSend_remoteProcesses(void *a1, const char *a2, ...)
{
  return [a1 remoteProcesses];
}

id objc_msgSend_remove(void *a1, const char *a2, ...)
{
  return [a1 remove];
}

id objc_msgSend_removeAllFields(void *a1, const char *a2, ...)
{
  return [a1 removeAllFields];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return [a1 removeAllObjects];
}

id objc_msgSend_removeFirst(void *a1, const char *a2, ...)
{
  return [a1 removeFirst];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return [a1 removeLastObject];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return [a1 request];
}

id objc_msgSend_requireArgument(void *a1, const char *a2, ...)
{
  return [a1 requireArgument];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return [a1 reset];
}

id objc_msgSend_resetLengthForReceive(void *a1, const char *a2, ...)
{
  return [a1 resetLengthForReceive];
}

id objc_msgSend_resetPending(void *a1, const char *a2, ...)
{
  return [a1 resetPending];
}

id objc_msgSend_resolve(void *a1, const char *a2, ...)
{
  return [a1 resolve];
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return [a1 response];
}

id objc_msgSend_resultType(void *a1, const char *a2, ...)
{
  return [a1 resultType];
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return [a1 results];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return [a1 resume];
}

id objc_msgSend_retainCount(void *a1, const char *a2, ...)
{
  return [a1 retainCount];
}

id objc_msgSend_rethrowAsIOException(void *a1, const char *a2, ...)
{
  return [a1 rethrowAsIOException];
}

id objc_msgSend_rethrowAsSocketException(void *a1, const char *a2, ...)
{
  return [a1 rethrowAsSocketException];
}

id objc_msgSend_rethrowAsUnknownHostException(void *a1, const char *a2, ...)
{
  return [a1 rethrowAsUnknownHostException];
}

id objc_msgSend_returnType(void *a1, const char *a2, ...)
{
  return [a1 returnType];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 reverseObjectEnumerator];
}

id objc_msgSend_rewind(void *a1, const char *a2, ...)
{
  return [a1 rewind];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return [a1 run];
}

id objc_msgSend_scanIdentifier(void *a1, const char *a2, ...)
{
  return [a1 scanIdentifier];
}

id objc_msgSend_scanSymbol(void *a1, const char *a2, ...)
{
  return [a1 scanSymbol];
}

id objc_msgSend_sceneIdentifier(void *a1, const char *a2, ...)
{
  return [a1 sceneIdentifier];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return [a1 scheme];
}

id objc_msgSend_score(void *a1, const char *a2, ...)
{
  return [a1 score];
}

id objc_msgSend_scriptCode(void *a1, const char *a2, ...)
{
  return [a1 scriptCode];
}

id objc_msgSend_seal(void *a1, const char *a2, ...)
{
  return [a1 seal];
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return [a1 second];
}

id objc_msgSend_secondary(void *a1, const char *a2, ...)
{
  return [a1 secondary];
}

id objc_msgSend_secondsFromGMT(void *a1, const char *a2, ...)
{
  return [a1 secondsFromGMT];
}

id objc_msgSend_seeOtherDocIdRelative(void *a1, const char *a2, ...)
{
  return [a1 seeOtherDocIdRelative];
}

id objc_msgSend_segString(void *a1, const char *a2, ...)
{
  return [a1 segString];
}

id objc_msgSend_segmentInfoFormat(void *a1, const char *a2, ...)
{
  return [a1 segmentInfoFormat];
}

id objc_msgSend_selector(void *a1, const char *a2, ...)
{
  return [a1 selector];
}

id objc_msgSend_serviceBusyError(void *a1, const char *a2, ...)
{
  return [a1 serviceBusyError];
}

id objc_msgSend_serviceDisabledError(void *a1, const char *a2, ...)
{
  return [a1 serviceDisabledError];
}

id objc_msgSend_serviceListener(void *a1, const char *a2, ...)
{
  return [a1 serviceListener];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return [a1 set];
}

id objc_msgSend_setError(void *a1, const char *a2, ...)
{
  return [a1 setError];
}

id objc_msgSend_setupStreamHandler(void *a1, const char *a2, ...)
{
  return [a1 setupStreamHandler];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return [a1 sharedInstance];
}

id objc_msgSend_shiftLeftOneBit(void *a1, const char *a2, ...)
{
  return [a1 shiftLeftOneBit];
}

id objc_msgSend_shortClass(void *a1, const char *a2, ...)
{
  return [a1 shortClass];
}

id objc_msgSend_shortMonthSymbols(void *a1, const char *a2, ...)
{
  return [a1 shortMonthSymbols];
}

id objc_msgSend_shortStandaloneMonthSymbols(void *a1, const char *a2, ...)
{
  return [a1 shortStandaloneMonthSymbols];
}

id objc_msgSend_shortStandaloneWeekdaySymbols(void *a1, const char *a2, ...)
{
  return [a1 shortStandaloneWeekdaySymbols];
}

id objc_msgSend_shortValue(void *a1, const char *a2, ...)
{
  return [a1 shortValue];
}

id objc_msgSend_shortWeekdaySymbols(void *a1, const char *a2, ...)
{
  return [a1 shortWeekdaySymbols];
}

id objc_msgSend_shutdownInput(void *a1, const char *a2, ...)
{
  return [a1 shutdownInput];
}

id objc_msgSend_shutdownOutput(void *a1, const char *a2, ...)
{
  return [a1 shutdownOutput];
}

id objc_msgSend_signal(void *a1, const char *a2, ...)
{
  return [a1 signal];
}

id objc_msgSend_signature(void *a1, const char *a2, ...)
{
  return [a1 signature];
}

id objc_msgSend_signum(void *a1, const char *a2, ...)
{
  return [a1 signum];
}

id objc_msgSend_simplifiedDesiredLanguageTags(void *a1, const char *a2, ...)
{
  return [a1 simplifiedDesiredLanguageTags];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return [a1 size];
}

id objc_msgSend_sizeInBytes(void *a1, const char *a2, ...)
{
  return [a1 sizeInBytes];
}

id objc_msgSend_skip(void *a1, const char *a2, ...)
{
  return [a1 skip];
}

id objc_msgSend_slice(void *a1, const char *a2, ...)
{
  return [a1 slice];
}

id objc_msgSend_sloppyFreq(void *a1, const char *a2, ...)
{
  return [a1 sloppyFreq];
}

id objc_msgSend_smallUIHeight(void *a1, const char *a2, ...)
{
  return [a1 smallUIHeight];
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return [a1 snapshot];
}

id objc_msgSend_socket(void *a1, const char *a2, ...)
{
  return [a1 socket];
}

id objc_msgSend_sort(void *a1, const char *a2, ...)
{
  return [a1 sort];
}

id objc_msgSend_sourceNamedEntities(void *a1, const char *a2, ...)
{
  return [a1 sourceNamedEntities];
}

id objc_msgSend_sourceUIElement(void *a1, const char *a2, ...)
{
  return [a1 sourceUIElement];
}

id objc_msgSend_specialValue(void *a1, const char *a2, ...)
{
  return [a1 specialValue];
}

id objc_msgSend_standaloneMonthSymbols(void *a1, const char *a2, ...)
{
  return [a1 standaloneMonthSymbols];
}

id objc_msgSend_standaloneWeekdaySymbols(void *a1, const char *a2, ...)
{
  return [a1 standaloneWeekdaySymbols];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return [a1 start];
}

id objc_msgSend_startContributingPredictions(void *a1, const char *a2, ...)
{
  return [a1 startContributingPredictions];
}

id objc_msgSend_startDocument(void *a1, const char *a2, ...)
{
  return [a1 startDocument];
}

id objc_msgSend_startOffset(void *a1, const char *a2, ...)
{
  return [a1 startOffset];
}

id objc_msgSend_startPosition(void *a1, const char *a2, ...)
{
  return [a1 startPosition];
}

id objc_msgSend_startsQuotedCount(void *a1, const char *a2, ...)
{
  return [a1 startsQuotedCount];
}

id objc_msgSend_staticRef(void *a1, const char *a2, ...)
{
  return [a1 staticRef];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return [a1 statusCode];
}

id objc_msgSend_stepBackward(void *a1, const char *a2, ...)
{
  return [a1 stepBackward];
}

id objc_msgSend_stepForward(void *a1, const char *a2, ...)
{
  return [a1 stepForward];
}

id objc_msgSend_stillWarmingUp(void *a1, const char *a2, ...)
{
  return [a1 stillWarmingUp];
}

id objc_msgSend_storeTermVectorOffsets(void *a1, const char *a2, ...)
{
  return [a1 storeTermVectorOffsets];
}

id objc_msgSend_storeTermVectorPayloads(void *a1, const char *a2, ...)
{
  return [a1 storeTermVectorPayloads];
}

id objc_msgSend_storeTermVectorPositions(void *a1, const char *a2, ...)
{
  return [a1 storeTermVectorPositions];
}

id objc_msgSend_storeTermVectors(void *a1, const char *a2, ...)
{
  return [a1 storeTermVectors];
}

id objc_msgSend_stored(void *a1, const char *a2, ...)
{
  return [a1 stored];
}

id objc_msgSend_storedFieldsFormat(void *a1, const char *a2, ...)
{
  return [a1 storedFieldsFormat];
}

id objc_msgSend_stream(void *a1, const char *a2, ...)
{
  return [a1 stream];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return [a1 string];
}

id objc_msgSend_stringByResolvingSymlinksInPath(void *a1, const char *a2, ...)
{
  return [a1 stringByResolvingSymlinksInPath];
}

id objc_msgSend_stringByStandardizingPath(void *a1, const char *a2, ...)
{
  return [a1 stringByStandardizingPath];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return [a1 stringValue];
}

id objc_msgSend_structuredExtractionDemotedResultMinPrefix(void *a1, const char *a2, ...)
{
  return [a1 structuredExtractionDemotedResultMinPrefix];
}

id objc_msgSend_structuredExtractionMinPrefix(void *a1, const char *a2, ...)
{
  return [a1 structuredExtractionMinPrefix];
}

id objc_msgSend_structuredExtractionUIBlockList(void *a1, const char *a2, ...)
{
  return [a1 structuredExtractionUIBlockList];
}

id objc_msgSend_structuredExtractionUIOffScreenIgnoreList(void *a1, const char *a2, ...)
{
  return [a1 structuredExtractionUIOffScreenIgnoreList];
}

id objc_msgSend_subtractAncestorCounts(void *a1, const char *a2, ...)
{
  return [a1 subtractAncestorCounts];
}

id objc_msgSend_superclass(void *a1, const char *a2, ...)
{
  return [a1 superclass];
}

id objc_msgSend_superviewClassNames(void *a1, const char *a2, ...)
{
  return [a1 superviewClassNames];
}

id objc_msgSend_surroundingEntitiesDistanceScoreHorizontalSkew(void *a1, const char *a2, ...)
{
  return [a1 surroundingEntitiesDistanceScoreHorizontalSkew];
}

id objc_msgSend_surroundingEntitiesMaxDistanceScore(void *a1, const char *a2, ...)
{
  return [a1 surroundingEntitiesMaxDistanceScore];
}

id objc_msgSend_surroundingEntitiesMaxLabelLength(void *a1, const char *a2, ...)
{
  return [a1 surroundingEntitiesMaxLabelLength];
}

id objc_msgSend_surroundingEntitiesSearchRange(void *a1, const char *a2, ...)
{
  return [a1 surroundingEntitiesSearchRange];
}

id objc_msgSend_sync(void *a1, const char *a2, ...)
{
  return [a1 sync];
}

id objc_msgSend_tags(void *a1, const char *a2, ...)
{
  return [a1 tags];
}

id objc_msgSend_tagsEnabled(void *a1, const char *a2, ...)
{
  return [a1 tagsEnabled];
}

id objc_msgSend_tagsMap(void *a1, const char *a2, ...)
{
  return [a1 tagsMap];
}

id objc_msgSend_term(void *a1, const char *a2, ...)
{
  return [a1 term];
}

id objc_msgSend_termSequence(void *a1, const char *a2, ...)
{
  return [a1 termSequence];
}

id objc_msgSend_termState(void *a1, const char *a2, ...)
{
  return [a1 termState];
}

id objc_msgSend_termVectorsFormat(void *a1, const char *a2, ...)
{
  return [a1 termVectorsFormat];
}

id objc_msgSend_terms(void *a1, const char *a2, ...)
{
  return [a1 terms];
}

id objc_msgSend_termsEnum(void *a1, const char *a2, ...)
{
  return [a1 termsEnum];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return [a1 text];
}

id objc_msgSend_textIsRaw(void *a1, const char *a2, ...)
{
  return [a1 textIsRaw];
}

id objc_msgSend_textTermsEnum(void *a1, const char *a2, ...)
{
  return [a1 textTermsEnum];
}

id objc_msgSend_threadDictionary(void *a1, const char *a2, ...)
{
  return [a1 threadDictionary];
}

id objc_msgSend_threadPriority(void *a1, const char *a2, ...)
{
  return [a1 threadPriority];
}

id objc_msgSend_throwException(void *a1, const char *a2, ...)
{
  return [a1 throwException];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIsSignificant(void *a1, const char *a2, ...)
{
  return [a1 timeIsSignificant];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return [a1 timeZone];
}

id objc_msgSend_timeoutError(void *a1, const char *a2, ...)
{
  return [a1 timeoutError];
}

id objc_msgSend_timing(void *a1, const char *a2, ...)
{
  return [a1 timing];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return [a1 title];
}

id objc_msgSend_titleField(void *a1, const char *a2, ...)
{
  return [a1 titleField];
}

id objc_msgSend_titleMatch(void *a1, const char *a2, ...)
{
  return [a1 titleMatch];
}

id objc_msgSend_titleMinPrefix(void *a1, const char *a2, ...)
{
  return [a1 titleMinPrefix];
}

id objc_msgSend_titleMinTermsRequired(void *a1, const char *a2, ...)
{
  return [a1 titleMinTermsRequired];
}

id objc_msgSend_titlePrimary(void *a1, const char *a2, ...)
{
  return [a1 titlePrimary];
}

id objc_msgSend_titleTokenString(void *a1, const char *a2, ...)
{
  return [a1 titleTokenString];
}

id objc_msgSend_toAbsolutePath(void *a1, const char *a2, ...)
{
  return [a1 toAbsolutePath];
}

id objc_msgSend_toArray(void *a1, const char *a2, ...)
{
  return [a1 toArray];
}

id objc_msgSend_toBigInteger(void *a1, const char *a2, ...)
{
  return [a1 toBigInteger];
}

id objc_msgSend_toBigIntegerExact(void *a1, const char *a2, ...)
{
  return [a1 toBigIntegerExact];
}

id objc_msgSend_toByteArray(void *a1, const char *a2, ...)
{
  return [a1 toByteArray];
}

id objc_msgSend_toBytesRef(void *a1, const char *a2, ...)
{
  return [a1 toBytesRef];
}

id objc_msgSend_toCharArray(void *a1, const char *a2, ...)
{
  return [a1 toCharArray];
}

id objc_msgSend_toExternalForm(void *a1, const char *a2, ...)
{
  return [a1 toExternalForm];
}

id objc_msgSend_toFile(void *a1, const char *a2, ...)
{
  return [a1 toFile];
}

id objc_msgSend_toHtml(void *a1, const char *a2, ...)
{
  return [a1 toHtml];
}

id objc_msgSend_toLong(void *a1, const char *a2, ...)
{
  return [a1 toLong];
}

id objc_msgSend_toMillis(void *a1, const char *a2, ...)
{
  return [a1 toMillis];
}

id objc_msgSend_toPattern(void *a1, const char *a2, ...)
{
  return [a1 toPattern];
}

id objc_msgSend_toPlainString(void *a1, const char *a2, ...)
{
  return [a1 toPlainString];
}

id objc_msgSend_toRealPath(void *a1, const char *a2, ...)
{
  return [a1 toRealPath];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return [a1 token];
}

id objc_msgSend_tokenA(void *a1, const char *a2, ...)
{
  return [a1 tokenA];
}

id objc_msgSend_tokenB(void *a1, const char *a2, ...)
{
  return [a1 tokenB];
}

id objc_msgSend_tokenCount(void *a1, const char *a2, ...)
{
  return [a1 tokenCount];
}

id objc_msgSend_tokenCountMatching(void *a1, const char *a2, ...)
{
  return [a1 tokenCountMatching];
}

id objc_msgSend_tokenCountPrimary(void *a1, const char *a2, ...)
{
  return [a1 tokenCountPrimary];
}

id objc_msgSend_tokenString(void *a1, const char *a2, ...)
{
  return [a1 tokenString];
}

id objc_msgSend_tokenized(void *a1, const char *a2, ...)
{
  return [a1 tokenized];
}

id objc_msgSend_top(void *a1, const char *a2, ...)
{
  return [a1 top];
}

id objc_msgSend_topDocs(void *a1, const char *a2, ...)
{
  return [a1 topDocs];
}

id objc_msgSend_topDocsSize(void *a1, const char *a2, ...)
{
  return [a1 topDocsSize];
}

id objc_msgSend_topList(void *a1, const char *a2, ...)
{
  return [a1 topList];
}

id objc_msgSend_topicId(void *a1, const char *a2, ...)
{
  return [a1 topicId];
}

id objc_msgSend_topicIdOverride(void *a1, const char *a2, ...)
{
  return [a1 topicIdOverride];
}

id objc_msgSend_topk(void *a1, const char *a2, ...)
{
  return [a1 topk];
}

id objc_msgSend_totalTermFreq(void *a1, const char *a2, ...)
{
  return [a1 totalTermFreq];
}

id objc_msgSend_treasureMap(void *a1, const char *a2, ...)
{
  return [a1 treasureMap];
}

id objc_msgSend_trim(void *a1, const char *a2, ...)
{
  return [a1 trim];
}

id objc_msgSend_trimCounts(void *a1, const char *a2, ...)
{
  return [a1 trimCounts];
}

id objc_msgSend_trimMatches(void *a1, const char *a2, ...)
{
  return [a1 trimMatches];
}

id objc_msgSend_tryLock(void *a1, const char *a2, ...)
{
  return [a1 tryLock];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return [a1 type];
}

id objc_msgSend_typeName(void *a1, const char *a2, ...)
{
  return [a1 typeName];
}

id objc_msgSend_uiElements(void *a1, const char *a2, ...)
{
  return [a1 uiElements];
}

id objc_msgSend_uname(void *a1, const char *a2, ...)
{
  return [a1 uname];
}

id objc_msgSend_underlyingResult(void *a1, const char *a2, ...)
{
  return [a1 underlyingResult];
}

id objc_msgSend_unknownFormatConversionException(void *a1, const char *a2, ...)
{
  return [a1 unknownFormatConversionException];
}

id objc_msgSend_unsafeOffset(void *a1, const char *a2, ...)
{
  return [a1 unsafeOffset];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongValue];
}

id objc_msgSend_updateConfiguration(void *a1, const char *a2, ...)
{
  return [a1 updateConfiguration];
}

id objc_msgSend_updateTop(void *a1, const char *a2, ...)
{
  return [a1 updateTop];
}

id objc_msgSend_uppercaseLetterCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 uppercaseLetterCharacterSet];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return [a1 uppercaseString];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return [a1 url];
}

id objc_msgSend_urls(void *a1, const char *a2, ...)
{
  return [a1 urls];
}

id objc_msgSend_useBloomFilter(void *a1, const char *a2, ...)
{
  return [a1 useBloomFilter];
}

id objc_msgSend_useDaylightTime(void *a1, const char *a2, ...)
{
  return [a1 useDaylightTime];
}

id objc_msgSend_userActivity(void *a1, const char *a2, ...)
{
  return [a1 userActivity];
}

id objc_msgSend_utf8ToString(void *a1, const char *a2, ...)
{
  return [a1 utf8ToString];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return [a1 uuid];
}

id objc_msgSend_valid(void *a1, const char *a2, ...)
{
  return [a1 valid];
}

id objc_msgSend_validOps(void *a1, const char *a2, ...)
{
  return [a1 validOps];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return [a1 value];
}

id objc_msgSend_values(void *a1, const char *a2, ...)
{
  return [a1 values];
}

id objc_msgSend_verticalGroupBuffer(void *a1, const char *a2, ...)
{
  return [a1 verticalGroupBuffer];
}

id objc_msgSend_veryShortMonthSymbols(void *a1, const char *a2, ...)
{
  return [a1 veryShortMonthSymbols];
}

id objc_msgSend_veryShortStandaloneMonthSymbols(void *a1, const char *a2, ...)
{
  return [a1 veryShortStandaloneMonthSymbols];
}

id objc_msgSend_veryShortStandaloneWeekdaySymbols(void *a1, const char *a2, ...)
{
  return [a1 veryShortStandaloneWeekdaySymbols];
}

id objc_msgSend_veryShortWeekdaySymbols(void *a1, const char *a2, ...)
{
  return [a1 veryShortWeekdaySymbols];
}

id objc_msgSend_voidClass(void *a1, const char *a2, ...)
{
  return [a1 voidClass];
}

id objc_msgSend_wakeup(void *a1, const char *a2, ...)
{
  return [a1 wakeup];
}

id objc_msgSend_warmUpDatPath(void *a1, const char *a2, ...)
{
  return [a1 warmUpDatPath];
}

id objc_msgSend_warnIfOpen(void *a1, const char *a2, ...)
{
  return [a1 warnIfOpen];
}

id objc_msgSend_weekdaySymbols(void *a1, const char *a2, ...)
{
  return [a1 weekdaySymbols];
}

id objc_msgSend_weight(void *a1, const char *a2, ...)
{
  return [a1 weight];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 whitespaceCharacterSet];
}

id objc_msgSend_wordlist(void *a1, const char *a2, ...)
{
  return [a1 wordlist];
}

id objc_msgSend_words(void *a1, const char *a2, ...)
{
  return [a1 words];
}

id objc_msgSend_writeFields(void *a1, const char *a2, ...)
{
  return [a1 writeFields];
}

id objc_msgSend_writeHeader(void *a1, const char *a2, ...)
{
  return [a1 writeHeader];
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return [a1 year];
}

id objc_msgSend_zeroSymbol(void *a1, const char *a2, ...)
{
  return [a1 zeroSymbol];
}