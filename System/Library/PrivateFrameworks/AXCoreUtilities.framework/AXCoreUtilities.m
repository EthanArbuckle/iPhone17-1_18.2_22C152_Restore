void AXPerformSafeBlock(void *a1)
{
  AXPerformSafeBlockWithErrorHandler(a1, 0);
}

void AXPerformBlockAsynchronouslyOnMainThread(dispatch_block_t block)
{
}

uint64_t __UIAccessibilityGetAssociatedInteger(void *a1, const void *a2)
{
  v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = [v2 integerValue];

  return v3;
}

void AXPerformBlockOnMainThread(void *a1)
{
  v1 = (void *)MEMORY[0x1E4F29060];
  block = a1;
  if ([v1 isMainThread]) {
    block[2]();
  }
  else {
    dispatch_async(MEMORY[0x1E4F14428], block);
  }
}

void sub_18FC6F5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void AXPerformBlockOnMainThreadAfterDelay(void *a1, double a2)
{
  int64_t v2 = (uint64_t)(a2 * 1000000000.0);
  dispatch_block_t block = a1;
  dispatch_time_t v3 = dispatch_time(0, v2);
  dispatch_after(v3, MEMORY[0x1E4F14428], block);
}

void __UIAccessibilitySetAssociatedBool(void *a1, const void *a2, int a3)
{
  id object = a1;
  if (a3)
  {
    v5 = [NSNumber numberWithBool:1];
  }
  else
  {
    v5 = 0;
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);
}

void sub_18FC700F4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long buf,int a24,__int16 a25,__int16 a26,id a27,long long a28)
{
  if (a2 == 1)
  {
    id v30 = objc_begin_catch(a1);
    v31 = *(void **)(a18 + 40);
    *(void *)(a18 + 40) = 0;

    if (AXShouldReportValidationErrors())
    {
      v32 = +[AXValidationManager sharedInstance];
      v33 = (objc_class *)objc_opt_class();
      v34 = NSStringFromClass(v33);
      [v32 sendExceptionForSafeValueKey:v28 onTarget:v34 overrideProcessName:0];
    }
    if (AXShouldLogValidationErrors())
    {
      v35 = AXLogValidations();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        id v38 = [v30 name];
        v39 = (objc_class *)objc_opt_class();
        NSStringFromClass(v39);
        id v40 = (id)objc_claimAutoreleasedReturnValue();
        v41 = [MEMORY[0x1E4F29060] callStackSymbols];
        LODWORD(buf) = 138544386;
        *(void *)((char *)&buf + 4) = v38;
        WORD6(buf) = 2114;
        *(void *)((char *)&buf + 14) = v28;
        a26 = 2114;
        a27 = v40;
        LOWORD(a28) = 2114;
        *(void *)((char *)&a28 + 2) = v30;
        WORD5(a28) = 2114;
        *(void *)((char *)&a28 + 12) = v41;
        _os_log_error_impl(&dword_18FC6C000, v35, OS_LOG_TYPE_ERROR, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);
      }
    }
    if (AXShouldCrashOnValidationErrors())
    {
      v36 = AXLogValidations();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT))
      {
        id v42 = [v30 name];
        v43 = (objc_class *)objc_opt_class();
        NSStringFromClass(v43);
        id v44 = (id)objc_claimAutoreleasedReturnValue();
        v45 = [MEMORY[0x1E4F29060] callStackSymbols];
        LODWORD(buf) = 138544386;
        *(void *)((char *)&buf + 4) = v42;
        WORD6(buf) = 2114;
        *(void *)((char *)&buf + 14) = v28;
        a26 = 2114;
        a27 = v44;
        LOWORD(a28) = 2114;
        *(void *)((char *)&a28 + 2) = v30;
        WORD5(a28) = 2114;
        *(void *)((char *)&a28 + 12) = v45;
        _os_log_fault_impl(&dword_18FC6C000, v36, OS_LOG_TYPE_FAULT, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);
      }
    }

    objc_end_catch();
    id v37 = *(id *)(a18 + 40);
    JUMPOUT(0x18FC70090);
  }
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_18FC7040C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf, int a12, __int16 a13, __int16 a14, id a15, long long a16)
{
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(a1);
    if (AXShouldReportValidationErrors())
    {
      v18 = +[AXValidationManager sharedInstance];
      v19 = (objc_class *)objc_opt_class();
      v20 = NSStringFromClass(v19);
      [v18 sendExceptionForSafeValueKey:v16 onTarget:v20 overrideProcessName:0];
    }
    if (AXShouldLogValidationErrors())
    {
      v21 = AXLogValidations();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        id v23 = [v17 name];
        v24 = (objc_class *)objc_opt_class();
        NSStringFromClass(v24);
        id v25 = (id)objc_claimAutoreleasedReturnValue();
        v26 = [MEMORY[0x1E4F29060] callStackSymbols];
        LODWORD(buf) = 138544386;
        *(void *)((char *)&buf + 4) = v23;
        WORD6(buf) = 2114;
        *(void *)((char *)&buf + 14) = v16;
        a14 = 2114;
        a15 = v25;
        LOWORD(a16) = 2114;
        *(void *)((char *)&a16 + 2) = v17;
        WORD5(a16) = 2114;
        *(void *)((char *)&a16 + 12) = v26;
        _os_log_error_impl(&dword_18FC6C000, v21, OS_LOG_TYPE_ERROR, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);
      }
    }
    if (AXShouldCrashOnValidationErrors())
    {
      v22 = AXLogValidations();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
      {
        id v27 = [v17 name];
        uint64_t v28 = (objc_class *)objc_opt_class();
        NSStringFromClass(v28);
        id v29 = (id)objc_claimAutoreleasedReturnValue();
        id v30 = [MEMORY[0x1E4F29060] callStackSymbols];
        LODWORD(buf) = 138544386;
        *(void *)((char *)&buf + 4) = v27;
        WORD6(buf) = 2114;
        *(void *)((char *)&buf + 14) = v16;
        a14 = 2114;
        a15 = v29;
        LOWORD(a16) = 2114;
        *(void *)((char *)&a16 + 2) = v17;
        WORD5(a16) = 2114;
        *(void *)((char *)&a16 + 12) = v30;
        _os_log_fault_impl(&dword_18FC6C000, v22, OS_LOG_TYPE_FAULT, "Error (%{public}@): Undefined key: %{public}@, for class %{public}@ [%{public}@]\n%{public}@", (uint8_t *)&buf, 0x34u);
      }
    }

    objc_end_catch();
    JUMPOUT(0x18FC703CCLL);
  }
  _Unwind_Resume(a1);
}

void sub_18FC708EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  objc_sync_exit(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_18FC70AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __UIAccessibilityGetAssociatedBool(void *a1, const void *a2)
{
  int64_t v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = [v2 BOOLValue];

  return v3;
}

void __UIAccessibilitySetAssociatedObject(void *a1, const void *a2, void *a3)
{
}

id __UIAccessibilityCastAsClass(objc_class *a1, void *a2, int a3, unsigned char *a4)
{
  id v7 = a2;
  if (!v7) {
    goto LABEL_11;
  }
  char isKindOfClass = objc_opt_isKindOfClass();
  if (a3)
  {
    if (isKindOfClass & 1 | ((AXPerformValidationChecks() & 1) == 0))
    {
      LOBYTE(v9) = 0;
    }
    else
    {
      int v10 = AXShouldCrashOnValidationErrors();
      v11 = (objc_class *)objc_opt_class();
      v12 = NSStringFromClass(v11);
      v13 = NSStringFromClass(a1);
      v21 = [MEMORY[0x1E4F29060] callStackSymbols];
      int v9 = __UIAccessibilityHandleValidationErrorWithDescription(v10, 0, @"Failed to cast object <%@: %p> as class %@ %@", v14, v15, v16, v17, v18, (uint64_t)v12);

      if (!a4 && v9) {
        abort();
      }
    }
    if (a4) {
      *a4 = v9;
    }
  }
  if (isKindOfClass) {
    id v19 = v7;
  }
  else {
LABEL_11:
  }
    id v19 = 0;

  return v19;
}

id __UIAccessibilityCastAsSafeCategory(void *a1, void *a2, int a3, unsigned char *a4)
{
  id v7 = a2;
  if (!v7)
  {
    id v28 = 0;
    goto LABEL_32;
  }
  v8 = [a1 safeCategoryTargetClassName];
  int v9 = v8;
  if (a3)
  {
    LOBYTE(v10) = 0;
    if (!AXPerformValidationChecks()
      || v9
      || (int v11 = AXShouldCrashOnValidationErrors(),
          NSStringFromClass((Class)a1),
          v12 = objc_claimAutoreleasedReturnValue(),
          int v10 = __UIAccessibilityHandleValidationErrorWithDescription(v11, 0, @"Couldn't find target class name for safe category class %@", v13, v14, v15, v16, v17, (uint64_t)v12), v12, a4)|| !v10)
    {
      if (a4) {
        *a4 = v10;
      }
      if (!v9) {
        goto LABEL_30;
      }
      Class v18 = NSClassFromString(v9);
      LOBYTE(v19) = 0;
      if (!AXPerformValidationChecks()
        || v18
        || (int v20 = AXShouldCrashOnValidationErrors(),
            NSStringFromClass((Class)a1),
            v39 = objc_claimAutoreleasedReturnValue(),
            int v19 = __UIAccessibilityHandleValidationErrorWithDescription(v20, 0, @"Couldn't find target class named %@ for safe category class %@", v21, v22, v23, v24, v25, (uint64_t)v9), v39, a4)|| !v19)
      {
        if (a4) {
          *a4 = v19;
        }
        if (!v18) {
          goto LABEL_30;
        }
        char isKindOfClass = objc_opt_isKindOfClass();
        if (isKindOfClass & 1 | ((AXPerformValidationChecks() & 1) == 0))
        {
          LOBYTE(v27) = 0;
          goto LABEL_27;
        }
        int v29 = AXShouldCrashOnValidationErrors();
        id v30 = (objc_class *)objc_opt_class();
        v31 = NSStringFromClass(v30);
        v32 = NSStringFromClass((Class)a1);
        id v40 = [MEMORY[0x1E4F29060] callStackSymbols];
        int v27 = __UIAccessibilityHandleValidationErrorWithDescription(v29, 0, @"Failed to cast object <%@: %p> as safe category %@ %@", v33, v34, v35, v36, v37, (uint64_t)v31);

        if (a4 || !v27)
        {
LABEL_27:
          if (a4) {
            *a4 = v27;
          }
          if ((isKindOfClass & 1) == 0) {
            goto LABEL_30;
          }
          goto LABEL_24;
        }
      }
    }
    abort();
  }
  if (!v8 || !NSClassFromString(v8) || (objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_30:
    id v28 = 0;
    goto LABEL_31;
  }
LABEL_24:
  id v28 = v7;
LABEL_31:

LABEL_32:
  return v28;
}

id __UIAccessibilitySafeClass(void *a1, void *a2, int a3, unsigned char *a4)
{
  id v7 = a1;
  id v8 = a2;
  if (!v8) {
    goto LABEL_11;
  }
  NSClassFromString(v7);
  char isKindOfClass = objc_opt_isKindOfClass();
  if (a3)
  {
    if (isKindOfClass & 1 | ((AXPerformValidationChecks() & 1) == 0))
    {
      LOBYTE(v10) = 0;
    }
    else
    {
      int v11 = AXShouldCrashOnValidationErrors();
      int v19 = [MEMORY[0x1E4F29060] callStackSymbols];
      int v10 = __UIAccessibilityHandleValidationErrorWithDescription(v11, 0, @"Failed to cast object <%@: %p> as class %@ %@", v12, v13, v14, v15, v16, (uint64_t)v8);

      if (!a4 && v10) {
        abort();
      }
    }
    if (a4) {
      *a4 = v10;
    }
  }
  if (isKindOfClass) {
    id v17 = v8;
  }
  else {
LABEL_11:
  }
    id v17 = 0;

  return v17;
}

uint64_t AXPerformValidationChecks()
{
  if (AXPerformValidationChecks_onceToken != -1) {
    dispatch_once(&AXPerformValidationChecks_onceToken, &__block_literal_global_11_0);
  }
  return AXPerformValidationChecks_CachedSetting;
}

id AXRuntimeLogNotifications()
{
  if (AXRuntimeLogNotifications_onceToken != -1) {
    dispatch_once(&AXRuntimeLogNotifications_onceToken, &__block_literal_global_13_0);
  }
  v0 = (void *)AXRuntimeLogNotifications___logObj;
  return v0;
}

id AXLogUIA()
{
  if (AXLogUIA_onceToken != -1) {
    dispatch_once(&AXLogUIA_onceToken, &__block_literal_global_118);
  }
  v0 = (void *)AXLogUIA___logObj;
  return v0;
}

void AXPerformSafeBlockWithErrorHandler(void *a1, void *a2)
{
  uint64_t v3 = a1;
  id v4 = a2;
  v3[2](v3);
}

void sub_18FC71278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t aBlock, uint64_t a11, id (*a12)(uint64_t a1), void *a13, void *a14, uint8_t buf, uint64_t a16, uint8_t a17)
{
  if (a2 == 1)
  {
    id v18 = objc_begin_catch(exception_object);
    aBlock = MEMORY[0x1E4F143A8];
    a11 = 3221225472;
    a12 = __AXPerformSafeBlockWithErrorHandler_block_invoke;
    a13 = &unk_1E56735B0;
    id v19 = v18;
    a14 = v19;
    int v20 = (void (**)(void))_Block_copy(&aBlock);
    if (v17) {
      (*(void (**)(uint64_t, id))(v17 + 16))(v17, v19);
    }
    if (AXShouldLogValidationErrors())
    {
      uint64_t v21 = AXLogValidations();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        uint64_t v22 = v20[2](v20);
        AXPerformSafeBlockWithErrorHandler_cold_2(v22, &a17, v21);
      }
    }
    if (AXShouldReportValidationErrors())
    {
      uint64_t v23 = +[AXValidationManager sharedInstance];
      uint64_t v24 = v20[2](v20);
      [v23 sendExceptionForSafeBlock:v24 overrideProcessName:0];
    }
    if (AXShouldCrashOnValidationErrors())
    {
      uint64_t v25 = AXLogValidations();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_FAULT))
      {
        v26 = v20[2](v20);
        AXPerformSafeBlockWithErrorHandler_cold_1(v26, &buf, v25);
      }
    }
    objc_end_catch();
    JUMPOUT(0x18FC7123CLL);
  }
  _Unwind_Resume(exception_object);
}

void AX_PERFORM_WITH_LOCK(os_unfair_lock_s *a1, void *a2)
{
  uint64_t v3 = a2;
  os_unfair_lock_lock(a1);
  v3[2](v3);

  os_unfair_lock_unlock(a1);
}

uint64_t AXCUProcessIsAXUIServer()
{
  if (AXCUProcessIsAXUIServer_onceToken != -1) {
    dispatch_once(&AXCUProcessIsAXUIServer_onceToken, &__block_literal_global_53);
  }
  return AXCUProcessIsAXUIServer__IsAXUIServer;
}

id AXLogRTT()
{
  if (AXLogRTT_onceToken != -1) {
    dispatch_once(&AXLogRTT_onceToken, &__block_literal_global_352);
  }
  v0 = (void *)AXLogRTT___logObj;
  return v0;
}

void __UIAccessibilitySetAssociatedCopiedObject(void *a1, const void *a2, void *a3)
{
}

void __UIAccessibilitySetAssociatedNonRetainedObject(void *a1, const void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  value = [[NonRetainedObjectContainer alloc] initWithObject:v5];

  objc_setAssociatedObject(v6, a2, value, (void *)1);
}

id AXGuaranteedMutableArray(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int64_t v2 = (void *)[v1 mutableCopy];
    if (v2) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = [v1 allObjects];
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = [v1 array];
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v3 = [v1 allKeys];
LABEL_10:
    id v4 = v3;
    int64_t v2 = (void *)[v3 mutableCopy];

    if (v2) {
      goto LABEL_12;
    }
  }
LABEL_11:
  int64_t v2 = [MEMORY[0x1E4F1CA48] array];
LABEL_12:

  return v2;
}

void __UIAccessibilitySetAssociatedLong(void *a1, const void *a2, void *a3)
{
  id object = a1;
  if (a3)
  {
    a3 = [NSNumber numberWithLong:a3];
  }
  objc_setAssociatedObject(object, a2, a3, (void *)1);
}

id AXRuntimeLogPID()
{
  if (AXRuntimeLogPID_onceToken != -1) {
    dispatch_once(&AXRuntimeLogPID_onceToken, &__block_literal_global_10);
  }
  v0 = (void *)AXRuntimeLogPID___logObj;
  return v0;
}

uint64_t AXProcessIsSpringBoard()
{
  if (AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken, &__block_literal_global_227);
  }
  return AXProcessIsSpringBoard__AXProcessIsSpringBoard;
}

id AXLogAssetLoader()
{
  if (AXLogAssetLoader_onceToken != -1) {
    dispatch_once(&AXLogAssetLoader_onceToken, &__block_literal_global_442);
  }
  v0 = (void *)AXLogAssetLoader___logObj;
  return v0;
}

uint64_t AXProcessIsPosterBoard()
{
  if (AXProcessIsPosterBoard__AXProcessIsPosterBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsPosterBoard__AXProcessIsPosterBoardOnceToken, &__block_literal_global_231);
  }
  return AXProcessIsPosterBoard__AXProcessIsPosterBoard;
}

uint64_t AXProcessIsChronod()
{
  if (AXProcessIsChronod__AXProcessIsChronodOnceToken != -1) {
    dispatch_once(&AXProcessIsChronod__AXProcessIsChronodOnceToken, &__block_literal_global_229);
  }
  return AXProcessIsChronod__AXProcessIsChronod;
}

id AXLogAssetDaemon()
{
  if (AXLogAssetDaemon_onceToken != -1) {
    dispatch_once(&AXLogAssetDaemon_onceToken, &__block_literal_global_445);
  }
  v0 = (void *)AXLogAssetDaemon___logObj;
  return v0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

id getAXSettingsClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)getAXSettingsClass_softClass;
  uint64_t v7 = getAXSettingsClass_softClass;
  if (!getAXSettingsClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAXSettingsClass_block_invoke;
    v3[3] = &unk_1E56725B8;
    v3[4] = &v4;
    __getAXSettingsClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18FC72120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAXSettingsClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __AccessibilityUtilitiesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E56725D8;
    uint64_t v6 = 0;
    AccessibilityUtilitiesLibraryCore_frameworkLibrary = _sl_dlopen();
    int64_t v2 = (void *)v4[0];
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AXSettings");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    int64_t v2 = (void *)__getAXSettingsClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAXSettingsClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AccessibilityUtilitiesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AccessibilityUtilitiesLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_18FC73158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void *__Block_byref_object_copy_(uint64_t a1, uint64_t a2)
{
  uint64_t result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

{
}

void OUTLINED_FUNCTION_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x2Au);
}

uint64_t AXCurrentProcessExistsInLoginSessionSBOnly()
{
  if (AXDeviceIsMultiUser()) {
    return MKBUserSessionIsLoginWindow();
  }
  else {
    return 0;
  }
}

uint64_t AXDeviceIsMultiUser()
{
  v0 = (void *)MKBUserTypeDeviceMode();
  id v1 = [v0 objectForKeyedSubscript:*MEMORY[0x1E4F78100]];
  uint64_t v2 = [v1 isEqualToString:*MEMORY[0x1E4F78108]];

  return v2;
}

__CFString *AXInvertColorsDarkModeDetectionJavascript()
{
  return @"function luminance(color) {  if (color.length == 4 && color[3] == 0) { return 1; } for (var k = 0; k < 3; k++) { var adjusted = 0;  var value = color[k] / 255;  if (value < 0.03928) {        value = value / 12.92;    } else {        value = (value + .055) / 1.055;        value = Math.pow(value, 2.4); } color[k] = value;   } return (color[0] * .2126) + (color[1] * .7152) + (color[2] * .0722); }\nfunction dm() { var supportedSchemes = document.head.querySelector(\"meta[name='supported-color-schemes']\");\nvar supportedSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));\nvar colorSchemes = document.head.querySelector(\"meta[name='color-scheme']\");\nvar colorSchemesDM = (supportedSchemes && supportedSchemes.content && supportedSchemes.content.includes('dark'));\nvar classListDM = document.documentElement.classList.contains('apple-mail-implicit-dark-support');\nvar bgColor = document.body && window.getComputedStyle(document.body).getPropertyValue('background-color');\nbgColor = bgColor.replace(/[^\\d,]/g, '').split(',');\nvar luma = bgColor ? luminance(bgColor) : .99;\nreturn (supportedSchemesDM || colorSchemesDM || classListDM || (luma < .3)) }\ndm();";
}

uint64_t AXProcessIsPreBoard()
{
  if (AXProcessIsPreBoard_onceToken != -1) {
    dispatch_once(&AXProcessIsPreBoard_onceToken, &__block_literal_global_0);
  }
  return AXProcessIsPreBoard_AXProcessIsPreBoard;
}

void __AXProcessIsPreBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.PreBoard"];

  if (v1) {
    AXProcessIsPreBoard_AXProcessIsPreBoard = 1;
  }
}

id AXApplicationGetMainBundleIdentifier()
{
  if (AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken != -1) {
    dispatch_once(&AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken, &__block_literal_global_307);
  }
  v0 = (void *)AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier;
  return v0;
}

uint64_t AXProcessIsPreferences()
{
  if (AXProcessIsPreferences_token != -1) {
    dispatch_once(&AXProcessIsPreferences_token, &__block_literal_global_219);
  }
  return AXProcessIsPreferences__AXIsProcess;
}

void __AXProcessIsPreferences_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.Preferences"];

  if (v1) {
    AXProcessIsPreferences__AXIsProcess = 1;
  }
}

uint64_t AXProcessIsCarPlay()
{
  if (AXProcessIsCarPlay_onceToken != -1) {
    dispatch_once(&AXProcessIsCarPlay_onceToken, &__block_literal_global_221);
  }
  return AXProcessIsCarPlay__AXProcessIsCarPlay;
}

void __AXProcessIsCarPlay_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.CarPlayApp"];

  if (v1) {
    AXProcessIsCarPlay__AXProcessIsCarPlay = 1;
  }
}

uint64_t AXProcessIsMobileMail()
{
  if (AXProcessIsMobileMail__AXProcessIsMobileMailOnceToken != -1) {
    dispatch_once(&AXProcessIsMobileMail__AXProcessIsMobileMailOnceToken, &__block_literal_global_223);
  }
  return AXProcessIsMobileMail__AXProcessIsMobileMail;
}

void __AXProcessIsMobileMail_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.mobilemail"];

  if (v1) {
    AXProcessIsMobileMail__AXProcessIsMobileMail = 1;
  }
}

uint64_t AXProcessIsMomentsUIService()
{
  if (AXProcessIsMomentsUIService__AXProcessIsMobileMailOnceToken != -1) {
    dispatch_once(&AXProcessIsMomentsUIService__AXProcessIsMobileMailOnceToken, &__block_literal_global_225);
  }
  return AXProcessIsMomentsUIService__AXProcessIsMomentsUIService;
}

void __AXProcessIsMomentsUIService_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.MomentsUIService"];

  if (v1) {
    AXProcessIsMomentsUIService__AXProcessIsMomentsUIService = 1;
  }
}

void __AXProcessIsSpringBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.springboard"];

  if (v1) {
    AXProcessIsSpringBoard__AXProcessIsSpringBoard = 1;
  }
}

void __AXProcessIsChronod_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.chronod"];

  if (v1) {
    AXProcessIsChronod__AXProcessIsChronod = 1;
  }
}

void __AXProcessIsPosterBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.PosterBoard"];

  if (v1) {
    AXProcessIsPosterBoard__AXProcessIsPosterBoard = 1;
  }
}

uint64_t AXProcessIsAXSettingsShortcutsPlugin()
{
  if (AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPluginOnceToken != -1) {
    dispatch_once(&AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPluginOnceToken, &__block_literal_global_233);
  }
  return AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPlugin;
}

void __AXProcessIsAXSettingsShortcutsPlugin_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.AccessibilityUtilities.AXSettingsShortcuts"];

  if (v1) {
    AXProcessIsAXSettingsShortcutsPlugin__AXProcessIsAXSettingsShortcutsPlugin = 1;
  }
}

uint64_t AXProcessIsPineBoard()
{
  if (AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_235);
  }
  return AXProcessIsPineBoard__AXProcessIsPineBoard;
}

void __AXProcessIsPineBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.PineBoard"];

  if (v1) {
    AXProcessIsPineBoard__AXProcessIsPineBoard = 1;
  }
}

uint64_t AXProcessIsClarityBoard()
{
  if (AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken, &__block_literal_global_237);
  }
  return AXProcessIsClarityBoard__AXProcessIsClarityBoard;
}

void __AXProcessIsClarityBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.ClarityBoard"];

  if (v1) {
    AXProcessIsClarityBoard__AXProcessIsClarityBoard = 1;
  }
}

uint64_t AXProcessIsSurfBoard()
{
  if (AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_239);
  }
  return AXProcessIsSurfBoard__AXProcessIsSurfBoard;
}

void __AXProcessIsSurfBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.SurfBoard"];

  if (v1) {
    AXProcessIsSurfBoard__AXProcessIsSurfBoard = 1;
  }
}

uint64_t AXProcessIsCheckerBoard()
{
  if (AXProcessIsCheckerBoard__AXProcessIsCheckerBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsCheckerBoard__AXProcessIsCheckerBoardOnceToken, &__block_literal_global_241);
  }
  return AXProcessIsCheckerBoard__AXProcessIsCheckerBoard;
}

void __AXProcessIsCheckerBoard_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.CheckerBoard"];

  if (v1) {
    AXProcessIsCheckerBoard__AXProcessIsCheckerBoard = 1;
  }
}

uint64_t AXProcessIsSystemApplication()
{
  if (AXProcessIsSystemApplication__OnceToken != -1) {
    dispatch_once(&AXProcessIsSystemApplication__OnceToken, &__block_literal_global_243);
  }
  if (AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsSpringBoard__AXProcessIsSpringBoardOnceToken, &__block_literal_global_227);
  }
  if (AXProcessIsSpringBoard__AXProcessIsSpringBoard) {
    return 1;
  }
  if (AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsPineBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_235);
  }
  if (AXProcessIsPineBoard__AXProcessIsPineBoard) {
    return 1;
  }
  if (AXProcessIsCarousel__AXProcessIsCarouselOnceToken != -1) {
    dispatch_once(&AXProcessIsCarousel__AXProcessIsCarouselOnceToken, &__block_literal_global_272);
  }
  if (AXProcessIsCarousel__AXProcessIsCarousel) {
    return 1;
  }
  if (AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsClarityBoard__AXProcessIsClarityBoardOnceToken, &__block_literal_global_237);
  }
  if (AXProcessIsClarityBoard__AXProcessIsClarityBoard) {
    return 1;
  }
  if (AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken != -1) {
    dispatch_once(&AXProcessIsSurfBoard__AXProcessIsPineBoardOnceToken, &__block_literal_global_239);
  }
  if (AXProcessIsSurfBoard__AXProcessIsSurfBoard) {
    return 1;
  }
  int v1 = (void *)AXProcessIsSystemApplication_app;
  return [v1 _accessibilityInterposesAsSystemApplication];
}

uint64_t __AXProcessIsSystemApplication_block_invoke()
{
  AXProcessIsSystemApplication_app = [NSClassFromString(&cfstr_Uiapplication.isa) safeValueForKey:@"sharedApplication"];
  return MEMORY[0x1F41817F8]();
}

uint64_t AXProcessIsCarousel()
{
  if (AXProcessIsCarousel__AXProcessIsCarouselOnceToken != -1) {
    dispatch_once(&AXProcessIsCarousel__AXProcessIsCarouselOnceToken, &__block_literal_global_272);
  }
  return AXProcessIsCarousel__AXProcessIsCarousel;
}

uint64_t AXProcessIsSiri()
{
  if (AXProcessIsSiri__AXProcessIsSiriOnceToken != -1) {
    dispatch_once(&AXProcessIsSiri__AXProcessIsSiriOnceToken, &__block_literal_global_251);
  }
  return AXProcessIsSiri__AXProcessIsSiri;
}

void __AXProcessIsSiri_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.siri"];

  if (v1) {
    AXProcessIsSiri__AXProcessIsSiri = 1;
  }
}

uint64_t AXProcessIsSpotlight()
{
  if (AXProcessIsSpotlight__AXProcessIsSpotlightOnceToken != -1) {
    dispatch_once(&AXProcessIsSpotlight__AXProcessIsSpotlightOnceToken, &__block_literal_global_253);
  }
  return AXProcessIsSpotlight__AXProcessIsSpotlight;
}

void __AXProcessIsSpotlight_block_invoke()
{
  v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.Spotlight"];

  if (v1) {
    AXProcessIsSpotlight__AXProcessIsSpotlight = 1;
  }
}

uint64_t AXProcessIsInCallService()
{
  if (AXProcessIsInCallService_onceToken != -1) {
    dispatch_once(&AXProcessIsInCallService_onceToken, &__block_literal_global_258);
  }
  return AXProcessIsInCallService_AXIsInCallService;
}

void __AXProcessIsInCallService_block_invoke()
{
  AXApplicationGetMainBundleIdentifier();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  AXProcessIsInCallService_AXIsInCallService = [v0 isEqualToString:@"com.apple.InCallService"];
}

uint64_t AXProcessIsRTTNotificationContentExtension()
{
  if (AXProcessIsRTTNotificationContentExtension_onceToken != -1) {
    dispatch_once(&AXProcessIsRTTNotificationContentExtension_onceToken, &__block_literal_global_260);
  }
  return AXProcessIsRTTNotificationContentExtension_AXIsRTTNotificationContentExtension;
}

void __AXProcessIsRTTNotificationContentExtension_block_invoke()
{
  AXApplicationGetMainBundleIdentifier();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  AXProcessIsRTTNotificationContentExtension_AXIsRTTNotificationContentExtension = [v0 isEqualToString:@"com.apple.accessibility.RTTUI.RTTNotifications"];
}

uint64_t AXProcessIsSafari()
{
  if (AXProcessIsSafari_onceToken != -1) {
    dispatch_once(&AXProcessIsSafari_onceToken, &__block_literal_global_262);
  }
  return AXProcessIsSafari_AXIsSafari;
}

void __AXProcessIsSafari_block_invoke()
{
  AXApplicationGetMainBundleIdentifier();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  AXProcessIsSafari_AXIsSafari = [v0 isEqualToString:@"com.apple.mobilesafari"];
}

uint64_t AXProcessIsWidgetRenderer()
{
  if (AXProcessIsWidgetRenderer_onceToken != -1) {
    dispatch_once(&AXProcessIsWidgetRenderer_onceToken, &__block_literal_global_264);
  }
  return AXProcessIsWidgetRenderer__AXProcessIsWidgetRenderer;
}

void __AXProcessIsWidgetRenderer_block_invoke()
{
  id v0 = AXProcessGetName();
  int v1 = [v0 isEqualToString:@"WidgetRenderer_Default"];

  if (v1) {
    AXProcessIsWidgetRenderer__AXProcessIsWidgetRenderer = 1;
  }
}

id AXProcessGetName()
{
  if (AXProcessGetName__AXProcessNameOnceToken != -1) {
    dispatch_once(&AXProcessGetName__AXProcessNameOnceToken, &__block_literal_global_304);
  }
  id v0 = (void *)AXProcessGetName__AXProcessName;
  return v0;
}

uint64_t AXProcessIsInputUI()
{
  if (AXProcessIsInputUI_onceToken != -1) {
    dispatch_once(&AXProcessIsInputUI_onceToken, &__block_literal_global_266);
  }
  return AXProcessIsInputUI_AXProcessIsInputUI;
}

void __AXProcessIsInputUI_block_invoke()
{
  AXProcessGetName();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  AXProcessIsInputUI_AXProcessIsInputUI = [v0 isEqualToString:@"InputUI"];
}

uint64_t AXProcessIsShortcuts()
{
  if (AXProcessIsShortcuts_onceToken != -1) {
    dispatch_once(&AXProcessIsShortcuts_onceToken, &__block_literal_global_268);
  }
  return AXProcessIsShortcuts_AXProcessIsShortcuts;
}

void __AXProcessIsShortcuts_block_invoke()
{
  AXApplicationGetMainBundleIdentifier();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  AXProcessIsShortcuts_AXProcessIsShortcuts = [v0 isEqualToString:@"com.apple.shortcuts"];
}

uint64_t AXProcessIsStickerPickerService()
{
  if (AXProcessIsStickerPickerService_onceToken != -1) {
    dispatch_once(&AXProcessIsStickerPickerService_onceToken, &__block_literal_global_270);
  }
  return AXProcessIsStickerPickerService_AXProcessIsStickerPickerService;
}

void __AXProcessIsStickerPickerService_block_invoke()
{
  AXApplicationGetMainBundleIdentifier();
  id v0 = (id)objc_claimAutoreleasedReturnValue();
  AXProcessIsStickerPickerService_AXProcessIsStickerPickerService = [v0 isEqualToString:@"com.apple.StickerKit.StickerPickerService"];
}

void __AXProcessIsCarousel_block_invoke()
{
  id v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.Carousel"];

  if (v1) {
    AXProcessIsCarousel__AXProcessIsCarousel = 1;
  }
}

uint64_t AXProcessIsClockFace()
{
  if (AXProcessIsClockFace__AXProcessIsClockFaceOnceToken != -1) {
    dispatch_once(&AXProcessIsClockFace__AXProcessIsClockFaceOnceToken, &__block_literal_global_274);
  }
  return AXProcessIsClockFace__AXProcessIsClockFace;
}

void __AXProcessIsClockFace_block_invoke()
{
  id v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.clockface"];

  if (v1) {
    AXProcessIsClockFace__AXProcessIsClockFace = 1;
  }
}

uint64_t AXProcessIsBackboard()
{
  if (AXProcessIsBackboard_Once != -1) {
    dispatch_once(&AXProcessIsBackboard_Once, &__block_literal_global_276);
  }
  return AXProcessIsBackboard__AXProcessIsBackboard;
}

void __AXProcessIsBackboard_block_invoke()
{
  id v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.backboardd"];

  if (v1) {
    AXProcessIsBackboard__AXProcessIsBackboard = 1;
  }
}

uint64_t AXProcessIsAccessibilityAppIntents()
{
  if (AXProcessIsAccessibilityAppIntents_onceToken != -1) {
    dispatch_once(&AXProcessIsAccessibilityAppIntents_onceToken, &__block_literal_global_278);
  }
  return AXProcessIsAccessibilityAppIntents__IsAccessibilityAppIntents;
}

void __AXProcessIsAccessibilityAppIntents_block_invoke()
{
  id v0 = AXProcessGetName();
  int v1 = [v0 isEqualToString:@"AccessibilityAppIntents"];

  if (v1) {
    AXProcessIsAccessibilityAppIntents__IsAccessibilityAppIntents = 1;
  }
}

uint64_t AXProcessIsCommandAndControl()
{
  if (AXProcessIsCommandAndControl_onceToken != -1) {
    dispatch_once(&AXProcessIsCommandAndControl_onceToken, &__block_literal_global_280);
  }
  return AXProcessIsCommandAndControl__IsCommandAndControl;
}

void __AXProcessIsCommandAndControl_block_invoke()
{
  id v0 = AXProcessGetName();
  int v1 = [v0 isEqualToString:@"CommandAndControl"];

  if (v1) {
    AXProcessIsCommandAndControl__IsCommandAndControl = 1;
  }
}

uint64_t AXProcessIsFullKeyboardAccess()
{
  if (AXProcessIsFullKeyboardAccess_onceToken != -1) {
    dispatch_once(&AXProcessIsFullKeyboardAccess_onceToken, &__block_literal_global_282);
  }
  return AXProcessIsFullKeyboardAccess__IsFullKeyboardAccess;
}

void __AXProcessIsFullKeyboardAccess_block_invoke()
{
  id v0 = AXProcessGetName();
  int v1 = [v0 isEqualToString:@"com.apple.FullKeyboardAccess"];

  if (v1) {
    AXProcessIsFullKeyboardAccess__IsFullKeyboardAccess = 1;
  }
}

uint64_t AXProcessIsAppleTVApp()
{
  if (AXProcessIsAppleTVApp_onceToken != -1) {
    dispatch_once(&AXProcessIsAppleTVApp_onceToken, &__block_literal_global_284);
  }
  return AXProcessIsAppleTVApp__IsAppleTVApp;
}

void __AXProcessIsAppleTVApp_block_invoke()
{
  id v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.tv"];

  if (v1) {
    AXProcessIsAppleTVApp__IsAppleTVApp = 1;
  }
}

uint64_t AXProcessIsPhotos()
{
  if (AXProcessIsPhotos_onceToken != -1) {
    dispatch_once(&AXProcessIsPhotos_onceToken, &__block_literal_global_286);
  }
  return AXProcessIsPhotos__IsPhotos;
}

void __AXProcessIsPhotos_block_invoke()
{
  id v0 = AXApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.mobileslideshow"];

  if (v1) {
    AXProcessIsPhotos__IsPhotos = 1;
  }
}

BOOL AXApplicationIsForeground()
{
  id v0 = [(objc_class *)AXSafeClassFromString(&cfstr_Uiapplication.isa) safeValueForKey:@"sharedApplication"];
  int v1 = [v0 safeValueForKey:@"applicationState"];
  BOOL v2 = [v1 integerValue] == 0;

  return v2;
}

uint64_t AXApplicationIsViewService()
{
  if (AXApplicationIsViewService_onceToken != -1) {
    dispatch_once(&AXApplicationIsViewService_onceToken, &__block_literal_global_291);
  }
  return AXApplicationIsViewService_IsViewService;
}

void __AXApplicationIsViewService_block_invoke()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v0 = [MEMORY[0x1E4F28B50] mainBundle];
  int v1 = [v0 infoDictionary];
  BOOL v2 = [v1 objectForKey:@"SBMachServices"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v3 = v2;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v10;
      while (2)
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = *(void **)(*((void *)&v9 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0
            && objc_msgSend(v8, "containsString:", @"com.apple.uikit.viewservice", (void)v9))
          {
            AXApplicationIsViewService_IsViewService = 1;
            goto LABEL_13;
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }
LABEL_13:
  }
}

void __AXProcessGetName_block_invoke()
{
  id v3 = [MEMORY[0x1E4F28F80] processInfo];
  id v0 = [v3 processName];
  uint64_t v1 = [v0 copy];
  BOOL v2 = (void *)AXProcessGetName__AXProcessName;
  AXProcessGetName__AXProcessName = v1;
}

void __AXApplicationGetMainBundleIdentifier_block_invoke()
{
  id v3 = [MEMORY[0x1E4F28B50] mainBundle];
  id v0 = [v3 bundleIdentifier];
  uint64_t v1 = [v0 copy];
  BOOL v2 = (void *)AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier;
  AXApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier = v1;
}

uint64_t AXProcessRequestMobileUserPrivileges()
{
  uint64_t result = (uint64_t)getpwnam("mobile");
  if (result)
  {
    uint64_t v1 = result;
    if (getuid() == *(_DWORD *)(result + 16)) {
      return 1;
    }
    else {
      return !setgid(*(_DWORD *)(v1 + 20)) && setuid(*(_DWORD *)(v1 + 16)) == 0;
    }
  }
  return result;
}

id AXProcessGetCurrentUserDescription()
{
  uid_t v0 = getuid();
  uint64_t v1 = getpwuid(v0);
  if (v1) {
    objc_msgSend(NSString, "stringWithFormat:", @"user named '%s'", v1->pw_name);
  }
  else {
  BOOL v2 = objc_msgSend(NSString, "stringWithFormat:", @"user with identifier '%lu'", v0);
  }
  return v2;
}

uint64_t AXSafeEqual(unint64_t cf1, unint64_t a2)
{
  if (!(cf1 | a2)) {
    return 1;
  }
  uint64_t result = 0;
  if (cf1)
  {
    if (a2) {
      return CFEqual((CFTypeRef)cf1, (CFTypeRef)a2);
    }
  }
  return result;
}

uint64_t AXSystemGetVersion()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion;
}

void __AXSystemGetVersion_block_invoke()
{
  uid_t v0 = (void *)MGCopyAnswer();
  if (v0)
  {
    uint64_t v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    if (v2 == CFStringGetTypeID())
    {
      id v3 = v1;
      if ([v3 hasPrefix:@"5.0"])
      {
        uint64_t v4 = 2;
      }
      else if ([v3 hasPrefix:@"5.1"])
      {
        uint64_t v4 = 1;
      }
      else if ([v3 hasPrefix:@"6.0"])
      {
        uint64_t v4 = 3;
      }
      else if ([v3 hasPrefix:@"6.1"])
      {
        uint64_t v4 = 4;
      }
      else if ([v3 hasPrefix:@"7.0"])
      {
        uint64_t v4 = 5;
      }
      else
      {
        uint64_t v4 = 0;
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
    CFRelease(v1);
  }
  else
  {
    uint64_t v4 = 0;
  }
  AXSystemGetVersion__AXSystemVersion = v4;
}

BOOL AXIsLanguageRTL()
{
  uid_t v0 = (void *)MEMORY[0x1E4F1CA20];
  uint64_t v1 = [MEMORY[0x1E4F1CA20] preferredLanguages];
  CFTypeID v2 = [v1 objectAtIndex:0];
  uint64_t v3 = [v0 characterDirectionForLanguage:v2];

  return v3 == 2;
}

uint64_t AXIsAnyPreferredLanguageRTL()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  char v7 = 0;
  uid_t v0 = [MEMORY[0x1E4F1CA20] preferredLanguages];
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = __AXIsAnyPreferredLanguageRTL_block_invoke;
  v3[3] = &unk_1E5672938;
  v3[4] = &v4;
  [v0 enumerateObjectsUsingBlock:v3];

  uint64_t v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18FC75758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __AXIsAnyPreferredLanguageRTL_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = [MEMORY[0x1E4F1CA20] characterDirectionForLanguage:a2];
  if (result == 2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

BOOL AXSystemVersionEqualTo(uint64_t a1)
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion == a1;
}

BOOL AXSystemVersionEqualToOrGreaterThan(unint64_t a1)
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion >= a1;
}

BOOL AXSystemVersionEqualToOrLessThan(unint64_t a1)
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion <= a1;
}

BOOL AXSystemIsSundance()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion == 3;
}

BOOL AXSystemIsBrighton()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion == 4;
}

BOOL AXSystemIsInnsbruck()
{
  if (AXSystemGetVersion__AXSystemVersionOnceToken != -1) {
    dispatch_once(&AXSystemGetVersion__AXSystemVersionOnceToken, &__block_literal_global_315);
  }
  return AXSystemGetVersion__AXSystemVersion == 5;
}

uint64_t AXIsInternalInstall()
{
  if (AXIsInternalInstall__AXIsInternalInstallOnceToken != -1) {
    dispatch_once(&AXIsInternalInstall__AXIsInternalInstallOnceToken, &__block_literal_global_337);
  }
  return AXIsInternalInstall__AXIsInternalInstall;
}

void __AXIsInternalInstall_block_invoke()
{
  CFBooleanRef v0 = (const __CFBoolean *)MGCopyAnswer();
  if (v0)
  {
    CFBooleanRef v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    if (v2 == CFBooleanGetTypeID()) {
      AXIsInternalInstall__AXIsInternalInstall = CFBooleanGetValue(v1) != 0;
    }
    CFRelease(v1);
  }
}

uint64_t AXCurrentRootLooksLikeBNI()
{
  if (AXCurrentRootLooksLikeBNI_onceToken != -1) {
    dispatch_once(&AXCurrentRootLooksLikeBNI_onceToken, &__block_literal_global_342);
  }
  return AXCurrentRootLooksLikeBNI_looksLikeBNI;
}

uint64_t __AXCurrentRootLooksLikeBNI_block_invoke()
{
  char v7 = [@"/Library/Caches/com.apple.xbs/Sources/AccessibilityLibraries" lastPathComponent];
  if ([v7 hasPrefix:@"AccessibilityFrameworks-"])
  {
    uint64_t v0 = [v7 rangeOfString:@"AccessibilityFrameworks-"];
    CFTypeID v2 = [v7 substringFromIndex:v0 + v1];
    uint64_t v3 = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"1234567890.-"];
    uint64_t v4 = [v3 invertedSet];
    uint64_t v5 = [v2 rangeOfCharacterFromSet:v4];

    if (v5 == 0x7FFFFFFFFFFFFFFFLL) {
      AXCurrentRootLooksLikeBNI_looksLikeBNI = 1;
    }
  }
  return MEMORY[0x1F41817F8]();
}

id AXCurrentRootDescription()
{
  if (AXCurrentRootDescription_onceToken != -1) {
    dispatch_once(&AXCurrentRootDescription_onceToken, &__block_literal_global_354);
  }
  uint64_t v0 = (void *)AXCurrentRootDescription_rootDescription;
  return v0;
}

uint64_t __AXCurrentRootDescription_block_invoke()
{
  id v10 = [@"/Library/Caches/com.apple.xbs/Sources/AccessibilityLibraries" lastPathComponent];
  objc_storeStrong((id *)&AXCurrentRootDescription_rootDescription, v10);
  if ([v10 isEqualToString:@"Accessibility"])
  {
    uint64_t v0 = (void *)AXCurrentRootDescription_rootDescription;
    AXCurrentRootDescription_rootDescription = @"Release Root";
  }
  if (AXCurrentRootLooksLikeBNI_onceToken != -1) {
    dispatch_once(&AXCurrentRootLooksLikeBNI_onceToken, &__block_literal_global_342);
  }
  if (AXCurrentRootLooksLikeBNI_looksLikeBNI == 1)
  {
    id v1 = v10;
    CFTypeID v2 = (void *)AXCurrentRootDescription_rootDescription;
    AXCurrentRootDescription_rootDescription = (uint64_t)v1;
LABEL_13:

    goto LABEL_14;
  }
  if ([v10 hasPrefix:@"AccessibilityFrameworks-SHA__"]
    && [v10 hasSuffix:@"_Frameworks_Accessibility"])
  {
    uint64_t v3 = [v10 rangeOfString:@"_Frameworks_Accessibility"];
    uint64_t v4 = [@"AccessibilityFrameworks-SHA__" length];
    uint64_t v5 = [@"AccessibilityFrameworks-SHA__" length];
    if ((unint64_t)(v3 - v5) >= 8) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = v3 - v5;
    }
    CFTypeID v2 = objc_msgSend(v10, "substringWithRange:", v4, v6);
    uint64_t v7 = [NSString stringWithFormat:@"ATP Root: %@", v2];
    id v8 = (void *)AXCurrentRootDescription_rootDescription;
    AXCurrentRootDescription_rootDescription = v7;

    goto LABEL_13;
  }
LABEL_14:
  return MEMORY[0x1F41817F8]();
}

uint64_t AXSpawnProcess(void *a1, void *a2, void *a3)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  [v6 count];
  MEMORY[0x1F4188790]();
  id v10 = (char **)((char *)&v33 - v9);
  if (v8 >= 0x200) {
    size_t v11 = 512;
  }
  else {
    size_t v11 = v8;
  }
  bzero((char *)&v33 - v9, v11);
  id v34 = v5;
  *id v10 = (char *)[v34 UTF8String];
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v12 = v6;
  uint64_t v13 = [v12 countByEnumeratingWithState:&v39 objects:v44 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v40;
    uint64_t v16 = 1;
    do
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        if (*(void *)v40 != v15) {
          objc_enumerationMutation(v12);
        }
        (&v10[v16])[i] = (char *)[*(id *)(*((void *)&v39 + 1) + 8 * i) UTF8String];
      }
      uint64_t v14 = [v12 countByEnumeratingWithState:&v39 objects:v44 count:16];
      v16 += i;
    }
    while (v14);
  }
  else
  {
    uint64_t v16 = 1;
  }

  v10[v16] = 0;
  [v7 count];
  MEMORY[0x1F4188790]();
  int v20 = (char *const *)((char *)&v33 - v19);
  if (v18 >= 0x200) {
    size_t v21 = 512;
  }
  else {
    size_t v21 = v18;
  }
  bzero((char *)&v33 - v19, v21);
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v22 = v7;
  uint64_t v23 = [v22 countByEnumeratingWithState:&v35 objects:v43 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v33 = (uint64_t)&v33;
    uint64_t v25 = 0;
    uint64_t v26 = *(void *)v36;
    do
    {
      for (uint64_t j = 0; j != v24; ++j)
      {
        if (*(void *)v36 != v26) {
          objc_enumerationMutation(v22);
        }
        id v28 = *(id *)(*((void *)&v35 + 1) + 8 * j);
        (&v20[v25])[j] = (char *const)objc_msgSend(v28, "UTF8String", v33);
      }
      uint64_t v24 = [v22 countByEnumeratingWithState:&v35 objects:v43 count:16];
      v25 += j;
    }
    while (v24);
  }
  else
  {
    uint64_t v25 = 0;
  }

  v20[v25] = 0;
  int v29 = *v10;
  if ([v22 count]) {
    id v30 = v20;
  }
  else {
    id v30 = 0;
  }
  uint64_t v31 = posix_spawn(0, v29, 0, 0, v10, v30);

  return v31;
}

uint64_t AXPidForLaunchLabel(void *a1)
{
  id v1 = a1;
  CFTypeID v2 = launch_data_alloc(LAUNCH_DATA_DICTIONARY);
  id v3 = v1;
  uint64_t v4 = [v3 UTF8String];

  id v5 = (_launch_data *)MEMORY[0x192FC2B20](v4);
  launch_data_dict_insert(v2, v5, "GetJob");
  id v6 = launch_msg(v2);
  MEMORY[0x192FC2AF0](v2);
  if (!v6) {
    return 0xFFFFFFFFLL;
  }
  if (launch_data_get_type(v6) == LAUNCH_DATA_DICTIONARY
    && (id v7 = launch_data_dict_lookup(v6, "PID")) != 0
    && (unint64_t v8 = v7, launch_data_get_type(v7) == LAUNCH_DATA_INTEGER))
  {
    uint64_t v9 = MEMORY[0x192FC2B00](v8);
  }
  else
  {
    uint64_t v9 = 0xFFFFFFFFLL;
  }
  MEMORY[0x192FC2AF0](v6);
  return v9;
}

BOOL AXIsBuddyCompleted()
{
  return CFPreferencesGetAppBooleanValue(@"SetupDone", @"com.apple.purplebuddy", 0)
      || CFPreferencesGetAppBooleanValue(@"ForceNoBuddy", @"com.apple.purplebuddy", 0) != 0;
}

void AXLoadAccessibilityDebuggerIfNeeded()
{
  if (AXIsInternalInstall__AXIsInternalInstallOnceToken != -1) {
    dispatch_once(&AXIsInternalInstall__AXIsInternalInstallOnceToken, &__block_literal_global_337);
  }
  if (AXIsInternalInstall__AXIsInternalInstall)
  {
    if (AXProcessIsBackboard_Once != -1) {
      dispatch_once(&AXProcessIsBackboard_Once, &__block_literal_global_276);
    }
    if ((AXProcessIsBackboard__AXProcessIsBackboard & 1) == 0)
    {
      uint64_t v0 = [MEMORY[0x1E4F28CB8] defaultManager];
      int v1 = [v0 fileExistsAtPath:@"/System/Library/PrivateFrameworks/AccessibilityDebuggerTarget.framework"];

      if (v1)
      {
        CFTypeID v2 = [MEMORY[0x1E4F28B50] bundleWithPath:@"/System/Library/PrivateFrameworks/AccessibilityDebuggerTarget.framework"];
        id v3 = v2;
        if (v2 && ([v2 isLoaded] & 1) == 0)
        {
          id v7 = 0;
          char v4 = [v3 loadAndReturnError:&v7];
          id v5 = v7;
          if (v4)
          {
            id v6 = [v3 principalClass];
            if (objc_opt_respondsToSelector()) {
              [v6 performSelector:sel_target];
            }
            else {
              _AXLogWithFacility(0, 0, 1, 0, 0, 0, 0, 0.0, 0, 1, @"Principal class :%@. does not respond to expected 'target' class method");
            }
          }
          else
          {
            _AXLogWithFacility(0, 0, 1, 0, 0, 0, 0, 0.0, 0, 1, @"Error: Unable to load AccessibilityDebuggerTarget framework: %@ ");
          }
        }
      }
    }
  }
}

uint64_t AXIsLookingGlassAvailable()
{
  if (AXIsInternalInstall__AXIsInternalInstallOnceToken != -1) {
    dispatch_once(&AXIsInternalInstall__AXIsInternalInstallOnceToken, &__block_literal_global_337);
  }
  return AXIsInternalInstall__AXIsInternalInstall;
}

unint64_t AXMachTimeToNanoseconds(unint64_t a1)
{
  if (AXMachTimeToNanoseconds_onceToken != -1) {
    dispatch_once(&AXMachTimeToNanoseconds_onceToken, &__block_literal_global_390);
  }
  return (unint64_t)(*(double *)&AXMachTimeToNanoseconds_scale * (double)a1);
}

double __AXMachTimeToNanoseconds_block_invoke()
{
  mach_timebase_info info = 0;
  if (!mach_timebase_info(&info))
  {
    LODWORD(result) = info.numer;
    LODWORD(v1) = info.denom;
    double result = (double)*(unint64_t *)&result / (double)v1;
    AXMachTimeToNanoseconds_scale = *(void *)&result;
  }
  return result;
}

id AXInstalledAppIDs(int a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  CFTypeID v2 = objc_opt_new();
  id v3 = AXInstalledApps(a1);
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = [*(id *)(*((void *)&v10 + 1) + 8 * i) bundleIdentifier];
        [v2 addObject:v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id AXInstalledApps(int a1)
{
  unint64_t v1 = [MEMORY[0x1E4F223D0] enumeratorWithOptions:0];
  uint64_t v19 = objc_opt_new();
  uint64_t v2 = [v1 nextObject];
  if (v2)
  {
    id v3 = (void *)v2;
    do
    {
      uint64_t v4 = [v3 URL];
      uint64_t v5 = [v4 pathComponents];

      uint64_t v6 = [v3 infoDictionary];
      id v7 = [v6 objectForKey:@"SBIconVisibilityDefaultVisible" ofClass:objc_opt_class()];

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0
        && ([v5 containsObject:@"AppleInternal"] & 1) == 0
        && ([v5 containsObject:@"CoreServices"] & 1) == 0
        && ([v3 isLaunchProhibited] & 1) == 0)
      {
        unint64_t v8 = [v3 appTags];
        if (![v8 containsObject:@"hidden"])
        {
          uint64_t v9 = [v3 appTags];
          if (([v9 containsObject:@"Hidden"] & 1) == 0
            && (!v7 || [v7 BOOLValue]))
          {
            uint64_t v10 = [v3 bundleIdentifier];
            if (v10)
            {
              uint64_t v16 = (void *)v10;
              uint64_t v11 = [v3 bundleIdentifier];
              uint64_t v17 = (void *)v11;
              if (AXShowInstalledApp_onceToken == -1)
              {
                long long v12 = (void *)v11;
              }
              else
              {
                dispatch_once(&AXShowInstalledApp_onceToken, &__block_literal_global_438);
                long long v12 = v17;
              }
              char v15 = [(id)AXShowInstalledApp_AXHiddenApps containsObject:v12];

              if ((v15 & 1) == 0) {
                [v19 addObject:v3];
              }
              goto LABEL_18;
            }
          }
        }
      }
LABEL_18:

      uint64_t v13 = [v1 nextObject];

      id v3 = (void *)v13;
    }
    while (v13);
  }
  if (a1) {
    [v19 sortUsingComparator:&__block_literal_global_417];
  }

  return v19;
}

id AXAppNameForBundleId(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"com.apple.springboard"])
  {
    uint64_t v2 = @"HOME_SCREEN";
LABEL_5:
    id v3 = soft_AXSettingsLocalizedStringForKey(v2);
    goto LABEL_11;
  }
  if ([v1 isEqualToString:@"com.apple.UIKit.activity.AirDrop"])
  {
    uint64_t v2 = @"AIRDROP";
    goto LABEL_5;
  }
  id v8 = 0;
  uint64_t v4 = (void *)[objc_alloc(MEMORY[0x1E4F223D0]) initWithBundleIdentifier:v1 allowPlaceholder:0 error:&v8];
  id v5 = v8;
  if (v5)
  {
    uint64_t v6 = AXLogSettings();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      AXAppNameForBundleId_cold_1(v5);
    }
  }
  id v3 = [v4 localizedName];

LABEL_11:
  return v3;
}

id soft_AXSettingsLocalizedStringForKey(void *a1)
{
  id v1 = a1;
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  uint64_t v2 = (void (*)(id))getAXSettingsLocalizedStringForKeySymbolLoc_ptr;
  uint64_t v11 = getAXSettingsLocalizedStringForKeySymbolLoc_ptr;
  if (!getAXSettingsLocalizedStringForKeySymbolLoc_ptr)
  {
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 3221225472;
    v7[2] = __getAXSettingsLocalizedStringForKeySymbolLoc_block_invoke;
    v7[3] = &unk_1E56725B8;
    v7[4] = &v8;
    __getAXSettingsLocalizedStringForKeySymbolLoc_block_invoke((uint64_t)v7);
    uint64_t v2 = (void (*)(id))v9[3];
  }
  _Block_object_dispose(&v8, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    uint64_t v6 = v5;
    _Block_object_dispose(&v8, 8);
    _Unwind_Resume(v6);
  }
  id v3 = v2(v1);

  return v3;
}

uint64_t AXIsHiddenAppWithBundleId(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:@"com.apple.springboard"] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.UIKit.activity.AirDrop"] & 1) != 0)
  {
    uint64_t v2 = 0;
  }
  else
  {
    id v7 = 0;
    id v3 = (void *)[objc_alloc(MEMORY[0x1E4F223D0]) initWithBundleIdentifier:v1 allowPlaceholder:0 error:&v7];
    id v4 = v7;
    if (v4)
    {
      id v5 = AXLogSettings();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        AXIsHiddenAppWithBundleId_cold_1(v4);
      }
    }
    uint64_t v2 = [v3 appProtectionHidden];
  }
  return v2;
}

id AXWatchAppNameForBundleId(void *a1)
{
  id v1 = a1;
  uint64_t v2 = AXAppNameForBundleId(v1);
  if (!v2)
  {
    if (getCSLPRFApplicationLibraryClass())
    {
      id v3 = [getCSLPRFApplicationLibraryClass() sharedLibraryForLocation:0];
      id v4 = [v3 applicationWithBundleIdentifier:v1];

      uint64_t v2 = [v4 localizedName];
    }
    else
    {
      uint64_t v2 = 0;
    }
  }

  return v2;
}

id getCSLPRFApplicationLibraryClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCSLPRFApplicationLibraryClass_softClass;
  uint64_t v7 = getCSLPRFApplicationLibraryClass_softClass;
  if (!getCSLPRFApplicationLibraryClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCSLPRFApplicationLibraryClass_block_invoke;
    v3[3] = &unk_1E56725B8;
    v3[4] = &v4;
    __getCSLPRFApplicationLibraryClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18FC76C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __AXInstalledApps_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = [a2 localizedName];
  uint64_t v6 = [v4 localizedName];

  uint64_t v7 = [v5 caseInsensitiveCompare:v6];
  return v7;
}

void AXRGBToHSB(long double *a1, double *a2, double *a3, double a4, double a5, double a6)
{
  if (a4 < a5 || a4 < a6)
  {
    if (a5 >= a4) {
      double v8 = a4;
    }
    else {
      double v8 = a5;
    }
    if (a4 >= a6) {
      double v9 = a6;
    }
    else {
      double v9 = a4;
    }
    BOOL v10 = a5 < a4 || a5 < a6;
    if (v10) {
      double v11 = a6;
    }
    else {
      double v11 = a5;
    }
    if (v10) {
      double v9 = v8;
    }
  }
  else
  {
    if (a5 >= a6) {
      double v9 = a6;
    }
    else {
      double v9 = a5;
    }
    double v11 = a4;
  }
  double v12 = 0.0;
  if (v11 <= 0.0)
  {
    double v14 = 0.0;
  }
  else
  {
    double v13 = v11 - v9;
    double v14 = (v11 - v9) / v11;
    if (v14 != 0.0)
    {
      double v15 = (v11 - a5) / v13;
      double v16 = (v11 - a6) / v13;
      if (v11 == a4)
      {
        if (v9 == a5) {
          double v12 = v16 + 5.0;
        }
        else {
          double v12 = 1.0 - v15;
        }
      }
      else
      {
        BOOL v17 = v11 == a5;
        double v18 = (v11 - a4) / v13;
        if (v17)
        {
          if (v9 == a6) {
            double v12 = v18 + 1.0;
          }
          else {
            double v12 = 3.0 - v16;
          }
        }
        else if (v9 == a4)
        {
          double v12 = v15 + 3.0;
        }
        else
        {
          double v12 = 5.0 - v18;
        }
      }
    }
  }
  *a3 = v11;
  *a1 = fmod(v12 / 6.0, 1.0);
  *a2 = v14;
}

uint64_t _AXTriggerStackshot()
{
  uint64_t v0 = (uint64_t (*)(__CFString *, uint64_t))_AXTriggerStackshot___gWriteStackshotReportFunction;
  if (_AXTriggerStackshot___gWriteStackshotReportFunction) {
    goto LABEL_5;
  }
  uint64_t result = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport", 1);
  if (result)
  {
    uint64_t v2 = (void *)result;
    _AXTriggerStackshot___gWriteStackshotReportFunction = dlsym((void *)result, "WriteStackshotReport");
    uint64_t result = dlclose(v2);
  }
  uint64_t v0 = (uint64_t (*)(__CFString *, uint64_t))_AXTriggerStackshot___gWriteStackshotReportFunction;
  if (_AXTriggerStackshot___gWriteStackshotReportFunction)
  {
LABEL_5:
    return v0(@"Accessibility triggered", 3131746989);
  }
  return result;
}

uint64_t AXProcessIsSetup()
{
  if (AXProcessIsSetup_onceToken != -1) {
    dispatch_once(&AXProcessIsSetup_onceToken, &__block_literal_global_424);
  }
  return AXProcessIsSetup_AXIsSetupProcess;
}

void __AXProcessIsSetup_block_invoke()
{
  AXApplicationGetMainBundleIdentifier();
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v0 = +[AXUtilitiesCommonStringRuntimeOverrides setupProcessName];
  AXProcessIsSetup_AXIsSetupProcess = [v1 isEqualToString:v0];
}

void *__getAXSettingsLocalizedStringForKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!VoiceOverServicesLibraryCore_frameworkLibrary)
  {
    v5[1] = MEMORY[0x1E4F143A8];
    v5[2] = 3221225472;
    v5[3] = __VoiceOverServicesLibraryCore_block_invoke;
    v5[4] = &__block_descriptor_40_e5_v8__0l;
    v5[5] = v5;
    long long v6 = xmmword_1E5672978;
    uint64_t v7 = 0;
    VoiceOverServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    id v3 = (void *)v5[0];
    uint64_t v2 = (void *)VoiceOverServicesLibraryCore_frameworkLibrary;
    if (VoiceOverServicesLibraryCore_frameworkLibrary)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      id v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  uint64_t v2 = (void *)VoiceOverServicesLibraryCore_frameworkLibrary;
LABEL_5:
  uint64_t result = dlsym(v2, "AXSettingsLocalizedStringForKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAXSettingsLocalizedStringForKeySymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __VoiceOverServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  VoiceOverServicesLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCSLPRFApplicationLibraryClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!CarouselPreferenceServicesLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __CarouselPreferenceServicesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E5672990;
    uint64_t v6 = 0;
    CarouselPreferenceServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!CarouselPreferenceServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CSLPRFApplicationLibrary");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getCSLPRFApplicationLibraryClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getCSLPRFApplicationLibraryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CarouselPreferenceServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CarouselPreferenceServicesLibraryCore_frameworkLibrary = result;
  return result;
}

void __AXShowInstalledApp_block_invoke()
{
  v4[1] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CAD0];
  v4[0] = @"com.apple.PosterBoard";
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:1];
  uint64_t v2 = [v0 setWithArray:v1];
  id v3 = (void *)AXShowInstalledApp_AXHiddenApps;
  AXShowInstalledApp_AXHiddenApps = v2;
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_18FC779F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

CGColorRef AXSAssistiveTouchCursorColor(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  switch(a1)
  {
    case 1:
      CGFloat components = 0.6;
      _Q0 = vdupq_n_s64(0x3FE3333333333333uLL);
      break;
    case 2:
      CGFloat components = 1.0;
      __asm { FMOV            V0.2D, #1.0 }
      break;
    case 4:
      CGFloat components = 1.0;
      _Q0 = (int64x2_t)xmmword_18FD06D20;
      break;
    case 5:
      CGFloat components = 0.298039216;
      _Q0 = (int64x2_t)xmmword_18FD06D40;
      break;
    case 6:
      CGFloat components = 1.0;
      _Q0 = (int64x2_t)xmmword_18FD06D30;
      break;
    case 7:
      CGFloat components = 1.0;
      _Q0 = (int64x2_t)xmmword_18FD06D50;
      break;
    default:
      CGFloat components = 0.0;
      _Q0 = (int64x2_t)xmmword_18FD06D60;
      break;
  }
  int64x2_t v10 = _Q0;
  uint64_t v11 = 0x3FF0000000000000;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  CGColorRef v7 = CGColorCreate(DeviceRGB, &components);
  CGColorSpaceRelease(DeviceRGB);
  CFAutorelease(v7);
  return v7;
}

CGColorRef AXSpeakHighlightColor(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  switch(a1)
  {
    case 0:
      long long v6 = 0uLL;
      uint64_t v7 = 0;
      goto LABEL_10;
    case 1:
      long long v1 = xmmword_18FD06D70;
      goto LABEL_7;
    case 2:
      long long v6 = xmmword_18FD06DA0;
      uint64_t v2 = 0x3FDADADADADADADBLL;
      goto LABEL_9;
    case 3:
      long long v6 = xmmword_18FD06D90;
      uint64_t v2 = 0x3FDC9C9C9C9C9C9DLL;
      goto LABEL_9;
    case 4:
      long long v1 = xmmword_18FD06D80;
LABEL_7:
      long long v6 = v1;
      uint64_t v2 = 0x3FF0000000000000;
      goto LABEL_9;
    case 5:
      long long v6 = xmmword_18FD06DB0;
      uint64_t v2 = 0x3FE9595959595959;
LABEL_9:
      uint64_t v7 = v2;
LABEL_10:
      uint64_t v8 = 0x3FF0000000000000;
      break;
    default:
      break;
  }
  id v3 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DBE8]);
  CGColorRef v4 = CGColorCreate(v3, (const CGFloat *)&v6);
  CGColorSpaceRelease(v3);
  CFAutorelease(v4);
  return v4;
}

__CFString *AXSCalibrationStrategyName(uint64_t a1)
{
  if (a1) {
    return @"Dual Matrix";
  }
  else {
    return @"Singular Matrix";
  }
}

void AXSLogarithmicValueForLinearValue(float a1)
{
}

float AXSLinearValueForLogarithmicValue(float a1)
{
  float v2 = fabsf(a1);
  float v3 = __exp10f(v2 + v2) + -1.0;
  if (a1 < 0.0) {
    float v3 = -v3;
  }
  return (float)(v3 / 198.0) + 0.5;
}

float AXSVoiceOverTapticChimesVolumeForSoundType(uint64_t a1)
{
  float result = 0.6;
  if (a1 != 2) {
    return 1.0;
  }
  return result;
}

uint64_t AXCArrayCreate(uint64_t a1, unint64_t a2)
{
  if (_AXCArrayRegisterClass__AXCArrayRegisterClassToken != -1) {
    dispatch_once(&_AXCArrayRegisterClass__AXCArrayRegisterClassToken, &__block_literal_global_1);
  }
  uint64_t result = _CFRuntimeCreateInstance();
  if (result)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(void *)(result + 24) = a1;
    if (a2 <= 1) {
      uint64_t v5 = 1;
    }
    else {
      uint64_t v5 = a2;
    }
    *(void *)(result + 48) = v5;
  }
  return result;
}

uint64_t AXCArrayGetTypeID()
{
  if (_AXCArrayRegisterClass__AXCArrayRegisterClassToken != -1) {
    dispatch_once(&_AXCArrayRegisterClass__AXCArrayRegisterClassToken, &__block_literal_global_1);
  }
  return _AXCArrayTypeID;
}

uint64_t AXCArrayCreateWithCoder(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v25 = 0;
  uint64_t v26 = &v25;
  uint64_t v27 = 0x2020000000;
  uint64_t v28 = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __AXCArrayCreateWithCoder_block_invoke;
  aBlock[3] = &unk_1E5672CA8;
  id v5 = v4;
  id v24 = v5;
  long long v6 = _Block_copy(aBlock);
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 3221225472;
  v20[2] = __AXCArrayCreateWithCoder_block_invoke_2;
  v20[3] = &unk_1E5672CF8;
  id v7 = v6;
  id v22 = v7;
  id v8 = v3;
  id v21 = v8;
  uint64_t v9 = (uint64_t (**)(void *, __CFString *))_Block_copy(v20);
  uint64_t v10 = v9[2](v9, @"AXCArrayArchivingKeyElementSize");
  unint64_t v11 = v9[2](v9, @"AXCArrayArchivingKeyInitialCapacity");
  if (v10)
  {
    uint64_t v12 = AXCArrayCreate(v10, v11);
    v26[3] = v12;
    if (v12)
    {
      v17[0] = MEMORY[0x1E4F143A8];
      v17[1] = 3221225472;
      v17[2] = __AXCArrayCreateWithCoder_block_invoke_4;
      v17[3] = &unk_1E5672D20;
      id v18 = v8;
      uint64_t v19 = &v25;
      (*((void (**)(id, __CFString *, void *))v7 + 2))(v7, @"AXCArrayArchivingKeyArray", v17);
      if (v26[3])
      {
        uint64_t v13 = v9[2](v9, @"AXCArrayArchivingKeyCursor");
        double v14 = (void *)v26[3];
        v14[4] = v13;
        v14[5] = v13;
        if (v13)
        {
          if (!v14[2])
          {
            CFRelease(v14);
            v26[3] = 0;
          }
        }
      }
    }
  }
  uint64_t v15 = v26[3];

  _Block_object_dispose(&v25, 8);
  return v15;
}

void sub_18FC7826C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void __AXCArrayCreateWithCoder_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = (objc_class *)NSString;
  long long v6 = a3;
  id v7 = a2;
  id v8 = (id)[[v5 alloc] initWithFormat:@"%@.%@", *(void *)(a1 + 32), v7];

  v6[2](v6, v8);
}

uint64_t __AXCArrayCreateWithCoder_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v10 = 0;
  unint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  uint64_t v13 = 0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __AXCArrayCreateWithCoder_block_invoke_3;
  v7[3] = &unk_1E5672CD0;
  uint64_t v9 = &v10;
  uint64_t v4 = *(void *)(a1 + 40);
  id v8 = *(id *)(a1 + 32);
  (*(void (**)(uint64_t, id, void *))(v4 + 16))(v4, v3, v7);
  uint64_t v5 = v11[3];

  _Block_object_dispose(&v10, 8);
  return v5;
}

void sub_18FC78404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __AXCArrayCreateWithCoder_block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t result = [*(id *)(a1 + 32) decodeInt32ForKey:a2];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (int)result;
  return result;
}

void __AXCArrayCreateWithCoder_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) containsValueForKey:v3])
  {
    size_t size = 0;
    uint64_t v4 = (const void *)[*(id *)(a1 + 32) decodeBytesForKey:v3 returnedLength:&size];
    *(void *)(*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) + 16) = malloc_type_malloc(size, 0x4A618A81uLL);
    uint64_t v5 = *(void **)(*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) + 16);
    if (v5)
    {
      memcpy(v5, v4, size);
    }
    else
    {
      CFRelease(*(CFTypeRef *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    }
  }
}

void AXCArrayEncodeWithCoder(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __AXCArrayEncodeWithCoder_block_invoke;
  aBlock[3] = &unk_1E5672CA8;
  id v7 = v6;
  id v19 = v7;
  id v8 = (void (**)(void *, __CFString *, void *))_Block_copy(aBlock);
  if (a1[2])
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __AXCArrayEncodeWithCoder_block_invoke_2;
    v15[3] = &unk_1E5672D48;
    id v16 = v5;
    BOOL v17 = a1;
    v8[2](v8, @"AXCArrayArchivingKeyArray", v15);
  }
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __AXCArrayEncodeWithCoder_block_invoke_3;
  v12[3] = &unk_1E5672D70;
  id v13 = v5;
  id v14 = v8;
  id v9 = v5;
  uint64_t v10 = v8;
  unint64_t v11 = (void (**)(void *, void, __CFString *))_Block_copy(v12);
  v11[2](v11, a1[3], @"AXCArrayArchivingKeyElementSize");
  v11[2](v11, a1[4], @"AXCArrayArchivingKeyCursor");
  v11[2](v11, a1[6], @"AXCArrayArchivingKeyInitialCapacity");
}

void __AXCArrayEncodeWithCoder_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = (objc_class *)NSString;
  id v6 = a3;
  id v7 = a2;
  id v8 = (id)[[v5 alloc] initWithFormat:@"%@.%@", *(void *)(a1 + 32), v7];

  v6[2](v6, v8);
}

uint64_t __AXCArrayEncodeWithCoder_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) encodeBytes:*(void *)(*(void *)(a1 + 40) + 16) length:*(void *)(*(void *)(a1 + 40) + 24) * *(void *)(*(void *)(a1 + 40) + 32) forKey:a2];
}

void __AXCArrayEncodeWithCoder_block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __AXCArrayEncodeWithCoder_block_invoke_4;
  v6[3] = &unk_1E5672D48;
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = a2;
  (*(void (**)(uint64_t, uint64_t, void *))(v5 + 16))(v5, a3, v6);
}

uint64_t __AXCArrayEncodeWithCoder_block_invoke_4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) encodeInt64:*(void *)(a1 + 40) forKey:a2];
}

uint64_t _AXCArrayGetUnderlyingArray(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

BOOL _AXCArrayPrepareForInsertingElementAtIndex(void *a1, unint64_t a2)
{
  unint64_t v4 = a1[5];
  if (v4 <= a2)
  {
    id v6 = (void *)a1[2];
    do
    {
      uint64_t v7 = a1[3];
      if (v6)
      {
        v4 *= 2;
        id v6 = malloc_type_realloc(v6, v7 * v4, 0x4A33D6CEuLL);
      }
      else
      {
        unint64_t v4 = a1[6];
        id v6 = malloc_type_malloc(v7 * v4, 0xEDB1FB56uLL);
      }
      BOOL v5 = v6 != 0;
      if (!v6) {
        break;
      }
      a1[2] = v6;
      a1[5] = v4;
    }
    while (v4 <= a2);
  }
  else
  {
    BOOL v5 = 1;
  }
  if (a1[4] <= a2) {
    a1[4] = a2 + 1;
  }
  return v5;
}

uint64_t AXCArrayGetCount(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

uint64_t AXCArrayRemoveAllElements(uint64_t result)
{
  *(void *)(result + 32) = 0;
  return result;
}

void AXCArraySort(uint64_t a1, void *__compar)
{
}

void _AXCArrayDestroy(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1) {
    free(v1);
  }
}

void sub_18FC795B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

uint64_t AXRuntimeCheck_HasANE()
{
  if (AXRuntimeCheck_HasANE_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_HasANE_onceToken, &__block_literal_global_2);
  }
  return AXRuntimeCheck_HasANE__hasANE;
}

id get_ANEDeviceInfoClass()
{
  uint64_t v4 = 0;
  BOOL v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)get_ANEDeviceInfoClass_softClass;
  uint64_t v7 = get_ANEDeviceInfoClass_softClass;
  if (!get_ANEDeviceInfoClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __get_ANEDeviceInfoClass_block_invoke;
    v3[3] = &unk_1E56725B8;
    v3[4] = &v4;
    __get_ANEDeviceInfoClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18FC7A2C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t AXRuntimeCheck_isANEDeviceH13plus()
{
  if (AXRuntimeCheck_isANEDeviceH13plus_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_isANEDeviceH13plus_onceToken, &__block_literal_global_2);
  }
  return AXRuntimeCheck_isANEDeviceH13plus_isANEH13plus;
}

uint64_t AXRuntimeCheck_SupportsMedina()
{
  if (AXRuntimeCheck_SupportsMedina_onceToken[0] != -1) {
    dispatch_once(AXRuntimeCheck_SupportsMedina_onceToken, &__block_literal_global_5);
  }
  return AXRuntimeCheck_SupportsMedina__supportsMedina;
}

uint64_t AXRuntimeCheck_SupportsNearbyDeviceControl()
{
  uint64_t result = _os_feature_enabled_impl();
  if (result)
  {
    if (AXDeviceIsPhone() || AXDeviceIsPod())
    {
      return 1;
    }
    else
    {
      return AXDeviceIsWatch();
    }
  }
  return result;
}

uint64_t AXRuntimeCheck_SupportsMacAXV2()
{
  if (AXRuntimeCheck_SupportsMacAXV2_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_SupportsMacAXV2_onceToken, &__block_literal_global_12);
  }
  return AXRuntimeCheck_SupportsMacAXV2__supportsMacAXV2;
}

uint64_t AXRuntimeCheck_VoiceOverSupportsNeuralVoices()
{
  if (AXRuntimeCheck_VoiceOverSupportsNeuralVoices_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_VoiceOverSupportsNeuralVoices_onceToken, &__block_literal_global_15);
  }
  return AXRuntimeCheck_VoiceOverSupportsNeuralVoices__supportsMacAXV2;
}

BOOL AXRuntimeCheck_MauiSSE()
{
  if (AXRuntimeCheck_MauiSSE_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_MauiSSE_onceToken, &__block_literal_global_18);
  }
  if (AXRuntimeCheck_MauiSSE__mauiSSE) {
    return 1;
  }
  if (AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly != -1) {
    dispatch_once(&AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly, &__block_literal_global_24);
  }
  return AXRuntimeCheck_MauiSSEOnly__ffEnabled_MauiSSEOnly != 0;
}

uint64_t AXRuntimeCheck_MauiSSEOnly()
{
  if (AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly != -1) {
    dispatch_once(&AXRuntimeCheck_MauiSSEOnly_onceToken_MauiSSEOnly, &__block_literal_global_24);
  }
  return AXRuntimeCheck_MauiSSEOnly__ffEnabled_MauiSSEOnly;
}

uint64_t AXRuntimeCheck_PerVoiceSettings()
{
  if (AXRuntimeCheck_PerVoiceSettings_onceToken_PerVoiceSettings != -1) {
    dispatch_once(&AXRuntimeCheck_PerVoiceSettings_onceToken_PerVoiceSettings, &__block_literal_global_21);
  }
  return AXRuntimeCheck_PerVoiceSettings__ffEnabled_PerVoiceSettings;
}

uint64_t AXRuntimeCheck_SiriSSEOnly()
{
  if (AXRuntimeCheck_SiriSSEOnly_onceToken_SiriSSEOnly != -1) {
    dispatch_once(&AXRuntimeCheck_SiriSSEOnly_onceToken_SiriSSEOnly, &__block_literal_global_27);
  }
  return AXRuntimeCheck_SiriSSEOnly__ffEnabled_SiriSSEOnly;
}

uint64_t AXRuntimeCheck_SpeakUp()
{
  if (AXRuntimeCheck_SpeakUp_onceToken_SpeakUp != -1) {
    dispatch_once(&AXRuntimeCheck_SpeakUp_onceToken_SpeakUp, &__block_literal_global_30);
  }
  return AXRuntimeCheck_SpeakUp__ffEnabled_SpeakUp;
}

uint64_t AXRuntimeCheck_MediaAnalysisSupport()
{
  if (AXRuntimeCheck_MediaAnalysisSupport_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_MediaAnalysisSupport_onceToken, &__block_literal_global_33);
  }
  return AXRuntimeCheck_MediaAnalysisSupport__supportsMediaAnalysisServices;
}

uint64_t AXRuntimeCheck_ScreenRecognitionSupport()
{
  if (AXRuntimeCheck_ScreenRecognitionSupport_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_ScreenRecognitionSupport_onceToken, &__block_literal_global_36);
  }
  return AXRuntimeCheck_ScreenRecognitionSupport__supportsScreenRecognition;
}

BOOL AXRuntimeCheck_SupportsLiveCaptions()
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (_os_feature_enabled_impl())
  {
    uint64_t v0 = [MEMORY[0x1E4F1CA20] _deviceLanguage];
    if ([v0 isEqualToString:@"en"])
    {
      if (AXRuntimeCheck_HasANE_onceToken != -1) {
        dispatch_once(&AXRuntimeCheck_HasANE_onceToken, &__block_literal_global_2);
      }
      BOOL v1 = AXRuntimeCheck_HasANE__hasANE != 0;
    }
    else
    {
      BOOL v1 = 0;
    }
  }
  else
  {
    BOOL v1 = 0;
  }
  float v2 = AXLogLiveTranscription();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [NSNumber numberWithBool:v1];
    uint64_t v4 = [NSNumber numberWithBool:_os_feature_enabled_impl()];
    BOOL v5 = [MEMORY[0x1E4F1CA20] _deviceLanguage];
    uint64_t v6 = NSNumber;
    if (AXRuntimeCheck_HasANE_onceToken != -1) {
      dispatch_once(&AXRuntimeCheck_HasANE_onceToken, &__block_literal_global_2);
    }
    uint64_t v7 = [v6 numberWithBool:AXRuntimeCheck_HasANE__hasANE];
    int v9 = 138413058;
    uint64_t v10 = v3;
    __int16 v11 = 2112;
    uint64_t v12 = v4;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2112;
    id v16 = v7;
    _os_log_impl(&dword_18FC6C000, v2, OS_LOG_TYPE_DEFAULT, "Live captions supported: %@ [%@,%@,%@]", (uint8_t *)&v9, 0x2Au);
  }
  return v1;
}

uint64_t AXRuntimeCheck_SupportsFocusEverywhere()
{
  return 0;
}

uint64_t AXRuntimeCheck_SupportsOnDeviceEyeTracking()
{
  if (AXRuntimeCheck_isANEDeviceH13plus_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_isANEDeviceH13plus_onceToken, &__block_literal_global_2);
  }
  if (!AXRuntimeCheck_isANEDeviceH13plus_isANEH13plus) {
    return 0;
  }
  return _os_feature_enabled_impl();
}

uint64_t AXRuntimeCheck_SoundRecognitionMedinaSupportEnabled()
{
  if (AXRuntimeCheck_SupportsMedina_onceToken[0] != -1) {
    dispatch_once(AXRuntimeCheck_SupportsMedina_onceToken, &__block_literal_global_5);
  }
  if (!AXRuntimeCheck_SupportsMedina__supportsMedina) {
    return 0;
  }
  return _os_feature_enabled_impl();
}

uint64_t AXRuntimeCheck_SoundRecognitionMedinaKShotEnrollmentEnabled()
{
  if (AXRuntimeCheck_SupportsMedina_onceToken[0] != -1) {
    dispatch_once(AXRuntimeCheck_SupportsMedina_onceToken, &__block_literal_global_5);
  }
  return 0;
}

uint64_t AXRuntimeCheck_SupportsIncreaseBrightnessFloor()
{
  if (AXRuntimeCheck_SupportsIncreaseBrightnessFloor_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_SupportsIncreaseBrightnessFloor_onceToken, &__block_literal_global_46);
  }
  return AXRuntimeCheck_SupportsIncreaseBrightnessFloor__supportsIncreaseBrightnessFloor;
}

uint64_t AXRuntimeCheck_SupportsDoseAnalysis()
{
  if (AXRuntimeCheck_SupportsDoseAnalysis_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_SupportsDoseAnalysis_onceToken, &__block_literal_global_49);
  }
  return AXRuntimeCheck_SupportsDoseAnalysis__supportsDoseAnalysis;
}

uint64_t AXRuntimeCheck_SupportsVoiceoverIndepedentVolume()
{
  if (AXRuntimeCheck_SupportsVoiceoverIndepedentVolume_onceToken != -1) {
    dispatch_once(&AXRuntimeCheck_SupportsVoiceoverIndepedentVolume_onceToken, &__block_literal_global_52);
  }
  return AXRuntimeCheck_SupportsVoiceoverIndepedentVolume__supportsVoiceoverIndepedentVolume;
}

uint64_t AppleNeuralEngineLibraryCore()
{
  if (!AppleNeuralEngineLibraryCore_frameworkLibrary) {
    AppleNeuralEngineLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return AppleNeuralEngineLibraryCore_frameworkLibrary;
}

uint64_t __AppleNeuralEngineLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppleNeuralEngineLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getMGGetBoolAnswerSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  uint64_t v8 = 0;
  int v9 = &v8;
  uint64_t v10 = 0x2020000000;
  float v2 = (void *)libMobileGestaltLibraryCore_frameworkLibrary;
  uint64_t v11 = libMobileGestaltLibraryCore_frameworkLibrary;
  if (!libMobileGestaltLibraryCore_frameworkLibrary)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    v5[2] = (void *)3221225472;
    v5[3] = __libMobileGestaltLibraryCore_block_invoke;
    v5[4] = &unk_1E5672E80;
    uint64_t v6 = &v8;
    uint64_t v7 = v5;
    long long v12 = xmmword_1E5672E60;
    uint64_t v13 = 0;
    v9[3] = _sl_dlopen();
    libMobileGestaltLibraryCore_frameworkLibrary = *(void *)(v6[1] + 24);
    float v2 = (void *)v9[3];
  }
  _Block_object_dispose(&v8, 8);
  id v3 = v5[0];
  if (!v2)
  {
    id v3 = (void *)abort_report_np();
    __break(1u);
    goto LABEL_7;
  }
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "MGGetBoolAnswer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGGetBoolAnswerSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18FC7B24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __libMobileGestaltLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  libMobileGestaltLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void destructor(id a1)
{
  if (a1) {
}
  }

void sub_18FC7C75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

uint64_t _axSettingsHandlePreferenceChanged(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_handlePreferenceChangedWithNotificationName:");
}

void OUTLINED_FUNCTION_0_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t AXDeviceIsTallPhoneIdiom()
{
  if (AXDeviceIsTallPhoneIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsTallPhoneIdiom_onceToken, &__block_literal_global_5);
  }
  return AXDeviceIsTallPhoneIdiom_isTallBoy;
}

uint64_t __AXDeviceIsTallPhoneIdiom_block_invoke()
{
  uint64_t result = soft_MGGetSInt32Answer();
  if (result == 5) {
    AXDeviceIsTallPhoneIdiom_isTallBoy = 1;
  }
  return result;
}

uint64_t soft_MGGetSInt32Answer()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (uint64_t (*)(__CFString *, uint64_t))getMGGetSInt32AnswerSymbolLoc_ptr;
  uint64_t v8 = getMGGetSInt32AnswerSymbolLoc_ptr;
  if (!getMGGetSInt32AnswerSymbolLoc_ptr)
  {
    BOOL v1 = (void *)libMobileGestaltLibrary();
    v6[3] = (uint64_t)dlsym(v1, "MGGetSInt32Answer");
    getMGGetSInt32AnswerSymbolLoc_ptr = (_UNKNOWN *)v6[3];
    uint64_t v0 = (uint64_t (*)(__CFString *, uint64_t))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    uint64_t v4 = v3;
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  return v0(@"main-screen-class", 0xFFFFFFFFLL);
}

uint64_t AXDeviceIsSmallPhoneIdiom()
{
  if (AXDeviceIsSmallPhoneIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsSmallPhoneIdiom_onceToken, &__block_literal_global_3);
  }
  return AXDeviceIsSmallPhoneIdiom_isSmall;
}

uint64_t __AXDeviceIsSmallPhoneIdiom_block_invoke()
{
  uint64_t result = soft_MGGetSInt32Answer();
  if (result == 8) {
    AXDeviceIsSmallPhoneIdiom_isSmall = 1;
  }
  return result;
}

uint64_t AXDeviceIsPadMiniIdiom()
{
  if (AXDeviceIsPadMiniIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsPadMiniIdiom_onceToken, &__block_literal_global_5_0);
  }
  return AXDeviceIsPadMiniIdiom_isIpadMini;
}

uint64_t __AXDeviceIsPadMiniIdiom_block_invoke()
{
  uint64_t result = soft_MGGetSInt32Answer();
  if ((result & 0xFFFFFFFE) == 6) {
    AXDeviceIsPadMiniIdiom_isIpadMinuint64_t i = 1;
  }
  return result;
}

uint64_t AXDeviceIsBigPadIdiom()
{
  if (AXDeviceIsBigPadIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsBigPadIdiom_onceToken, &__block_literal_global_7);
  }
  return AXDeviceIsBigPadIdiom_isBigPad;
}

uint64_t __AXDeviceIsBigPadIdiom_block_invoke()
{
  uint64_t result = soft_MGGetSInt32Answer();
  if (result == 11) {
    AXDeviceIsBigPadIdiom_isBigPad = 1;
  }
  return result;
}

uint64_t AXDeviceIsSmallWatchIdiom()
{
  if (AXDeviceIsSmallWatchIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsSmallWatchIdiom_onceToken, &__block_literal_global_9);
  }
  return 0;
}

uint64_t AXDeviceIsBigWatchIdiom()
{
  if (AXDeviceIsBigWatchIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsBigWatchIdiom_onceToken, &__block_literal_global_11);
  }
  return 0;
}

uint64_t AXDeviceIsPhoneIdiom()
{
  if (AXDeviceIsPhoneIdiom_onceToken != -1) {
    dispatch_once(&AXDeviceIsPhoneIdiom_onceToken, &__block_literal_global_13);
  }
  return AXDeviceIsPhoneIdiom_isPhoneIdiom;
}

BOOL __AXDeviceIsPhoneIdiom_block_invoke()
{
  BOOL result = AXDeviceIsPhone() || AXDeviceIsPod();
  AXDeviceIsPhoneIdiom_isPhoneIdiom = result;
  return result;
}

BOOL AXDeviceIsRealityDevice()
{
  return AXDeviceGetType() == 7;
}

BOOL AXDeviceIsTV()
{
  return AXDeviceGetType() == 4;
}

BOOL AXDeviceIsAudioAccessory()
{
  return AXDeviceGetType() == 6;
}

uint64_t AXDeviceIsD22()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v4 = -337121064;
  long long v3 = xmmword_18FD07120;
  if (soft_MGIsDeviceOfType((uint64_t)&v3)) {
    return 1;
  }
  int v2 = 450980336;
  long long v1 = xmmword_18FD07134;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t soft_MGIsDeviceOfType(uint64_t a1)
{
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v2 = (uint64_t (*)(uint64_t))getMGIsDeviceOfTypeSymbolLoc_ptr;
  uint64_t v10 = getMGIsDeviceOfTypeSymbolLoc_ptr;
  if (!getMGIsDeviceOfTypeSymbolLoc_ptr)
  {
    long long v3 = (void *)libMobileGestaltLibrary();
    v8[3] = (uint64_t)dlsym(v3, "MGIsDeviceOfType");
    getMGIsDeviceOfTypeSymbolLoc_ptr = (_UNKNOWN *)v8[3];
    int v2 = (uint64_t (*)(uint64_t))v8[3];
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    uint64_t v6 = v5;
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  return v2(a1);
}

uint64_t AXDeviceIsD42()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v2 = -61007701;
  long long v1 = xmmword_18FD07148;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD32()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v2 = -232427879;
  long long v1 = xmmword_18FD0715C;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD43()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v2 = -235416490;
  long long v1 = xmmword_18FD07170;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD33()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v4 = -427474227;
  long long v3 = xmmword_18FD07184;
  if (soft_MGIsDeviceOfType((uint64_t)&v3)) {
    return 1;
  }
  int v2 = 1477534141;
  long long v1 = xmmword_18FD07198;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD7x()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v4 = -1820426635;
  long long v3 = xmmword_18FD071AC;
  if (soft_MGIsDeviceOfType((uint64_t)&v3)) {
    return 1;
  }
  int v2 = -937652876;
  long long v1 = xmmword_18FD071C0;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsD2y()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v4 = 533419158;
  long long v3 = xmmword_18FD071D4;
  if (soft_MGIsDeviceOfType((uint64_t)&v3)) {
    return 1;
  }
  int v2 = 1106979518;
  long long v1 = xmmword_18FD071E8;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsJ3XX()
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v16 = 2030516999;
  long long v15 = xmmword_18FD071FC;
  if (soft_MGIsDeviceOfType((uint64_t)&v15)) {
    return 1;
  }
  int v14 = -1276010597;
  long long v13 = xmmword_18FD07210;
  if (soft_MGIsDeviceOfType((uint64_t)&v13)) {
    return 1;
  }
  int v12 = -762483149;
  long long v11 = xmmword_18FD07224;
  if (soft_MGIsDeviceOfType((uint64_t)&v11)) {
    return 1;
  }
  int v10 = -1926937532;
  long long v9 = xmmword_18FD07238;
  if (soft_MGIsDeviceOfType((uint64_t)&v9)) {
    return 1;
  }
  int v8 = -1902732724;
  long long v7 = xmmword_18FD0724C;
  if (soft_MGIsDeviceOfType((uint64_t)&v7)) {
    return 1;
  }
  int v6 = -342357580;
  long long v5 = xmmword_18FD07260;
  if (soft_MGIsDeviceOfType((uint64_t)&v5)) {
    return 1;
  }
  int v4 = 300442574;
  long long v3 = xmmword_18FD07274;
  if (soft_MGIsDeviceOfType((uint64_t)&v3)) {
    return 1;
  }
  int v2 = -1294188889;
  long long v1 = xmmword_18FD07288;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceIsJ42()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v2 = 1839812531;
  long long v1 = xmmword_18FD0729C;
  return soft_MGIsDeviceOfType((uint64_t)&v1);
}

uint64_t AXDeviceSupportsAssistiveTouch()
{
  return 1;
}

uint64_t AXDeviceSupportsSiri()
{
  return soft_MGGetBoolAnswer(@"assistant");
}

uint64_t soft_MGGetBoolAnswer(uint64_t a1)
{
  uint64_t v7 = 0;
  int v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v2 = (uint64_t (*)(uint64_t))getMGGetBoolAnswerSymbolLoc_ptr_0;
  int v10 = getMGGetBoolAnswerSymbolLoc_ptr_0;
  if (!getMGGetBoolAnswerSymbolLoc_ptr_0)
  {
    uint64_t v3 = (void *)libMobileGestaltLibrary();
    v8[3] = (uint64_t)dlsym(v3, "MGGetBoolAnswer");
    getMGGetBoolAnswerSymbolLoc_ptr_0 = (_UNKNOWN *)v8[3];
    int v2 = (uint64_t (*)(uint64_t))v8[3];
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    int v6 = v5;
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  return v2(a1);
}

BOOL AXDeviceHasJindo()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  long long v1 = [v0 processName];
  char v2 = [v1 isEqualToString:@"backboardd"];

  if (v2) {
    return 0;
  }
  if (AXDeviceHasJindo_onceToken != -1) {
    dispatch_once(&AXDeviceHasJindo_onceToken, &__block_literal_global_40);
  }
  return AXDeviceHasJindo_HasJindo != 0;
}

uint64_t __AXDeviceHasJindo_block_invoke()
{
  uint64_t v5 = 0;
  int v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (uint64_t (*)(void))getSBUIIsSystemApertureEnabledSymbolLoc_ptr;
  int v8 = getSBUIIsSystemApertureEnabledSymbolLoc_ptr;
  if (!getSBUIIsSystemApertureEnabledSymbolLoc_ptr)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    void v4[2] = __getSBUIIsSystemApertureEnabledSymbolLoc_block_invoke;
    v4[3] = &unk_1E56725B8;
    v4[4] = &v5;
    __getSBUIIsSystemApertureEnabledSymbolLoc_block_invoke((uint64_t)v4);
    uint64_t v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    uint64_t v3 = v2;
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  uint64_t result = v0();
  AXDeviceHasJindo_HasJindo = result;
  return result;
}

uint64_t AXDeviceHasStaccato()
{
  return MEMORY[0x1F417CE08](@"RingerButtonCapability");
}

uint64_t _AXDeviceIsVoicebankingAllowedForLocale(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  char v2 = (void *)[objc_alloc(MEMORY[0x1E4F1CB18]) initWithSuiteName:@"group.com.apple.accessibility.voicebanking"];
  uint64_t v3 = [v2 objectForKey:@"ServerConfiguration"];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v5 = AXTTSLogVoiceBank();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if ((isKindOfClass & 1) == 0)
  {
    if (v6)
    {
      int v11 = 138412290;
      id v12 = v1;
      _os_log_impl(&dword_18FC6C000, v5, OS_LOG_TYPE_DEFAULT, "No ServerConfig was found for voicebanking. Assuming IsAllowed=1 for ID=%@", (uint8_t *)&v11, 0xCu);
    }
    goto LABEL_11;
  }
  if (v6)
  {
    LOWORD(v11) = 0;
    _os_log_impl(&dword_18FC6C000, v5, OS_LOG_TYPE_DEFAULT, "ServerConfig was found for voicebanking", (uint8_t *)&v11, 2u);
  }

  uint64_t v5 = [v3 objectForKeyedSubscript:v1];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_11:
    uint64_t v9 = 1;
    goto LABEL_14;
  }
  uint64_t v7 = [v5 objectForKeyedSubscript:@"IsAllowed"];
  int v8 = AXTTSLogVoiceBank();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 138412546;
    id v12 = v1;
    __int16 v13 = 2112;
    int v14 = v7;
    _os_log_impl(&dword_18FC6C000, v8, OS_LOG_TYPE_DEFAULT, "voicebanking ServerConfig found for ID=%@. IsAllowed=%@", (uint8_t *)&v11, 0x16u);
  }

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v9 = [v7 BOOLValue];
  }
  else {
    uint64_t v9 = 1;
  }

LABEL_14:
  return v9;
}

BOOL AXDeviceSupportsVoiceBankingSpeech()
{
  if (AXDeviceSupportsVoiceBankingSpeech_onceToken != -1) {
    dispatch_once(&AXDeviceSupportsVoiceBankingSpeech_onceToken, &__block_literal_global_57);
  }
  return (AXDeviceSupportsVoiceBankingSpeech__AXDeviceSupportsVoiceBankingSpeech & 1) == 0;
}

uint64_t __AXDeviceSupportsVoiceBankingSpeech_block_invoke()
{
  if ((_os_feature_enabled_impl() & 1) == 0) {
    AXDeviceSupportsVoiceBankingSpeech__AXDeviceSupportsVoiceBankingSpeech = 1;
  }
  if (soft_MGGetBoolAnswer(@"green-tea")
    && (_AXDeviceIsVoicebankingAllowedForLocale(@"cmn") & 1) == 0)
  {
    AXDeviceSupportsVoiceBankingSpeech__AXDeviceSupportsVoiceBankingSpeech = 1;
  }
  uint64_t result = AXRuntimeCheck_HasANE();
  if ((result & 1) == 0) {
    AXDeviceSupportsVoiceBankingSpeech__AXDeviceSupportsVoiceBankingSpeech = 1;
  }
  return result;
}

uint64_t AXDeviceSupportsVoiceBankingTraining()
{
  if (AXDeviceSupportsVoiceBankingTraining_onceToken != -1) {
    dispatch_once(&AXDeviceSupportsVoiceBankingTraining_onceToken, &__block_literal_global_67);
  }
  return AXDeviceSupportsVoiceBankingTraining__AXDeviceSupportsVoiceBankingTraining;
}

uint64_t __AXDeviceSupportsVoiceBankingTraining_block_invoke()
{
  uint64_t result = _get_cpu_capabilities();
  AXDeviceSupportsVoiceBankingTraining__AXDeviceSupportsVoiceBankingTraining = (result & 0x70000000) != 0;
  return result;
}

BOOL AXDeviceSupportsAdaptiveVoiceShortcuts()
{
  if (AXDeviceSupportsAdaptiveVoiceShortcuts_onceToken != -1) {
    dispatch_once(&AXDeviceSupportsAdaptiveVoiceShortcuts_onceToken, &__block_literal_global_69);
  }
  return (AXDeviceSupportsAdaptiveVoiceShortcuts__AXDeviceSupportsAdaptiveVoiceShortcuts & 1) == 0;
}

uint64_t __AXDeviceSupportsAdaptiveVoiceShortcuts_block_invoke()
{
  uint64_t result = _os_feature_enabled_impl();
  if ((result & 1) == 0) {
    AXDeviceSupportsAdaptiveVoiceShortcuts__AXDeviceSupportsAdaptiveVoiceShortcuts = 1;
  }
  return result;
}

uint64_t AXDeviceSupportsOnDeviceEyeTracking()
{
  if (AXDeviceSupportsOnDeviceEyeTracking_onceToken != -1) {
    dispatch_once(&AXDeviceSupportsOnDeviceEyeTracking_onceToken, &__block_literal_global_72);
  }
  return AXDeviceSupportsOnDeviceEyeTracking__AXDeviceSupportsOnDeviceEyeTracking;
}

uint64_t __AXDeviceSupportsOnDeviceEyeTracking_block_invoke()
{
  uint64_t result = AXRuntimeCheck_isANEDeviceH13plus();
  if (result) {
    uint64_t result = _os_feature_enabled_impl();
  }
  AXDeviceSupportsOnDeviceEyeTracking__AXDeviceSupportsOnDeviceEyeTracking = result;
  return result;
}

uint64_t AXDeviceIsN301()
{
  return 0;
}

uint64_t AXDeviceSupportsLiveSpeechCategory()
{
  return _os_feature_enabled_impl();
}

void *__getMGGetSInt32AnswerSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)libMobileGestaltLibrary();
  uint64_t result = dlsym(v2, "MGGetSInt32Answer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGGetSInt32AnswerSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t libMobileGestaltLibrary()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = libMobileGestaltLibraryCore_frameworkLibrary_0;
  uint64_t v9 = libMobileGestaltLibraryCore_frameworkLibrary_0;
  if (!libMobileGestaltLibraryCore_frameworkLibrary_0)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __libMobileGestaltLibraryCore_block_invoke_0;
    v3[4] = &unk_1E5672E80;
    int v4 = &v6;
    uint64_t v5 = v3;
    long long v10 = xmmword_1E5672FD8;
    uint64_t v11 = 0;
    v7[3] = _sl_dlopen();
    libMobileGestaltLibraryCore_frameworkLibrary_0 = *(void *)(v4[1] + 24);
    uint64_t v0 = v7[3];
  }
  _Block_object_dispose(&v6, 8);
  id v1 = v3[0];
  if (!v0)
  {
    id v1 = (void *)abort_report_np();
    __break(1u);
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_18FC7E86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __libMobileGestaltLibraryCore_block_invoke_0(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  libMobileGestaltLibraryCore_frameworkLibrary_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMGIsDeviceOfTypeSymbolLoc_block_invoke(uint64_t a1)
{
  char v2 = (void *)libMobileGestaltLibrary();
  uint64_t result = dlsym(v2, "MGIsDeviceOfType");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGIsDeviceOfTypeSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMGGetBoolAnswerSymbolLoc_block_invoke_0(uint64_t a1)
{
  char v2 = (void *)libMobileGestaltLibrary();
  uint64_t result = dlsym(v2, "MGGetBoolAnswer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGGetBoolAnswerSymbolLoc_ptr_0 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getSBUIIsSystemApertureEnabledSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!SpringBoardUIServicesLibraryCore_frameworkLibrary)
  {
    v5[1] = MEMORY[0x1E4F143A8];
    v5[2] = 3221225472;
    v5[3] = __SpringBoardUIServicesLibraryCore_block_invoke;
    v5[4] = &__block_descriptor_40_e5_v8__0l;
    v5[5] = v5;
    long long v6 = xmmword_1E5672FF0;
    uint64_t v7 = 0;
    SpringBoardUIServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v3 = (void *)v5[0];
    char v2 = (void *)SpringBoardUIServicesLibraryCore_frameworkLibrary;
    if (SpringBoardUIServicesLibraryCore_frameworkLibrary)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  char v2 = (void *)SpringBoardUIServicesLibraryCore_frameworkLibrary;
LABEL_5:
  uint64_t result = dlsym(v2, "SBUIIsSystemApertureEnabled");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getSBUIIsSystemApertureEnabledSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SpringBoardUIServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SpringBoardUIServicesLibraryCore_frameworkLibrary = result;
  return result;
}

void UIAXAppendValidationError(void *a1)
{
  id v1 = a1;
  if (!UIAXAppendValidationError_ValidationErrors)
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v3 = (void *)UIAXAppendValidationError_ValidationErrors;
    UIAXAppendValidationError_ValidationErrors = (uint64_t)v2;

    AXPerformBlockOnMainThreadAfterDelay(&__block_literal_global_6, 0.1);
  }
  int v4 = [MEMORY[0x1E4F29060] callStackSymbols];
  uint64_t v5 = [v4 objectAtIndex:1];
  if ([v5 rangeOfString:@"_installSafeCategoryOnClassNamed"] != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v6 = [v4 objectAtIndex:4];

    uint64_t v5 = (void *)v6;
  }
  uint64_t v7 = AXLogValidations();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    UIAXAppendValidationError_cold_1((uint64_t)v1, (uint64_t)v5, v7);
  }

  [(id)UIAXAppendValidationError_ValidationErrors addObject:v1];
}

uint64_t AXShouldCrashOnValidationErrors()
{
  return 0;
}

void __AXPerformValidationChecks_block_invoke()
{
  id v2 = [getAXSettingsClass_0() sharedInstance];
  if ([v2 appValidationTestingMode])
  {
    AXPerformValidationChecks_CachedSetting = 1;
  }
  else
  {
    uint64_t v0 = [getAXSettingsClass_0() sharedInstance];
    if ([v0 shouldPerformValidationsAtRuntime])
    {
      AXPerformValidationChecks_CachedSetting = 1;
    }
    else
    {
      id v1 = [getAXSettingsClass_0() sharedInstance];
      AXPerformValidationChecks_CachedSetting = [v1 isAXValidationRunnerCollectingValidations];
    }
  }
}

id getAXSettingsClass_0()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getAXSettingsClass_softClass_0;
  uint64_t v7 = getAXSettingsClass_softClass_0;
  if (!getAXSettingsClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAXSettingsClass_block_invoke_0;
    v3[3] = &unk_1E56725B8;
    v3[4] = &v4;
    __getAXSettingsClass_block_invoke_0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18FC7EE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t AXShouldLogValidationErrors()
{
  uint64_t result = AXIsInternalInstall();
  if (result)
  {
    if (AXPerformValidationChecks_onceToken != -1) {
      dispatch_once(&AXPerformValidationChecks_onceToken, &__block_literal_global_11_0);
    }
    return AXPerformValidationChecks_CachedSetting != 0;
  }
  return result;
}

uint64_t AXShouldReportValidationErrors()
{
  return 0;
}

Class __getAXSettingsClass_block_invoke_0(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_0)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __AccessibilityUtilitiesLibraryCore_block_invoke_0;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5673008;
    uint64_t v6 = 0;
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AXSettings");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)__getAXSettingsClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAXSettingsClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AccessibilityUtilitiesLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  AccessibilityUtilitiesLibraryCore_frameworkLibrary_0 = result;
  return result;
}

uint64_t __UIAccessibilityHandleValidationErrorWithDescription(int a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = (objc_class *)NSString;
  id v12 = a3;
  __int16 v13 = (void *)[[v11 alloc] initWithFormat:v12 arguments:&a9];

  if (AXShouldLogValidationErrors())
  {
    int v14 = AXLogValidations();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      __UIAccessibilityHandleValidationErrorWithDescription_cold_1((uint64_t)v13, v14);
    }
  }
  int v15 = a1 ^ 1;
  if (!v13) {
    int v15 = 1;
  }
  uint64_t v16 = v15 ^ 1u;
  if ((v15 & 1) == 0 && a2)
  {
    if (__UIAccessibilityHandleValidationErrorWithDescription__UIAccessibilityValidationCrashOnceToken != -1) {
      dispatch_once(&__UIAccessibilityHandleValidationErrorWithDescription__UIAccessibilityValidationCrashOnceToken, &__block_literal_global_8);
    }
    uint64_t v16 = 0;
  }

  return v16;
}

id AXSharedInertMetric()
{
  if (AXSharedInertMetric_onceToken != -1) {
    dispatch_once(&AXSharedInertMetric_onceToken, &__block_literal_global_9);
  }
  uint64_t v0 = (void *)AXSharedInertMetric__InertMetric;
  return v0;
}

uint64_t __AXSharedInertMetric_block_invoke()
{
  AXSharedInertMetric__InertMetric = [(AXMetric *)[AXBookendMetric alloc] _initWithName:@"Intert" session:0];
  return MEMORY[0x1F41817F8]();
}

id AXCUApplicationGetMainBundleIdentifier()
{
  if (AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken != -1) {
    dispatch_once(&AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifierOnceToken, &__block_literal_global_10);
  }
  uint64_t v0 = (void *)AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier;
  return v0;
}

void __AXCUApplicationGetMainBundleIdentifier_block_invoke()
{
  id v3 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v0 = [v3 bundleIdentifier];
  uint64_t v1 = [v0 copy];
  id v2 = (void *)AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier;
  AXCUApplicationGetMainBundleIdentifier__AXApplicationMainBundleIdentifier = v1;
}

id AXDiagnosticReportsDirectory()
{
  uint64_t v0 = AXSystemRootDirectory();
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"var/mobile/Library/Logs/Accessibility"];

  return v1;
}

id AXInternalAccessibilityBundlesDirectory()
{
  uint64_t v0 = AXSystemRootDirectory();
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"AppleInternal/Library/AccessibilityBundles"];

  return v1;
}

id AXAccessibilityPrivateFrameworksDirectory()
{
  uint64_t v0 = AXSystemRootDirectory();
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"System/Library/PrivateFrameworks/"];

  return v1;
}

id AXVoiceServicesTTSResourcesDirectory()
{
  uint64_t v0 = AXSystemRootDirectory();
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"System/Library/PrivateFrameworks/VoiceServices.framework/TTSResources"];

  return v1;
}

id AXBrailleTablesDirectory()
{
  uint64_t v0 = AXSystemRootDirectory();
  uint64_t v1 = [v0 stringByAppendingPathComponent:@"System/Library/ScreenReader/BrailleTables"];

  return v1;
}

uint64_t AXProcessIsAXAssetsd()
{
  if (AXProcessIsAXAssetsd_onceToken != -1) {
    dispatch_once(&AXProcessIsAXAssetsd_onceToken, &__block_literal_global_36_0);
  }
  return AXProcessIsAXAssetsd__IsAXAssetsd;
}

void __AXProcessIsAXAssetsd_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"axassetsd"];

  if (v2) {
    AXProcessIsAXAssetsd__IsAXAssetsd = 1;
  }
}

uint64_t AXProcessIsVoicebankingd()
{
  if (AXProcessIsVoicebankingd_onceToken != -1) {
    dispatch_once(&AXProcessIsVoicebankingd_onceToken, &__block_literal_global_39);
  }
  return AXProcessIsVoicebankingd__IsVoicebankingd;
}

void __AXProcessIsVoicebankingd_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"voicebankingd"];

  if (v2) {
    AXProcessIsVoicebankingd__IsVoicebankingd = 1;
  }
}

uint64_t AXProcessIsAxctl()
{
  if (AXProcessIsAxctl_onceToken != -1) {
    dispatch_once(&AXProcessIsAxctl_onceToken, &__block_literal_global_44);
  }
  return AXProcessIsAxctl__IsAxctl;
}

void __AXProcessIsAxctl_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"axctl"];

  if (v2) {
    AXProcessIsAxctl__IsAxctl = 1;
  }
}

uint64_t AXCUProcessIsAssistiveTouch()
{
  if (AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouchOnceToken != -1) {
    dispatch_once(&AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouchOnceToken, &__block_literal_global_49_0);
  }
  return AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouch;
}

void __AXCUProcessIsAssistiveTouch_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"assistivetouchd"];

  if (v2) {
    AXCUProcessIsAssistiveTouch__AXProcessIsAssistiveTouch = 1;
  }
}

uint64_t AXCUProcessIsMagnifierAngel()
{
  if (AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngelOnceToken != -1) {
    dispatch_once(&AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngelOnceToken, &__block_literal_global_51);
  }
  return AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngel;
}

void __AXCUProcessIsMagnifierAngel_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"MagnifierAngel"];

  if (v2) {
    AXCUProcessIsMagnifierAngel__AXProcessIsMagnifierAngel = 1;
  }
}

uint64_t AXProcessIsLiveSpeech()
{
  if (AXCUProcessIsAXUIServer_onceToken != -1) {
    dispatch_once(&AXCUProcessIsAXUIServer_onceToken, &__block_literal_global_53);
  }
  return AXCUProcessIsAXUIServer__IsAXUIServer;
}

uint64_t AXProcessMacOSSettingsExtension()
{
  return 0;
}

void __AXCUProcessIsAXUIServer_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"AccessibilityUIServer"];

  if (v2) {
    AXCUProcessIsAXUIServer__IsAXUIServer = 1;
  }
}

uint64_t AXCUProcessIsVoiceOverTouch()
{
  if (AXCUProcessIsVoiceOverTouch_onceToken != -1) {
    dispatch_once(&AXCUProcessIsVoiceOverTouch_onceToken, &__block_literal_global_55);
  }
  return AXCUProcessIsVoiceOverTouch__IsVoiceOverTouch;
}

void __AXCUProcessIsVoiceOverTouch_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 processName];
  int v2 = [v1 isEqualToString:@"vot"];

  if (v2) {
    AXCUProcessIsVoiceOverTouch__IsVoiceOverTouch = 1;
  }
}

uint64_t AXCUProcessIsPreferences()
{
  if (AXCUProcessIsPreferences_token != -1) {
    dispatch_once(&AXCUProcessIsPreferences_token, &__block_literal_global_57_0);
  }
  return AXCUProcessIsPreferences__IsPreferences;
}

void __AXCUProcessIsPreferences_block_invoke()
{
  uint64_t v0 = AXCUApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.Preferences"];

  if (v1) {
    AXCUProcessIsPreferences__IsPreferences = 1;
  }
}

uint64_t AXCUProcessIsVoiceOverUtilityApp()
{
  if (AXCUProcessIsVoiceOverUtilityApp_token != -1) {
    dispatch_once(&AXCUProcessIsVoiceOverUtilityApp_token, &__block_literal_global_59);
  }
  return AXCUProcessIsVoiceOverUtilityApp__IsVoiceOverUtility;
}

void __AXCUProcessIsVoiceOverUtilityApp_block_invoke()
{
  uint64_t v0 = AXCUApplicationGetMainBundleIdentifier();
  int v1 = [v0 isEqualToString:@"com.apple.VoiceOverUtility"];

  if (v1) {
    AXCUProcessIsVoiceOverUtilityApp__IsVoiceOverUtility = 1;
  }
}

void sub_18FC81D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_18FC82088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  objc_sync_exit(v17);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

BOOL AXDeviceIsPad()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1) {
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  }
  return AXDeviceGetType__AXDeviceType == 3;
}

uint64_t AXDeviceGetType()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1) {
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  }
  return AXDeviceGetType__AXDeviceType;
}

BOOL AXDeviceIsPhone()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1) {
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  }
  return AXDeviceGetType__AXDeviceType == 1;
}

uint64_t __AXDeviceGetType_block_invoke()
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = (uint64_t (*)(__CFString *, uint64_t))getMGGetSInt32AnswerSymbolLoc_ptr_0;
  uint64_t v9 = getMGGetSInt32AnswerSymbolLoc_ptr_0;
  if (!getMGGetSInt32AnswerSymbolLoc_ptr_0)
  {
    int v1 = (void *)libMobileGestaltLibrary_0();
    v7[3] = (uint64_t)dlsym(v1, "MGGetSInt32Answer");
    getMGGetSInt32AnswerSymbolLoc_ptr_0 = (_UNKNOWN *)v7[3];
    uint64_t v0 = (uint64_t (*)(__CFString *, uint64_t))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    long long v5 = v4;
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  uint64_t result = v0(@"DeviceClassNumber", 0xFFFFFFFFLL);
  int v3 = result - 1;
  if (result - 1) <= 0xA && ((0x46Fu >> v3)) {
    AXDeviceGetType__AXDeviceType = qword_18FD07388[v3];
  }
  return result;
}

BOOL AXDeviceIsPod()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1) {
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  }
  return AXDeviceGetType__AXDeviceType == 2;
}

BOOL AXDeviceIsWatch()
{
  if (AXDeviceGetType__AXCurrentDeviceTypeOnceToken != -1) {
    dispatch_once(&AXDeviceGetType__AXCurrentDeviceTypeOnceToken, &__block_literal_global_12);
  }
  return AXDeviceGetType__AXDeviceType == 5;
}

uint64_t AXDeviceSupportsHapticMusic()
{
  if (AXDeviceSupportsHapticMusic_onceToken != -1) {
    dispatch_once(&AXDeviceSupportsHapticMusic_onceToken, &__block_literal_global_3_0);
  }
  return AXDeviceSupportsHapticMusic_Supported;
}

uint64_t __AXDeviceSupportsHapticMusic_block_invoke()
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t result = _os_feature_enabled_impl();
  if (result)
  {
    int v18 = -1431778695;
    long long v17 = xmmword_18FD072D0;
    if (soft_MGIsDeviceOfType_0((uint64_t)&v17)) {
      goto LABEL_11;
    }
    int v16 = -121925081;
    long long v15 = xmmword_18FD072E4;
    if (soft_MGIsDeviceOfType_0((uint64_t)&v15)) {
      goto LABEL_11;
    }
    int v14 = -820493242;
    long long v13 = xmmword_18FD072F8;
    if (soft_MGIsDeviceOfType_0((uint64_t)&v13)) {
      goto LABEL_11;
    }
    int v12 = -235416490;
    long long v11 = xmmword_18FD0730C;
    if (soft_MGIsDeviceOfType_0((uint64_t)&v11)) {
      goto LABEL_11;
    }
    int v10 = -61007701;
    long long v9 = xmmword_18FD07320;
    if (soft_MGIsDeviceOfType_0((uint64_t)&v9)) {
      goto LABEL_11;
    }
    int v8 = -1843102369;
    long long v7 = xmmword_18FD07334;
    if ((soft_MGIsDeviceOfType_0((uint64_t)&v7) & 1) != 0
      || (v6 = -427474227, long long v5 = xmmword_18FD07348, (soft_MGIsDeviceOfType_0((uint64_t)&v5) & 1) != 0)
      || (v4 = 1477534141, long long v3 = xmmword_18FD0735C, (soft_MGIsDeviceOfType_0((uint64_t)&v3) & 1) != 0)
      || (int v2 = -232427879, v1 = xmmword_18FD07370, (soft_MGIsDeviceOfType_0((uint64_t)&v1) & 1) != 0))
    {
LABEL_11:
      uint64_t result = 0;
    }
    else
    {
      uint64_t result = soft_MGGetBoolAnswer_0();
    }
    AXDeviceSupportsHapticMusic_Supported = result;
  }
  return result;
}

uint64_t soft_MGIsDeviceOfType_0(uint64_t a1)
{
  uint64_t v7 = 0;
  int v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v2 = (uint64_t (*)(uint64_t))getMGIsDeviceOfTypeSymbolLoc_ptr_0;
  int v10 = getMGIsDeviceOfTypeSymbolLoc_ptr_0;
  if (!getMGIsDeviceOfTypeSymbolLoc_ptr_0)
  {
    long long v3 = (void *)libMobileGestaltLibrary_0();
    v8[3] = (uint64_t)dlsym(v3, "MGIsDeviceOfType");
    getMGIsDeviceOfTypeSymbolLoc_ptr_0 = (_UNKNOWN *)v8[3];
    int v2 = (uint64_t (*)(uint64_t))v8[3];
  }
  _Block_object_dispose(&v7, 8);
  if (!v2)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    int v6 = v5;
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  return v2(a1);
}

uint64_t soft_MGGetBoolAnswer_0()
{
  uint64_t v5 = 0;
  int v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (uint64_t (*)(__CFString *))getMGGetBoolAnswerSymbolLoc_ptr_1;
  int v8 = getMGGetBoolAnswerSymbolLoc_ptr_1;
  if (!getMGGetBoolAnswerSymbolLoc_ptr_1)
  {
    long long v1 = (void *)libMobileGestaltLibrary_0();
    v6[3] = (uint64_t)dlsym(v1, "MGGetBoolAnswer");
    getMGGetBoolAnswerSymbolLoc_ptr_1 = (_UNKNOWN *)v6[3];
    uint64_t v0 = (uint64_t (*)(__CFString *))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    soft_AXSettingsLocalizedStringForKey_cold_1();
    int v4 = v3;
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  return v0(@"cBy4BcYs5YWtFHbBpt4C6A");
}

void *__getMGGetSInt32AnswerSymbolLoc_block_invoke_0(uint64_t a1)
{
  int v2 = (void *)libMobileGestaltLibrary_0();
  uint64_t result = dlsym(v2, "MGGetSInt32Answer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGGetSInt32AnswerSymbolLoc_ptr_0 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t libMobileGestaltLibrary_0()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = libMobileGestaltLibraryCore_frameworkLibrary_1;
  uint64_t v9 = libMobileGestaltLibraryCore_frameworkLibrary_1;
  if (!libMobileGestaltLibraryCore_frameworkLibrary_1)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __libMobileGestaltLibraryCore_block_invoke_1;
    v3[4] = &unk_1E5672E80;
    int v4 = &v6;
    uint64_t v5 = v3;
    long long v10 = xmmword_1E5673050;
    uint64_t v11 = 0;
    v7[3] = _sl_dlopen();
    libMobileGestaltLibraryCore_frameworkLibrary_1 = *(void *)(v4[1] + 24);
    uint64_t v0 = v7[3];
  }
  _Block_object_dispose(&v6, 8);
  long long v1 = v3[0];
  if (!v0)
  {
    long long v1 = (void *)abort_report_np();
    __break(1u);
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_18FC82C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __libMobileGestaltLibraryCore_block_invoke_1(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  libMobileGestaltLibraryCore_frameworkLibrary_1 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMGIsDeviceOfTypeSymbolLoc_block_invoke_0(uint64_t a1)
{
  int v2 = (void *)libMobileGestaltLibrary_0();
  uint64_t result = dlsym(v2, "MGIsDeviceOfType");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGIsDeviceOfTypeSymbolLoc_ptr_0 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMGGetBoolAnswerSymbolLoc_block_invoke_1(uint64_t a1)
{
  int v2 = (void *)libMobileGestaltLibrary_0();
  uint64_t result = dlsym(v2, "MGGetBoolAnswer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMGGetBoolAnswerSymbolLoc_ptr_1 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void AXImageMonitor_dyld_image_callback()
{
  uint64_t v0 = (const char *)dyld_image_path_containing_address();
  if (v0)
  {
    long long v1 = v0;
    size_t v2 = strlen(v0);
    if (v2)
    {
      size_t v3 = v2 + 1;
      int v4 = (char *)malloc_type_malloc(v2 + 1, 0xE1EC3ECCuLL);
      if (v4)
      {
        uint64_t v5 = v4;
        strlcpy(v4, v1, v3);
        uint64_t v6 = *(NSObject **)(_Shared + 16);
        block[0] = MEMORY[0x1E4F143A8];
        block[1] = 3221225472;
        block[2] = __AXImageMonitor_dyld_image_callback_block_invoke;
        block[3] = &__block_descriptor_40_e5_v8__0l;
        block[4] = v5;
        dispatch_async(v6, block);
      }
    }
  }
}

void *_loadOrderForInfo(void *result, uint64_t a2)
{
  if (result)
  {
    LOWORD(result) = [result unsignedIntegerValue];
  }
  else
  {
    switch(a2)
    {
      case -1:
      case 0:
        LOWORD(result) = AXCodeItemLoadOrderNotApplicable;
        break;
      case 1:
        LOWORD(result) = AXCodeItemLoadOrderDylib;
        break;
      case 2:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 18:
        LOWORD(result) = AXCodeItemLoadOrderBundle;
        break;
      case 3:
        LOWORD(result) = AXCodeItemLoadOrderFramework;
        break;
      case 4:
      case 5:
      case 6:
      case 16:
        LOWORD(result) = AXCodeItemLoadOrderMainProgram;
        break;
      default:
        return (void *)(unsigned __int16)result;
    }
  }
  return (void *)(unsigned __int16)result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_18FC851FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_1_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

void _AXLogWithFacility(int a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8, uint64_t a9, char a10, void *a11)
{
  uint64_t v19 = _AXLogInitialize__AXLogInitializeOnceToken;
  id v20 = a11;
  id v21 = a2;
  if (v19 != -1) {
    dispatch_once(&_AXLogInitialize__AXLogInitializeOnceToken, &__block_literal_global_15);
  }
  _AXLogWithFacilityV(a1, v21, a3, a4, a5, a6, a7, a8, 0, a10, v20);
}

void _AXLogWithFacilityV(int a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8, uint64_t a9, char a10, void *a11)
{
  id v18 = a2;
  id v19 = a11;
  if (_AXLogInitialize__AXLogInitializeOnceToken != -1) {
    dispatch_once(&_AXLogInitialize__AXLogInitializeOnceToken, &__block_literal_global_15);
  }
  if (a6 && a4 && a10 && a3)
  {
    id v20 = (void *)[[NSString alloc] initWithUTF8String:a4];
    id v21 = [v20 lastPathComponent];
    id v22 = [NSString stringWithFormat:@"|%@:%lu %s|", v21, a5, a6];
    uint64_t v23 = (void *)[[NSString alloc] initWithFormat:@"%@%@", v22, v19];
  }
  else
  {
    if (a3) {
      id v24 = (id)[[NSString alloc] initWithFormat:@"%@", v19];
    }
    else {
      id v24 = v19;
    }
    uint64_t v23 = v24;
  }
  if (a7) {
    goto LABEL_16;
  }
  if (_AXLogShouldIncludeBacktrace_onceToken != -1) {
    dispatch_once(&_AXLogShouldIncludeBacktrace_onceToken, &__block_literal_global_42);
  }
  if (_AXLogShouldIncludeBacktrace_IncludeBacktraceInLogs)
  {
LABEL_16:
    uint64_t v25 = (objc_class *)NSString;
    id v26 = v23;
    id v27 = [v25 alloc];
    uint64_t v28 = [MEMORY[0x1E4F29060] callStackSymbols];
    uint64_t v23 = (void *)[v27 initWithFormat:@"%@\n%@", v26, v28];
  }
  int v29 = AXColorizeFormatLog(a1, v23);
  id v30 = v18;
  id v31 = v29;
  v32 = AXLoggerForFacility(v30);
  if (a8 <= 0.0)
  {
    id v34 = v31;
    [v34 UTF8String];
    os_log_with_args();
  }
  else
  {
    [(id)_AXLogThresholdCleanupTimer cancel];
    [(id)_AXLogThresholdCleanupTimer afterDelay:&__block_literal_global_49_1 processBlock:15.0];
    uint64_t v47 = 0;
    v48 = &v47;
    uint64_t v49 = 0x2020000000;
    uint64_t v50 = 0;
    uint64_t v43 = 0;
    id v44 = &v43;
    uint64_t v45 = 0x2020000000;
    char v46 = 0;
    uint64_t v33 = _AXLogThresholdQueue;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = ___AXLogWithThreshold_block_invoke_2;
    block[3] = &unk_1E5673438;
    id v34 = v31;
    id v39 = v34;
    long long v40 = &v43;
    long long v41 = &v47;
    double v42 = a8;
    dispatch_sync(v33, block);
    if (*((unsigned char *)v44 + 24))
    {
      if (v48[3])
      {
        long long v35 = NSString;
        long long v36 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:");
        uint64_t v37 = [v35 stringWithFormat:@"(repeated %@ times(s)): %@", v36, v34];

        id v34 = (id)v37;
      }
      id v34 = v34;
      [v34 UTF8String];
      os_log_with_args();
    }

    _Block_object_dispose(&v43, 8);
    _Block_object_dispose(&v47, 8);
  }
}

void sub_18FC88B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

id AXColorizeFormatLog(int a1, void *a2)
{
  id v3 = a2;
  int v4 = +[AXLogColorizer defaultColorizer];
  uint64_t v5 = v4;
  if (a1 == 3)
  {
    uint64_t v6 = [v4 debugString:v3];
  }
  else if (a1 == 1)
  {
    uint64_t v6 = [v4 warningString:v3];
  }
  else
  {
    if (a1) {
      [v4 infoString:v3];
    }
    else {
    uint64_t v6 = [v4 errorString:v3];
    }
  }
  uint64_t v7 = (void *)v6;

  return v7;
}

uint64_t AXOSLogLevelFromAXLogLevel(unsigned int a1)
{
  unsigned int v1 = 0x2010010u >> (8 * a1);
  if (a1 >= 4) {
    LOBYTE(v1) = 0;
  }
  return v1;
}

id _AXStringForArgs(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = [a1 stringByReplacingOccurrencesOfString:@"%{public}@" withString:@"%@"];
  long long v10 = [v9 stringByReplacingOccurrencesOfString:@"%{public}s" withString:@"%s"];

  if (AXIsInternalInstall()) {
    uint64_t v11 = @"%@";
  }
  else {
    uint64_t v11 = @"{redacted}";
  }
  uint64_t v12 = [v10 stringByReplacingOccurrencesOfString:@"%{private}@" withString:v11];

  if (AXIsInternalInstall()) {
    long long v13 = @"%s";
  }
  else {
    long long v13 = @"{redacted}";
  }
  int v14 = [v12 stringByReplacingOccurrencesOfString:@"%{private}s" withString:v13];

  long long v15 = (void *)[[NSString alloc] initWithFormat:v14 arguments:&a9];
  return v15;
}

id AXLoggerForFacility(void *a1)
{
  id v1 = a1;
  if (_AXLogInitialize__AXLogInitializeOnceToken != -1) {
    dispatch_once(&_AXLogInitialize__AXLogInitializeOnceToken, &__block_literal_global_15);
  }
  uint64_t v9 = 0;
  long long v10 = &v9;
  uint64_t v11 = 0x3032000000;
  uint64_t v12 = __Block_byref_object_copy__4;
  long long v13 = __Block_byref_object_dispose__4;
  id v14 = 0;
  size_t v2 = _AXLogThresholdQueue;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __AXLoggerForFacility_block_invoke;
  v6[3] = &unk_1E5673190;
  id v7 = v1;
  uint64_t v8 = &v9;
  id v3 = v1;
  dispatch_sync(v2, v6);
  id v4 = (id)v10[5];

  _Block_object_dispose(&v9, 8);
  return v4;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __AXLoggerForFacility_block_invoke(uint64_t a1)
{
  size_t v2 = (__CFString *)*(id *)(a1 + 32);
  if (v2) {
    id v3 = v2;
  }
  else {
    id v3 = @"Accessibility";
  }
  uint64_t v12 = v3;
  uint64_t v4 = objc_msgSend((id)_OSLogCache, "objectForKeyedSubscript:");
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id v7 = (const char *)[ (id) *MEMORY[0x1E4FB8FD0] UTF8String];
    uint64_t v8 = v12;
    os_log_t v9 = os_log_create(v7, (const char *)[(__CFString *)v8 UTF8String]);
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    [(id)_OSLogCache setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKeyedSubscript:v8];
  }
}

void AXPrintLine(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = (objc_class *)NSString;
  id v11 = a2;
  uint64_t v12 = (void *)[[v10 alloc] initWithFormat:v11 arguments:&a9];

  AXPrintString(a1, v12);
}

void AXPrintString(uint64_t a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = v3;
  switch(a1)
  {
    case 0:
      id v5 = v3;
      break;
    case 1:
      uint64_t v6 = +[AXLogColorizer defaultColorizer];
      uint64_t v7 = [v6 redString:v4];
      goto LABEL_10;
    case 2:
      uint64_t v6 = +[AXLogColorizer defaultColorizer];
      uint64_t v7 = [v6 greenString:v4];
      goto LABEL_10;
    case 3:
      uint64_t v6 = +[AXLogColorizer defaultColorizer];
      uint64_t v7 = [v6 yellowString:v4];
      goto LABEL_10;
    case 4:
      uint64_t v6 = +[AXLogColorizer defaultColorizer];
      uint64_t v7 = [v6 blueString:v4];
      goto LABEL_10;
    case 5:
      uint64_t v6 = +[AXLogColorizer defaultColorizer];
      uint64_t v7 = [v6 cyanString:v4];
      goto LABEL_10;
    case 6:
      uint64_t v6 = +[AXLogColorizer defaultColorizer];
      uint64_t v7 = [v6 magentaString:v4];
LABEL_10:
      id v5 = (id)v7;

      break;
    default:
      id v5 = 0;
      break;
  }
  uint64_t v8 = AXPrintString_AXEngineeringLog;
  if (!AXPrintString_AXEngineeringLog)
  {
    os_log_t v9 = os_log_create((const char *)[ (id) *MEMORY[0x1E4FB8FD0] UTF8String], "axprintln");
    uint64_t v10 = (void *)AXPrintString_AXEngineeringLog;
    AXPrintString_AXEngineeringLog = (uint64_t)v9;

    uint64_t v8 = AXPrintString_AXEngineeringLog;
  }
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = v5;
    uint64_t v12 = v8;
    int v13 = 136315138;
    uint64_t v14 = [v11 UTF8String];
    _os_log_impl(&dword_18FC6C000, v12, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&v13, 0xCu);
  }
}

BOOL AXWillLogInfoWithFacility(void *a1)
{
  id v1 = AXLoggerForFacility(a1);
  BOOL v2 = os_log_type_enabled(v1, OS_LOG_TYPE_INFO);

  return v2;
}

BOOL AXWillLogDebugWithFacility(void *a1)
{
  id v1 = AXLoggerForFacility(a1);
  BOOL v2 = os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG);

  return v2;
}

uint64_t AXLogShouldLogWithLevelAndFacility()
{
  return 1;
}

id getAXSettingsClass_1()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getAXSettingsClass_softClass_1;
  uint64_t v7 = getAXSettingsClass_softClass_1;
  if (!getAXSettingsClass_softClass_1)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAXSettingsClass_block_invoke_1;
    v3[3] = &unk_1E56725B8;
    v3[4] = &v4;
    __getAXSettingsClass_block_invoke_1((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18FC894F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAXSettingsClass_block_invoke_1(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_1)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __AccessibilityUtilitiesLibraryCore_block_invoke_1;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5673418;
    uint64_t v6 = 0;
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_1 = _sl_dlopen();
    BOOL v2 = (void *)v4[0];
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_1)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AXSettings");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    BOOL v2 = (void *)__getAXSettingsClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAXSettingsClass_softClass_1 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AccessibilityUtilitiesLibraryCore_block_invoke_1()
{
  uint64_t result = _sl_dlopen();
  AccessibilityUtilitiesLibraryCore_frameworkLibrary_1 = result;
  return result;
}

__CFString *_AXNameForCodeItemType(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0x13) {
    return @"Unexpected!";
  }
  else {
    return *(&off_1E56734C8 + a1 + 1);
  }
}

void sub_18FC8A738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_18FC8A908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18FC8B310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLFSystemShellSwitcherClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!ClarityFoundationLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __ClarityFoundationLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5673568;
    uint64_t v6 = 0;
    ClarityFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
    BOOL v2 = (void *)v4[0];
    if (!ClarityFoundationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CLFSystemShellSwitcher");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    BOOL v2 = (void *)__getCLFSystemShellSwitcherClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getCLFSystemShellSwitcherClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ClarityFoundationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ClarityFoundationLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t UIAccessibilitySymbolWithName(void *a1)
{
  id v1 = a1;
  if (!_Symbols || (uint64_t Value = (uint64_t)CFDictionaryGetValue((CFDictionaryRef)_Symbols, v1)) == 0)
  {
    id v3 = v1;
    uint64_t Value = (uint64_t)dlsym((void *)8, (const char *)[v3 UTF8String]);
    if (!Value)
    {
      id v4 = v3;
      uint64_t Value = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, (const char *)[v4 UTF8String]);
      if (!Value)
      {
        long long v5 = AXLogValidations();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
          UIAccessibilitySymbolWithName_cold_1((uint64_t)v4, v5);
        }

        uint64_t Value = 1;
      }
    }
    Mutable = (__CFDictionary *)_Symbols;
    if (!_Symbols)
    {
      Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, MEMORY[0x1E4F1D048], 0);
      _Symbols = (uint64_t)Mutable;
    }
    CFDictionarySetValue(Mutable, v3, (const void *)Value);
  }
  if (Value == 1) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = Value;
  }

  return v7;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_18FC8BCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __AXPerformSafeBlockWithErrorHandler_block_invoke(uint64_t a1)
{
  BOOL v2 = NSString;
  id v3 = [*(id *)(a1 + 32) name];
  id v4 = [*(id *)(a1 + 32) reason];
  long long v5 = [*(id *)(a1 + 32) callStackSymbols];
  objc_msgSend(v2, "stringWithFormat:", @"Caught exception '%@' while performing safe block; reason: '%@'. Stacktrace: %@.",
    v3,
    v4,
  uint64_t v6 = v5);

  return v6;
}

id __UIAccessibilityCastAsProtocol(void *a1, void *a2, int a3, unsigned char *a4)
{
  uint64_t v7 = a1;
  id v8 = a2;
  uint64_t v9 = v8;
  if (!v8) {
    goto LABEL_11;
  }
  int v10 = [v8 conformsToProtocol:v7];
  if (a3)
  {
    if ((AXPerformValidationChecks() ^ 1 | v10))
    {
      LOBYTE(v11) = 0;
    }
    else
    {
      int v12 = AXShouldCrashOnValidationErrors();
      int v13 = (objc_class *)objc_opt_class();
      uint64_t v14 = NSStringFromClass(v13);
      uint64_t v15 = NSStringFromProtocol(v7);
      uint64_t v23 = [MEMORY[0x1E4F29060] callStackSymbols];
      int v11 = __UIAccessibilityHandleValidationErrorWithDescription(v12, 0, @"Failed to cast object <%@: %p> as protocol %@ %@", v16, v17, v18, v19, v20, (uint64_t)v14);

      if (!a4 && v11) {
        abort();
      }
    }
    if (a4) {
      *a4 = v11;
    }
  }
  if (v10) {
    id v21 = v9;
  }
  else {
LABEL_11:
  }
    id v21 = 0;

  return v21;
}

id __UIAccessibilityGetAssociatedNonRetainedObject(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  id v3 = [v2 nonRetainedObject];

  return v3;
}

void __UIAccessibilitySetAssociatedInteger(void *a1, const void *a2, void *a3)
{
  id object = a1;
  if (a3)
  {
    a3 = [NSNumber numberWithInteger:a3];
  }
  objc_setAssociatedObject(object, a2, a3, (void *)1);
}

uint64_t __UIAccessibilityGetAssociatedInt(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = [v2 intValue];

  return v3;
}

void __UIAccessibilitySetAssociatedInt(void *a1, const void *a2, uint64_t a3)
{
  id object = a1;
  if (a3)
  {
    long long v5 = [NSNumber numberWithInt:a3];
  }
  else
  {
    long long v5 = 0;
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);
}

uint64_t __UIAccessibilityGetAssociatedUnsignedInt(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = [v2 unsignedIntValue];

  return v3;
}

void __UIAccessibilitySetAssociatedUnsignedInt(void *a1, const void *a2, uint64_t a3)
{
  id object = a1;
  if (a3)
  {
    long long v5 = [NSNumber numberWithUnsignedInt:a3];
  }
  else
  {
    long long v5 = 0;
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);
}

uint64_t __UIAccessibilityGetAssociatedLong(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = [v2 longValue];

  return v3;
}

uint64_t __UIAccessibilityGetAssociatedUnsignedInteger(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = [v2 unsignedIntegerValue];

  return v3;
}

void __UIAccessibilitySetAssociatedUnsignedInteger(void *a1, const void *a2, void *a3)
{
  id object = a1;
  if (a3)
  {
    a3 = [NSNumber numberWithUnsignedInteger:a3];
  }
  objc_setAssociatedObject(object, a2, a3, (void *)1);
}

uint64_t __UIAccessibilityGetAssociatedRange(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  uint64_t v3 = v2;
  if (v2) {
    uint64_t v4 = [v2 rangeValue];
  }
  else {
    uint64_t v4 = 0;
  }

  return v4;
}

void __UIAccessibilitySetAssociatedRange(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  id object = a1;
  if (a3 | a4)
  {
    uint64_t v7 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", a3, a4);
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_setAssociatedObject(object, a2, v7, (void *)1);
}

double __UIAccessibilityGetAssociatedTimeInterval(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  [v2 doubleValue];
  double v4 = v3;

  return v4;
}

void __UIAccessibilitySetAssociatedTimeInterval(void *a1, const void *a2, double a3)
{
  id object = a1;
  if (a3 == 0.0) {
    long long v5 = 0;
  }
  else {
    long long v5 = (void *)[objc_alloc(NSNumber) initWithDouble:a3];
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);
}

double __UIAccessibilityGetAssociatedCGFloat(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  [v2 doubleValue];
  double v4 = v3;

  return v4;
}

void __UIAccessibilitySetAssociatedCGFloat(void *a1, const void *a2, double a3)
{
  id object = a1;
  if (a3 == 0.0)
  {
    long long v5 = 0;
  }
  else
  {
    long long v5 = [NSNumber numberWithDouble:a3];
  }
  objc_setAssociatedObject(object, a2, v5, (void *)1);
}

double __UIAccessibilityGetAssociatedCGPoint(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  double v3 = v2;
  if (v2)
  {
    [v2 pointValue];
    double v5 = v4;
  }
  else
  {
    double v5 = *MEMORY[0x1E4F1DAD8];
  }

  return v5;
}

void __UIAccessibilitySetAssociatedCGPoint(void *a1, const void *a2, double a3, double a4)
{
  id object = a1;
  if (a3 == *MEMORY[0x1E4F1DAD8] && a4 == *(double *)(MEMORY[0x1E4F1DAD8] + 8))
  {
    id v8 = 0;
  }
  else
  {
    id v8 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithPoint:", a3, a4);
  }
  objc_setAssociatedObject(object, a2, v8, (void *)1);
}

double __UIAccessibilityGetAssociatedCGRect(void *a1, const void *a2)
{
  BOOL v2 = objc_getAssociatedObject(a1, a2);
  double v3 = v2;
  if (v2)
  {
    [v2 rectValue];
    double v5 = v4;
  }
  else
  {
    double v5 = *MEMORY[0x1E4F1DB28];
  }

  return v5;
}

void __UIAccessibilitySetAssociatedCGRect(void *a1, const void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id object = a1;
  v14.origin.x = a3;
  v14.origin.y = a4;
  v14.size.width = a5;
  v14.size.height = a6;
  if (CGRectEqualToRect(v14, *MEMORY[0x1E4F1DB28]))
  {
    int v11 = 0;
  }
  else
  {
    int v11 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRect:", a3, a4, a5, a6);
  }
  objc_setAssociatedObject(object, a2, v11, (void *)1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void _axmonitor_dyld_image_callback()
{
  uint64_t v0 = (const char *)dyld_image_path_containing_address();
  if (v0 && *v0)
  {
    id v1 = strdup(v0);
    if (v1)
    {
      v2[0] = MEMORY[0x1E4F143A8];
      v2[1] = 3221225472;
      v2[2] = ___axmonitor_dyld_image_callback_block_invoke;
      v2[3] = &__block_descriptor_40_e5_v8__0l;
      v2[4] = v1;
      AXPerformBlockOnMainThreadAfterDelay(v2, 0.5);
    }
  }
}

void ___axmonitor_dyld_image_callback_block_invoke(uint64_t a1)
{
  BOOL v2 = (void *)MEMORY[0x192FC2C90]();
  double v3 = [NSString stringWithCString:*(void *)(a1 + 32) encoding:4];
  double v4 = +[AXBinaryMonitor sharedInstance];
  [v4 _handleLoadedImagePath:v3];

  free(*(void **)(a1 + 32));
}

void _AXInitializeSafeSwiftValueSupport()
{
  if (_AXInitializeSafeSwiftValueSupport_onceToken != -1) {
    dispatch_once(&_AXInitializeSafeSwiftValueSupport_onceToken, &__block_literal_global_19);
  }
}

void _bulkAddMethodsFromClass(objc_class *a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  unsigned int outCount = 0;
  double v4 = class_copyMethodList(a1, &outCount);
  double v5 = v4;
  uint64_t v6 = outCount;
  if (!outCount)
  {
    if (!v4) {
      return;
    }
    goto LABEL_18;
  }
  uint64_t v7 = 8 * outCount;
  if (outCount <= 0x55)
  {
    uint64_t v20 = a2;
    MEMORY[0x1F4188790]();
    uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0x7FFFFFFFF0);
    bzero(v9, v8);
    int v10 = &v9[v7];
    int v11 = &v9[16 * v6];
    goto LABEL_8;
  }
  uint64_t v9 = (char *)malloc_type_malloc(48 * outCount, 0x7631154uLL);
  int v10 = &v9[v7];
  int v11 = &v9[16 * v6];
  if (outCount)
  {
    uint64_t v20 = a2;
LABEL_8:
    unint64_t v12 = 0;
    int v13 = 0;
    do
    {
      Name = method_getName(v5[v12]);
      TypeEncoding = method_getTypeEncoding(v5[v12]);
      InstanceMethod = class_getInstanceMethod(a1, Name);
      if (InstanceMethod)
      {
        IMP Implementation = method_getImplementation(InstanceMethod);
        if (Implementation)
        {
          *(void *)&v9[8 * v13] = Name;
          *(void *)&v10[8 * v13] = Implementation;
          *(void *)&v11[8 * v13++] = TypeEncoding;
        }
      }
      ++v12;
    }
    while (v12 < outCount);
    goto LABEL_13;
  }
  if (v5) {
LABEL_13:
  }
    free(v5);
  int v21 = 0;
  uint64_t v18 = (void *)class_addMethodsBulk();
  if (v18) {
    free(v18);
  }
  if (v6 >= 0x56)
  {
    double v4 = (Method *)v9;
LABEL_18:
    free(v4);
  }
}

__CFString *__UIAccessibilityCastAsSwiftStruct(void *a1, void *a2, int a3, unsigned char *a4)
{
  id v7 = a1;
  id v8 = a2;
  uint64_t v9 = v8;
  if (!v8) {
    goto LABEL_11;
  }
  int IsStructWithTypeName = _AXSafeSwiftIsStructWithTypeName((uint64_t)v8, (uint64_t)v7);
  if (a3)
  {
    if ((AXPerformValidationChecks() ^ 1 | IsStructWithTypeName))
    {
      LOBYTE(v11) = 0;
    }
    else
    {
      int v12 = AXShouldCrashOnValidationErrors();
      int v13 = _AXSafeSwiftTypeName((uint64_t)v9);
      int v21 = [MEMORY[0x1E4F29060] callStackSymbols];
      int v11 = __UIAccessibilityHandleValidationErrorWithDescription(v12, 0, @"Failed to cast object <%@: %p> as struct %@ %@", v14, v15, v16, v17, v18, (uint64_t)v13);

      if (!a4 && v11) {
        abort();
      }
    }
    if (a4) {
      *a4 = v11;
    }
  }
  if (IsStructWithTypeName) {
    uint64_t v19 = v9;
  }
  else {
LABEL_11:
  }
    uint64_t v19 = &stru_1EDF601D0;

  return v19;
}

__CFString *__UIAccessibilityCastAsSwiftEnum(void *a1, void *a2, int a3, unsigned char *a4)
{
  id v7 = a1;
  id v8 = a2;
  uint64_t v9 = v8;
  if (!v8) {
    goto LABEL_11;
  }
  int IsEnumWithTypeName = _AXSafeSwiftIsEnumWithTypeName((uint64_t)v8, (uint64_t)v7);
  if (a3)
  {
    if ((AXPerformValidationChecks() ^ 1 | IsEnumWithTypeName))
    {
      LOBYTE(v11) = 0;
    }
    else
    {
      int v12 = AXShouldCrashOnValidationErrors();
      int v13 = _AXSafeSwiftTypeName((uint64_t)v9);
      int v21 = [MEMORY[0x1E4F29060] callStackSymbols];
      int v11 = __UIAccessibilityHandleValidationErrorWithDescription(v12, 0, @"Failed to cast object <%@: %p> as enum %@ %@", v14, v15, v16, v17, v18, (uint64_t)v13);

      if (!a4 && v11) {
        abort();
      }
    }
    if (a4) {
      *a4 = v11;
    }
  }
  if (IsEnumWithTypeName) {
    uint64_t v19 = v9;
  }
  else {
LABEL_11:
  }
    uint64_t v19 = &stru_1EDF601D0;

  return v19;
}

__CFString *__UIAccessibilityCastAsSwiftTuple(void *a1, int a2, unsigned char *a3)
{
  id v5 = a1;
  if (!v5) {
    goto LABEL_11;
  }
  BOOL IsTuple = _AXSafeSwiftIsTuple();
  if (a2)
  {
    if ((AXPerformValidationChecks() ^ 1 | IsTuple))
    {
      LOBYTE(v7) = 0;
    }
    else
    {
      int v8 = AXShouldCrashOnValidationErrors();
      uint64_t v9 = _AXSafeSwiftTypeName((uint64_t)v5);
      uint64_t v17 = [MEMORY[0x1E4F29060] callStackSymbols];
      int v7 = __UIAccessibilityHandleValidationErrorWithDescription(v8, 0, @"Failed to cast object <%@: %p> as tuple %@", v10, v11, v12, v13, v14, (uint64_t)v9);

      if (!a3 && v7) {
        abort();
      }
    }
    if (a3) {
      *a3 = v7;
    }
  }
  if (IsTuple) {
    uint64_t v15 = (__CFString *)v5;
  }
  else {
LABEL_11:
  }
    uint64_t v15 = &stru_1EDF601D0;

  return v15;
}

void _AXAssert(int a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v29[3] = *MEMORY[0x1E4F143B8];
  id v13 = a5;
  if (_AXSInUnitTestMode())
  {
    *(void *)buf = &a9;
    [MEMORY[0x1E4F1CA00] raise:@"AccessibilityUnitTestingException" format:v13 arguments:&a9];
  }
  else
  {
    if (a1) {
      os_log_type_t v14 = OS_LOG_TYPE_ERROR;
    }
    else {
      os_log_type_t v14 = OS_LOG_TYPE_FAULT;
    }
    uint64_t v15 = (void *)[[NSString alloc] initWithUTF8String:a2];
    uint64_t v16 = [v15 lastPathComponent];
    uint64_t v23 = &a9;
    uint64_t v17 = (void *)[[NSString alloc] initWithFormat:v13 arguments:&a9];
    uint64_t v18 = AXLogCommon();
    if (os_log_type_enabled(v18, v14))
    {
      *(_DWORD *)buf = 136315906;
      *(void *)&buf[4] = a4;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v16;
      *(_WORD *)&buf[22] = 2048;
      uint64_t v28 = a3;
      LOWORD(v29[0]) = 2112;
      *(void *)((char *)v29 + 2) = v17;
      _os_log_impl(&dword_18FC6C000, v18, v14, "*** Assertion failure in %s, %@:%lu: %@", buf, 0x2Au);
    }

    if (a1)
    {
      uint64_t v23 = 0;
      id v24 = &v23;
      uint64_t v25 = 0x2050000000;
      uint64_t v19 = (uint64_t *)getAXSettingsClass_softClass_2;
      uint64_t v26 = getAXSettingsClass_softClass_2;
      if (!getAXSettingsClass_softClass_2)
      {
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 3221225472;
        *(void *)&buf[16] = __getAXSettingsClass_block_invoke_2;
        uint64_t v28 = &unk_1E56725B8;
        v29[0] = &v23;
        __getAXSettingsClass_block_invoke_2((uint64_t)buf);
        uint64_t v19 = v24[3];
      }
      uint64_t v20 = v19;
      _Block_object_dispose(&v23, 8);
      int v21 = objc_msgSend(v20, "sharedInstance", v23);
      char v22 = [v21 ignoreAXAsserts];

      if ((v22 & 1) == 0) {
        _AXAssert_cold_1();
      }
    }
  }
}

void sub_18FC8EAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

Class __getAXSettingsClass_block_invoke_2(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_2)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __AccessibilityUtilitiesLibraryCore_block_invoke_2;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E56735F0;
    uint64_t v6 = 0;
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_2 = _sl_dlopen();
    BOOL v2 = (void *)v4[0];
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_2)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AXSettings");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    BOOL v2 = (void *)__getAXSettingsClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAXSettingsClass_softClass_2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AccessibilityUtilitiesLibraryCore_block_invoke_2()
{
  uint64_t result = _sl_dlopen();
  AccessibilityUtilitiesLibraryCore_frameworkLibrary_2 = result;
  return result;
}

void AXValidationManagerSendExceptionForSafeValueKey(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = +[AXValidationManager sharedInstance];
  [v5 sendExceptionForSafeValueKey:v4 onTarget:v3 overrideProcessName:0];
}

void _UIValidationAXAppendError(void *a1)
{
  id v1 = a1;
  if (AXShouldLogValidationErrors()) {
    UIAXAppendValidationError(v1);
  }
}

void _UIReportSenderError(void *a1, void *a2)
{
  id v5 = a1;
  id v3 = a2;
  if (AXShouldReportValidationErrors())
  {
    id v4 = +[AXValidationManager sharedInstance];
    [v4 sendExceptionForInstallingSafeCategory:v3 onTarget:v5 overrideProcessName:0];
  }
}

void sub_18FC9074C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

objc_class *_AXClassFromStringWithFallback(void *a1)
{
  id v1 = a1;
  Class v2 = NSClassFromString(v1);
  if (!v2)
  {
    id v3 = [(NSString *)v1 componentsSeparatedByString:@"."];
    _AXGetSwiftMangledClassNameWithItems();
    id v4 = (NSString *)objc_claimAutoreleasedReturnValue();
    Class v2 = NSClassFromString(v4);
  }
  id v5 = v2;

  return v5;
}

void sub_18FC91D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FC9230C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_18FC92CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

objc_ivar *__ax_verbose_encode_with_type_encoding_group_class(objc_class *a1, const char *a2)
{
  uint64_t result = class_getInstanceVariable(a1, a2);
  if (result)
  {
    return (objc_ivar *)ivar_getTypeEncoding(result);
  }
  return result;
}

Class __getAXSettingsClass_block_invoke_3(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_3)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    void v4[2] = 3221225472;
    v4[3] = __AccessibilityUtilitiesLibraryCore_block_invoke_3;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E5673720;
    uint64_t v6 = 0;
    AccessibilityUtilitiesLibraryCore_frameworkLibrary_3 = _sl_dlopen();
    Class v2 = (void *)v4[0];
    if (!AccessibilityUtilitiesLibraryCore_frameworkLibrary_3)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AXSettings");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    Class v2 = (void *)__getAXSettingsClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getAXSettingsClass_softClass_3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AccessibilityUtilitiesLibraryCore_block_invoke_3()
{
  uint64_t result = _sl_dlopen();
  AccessibilityUtilitiesLibraryCore_frameworkLibrary_3 = result;
  return result;
}

void OUTLINED_FUNCTION_0_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

__CFString *AXCFormattedString(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v10 = a1;
  id v11 = a2;
  v19[1] = &a9;
  id v12 = [NSString alloc];
  id v13 = [MEMORY[0x1E4F1CA20] autoupdatingCurrentLocale];
  v19[0] = 0;
  os_log_type_t v14 = (void *)[v12 initWithValidatedFormat:v10 validFormatSpecifiers:v11 locale:v13 arguments:&a9 error:v19];
  id v15 = v19[0];

  if (v15)
  {
    uint64_t v16 = AXLogCommon();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138412802;
      id v21 = v15;
      __int16 v22 = 2112;
      id v23 = v10;
      __int16 v24 = 2112;
      id v25 = v11;
      _os_log_fault_impl(&dword_18FC6C000, v16, OS_LOG_TYPE_FAULT, "Error creating string: %@ [%@/%@]", buf, 0x20u);
    }

    uint64_t v17 = &stru_1EDF601D0;
  }
  else
  {
    uint64_t v17 = v14;
  }

  return v17;
}

id AXCLanguageCanonicalFormToGeneralLanguage(void *a1)
{
  return AXCLanguageCanonicalFormToGeneralLanguageUsingFallback(a1, 1);
}

id AXCLanguageCanonicalFormToGeneralLanguageUsingFallback(void *a1, int a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = v3;
  if (a2)
  {
    uint64_t v5 = AXCRemapLanguageCodeToFallbackIfNeccessary(v3);

    id v4 = (void *)v5;
  }
  uint64_t v6 = [v4 lowercaseString];

  uint64_t v7 = AXCLanguageToLocales();
  int v8 = [v7 objectForKeyedSubscript:v6];

  if (v8)
  {
    id v9 = v8;

    uint64_t v6 = v9;
  }
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v10 = [&unk_1EDF6B058 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v19;
    while (2)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v19 != v12) {
          objc_enumerationMutation(&unk_1EDF6B058);
        }
        uint64_t v14 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        if ([v6 rangeOfString:v14] != 0x7FFFFFFFFFFFFFFFLL)
        {
          objc_msgSend(v6, "substringToIndex:", objc_msgSend(v6, "rangeOfString:", v14));
          id v15 = (id)objc_claimAutoreleasedReturnValue();
          goto LABEL_15;
        }
      }
      uint64_t v11 = [&unk_1EDF6B058 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v11) {
        continue;
      }
      break;
    }
  }
  id v15 = v6;
LABEL_15:
  uint64_t v16 = v15;

  return v16;
}

id AXCRemapLanguageCodeToFallbackIfNeccessary(void *a1)
{
  id v1 = a1;
  Class v2 = AXCLanguageToFallbacks();
  id v3 = [v1 lowercaseString];
  id v4 = [v2 objectForKey:v3];

  if (!v4) {
    id v4 = v1;
  }

  return v4;
}

__CFString *AXCLanguageConvertToCanonicalForm(void *a1)
{
  id v1 = a1;
  if (![v1 length])
  {
    id v4 = (__CFString *)v1;
    uint64_t v6 = v4;
    goto LABEL_27;
  }
  Class v2 = AXCRemapLanguageCodeToFallbackIfNeccessary(v1);

  id v3 = AXCLanguageToLocales();
  id v4 = [v2 stringByReplacingOccurrencesOfString:@"_" withString:@"-"];

  uint64_t v5 = [(__CFString *)v4 lowercaseString];
  uint64_t v6 = [v3 objectForKey:v5];
  if (!v6)
  {
    uint64_t v7 = [(__CFString *)v4 rangeOfString:@"-"];
    if (v7 == 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v6 = v4;
      if (!v6) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v8 = v7;
      id v9 = [(__CFString *)v4 substringToIndex:v7];
      uint64_t v10 = [(__CFString *)v4 substringFromIndex:v8 + 1];
      uint64_t v11 = [v10 uppercaseString];
      uint64_t v6 = [v9 stringByAppendingFormat:@"-%@", v11];

      if (!v6) {
        goto LABEL_16;
      }
    }
  }
  if ((![v5 isEqualToString:@"zh"]
     || ([(__CFString *)v6 hasPrefix:@"zh"] & 1) == 0)
    && (![v5 isEqualToString:@"pt"]
     || ([(__CFString *)v6 hasPrefix:@"pt"] & 1) == 0)
    && (![v5 isEqualToString:@"fr"]
     || ([(__CFString *)v6 hasPrefix:@"fr"] & 1) == 0)
    && (![v5 isEqualToString:@"en"]
     || ![(__CFString *)v6 hasPrefix:@"en"]))
  {
    goto LABEL_26;
  }
LABEL_16:
  int v12 = [v5 isEqualToString:@"zh"];
  CFArrayRef v13 = CFLocaleCopyPreferredLanguages();
  uint64_t v14 = [(__CFArray *)v13 firstObject];
  if (!v12)
  {

    if (v14)
    {
      uint64_t v16 = [(__CFString *)v14 lowercaseString];
      uint64_t v17 = [v3 objectForKeyedSubscript:v16];
      if (!v17)
      {
LABEL_23:

        goto LABEL_25;
      }
      long long v18 = (void *)v17;
      long long v19 = [(__CFString *)v14 lowercaseString];
      int v20 = [v19 hasPrefix:v5];

      if (v20)
      {
        uint64_t v16 = v6;
        uint64_t v6 = v14;
        goto LABEL_23;
      }
    }
LABEL_25:

    goto LABEL_26;
  }

  id v15 = [(__CFString *)v14 stringByReplacingOccurrencesOfString:@"-Hans" withString:&stru_1EDF601D0];

  uint64_t v14 = [v15 stringByReplacingOccurrencesOfString:@"-Hant" withString:&stru_1EDF601D0];

  if (([(__CFString *)v14 hasPrefix:@"zh"] & 1) == 0)
  {
    uint64_t v6 = @"zh-CN";
    goto LABEL_25;
  }
  uint64_t v6 = v14;
LABEL_26:

LABEL_27:
  return v6;
}

id AXCLocString(void *a1)
{
  id v1 = a1;
  Class v2 = AXCBundle();
  id v3 = [v2 localizedStringForKey:v1 value:v1 table:@"AXCoreUtilities"];

  return v3;
}

id AXFormatNumber(void *a1)
{
  uint64_t v1 = AXFormatNumber__AXNumberFormatterOnceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&AXFormatNumber__AXNumberFormatterOnceToken, &__block_literal_global_21);
  }
  id v3 = [(id)AXFormatNumber__AXNumberFormatter stringFromNumber:v2];

  return v3;
}

uint64_t __AXFormatNumber_block_invoke()
{
  AXFormatNumber__AXNumberFormatter = (uint64_t)objc_alloc_init(MEMORY[0x1E4F28EE0]);
  return MEMORY[0x1F41817F8]();
}

id AXFormatNumberWithOptions(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  id v7 = a1;
  if (AXFormatNumberWithOptions__AXNumberFormatterWithOptionsOnceToken != -1) {
    dispatch_once(&AXFormatNumberWithOptions__AXNumberFormatterWithOptionsOnceToken, &__block_literal_global_2_1);
  }
  if (a4)
  {
    [(id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions setNumberStyle:3];
    [(id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions _setUsesCharacterDirection:1];
    goto LABEL_12;
  }
  [v7 floatValue];
  if (v8 < 1.0)
  {
    [v7 floatValue];
    if (a2 <= 0 && v9 <= -1.0) {
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v10 = (void *)AXFormatNumberWithOptions__AXNumberFormatterWithOptions;
    uint64_t v11 = 1;
    goto LABEL_11;
  }
  if (a2 >= 1) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v10 = (void *)AXFormatNumberWithOptions__AXNumberFormatterWithOptions;
  uint64_t v11 = 0;
LABEL_11:
  [v10 setNumberStyle:v11];
LABEL_12:
  [(id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions setMinimumFractionDigits:a3];
  [(id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions setMaximumFractionDigits:a2];
  int v12 = [(id)AXFormatNumberWithOptions__AXNumberFormatterWithOptions stringFromNumber:v7];

  return v12;
}

void __AXFormatNumberWithOptions_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28EE0]);
  uint64_t v1 = (void *)AXFormatNumberWithOptions__AXNumberFormatterWithOptions;
  AXFormatNumberWithOptions__AXNumberFormatterWithOptions = (uint64_t)v0;

  id v2 = (void *)AXFormatNumberWithOptions__AXNumberFormatterWithOptions;
  id v3 = [MEMORY[0x1E4F1CA20] currentLocale];
  [v2 setLocale:v3];
}

id AXFormatInteger(uint64_t a1)
{
  uint64_t v1 = [NSNumber numberWithInteger:a1];
  id v2 = AXFormatNumber(v1);

  return v2;
}

id AXFormatFloat(uint64_t a1)
{
  id v2 = objc_msgSend(NSNumber, "numberWithFloat:");
  id v3 = AXFormatNumberWithOptions(v2, a1, 0, 0);

  return v3;
}

id AXFormatFloatWithPercentage(uint64_t a1)
{
  id v2 = objc_msgSend(NSNumber, "numberWithFloat:");
  id v3 = AXFormatNumberWithOptions(v2, a1, 0, 1);

  return v3;
}

id AXFormatByteSize(uint64_t a1)
{
  float v2 = (float)a1;
  id v3 = AXCLocString(@"size.bytes.format");
  if (a1 >= 1025)
  {
    float v2 = v2 * 0.00097656;
    if (v2 >= 1024.0)
    {
      float v2 = v2 * 0.00097656;
      if (v2 >= 1024.0)
      {
        float v2 = v2 * 0.00097656;
        id v4 = @"size.gigabytes.format";
      }
      else
      {
        id v4 = @"size.megabytes.format";
      }
    }
    else
    {
      id v4 = @"size.kilobytes.format";
    }
    uint64_t v5 = AXCLocString(v4);

    id v3 = (void *)v5;
  }
  uint64_t v6 = objc_msgSend(NSString, "stringWithFormat:", v3, v2);

  return v6;
}

id AXFormatMagnificationFactor(float a1)
{
  float v2 = NSString;
  id v3 = AXCLocString(@"magnification.factor.format");
  *(float *)&double v4 = a1;
  uint64_t v5 = [NSNumber numberWithFloat:v4];
  uint64_t v6 = AXFormatNumberWithOptions(v5, 1, 1, 0);
  id v7 = objc_msgSend(v2, "stringWithFormat:", v3, v6);

  return v7;
}

id AXFormatLocalizedPlaybackSpeedFactor(float a1)
{
  float v2 = NSString;
  id v3 = AXCLocString(@"playback.speed.factor.format");
  *(float *)&double v4 = a1;
  uint64_t v5 = [NSNumber numberWithFloat:v4];
  uint64_t v6 = AXFormatNumberWithOptions(v5, 1, 0, 0);
  id v7 = objc_msgSend(v2, "stringWithFormat:", v3, v6);

  return v7;
}

uint64_t AXIntegerValueFromString(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    float v2 = [MEMORY[0x1E4F28E78] string];
    id v3 = [MEMORY[0x1E4F28FE8] localizedScannerWithString:v1];
    if (([v3 isAtEnd] & 1) == 0)
    {
      do
      {
        double v4 = [MEMORY[0x1E4F28B88] decimalDigitCharacterSet];
        id v9 = 0;
        int v5 = [v3 scanCharactersFromSet:v4 intoString:&v9];
        id v6 = v9;

        if (v5) {
          [v2 appendString:v6];
        }
        else {
          objc_msgSend(v3, "setScanLocation:", objc_msgSend(v3, "scanLocation") + 1);
        }
      }
      while (![v3 isAtEnd]);
    }
    if ([v2 length]) {
      uint64_t v7 = [v2 integerValue];
    }
    else {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id AXDescriptionForHeadingInDegrees(int a1, double a2)
{
  for (double i = a2; i < 0.0; double i = i + 360.0)
    ;
  for (; i > 360.0; double i = i + -360.0)
    ;
  double v4 = @"DIRECTION_NORTH";
  if (i >= 22.0)
  {
    if (i >= 67.0)
    {
      if (i >= 112.0)
      {
        if (i >= 157.0)
        {
          if (i >= 202.0)
          {
            if (i >= 247.0)
            {
              if (i >= 292.0)
              {
                if (i < 337.0) {
                  double v4 = @"DIRECTION_NORTHWEST";
                }
              }
              else
              {
                double v4 = @"DIRECTION_WEST";
              }
            }
            else
            {
              double v4 = @"DIRECTION_SOUTHWEST";
            }
          }
          else
          {
            double v4 = @"DIRECTION_SOUTH";
          }
        }
        else
        {
          double v4 = @"DIRECTION_SOUTHEAST";
        }
      }
      else
      {
        double v4 = @"DIRECTION_EAST";
      }
    }
    else
    {
      double v4 = @"DIRECTION_NORTHEAST";
    }
  }
  AXCLocString(v4);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  id v6 = v5;
  if (a1)
  {
    uint64_t v7 = NSString;
    float v8 = AXCLocString(@"degrees.format");
    LODWORD(v9) = llround(i);
    uint64_t v10 = objc_msgSend(v7, "localizedStringWithFormat:", v8, v9, v5);

    uint64_t v11 = NSString;
    int v12 = AXCLocString(@"compass.heading.format");
    id v6 = objc_msgSend(v11, "localizedStringWithFormat:", v12, v10, v5);
  }
  return v6;
}

void _AXAssertIsMainThread()
{
  id v0 = [MEMORY[0x1E4F29060] currentThread];
  char v1 = [v0 isMainThread];

  if ((v1 & 1) == 0)
  {
    float v2 = AXLogCommon();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      _AXAssertIsMainThread_cold_1(v2, v3, v4, v5, v6, v7, v8, v9);
    }
  }
}

void _AXAssertIsThread(void *a1)
{
  char v1 = (void *)MEMORY[0x1E4F29060];
  id v2 = a1;
  uint64_t v3 = [v1 currentThread];
  char v4 = [v3 isEqual:v2];

  if ((v4 & 1) == 0)
  {
    uint64_t v5 = AXLogCommon();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      _AXAssertIsThread_cold_1(v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
}

void _AXAssertIsThreadNamed(void *a1)
{
  char v1 = (void *)MEMORY[0x1E4F29060];
  id v2 = a1;
  uint64_t v3 = [v1 currentThread];
  char v4 = [v3 name];
  char v5 = [v4 isEqualToString:v2];

  if ((v5 & 1) == 0)
  {
    uint64_t v6 = AXLogCommon();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      _AXAssertIsThread_cold_1(v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }
}

void AXPerformBlockSynchronouslyOnMainThread(void *a1)
{
  char v1 = (void *)MEMORY[0x1E4F29060];
  dispatch_block_t block = a1;
  if ([v1 isMainThread]) {
    block[2]();
  }
  else {
    dispatch_sync(MEMORY[0x1E4F14428], block);
  }
}

uint64_t AXSetThreadPriority(int a1)
{
  sched_param v7 = 0;
  int v6 = 0;
  id v2 = pthread_self();
  pthread_getschedparam(v2, &v6, &v7);
  uint64_t sched_priority = v7.sched_priority;
  v7.uint64_t sched_priority = a1;
  char v4 = pthread_self();
  pthread_setschedparam(v4, 2, &v7);
  return sched_priority;
}

void OUTLINED_FUNCTION_0_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

__CFString *AXSystemRootDirectory()
{
  return @"/";
}

uint64_t AXAccessibilityBundlesDirectory()
{
  return [@"/" stringByAppendingPathComponent:@"System/Library/AccessibilityBundles"];
}

id AXCBundle()
{
  id v0 = (void *)AXCBundle_CUBundle;
  if (!AXCBundle_CUBundle)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.accessibility.AXCoreUtilities"];
    id v2 = (void *)AXCBundle_CUBundle;
    AXCBundle_CUBundle = v1;

    id v0 = (void *)AXCBundle_CUBundle;
  }
  return v0;
}

id AXCLanguageToCanonicalPlistPath()
{
  id v0 = AXCBundle();
  uint64_t v1 = [v0 pathForResource:@"AXLanguageToLocale" ofType:@"plist"];

  return v1;
}

id AXCLanguageFallbackPlistPath()
{
  id v0 = AXCBundle();
  uint64_t v1 = [v0 pathForResource:@"AXLanguageToFallback" ofType:@"plist"];

  return v1;
}

id AXCLanguageToLocales()
{
  if (AXCLanguageToLocales_onceToken != -1) {
    dispatch_once(&AXCLanguageToLocales_onceToken, &__block_literal_global_22);
  }
  id v0 = (void *)AXCLanguageToLocales_LanguageToLangLocale;
  return v0;
}

void __AXCLanguageToLocales_block_invoke()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
  AXCLanguageToCanonicalPlistPath();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 initWithContentsOfFile:v3];
  id v2 = (void *)AXCLanguageToLocales_LanguageToLangLocale;
  AXCLanguageToLocales_LanguageToLangLocale = v1;
}

id AXCLanguageToFallbacks()
{
  if (AXCLanguageToFallbacks_onceToken != -1) {
    dispatch_once(&AXCLanguageToFallbacks_onceToken, &__block_literal_global_19);
  }
  id v0 = (void *)AXCLanguageToFallbacks_LanguageToFallback;
  return v0;
}

void __AXCLanguageToFallbacks_block_invoke()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
  AXCLanguageFallbackPlistPath();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 initWithContentsOfFile:v3];
  id v2 = (void *)AXCLanguageToFallbacks_LanguageToFallback;
  AXCLanguageToFallbacks_LanguageToFallback = v1;
}

uint64_t AXAccessibilityMacCatalystBundlesDirectory()
{
  return [@"/" stringByAppendingPathComponent:@"System/iOSSupport/System/Library/AccessibilityBundles"];
}

void AXBackgroundLog(void *a1, os_log_type_t a2, void *a3)
{
  char v5 = a1;
  id v6 = a3;
  if (os_log_type_enabled(v5, a2))
  {
    if (_AXBackgroundLoggingQueue_onceToken[0] != -1) {
      dispatch_once(_AXBackgroundLoggingQueue_onceToken, &__block_literal_global_490);
    }
    sched_param v7 = _AXBackgroundLoggingQueue__queue;
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __AXBackgroundLog_block_invoke;
    block[3] = &unk_1E5673770;
    id v10 = v6;
    uint64_t v9 = v5;
    os_log_type_t v11 = a2;
    dispatch_async(v7, block);
  }
}

uint64_t __AXBackgroundLog_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 48));
}

id AXLogCommon()
{
  if (AXLogCommon_onceToken != -1) {
    dispatch_once(&AXLogCommon_onceToken, &__block_literal_global_23);
  }
  id v0 = (void *)AXLogCommon___logObj;
  return v0;
}

uint64_t __AXLogCommon_block_invoke()
{
  AXLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXCommon");
  return MEMORY[0x1F41817F8]();
}

id AXSupportLogCommon()
{
  if (AXSupportLogCommon_onceToken != -1) {
    dispatch_once(&AXSupportLogCommon_onceToken, &__block_literal_global_4_0);
  }
  id v0 = (void *)AXSupportLogCommon___logObj;
  return v0;
}

uint64_t __AXSupportLogCommon_block_invoke()
{
  AXSupportLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSupportCommon");
  return MEMORY[0x1F41817F8]();
}

id AXRuntimeLogCommon()
{
  if (AXRuntimeLogCommon_onceToken != -1) {
    dispatch_once(&AXRuntimeLogCommon_onceToken, &__block_literal_global_7_0);
  }
  id v0 = (void *)AXRuntimeLogCommon___logObj;
  return v0;
}

uint64_t __AXRuntimeLogCommon_block_invoke()
{
  AXRuntimeLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRuntimeCommon");
  return MEMORY[0x1F41817F8]();
}

uint64_t __AXRuntimeLogPID_block_invoke()
{
  AXRuntimeLogPID___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRuntimePID");
  return MEMORY[0x1F41817F8]();
}

uint64_t __AXRuntimeLogNotifications_block_invoke()
{
  AXRuntimeLogNotifications___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRuntimeNotifications");
  return MEMORY[0x1F41817F8]();
}

id AXRuntimeLogSerialization()
{
  if (AXRuntimeLogSerialization_onceToken != -1) {
    dispatch_once(&AXRuntimeLogSerialization_onceToken, &__block_literal_global_16);
  }
  id v0 = (void *)AXRuntimeLogSerialization___logObj;
  return v0;
}

uint64_t __AXRuntimeLogSerialization_block_invoke()
{
  AXRuntimeLogSerialization___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRuntimeSerialization");
  return MEMORY[0x1F41817F8]();
}

id AXRuntimeLogElementFetcher()
{
  if (AXRuntimeLogElementFetcher_onceToken != -1) {
    dispatch_once(&AXRuntimeLogElementFetcher_onceToken, &__block_literal_global_19_0);
  }
  id v0 = (void *)AXRuntimeLogElementFetcher___logObj;
  return v0;
}

uint64_t __AXRuntimeLogElementFetcher_block_invoke()
{
  AXRuntimeLogElementFetcher___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRuntimeElementFetcher");
  return MEMORY[0x1F41817F8]();
}

id AXTTSLogCommon()
{
  if (AXTTSLogCommon_onceToken != -1) {
    dispatch_once(&AXTTSLogCommon_onceToken, &__block_literal_global_22);
  }
  id v0 = (void *)AXTTSLogCommon___logObj;
  return v0;
}

uint64_t __AXTTSLogCommon_block_invoke()
{
  AXTTSLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTTSCommon");
  return MEMORY[0x1F41817F8]();
}

id AXTTSLogRange()
{
  if (AXTTSLogRange_onceToken != -1) {
    dispatch_once(&AXTTSLogRange_onceToken, &__block_literal_global_25);
  }
  id v0 = (void *)AXTTSLogRange___logObj;
  return v0;
}

uint64_t __AXTTSLogRange_block_invoke()
{
  AXTTSLogRange___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTTSRange");
  return MEMORY[0x1F41817F8]();
}

id AXTTSLogVoiceBank()
{
  if (AXTTSLogVoiceBank_onceToken != -1) {
    dispatch_once(&AXTTSLogVoiceBank_onceToken, &__block_literal_global_28);
  }
  id v0 = (void *)AXTTSLogVoiceBank___logObj;
  return v0;
}

uint64_t __AXTTSLogVoiceBank_block_invoke()
{
  AXTTSLogVoiceBank___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "TTSVB");
  return MEMORY[0x1F41817F8]();
}

id AXTTSLogResourceManager()
{
  if (AXTTSLogResourceManager_onceToken != -1) {
    dispatch_once(&AXTTSLogResourceManager_onceToken, &__block_literal_global_31_0);
  }
  id v0 = (void *)AXTTSLogResourceManager___logObj;
  return v0;
}

uint64_t __AXTTSLogResourceManager_block_invoke()
{
  AXTTSLogResourceManager___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTTSResourceManager");
  return MEMORY[0x1F41817F8]();
}

id AXTTSLogResourceMigration()
{
  if (AXTTSLogResourceMigration_onceToken != -1) {
    dispatch_once(&AXTTSLogResourceMigration_onceToken, &__block_literal_global_34_0);
  }
  id v0 = (void *)AXTTSLogResourceMigration___logObj;
  return v0;
}

uint64_t __AXTTSLogResourceMigration_block_invoke()
{
  AXTTSLogResourceMigration___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTTSResourceMigration");
  return MEMORY[0x1F41817F8]();
}

id AXTTSLogKona()
{
  if (AXTTSLogKona_onceToken != -1) {
    dispatch_once(&AXTTSLogKona_onceToken, &__block_literal_global_37);
  }
  id v0 = (void *)AXTTSLogKona___logObj;
  return v0;
}

uint64_t __AXTTSLogKona_block_invoke()
{
  AXTTSLogKona___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTTSKona");
  return MEMORY[0x1F41817F8]();
}

id AXLogEventTap()
{
  if (AXLogEventTap_onceToken != -1) {
    dispatch_once(&AXLogEventTap_onceToken, &__block_literal_global_40_0);
  }
  id v0 = (void *)AXLogEventTap___logObj;
  return v0;
}

uint64_t __AXLogEventTap_block_invoke()
{
  AXLogEventTap___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXEventTap");
  return MEMORY[0x1F41817F8]();
}

id AXLogIPC()
{
  if (AXLogIPC_onceToken != -1) {
    dispatch_once(&AXLogIPC_onceToken, &__block_literal_global_43);
  }
  id v0 = (void *)AXLogIPC___logObj;
  return v0;
}

uint64_t __AXLogIPC_block_invoke()
{
  AXLogIPC___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXIPC");
  return MEMORY[0x1F41817F8]();
}

id AXLogDisplay()
{
  if (AXLogDisplay_onceToken != -1) {
    dispatch_once(&AXLogDisplay_onceToken, &__block_literal_global_46_0);
  }
  id v0 = (void *)AXLogDisplay___logObj;
  return v0;
}

uint64_t __AXLogDisplay_block_invoke()
{
  AXLogDisplay___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXDisplay");
  return MEMORY[0x1F41817F8]();
}

id AXLogUserInterfaceService()
{
  if (AXLogUserInterfaceService_onceToken != -1) {
    dispatch_once(&AXLogUserInterfaceService_onceToken, &__block_literal_global_49_2);
  }
  id v0 = (void *)AXLogUserInterfaceService___logObj;
  return v0;
}

uint64_t __AXLogUserInterfaceService_block_invoke()
{
  AXLogUserInterfaceService___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUserInterfaceService");
  return MEMORY[0x1F41817F8]();
}

id AXLogUIViewService()
{
  if (AXLogUIViewService_onceToken != -1) {
    dispatch_once(&AXLogUIViewService_onceToken, &__block_literal_global_52_0);
  }
  id v0 = (void *)AXLogUIViewService___logObj;
  return v0;
}

uint64_t __AXLogUIViewService_block_invoke()
{
  AXLogUIViewService___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUIViewService");
  return MEMORY[0x1F41817F8]();
}

id AXLogBrokenHomeButton()
{
  if (AXLogBrokenHomeButton_onceToken != -1) {
    dispatch_once(&AXLogBrokenHomeButton_onceToken, &__block_literal_global_55_0);
  }
  id v0 = (void *)AXLogBrokenHomeButton___logObj;
  return v0;
}

uint64_t __AXLogBrokenHomeButton_block_invoke()
{
  AXLogBrokenHomeButton___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXBrokenHomeButton");
  return MEMORY[0x1F41817F8]();
}

id AXLogMIDI()
{
  if (AXLogMIDI_onceToken != -1) {
    dispatch_once(&AXLogMIDI_onceToken, &__block_literal_global_58);
  }
  id v0 = (void *)AXLogMIDI___logObj;
  return v0;
}

uint64_t __AXLogMIDI_block_invoke()
{
  AXLogMIDI___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMIDI");
  return MEMORY[0x1F41817F8]();
}

id AXLogDataMigrator()
{
  if (AXLogDataMigrator_onceToken != -1) {
    dispatch_once(&AXLogDataMigrator_onceToken, &__block_literal_global_61);
  }
  id v0 = (void *)AXLogDataMigrator___logObj;
  return v0;
}

uint64_t __AXLogDataMigrator_block_invoke()
{
  AXLogDataMigrator___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXDataMigrator");
  return MEMORY[0x1F41817F8]();
}

id AXLogDragging()
{
  if (AXLogDragging_onceToken != -1) {
    dispatch_once(&AXLogDragging_onceToken, &__block_literal_global_64);
  }
  id v0 = (void *)AXLogDragging___logObj;
  return v0;
}

uint64_t __AXLogDragging_block_invoke()
{
  AXLogDragging___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXDragging");
  return MEMORY[0x1F41817F8]();
}

id AXLogSettings()
{
  if (AXLogSettings_onceToken != -1) {
    dispatch_once(&AXLogSettings_onceToken, &__block_literal_global_67_0);
  }
  id v0 = (void *)AXLogSettings___logObj;
  return v0;
}

uint64_t __AXLogSettings_block_invoke()
{
  AXLogSettings___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSettings");
  return MEMORY[0x1F41817F8]();
}

id AXLogSiriShortcuts()
{
  if (AXLogSiriShortcuts_onceToken != -1) {
    dispatch_once(&AXLogSiriShortcuts_onceToken, &__block_literal_global_70);
  }
  id v0 = (void *)AXLogSiriShortcuts___logObj;
  return v0;
}

uint64_t __AXLogSiriShortcuts_block_invoke()
{
  AXLogSiriShortcuts___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSiriShortcuts");
  return MEMORY[0x1F41817F8]();
}

id AXLogAssertions()
{
  if (AXLogAssertions_onceToken != -1) {
    dispatch_once(&AXLogAssertions_onceToken, &__block_literal_global_73);
  }
  id v0 = (void *)AXLogAssertions___logObj;
  return v0;
}

uint64_t __AXLogAssertions_block_invoke()
{
  AXLogAssertions___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAssertions");
  return MEMORY[0x1F41817F8]();
}

id AXLogTimeProfile()
{
  if (AXLogTimeProfile_onceToken != -1) {
    dispatch_once(&AXLogTimeProfile_onceToken, &__block_literal_global_76);
  }
  id v0 = (void *)AXLogTimeProfile___logObj;
  return v0;
}

uint64_t __AXLogTimeProfile_block_invoke()
{
  AXLogTimeProfile___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTimeProfile");
  return MEMORY[0x1F41817F8]();
}

id AXLogMemoryProfile()
{
  if (AXLogMemoryProfile_onceToken != -1) {
    dispatch_once(&AXLogMemoryProfile_onceToken, &__block_literal_global_79);
  }
  id v0 = (void *)AXLogMemoryProfile___logObj;
  return v0;
}

uint64_t __AXLogMemoryProfile_block_invoke()
{
  AXLogMemoryProfile___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMemoryProfile");
  return MEMORY[0x1F41817F8]();
}

id AXLogLookingGlass()
{
  if (AXLogLookingGlass_onceToken != -1) {
    dispatch_once(&AXLogLookingGlass_onceToken, &__block_literal_global_82);
  }
  id v0 = (void *)AXLogLookingGlass___logObj;
  return v0;
}

uint64_t __AXLogLookingGlass_block_invoke()
{
  AXLogLookingGlass___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXLookingGlass");
  return MEMORY[0x1F41817F8]();
}

id AXLogLookingGlassUI()
{
  if (AXLogLookingGlassUI_onceToken != -1) {
    dispatch_once(&AXLogLookingGlassUI_onceToken, &__block_literal_global_85);
  }
  id v0 = (void *)AXLogLookingGlassUI___logObj;
  return v0;
}

uint64_t __AXLogLookingGlassUI_block_invoke()
{
  AXLogLookingGlassUI___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXLookingGlassUI");
  return MEMORY[0x1F41817F8]();
}

id AXLogAccessories()
{
  if (AXLogAccessories_onceToken != -1) {
    dispatch_once(&AXLogAccessories_onceToken, &__block_literal_global_88);
  }
  id v0 = (void *)AXLogAccessories___logObj;
  return v0;
}

uint64_t __AXLogAccessories_block_invoke()
{
  AXLogAccessories___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAccessories");
  return MEMORY[0x1F41817F8]();
}

id AXLogUI()
{
  if (AXLogUI_onceToken != -1) {
    dispatch_once(&AXLogUI_onceToken, &__block_literal_global_91);
  }
  id v0 = (void *)AXLogUI___logObj;
  return v0;
}

uint64_t __AXLogUI_block_invoke()
{
  AXLogUI___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUI");
  return MEMORY[0x1F41817F8]();
}

id AXLogBackboardServer()
{
  if (AXLogBackboardServer_onceToken[0] != -1) {
    dispatch_once(AXLogBackboardServer_onceToken, &__block_literal_global_94);
  }
  id v0 = (void *)AXLogBackboardServer___logObj;
  return v0;
}

uint64_t __AXLogBackboardServer_block_invoke()
{
  AXLogBackboardServer___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXBackboardServer");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpringboardServer()
{
  if (AXLogSpringboardServer_onceToken != -1) {
    dispatch_once(&AXLogSpringboardServer_onceToken, &__block_literal_global_97);
  }
  id v0 = (void *)AXLogSpringboardServer___logObj;
  return v0;
}

uint64_t __AXLogSpringboardServer_block_invoke()
{
  AXLogSpringboardServer___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpringboardServer");
  return MEMORY[0x1F41817F8]();
}

id AXLogSystemApp()
{
  if (AXLogSystemApp_onceToken != -1) {
    dispatch_once(&AXLogSystemApp_onceToken, &__block_literal_global_100);
  }
  id v0 = (void *)AXLogSystemApp___logObj;
  return v0;
}

uint64_t __AXLogSystemApp_block_invoke()
{
  AXLogSystemApp___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSystemApp");
  return MEMORY[0x1F41817F8]();
}

id AXLogPhysicalInteraction()
{
  if (AXLogPhysicalInteraction_onceToken != -1) {
    dispatch_once(&AXLogPhysicalInteraction_onceToken, &__block_literal_global_103_0);
  }
  id v0 = (void *)AXLogPhysicalInteraction___logObj;
  return v0;
}

uint64_t __AXLogPhysicalInteraction_block_invoke()
{
  AXLogPhysicalInteraction___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXPhysicalInteraction");
  return MEMORY[0x1F41817F8]();
}

id AXLogAudioRouting()
{
  if (AXLogAudioRouting_onceToken != -1) {
    dispatch_once(&AXLogAudioRouting_onceToken, &__block_literal_global_106);
  }
  id v0 = (void *)AXLogAudioRouting___logObj;
  return v0;
}

uint64_t __AXLogAudioRouting_block_invoke()
{
  AXLogAudioRouting___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAudioRouting");
  return MEMORY[0x1F41817F8]();
}

id ASTLogCommon()
{
  if (ASTLogCommon_onceToken != -1) {
    dispatch_once(&ASTLogCommon_onceToken, &__block_literal_global_109);
  }
  id v0 = (void *)ASTLogCommon___logObj;
  return v0;
}

uint64_t __ASTLogCommon_block_invoke()
{
  ASTLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "ASTCommon");
  return MEMORY[0x1F41817F8]();
}

id ASTLogMouse()
{
  if (ASTLogMouse_onceToken != -1) {
    dispatch_once(&ASTLogMouse_onceToken, &__block_literal_global_112);
  }
  id v0 = (void *)ASTLogMouse___logObj;
  return v0;
}

uint64_t __ASTLogMouse_block_invoke()
{
  ASTLogMouse___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "ASTMouse");
  return MEMORY[0x1F41817F8]();
}

id AXLogAggregate()
{
  if (AXLogAggregate_onceToken != -1) {
    dispatch_once(&AXLogAggregate_onceToken, &__block_literal_global_115);
  }
  id v0 = (void *)AXLogAggregate___logObj;
  return v0;
}

uint64_t __AXLogAggregate_block_invoke()
{
  AXLogAggregate___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAggregate");
  return MEMORY[0x1F41817F8]();
}

uint64_t __AXLogUIA_block_invoke()
{
  AXLogUIA___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUIA");
  return MEMORY[0x1F41817F8]();
}

id AXLogLocCaptionPanel()
{
  if (AXLogLocCaptionPanel_onceToken != -1) {
    dispatch_once(&AXLogLocCaptionPanel_onceToken, &__block_literal_global_121);
  }
  id v0 = (void *)AXLogLocCaptionPanel___logObj;
  return v0;
}

uint64_t __AXLogLocCaptionPanel_block_invoke()
{
  AXLogLocCaptionPanel___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXLocCaptionPanel");
  return MEMORY[0x1F41817F8]();
}

id AXLogContextKit()
{
  if (AXLogContextKit_onceToken != -1) {
    dispatch_once(&AXLogContextKit_onceToken, &__block_literal_global_124);
  }
  id v0 = (void *)AXLogContextKit___logObj;
  return v0;
}

uint64_t __AXLogContextKit_block_invoke()
{
  AXLogContextKit___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXContextKit");
  return MEMORY[0x1F41817F8]();
}

id AXLogPronunciations()
{
  if (AXLogPronunciations_onceToken != -1) {
    dispatch_once(&AXLogPronunciations_onceToken, &__block_literal_global_127);
  }
  id v0 = (void *)AXLogPronunciations___logObj;
  return v0;
}

uint64_t __AXLogPronunciations_block_invoke()
{
  AXLogPronunciations___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXPronunciations");
  return MEMORY[0x1F41817F8]();
}

id AXLogBrailleHW()
{
  if (AXLogBrailleHW_onceToken != -1) {
    dispatch_once(&AXLogBrailleHW_onceToken, &__block_literal_global_130);
  }
  id v0 = (void *)AXLogBrailleHW___logObj;
  return v0;
}

uint64_t __AXLogBrailleHW_block_invoke()
{
  AXLogBrailleHW___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXBrailleHW");
  return MEMORY[0x1F41817F8]();
}

id AXLogBluetooth()
{
  if (AXLogBluetooth_onceToken != -1) {
    dispatch_once(&AXLogBluetooth_onceToken, &__block_literal_global_133);
  }
  id v0 = (void *)AXLogBluetooth___logObj;
  return v0;
}

uint64_t __AXLogBluetooth_block_invoke()
{
  AXLogBluetooth___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXBluetooth");
  return MEMORY[0x1F41817F8]();
}

id AXLogFocusEngine()
{
  if (AXLogFocusEngine_onceToken != -1) {
    dispatch_once(&AXLogFocusEngine_onceToken, &__block_literal_global_136);
  }
  id v0 = (void *)AXLogFocusEngine___logObj;
  return v0;
}

uint64_t __AXLogFocusEngine_block_invoke()
{
  AXLogFocusEngine___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXFocusEngine");
  return MEMORY[0x1F41817F8]();
}

id AXLogSoundBoard()
{
  if (AXLogSoundBoard_onceToken != -1) {
    dispatch_once(&AXLogSoundBoard_onceToken, &__block_literal_global_139);
  }
  id v0 = (void *)AXLogSoundBoard___logObj;
  return v0;
}

uint64_t __AXLogSoundBoard_block_invoke()
{
  AXLogSoundBoard___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSoundBoard");
  return MEMORY[0x1F41817F8]();
}

id FKALogCommon()
{
  if (FKALogCommon_onceToken != -1) {
    dispatch_once(&FKALogCommon_onceToken, &__block_literal_global_142);
  }
  id v0 = (void *)FKALogCommon___logObj;
  return v0;
}

uint64_t __FKALogCommon_block_invoke()
{
  FKALogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "FKACommon");
  return MEMORY[0x1F41817F8]();
}

id GAXLogCommon()
{
  if (GAXLogCommon_onceToken != -1) {
    dispatch_once(&GAXLogCommon_onceToken, &__block_literal_global_145);
  }
  id v0 = (void *)GAXLogCommon___logObj;
  return v0;
}

uint64_t __GAXLogCommon_block_invoke()
{
  GAXLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "GAXCommon");
  return MEMORY[0x1F41817F8]();
}

id GAXLogTimeRestrictions()
{
  if (GAXLogTimeRestrictions_onceToken != -1) {
    dispatch_once(&GAXLogTimeRestrictions_onceToken, &__block_literal_global_148);
  }
  id v0 = (void *)GAXLogTimeRestrictions___logObj;
  return v0;
}

uint64_t __GAXLogTimeRestrictions_block_invoke()
{
  GAXLogTimeRestrictions___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "GAXTimeRestrictions");
  return MEMORY[0x1F41817F8]();
}

id GAXLogIntegrity()
{
  if (GAXLogIntegrity_onceToken != -1) {
    dispatch_once(&GAXLogIntegrity_onceToken, &__block_literal_global_151);
  }
  id v0 = (void *)GAXLogIntegrity___logObj;
  return v0;
}

uint64_t __GAXLogIntegrity_block_invoke()
{
  GAXLogIntegrity___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "GAXIntegrity");
  return MEMORY[0x1F41817F8]();
}

id GAXLogAppLaunching()
{
  if (GAXLogAppLaunching_onceToken != -1) {
    dispatch_once(&GAXLogAppLaunching_onceToken, &__block_literal_global_154);
  }
  id v0 = (void *)GAXLogAppLaunching___logObj;
  return v0;
}

uint64_t __GAXLogAppLaunching_block_invoke()
{
  GAXLogAppLaunching___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "GAXAppLaunching");
  return MEMORY[0x1F41817F8]();
}

id GAXLogBlockedTouches()
{
  if (GAXLogBlockedTouches_onceToken != -1) {
    dispatch_once(&GAXLogBlockedTouches_onceToken, &__block_literal_global_157);
  }
  id v0 = (void *)GAXLogBlockedTouches___logObj;
  return v0;
}

uint64_t __GAXLogBlockedTouches_block_invoke()
{
  GAXLogBlockedTouches___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "GAXBlockedTouches");
  return MEMORY[0x1F41817F8]();
}

id AXLogInvertColors()
{
  if (AXLogInvertColors_onceToken != -1) {
    dispatch_once(&AXLogInvertColors_onceToken, &__block_literal_global_160);
  }
  id v0 = (void *)AXLogInvertColors___logObj;
  return v0;
}

uint64_t __AXLogInvertColors_block_invoke()
{
  AXLogInvertColors___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXInvertColors");
  return MEMORY[0x1F41817F8]();
}

id AXLogInvertColorsTraversal()
{
  if (AXLogInvertColorsTraversal_onceToken != -1) {
    dispatch_once(&AXLogInvertColorsTraversal_onceToken, &__block_literal_global_163);
  }
  id v0 = (void *)AXLogInvertColorsTraversal___logObj;
  return v0;
}

uint64_t __AXLogInvertColorsTraversal_block_invoke()
{
  AXLogInvertColorsTraversal___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXInvertColorsTraversal");
  return MEMORY[0x1F41817F8]();
}

id AXLogInvertColorsLoadBundles()
{
  if (AXLogInvertColorsLoadBundles_onceToken != -1) {
    dispatch_once(&AXLogInvertColorsLoadBundles_onceToken, &__block_literal_global_166);
  }
  id v0 = (void *)AXLogInvertColorsLoadBundles___logObj;
  return v0;
}

uint64_t __AXLogInvertColorsLoadBundles_block_invoke()
{
  AXLogInvertColorsLoadBundles___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXInvertColorsLoadBundles");
  return MEMORY[0x1F41817F8]();
}

id AXLogMuseAccessibility()
{
  if (AXLogMuseAccessibility_onceToken != -1) {
    dispatch_once(&AXLogMuseAccessibility_onceToken, &__block_literal_global_169);
  }
  id v0 = (void *)AXLogMuseAccessibility___logObj;
  return v0;
}

uint64_t __AXLogMuseAccessibility_block_invoke()
{
  AXLogMuseAccessibility___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMuseAccessibility");
  return MEMORY[0x1F41817F8]();
}

id AXLogAppAccessibility()
{
  if (AXLogAppAccessibility_onceToken != -1) {
    dispatch_once(&AXLogAppAccessibility_onceToken, &__block_literal_global_172);
  }
  id v0 = (void *)AXLogAppAccessibility___logObj;
  return v0;
}

uint64_t __AXLogAppAccessibility_block_invoke()
{
  AXLogAppAccessibility___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAppAccessibility");
  return MEMORY[0x1F41817F8]();
}

id AXLogAppCompareGeometry()
{
  if (AXLogAppCompareGeometry_onceToken != -1) {
    dispatch_once(&AXLogAppCompareGeometry_onceToken, &__block_literal_global_175);
  }
  id v0 = (void *)AXLogAppCompareGeometry___logObj;
  return v0;
}

uint64_t __AXLogAppCompareGeometry_block_invoke()
{
  AXLogAppCompareGeometry___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAppCompareGeometry");
  return MEMORY[0x1F41817F8]();
}

id AXLogValidations()
{
  if (AXLogValidations_onceToken != -1) {
    dispatch_once(&AXLogValidations_onceToken, &__block_literal_global_178);
  }
  id v0 = (void *)AXLogValidations___logObj;
  return v0;
}

uint64_t __AXLogValidations_block_invoke()
{
  AXLogValidations___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXValidations");
  return MEMORY[0x1F41817F8]();
}

id AXLogValidationRunner()
{
  if (AXLogValidationRunner_onceToken != -1) {
    dispatch_once(&AXLogValidationRunner_onceToken, &__block_literal_global_181);
  }
  id v0 = (void *)AXLogValidationRunner___logObj;
  return v0;
}

uint64_t __AXLogValidationRunner_block_invoke()
{
  AXLogValidationRunner___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXValidationRunner");
  return MEMORY[0x1F41817F8]();
}

id AXLogElementTraversal()
{
  if (AXLogElementTraversal_onceToken != -1) {
    dispatch_once(&AXLogElementTraversal_onceToken, &__block_literal_global_184);
  }
  id v0 = (void *)AXLogElementTraversal___logObj;
  return v0;
}

uint64_t __AXLogElementTraversal_block_invoke()
{
  AXLogElementTraversal___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXElementTraversal");
  return MEMORY[0x1F41817F8]();
}

id AXLogFirstElement()
{
  if (AXLogFirstElement_onceToken != -1) {
    dispatch_once(&AXLogFirstElement_onceToken, &__block_literal_global_187);
  }
  id v0 = (void *)AXLogFirstElement___logObj;
  return v0;
}

uint64_t __AXLogFirstElement_block_invoke()
{
  AXLogFirstElement___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXFirstElement");
  return MEMORY[0x1F41817F8]();
}

id AXLogHitTest()
{
  if (AXLogHitTest_onceToken != -1) {
    dispatch_once(&AXLogHitTest_onceToken, &__block_literal_global_190);
  }
  id v0 = (void *)AXLogHitTest___logObj;
  return v0;
}

uint64_t __AXLogHitTest_block_invoke()
{
  AXLogHitTest___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXHitTest");
  return MEMORY[0x1F41817F8]();
}

id AXLogScrollToVisible()
{
  if (AXLogScrollToVisible_onceToken != -1) {
    dispatch_once(&AXLogScrollToVisible_onceToken, &__block_literal_global_193);
  }
  id v0 = (void *)AXLogScrollToVisible___logObj;
  return v0;
}

uint64_t __AXLogScrollToVisible_block_invoke()
{
  AXLogScrollToVisible___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXScrollToVisible");
  return MEMORY[0x1F41817F8]();
}

id AXLogVisibleFrame()
{
  if (AXLogVisibleFrame_onceToken != -1) {
    dispatch_once(&AXLogVisibleFrame_onceToken, &__block_literal_global_196);
  }
  id v0 = (void *)AXLogVisibleFrame___logObj;
  return v0;
}

uint64_t __AXLogVisibleFrame_block_invoke()
{
  AXLogVisibleFrame___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXVisibleFrame");
  return MEMORY[0x1F41817F8]();
}

id AXLogOpaqueElements()
{
  if (AXLogOpaqueElements_onceToken != -1) {
    dispatch_once(&AXLogOpaqueElements_onceToken, &__block_literal_global_199);
  }
  id v0 = (void *)AXLogOpaqueElements___logObj;
  return v0;
}

uint64_t __AXLogOpaqueElements_block_invoke()
{
  AXLogOpaqueElements___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXOpaqueElements");
  return MEMORY[0x1F41817F8]();
}

id AXLogLoading()
{
  if (AXLogLoading_onceToken != -1) {
    dispatch_once(&AXLogLoading_onceToken, &__block_literal_global_202);
  }
  id v0 = (void *)AXLogLoading___logObj;
  return v0;
}

uint64_t __AXLogLoading_block_invoke()
{
  AXLogLoading___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXLoading");
  return MEMORY[0x1F41817F8]();
}

id AXLogVectorKit()
{
  if (AXLogVectorKit_onceToken != -1) {
    dispatch_once(&AXLogVectorKit_onceToken, &__block_literal_global_205);
  }
  id v0 = (void *)AXLogVectorKit___logObj;
  return v0;
}

uint64_t __AXLogVectorKit_block_invoke()
{
  AXLogVectorKit___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXVectorKit");
  return MEMORY[0x1F41817F8]();
}

id AXLogRemoteElement()
{
  if (AXLogRemoteElement_onceToken != -1) {
    dispatch_once(&AXLogRemoteElement_onceToken, &__block_literal_global_208);
  }
  id v0 = (void *)AXLogRemoteElement___logObj;
  return v0;
}

uint64_t __AXLogRemoteElement_block_invoke()
{
  AXLogRemoteElement___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRemoteElement");
  return MEMORY[0x1F41817F8]();
}

id AXLogEscape()
{
  if (AXLogEscape_onceToken != -1) {
    dispatch_once(&AXLogEscape_onceToken, &__block_literal_global_211);
  }
  id v0 = (void *)AXLogEscape___logObj;
  return v0;
}

uint64_t __AXLogEscape_block_invoke()
{
  AXLogEscape___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXEscape");
  return MEMORY[0x1F41817F8]();
}

id MAGLogCommon()
{
  if (MAGLogCommon_onceToken != -1) {
    dispatch_once(&MAGLogCommon_onceToken, &__block_literal_global_214);
  }
  id v0 = (void *)MAGLogCommon___logObj;
  return v0;
}

uint64_t __MAGLogCommon_block_invoke()
{
  MAGLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "MAGCommon");
  return MEMORY[0x1F41817F8]();
}

id MAGLogBrightness()
{
  if (MAGLogBrightness_onceToken != -1) {
    dispatch_once(&MAGLogBrightness_onceToken, &__block_literal_global_217);
  }
  id v0 = (void *)MAGLogBrightness___logObj;
  return v0;
}

uint64_t __MAGLogBrightness_block_invoke()
{
  MAGLogBrightness___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "MAGBrightness");
  return MEMORY[0x1F41817F8]();
}

id AXLogMotionCues()
{
  if (AXLogMotionCues_onceToken != -1) {
    dispatch_once(&AXLogMotionCues_onceToken, &__block_literal_global_220);
  }
  id v0 = (void *)AXLogMotionCues___logObj;
  return v0;
}

uint64_t __AXLogMotionCues_block_invoke()
{
  AXLogMotionCues___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMotionCues");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpeechAssetDownload()
{
  if (AXLogSpeechAssetDownload_onceToken != -1) {
    dispatch_once(&AXLogSpeechAssetDownload_onceToken, &__block_literal_global_223_0);
  }
  id v0 = (void *)AXLogSpeechAssetDownload___logObj;
  return v0;
}

uint64_t __AXLogSpeechAssetDownload_block_invoke()
{
  AXLogSpeechAssetDownload___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpeechAssetDownload");
  return MEMORY[0x1F41817F8]();
}

id AXLogCharacterVoices()
{
  if (AXLogCharacterVoices_onceToken != -1) {
    dispatch_once(&AXLogCharacterVoices_onceToken, &__block_literal_global_226);
  }
  id v0 = (void *)AXLogCharacterVoices___logObj;
  return v0;
}

uint64_t __AXLogCharacterVoices_block_invoke()
{
  AXLogCharacterVoices___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXCharacterVoices");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpeechSynthesis()
{
  if (AXLogSpeechSynthesis_onceToken != -1) {
    dispatch_once(&AXLogSpeechSynthesis_onceToken, &__block_literal_global_229_0);
  }
  id v0 = (void *)AXLogSpeechSynthesis___logObj;
  return v0;
}

uint64_t __AXLogSpeechSynthesis_block_invoke()
{
  AXLogSpeechSynthesis___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpeechSynthesis");
  return MEMORY[0x1F41817F8]();
}

id AXLogOrator()
{
  if (AXLogOrator_onceToken != -1) {
    dispatch_once(&AXLogOrator_onceToken, &__block_literal_global_232);
  }
  id v0 = (void *)AXLogOrator___logObj;
  return v0;
}

uint64_t __AXLogOrator_block_invoke()
{
  AXLogOrator___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXOrator");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpeakSelection()
{
  if (AXLogSpeakSelection_onceToken != -1) {
    dispatch_once(&AXLogSpeakSelection_onceToken, &__block_literal_global_235_0);
  }
  id v0 = (void *)AXLogSpeakSelection___logObj;
  return v0;
}

uint64_t __AXLogSpeakSelection_block_invoke()
{
  AXLogSpeakSelection___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpeakSelection");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpeakTyping()
{
  if (AXLogSpeakTyping_onceToken != -1) {
    dispatch_once(&AXLogSpeakTyping_onceToken, &__block_literal_global_238);
  }
  id v0 = (void *)AXLogSpeakTyping___logObj;
  return v0;
}

uint64_t __AXLogSpeakTyping_block_invoke()
{
  AXLogSpeakTyping___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpeakTyping");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpeakScreen()
{
  if (AXLogSpeakScreen_onceToken != -1) {
    dispatch_once(&AXLogSpeakScreen_onceToken, &__block_literal_global_241_0);
  }
  id v0 = (void *)AXLogSpeakScreen___logObj;
  return v0;
}

uint64_t __AXLogSpeakScreen_block_invoke()
{
  AXLogSpeakScreen___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpeakScreen");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpeakFingerManager()
{
  if (AXLogSpeakFingerManager_onceToken != -1) {
    dispatch_once(&AXLogSpeakFingerManager_onceToken, &__block_literal_global_244);
  }
  id v0 = (void *)AXLogSpeakFingerManager___logObj;
  return v0;
}

uint64_t __AXLogSpeakFingerManager_block_invoke()
{
  AXLogSpeakFingerManager___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpeakFingerManager");
  return MEMORY[0x1F41817F8]();
}

id AXLogSpokenContentTextProcessing()
{
  if (AXLogSpokenContentTextProcessing_onceToken != -1) {
    dispatch_once(&AXLogSpokenContentTextProcessing_onceToken, &__block_literal_global_247);
  }
  id v0 = (void *)AXLogSpokenContentTextProcessing___logObj;
  return v0;
}

uint64_t __AXLogSpokenContentTextProcessing_block_invoke()
{
  AXLogSpokenContentTextProcessing___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSpokenContentTextProcessing");
  return MEMORY[0x1F41817F8]();
}

id SWCHLogCommon()
{
  if (SWCHLogCommon_onceToken != -1) {
    dispatch_once(&SWCHLogCommon_onceToken, &__block_literal_global_250);
  }
  id v0 = (void *)SWCHLogCommon___logObj;
  return v0;
}

uint64_t __SWCHLogCommon_block_invoke()
{
  SWCHLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "SWCHCommon");
  return MEMORY[0x1F41817F8]();
}

id SWCHLogElementNav()
{
  if (SWCHLogElementNav_onceToken != -1) {
    dispatch_once(&SWCHLogElementNav_onceToken, &__block_literal_global_253_0);
  }
  id v0 = (void *)SWCHLogElementNav___logObj;
  return v0;
}

uint64_t __SWCHLogElementNav_block_invoke()
{
  SWCHLogElementNav___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "SWCHElementNav");
  return MEMORY[0x1F41817F8]();
}

id SWCHLogPauseResume()
{
  if (SWCHLogPauseResume_onceToken != -1) {
    dispatch_once(&SWCHLogPauseResume_onceToken, &__block_literal_global_256);
  }
  id v0 = (void *)SWCHLogPauseResume___logObj;
  return v0;
}

uint64_t __SWCHLogPauseResume_block_invoke()
{
  SWCHLogPauseResume___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "SWCHPauseResume");
  return MEMORY[0x1F41817F8]();
}

id SWCHLogHW()
{
  if (SWCHLogHW_onceToken != -1) {
    dispatch_once(&SWCHLogHW_onceToken, &__block_literal_global_259);
  }
  id v0 = (void *)SWCHLogHW___logObj;
  return v0;
}

uint64_t __SWCHLogHW_block_invoke()
{
  SWCHLogHW___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "SWCHHW");
  return MEMORY[0x1F41817F8]();
}

id SWCHLogMenu()
{
  if (SWCHLogMenu_onceToken != -1) {
    dispatch_once(&SWCHLogMenu_onceToken, &__block_literal_global_262_0);
  }
  id v0 = (void *)SWCHLogMenu___logObj;
  return v0;
}

uint64_t __SWCHLogMenu_block_invoke()
{
  SWCHLogMenu___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "SWCHMenu");
  return MEMORY[0x1F41817F8]();
}

id AXLogTapticTime()
{
  if (AXLogTapticTime_onceToken != -1) {
    dispatch_once(&AXLogTapticTime_onceToken, &__block_literal_global_265);
  }
  id v0 = (void *)AXLogTapticTime___logObj;
  return v0;
}

uint64_t __AXLogTapticTime_block_invoke()
{
  AXLogTapticTime___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTapticTime");
  return MEMORY[0x1F41817F8]();
}

id AXLogTouchAccommodations()
{
  if (AXLogTouchAccommodations_onceToken != -1) {
    dispatch_once(&AXLogTouchAccommodations_onceToken, &__block_literal_global_268_0);
  }
  id v0 = (void *)AXLogTouchAccommodations___logObj;
  return v0;
}

uint64_t __AXLogTouchAccommodations_block_invoke()
{
  AXLogTouchAccommodations___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTouchAccommodations");
  return MEMORY[0x1F41817F8]();
}

id AXLogIDS()
{
  if (AXLogIDS_onceToken != -1) {
    dispatch_once(&AXLogIDS_onceToken, &__block_literal_global_271);
  }
  id v0 = (void *)AXLogIDS___logObj;
  return v0;
}

uint64_t __AXLogIDS_block_invoke()
{
  AXLogIDS___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXIDS");
  return MEMORY[0x1F41817F8]();
}

id VOTLogCommon()
{
  if (VOTLogCommon_onceToken != -1) {
    dispatch_once(&VOTLogCommon_onceToken, &__block_literal_global_274_1);
  }
  id v0 = (void *)VOTLogCommon___logObj;
  return v0;
}

uint64_t __VOTLogCommon_block_invoke()
{
  VOTLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTCommon");
  return MEMORY[0x1F41817F8]();
}

id VOTLogLayoutChange()
{
  if (VOTLogLayoutChange_onceToken != -1) {
    dispatch_once(&VOTLogLayoutChange_onceToken, &__block_literal_global_277);
  }
  id v0 = (void *)VOTLogLayoutChange___logObj;
  return v0;
}

uint64_t __VOTLogLayoutChange_block_invoke()
{
  VOTLogLayoutChange___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTLayoutChange");
  return MEMORY[0x1F41817F8]();
}

id VOTLogHandwriting()
{
  if (VOTLogHandwriting_onceToken != -1) {
    dispatch_once(&VOTLogHandwriting_onceToken, &__block_literal_global_280_0);
  }
  id v0 = (void *)VOTLogHandwriting___logObj;
  return v0;
}

uint64_t __VOTLogHandwriting_block_invoke()
{
  VOTLogHandwriting___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTHandwriting");
  return MEMORY[0x1F41817F8]();
}

id VOTLogSpeech()
{
  if (VOTLogSpeech_onceToken != -1) {
    dispatch_once(&VOTLogSpeech_onceToken, &__block_literal_global_283);
  }
  id v0 = (void *)VOTLogSpeech___logObj;
  return v0;
}

uint64_t __VOTLogSpeech_block_invoke()
{
  VOTLogSpeech___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTSpeech");
  return MEMORY[0x1F41817F8]();
}

id VOTLogICloud()
{
  if (VOTLogICloud_onceToken != -1) {
    dispatch_once(&VOTLogICloud_onceToken, &__block_literal_global_286_0);
  }
  id v0 = (void *)VOTLogICloud___logObj;
  return v0;
}

uint64_t __VOTLogICloud_block_invoke()
{
  VOTLogICloud___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTICloud");
  return MEMORY[0x1F41817F8]();
}

id VOTLogAudio()
{
  if (VOTLogAudio_onceToken != -1) {
    dispatch_once(&VOTLogAudio_onceToken, &__block_literal_global_289);
  }
  id v0 = (void *)VOTLogAudio___logObj;
  return v0;
}

uint64_t __VOTLogAudio_block_invoke()
{
  VOTLogAudio___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTAudio");
  return MEMORY[0x1F41817F8]();
}

id VOTLogElement()
{
  if (VOTLogElement_onceToken != -1) {
    dispatch_once(&VOTLogElement_onceToken, &__block_literal_global_292);
  }
  id v0 = (void *)VOTLogElement___logObj;
  return v0;
}

uint64_t __VOTLogElement_block_invoke()
{
  VOTLogElement___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTElement");
  return MEMORY[0x1F41817F8]();
}

id VOTLogEvent()
{
  if (VOTLogEvent_onceToken != -1) {
    dispatch_once(&VOTLogEvent_onceToken, &__block_literal_global_295);
  }
  id v0 = (void *)VOTLogEvent___logObj;
  return v0;
}

uint64_t __VOTLogEvent_block_invoke()
{
  VOTLogEvent___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTEvent");
  return MEMORY[0x1F41817F8]();
}

id VOTLogBraille()
{
  if (VOTLogBraille_onceToken != -1) {
    dispatch_once(&VOTLogBraille_onceToken, &__block_literal_global_298);
  }
  id v0 = (void *)VOTLogBraille___logObj;
  return v0;
}

uint64_t __VOTLogBraille_block_invoke()
{
  VOTLogBraille___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTBraille");
  return MEMORY[0x1F41817F8]();
}

id VOTLogBrailleGestures()
{
  if (VOTLogBrailleGestures_onceToken != -1) {
    dispatch_once(&VOTLogBrailleGestures_onceToken, &__block_literal_global_301);
  }
  id v0 = (void *)VOTLogBrailleGestures___logObj;
  return v0;
}

uint64_t __VOTLogBrailleGestures_block_invoke()
{
  VOTLogBrailleGestures___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTBrailleGestures");
  return MEMORY[0x1F41817F8]();
}

id VOTLogNotifications()
{
  if (VOTLogNotifications_onceToken != -1) {
    dispatch_once(&VOTLogNotifications_onceToken, &__block_literal_global_304_0);
  }
  id v0 = (void *)VOTLogNotifications___logObj;
  return v0;
}

uint64_t __VOTLogNotifications_block_invoke()
{
  VOTLogNotifications___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTNotifications");
  return MEMORY[0x1F41817F8]();
}

id VOTLogKeyboard()
{
  if (VOTLogKeyboard_onceToken != -1) {
    dispatch_once(&VOTLogKeyboard_onceToken, &__block_literal_global_307_0);
  }
  id v0 = (void *)VOTLogKeyboard___logObj;
  return v0;
}

uint64_t __VOTLogKeyboard_block_invoke()
{
  VOTLogKeyboard___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTKeyboard");
  return MEMORY[0x1F41817F8]();
}

id VOTLogTVFocus()
{
  if (VOTLogTVFocus_onceToken != -1) {
    dispatch_once(&VOTLogTVFocus_onceToken, &__block_literal_global_310);
  }
  id v0 = (void *)VOTLogTVFocus___logObj;
  return v0;
}

uint64_t __VOTLogTVFocus_block_invoke()
{
  VOTLogTVFocus___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTTVFocus");
  return MEMORY[0x1F41817F8]();
}

id VOTLogTVExplorer()
{
  if (VOTLogTVExplorer_onceToken != -1) {
    dispatch_once(&VOTLogTVExplorer_onceToken, &__block_literal_global_313);
  }
  id v0 = (void *)VOTLogTVExplorer___logObj;
  return v0;
}

uint64_t __VOTLogTVExplorer_block_invoke()
{
  VOTLogTVExplorer___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTTVExplorer");
  return MEMORY[0x1F41817F8]();
}

id VOTLogIAP()
{
  if (VOTLogIAP_onceToken != -1) {
    dispatch_once(&VOTLogIAP_onceToken, &__block_literal_global_316);
  }
  id v0 = (void *)VOTLogIAP___logObj;
  return v0;
}

uint64_t __VOTLogIAP_block_invoke()
{
  VOTLogIAP___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTIAP");
  return MEMORY[0x1F41817F8]();
}

id VOTLogLifeCycle()
{
  if (VOTLogLifeCycle_onceToken != -1) {
    dispatch_once(&VOTLogLifeCycle_onceToken, &__block_literal_global_319);
  }
  id v0 = (void *)VOTLogLifeCycle___logObj;
  return v0;
}

uint64_t __VOTLogLifeCycle_block_invoke()
{
  VOTLogLifeCycle___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTLifeCycle");
  return MEMORY[0x1F41817F8]();
}

id VOTLogMagicTap()
{
  if (VOTLogMagicTap_onceToken != -1) {
    dispatch_once(&VOTLogMagicTap_onceToken, &__block_literal_global_322);
  }
  id v0 = (void *)VOTLogMagicTap___logObj;
  return v0;
}

uint64_t __VOTLogMagicTap_block_invoke()
{
  VOTLogMagicTap___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTMagicTap");
  return MEMORY[0x1F41817F8]();
}

id VOTLogRotor()
{
  if (VOTLogRotor_onceToken != -1) {
    dispatch_once(&VOTLogRotor_onceToken, &__block_literal_global_325);
  }
  id v0 = (void *)VOTLogRotor___logObj;
  return v0;
}

uint64_t __VOTLogRotor_block_invoke()
{
  VOTLogRotor___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTRotor");
  return MEMORY[0x1F41817F8]();
}

id VOTLogQuickSettings()
{
  if (VOTLogQuickSettings_onceToken != -1) {
    dispatch_once(&VOTLogQuickSettings_onceToken, &__block_literal_global_328);
  }
  id v0 = (void *)VOTLogQuickSettings___logObj;
  return v0;
}

uint64_t __VOTLogQuickSettings_block_invoke()
{
  VOTLogQuickSettings___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTQuickSettings");
  return MEMORY[0x1F41817F8]();
}

id VOTLogSimpleTap()
{
  if (VOTLogSimpleTap_onceToken != -1) {
    dispatch_once(&VOTLogSimpleTap_onceToken, &__block_literal_global_331);
  }
  id v0 = (void *)VOTLogSimpleTap___logObj;
  return v0;
}

uint64_t __VOTLogSimpleTap_block_invoke()
{
  VOTLogSimpleTap___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTSimpleTap");
  return MEMORY[0x1F41817F8]();
}

id AXLogPunctuationStorage()
{
  if (AXLogPunctuationStorage_onceToken != -1) {
    dispatch_once(&AXLogPunctuationStorage_onceToken, &__block_literal_global_334);
  }
  id v0 = (void *)AXLogPunctuationStorage___logObj;
  return v0;
}

uint64_t __AXLogPunctuationStorage_block_invoke()
{
  AXLogPunctuationStorage___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXPunctuationStorage");
  return MEMORY[0x1F41817F8]();
}

id VOTLogActivities()
{
  if (VOTLogActivities_onceToken != -1) {
    dispatch_once(&VOTLogActivities_onceToken, &__block_literal_global_337_0);
  }
  id v0 = (void *)VOTLogActivities___logObj;
  return v0;
}

uint64_t __VOTLogActivities_block_invoke()
{
  VOTLogActivities___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTActivities");
  return MEMORY[0x1F41817F8]();
}

id VOTLogWebPageMovement()
{
  if (VOTLogWebPageMovement_onceToken != -1) {
    dispatch_once(&VOTLogWebPageMovement_onceToken, &__block_literal_global_340);
  }
  id v0 = (void *)VOTLogWebPageMovement___logObj;
  return v0;
}

uint64_t __VOTLogWebPageMovement_block_invoke()
{
  VOTLogWebPageMovement___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTWebPageMovement");
  return MEMORY[0x1F41817F8]();
}

id VOTLogCommands()
{
  if (VOTLogCommands_onceToken != -1) {
    dispatch_once(&VOTLogCommands_onceToken, &__block_literal_global_343);
  }
  id v0 = (void *)VOTLogCommands___logObj;
  return v0;
}

uint64_t __VOTLogCommands_block_invoke()
{
  VOTLogCommands___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTCommands");
  return MEMORY[0x1F41817F8]();
}

id VOTLogImageExplorer()
{
  if (VOTLogImageExplorer_onceToken != -1) {
    dispatch_once(&VOTLogImageExplorer_onceToken, &__block_literal_global_346);
  }
  id v0 = (void *)VOTLogImageExplorer___logObj;
  return v0;
}

uint64_t __VOTLogImageExplorer_block_invoke()
{
  VOTLogImageExplorer___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "VOTImageExplorer");
  return MEMORY[0x1F41817F8]();
}

id AXLogVisualAlerts()
{
  if (AXLogVisualAlerts_onceToken != -1) {
    dispatch_once(&AXLogVisualAlerts_onceToken, &__block_literal_global_349);
  }
  id v0 = (void *)AXLogVisualAlerts___logObj;
  return v0;
}

uint64_t __AXLogVisualAlerts_block_invoke()
{
  AXLogVisualAlerts___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXVisualAlerts");
  return MEMORY[0x1F41817F8]();
}

uint64_t __AXLogRTT_block_invoke()
{
  AXLogRTT___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXRTT");
  return MEMORY[0x1F41817F8]();
}

id AXLogUltron()
{
  if (AXLogUltron_onceToken != -1) {
    dispatch_once(&AXLogUltron_onceToken, &__block_literal_global_355);
  }
  id v0 = (void *)AXLogUltron___logObj;
  return v0;
}

uint64_t __AXLogUltron_block_invoke()
{
  AXLogUltron___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUltron");
  return MEMORY[0x1F41817F8]();
}

id AXLogUltronKShot()
{
  if (AXLogUltronKShot_onceToken != -1) {
    dispatch_once(&AXLogUltronKShot_onceToken, &__block_literal_global_358);
  }
  id v0 = (void *)AXLogUltronKShot___logObj;
  return v0;
}

uint64_t __AXLogUltronKShot_block_invoke()
{
  AXLogUltronKShot___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUltronKShot");
  return MEMORY[0x1F41817F8]();
}

id AXLogAudiogram()
{
  if (AXLogAudiogram_onceToken != -1) {
    dispatch_once(&AXLogAudiogram_onceToken, &__block_literal_global_361);
  }
  id v0 = (void *)AXLogAudiogram___logObj;
  return v0;
}

uint64_t __AXLogAudiogram_block_invoke()
{
  AXLogAudiogram___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAudiogram");
  return MEMORY[0x1F41817F8]();
}

id AXLogDisplayFilters()
{
  if (AXLogDisplayFilters_onceToken != -1) {
    dispatch_once(&AXLogDisplayFilters_onceToken, &__block_literal_global_364);
  }
  id v0 = (void *)AXLogDisplayFilters___logObj;
  return v0;
}

uint64_t __AXLogDisplayFilters_block_invoke()
{
  AXLogDisplayFilters___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXDisplayFilters");
  return MEMORY[0x1F41817F8]();
}

id ZOOMLogCommon()
{
  if (ZOOMLogCommon_onceToken != -1) {
    dispatch_once(&ZOOMLogCommon_onceToken, &__block_literal_global_367);
  }
  id v0 = (void *)ZOOMLogCommon___logObj;
  return v0;
}

uint64_t __ZOOMLogCommon_block_invoke()
{
  ZOOMLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "ZOOMCommon");
  return MEMORY[0x1F41817F8]();
}

id ZOOMLogEvents()
{
  if (ZOOMLogEvents_onceToken != -1) {
    dispatch_once(&ZOOMLogEvents_onceToken, &__block_literal_global_370);
  }
  id v0 = (void *)ZOOMLogEvents___logObj;
  return v0;
}

uint64_t __ZOOMLogEvents_block_invoke()
{
  ZOOMLogEvents___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "ZOOMEvents");
  return MEMORY[0x1F41817F8]();
}

id AXLogUnitTesting()
{
  if (AXLogUnitTesting_onceToken != -1) {
    dispatch_once(&AXLogUnitTesting_onceToken, &__block_literal_global_373);
  }
  id v0 = (void *)AXLogUnitTesting___logObj;
  return v0;
}

uint64_t __AXLogUnitTesting_block_invoke()
{
  AXLogUnitTesting___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXUnitTesting");
  return MEMORY[0x1F41817F8]();
}

id AXLogPerfTesting()
{
  if (AXLogPerfTesting_onceToken != -1) {
    dispatch_once(&AXLogPerfTesting_onceToken, &__block_literal_global_376);
  }
  id v0 = (void *)AXLogPerfTesting___logObj;
  return v0;
}

uint64_t __AXLogPerfTesting_block_invoke()
{
  AXLogPerfTesting___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXPerfTesting");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogCommon()
{
  if (AXMediaLogCommon_onceToken != -1) {
    dispatch_once(&AXMediaLogCommon_onceToken, &__block_literal_global_379);
  }
  id v0 = (void *)AXMediaLogCommon___logObj;
  return v0;
}

uint64_t __AXMediaLogCommon_block_invoke()
{
  AXMediaLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaCommon");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogSettings()
{
  if (AXMediaLogSettings_onceToken != -1) {
    dispatch_once(&AXMediaLogSettings_onceToken, &__block_literal_global_382);
  }
  id v0 = (void *)AXMediaLogSettings___logObj;
  return v0;
}

uint64_t __AXMediaLogSettings_block_invoke()
{
  AXMediaLogSettings___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaSettings");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogService()
{
  if (AXMediaLogService_onceToken != -1) {
    dispatch_once(&AXMediaLogService_onceToken, &__block_literal_global_385);
  }
  id v0 = (void *)AXMediaLogService___logObj;
  return v0;
}

uint64_t __AXMediaLogService_block_invoke()
{
  AXMediaLogService___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaService");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogEngineCache()
{
  if (AXMediaLogEngineCache_onceToken != -1) {
    dispatch_once(&AXMediaLogEngineCache_onceToken, &__block_literal_global_388);
  }
  id v0 = (void *)AXMediaLogEngineCache___logObj;
  return v0;
}

uint64_t __AXMediaLogEngineCache_block_invoke()
{
  AXMediaLogEngineCache___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaEngineCache");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogEnginePriority()
{
  if (AXMediaLogEnginePriority_onceToken != -1) {
    dispatch_once(&AXMediaLogEnginePriority_onceToken, &__block_literal_global_391);
  }
  id v0 = (void *)AXMediaLogEnginePriority___logObj;
  return v0;
}

uint64_t __AXMediaLogEnginePriority_block_invoke()
{
  AXMediaLogEnginePriority___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaEnginePriority");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogScreenGrab()
{
  if (AXMediaLogScreenGrab_onceToken != -1) {
    dispatch_once(&AXMediaLogScreenGrab_onceToken, &__block_literal_global_394);
  }
  id v0 = (void *)AXMediaLogScreenGrab___logObj;
  return v0;
}

uint64_t __AXMediaLogScreenGrab_block_invoke()
{
  AXMediaLogScreenGrab___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaScreenGrab");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogOCR()
{
  if (AXMediaLogOCR_onceToken != -1) {
    dispatch_once(&AXMediaLogOCR_onceToken, &__block_literal_global_397);
  }
  id v0 = (void *)AXMediaLogOCR___logObj;
  return v0;
}

uint64_t __AXMediaLogOCR_block_invoke()
{
  AXMediaLogOCR___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaOCR");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogMLElement()
{
  if (AXMediaLogMLElement_onceToken != -1) {
    dispatch_once(&AXMediaLogMLElement_onceToken, &__block_literal_global_400);
  }
  id v0 = (void *)AXMediaLogMLElement___logObj;
  return v0;
}

uint64_t __AXMediaLogMLElement_block_invoke()
{
  AXMediaLogMLElement___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaMLElement");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogTextProcessing()
{
  if (AXMediaLogTextProcessing_onceToken != -1) {
    dispatch_once(&AXMediaLogTextProcessing_onceToken, &__block_literal_global_403);
  }
  id v0 = (void *)AXMediaLogTextProcessing___logObj;
  return v0;
}

uint64_t __AXMediaLogTextProcessing_block_invoke()
{
  AXMediaLogTextProcessing___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaTextProcessing");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogElementVision()
{
  if (AXMediaLogElementVision_onceToken != -1) {
    dispatch_once(&AXMediaLogElementVision_onceToken, &__block_literal_global_406);
  }
  id v0 = (void *)AXMediaLogElementVision___logObj;
  return v0;
}

uint64_t __AXMediaLogElementVision_block_invoke()
{
  AXMediaLogElementVision___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaElementVision");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogTextLayout()
{
  if (AXMediaLogTextLayout_onceToken != -1) {
    dispatch_once(&AXMediaLogTextLayout_onceToken, &__block_literal_global_409);
  }
  id v0 = (void *)AXMediaLogTextLayout___logObj;
  return v0;
}

uint64_t __AXMediaLogTextLayout_block_invoke()
{
  AXMediaLogTextLayout___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaTextLayout");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogResults()
{
  if (AXMediaLogResults_onceToken != -1) {
    dispatch_once(&AXMediaLogResults_onceToken, &__block_literal_global_412);
  }
  id v0 = (void *)AXMediaLogResults___logObj;
  return v0;
}

uint64_t __AXMediaLogResults_block_invoke()
{
  AXMediaLogResults___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaResults");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogTracking()
{
  if (AXMediaLogTracking_onceToken != -1) {
    dispatch_once(&AXMediaLogTracking_onceToken, &__block_literal_global_415);
  }
  id v0 = (void *)AXMediaLogTracking___logObj;
  return v0;
}

uint64_t __AXMediaLogTracking_block_invoke()
{
  AXMediaLogTracking___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaTracking");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogOutput()
{
  if (AXMediaLogOutput_onceToken != -1) {
    dispatch_once(&AXMediaLogOutput_onceToken, &__block_literal_global_418);
  }
  id v0 = (void *)AXMediaLogOutput___logObj;
  return v0;
}

uint64_t __AXMediaLogOutput_block_invoke()
{
  AXMediaLogOutput___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaOutput");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogSpeech()
{
  if (AXMediaLogSpeech_onceToken != -1) {
    dispatch_once(&AXMediaLogSpeech_onceToken, &__block_literal_global_421);
  }
  id v0 = (void *)AXMediaLogSpeech___logObj;
  return v0;
}

uint64_t __AXMediaLogSpeech_block_invoke()
{
  AXMediaLogSpeech___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaSpeech");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogSounds()
{
  if (AXMediaLogSounds_onceToken != -1) {
    dispatch_once(&AXMediaLogSounds_onceToken, &__block_literal_global_424_0);
  }
  id v0 = (void *)AXMediaLogSounds___logObj;
  return v0;
}

uint64_t __AXMediaLogSounds_block_invoke()
{
  AXMediaLogSounds___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaSounds");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogHaptics()
{
  if (AXMediaLogHaptics_onceToken != -1) {
    dispatch_once(&AXMediaLogHaptics_onceToken, &__block_literal_global_427);
  }
  id v0 = (void *)AXMediaLogHaptics___logObj;
  return v0;
}

uint64_t __AXMediaLogHaptics_block_invoke()
{
  AXMediaLogHaptics___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaHaptics");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogCaptionDescriptions()
{
  if (AXMediaLogCaptionDescriptions_onceToken != -1) {
    dispatch_once(&AXMediaLogCaptionDescriptions_onceToken, &__block_literal_global_430);
  }
  id v0 = (void *)AXMediaLogCaptionDescriptions___logObj;
  return v0;
}

uint64_t __AXMediaLogCaptionDescriptions_block_invoke()
{
  AXMediaLogCaptionDescriptions___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaCaptionDescriptions");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogDiagnostics()
{
  if (AXMediaLogDiagnostics_onceToken != -1) {
    dispatch_once(&AXMediaLogDiagnostics_onceToken, &__block_literal_global_433);
  }
  id v0 = (void *)AXMediaLogDiagnostics___logObj;
  return v0;
}

uint64_t __AXMediaLogDiagnostics_block_invoke()
{
  AXMediaLogDiagnostics___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaDiagnostics");
  return MEMORY[0x1F41817F8]();
}

id AXMediaLogLanguageTranslation()
{
  if (AXMediaLogLanguageTranslation_onceToken != -1) {
    dispatch_once(&AXMediaLogLanguageTranslation_onceToken, &__block_literal_global_436);
  }
  id v0 = (void *)AXMediaLogLanguageTranslation___logObj;
  return v0;
}

uint64_t __AXMediaLogLanguageTranslation_block_invoke()
{
  AXMediaLogLanguageTranslation___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXMediaLanguageTranslation");
  return MEMORY[0x1F41817F8]();
}

id AXLogAirPodSettings()
{
  if (AXLogAirPodSettings_onceToken != -1) {
    dispatch_once(&AXLogAirPodSettings_onceToken, &__block_literal_global_439);
  }
  id v0 = (void *)AXLogAirPodSettings___logObj;
  return v0;
}

uint64_t __AXLogAirPodSettings_block_invoke()
{
  AXLogAirPodSettings___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAirPodSettings");
  return MEMORY[0x1F41817F8]();
}

uint64_t __AXLogAssetLoader_block_invoke()
{
  AXLogAssetLoader___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAssetLoader");
  return MEMORY[0x1F41817F8]();
}

uint64_t __AXLogAssetDaemon_block_invoke()
{
  AXLogAssetDaemon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAssetDaemon");
  return MEMORY[0x1F41817F8]();
}

id AXPlatformTranslationLogCommon()
{
  if (AXPlatformTranslationLogCommon_onceToken != -1) {
    dispatch_once(&AXPlatformTranslationLogCommon_onceToken, &__block_literal_global_448);
  }
  id v0 = (void *)AXPlatformTranslationLogCommon___logObj;
  return v0;
}

uint64_t __AXPlatformTranslationLogCommon_block_invoke()
{
  AXPlatformTranslationLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXPlatformTranslationCommon");
  return MEMORY[0x1F41817F8]();
}

id AXLogTemp()
{
  if (AXLogTemp_onceToken != -1) {
    dispatch_once(&AXLogTemp_onceToken, &__block_literal_global_451);
  }
  id v0 = (void *)AXLogTemp___logObj;
  return v0;
}

uint64_t __AXLogTemp_block_invoke()
{
  AXLogTemp___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTemp");
  return MEMORY[0x1F41817F8]();
}

id BRLLogTranslation()
{
  if (BRLLogTranslation_onceToken != -1) {
    dispatch_once(&BRLLogTranslation_onceToken, &__block_literal_global_454);
  }
  id v0 = (void *)BRLLogTranslation___logObj;
  return v0;
}

uint64_t __BRLLogTranslation_block_invoke()
{
  BRLLogTranslation___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "BRLTranslation");
  return MEMORY[0x1F41817F8]();
}

id AXLogBackTap()
{
  if (AXLogBackTap_onceToken != -1) {
    dispatch_once(&AXLogBackTap_onceToken, &__block_literal_global_457);
  }
  id v0 = (void *)AXLogBackTap___logObj;
  return v0;
}

uint64_t __AXLogBackTap_block_invoke()
{
  AXLogBackTap___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXBackTap");
  return MEMORY[0x1F41817F8]();
}

id AXLogSoundActions()
{
  if (AXLogSoundActions_onceToken != -1) {
    dispatch_once(&AXLogSoundActions_onceToken, &__block_literal_global_460);
  }
  id v0 = (void *)AXLogSoundActions___logObj;
  return v0;
}

uint64_t __AXLogSoundActions_block_invoke()
{
  AXLogSoundActions___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXSoundActions");
  return MEMORY[0x1F41817F8]();
}

id CLFLogCommon()
{
  if (CLFLogCommon_onceToken != -1) {
    dispatch_once(&CLFLogCommon_onceToken, &__block_literal_global_463);
  }
  id v0 = (void *)CLFLogCommon___logObj;
  return v0;
}

uint64_t __CLFLogCommon_block_invoke()
{
  CLFLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "CLFCommon");
  return MEMORY[0x1F41817F8]();
}

id CLFLogSettings()
{
  if (CLFLogSettings_onceToken != -1) {
    dispatch_once(&CLFLogSettings_onceToken, &__block_literal_global_466);
  }
  id v0 = (void *)CLFLogSettings___logObj;
  return v0;
}

uint64_t __CLFLogSettings_block_invoke()
{
  CLFLogSettings___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "CLFSettings");
  return MEMORY[0x1F41817F8]();
}

id HTLogCommon()
{
  if (HTLogCommon_onceToken != -1) {
    dispatch_once(&HTLogCommon_onceToken, &__block_literal_global_469);
  }
  id v0 = (void *)HTLogCommon___logObj;
  return v0;
}

uint64_t __HTLogCommon_block_invoke()
{
  HTLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "HTCommon");
  return MEMORY[0x1F41817F8]();
}

id LiveSpeechLogCommon()
{
  if (LiveSpeechLogCommon_onceToken != -1) {
    dispatch_once(&LiveSpeechLogCommon_onceToken, &__block_literal_global_472);
  }
  id v0 = (void *)LiveSpeechLogCommon___logObj;
  return v0;
}

uint64_t __LiveSpeechLogCommon_block_invoke()
{
  LiveSpeechLogCommon___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "LiveSpeechCommon");
  return MEMORY[0x1F41817F8]();
}

id AXLogLiveTranscription()
{
  if (AXLogLiveTranscription_onceToken != -1) {
    dispatch_once(&AXLogLiveTranscription_onceToken, &__block_literal_global_475);
  }
  id v0 = (void *)AXLogLiveTranscription___logObj;
  return v0;
}

uint64_t __AXLogLiveTranscription_block_invoke()
{
  AXLogLiveTranscription___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXLiveTranscription");
  return MEMORY[0x1F41817F8]();
}

id AXLogTwiceRemoteScreen()
{
  if (AXLogTwiceRemoteScreen_onceToken != -1) {
    dispatch_once(&AXLogTwiceRemoteScreen_onceToken, &__block_literal_global_478);
  }
  id v0 = (void *)AXLogTwiceRemoteScreen___logObj;
  return v0;
}

uint64_t __AXLogTwiceRemoteScreen_block_invoke()
{
  AXLogTwiceRemoteScreen___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXTwiceRemoteScreen");
  return MEMORY[0x1F41817F8]();
}

id AXLogHapticMusic()
{
  if (AXLogHapticMusic_onceToken != -1) {
    dispatch_once(&AXLogHapticMusic_onceToken, &__block_literal_global_481);
  }
  id v0 = (void *)AXLogHapticMusic___logObj;
  return v0;
}

uint64_t __AXLogHapticMusic_block_invoke()
{
  AXLogHapticMusic___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXHapticMusic");
  return MEMORY[0x1F41817F8]();
}

id AXLogAVS()
{
  if (AXLogAVS_onceToken != -1) {
    dispatch_once(&AXLogAVS_onceToken, &__block_literal_global_484);
  }
  id v0 = (void *)AXLogAVS___logObj;
  return v0;
}

uint64_t __AXLogAVS_block_invoke()
{
  AXLogAVS___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXAVS");
  return MEMORY[0x1F41817F8]();
}

id AXLogHearingTest()
{
  if (AXLogHearingTest_onceToken != -1) {
    dispatch_once(&AXLogHearingTest_onceToken, &__block_literal_global_487);
  }
  id v0 = (void *)AXLogHearingTest___logObj;
  return v0;
}

uint64_t __AXLogHearingTest_block_invoke()
{
  AXLogHearingTest___logObuint64_t j = (uint64_t)os_log_create("com.apple.Accessibility", "AXHearingTest");
  return MEMORY[0x1F41817F8]();
}

uint64_t _AXAccessQueuePerformBlockNoQueueingOrLocking(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void type metadata accessor for AXSVoiceOverBrailleGesturesSoundOption(uint64_t a1)
{
}

void type metadata accessor for AXSVoiceOverBrailleMode(uint64_t a1)
{
}

void type metadata accessor for AXSVoiceOverKeyboardModifierChoice(uint64_t a1)
{
}

void type metadata accessor for AXSVoiceOverNavigationStyle(uint64_t a1)
{
}

void type metadata accessor for AXSVoiceOverNumberFeedback(uint64_t a1)
{
}

void type metadata accessor for AXSVoiceOverFeedbackOption(uint64_t a1)
{
}

void type metadata accessor for AXMagnifierFilterSetIdentifier(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_18FC9E8F4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_18FC9E914(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for VoiceSelection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_18FC9E9A4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_18FC9E9C4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

unint64_t sub_18FC9EA18()
{
  unint64_t result = sub_18FCEF574((uint64_t)&unk_1EDF5DA38);
  qword_1E9270858 = result;
  return result;
}

unint64_t sub_18FC9EA40()
{
  unint64_t result = sub_18FCEF574((uint64_t)&unk_1EDF5DAF8);
  qword_1E9270850 = result;
  return result;
}

unint64_t sub_18FC9EA68()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926BF98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07470;
  *(void *)(inited + 32) = 1768841544;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = &unk_1EDF5DC18;
  *(void *)(inited + 56) = 1735287112;
  *(void *)(inited + 64) = 0xE400000000000000;
  *(void *)(inited + 72) = &unk_1EDF5DC58;
  unint64_t result = sub_18FCEF698(inited);
  qword_1E9270870 = result;
  return result;
}

unint64_t sub_18FC9EAE0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926BF98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  *(void *)(inited + 32) = 42;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = &unk_1EDF5DC88;
  unint64_t result = sub_18FCEF698(inited);
  qword_1E9270878 = result;
  return result;
}

BOOL sub_18FC9EB40(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_18FC9EB54@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&a9, 8) = 0;
  return result;
}

void sub_18FC9EB64(void *a1@<X8>)
{
  *a1 = *v1;
}

void type metadata accessor for UScriptCode(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void sub_18FC9EB98(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_18FC9EBE0(uint64_t a1, uint64_t a2)
{
  return sub_18FC9ECCC(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_18FC9EBF8()
{
  sub_18FD02150();
  sub_18FD021E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FC9EC4C()
{
  sub_18FD02150();
  sub_18FD02D60();
  sub_18FD021E0();
  uint64_t v0 = sub_18FD02DA0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_18FC9ECC0(uint64_t a1, uint64_t a2)
{
  return sub_18FC9ECCC(a1, a2, MEMORY[0x1F418C130]);
}

uint64_t sub_18FC9ECCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_18FD02150();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_18FC9ED10(uint64_t a1, id *a2)
{
  uint64_t result = sub_18FD02130();
  *a2 = 0;
  return result;
}

uint64_t sub_18FC9ED88(uint64_t a1, id *a2)
{
  char v3 = sub_18FD02140();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_18FC9EE08@<X0>(uint64_t *a1@<X8>)
{
  sub_18FD02150();
  uint64_t v2 = sub_18FD02120();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_18FC9EE4C()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  if (v0 == sub_18FD02150() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_18FD02C00();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_18FC9EED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_18FD02120();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_18FC9EF20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_18FD02150();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18FC9EF4C(uint64_t a1)
{
  uint64_t v2 = sub_18FC9F04C((unint64_t *)&qword_1E926BFC8);
  uint64_t v3 = sub_18FC9F04C(&qword_1E926BFD0);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_18FC9EFE4()
{
  return sub_18FC9F04C(&qword_1E926BFB0);
}

uint64_t sub_18FC9F018()
{
  return sub_18FC9F04C(&qword_1E926BFB8);
}

uint64_t sub_18FC9F04C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FC9F090()
{
  return sub_18FC9F04C(&qword_1E926BFC0);
}

uint64_t axObservationTrackingStream<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD02470();
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = a3;
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  (*(void (**)(unsigned char *, void))(v8 + 104))(&v10[-v7], *MEMORY[0x1E4FBD028]);
  return sub_18FD024F0();
}

uint64_t sub_18FC9F1E8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  uint64_t v5 = sub_18FD024A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  v32 = (char *)&v30 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = sub_18FD02450();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v30 - v16;
  a2(v15);
  uint64_t v18 = v30;
  sub_18FD02480();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_18FD02410();
  uint64_t v19 = sub_18FD02430();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 0, 1, v19);
  int v20 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v32, v18, v5);
  unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0;
  uint64_t v24 = v31;
  *((void *)v23 + 4) = v31;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v23[v21], v20, v5);
  id v25 = &v23[v22];
  uint64_t v26 = v33;
  *(void *)id v25 = a2;
  *((void *)v25 + 1) = v26;
  swift_retain();
  uint64_t v27 = sub_18FCF507C((uint64_t)v12, (uint64_t)&unk_1E926C028, (uint64_t)v23);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v24;
  *(void *)(v28 + 24) = v27;
  return sub_18FD02460();
}

uint64_t sub_18FC9F528(uint64_t a1)
{
  return sub_18FC9F1E8(a1, *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_18FC9F534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  void v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = swift_task_alloc();
  uint64_t v8 = sub_18FD02450();
  v7[7] = v8;
  v7[8] = *(void *)(v8 - 8);
  v7[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FC9F628, 0, 0);
}

uint64_t sub_18FC9F628()
{
  if (sub_18FD02510())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 80) = v3;
    *(void *)uint64_t v3 = v0;
    *(void *)(v3 + _Block_object_dispose(&a9, 8) = sub_18FC9F730;
    uint64_t v4 = *(void *)(v0 + 48);
    long long v5 = *(_OWORD *)(v0 + 24);
    *(void *)(v3 + 40) = *(void *)(v0 + 40);
    *(_OWORD *)(v3 + 24) = v5;
    *(void *)(v3 + 16) = v4;
    return MEMORY[0x1F4188298](sub_18FC9FA38, 0, 0);
  }
}

uint64_t sub_18FC9F730()
{
  *(void *)(*(void *)v1 + 8_Block_object_dispose(&a9, 8) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_18FC9F9A4;
  }
  else {
    uint64_t v2 = sub_18FC9F844;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_18FC9F844()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_18FD024A0();
  sub_18FD02480();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (sub_18FD02510())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 80) = v6;
    *(void *)uint64_t v6 = v0;
    *(void *)(v6 + _Block_object_dispose(&a9, 8) = sub_18FC9F730;
    uint64_t v7 = *(void *)(v0 + 48);
    long long v8 = *(_OWORD *)(v0 + 24);
    *(void *)(v6 + 40) = *(void *)(v0 + 40);
    *(_OWORD *)(v6 + 24) = v8;
    *(void *)(v6 + 16) = v7;
    return MEMORY[0x1F4188298](sub_18FC9FA38, 0, 0);
  }
}

uint64_t sub_18FC9F9A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t withNextChange<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  void v4[5] = a4;
  void v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_18FC9FA38, 0, 0);
}

uint64_t sub_18FC9FA38()
{
  uint64_t v1 = *(void *)(v0 + 40);
  type metadata accessor for ObservationSentinel();
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v2;
  *(_WORD *)(v2 + 16) = 0;
  long long v8 = *(_OWORD *)(v0 + 24);
  sub_18FD02020();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = v8;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_18FC9FB6C;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188148](v6, &unk_1E926BFF0, v3, sub_18FCA0DC4, v2, 0, 0, v5);
}

uint64_t sub_18FC9FB6C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_18FC9FCEC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_18FC9FC88;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_18FC9FC88()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18FC9FCEC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18FC9FD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD028];
  uint64_t v3 = sub_18FD02470();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t type metadata accessor for ObservationSentinel()
{
  uint64_t result = qword_1E926BFF8;
  if (!qword_1E926BFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18FC9FE20()
{
  swift_getKeyPath();
  sub_18FCA113C(&qword_1E926C008, (void (*)(uint64_t))type metadata accessor for ObservationSentinel);
  sub_18FD01FF0();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_18FC9FEC0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_18FCA113C(&qword_1E926C008, (void (*)(uint64_t))type metadata accessor for ObservationSentinel);
  sub_18FD01FF0();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_18FC9FF68()
{
  swift_getKeyPath();
  sub_18FCA113C(&qword_1E926C008, (void (*)(uint64_t))type metadata accessor for ObservationSentinel);
  sub_18FD01FF0();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_18FCA0008@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_18FCA113C(&qword_1E926C008, (void (*)(uint64_t))type metadata accessor for ObservationSentinel);
  sub_18FD01FF0();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_18FCA00B0()
{
  return swift_release();
}

uint64_t sub_18FCA0170()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC15AXCoreUtilitiesP33_AB91057B37695AB1D964E83478A9F98119ObservationSentinel___observationRegistrar;
  uint64_t v2 = sub_18FD02030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_18FCA0210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_18FCA0238, 0, 0);
}

uint64_t sub_18FCA0238()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  void *v5 = v0;
  v5[1] = sub_18FCA0338;
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v7, 0, 0, 0xD000000000000012, 0x800000018FD0F5A0, sub_18FCA0F00, v3, v6);
}

uint64_t sub_18FCA0338()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_18FCA0474, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_18FCA0474()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18FCA04D8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + _Block_object_dispose(&a9, 8) = sub_18FCA05A0;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 4_Block_object_dispose(&a9, 8) = v4;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x1F4188298](sub_18FCA0238, 0, 0);
}

uint64_t sub_18FCA05A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_18FCA0694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = v11;
  uint64_t v22 = v10;
  uint64_t v23 = v12;
  uint64_t v24 = v13;
  uint64_t v16 = v11;
  uint64_t v17 = v10;
  uint64_t v18 = v7;
  uint64_t v19 = v12;
  uint64_t v20 = v13;
  sub_18FD01FD0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, a5);
}

uint64_t sub_18FCA0794(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  swift_getKeyPath();
  sub_18FCA113C(&qword_1E926C008, (void (*)(uint64_t))type metadata accessor for ObservationSentinel);
  sub_18FD01FF0();
  uint64_t v3 = swift_release();
  return a2(v3);
}

uint64_t (*sub_18FCA0854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C010);
  uint64_t v10 = sub_18FD023C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v19 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v19 - v13, a2, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  *(void *)(v16 + 24) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, v14, v10);
  uint64_t v17 = (void *)(v16 + ((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v17 = a3;
  v17[1] = a4;
  swift_retain();
  swift_retain();
  return sub_18FCA107C;
}

uint64_t sub_18FCA09DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  MEMORY[0x1F4188790](a1);
  swift_getKeyPath();
  uint64_t v10 = a1;
  sub_18FCA113C(&qword_1E926C008, (void (*)(uint64_t))type metadata accessor for ObservationSentinel);
  sub_18FD01FF0();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(a1 + 17) & 1) == 0)
  {
    swift_getKeyPath();
    uint64_t v10 = a1;
    sub_18FD01FF0();
    uint64_t v6 = swift_release();
    if (*(unsigned char *)(a1 + 16) == 1)
    {
      sub_18FD023D0();
      sub_18FCA113C(&qword_1E926C018, MEMORY[0x1E4FBCF50]);
      uint64_t v7 = swift_allocError();
      sub_18FD02070();
      uint64_t v10 = v7;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C010);
      sub_18FD023C0();
      sub_18FD023A0();
    }
    else
    {
      a3(v6);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C010);
      sub_18FD023C0();
      sub_18FD023B0();
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    *(&v9 - 2) = a1;
    *((unsigned char *)&v9 - _Block_object_dispose(&a9, 8) = 1;
    uint64_t v10 = a1;
    sub_18FD01FE0();
    return swift_release();
  }
  return result;
}

uint64_t sub_18FCA0CF4()
{
  return swift_release();
}

uint64_t sub_18FCA0DC4()
{
  return sub_18FCA0CF4();
}

uint64_t sub_18FCA0DCC()
{
  return type metadata accessor for ObservationSentinel();
}

uint64_t sub_18FCA0DD4()
{
  uint64_t result = sub_18FD02030();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_18FCA0E74()
{
  return sub_18FCA00B0();
}

void sub_18FCA0EA8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_18FCA0EBC()
{
  return sub_18FCA00B0();
}

void sub_18FCA0EF0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_18FCA0F00(uint64_t a1)
{
  return sub_18FCA0694(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_18FCA0F0C()
{
  return sub_18FCA0794(*(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t (*sub_18FCA0F18())()
{
  return sub_18FCA0854(v0[3], v0[4], v0[5], v0[6], v0[2]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_18FCA0F70()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C010);
  uint64_t v1 = sub_18FD023C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_18FCA107C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C010);
  uint64_t v1 = *(void *)(sub_18FD023C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void (**)(uint64_t))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_18FCA09DC(v3, v0 + v2, v4);
}

uint64_t sub_18FCA113C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCA1184()
{
  uint64_t v1 = sub_18FD024A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_18FCA1274(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = *(void *)(sub_18FD024A0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_18FCA1444;
  return sub_18FC9F534(a1, v7, v8, v9, v11, v12, v4);
}

uint64_t sub_18FCA13B4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_18FCA13EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C010);
  return sub_18FD02500();
}

void sub_18FCA1448()
{
}

void sub_18FCA1460()
{
}

void static AXKeyedArchiveSourcable.migrate(from:)(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
  sub_18FCA23D0(a1, a2);
  id v6 = sub_18FCA2310();
  sub_18FCA2428(a1, a2);
  if (!v2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v10 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setClass_forClassName_, ObjCClassFromMetadata, v10);

    objc_msgSend(v6, sel_setRequiresSecureCoding_, 0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E926C030);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_18FD07480;
    *(void *)(v11 + 32) = AssociatedTypeWitness;
    sub_18FD02150();
    sub_18FD025E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13[3])
    {
      if (swift_dynamicCast())
      {
        v13[0] = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
        sub_18FCA2534();
        sub_18FD02700();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      sub_18FCA2480((uint64_t)v13);
    }
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v12 = 5;
    swift_willThrow();
  }
}

void static Array<A>.migrate(from:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
  sub_18FCA23D0(a1, a2);
  id v10 = sub_18FCA2310();
  sub_18FCA2428(a1, a2);
  if (!v4)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v14 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setClass_forClassName_, ObjCClassFromMetadata, v14);

    objc_msgSend(v10, sel_setRequiresSecureCoding_, 0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E926C030);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_18FD07470;
    *(void *)(v15 + 32) = AssociatedTypeWitness;
    *(void *)(v15 + 40) = sub_18FCA2634(0, &qword_1E926C048);
    sub_18FD02150();
    sub_18FD025E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25[3])
    {
      uint64_t v16 = sub_18FD02370();
      uint64_t v17 = swift_dynamicCast();
      if (v17)
      {
        v24[1] = v24;
        v25[0] = v25[5];
        MEMORY[0x1F4188790](v17);
        v23[2] = a3;
        v23[3] = a4;
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v21 = sub_18FCA1B34((void (*)(char *, char *))sub_18FCA25A0, (uint64_t)v23, v16, v18, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v20);
        swift_bridgeObjectRelease();
        v25[0] = v21;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C050);
        sub_18FCA25C0();
        sub_18FD02700();
        swift_bridgeObjectRelease();
LABEL_7:

        return;
      }
    }
    else
    {
      sub_18FCA2480((uint64_t)v25);
    }
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v22 = 5;
    swift_willThrow();
    goto LABEL_7;
  }
}

uint64_t sub_18FCA1A78@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  return result;
}

uint64_t sub_18FCA1B34(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  long long v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  long long v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_18FD025A0();
  if (!v18) {
    return sub_18FD02330();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_18FD02060();
  uint64_t v32 = sub_18FD027E0();
  sub_18FD027B0();
  uint64_t v36 = v8;
  uint64_t result = sub_18FD02590();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    id v34 = (void (**)(char *))(v33 + 2);
    long long v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_18FD025C0();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_18FD027C0();
      sub_18FD025B0();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

void sub_18FCA1F34(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
}

void static Set<>.migrate(from:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
  sub_18FCA23D0(a1, a2);
  id v16 = sub_18FCA2310();
  sub_18FCA2428(a1, a2);
  if (!v7)
  {
    uint64_t v34 = a7;
    uint64_t v35 = a6;
    uint64_t v33 = a5;
    objc_msgSend(v16, sel_setRequiresSecureCoding_, 0);
    uint64_t v17 = a4;
    uint64_t v18 = a3;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v22 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setClass_forClassName_, ObjCClassFromMetadata, v22);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E926C030);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_18FD07470;
    *(void *)(v23 + 32) = AssociatedTypeWitness;
    *(void *)(v23 + 40) = sub_18FCA2634(0, (unint64_t *)&unk_1E926C060);
    sub_18FD02150();
    sub_18FD025E0();
    uint64_t v24 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36[3])
    {
      uint64_t v25 = sub_18FD02580();
      uint64_t v26 = swift_dynamicCast();
      if (v26)
      {
        v36[0] = v36[5];
        MEMORY[0x1F4188790](v26);
        v32[2] = v18;
        v32[3] = v17;
        v32[4] = v33;
        v32[5] = v35;
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v30 = sub_18FCA1B34((void (*)(char *, char *))sub_18FCA2670, (uint64_t)v32, v25, v27, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v29);
        swift_bridgeObjectRelease();
        v36[0] = v30;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C050);
        sub_18FCA25C0();
        sub_18FD02700();
        swift_bridgeObjectRelease();
LABEL_7:

        return;
      }
    }
    else
    {
      sub_18FCA2480((uint64_t)v36);
    }
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v31 = 5;
    swift_willThrow();
    goto LABEL_7;
  }
}

void sub_18FCA22E8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
}

id sub_18FCA2310()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_18FD01D70();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_18FD01D60();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_18FCA23D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_18FCA2428(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_18FCA2480(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_18FCA24E0()
{
  unint64_t result = qword_1E926C040;
  if (!qword_1E926C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C040);
  }
  return result;
}

unint64_t sub_18FCA2534()
{
  unint64_t result = qword_1E926B800;
  if (!qword_1E926B800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926B7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926B800);
  }
  return result;
}

uint64_t sub_18FCA25A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCA1A78(a1);
}

unint64_t sub_18FCA25C0()
{
  unint64_t result = qword_1E926C058;
  if (!qword_1E926C058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C050);
    sub_18FCA2534();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C058);
  }
  return result;
}

uint64_t sub_18FCA2634(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_18FCA2670@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCA1A78(a1);
}

uint64_t dispatch thunk of static AnyHashableMigratable.migrate(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static AXKeyedArchiverHelper.classNameForArchive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AXKeyedArchiverHelper.hashableValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_18FCA26E4(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t result = a1;
  }
  else {
    uint64_t result = 0;
  }
  if (result)
  {
    return sub_18FCA2A1C(result, a2, result, v5);
  }
  return result;
}

uint64_t sub_18FCA2760(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_18FCA3140(a1, (uint64_t)v11);
  if (v11[3])
  {
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0) {
      return result;
    }
    (*(void (**)(void *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(a4 + 8))(v11, v9, v10, a3, a4);
    if (v4) {
      return sub_18FCA2428(v9, v10);
    }
    sub_18FCA2C3C((uint64_t)v11, a1);
    sub_18FCA2428(v9, v10);
  }
  return sub_18FCA3568((uint64_t)v11);
}

uint64_t sub_18FCA2864(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_18FCA3140(a1, (uint64_t)v10);
  if (!v11) {
    return sub_18FCA3568((uint64_t)v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_18FCA3888(v9, a3, a4);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4)
    {
      sub_18FCA3B08((unint64_t *)&qword_1E926B800, &qword_1E926B7F8);
      sub_18FD02700();
      sub_18FCA2C3C((uint64_t)v10, a1);
      return sub_18FCA3568((uint64_t)v10);
    }
  }
  return result;
}

uint64_t sub_18FCA296C(uint64_t a1, void *a2)
{
  uint64_t v5 = swift_conformsToProtocol2();
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v5) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = 0;
  }
  if (!v7 || (uint64_t result = sub_18FCA2760(a2, v7, v7, v6), !v2))
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result) {
      uint64_t v10 = result;
    }
    else {
      uint64_t v10 = 0;
    }
    if (result) {
      uint64_t v11 = a1;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v11) {
      return sub_18FCA2864(a2, v9, v11, v10);
    }
  }
  return result;
}

uint64_t sub_18FCA2A1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v9 = *(void *)aVersion_0;
  uint64_t v8 = *(void *)&aVersion_0[8];
  *(void *)(inited + 56) = &type metadata for AXCodingKey;
  unint64_t v10 = sub_18FCA37E8();
  *(void *)(inited + 64) = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(inited + 32) = v11;
  *(void *)(v11 + 16) = 0;
  *(unsigned char *)(v11 + 24) = 1;
  *(void *)(v11 + 32) = v9;
  *(void *)(v11 + 40) = v8;
  v18[0] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  sub_18FCE4458(a3, a4);
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v18, a2);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v18);
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_18FD07480;
  uint64_t v14 = *(void *)aType_3;
  uint64_t v13 = unk_1E926C7E8;
  *(void *)(v12 + 56) = &type metadata for AXCodingKey;
  *(void *)(v12 + 64) = v10;
  uint64_t v15 = swift_allocObject();
  *(void *)(v12 + 32) = v15;
  *(void *)(v15 + 16) = 0;
  *(unsigned char *)(v15 + 24) = 1;
  *(void *)(v15 + 32) = v14;
  *(void *)(v15 + 40) = v13;
  v18[0] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)v12);
  id v16 = (void *)v18[0];
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v18, v16);
  swift_bridgeObjectRelease();
  return sub_18FCA3568((uint64_t)v18);
}

uint64_t sub_18FCA2C3C(uint64_t a1, void *a2)
{
  sub_18FCA3780(a1, (uint64_t)&v35);
  if (!*((void *)&v36 + 1)) {
    return sub_18FCA3568((uint64_t)&v35);
  }
  long long v38 = v35;
  long long v39 = v36;
  uint64_t v40 = v37;
  if (!a2[2])
  {
    long long v35 = v38;
    long long v36 = v39;
    uint64_t v37 = v40;
    sub_18FCA3B64((uint64_t)&v35, (uint64_t)&v32);
    swift_beginAccess();
    sub_18FCA3BCC((uint64_t)&v32, v2 + 16);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v6 = a2[2];
    if (v6) {
      goto LABEL_5;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  a2 = sub_18FCA3554(a2);
  uint64_t v6 = a2[2];
  if (!v6) {
    goto LABEL_30;
  }
LABEL_5:
  uint64_t v7 = v6 - 1;
  sub_18FCA370C((long long *)&a2[5 * v6 - 1], (uint64_t)&v32);
  a2[2] = v7;
  sub_18FCA370C(&v32, (uint64_t)&v35);
  uint64_t v8 = (void *)swift_bridgeObjectRetain();
  sub_18FCA3140(v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  sub_18FCA3A48((uint64_t)&v35, (uint64_t)v28);
  if (*((void *)&v30 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    long long v32 = v29;
    long long v33 = v30;
    uint64_t v34 = v31;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v28, v28[3]);
    sub_18FD02E30();
    if (v10)
    {
      *(void *)&long long v25 = MEMORY[0x1E4FBC868];
      uint64_t v11 = &qword_1E926B7F8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
      uint64_t v12 = (unint64_t *)&qword_1E926B800;
    }
    else
    {
      *(void *)&long long v25 = MEMORY[0x1E4FBC860];
      uint64_t v11 = &qword_1E926B818;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B818);
      uint64_t v12 = &qword_1E926B820;
    }
    sub_18FCA3B08(v12, v11);
    sub_18FD02700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    sub_18FCA3568((uint64_t)&v29);
  }
  __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
  uint64_t v13 = sub_18FD02E30();
  if (v14)
  {
    sub_18FCA365C((uint64_t)&v32, (uint64_t)&v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
    if (swift_dynamicCast())
    {
      __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
      uint64_t v20 = sub_18FD02E10();
      uint64_t v22 = v21;
      sub_18FCA365C((uint64_t)&v38, (uint64_t)&v25);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_18FCFCD70((uint64_t)&v25, v20, v22, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FCA3B08((unint64_t *)&qword_1E926B800, &qword_1E926B7F8);
LABEL_27:
      sub_18FD02700();
      sub_18FCA36B8((uint64_t)&v32);
      long long v32 = v25;
      long long v33 = v26;
      uint64_t v34 = v27;
    }
LABEL_28:
    sub_18FCA365C((uint64_t)&v32, (uint64_t)&v29);
    sub_18FCA2C3C(&v29, a2);
    swift_bridgeObjectRelease();
    sub_18FCA3568((uint64_t)&v29);
    sub_18FCA36B8((uint64_t)&v32);
    sub_18FCA36B8((uint64_t)&v38);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  unint64_t v4 = v13;
  sub_18FCA365C((uint64_t)&v32, (uint64_t)&v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B818);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_28;
  }
  id v3 = (char *)v24;
  if (v4 == *(void *)(v24 + 16))
  {
    sub_18FCA365C((uint64_t)&v38, (uint64_t)&v25);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_17:
      unint64_t v16 = *((void *)v3 + 2);
      unint64_t v15 = *((void *)v3 + 3);
      if (v16 >= v15 >> 1) {
        id v3 = sub_18FCAE3CC((char *)(v15 > 1), v16 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v16 + 1;
      uint64_t v17 = &v3[40 * v16];
      long long v18 = v25;
      long long v19 = v26;
      *((void *)v17 + _Block_object_dispose(&a9, 8) = v27;
      *((_OWORD *)v17 + 2) = v18;
      *((_OWORD *)v17 + 3) = v19;
      goto LABEL_26;
    }
LABEL_31:
    id v3 = sub_18FCAE3CC(0, v4 + 1, 1, v3);
    goto LABEL_17;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_24;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t result = (uint64_t)sub_18FCA3874(v24);
  id v3 = (char *)result;
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
LABEL_24:
  if (v4 < *((void *)v3 + 2))
  {
    sub_18FCA3AAC((uint64_t)&v38, (uint64_t)&v3[40 * v4 + 32]);
LABEL_26:
    sub_18FCA3B08(&qword_1E926B820, &qword_1E926B818);
    goto LABEL_27;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_18FCA3140@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1[2])
  {
    swift_beginAccess();
    return sub_18FCA3780(v2 + 16, a2);
  }
  unint64_t v4 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    uint64_t v6 = v4[2];
    if (v6) {
      goto LABEL_4;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = (uint64_t)sub_18FCA3554(v4);
  unint64_t v4 = (void *)result;
  uint64_t v6 = *(void *)(result + 16);
  if (!v6) {
    goto LABEL_26;
  }
LABEL_4:
  uint64_t v7 = v6 - 1;
  sub_18FCA370C((long long *)&v4[5 * v6 - 1], (uint64_t)v24);
  void v4[2] = v7;
  sub_18FCA370C(v24, (uint64_t)v26);
  sub_18FCA3140(&v21, v4);
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1))
  {
    sub_18FCA3568((uint64_t)&v21);
LABEL_23:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  v24[0] = v21;
  v24[1] = v22;
  uint64_t v25 = v23;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v8 = sub_18FD02E30();
  if (v9)
  {
    sub_18FCA365C((uint64_t)v24, (uint64_t)&v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
    if (swift_dynamicCast())
    {
      __swift_project_boxed_opaque_existential_1(v26, v27);
      uint64_t v14 = sub_18FD02E10();
      if (*(void *)(v20[0] + 16) && (unint64_t v16 = sub_18FCA963C(v14, v15), (v17 & 1) != 0))
      {
        sub_18FCA365C(*(void *)(v20[0] + 56) + 40 * v16, a2);
      }
      else
      {
        *(void *)(a2 + 32) = 0;
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FCA36B8((uint64_t)v24);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    sub_18FCA36B8((uint64_t)v24);
    goto LABEL_23;
  }
  uint64_t v10 = v8;
  sub_18FCA365C((uint64_t)v24, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B810);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_18FCA36B8((uint64_t)v24);
    goto LABEL_23;
  }
  sub_18FCA370C(v18, (uint64_t)&v21);
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *))(v13 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_18FD02380();
  if (v10 >= *(void *)(result + 16))
  {
    sub_18FCA36B8((uint64_t)v24);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    goto LABEL_23;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    sub_18FCA3724(result + 32 * v10 + 32, (uint64_t)v20);
    swift_bridgeObjectRelease();
    sub_18FCA36B8((uint64_t)v24);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_18FCA34F8()
{
  sub_18FCA3568(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AXDataHolder()
{
  return self;
}

void *sub_18FCA3554(void *a1)
{
  return sub_18FCAE294(0, a1[2], 0, a1);
}

uint64_t sub_18FCA3568(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_18FCA365C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_18FCA36B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_18FCA370C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_18FCA3724(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_18FCA3780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_18FCA37E8()
{
  unint64_t result = qword_1E926B7B8;
  if (!qword_1E926B7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926B7B8);
  }
  return result;
}

uint64_t sub_18FCA383C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

char *sub_18FCA3874(uint64_t a1)
{
  return sub_18FCAE3CC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18FCA3888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = a1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)&aVersion_0[8];
  uint64_t v9 = *(void *)aVersion_0;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_18FCA963C(v9, v8);
  if ((v11 & 1) == 0)
  {
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_18FCA365C(*(void *)(v7 + 56) + 40 * v10, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1))
  {
LABEL_8:
    sub_18FCA3568((uint64_t)&v21);
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    uint64_t v12 = v20;
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v12 = 0;
LABEL_10:
  uint64_t v13 = sub_18FCE43E4(a2, a3);
  uint64_t v14 = *((void *)v13 + 2);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = v13 + 48;
    while (1)
    {
      if (v12 < *((void *)v15 - 2))
      {
        char v17 = (uint64_t (*)(uint64_t))*((void *)v15 - 1);
        swift_retain_n();
        uint64_t v18 = v17(v7);
        if (v4)
        {
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        uint64_t v16 = v18;
        swift_bridgeObjectRelease();
        swift_release_n();
        uint64_t v7 = v16;
      }
      v15 += 24;
      if (!--v14) {
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_18:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_18FCA3A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_18FCA3AAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_18FCA3B08(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCA3B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCA3BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t AXSerialQueue.__allocating_init()()
{
  return sub_18FCA4BB0((void (*)(void))AXSerialQueue.init());
}

uint64_t AXSerialQueue.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v1 - 8);
  long long v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B618);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B620);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B630);
  uint64_t v9 = *(void *)(v28 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v28);
  uint64_t v12 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v26 = v0;
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E926B718);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  uint64_t v24 = v8;
  sub_18FD02440();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v15 = v25;
  uint64_t v16 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v0 + OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_continuation, v8, v27);
  uint64_t v17 = sub_18FD02430();
  uint64_t v18 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v29, 1, 1, v17);
  uint64_t v19 = v28;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v28);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v12, v19);
  uint64_t v22 = sub_18FCA46C8(v18, (uint64_t)&unk_1E926C0D8, v21);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v19);
  uint64_t result = v26;
  *(void *)(v26 + OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_parentTask) = v22;
  return result;
}

uint64_t sub_18FCA402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B628);
  void v4[5] = v5;
  void v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCA40F0, 0, 0);
}

uint64_t sub_18FCA40F0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B630);
  sub_18FD024B0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_18FCA41C0;
  uint64_t v2 = *(void *)(v0 + 40);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_18FCA41C0()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCA42BC, 0, 0);
}

uint64_t sub_18FCA42BC()
{
  uint64_t v1 = (int *)v0[2];
  uint64_t v2 = v0[3];
  v0[9] = v1;
  v0[10] = v2;
  if (!v1)
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    goto LABEL_5;
  }
  if (sub_18FD02510())
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    sub_18FCA5CBC((uint64_t)v1);
LABEL_5:
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  uint64_t v6 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  void *v5 = v0;
  v5[1] = sub_18FCA441C;
  return v6();
}

uint64_t sub_18FCA441C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  sub_18FCA5CBC(v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_18FCA41C0;
  uint64_t v5 = *(void *)(v1 + 40);
  return MEMORY[0x1F4187D58](v1 + 16, 0, 0, v5);
}

uint64_t sub_18FCA45CC()
{
  return objectdestroyTm(&qword_1E926B630);
}

uint64_t sub_18FCA45D8(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E926B630) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_18FCA05A0;
  return sub_18FCA402C(a1, v5, v6, v7);
}

uint64_t sub_18FCA46C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD02430();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_18FD02420();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_18FCA5CCC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18FD02390();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t AXSerialQueue.deinit()
{
  return sub_18FCA5750(&OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_continuation, &qword_1E926B620);
}

uint64_t AXSerialQueue.__deallocating_deinit()
{
  return sub_18FCA57F8(&OBJC_IVAR____TtC15AXCoreUtilities13AXSerialQueue_continuation, &qword_1E926B620);
}

uint64_t sub_18FCA48A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C0E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v10[0] = &unk_1E926C0F0;
  v10[1] = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B620);
  sub_18FD02480();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_18FCA49D0(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_18FCA1444;
  return v5();
}

uint64_t sub_18FCA4A9C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_18FCA1444;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E926C0E8 + dword_1E926C0E8);
  return v6(a1, v4);
}

uint64_t sub_18FCA4B54()
{
  return sub_18FD02500();
}

uint64_t AXSerialQueue.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_18FCA4B8C()
{
  return v0;
}

uint64_t AXMainActorSerialQueue.__allocating_init()()
{
  return sub_18FCA4BB0((void (*)(void))AXMainActorSerialQueue.init());
}

uint64_t sub_18FCA4BB0(void (*a1)(void))
{
  uint64_t v2 = swift_allocObject();
  a1();
  return v2;
}

uint64_t AXMainActorSerialQueue.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v1 - 8);
  long long v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C0F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C100);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C108);
  uint64_t v9 = *(void *)(v28 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v28);
  uint64_t v12 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v26 = v0;
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(qword_1E926B660);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBD028], v3);
  uint64_t v24 = v8;
  sub_18FD02440();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v15 = v25;
  uint64_t v16 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v0 + OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_continuation, v8, v27);
  uint64_t v17 = sub_18FD02430();
  uint64_t v18 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v29, 1, 1, v17);
  uint64_t v19 = v28;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v28);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  *(void *)(v21 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v12, v19);
  uint64_t v22 = sub_18FCA46C8(v18, (uint64_t)&unk_1E926C118, v21);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v19);
  uint64_t result = v26;
  *(void *)(v26 + OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_parentTask) = v22;
  return result;
}

uint64_t sub_18FCA4FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C130);
  void v4[5] = v5;
  void v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCA5094, 0, 0);
}

uint64_t sub_18FCA5094()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C108);
  sub_18FD024B0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_18FCA5164;
  uint64_t v2 = *(void *)(v0 + 40);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_18FCA5164()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCA5260, 0, 0);
}

uint64_t sub_18FCA5260()
{
  uint64_t v1 = (int *)v0[2];
  uint64_t v2 = v0[3];
  v0[9] = v1;
  v0[10] = v2;
  if (!v1)
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    goto LABEL_5;
  }
  if (sub_18FD02510())
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    sub_18FCA5CBC((uint64_t)v1);
LABEL_5:
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  uint64_t v6 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  void *v5 = v0;
  v5[1] = sub_18FCA53C0;
  return v6();
}

uint64_t sub_18FCA53C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  sub_18FCA5CBC(v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_18FCA5164;
  uint64_t v5 = *(void *)(v1 + 40);
  return MEMORY[0x1F4187D58](v1 + 16, 0, 0, v5);
}

uint64_t sub_18FCA5570()
{
  return objectdestroyTm(&qword_1E926C108);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_18FCA5644(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E926C108) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_18FCA1444;
  return sub_18FCA4FD0(a1, v5, v6, v7);
}

uint64_t AXMainActorSerialQueue.deinit()
{
  return sub_18FCA5750(&OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_continuation, &qword_1E926C100);
}

uint64_t sub_18FCA5750(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_18FD02490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_defaultActor_destroy();
  return v3;
}

uint64_t AXMainActorSerialQueue.__deallocating_deinit()
{
  return sub_18FCA57F8(&OBJC_IVAR____TtC15AXCoreUtilities22AXMainActorSerialQueue_continuation, &qword_1E926C100);
}

uint64_t sub_18FCA57F8(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_18FD02490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v3);
}

uint64_t sub_18FCA5894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C120);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v10[0] = &unk_1E926C128;
  v10[1] = v8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C100);
  sub_18FD02480();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_18FCA59C0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_18FCA59F8()
{
  return sub_18FD02500();
}

uint64_t sub_18FCA5A24()
{
  return type metadata accessor for AXSerialQueue(0);
}

uint64_t type metadata accessor for AXSerialQueue(uint64_t a1)
{
  return sub_18FCA5AFC(a1, (uint64_t *)&unk_1E926B700);
}

void sub_18FCA5A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t method lookup function for AXSerialQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXSerialQueue);
}

uint64_t dispatch thunk of AXSerialQueue.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AXSerialQueue.async(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AXSerialQueue.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_18FCA5AD4()
{
  return type metadata accessor for AXMainActorSerialQueue(0);
}

uint64_t type metadata accessor for AXMainActorSerialQueue(uint64_t a1)
{
  return sub_18FCA5AFC(a1, (uint64_t *)&unk_1E926B648);
}

uint64_t sub_18FCA5AFC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_18FCA5B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_18FCA5B48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  sub_18FCA5C6C(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AXMainActorSerialQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXMainActorSerialQueue);
}

uint64_t dispatch thunk of AXMainActorSerialQueue.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AXMainActorSerialQueue.async(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AXMainActorSerialQueue.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void sub_18FCA5C6C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_18FD024A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_18FCA5CBC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_18FCA5CCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FCA5D2C(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_18FCA05A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E926C268 + dword_1E926C268);
  return v6(a1, v4);
}

id sub_18FCA5DF4()
{
  uint64_t v0 = (void *)sub_18FD02120();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  if (v1)
  {
    uint64_t v2 = (void *)sub_18FD02120();
    uint64_t v3 = (void *)sub_18FD02120();
    unint64_t v4 = (void *)sub_18FD02120();
    id v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

    id v1 = (id)sub_18FD02150();
    uint64_t v7 = v6;

    BOOL v8 = v1 == (id)0x4E554F465F544F4ELL && v7 == 0xE900000000000044;
    if (v8 || (sub_18FD02C00() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_18FCA5F98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_18FD01E30();
  sub_18FD021A0();
  swift_bridgeObjectRelease();
  uldn_open();
  swift_release();
  uint64_t v5 = swift_slowAlloc();
  switch(a4)
  {
    case 1:
      sub_18FD021A0();
      int v6 = uldn_languageDisplayName();
      break;
    case 2:
      sub_18FD021A0();
      int v6 = uldn_regionDisplayName();
      break;
    case 3:
      sub_18FD021A0();
      int v6 = uldn_variantDisplayName();
      break;
    default:
      sub_18FD021A0();
      int v6 = uldn_localeDisplayName();
      break;
  }
  int v7 = v6;
  swift_release();
  id v8 = objc_msgSend(objc_allocWithZone(NSString), sel_initWithCharacters_length_, v5, v7);
  uint64_t v9 = sub_18FD02150();

  MEMORY[0x192FC3640](v5, -1, -1);
  uldn_close();
  return v9;
}

uint64_t Locale.LanguageCode.icuDisplayName.getter()
{
  return sub_18FCA6288(0x45474155474E414CLL, 0xE90000000000005FLL, MEMORY[0x1F418BD48], 1);
}

unint64_t sub_18FCA61E8()
{
  unint64_t result = qword_1E926C148;
  if (!qword_1E926C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C148);
  }
  return result;
}

uint64_t Locale.LanguageCode.icuDisplayName(with:)(uint64_t a1)
{
  return sub_18FCA66D4(a1, 0x45474155474E414CLL, 0xE90000000000005FLL, MEMORY[0x1F418BD40], 1);
}

uint64_t Locale.Region.icuDisplayName.getter()
{
  return sub_18FCA6288(0x5F4E4F49474552, 0xE700000000000000, MEMORY[0x1F418BDA0], 2);
}

uint64_t sub_18FCA6288(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), char a4)
{
  uint64_t v8 = sub_18FD01F90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_18FD01EA0();
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  a3(v12);
  sub_18FD02190();
  swift_bridgeObjectRelease();
  sub_18FD02220();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t)sub_18FCA5DF4();
  uint64_t v15 = v14;
  uint64_t v16 = swift_bridgeObjectRelease();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v17 = ((uint64_t (*)(uint64_t))a3)(v16);
    uint64_t v13 = sub_18FCA5F98((uint64_t)v11, v17, v18, a4);
    uint64_t v15 = v19;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!v15) {
      return v13;
    }
  }
  uint64_t v24 = v13;
  uint64_t v25 = v15;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C140);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01EA0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v8);
  sub_18FCA61E8();
  uint64_t v13 = sub_18FD02630();
  sub_18FCA7A04((uint64_t)v22, &qword_1E926C140);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t Locale.Region.icuDisplayName(with:)(uint64_t a1)
{
  return sub_18FCA66D4(a1, 0x5F4E4F49474552, 0xE700000000000000, MEMORY[0x1F418BD98], 2);
}

uint64_t Locale.Subdivision.icuDisplayName.getter()
{
  uint64_t v0 = sub_18FD01F90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01EA0();
  v10[0] = 0x5349564944425553;
  v10[1] = 0xEB000000005F4E4FLL;
  sub_18FD01E40();
  sub_18FD02190();
  swift_bridgeObjectRelease();
  sub_18FD02220();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t)sub_18FCA5DF4();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v7 = sub_18FD01E40();
    uint64_t v4 = sub_18FCA5F98((uint64_t)v3, v7, v8, 3);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t Locale.Subdivision.icuDisplayName(with:)(uint64_t a1)
{
  return sub_18FCA66D4(a1, 0x5349564944425553, 0xEB000000005F4E4FLL, MEMORY[0x1F418BD30], 3);
}

uint64_t sub_18FCA66D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), char a5)
{
  a4(a1, a2);
  sub_18FD02190();
  swift_bridgeObjectRelease();
  sub_18FD02220();
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)sub_18FCA5DF4();
  uint64_t v10 = v9;
  uint64_t v11 = swift_bridgeObjectRelease();
  if (!v10)
  {
    uint64_t v12 = ((uint64_t (*)(uint64_t))a4)(v11);
    uint64_t v8 = sub_18FCA5F98(a1, v12, v13, a5);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t Locale.icuDisplayName.getter()
{
  uint64_t v0 = sub_18FD01F90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01EA0();
  uint64_t v4 = Locale.icuDisplayName(with:)((uint64_t)v3);
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6)
  {
    v11[0] = v4;
    v11[1] = v6;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C140);
    MEMORY[0x1F4188790](v7 - 8);
    uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_18FD01EA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v9, 0, 1, v0);
    sub_18FCA61E8();
    uint64_t v4 = sub_18FD02630();
    sub_18FCA7A04((uint64_t)v9, &qword_1E926C140);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t Locale.icuDisplayName(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B878);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_18FD01F70();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  sub_18FD01F80();
  sub_18FD01F40();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v8 + 8);
  v10((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v11 = sub_18FD01E80();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_18FCA7A04((uint64_t)v6, &qword_1E926B878);
    return 0;
  }
  v56 = v10;
  uint64_t v57 = v2;
  uint64_t v55 = a1;
  uint64_t v58 = 0x45474155474E414CLL;
  unint64_t v59 = 0xE90000000000005FLL;
  sub_18FD01E40();
  sub_18FD02190();
  swift_bridgeObjectRelease();
  sub_18FD02220();
  swift_bridgeObjectRelease();
  id v13 = sub_18FCA5DF4();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v54 = (uint64_t)v13;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    goto LABEL_7;
  }
  uint64_t v16 = sub_18FD01E40();
  uint64_t v18 = sub_18FCA5F98(v55, v16, v17, 1);
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
  if (v15)
  {
    uint64_t v54 = v18;
LABEL_7:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B880);
    uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
    uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v21);
    sub_18FD01F80();
    sub_18FD01F50();
    v56((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    uint64_t v24 = sub_18FD01EC0();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
    {
      swift_bridgeObjectRelease();
      sub_18FCA7A04((uint64_t)v23, &qword_1E926B880);
      return 0;
    }
    uint64_t v58 = 0x5F4E4F49474552;
    unint64_t v59 = 0xE700000000000000;
    sub_18FD01E40();
    sub_18FD02190();
    swift_bridgeObjectRelease();
    sub_18FD02220();
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t)sub_18FCA5DF4();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    }
    else
    {
      uint64_t v30 = sub_18FD01E40();
      uint64_t v27 = sub_18FCA5F98(v55, v30, v31, 2);
      uint64_t v29 = v32;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      if (!v29)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B870);
    MEMORY[0x1F4188790](v33 - 8);
    long long v35 = (char *)&v54 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_18FD01E60();
    uint64_t v36 = sub_18FD01E50();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      sub_18FCA7A04((uint64_t)v35, &qword_1E926B870);
LABEL_16:
      long long v38 = (void *)sub_18FD02120();
      id v39 = AXCLocString(v38);

      sub_18FD02150();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C150);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_18FD07470;
      uint64_t v41 = MEMORY[0x1E4FBB1A0];
      *(void *)(v40 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v42 = sub_18FCA716C();
      *(void *)(v40 + 32) = v54;
      *(void *)(v40 + 40) = v15;
      *(void *)(v40 + 96) = v41;
      *(void *)(v40 + 104) = v42;
      *(void *)(v40 + 64) = v42;
      *(void *)(v40 + 72) = v27;
      *(void *)(v40 + 80) = v29;
      uint64_t v15 = sub_18FD02160();
      swift_bridgeObjectRelease();
      return v15;
    }
    uint64_t v58 = 0x5349564944425553;
    unint64_t v59 = 0xEB000000005F4E4FLL;
    sub_18FD01E40();
    sub_18FD02190();
    swift_bridgeObjectRelease();
    sub_18FD02220();
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)sub_18FCA5DF4();
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
    }
    else
    {
      uint64_t v46 = sub_18FD01E40();
      uint64_t v43 = sub_18FCA5F98(v55, v46, v47, 3);
      uint64_t v45 = v48;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
      if (!v45) {
        goto LABEL_16;
      }
    }
    uint64_t v49 = (void *)sub_18FD02120();
    id v50 = AXCLocString(v49);

    sub_18FD02150();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C150);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_18FD07C70;
    uint64_t v52 = MEMORY[0x1E4FBB1A0];
    *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v53 = sub_18FCA716C();
    *(void *)(v51 + 32) = v54;
    *(void *)(v51 + 40) = v15;
    *(void *)(v51 + 96) = v52;
    *(void *)(v51 + 104) = v53;
    *(void *)(v51 + 64) = v53;
    *(void *)(v51 + 72) = v43;
    *(void *)(v51 + 80) = v45;
    *(void *)(v51 + 136) = v52;
    *(void *)(v51 + 144) = v53;
    *(void *)(v51 + 112) = v27;
    *(void *)(v51 + 120) = v29;
    uint64_t v15 = sub_18FD02160();
    swift_bridgeObjectRelease();
  }
  return v15;
}

unint64_t sub_18FCA716C()
{
  unint64_t result = qword_1E926C158;
  if (!qword_1E926C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C158);
  }
  return result;
}

uint64_t sub_18FCA71B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  int v25 = 0;
  sub_18FD01E30();
  sub_18FD021A0();
  swift_bridgeObjectRelease();
  ulocdata_open();
  swift_release();
  ulocdata_getExemplarSet();
  uint64_t v2 = sub_18FD01D50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01D40();
  uint64_t v6 = swift_slowAlloc();
  int ItemCount = uset_getItemCount();
  if (ItemCount < 0) {
    goto LABEL_32;
  }
  int v8 = ItemCount;
  uint64_t v19 = v3;
  uint64_t v20 = v2;
  uint64_t v21 = &v19;
  if (ItemCount)
  {
    int v9 = 0;
    while (v8 != v9)
    {
      uint64_t v24 = 0;
      int Item = uset_getItem();
      int v12 = v25;
      if (v25 == 15)
      {
        MEMORY[0x192FC3640](v6, -1, -1);
        if (__OFADD__(Item, 1)) {
          goto LABEL_24;
        }
        uint64_t v6 = swift_slowAlloc();
        int v25 = 0;
        uset_getItem();
        int v12 = v25;
      }
      if (v12 > 0)
      {
        uint64_t v15 = v19;
        uint64_t v16 = a1;
        uint64_t v17 = v20;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v20);
        MEMORY[0x192FC3640](v6, -1, -1);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v17);
        goto LABEL_22;
      }
      if (Item > 0)
      {
        uint64_t v22 = sub_18FD02110();
        uint64_t v23 = v10;
        sub_18FD02280();
        sub_18FD01D10();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v24 < 0) {
          goto LABEL_25;
        }
        if (HIDWORD(v24) >> 11 == 27) {
          goto LABEL_30;
        }
        if (HIDWORD(v24) > 0x10FFFF) {
          goto LABEL_26;
        }
        if ((v24 & 0x80000000) != 0) {
          goto LABEL_27;
        }
        if (v24 >> 11 == 27) {
          goto LABEL_31;
        }
        if (v24 > 0x10FFFF) {
          goto LABEL_28;
        }
        if (v24 < HIDWORD(v24)) {
          goto LABEL_29;
        }
        sub_18FD01D00();
      }
      if (v8 == ++v9) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
LABEL_20:
  uint64_t v14 = v19;
  uint64_t v13 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(a1, v5, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
  MEMORY[0x192FC3640](v6, -1, -1);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
LABEL_22:
  uset_close();
  return ulocdata_close();
}

uint64_t Locale.axExemplarCharacterSet.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C160);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = sub_18FD01D50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v8 = v6 + 56;
  uint64_t v41 = (char *)&v28 - v4;
  uint64_t v43 = v5;
  uint64_t v37 = v7;
  ((void (*)(char *, uint64_t, uint64_t))v7)((char *)&v28 - v4, 1, 1);
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v40 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 - 8);
  long long v35 = (uint64_t (**)(char *, char *, uint64_t))(v8 - 24);
  uint64_t v36 = v8;
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t))(v8 - 40);
  uint64_t v30 = (void (**)(char *, uint64_t))(v8 - 48);
  uint64_t v33 = v3;
  uint64_t v34 = v1;
  uint64_t v31 = v10;
  unint64_t v32 = v4;
  do
  {
    unint64_t v42 = &v28;
    uint64_t v11 = MEMORY[0x1F4188790](*(unsigned int *)((char *)&unk_1EDF5DCC8 + v9 + 32));
    int v12 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v11);
    uint64_t v13 = (char *)&v28 - v4;
    sub_18FCA71B4((uint64_t)&v28 - v4);
    uint64_t v14 = *v40;
    if ((*v40)((char *)&v28 - v4, 1, v43) == 1)
    {
      sub_18FCA7A04((uint64_t)&v28 - v4, &qword_1E926C160);
      goto LABEL_3;
    }
    uint64_t v15 = v43;
    uint64_t v16 = v12;
    long long v38 = *v35;
    uint64_t v17 = v38(v12, v13, v43);
    id v39 = &v28;
    uint64_t v18 = MEMORY[0x1F4188790](v17);
    uint64_t v19 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v18);
    uint64_t v21 = (char *)&v28 - v20;
    sub_18FCA7AC8((uint64_t)v41, (uint64_t)&v28 - v20);
    int v22 = v14(v21, 1, v15);
    sub_18FCA7A04((uint64_t)v21, &qword_1E926C160);
    if (v22 == 1)
    {
      v38(v19, v12, v15);
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v24 = v14(v41, 1, v15);
      if (!v24)
      {
        uint64_t v10 = v31;
        MEMORY[0x1F4188790](v24);
        uint64_t v25 = v43;
        (*v29)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v41, v43);
        sub_18FD01CF0();
        uint64_t v26 = *v30;
        (*v30)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
        v26(v16, v25);
        uint64_t v23 = 0;
        uint64_t v3 = v33;
        unint64_t v4 = v32;
        goto LABEL_10;
      }
      (*v30)(v12, v43);
      uint64_t v23 = 1;
    }
    uint64_t v3 = v33;
    uint64_t v10 = v31;
    unint64_t v4 = v32;
LABEL_10:
    v37(v19, v23, 1, v43);
    sub_18FCA7B30((uint64_t)v19, (uint64_t)v41);
LABEL_3:
    v9 += 4;
  }
  while (v9 != 16);
  return sub_18FCA7A60((uint64_t)v41, v28);
}

uint64_t sub_18FCA7A04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_18FCA7A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCA7AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCA7B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Unicode.Scalar.axScripts.getter(int a1)
{
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = swift_slowAlloc();
  if (a1 < 0) {
    __break(1u);
  }
  uint64_t v3 = (const void *)v2;
  int v70 = 0;
  int ScriptExtensions = uscript_getScriptExtensions();
  uint64_t v5 = sub_18FCA9E40(v3, ScriptExtensions);
  uint64_t v6 = sub_18FCA82B4((uint64_t)v5);
  swift_release();
  uint64_t v52 = *((void *)v6 + 2);
  if (v52)
  {
    uint64_t v51 = v6 + 32;
    uint64_t v7 = sub_18FD01EE0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v66 = *(void *)(v8 + 64);
    v65 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v56 = v8;
    v63 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v50[1] = v6;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x1E4FBC870];
    do
    {
      uint64_t v55 = v10;
      int v12 = (uint64_t *)&v51[16 * v10];
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v69 = v11;
      uint64_t v15 = MEMORY[0x1F4188790](v9);
      uint64_t v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v15);
      uint64_t v19 = (char *)v50 - v18;
      swift_bridgeObjectRetain_n();
      uint64_t v53 = v11;
      swift_bridgeObjectRetain();
      uint64_t v54 = v13;
      sub_18FD01EF0();
      sub_18FCA9EE4(v17, v19);
      v64 = *v65;
      v64(v17, v7);
      if (qword_1E926BEF8 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1E9270870;
      uint64_t v21 = v55;
      if (*(void *)(qword_1E9270870 + 16))
      {
        uint64_t v22 = v54;
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_18FCA963C(v14, v22);
        if ((v24 & 1) != 0
          && (uint64_t v25 = *(void *)(*(void *)(v20 + 56) + 8 * v23),
              swift_bridgeObjectRetain(),
              swift_bridgeObjectRelease(),
              (uint64_t v59 = *(void *)(v25 + 16)) != 0))
        {
          uint64_t v58 = v25 + 32;
          v50[2] = v25;
          uint64_t v26 = swift_bridgeObjectRetain();
          uint64_t v27 = 0;
          do
          {
            uint64_t v29 = *(void *)(v58 + 16 * v27 + 8);
            MEMORY[0x1F4188790](v26);
            uint64_t v31 = (char *)v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
            swift_bridgeObjectRetain_n();
            uint64_t v61 = v29;
            sub_18FD01EF0();
            uint64_t v32 = v69;
            sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
            swift_bridgeObjectRetain();
            v67 = v31;
            uint64_t v33 = sub_18FD020C0();
            uint64_t v34 = -1 << *(unsigned char *)(v32 + 32);
            unint64_t v35 = v33 & ~v34;
            uint64_t v36 = *(void *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35;
            v62 = v50;
            if (v36)
            {
              uint64_t v60 = v27;
              uint64_t v37 = ~v34;
              uint64_t v38 = *(void *)(v56 + 72);
              id v39 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
              unint64_t v57 = (unint64_t)v63 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
              do
              {
                MEMORY[0x1F4188790](v33);
                uint64_t v41 = (char *)v50 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
                v39(v41, *(void *)(v32 + 48) + v38 * v35, v7);
                sub_18FCAC3A0(&qword_1E926C178, MEMORY[0x1F418BDC8]);
                char v42 = sub_18FD020F0();
                uint64_t v33 = ((uint64_t (*)(char *, uint64_t))v64)(v41, v7);
                if (v42)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v27 = v60;
                  uint64_t v28 = v67;
                  goto LABEL_13;
                }
                unint64_t v35 = (v35 + 1) & v37;
              }
              while (((*(void *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) != 0);
              swift_bridgeObjectRelease();
              uint64_t v27 = v60;
              uint64_t v43 = v67;
            }
            else
            {
              swift_bridgeObjectRelease();
              id v39 = *v63;
              uint64_t v43 = v67;
            }
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            char v45 = isUniquelyReferenced_nonNull_native;
            MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
            uint64_t v47 = (char *)v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
            v39(v47, (unint64_t)v43, v7);
            uint64_t v68 = v69;
            uint64_t v28 = v43;
            sub_18FCAA5E4((uint64_t)v47, v35, v45);
            uint64_t v69 = v68;
            swift_bridgeObjectRelease();
LABEL_13:
            v64(v28, v7);
            uint64_t v26 = swift_bridgeObjectRelease();
            ++v27;
          }
          while (v27 != v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v21 = v55;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v10 = v21 + 1;
      uint64_t v9 = swift_bridgeObjectRelease();
      uint64_t v11 = v69;
    }
    while (v10 != v52);
    uint64_t v48 = v69;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v48;
}

char *sub_18FCA82B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    if (uscript_getShortName())
    {
      uint64_t v4 = sub_18FD02230();
      unint64_t v6 = v5;
      if (sub_18FD021F0() > 0) {
        goto LABEL_7;
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v6 = 0xE400000000000000;
    uint64_t v4 = 2038004058;
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_18FCAE4E4(0, *((void *)v3 + 2) + 1, 1, v3);
    }
    unint64_t v8 = *((void *)v3 + 2);
    unint64_t v7 = *((void *)v3 + 3);
    if (v8 >= v7 >> 1) {
      uint64_t v3 = sub_18FCAE4E4((char *)(v7 > 1), v8 + 1, 1, v3);
    }
    ++v2;
    *((void *)v3 + 2) = v8 + 1;
    uint64_t v9 = &v3[16 * v8];
    *((void *)v9 + 4) = v4;
    *((void *)v9 + 5) = v6;
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Locale.Language.axScripts.getter()
{
  uint64_t v48 = MEMORY[0x1E4FBC870];
  uint64_t v0 = sub_18FD01E80();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B878);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01F40();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_18FCA7A04((uint64_t)v6, &qword_1E926B878);
    return MEMORY[0x1E4FBC870];
  }
  else
  {
    uint64_t v44 = v1;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
    uint64_t v8 = sub_18FD01EE0();
    uint64_t v46 = &v41;
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    MEMORY[0x1F4188790](v8);
    unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B888);
    MEMORY[0x1F4188790](v12 - 8);
    uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_18FD01F60();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
    {
      sub_18FCA7A04((uint64_t)v14, &qword_1E926B888);
    }
    else
    {
      uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))((char *)&v41 - v11, v14, v8);
      uint64_t v16 = MEMORY[0x1F4188790](v15);
      uint64_t v43 = v0;
      char v45 = &v41;
      MEMORY[0x1F4188790](v16);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v41 - v11, (char *)&v41 - v11, v8);
      sub_18FCA9EE4((char *)&v41 - v11, (char *)&v41 - v11);
      uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
      v17((char *)&v41 - v11, v8);
      v17((char *)&v41 - v11, v8);
      uint64_t v0 = v43;
    }
    if (qword_1E926BF00 != -1) {
      swift_once();
    }
    uint64_t v18 = &unk_1E9270000;
    uint64_t v19 = qword_1E9270878;
    uint64_t v20 = sub_18FD01E40();
    if (*(void *)(v19 + 16) && (unint64_t v22 = sub_18FCA963C(v20, v21), (v23 & 1) != 0))
    {
      char v42 = v3;
      uint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int64_t v25 = *(void *)(v24 + 16);
      if (v25)
      {
        uint64_t v46 = (uint64_t *)v8;
        uint64_t v43 = v0;
        uint64_t v47 = MEMORY[0x1E4FBC860];
        size_t v26 = sub_18FCA9DE0(0, v25, 0);
        uint64_t v27 = v47;
        char v45 = (uint64_t *)(v9 + 32);
        uint64_t v41 = v24;
        uint64_t v28 = v24 + 40;
        do
        {
          MEMORY[0x1F4188790](v26);
          swift_bridgeObjectRetain();
          sub_18FD01EF0();
          uint64_t v47 = v27;
          unint64_t v30 = *(void *)(v27 + 16);
          unint64_t v29 = *(void *)(v27 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_18FCA9DE0(v29 > 1, v30 + 1, 1);
            uint64_t v27 = v47;
          }
          v28 += 16;
          *(void *)(v27 + 16) = v30 + 1;
          size_t v26 = (*(uint64_t (**)(unint64_t, char *, uint64_t *))(v9 + 32))(v27+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v30, (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
        uint64_t v0 = v43;
        uint64_t v8 = (uint64_t)v46;
        uint64_t v18 = (void *)&unk_1E9270000;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = MEMORY[0x1E4FBC860];
      }
      sub_18FCABEC8(v27);
      swift_bridgeObjectRelease();
      uint64_t v3 = v42;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v31 = v18[271];
    if (*(void *)(v31 + 16))
    {
      unint64_t v32 = sub_18FCA963C(42, 0xE100000000000000);
      if (v33)
      {
        char v42 = v3;
        uint64_t v34 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
        int64_t v35 = *(void *)(v34 + 16);
        uint64_t v36 = MEMORY[0x1E4FBC860];
        if (v35)
        {
          uint64_t v46 = (uint64_t *)v8;
          uint64_t v47 = MEMORY[0x1E4FBC860];
          uint64_t v43 = v0;
          swift_bridgeObjectRetain();
          size_t v37 = sub_18FCA9DE0(0, v35, 0);
          uint64_t v36 = v47;
          char v45 = (uint64_t *)(v9 + 32);
          uint64_t v41 = v34;
          uint64_t v38 = v34 + 40;
          do
          {
            MEMORY[0x1F4188790](v37);
            swift_bridgeObjectRetain();
            sub_18FD01EF0();
            uint64_t v47 = v36;
            unint64_t v40 = *(void *)(v36 + 16);
            unint64_t v39 = *(void *)(v36 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_18FCA9DE0(v39 > 1, v40 + 1, 1);
              uint64_t v36 = v47;
            }
            v38 += 16;
            *(void *)(v36 + 16) = v40 + 1;
            size_t v37 = (*(uint64_t (**)(unint64_t, char *, uint64_t *))(v9 + 32))(v36+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v40, (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          uint64_t v0 = v43;
        }
        sub_18FCABEC8(v36);
        swift_bridgeObjectRelease();
        uint64_t v3 = v42;
      }
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v3, v0);
    return v48;
  }
}

BOOL Locale.Language.supportsCharacter(_:)(int a1)
{
  uint64_t v1 = Unicode.Scalar.axScripts.getter(a1);
  uint64_t v2 = Locale.Language.axScripts.getter();
  uint64_t v3 = sub_18FCAAEA0(v2, v1);
  swift_bridgeObjectRelease();
  unint64_t v4 = v3[2];
  swift_release();
  return v4 != 0;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.__allocating_init(locale:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_18FD01D40();
  sub_18FD01D40();
  uint64_t v3 = OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C180);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(void *)(v2 + v3) = v4;
  uint64_t v5 = v2 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  uint64_t v6 = sub_18FD01F90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v2;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.init(locale:)(uint64_t a1)
{
  sub_18FD01D40();
  sub_18FD01D40();
  uint64_t v3 = OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C180);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(void *)(v1 + v3) = v4;
  uint64_t v5 = v1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  uint64_t v6 = sub_18FD01F90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v1;
}

BOOL sub_18FCA8C88(int a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock);
  int v18 = a1;
  uint64_t v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_18FCAC154(v19);
  os_unfair_lock_unlock(v4);
  if (v19[0] != 2) {
    return v19[0] & 1;
  }
  uint64_t v5 = sub_18FD01F70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_18FD01F80();
  uint64_t v9 = Unicode.Scalar.axScripts.getter(a1);
  uint64_t v10 = Locale.Language.axScripts.getter();
  unint64_t v11 = sub_18FCAAEA0(v10, v9);
  swift_bridgeObjectRelease();
  unint64_t v12 = v11[2];
  swift_release();
  BOOL v13 = v12 != 0;
  uint64_t v14 = (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  os_unfair_lock_lock(v4);
  sub_18FCAC198((uint64_t)v19);
  os_unfair_lock_unlock(v4);
  return v13;
}

uint64_t sub_18FCA8E90@<X0>(uint64_t a1@<X1>, int a2@<W2>, char *a3@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v5 = sub_18FD01D50();
  uint64_t v6 = *(void **)(v5 - 8);
  uint64_t v7 = v6[8];
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = a1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_supportedCharacters;
  swift_beginAccess();
  uint64_t v17 = (void (*)(char *, uint64_t, uint64_t))v6[2];
  v17((char *)&v16 - v8, v9, v5);
  int v18 = a2;
  LOBYTE(v9) = sub_18FD01D30();
  uint64_t v10 = (uint64_t (*)(char *, uint64_t))v6[1];
  uint64_t result = v10((char *)&v16 - v8, v5);
  if (v9)
  {
    char v12 = 1;
  }
  else
  {
    MEMORY[0x1F4188790](result);
    BOOL v13 = (char *)&v16 - v8;
    uint64_t v14 = a1 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_unsupportedCharacters;
    swift_beginAccess();
    v17((char *)&v16 - v8, v14, v5);
    char v15 = sub_18FD01D30();
    uint64_t result = v10(v13, v5);
    if (v15) {
      char v12 = 0;
    }
    else {
      char v12 = 2;
    }
  }
  char *v19 = v12;
  return result;
}

uint64_t sub_18FCA9070@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = sub_18FD01D20();
  uint64_t result = swift_endAccess();
  *(unsigned char *)a1 = v2 & 1;
  *(_DWORD *)(a1 + 4) = HIDWORD(v2);
  return result;
}

uint64_t sub_18FCA9104(uint64_t a1, unint64_t a2)
{
  uint64_t v28 = a1 & 0xFFFFFFFFFFFFLL;
  uint64_t v29 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 1;
  }
  uint64_t v4 = v2;
  unint64_t v5 = a2;
  uint64_t v6 = a1;
  uint64_t v34 = v2 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  uint64_t v7 = (os_unfair_lock_s *)(*(void *)(v2 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_lock)
                          + 16);
  uint64_t v26 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v27 = a2 & 0xFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v31 = v6;
  unint64_t v32 = v5;
  uint64_t v30 = v3;
  char v33 = v7;
  do
  {
    if ((v5 & 0x1000000000000000) != 0)
    {
      uint64_t v9 = sub_18FD02740();
    }
    else
    {
      if ((v5 & 0x2000000000000000) != 0)
      {
        v37[0] = v6;
        v37[1] = v27;
      }
      else if ((v6 & 0x1000000000000000) == 0)
      {
        sub_18FD02770();
      }
      uint64_t v9 = sub_18FD02780();
    }
    int v11 = v9;
    uint64_t v36 = v10;
    MEMORY[0x1F4188790](v9);
    os_unfair_lock_lock(v7);
    sub_18FCAC3EC((char *)v37);
    os_unfair_lock_unlock(v7);
    if (LOBYTE(v37[0]) == 2)
    {
      uint64_t v12 = sub_18FD01F70();
      int64_t v35 = &v26;
      uint64_t v13 = *(void *)(v12 - 8);
      MEMORY[0x1F4188790](v12);
      uint64_t v15 = v4;
      uint64_t v16 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_18FD01F80();
      uint64_t v17 = Unicode.Scalar.axScripts.getter(v11);
      uint64_t v18 = Locale.Language.axScripts.getter();
      uint64_t v19 = sub_18FCAAEA0(v18, v17);
      swift_bridgeObjectRelease();
      unint64_t v20 = v19[2];
      swift_release();
      uint64_t v21 = v16;
      uint64_t v4 = v15;
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v21, v12);
      uint64_t v7 = v33;
      uint64_t v23 = MEMORY[0x1F4188790](v22);
      MEMORY[0x1F4188790](v23);
      os_unfair_lock_lock(v7);
      sub_18FCAC198((uint64_t)v37);
      os_unfair_lock_unlock(v7);
      if (!v20)
      {
        uint64_t v24 = 0;
        goto LABEL_20;
      }
      uint64_t v6 = v31;
      unint64_t v5 = v32;
      uint64_t v3 = v30;
    }
    else if ((v37[0] & 1) == 0)
    {
      uint64_t v24 = 0;
      goto LABEL_20;
    }
    v8 += v36;
  }
  while (v8 < v3);
  uint64_t v24 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  uint64_t v2 = sub_18FD01F90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_supportedCharacters;
  uint64_t v4 = sub_18FD01D50();
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_unsupportedCharacters, v4);
  swift_release();
  return v0;
}

uint64_t AXCachedLocaleCharacterSupportMatrix.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_locale;
  uint64_t v2 = sub_18FD01F90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_supportedCharacters;
  uint64_t v4 = sub_18FD01D50();
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC15AXCoreUtilities36AXCachedLocaleCharacterSupportMatrix_unsupportedCharacters, v4);
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_18FCA963C(uint64_t a1, uint64_t a2)
{
  sub_18FD02D60();
  sub_18FD021E0();
  uint64_t v4 = sub_18FD02DA0();
  return sub_18FCA9848(a1, a2, v4);
}

unint64_t sub_18FCA96B4(uint64_t a1)
{
  sub_18FD02860();
  uint64_t v2 = sub_18FD020C0();
  return sub_18FCA992C(a1, v2);
}

unint64_t sub_18FCA9718(uint64_t a1)
{
  uint64_t v2 = sub_18FD026D0();
  return sub_18FCA9AC4(a1, v2);
}

unint64_t sub_18FCA975C(uint64_t a1)
{
  sub_18FD02D60();
  sub_18FD01FB0();
  uint64_t v2 = sub_18FD02DA0();
  return sub_18FCA9B8C(a1, v2);
}

unint64_t sub_18FCA97C8(uint64_t a1)
{
  sub_18FD01DD0();
  sub_18FCAC3A0((unint64_t *)&qword_1E926C198, MEMORY[0x1F418BB48]);
  uint64_t v2 = sub_18FD020C0();
  return sub_18FCA9C60(a1, v2);
}

unint64_t sub_18FCA9848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_18FD02C00() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_18FD02C00() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_18FCA992C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_18FD02860();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_18FD020F0();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_18FCA9AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_18FCA365C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x192FC1B40](v9, a1);
      sub_18FCA36B8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_18FCA9B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0 && (sub_18FD01FA0() & 1) == 0)
  {
    uint64_t v6 = ~v4;
    for (unint64_t i = (i + 1) & v6; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v6)
    {
      if (sub_18FD01FA0()) {
        break;
      }
    }
  }
  return i;
}

unint64_t sub_18FCA9C60(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v15 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v14 = ~v3;
    uint64_t v5 = sub_18FD01DD0();
    uint64_t v6 = v5;
    char v7 = *(void **)(v5 - 8);
    uint64_t v8 = (void (*)(char *, unint64_t, uint64_t))v7[2];
    uint64_t v9 = v7[8];
    uint64_t v10 = v7[9];
    uint64_t v11 = (uint64_t (**)(char *, uint64_t))(v7 + 1);
    do
    {
      MEMORY[0x1F4188790](v5);
      v8((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v17 + 48) + v10 * v4, v6);
      sub_18FCAC3A0(&qword_1E926C1A0, MEMORY[0x1F418BB48]);
      char v12 = sub_18FD020F0();
      uint64_t v5 = (*v11)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v12) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v14;
    }
    while (((*(void *)(v15 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

size_t sub_18FCA9DE0(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_18FCE4DCC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_18FCA9E00(char *a1, int64_t a2, char a3)
{
  size_t result = sub_18FCE4FA0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_18FCA9E20(char *a1, int64_t a2, char a3)
{
  size_t result = sub_18FCE50A4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_18FCA9E40(const void *a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (a2 <= 0)
  {
    size_t v4 = 4 * a2;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C1B0);
    size_t v4 = 4 * a2;
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 29;
    }
    v5[2] = a2;
    v5[3] = 2 * (v7 >> 2);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

uint64_t sub_18FCA9EE4(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_18FD01EE0();
  sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
  swift_bridgeObjectRetain();
  size_t v37 = a2;
  uint64_t v8 = sub_18FD020C0();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v34 = v6 + 56;
  uint64_t v11 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v30 = v2;
    uint64_t v31 = a1;
    uint64_t v32 = ~v9;
    char v12 = *(void **)v11;
    v28[1] = v11 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    uint64_t v29 = v12;
    uint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    int64_t v35 = v12 + 2;
    uint64_t v36 = v13;
    uint64_t v14 = v12[8];
    uint64_t v33 = v12[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    while (1)
    {
      MEMORY[0x1F4188790](v8);
      uint64_t v16 = v6;
      uint64_t v17 = *(void *)(v6 + 48);
      unint64_t v18 = v33 * v10;
      v36((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v33 * v10, v7);
      sub_18FCAC3A0(&qword_1E926C178, MEMORY[0x1F418BDC8]);
      char v19 = sub_18FD020F0();
      uint64_t v20 = *v15;
      uint64_t v8 = (*v15)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v19) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v32;
      uint64_t v6 = v16;
      if (((*(void *)(v34 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v21 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v20(v37, v7);
    v36(v31, *(void *)(*v30 + 48) + v18, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)v11;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v23 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
    int64_t v25 = (char *)v28 - v24;
    uint64_t v26 = v37;
    ((void (*)(char *, char *, uint64_t))v21[2])((char *)v28 - v24, v37, v7);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_18FCAA5E4((uint64_t)v25, v10, v23);
    *uint64_t v3 = v38;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v21[4])(a1, v26, v7);
    return 1;
  }
}

uint64_t sub_18FCAA21C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C1A8);
  uint64_t v3 = sub_18FD02720();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v38 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v40 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = v38[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v16 = v38[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v16 = v38[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v34;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v38[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v38[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v40 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_18FD01EE0();
      unint64_t v39 = &v35;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x1F4188790](v19);
      uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = v2;
      uint64_t v24 = *(void *)(v2 + 48);
      int64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v26 = *(void *)(v20 + 72);
      v25(v22, v24 + v26 * v14, v19);
      sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
      uint64_t result = sub_18FD020C0();
      uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v9 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v12 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v4 + 48) + v12 * v26, v22, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v40;
      uint64_t v2 = v23;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_18FCAA5E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v29 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_18FCAA21C();
  }
  else
  {
    if (v6 > v5)
    {
      sub_18FCAA858();
      goto LABEL_12;
    }
    sub_18FCAAB00();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_18FD01EE0();
  sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
  uint64_t v9 = sub_18FD020C0();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v10;
  uint64_t v27 = v7 + 56;
  uint64_t v28 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v26 = ~v10;
    int64_t v11 = *(void **)(v8 - 8);
    unint64_t v12 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    uint64_t v13 = v11[8];
    uint64_t v14 = v11[9];
    int64_t v15 = (uint64_t (**)(char *, uint64_t))(v11 + 1);
    do
    {
      MEMORY[0x1F4188790](v9);
      v12((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v28 + 48) + v14 * a2, v8);
      sub_18FCAC3A0(&qword_1E926C178, MEMORY[0x1F418BDC8]);
      char v16 = sub_18FD020F0();
      uint64_t v9 = (*v15)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v16) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v26;
    }
    while (((*(void *)(v27 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v17 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v18 = *(void *)(v17 + 48);
  uint64_t v19 = sub_18FD01EE0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * a2, v29, v19);
  uint64_t v21 = *(void *)(v17 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v17 + 16) = v23;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_18FD02CF0();
  __break(1u);
  return result;
}

void *sub_18FCAA858()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C1A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD02710();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  int64_t v25 = (const void *)(v2 + 56);
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v6) {
    uint64_t result = memmove(result, v25, 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v22 = *((void *)v25 + v8);
      if (!v22)
      {
        int64_t v8 = v21 + 2;
        if (v21 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v22 = *((void *)v25 + v8);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = sub_18FD01EE0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15);
    uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v2 + 48) + v20, v15);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v4 + 48) + v20, v18, v15);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v12)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v22 = *((void *)v25 + v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v8);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_18FCAAB00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C1A8);
  uint64_t v3 = sub_18FD02720();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v36) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v35 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v35 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = sub_18FD01EE0();
    int64_t v37 = &v34;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v18);
    int64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = v22;
    uint64_t v24 = v2;
    uint64_t v25 = *(void *)(v2 + 48);
    uint64_t v26 = *(void *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v21, v25 + v26 * v14, v18);
    sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
    uint64_t result = sub_18FD020C0();
    uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v9 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v12 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v4 + 48) + v12 * v26, v21, v18);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v24;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v35 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v36) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t *sub_18FCAAEA0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_18FCAB028((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    unint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_18FCAB028((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x192FC3640](v8, -1, -1);
  }
  return v7;
}

unint64_t *sub_18FCAB028(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v66 = result;
  unint64_t v6 = *(void *)(a3 + 16);
  unint64_t v7 = *(void *)(a4 + 16);
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v63 = a2;
  if (v7 >= v6)
  {
    uint64_t v72 = 0;
    int64_t v36 = 0;
    uint64_t v37 = *(void *)(a3 + 56);
    uint64_t v67 = a3 + 56;
    uint64_t v38 = 1 << *(unsigned char *)(a3 + 32);
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    else {
      uint64_t v39 = -1;
    }
    unint64_t v40 = v39 & v37;
    int64_t v68 = (unint64_t)(v38 + 63) >> 6;
    uint64_t v75 = a4 + 56;
    if ((v39 & v37) != 0) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v43 = v36 + 1;
    if (!__OFADD__(v36, 1))
    {
      if (v43 < v68)
      {
        unint64_t v44 = *(void *)(v67 + 8 * v43);
        ++v36;
        if (!v44)
        {
          int64_t v36 = v43 + 1;
          if (v43 + 1 >= v68) {
            goto LABEL_62;
          }
          unint64_t v44 = *(void *)(v67 + 8 * v36);
          if (!v44)
          {
            int64_t v36 = v43 + 2;
            if (v43 + 2 >= v68) {
              goto LABEL_62;
            }
            unint64_t v44 = *(void *)(v67 + 8 * v36);
            if (!v44)
            {
              int64_t v45 = v43 + 3;
              if (v45 >= v68) {
                goto LABEL_62;
              }
              unint64_t v44 = *(void *)(v67 + 8 * v45);
              if (!v44)
              {
                while (1)
                {
                  int64_t v36 = v45 + 1;
                  if (__OFADD__(v45, 1)) {
                    goto LABEL_68;
                  }
                  if (v36 >= v68) {
                    goto LABEL_62;
                  }
                  unint64_t v44 = *(void *)(v67 + 8 * v36);
                  ++v45;
                  if (v44) {
                    goto LABEL_53;
                  }
                }
              }
              int64_t v36 = v45;
            }
          }
        }
LABEL_53:
        uint64_t v74 = (v44 - 1) & v44;
        for (unint64_t i = __clz(__rbit64(v44)) + (v36 << 6); ; unint64_t i = __clz(__rbit64(v40)) | (v36 << 6))
        {
          uint64_t v46 = sub_18FD01EE0();
          v73 = &v62;
          uint64_t v47 = *(void *)(v46 - 8);
          MEMORY[0x1F4188790](v46);
          unint64_t v78 = (v48 + 15) & 0xFFFFFFFFFFFFFFF0;
          unint64_t v79 = v48;
          uint64_t v49 = (char *)&v62 - v78;
          uint64_t v50 = *(void *)(v5 + 48);
          uint64_t v52 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
          uint64_t v51 = v47 + 16;
          unint64_t v76 = *(void *)(v51 + 56);
          v77 = v52;
          v52((char *)&v62 - v78, v50 + v76 * i, v46);
          sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
          v82 = v49;
          uint64_t v53 = sub_18FD020C0();
          uint64_t v54 = -1 << *(unsigned char *)(v4 + 32);
          unint64_t v55 = v53 & ~v54;
          uint64_t v56 = (uint64_t (**)(char *, uint64_t))(v51 - 8);
          if ((*(void *)(v75 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55))
          {
            uint64_t v69 = (char *)((v51 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            unint64_t v70 = i;
            int64_t v71 = v36;
            uint64_t v57 = ~v54;
            while (1)
            {
              MEMORY[0x1F4188790](v53);
              uint64_t v58 = (char *)&v62 - v78;
              v77((char *)&v62 - v78, *(void *)(v81 + 48) + v55 * v76, v46);
              sub_18FCAC3A0(&qword_1E926C178, MEMORY[0x1F418BDC8]);
              char v59 = sub_18FD020F0();
              uint64_t v60 = *v56;
              uint64_t v53 = (*v56)(v58, v46);
              if (v59) {
                break;
              }
              unint64_t v55 = (v55 + 1) & v57;
              if (((*(void *)(v75 + ((v55 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
              {
                uint64_t v5 = v80;
                uint64_t v4 = v81;
                int64_t v36 = v71;
                unint64_t v40 = v74;
                goto LABEL_60;
              }
            }
            uint64_t result = (unint64_t *)v60(v82, v46);
            unint64_t v40 = v74;
            int64_t v36 = v71;
            *(unint64_t *)((char *)v66 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
            BOOL v41 = __OFADD__(v72++, 1);
            uint64_t v5 = v80;
            uint64_t v4 = v81;
            if (v41) {
              goto LABEL_66;
            }
            if (!v40) {
              goto LABEL_40;
            }
          }
          else
          {
            uint64_t v60 = *v56;
            unint64_t v40 = v74;
LABEL_60:
            uint64_t result = (unint64_t *)v60(v82, v46);
            if (!v40) {
              goto LABEL_40;
            }
          }
LABEL_39:
          uint64_t v74 = (v40 - 1) & v40;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a4 + 56);
    uint64_t v64 = a4 + 56;
    uint64_t v9 = 1 << *(unsigned char *)(a4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v8;
    uint64_t v12 = sub_18FD01EE0();
    uint64_t v62 = (uint64_t)&v62;
    uint64_t result = (unint64_t *)MEMORY[0x1F4188790](v12);
    v82 = v13;
    uint64_t v69 = (char *)&v62 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v70 = v14;
    uint64_t v72 = 0;
    int64_t v15 = 0;
    int64_t v65 = (unint64_t)(v9 + 63) >> 6;
    unint64_t v79 = v14 + 16;
    int64_t v68 = v14 + 32;
    uint64_t v75 = v5 + 56;
    unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v14 + 8);
    if (v11) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v19 = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      if (v19 < v65)
      {
        unint64_t v20 = *(void *)(v64 + 8 * v19);
        ++v15;
        if (v20) {
          goto LABEL_23;
        }
        int64_t v15 = v19 + 1;
        if (v19 + 1 >= v65) {
          goto LABEL_62;
        }
        unint64_t v20 = *(void *)(v64 + 8 * v15);
        if (v20) {
          goto LABEL_23;
        }
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v65) {
          goto LABEL_62;
        }
        unint64_t v20 = *(void *)(v64 + 8 * v15);
        if (v20)
        {
LABEL_23:
          uint64_t v74 = (v20 - 1) & v20;
          for (unint64_t j = __clz(__rbit64(v20)) + (v15 << 6); ; unint64_t j = __clz(__rbit64(v11)) | (v15 << 6))
          {
            uint64_t v23 = v69;
            unint64_t v22 = v70;
            unint64_t v24 = *(void *)(v70 + 72);
            unint64_t v25 = *(void *)(v4 + 48) + v24 * j;
            v77 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
            unint64_t v78 = v24;
            uint64_t v26 = ((uint64_t (*)(char *, unint64_t, uint64_t))v77)(v69, v25, v12);
            v73 = &v62;
            MEMORY[0x1F4188790](v26);
            unint64_t v76 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
            unint64_t v28 = (char *)&v62 - v76;
            (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)&v62 - v76, v23, v12);
            sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
            uint64_t v29 = sub_18FD020C0();
            uint64_t v30 = -1 << *(unsigned char *)(v5 + 32);
            unint64_t v31 = v29 & ~v30;
            if ((*(void *)(v75 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
            {
              uint64_t v67 = (unint64_t)v16 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              int64_t v71 = v15;
              BOOL v32 = v16;
              uint64_t v33 = ~v30;
              while (1)
              {
                MEMORY[0x1F4188790](v29);
                uint64_t v34 = (char *)&v62 - v76;
                v77((char *)&v62 - v76, *(void *)(v80 + 48) + v31 * v78, v12);
                sub_18FCAC3A0(&qword_1E926C178, MEMORY[0x1F418BDC8]);
                char v35 = sub_18FD020F0();
                int64_t v17 = *v32;
                uint64_t v29 = (*v32)(v34, v12);
                if (v35) {
                  break;
                }
                unint64_t v31 = (v31 + 1) & v33;
                if (((*(void *)(v75 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
                {
                  uint64_t v4 = v81;
                  unint64_t v16 = v32;
                  uint64_t v5 = v80;
                  int64_t v15 = v71;
                  unint64_t v11 = v74;
                  goto LABEL_8;
                }
              }
              unint64_t v16 = v32;
              uint64_t result = (unint64_t *)v17(v28, v12);
              *(unint64_t *)((char *)v66 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
              int64_t v15 = v71;
              if (__OFADD__(v72, 1)) {
                goto LABEL_65;
              }
              ++v72;
              uint64_t v5 = v80;
              uint64_t v4 = v81;
              unint64_t v11 = v74;
              if (!v74) {
                goto LABEL_10;
              }
            }
            else
            {
              int64_t v17 = *v16;
              uint64_t v4 = v81;
              unint64_t v11 = v74;
LABEL_8:
              uint64_t result = (unint64_t *)v17(v28, v12);
              if (!v11) {
                goto LABEL_10;
              }
            }
LABEL_9:
            uint64_t v74 = (v11 - 1) & v11;
          }
        }
        int64_t v21 = v19 + 3;
        if (v21 < v65)
        {
          unint64_t v20 = *(void *)(v64 + 8 * v21);
          if (v20)
          {
            int64_t v15 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v15 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_67;
            }
            if (v15 >= v65) {
              break;
            }
            unint64_t v20 = *(void *)(v64 + 8 * v15);
            ++v21;
            if (v20) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_62:
      uint64_t v61 = v72;
      swift_retain();
      return (unint64_t *)sub_18FCAB898(v66, v63, v61, v5);
    }
    __break(1u);
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_18FCAB898(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C1A8);
  uint64_t result = sub_18FD02730();
  uint64_t v6 = result;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v39 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v38)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      unint64_t v16 = v37[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v38) {
          goto LABEL_37;
        }
        unint64_t v16 = v37[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v38) {
            goto LABEL_37;
          }
          unint64_t v16 = v37[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v38) {
              goto LABEL_37;
            }
            unint64_t v16 = v37[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v38) {
                  goto LABEL_37;
                }
                unint64_t v16 = v37[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = sub_18FD01EE0();
    unint64_t v40 = &v37;
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    unint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v4;
    uint64_t v26 = *(void *)(v4 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
    uint64_t result = sub_18FD020C0();
    uint64_t v28 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v12 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v6 + 48) + v31 * v27, v22, v19);
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v25;
    uint64_t v11 = v39;
    if (!v5) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_18FCABC08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_18FD01EE0();
  sub_18FCAC3A0(&qword_1E926C170, MEMORY[0x1F418BDC8]);
  uint64_t v23 = sub_18FD02570();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B888);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 - 8);
  v17[1] = v3 - 8;
  if (v2)
  {
    uint64_t v7 = v17[0];
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v18 = *(void *)(v17[0] + 72);
    unint64_t v22 = (void (**)(char *, void, uint64_t, uint64_t))(v17[0] + 56);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v17[0] + 16);
    uint64_t v20 = v17[0] + 16;
    uint64_t v21 = v9;
    uint64_t v19 = (uint64_t (**)(char *, uint64_t, uint64_t))(v17[0] + 48);
    v17[2] = v17[0] + 8;
    v17[3] = v17[0] + 32;
    while (1)
    {
      v21(v6, v8, v3);
      (*v22)(v6, 0, 1, v3);
      uint64_t v10 = (*v19)(v6, 1, v3);
      if (v10 == 1) {
        break;
      }
      uint64_t v11 = MEMORY[0x1F4188790](v10);
      unint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v11);
      uint64_t v15 = (char *)v17 - v14;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v17 - v14, v6, v3);
      sub_18FCA9EE4(v13, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v3);
      v8 += v18;
      if (!--v2) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17[0] + 56))(v6, 1, 1, v3);
  }
  return v23;
}

uint64_t sub_18FCABEC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B888);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = sub_18FD01EE0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = v7;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v20 = *(void *)(v7 + 72);
    uint64_t v24 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 16;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v22 = v11;
    uint64_t v23 = v10;
    uint64_t v21 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v19[1] = v8 + 8;
    id v19[2] = v8 + 32;
    while (1)
    {
      v23(v4, v9, v6);
      (*v24)(v4, 0, 1, v6);
      uint64_t result = (*v21)(v4, 1, v6);
      if (result == 1) {
        break;
      }
      uint64_t v13 = MEMORY[0x1F4188790](result);
      uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x1F4188790](v13);
      uint64_t v17 = (char *)v19 - v16;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)v19 - v16, v4, v6);
      sub_18FCA9EE4(v15, v17);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v6);
      v9 += v20;
      if (!--v5) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    uint64_t v18 = sub_18FD01EE0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  }
  return result;
}

uint64_t sub_18FCAC154@<X0>(char *a1@<X8>)
{
  return sub_18FCA8E90(*(void *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_18FCAC174@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCA9070(a1);
}

void *sub_18FCAC198@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCAC1B0(a1);
}

void *sub_18FCAC1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v6);
  if (!v2)
  {
    int v5 = HIDWORD(v6);
    *(unsigned char *)a1 = v6;
    *(_DWORD *)(a1 + 4) = v5;
  }
  return result;
}

uint64_t sub_18FCAC1FC()
{
  return type metadata accessor for AXCachedLocaleCharacterSupportMatrix();
}

uint64_t type metadata accessor for AXCachedLocaleCharacterSupportMatrix()
{
  uint64_t result = qword_1E926C188;
  if (!qword_1E926C188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18FCAC250()
{
  uint64_t result = sub_18FD01F90();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_18FD01D50();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for AXCachedLocaleCharacterSupportMatrix(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXCachedLocaleCharacterSupportMatrix);
}

uint64_t dispatch thunk of AXCachedLocaleCharacterSupportMatrix.__allocating_init(locale:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of AXCachedLocaleCharacterSupportMatrix.supports(character:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AXCachedLocaleCharacterSupportMatrix.supports(string:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_18FCAC3A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCAC3EC@<X0>(char *a1@<X8>)
{
  return sub_18FCAC154(a1);
}

uint64_t sub_18FCAC404@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCAC174(a1);
}

uint64_t AXAsyncTimer.__allocating_init(_:repeats:_:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = sub_18FD02430();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v12);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(double *)(v14 + 32) = a4;
  *(void *)(v14 + 40) = a2;
  *(void *)(v14 + 4_Block_object_dispose(&a9, 8) = a3;
  *(unsigned char *)(v14 + 56) = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_18FCA5CCC((uint64_t)v10);
  }
  else
  {
    sub_18FD02420();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    if (*(void *)(v14 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_18FD02390();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
      if (v17 | v15)
      {
        v19[0] = 0;
        v19[1] = 0;
        id v19[2] = v15;
        void v19[3] = v17;
      }
    }
  }
  *(void *)(v11 + 16) = swift_task_create();
  return v11;
}

uint64_t AXAsyncTimer.init(_:repeats:_:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_18FD02430();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  *(double *)(v15 + 32) = a4;
  *(void *)(v15 + 40) = a2;
  *(void *)(v15 + 4_Block_object_dispose(&a9, 8) = a3;
  *(unsigned char *)(v15 + 56) = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_18FCA5CCC((uint64_t)v12);
  }
  else
  {
    sub_18FD02420();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(void *)(v15 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = sub_18FD02390();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
      if (v18 | v16)
      {
        v20[0] = 0;
        v20[1] = 0;
        v20[2] = v16;
        v20[3] = v18;
      }
    }
  }
  *(void *)(v5 + 16) = swift_task_create();
  return v5;
}

uint64_t sub_18FCAC8B8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 33) = a7;
  *(void *)(v7 + 4_Block_object_dispose(&a9, 8) = a5;
  *(void *)(v7 + 56) = a6;
  *(double *)(v7 + 40) = a1;
  uint64_t v8 = sub_18FD02830();
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 72) = *(void *)(v8 - 8);
  *(void *)(v7 + 80) = swift_task_alloc();
  uint64_t v9 = sub_18FD02820();
  *(void *)(v7 + 8_Block_object_dispose(&a9, 8) = v9;
  *(void *)(v7 + 96) = *(void *)(v9 - 8);
  *(void *)(v7 + 104) = swift_task_alloc();
  *(void *)(v7 + 112) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCAC9EC, 0, 0);
}

uint64_t sub_18FCAC9EC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_18FD027F0();
  sub_18FD02E00();
  sub_18FD02800();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 120) = v4;
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  sub_18FD02D10();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  unint64_t v6 = sub_18FCAD460();
  void *v5 = v0;
  v5[1] = sub_18FCACB20;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 64);
  return MEMORY[0x1F4187DE8](v7, v0 + 16, v8, v9, v6);
}

uint64_t sub_18FCACB20()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[9] + 8))(v2[10], v2[8]);
  if (v0) {
    uint64_t v3 = sub_18FCAD038;
  }
  else {
    uint64_t v3 = sub_18FCACC64;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_18FCACC64()
{
  if (sub_18FD02510())
  {
    (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 112), *(void *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))(*(void *)(v0 + 48) + **(int **)(v0 + 48));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_18FCACDA4;
    return v4();
  }
}

uint64_t sub_18FCACDA4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCACEA0, 0, 0);
}

uint64_t sub_18FCACEA0()
{
  if (*(unsigned char *)(v0 + 33) == 1 && (sub_18FD02510() & 1) == 0)
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = sub_18FD02E00();
    MEMORY[0x192FC1C70](v8);
    v3(v5, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v4, v6);
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    sub_18FD02D10();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v9;
    unint64_t v10 = sub_18FCAD460();
    *uint64_t v9 = v0;
    v9[1] = sub_18FCACB20;
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 64);
    return MEMORY[0x1F4187DE8](v11, v0 + 16, v12, v13, v10);
  }
  else
  {
    (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 112), *(void *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

uint64_t sub_18FCAD038()
{
  (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_18FCAD0CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_18FCA1444;
  return sub_18FCAC8B8(v6, a1, v4, v5, v7, v8, v9);
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_18FCAD1E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_18FCA05A0;
  return sub_18FCAC8B8(v6, a1, v4, v5, v7, v8, v9);
}

Swift::Void __swiftcall AXAsyncTimer.cancel()()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C010);
  sub_18FD02500();
  swift_release();
}

uint64_t AXAsyncTimer.deinit()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C010);
  sub_18FD02500();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AXAsyncTimer.__deallocating_deinit()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C010);
  sub_18FD02500();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AXAsyncTimer()
{
  return self;
}

uint64_t method lookup function for AXAsyncTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXAsyncTimer);
}

uint64_t dispatch thunk of AXAsyncTimer.__allocating_init(_:repeats:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_18FCAD460()
{
  unint64_t result = qword_1E926C1D0;
  if (!qword_1E926C1D0)
  {
    sub_18FD02830();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E926C1D0);
  }
  return result;
}

uint64_t Locale.init(withAXRemapping:)()
{
  uint64_t v0 = sub_18FD01E10();
  MEMORY[0x1F4188790](v0 - 8);
  Locale.Components.init(withAXRemapping:)((uint64_t)&v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_18FD01E20();
}

uint64_t Locale.Components.init(withAXRemapping:)@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E926B868 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E9270858;
  uint64_t v3 = sub_18FD02180();
  if (*(void *)(v2 + 16) && (unint64_t v5 = sub_18FCA963C(v3, v4), (v6 & 1) != 0))
  {
    uint64_t v7 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v5);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_18FD01E10();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x1F4188790](v10);
    uint64_t v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
    Locale.Components.init(withAXRemapping:)(v8, v9);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v13, v10);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_18FD01E10();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x1F4188790](v15);
    uint64_t v18 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_18FD01E00();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(a1, v18, v15);
    uint64_t v19 = sub_18FD01F30();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v19);
    uint64_t v22 = &v33[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_18FD01DF0();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B878);
    uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
    MEMORY[0x1F4188790](v23 - 8);
    sub_18FD01F10();
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v25 = sub_18FD01E80();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48))(&v33[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, v25))
    {
      return sub_18FCA7A04((uint64_t)&v33[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_1E926B878);
    }
    else
    {
      sub_18FD01E40();
      sub_18FCA7A04((uint64_t)&v33[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_1E926B878);
      uint64_t v27 = sub_18FD02180();
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      if (qword_1E926B860 != -1) {
        swift_once();
      }
      if (*(void *)(qword_1E9270850 + 16) && (sub_18FCA963C(v27, v29), (v30 & 1) != 0))
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v31);
        sub_18FD01E90();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(&v33[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)], 0, 1, v25);
        char v32 = (uint64_t (*)(unsigned char *, void))sub_18FD01DE0();
        sub_18FD01F20();
        return v32(v33, 0);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t Locale.minimalCanonicLocaleIdentifier.getter()
{
  return Locale.canonicIdentifier(includeScript:)(0)._countAndFlagsBits;
}

Swift::String __swiftcall Locale.canonicIdentifier(includeScript:)(Swift::Bool includeScript)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B878);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_18FD01F70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  v67[0] = v1;
  sub_18FD01F80();
  sub_18FD01F40();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v7 + 8);
  v9((char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v10 = sub_18FD01E80();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_18FCA7A04((uint64_t)v5, &qword_1E926B878);
    uint64_t v63 = sub_18FD02890();
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v12 = sub_18FD01E40();
  uint64_t v14 = v13;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  unint64_t v15 = v11 + 8;
  v16(v5, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8B0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07480;
  *(void *)(v17 + 32) = v12;
  *(void *)(v17 + 40) = v14;
  if (includeScript)
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B888);
    uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
    uint64_t v21 = (char *)v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x1F4188790](v19);
    sub_18FD01F80();
    sub_18FD01F60();
    v9((char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    uint64_t v22 = sub_18FD01EE0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    {
      sub_18FCA7A04((uint64_t)v21, &qword_1E926B888);
    }
    else
    {
      uint64_t v24 = sub_18FD01E40();
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
      unint64_t v15 = *(void *)(v17 + 16);
      unint64_t v27 = *(void *)(v17 + 24);
      if (v15 >= v27 >> 1) {
        uint64_t v17 = (uint64_t)sub_18FCAE4E4((char *)(v27 > 1), v15 + 1, 1, (char *)v17);
      }
      *(void *)(v17 + 16) = v15 + 1;
      uint64_t v28 = v17 + 16 * v15;
      *(void *)(v28 + 32) = v24;
      *(void *)(v28 + 40) = v26;
    }
  }
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B880);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01F00();
  uint64_t v32 = sub_18FD01EC0();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
  {
    sub_18FCA7A04((uint64_t)v31, &qword_1E926B880);
  }
  else
  {
    uint64_t v34 = sub_18FD01E40();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
    unint64_t v15 = *(void *)(v17 + 16);
    unint64_t v37 = *(void *)(v17 + 24);
    if (v15 >= v37 >> 1) {
      uint64_t v17 = (uint64_t)sub_18FCAE4E4((char *)(v37 > 1), v15 + 1, 1, (char *)v17);
    }
    *(void *)(v17 + 16) = v15 + 1;
    uint64_t v38 = v17 + 16 * v15;
    *(void *)(v38 + 32) = v34;
    *(void *)(v38 + 40) = v36;
  }
  uint64_t v39 = sub_18FD01E50();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  char v42 = (char *)v67 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B870);
  MEMORY[0x1F4188790](v43 - 8);
  int64_t v45 = (char *)v67 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD01E60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v45, 1, v39) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v45, v39);
    uint64_t v46 = v42;
    uint64_t v47 = sub_18FD01E40();
    int64_t v49 = *(void *)(v17 + 16);
    int64_t v50 = v49 + 3;
    if (__OFADD__(v49, 3))
    {
      __break(1u);
    }
    else
    {
      unint64_t v15 = v47;
      uint64_t v46 = v48;
      unint64_t v51 = *(void *)(v17 + 24);
      unint64_t v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) >= v50)
      {
LABEL_18:
        int64_t v53 = v49 + 1;
        if (v52 <= v49)
        {
          uint64_t v17 = (uint64_t)sub_18FCAE4E4((char *)(v51 > 1), v49 + 1, 1, (char *)v17);
          unint64_t v51 = *(void *)(v17 + 24);
          unint64_t v52 = v51 >> 1;
        }
        *(void *)(v17 + 16) = v53;
        uint64_t v54 = v17 + 16 * v49;
        *(void *)(v54 + 32) = 117;
        *(void *)(v54 + 40) = 0xE100000000000000;
        int64_t v55 = v49 + 2;
        if ((uint64_t)v52 < v55) {
          uint64_t v17 = (uint64_t)sub_18FCAE4E4((char *)(v51 > 1), v55, 1, (char *)v17);
        }
        *(void *)(v17 + 16) = v55;
        uint64_t v56 = v17 + 16 * v53;
        *(void *)(v56 + 32) = 25715;
        *(void *)(v56 + 40) = 0xE200000000000000;
        unint64_t v57 = *(void *)(v17 + 16);
        unint64_t v58 = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
        if (v57 >= v58 >> 1) {
          uint64_t v17 = (uint64_t)sub_18FCAE4E4((char *)(v58 > 1), v57 + 1, 1, (char *)v17);
        }
        *(void *)(v17 + 16) = v57 + 1;
        uint64_t v59 = v17 + 16 * v57;
        *(void *)(v59 + 32) = v15;
        *(void *)(v59 + 40) = v46;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
        goto LABEL_25;
      }
    }
    if (v49 <= v50) {
      int64_t v65 = v49 + 3;
    }
    else {
      int64_t v65 = v49;
    }
    uint64_t v17 = (uint64_t)sub_18FCAE4E4((char *)1, v65, 1, (char *)v17);
    int64_t v49 = *(void *)(v17 + 16);
    unint64_t v51 = *(void *)(v17 + 24);
    unint64_t v52 = v51 >> 1;
    goto LABEL_18;
  }
  sub_18FCA7A04((uint64_t)v45, &qword_1E926B870);
LABEL_25:
  v67[1] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B890);
  sub_18FCAE238();
  uint64_t v60 = sub_18FD020E0();
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = v60;
  uint64_t v64 = v62;
LABEL_32:
  result._id object = v64;
  result._countAndFlagsBits = v63;
  return result;
}

uint64_t Locale.maximalCanonicLocaleIdentifier.getter()
{
  return Locale.canonicIdentifier(includeScript:)(1)._countAndFlagsBits;
}

unint64_t sub_18FCAE238()
{
  unint64_t result = qword_1E926B898;
  if (!qword_1E926B898)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926B890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926B898);
  }
  return result;
}

void *sub_18FCAE294(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E926B848);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FCAE3CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B838);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FCAE4E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18FCAE5E8()
{
  uint64_t v0 = sub_18FCAF67C();
  sub_18FCAF6B0(v0);
  return v0;
}

uint64_t sub_18FCAE61C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_18FCA5CBC(v5);
}

uint64_t (*sub_18FCAE670())()
{
  return j__swift_endAccess;
}

uint64_t AXAsyncStreamSplitter.__allocating_init(initialValueBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AXAsyncStreamSplitter.init(initialValueBlock:)(a1, a2);
  return v4;
}

void *AXAsyncStreamSplitter.init(initialValueBlock:)(uint64_t a1, uint64_t a2)
{
  v2[3] = 0;
  v2[2] = 0;
  sub_18FD024A0();
  v2[4] = sub_18FD02330();
  swift_beginAccess();
  uint64_t v5 = v2[2];
  v2[2] = a1;
  v2[3] = a2;
  sub_18FCA5CBC(v5);
  return v2;
}

uint64_t sub_18FCAE7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = sub_18FD02470();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = sub_18FD024A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - v16;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBD028], v7);
  sub_18FD02440();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v18(v15, v17, v11);
  swift_beginAccess();
  sub_18FD02370();
  sub_18FD02350();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v19 = v2[2];
  if (v19)
  {
    uint64_t v20 = v2[3];
    uint64_t v21 = sub_18FD02430();
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    uint64_t v29 = v6;
    uint64_t v23 = (uint64_t)v28;
    v22(v28, 1, 1, v21);
    v18(v15, v17, v11);
    unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v25 = (char *)swift_allocObject();
    *((void *)v25 + 2) = 0;
    *((void *)v25 + 3) = 0;
    *((void *)v25 + 4) = v29;
    *((void *)v25 + 5) = v19;
    *((void *)v25 + 6) = v20;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v25[v24], v15, v11);
    sub_18FCAF6B0(v19);
    swift_retain();
    sub_18FCAEF08(v23, (uint64_t)&unk_1E926C1E0, (uint64_t)v25);
    swift_release();
    sub_18FCA5CBC(v19);
    sub_18FCA5CCC(v23);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_18FCAEB5C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[2] = a6;
  v7[3] = a7;
  uint64_t v10 = sub_18FD02450();
  void v7[4] = v10;
  void v7[5] = *(void *)(v10 - 8);
  v7[6] = swift_task_alloc();
  v7[7] = *(void *)(a7 - 8);
  v7[8] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  v7[9] = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  v7[10] = v12;
  void *v12 = v7;
  v12[1] = sub_18FCAED08;
  return v14(v11);
}

uint64_t sub_18FCAED08()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCAEE04, 0, 0);
}

uint64_t sub_18FCAEE04()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 16))(v0[8], v1, v6);
  sub_18FD024A0();
  sub_18FD02480();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_18FCAEF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCAFAF0(a1, (uint64_t)v8);
  uint64_t v9 = sub_18FD02430();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_18FCA5CCC((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_18FD02390();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_18FD02420();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_18FCAF0EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FCAF1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_18FD02450();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_18FD024A0();
  sub_18FD02480();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t AXAsyncStreamSplitter.deinit()
{
  swift_beginAccess();
  sub_18FD024A0();
  sub_18FD02370();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_18FD022B0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_18FD02360();
  swift_endAccess();
  sub_18FCA5CBC(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AXAsyncStreamSplitter.__deallocating_deinit()
{
  AXAsyncStreamSplitter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCAF4A8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_18FCAF584;
  return v6(a1);
}

uint64_t sub_18FCAF584()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_18FCAF67C()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_18FCAF6B0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_18FCAF6C0()
{
  uint64_t v1 = sub_18FD024A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_18FCAF798(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = *(void *)(sub_18FD024A0() - 8);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (int *)v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_18FCA05A0;
  return sub_18FCAEB5C(a1, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_18FCAF8AC(uint64_t a1)
{
  return sub_18FCAF1C4(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_18FCAF8C8()
{
  return sub_18FD02490();
}

uint64_t sub_18FCAF90C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_18FCAF67C();
  *a1 = v2;
  a1[1] = v3;
  return sub_18FCAF6B0(v2);
}

uint64_t sub_18FCAF948(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  sub_18FCAF6B0(*a1);
  return sub_18FCAE61C(v1, v2);
}

uint64_t sub_18FCAF98C()
{
  return 8;
}

void *sub_18FCAF998(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_18FCAF9A8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AXAsyncStreamSplitter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AXAsyncStreamSplitter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXAsyncStreamSplitter);
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.initialValueBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.initialValueBlock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.initialValueBlock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.__allocating_init(initialValueBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.subscribe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AXAsyncStreamSplitter.send(event:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_18FCAFAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCAFB58()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t AXCVoiceSelection.voiceId.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___AXCVoiceSelection_voiceId);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AXCVoiceSelection.voiceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___AXCVoiceSelection_voiceId);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_18FCAFD80(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_voiceId);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_18FD02150();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_18FCAFDE8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_18FD02120();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setVoiceId_);
}

void *AXCVoiceSelection.rate.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___AXCVoiceSelection_rate);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void AXCVoiceSelection.rate.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___AXCVoiceSelection_rate);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

void *AXCVoiceSelection.pitch.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___AXCVoiceSelection_pitch);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void AXCVoiceSelection.pitch.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___AXCVoiceSelection_pitch);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

void *AXCVoiceSelection.volume.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___AXCVoiceSelection_volume);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_18FCB00F8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  void *v5 = a3;
  id v7 = a3;
}

void AXCVoiceSelection.volume.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___AXCVoiceSelection_volume);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t AXCVoiceSelection.voiceSettings.getter()
{
  return sub_18FCB04C8();
}

uint64_t AXCVoiceSelection.voiceSettings.setter(uint64_t a1)
{
  return sub_18FCB0590(a1, &OBJC_IVAR___AXCVoiceSelection_voiceSettings);
}

void sub_18FCB0304(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_voiceSettings);
  if (v3)
  {
    id v4 = v3;
    sub_18FCA2634(0, &qword_1E926C2A0);
    uint64_t v5 = sub_18FD02090();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
}

void sub_18FCB0394(void *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    sub_18FCA2634(0, &qword_1E926C2A0);
    uint64_t v3 = sub_18FD02080();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setVoiceSettings_);
}

uint64_t AXCVoiceSelection.effects.getter()
{
  return sub_18FCB04C8();
}

uint64_t sub_18FCB04C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t AXCVoiceSelection.effects.setter(uint64_t a1)
{
  return sub_18FCB0590(a1, &OBJC_IVAR___AXCVoiceSelection_effects);
}

uint64_t sub_18FCB0590(uint64_t a1, void *a2)
{
  id v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *id v4 = a1;
  return swift_bridgeObjectRelease();
}

void sub_18FCB05E0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_effects);
  if (v3)
  {
    id v4 = v3;
    type metadata accessor for AXAudioEffectConfiguration(0);
    uint64_t v5 = sub_18FD02320();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
}

void sub_18FCB0650(void *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    type metadata accessor for AXAudioEffectConfiguration(0);
    uint64_t v3 = sub_18FD02310();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setEffects_);
}

void __swiftcall AXCVoiceSelection.init(voiceId:rate:pitch:volume:voiceSettings:effects:)(AXCVoiceSelection *__return_ptr retstr, Swift::String_optional voiceId, NSNumber_optional rate, NSNumber_optional pitch, NSNumber_optional volume, Swift::OpaquePointer_optional voiceSettings, Swift::OpaquePointer_optional effects)
{
  Class isa = volume.value.super.super.isa;
  uint64_t v8 = *(void *)&pitch.is_nil;
  Class v9 = pitch.value.super.super.isa;
  uint64_t v10 = *(void **)&rate.is_nil;
  Class v11 = rate.value.super.super.isa;
  if (voiceId.value._object)
  {
    uint64_t v12 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v13 = 0;
    if (isa) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v14 = 0;
    goto LABEL_8;
  }
  uint64_t v12 = 0;
  if (!*(void *)&pitch.is_nil) {
    goto LABEL_6;
  }
LABEL_3:
  sub_18FCA2634(0, &qword_1E926C2A0);
  uint64_t v13 = (void *)sub_18FD02080();
  swift_bridgeObjectRelease();
  if (!isa) {
    goto LABEL_7;
  }
LABEL_4:
  type metadata accessor for AXAudioEffectConfiguration(0);
  uint64_t v14 = (void *)sub_18FD02310();
  swift_bridgeObjectRelease();
LABEL_8:
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithVoiceId_rate_pitch_volume_voiceSettings_effects_, v12, v11, v10, v9, v13, v14);
}

id AXCVoiceSelection.init(voiceId:rate:pitch:volume:voiceSettings:effects:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v10 = sub_18FCB12C4(a1, a2, a3, a4, a5, a6, a7);

  return v10;
}

void __swiftcall AXCVoiceSelection.init()(AXCVoiceSelection *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void AXCVoiceSelection.init()()
{
}

void __swiftcall VoiceSelection._bridgeToObjectiveC()(AXCVoiceSelection *__return_ptr retstr)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  int v4 = *(_DWORD *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 28);
  int v6 = *(_DWORD *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 36);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  if (*(unsigned char *)(v1 + 20))
  {
    swift_bridgeObjectRetain();
    id v10 = 0;
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    int v17 = *(_DWORD *)(v1 + 16);
    id v18 = objc_allocWithZone(NSNumber);
    swift_bridgeObjectRetain();
    LODWORD(v19) = v17;
    id v10 = objc_msgSend(v18, sel_initWithFloat_, v19);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      id v11 = objc_allocWithZone(NSNumber);
      LODWORD(v12) = v4;
      id v13 = objc_msgSend(v11, sel_initWithFloat_, v12);
      if ((v7 & 1) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      id v16 = 0;
      if (!v9) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  id v13 = 0;
  if (v7) {
    goto LABEL_8;
  }
LABEL_4:
  id v14 = objc_allocWithZone(NSNumber);
  LODWORD(v15) = v6;
  id v16 = objc_msgSend(v14, sel_initWithFloat_, v15);
  if (v9)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2C0);
    swift_dynamicCast();
    uint64_t v9 = v21;
  }
LABEL_10:
  if (v8)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B0);
    swift_dynamicCast();
    uint64_t v8 = v21;
  }
  id v20 = objc_allocWithZone((Class)AXCVoiceSelection);
  sub_18FCB1198(v2, v3, v10, v13, v16, v9, v8);
}

uint64_t static VoiceSelection._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t *a2)
{
  uint64_t result = _s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_18FD02890();
    __break(1u);
  }
  return result;
}

uint64_t sub_18FCB0CCC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2D0);
    uint64_t v2 = sub_18FD028C0();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v13 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
LABEL_23:
    id v11 = *(void **)(*(void *)(a1 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    id v12 = v11;
    MEMORY[0x192FC19C0]();

    swift_bridgeObjectRelease();
    sub_18FCB18DC();
    swift_release();
    return 0;
  }
  if (v13 <= 1) {
    goto LABEL_24;
  }
  unint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = 1;
  if (v8)
  {
LABEL_22:
    unint64_t v7 = __clz(__rbit64(v8)) + (v9 << 6);
    goto LABEL_23;
  }
  uint64_t v9 = 2;
  if (v13 <= 2)
  {
LABEL_24:
    sub_18FCB18DC();
    return v2;
  }
  unint64_t v8 = *(void *)(a1 + 80);
  if (v8) {
    goto LABEL_22;
  }
  uint64_t v9 = 3;
  if (v13 <= 3) {
    goto LABEL_24;
  }
  unint64_t v8 = *(void *)(a1 + 88);
  if (v8) {
    goto LABEL_22;
  }
  uint64_t v9 = 4;
  if (v13 <= 4) {
    goto LABEL_24;
  }
  unint64_t v8 = *(void *)(a1 + 96);
  if (v8) {
    goto LABEL_22;
  }
  uint64_t v10 = 5;
  if (v13 <= 5) {
    goto LABEL_24;
  }
  unint64_t v8 = *(void *)(a1 + 104);
  if (v8)
  {
    uint64_t v9 = 5;
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v9 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v8 = *(void *)(a1 + 64 + 8 * v9);
    ++v10;
    if (v8) {
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

void static VoiceSelection._unconditionallyBridgeFromObjectiveC(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1
    && (long long v9 = xmmword_18FD07D60,
        long long v10 = 0u,
        memset(v11, 0, 24),
        id v3 = a1,
        (_s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(v3, (uint64_t *)&v9) & 1) != 0)&& (uint64_t v4 = *((void *)&v9 + 1), *((void *)&v9 + 1) != 1))
  {
    uint64_t v6 = *((void *)&v10 + 1);
    uint64_t v5 = *(void *)&v11[0];
    uint64_t v7 = v10;
    uint64_t v8 = v9;

    *(void *)a2 = v8;
    *(void *)(a2 + _Block_object_dispose(&a9, 8) = v4;
    *(_DWORD *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 20) = BYTE4(v7) & 1;
    *(_DWORD *)(a2 + 24) = v6;
    *(unsigned char *)(a2 + 2_Block_object_dispose(&a9, 8) = BYTE4(v6) & 1;
    *(_DWORD *)(a2 + 32) = v5;
    *(unsigned char *)(a2 + 36) = BYTE4(v5) & 1;
    *(_OWORD *)(a2 + 40) = *(_OWORD *)((char *)v11 + 8);
  }
  else
  {
    sub_18FD02890();
    __break(1u);
  }
}

uint64_t sub_18FCB1120(void *a1, uint64_t *a2)
{
  uint64_t result = _s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_18FD02890();
    __break(1u);
  }
  return result;
}

id sub_18FCB1198(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  if (a2)
  {
    id v14 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    double v15 = 0;
    if (a7) {
      goto LABEL_4;
    }
LABEL_7:
    id v16 = 0;
    goto LABEL_8;
  }
  id v14 = 0;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  sub_18FCA2634(0, &qword_1E926C2A0);
  double v15 = (void *)sub_18FD02080();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_7;
  }
LABEL_4:
  type metadata accessor for AXAudioEffectConfiguration(0);
  id v16 = (void *)sub_18FD02310();
  swift_bridgeObjectRelease();
LABEL_8:
  id v17 = objc_msgSend(v8, sel_initWithVoiceId_rate_pitch_volume_voiceSettings_effects_, v14, a3, a4, a5, v15, v16);

  return v17;
}

id sub_18FCB12C4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  long long v10 = &v7[OBJC_IVAR___AXCVoiceSelection_voiceId];
  *(void *)long long v10 = 0;
  *((void *)v10 + 1) = 0;
  id v11 = (void **)&v7[OBJC_IVAR___AXCVoiceSelection_rate];
  *(void *)&v7[OBJC_IVAR___AXCVoiceSelection_rate] = 0;
  id v12 = (void **)&v7[OBJC_IVAR___AXCVoiceSelection_pitch];
  *(void *)&v7[OBJC_IVAR___AXCVoiceSelection_pitch] = 0;
  int64_t v13 = (void **)&v7[OBJC_IVAR___AXCVoiceSelection_volume];
  *(void *)&v7[OBJC_IVAR___AXCVoiceSelection_volume] = 0;
  id v14 = &v7[OBJC_IVAR___AXCVoiceSelection_voiceSettings];
  *(void *)&v7[OBJC_IVAR___AXCVoiceSelection_voiceSettings] = 0;
  double v15 = &v7[OBJC_IVAR___AXCVoiceSelection_effects];
  *(void *)&v7[OBJC_IVAR___AXCVoiceSelection_effects] = 0;
  swift_beginAccess();
  *(void *)long long v10 = a1;
  *((void *)v10 + 1) = a2;
  id v16 = v7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v17 = *v11;
  void *v11 = a3;
  id v18 = a3;

  swift_beginAccess();
  double v19 = *v12;
  void *v12 = a4;
  id v20 = a4;

  swift_beginAccess();
  uint64_t v21 = *v13;
  void *v13 = a5;
  id v22 = a5;

  swift_beginAccess();
  *(void *)id v14 = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)double v15 = a7;

  swift_bridgeObjectRelease();
  v29.receiver = v16;
  v29.super_class = (Class)AXCVoiceSelection;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t _s15AXCoreUtilities14VoiceSelectionV34_conditionallyBridgeFromObjectiveC_6resultSbSo08AXCVoiceD0C_ACSgztFZ_0(void *a1, uint64_t *a2)
{
  sub_18FCB1888(*a2, a2[1]);
  id v4 = objc_msgSend(a1, sel_voiceId);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_18FD02150();
    uint64_t v29 = v7;
    uint64_t v31 = v6;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  id v8 = objc_msgSend(a1, sel_rate, v29, v31);
  long long v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, sel_floatValue);
    unsigned int v11 = v10;

    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(a1, sel_pitch);
  id v14 = v13;
  if (v13)
  {
    objc_msgSend(v13, sel_floatValue);
    unsigned int v16 = v15;

    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v18 = objc_msgSend(a1, sel_volume);
  double v19 = v18;
  if (v18)
  {
    objc_msgSend(v18, sel_floatValue);
    unsigned int v21 = v20;

    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0;
  }
  id v23 = objc_msgSend(a1, sel_effects);
  if (v23)
  {
    unint64_t v24 = v23;
    type metadata accessor for AXAudioEffectConfiguration(0);
    sub_18FD02320();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2A8);
    if (swift_dynamicCast()) {
      uint64_t v25 = v33;
    }
    else {
      uint64_t v25 = 0;
    }
  }
  else
  {
    uint64_t v25 = 0;
  }
  id v26 = objc_msgSend(a1, sel_voiceSettings);
  if (v26)
  {
    sub_18FCA2634(0, &qword_1E926C2A0);
    uint64_t v27 = sub_18FD02090();

    id v26 = (id)sub_18FCB0CCC(v27);
    swift_bridgeObjectRelease();
  }
  *a2 = v32;
  a2[1] = v30;
  a2[2] = v12 | ((unint64_t)(v9 == 0) << 32);
  a2[3] = v17 | ((unint64_t)(v14 == 0) << 32);
  a2[4] = v22 | ((unint64_t)(v19 == 0) << 32);
  a2[5] = v25;
  a2[6] = (uint64_t)v26;
  return 1;
}

char *keypath_get_selector_voiceId()
{
  return sel_voiceId;
}

char *keypath_get_selector_rate()
{
  return sel_rate;
}

id sub_18FCB1744@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_rate);
  *a2 = result;
  return result;
}

id sub_18FCB1780(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRate_, *a1);
}

char *keypath_get_selector_pitch()
{
  return sel_pitch;
}

id sub_18FCB17A0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_pitch);
  *a2 = result;
  return result;
}

id sub_18FCB17DC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPitch_, *a1);
}

char *keypath_get_selector_volume()
{
  return sel_volume;
}

id sub_18FCB17FC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_volume);
  *a2 = result;
  return result;
}

id sub_18FCB1838(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVolume_, *a1);
}

char *keypath_get_selector_voiceSettings()
{
  return sel_voiceSettings;
}

char *keypath_get_selector_effects()
{
  return sel_effects;
}

uint64_t type metadata accessor for AXCVoiceSelection(uint64_t a1)
{
  return sub_18FCA2634(a1, &qword_1E926C2C8);
}

uint64_t sub_18FCB1888(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18FCB18DC()
{
  return swift_release();
}

uint64_t VoiceSelection.init(voiceId:rate:pitch:volume:effects:voiceSettings:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + _Block_object_dispose(&a9, 8) = a2;
  *(_DWORD *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 2_Block_object_dispose(&a9, 8) = BYTE4(a4) & 1;
  *(_DWORD *)(a8 + 32) = a5;
  *(unsigned char *)(a8 + 36) = BYTE4(a5) & 1;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 4_Block_object_dispose(&a9, 8) = a7;
  return result;
}

uint64_t VoiceSelection.voiceId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FCB1944(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = *a2;
  uint64_t v6 = a2[1];
  *a2 = v3;
  a2[1] = v4;
  if (!v6)
  {
    if (!v4) {
      return result;
    }
    goto LABEL_12;
  }
  if (!v4 || (result == v3 ? (BOOL v7 = v6 == v4) : (BOOL v7 = 0), !v7 && (sub_18FD02C00() & 1) == 0))
  {
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a2[6] = 0;
    return result;
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t VoiceSelection.voiceId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = *v2;
  uint64_t v5 = v2[1];
  uint64_t *v2 = a1;
  v2[1] = a2;
  if (!v5)
  {
    if (!a2) {
      return result;
    }
    goto LABEL_12;
  }
  if (!a2 || (result == a1 ? (BOOL v6 = v5 == a2) : (BOOL v6 = 0), !v6 && (sub_18FD02C00() & 1) == 0))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    v2[6] = 0;
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t (*VoiceSelection.voiceId.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_18FCB1AC8;
}

uint64_t sub_18FCB1AC8(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (uint64_t *)a1[2];
  uint64_t v4 = *a1;
  uint64_t result = *v3;
  uint64_t v6 = v3[1];
  *uint64_t v3 = v4;
  v3[1] = v2;
  if ((a2 & 1) == 0)
  {
    if (v6)
    {
      if (v2)
      {
        BOOL v8 = result == v4 && v6 == v2;
        if (v8 || (sub_18FD02C00() & 1) != 0) {
          goto LABEL_20;
        }
      }
    }
    else if (!v2)
    {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    v3[6] = 0;
    return result;
  }
  if (!v6)
  {
    if (!v2) {
      goto LABEL_20;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3[6] = 0;
    goto LABEL_20;
  }
  if (!v2) {
    goto LABEL_19;
  }
  BOOL v7 = result == v4 && v6 == v2;
  if (!v7 && (sub_18FD02C00() & 1) == 0) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  return swift_bridgeObjectRelease();
}

unint64_t VoiceSelection.rate.getter()
{
  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t VoiceSelection.rate.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VoiceSelection.rate.modify())()
{
  return nullsub_1;
}

unint64_t VoiceSelection.pitch.getter()
{
  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t VoiceSelection.pitch.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 2_Block_object_dispose(&a9, 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VoiceSelection.pitch.modify())()
{
  return nullsub_1;
}

unint64_t VoiceSelection.volume.getter()
{
  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

uint64_t VoiceSelection.volume.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VoiceSelection.volume.modify())()
{
  return nullsub_1;
}

uint64_t VoiceSelection.effects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VoiceSelection.effects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*VoiceSelection.effects.modify())()
{
  return nullsub_1;
}

uint64_t VoiceSelection.voiceSettings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VoiceSelection.voiceSettings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 4_Block_object_dispose(&a9, 8) = a1;
  return result;
}

uint64_t (*VoiceSelection.voiceSettings.modify())()
{
  return nullsub_1;
}

unint64_t static VoiceSelection.typeKey.getter()
{
  return 0xD000000000000015;
}

void sub_18FCB1D80()
{
  qword_1E926C2D8 = MEMORY[0x1E4FBC860];
}

uint64_t static VoiceSelection.migrations.getter()
{
  if (qword_1E926BF08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static VoiceSelection.migrations.setter(uint64_t a1)
{
  if (qword_1E926BF08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1E926C2D8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static VoiceSelection.migrations.modify())()
{
  if (qword_1E926BF08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t VoiceSelection.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v2 + 20);
  int v5 = *(unsigned __int8 *)(v2 + 28);
  int v6 = *(unsigned __int8 *)(v2 + 36);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v2 + 48);
  if (*(void *)(v2 + 8))
  {
    sub_18FD02D80();
    swift_bridgeObjectRetain();
    sub_18FD021E0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_18FD02D80();
    if (v4)
    {
LABEL_3:
      sub_18FD02D80();
      if (!v5) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  sub_18FD02D80();
  sub_18FD02D90();
  if (!v5)
  {
LABEL_4:
    sub_18FD02D80();
    sub_18FD02D90();
    if (!v6) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  sub_18FD02D80();
  if (!v6)
  {
LABEL_5:
    sub_18FD02D80();
    sub_18FD02D90();
    if (v8) {
      goto LABEL_6;
    }
LABEL_14:
    sub_18FD02D80();
    if (v7) {
      goto LABEL_7;
    }
    return sub_18FD02D80();
  }
LABEL_13:
  sub_18FD02D80();
  if (!v8) {
    goto LABEL_14;
  }
LABEL_6:
  sub_18FD02D80();
  swift_bridgeObjectRetain();
  sub_18FCB3174(a1, v8);
  swift_bridgeObjectRelease();
  if (!v7) {
    return sub_18FD02D80();
  }
LABEL_7:
  sub_18FD02D80();
  swift_bridgeObjectRetain();
  sub_18FCB2FCC(a1, v7);
  return swift_bridgeObjectRelease();
}

BOOL sub_18FCB20C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_18FCB20D8()
{
  return sub_18FD02DA0();
}

uint64_t sub_18FCB2120()
{
  return sub_18FD02D70();
}

uint64_t sub_18FCB214C()
{
  return sub_18FD02DA0();
}

uint64_t sub_18FCB2190()
{
  uint64_t result = 0x64496563696F76;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702125938;
      break;
    case 2:
      uint64_t result = 0x6863746970;
      break;
    case 3:
      uint64_t result = 0x656D756C6F76;
      break;
    case 4:
      uint64_t result = 0x73746365666665;
      break;
    case 5:
      uint64_t result = 0x7465536563696F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_18FCB2250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18FCB3D14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18FCB2278()
{
  return 0;
}

void sub_18FCB2284(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_18FCB2290(uint64_t a1)
{
  unint64_t v2 = sub_18FCB34C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_18FCB22CC(uint64_t a1)
{
  unint64_t v2 = sub_18FCB34C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VoiceSelection.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(unsigned int *)(v1 + 16);
  int v22 = *(unsigned __int8 *)(v1 + 20);
  uint64_t v18 = *(unsigned int *)(v1 + 24);
  int v17 = *(unsigned __int8 *)(v1 + 28);
  uint64_t v16 = *(unsigned int *)(v1 + 32);
  int v15 = *(unsigned __int8 *)(v1 + 36);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 48);
  uint64_t v14 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FCB34C0();
  sub_18FD02DF0();
  LOBYTE(v21) = 0;
  uint64_t v8 = v20;
  sub_18FD02960();
  if (!v8)
  {
    char v9 = v17;
    char v10 = v15;
    LOBYTE(v21) = 1;
    char v23 = v22;
    sub_18FD02970();
    LOBYTE(v21) = 2;
    char v23 = v9;
    sub_18FD02970();
    LOBYTE(v21) = 3;
    char v23 = v10;
    sub_18FD02970();
    uint64_t v21 = v14;
    char v23 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2A8);
    sub_18FCB3514(&qword_1E926C2F0, &qword_1E926C2F8);
    sub_18FD02980();
    uint64_t v21 = v13;
    char v23 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B8);
    sub_18FCB35D8(&qword_1E926C300);
    sub_18FD02980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VoiceSelection.hashValue.getter()
{
  int v1 = *((_DWORD *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 20);
  int v3 = *((_DWORD *)v0 + 6);
  char v4 = *((unsigned char *)v0 + 28);
  int v5 = *((_DWORD *)v0 + 8);
  char v6 = *((unsigned char *)v0 + 36);
  long long v9 = *v0;
  int v10 = v1;
  char v11 = v2;
  int v12 = v3;
  char v13 = v4;
  int v14 = v5;
  char v15 = v6;
  long long v16 = *(long long *)((char *)v0 + 40);
  sub_18FD02D60();
  VoiceSelection.hash(into:)((uint64_t)v8);
  return sub_18FD02DA0();
}

uint64_t VoiceSelection.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C308);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FCB34C0();
  sub_18FD02DE0();
  if (!v2)
  {
    LOBYTE(v25) = 0;
    uint64_t v10 = sub_18FD028F0();
    uint64_t v12 = v11;
    LOBYTE(v25) = 1;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_18FD02900();
    LOBYTE(v25) = 2;
    uint64_t v22 = sub_18FD02900();
    LOBYTE(v25) = 3;
    uint64_t v21 = sub_18FD02900();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2A8);
    char v24 = 4;
    sub_18FCB3514(&qword_1E926C310, &qword_1E926C318);
    sub_18FD02910();
    uint64_t v20 = a2;
    uint64_t v13 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B8);
    char v24 = 5;
    sub_18FCB35D8(&qword_1E926C320);
    swift_bridgeObjectRetain();
    sub_18FD02910();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v15 = v20;
    uint64_t *v20 = v10;
    v15[1] = v12;
    char v16 = BYTE4(v23);
    *((_DWORD *)v15 + 4) = v23;
    *((unsigned char *)v15 + 20) = v16 & 1;
    char v17 = BYTE4(v22);
    *((_DWORD *)v15 + 6) = v22;
    *((unsigned char *)v15 + 2_Block_object_dispose(&a9, 8) = v17 & 1;
    char v18 = BYTE4(v21);
    *((_DWORD *)v15 + _Block_object_dispose(&a9, 8) = v21;
    *((unsigned char *)v15 + 36) = v18 & 1;
    v15[5] = v13;
    v15[6] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_18FCB2A60()
{
  return 0xD000000000000015;
}

uint64_t sub_18FCB2A7C()
{
  if (qword_1E926BF08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCB2AF8()
{
  int v1 = *((_DWORD *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 20);
  int v3 = *((_DWORD *)v0 + 6);
  char v4 = *((unsigned char *)v0 + 28);
  int v5 = *((_DWORD *)v0 + 8);
  char v6 = *((unsigned char *)v0 + 36);
  long long v9 = *v0;
  int v10 = v1;
  char v11 = v2;
  int v12 = v3;
  char v13 = v4;
  int v14 = v5;
  char v15 = v6;
  long long v16 = *(long long *)((char *)v0 + 40);
  sub_18FD02D60();
  VoiceSelection.hash(into:)((uint64_t)v8);
  return sub_18FD02DA0();
}

uint64_t sub_18FCB2B80()
{
  int v1 = *((_DWORD *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 20);
  int v3 = *((_DWORD *)v0 + 6);
  char v4 = *((unsigned char *)v0 + 28);
  int v5 = *((_DWORD *)v0 + 8);
  char v6 = *((unsigned char *)v0 + 36);
  long long v9 = *v0;
  int v10 = v1;
  char v11 = v2;
  int v12 = v3;
  char v13 = v4;
  int v14 = v5;
  char v15 = v6;
  long long v16 = *(long long *)((char *)v0 + 40);
  sub_18FD02D60();
  VoiceSelection.hash(into:)((uint64_t)v8);
  return sub_18FD02DA0();
}

uint64_t sub_18FCB2C00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return VoiceSelection.init(from:)(a1, a2);
}

uint64_t sub_18FCB2C18(void *a1)
{
  return VoiceSelection.encode(to:)(a1);
}

uint64_t sub_18FCB2C30(uint64_t a1, uint64_t a2)
{
  char v4 = (int *)type metadata accessor for AudioEffectConfiguration();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  int v10 = (char *)&v24 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v22 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        uint64_t v15 = v14;
        sub_18FCB3F9C(a1 + v12, (uint64_t)v10);
        sub_18FCB3F9C(a2 + v12, (uint64_t)v7);
        if ((sub_18FD01DA0() & 1) == 0) {
          break;
        }
        uint64_t v16 = v4[5];
        uint64_t v17 = *(void *)&v10[v16];
        uint64_t v18 = *(void *)&v10[v16 + 8];
        uint64_t v19 = &v7[v16];
        BOOL v20 = v17 == *(void *)v19 && v18 == *((void *)v19 + 1);
        if (!v20 && (sub_18FD02C00() & 1) == 0
          || (sub_18FCFBE80(*(void *)&v10[v4[6]], *(void *)&v7[v4[6]]) & 1) == 0
          || (sub_18FCFC034(*(void *)&v10[v4[7]], *(void *)&v7[v4[7]]) & 1) == 0)
        {
          break;
        }
        char v21 = v10[v4[8]] ^ v7[v4[8]];
        sub_18FCB404C((uint64_t)v7);
        sub_18FCB404C((uint64_t)v10);
        if ((v21 & 1) == 0)
        {
          uint64_t v14 = v15 - 1;
          v12 += v13;
          if (v15) {
            continue;
          }
        }
        char v22 = v21 ^ 1;
        return v22 & 1;
      }
      sub_18FCB404C((uint64_t)v7);
      sub_18FCB404C((uint64_t)v10);
      char v22 = 0;
    }
  }
  else
  {
    char v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_18FCB2E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_19;
      }
      uint64_t v11 = *(void *)(v2 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_18:
    uint64_t v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_18FD021E0();
    swift_bridgeObjectRelease();
    sub_18FD02D90();
    uint64_t result = sub_18FD02DA0();
    v8 ^= result;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_18FD02D70();
  }
  uint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_18FCB2FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_19;
      }
      uint64_t v11 = *(void *)(v2 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_18:
    uint64_t v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_18FD021E0();
    swift_bridgeObjectRelease();
    sub_18FD02D90();
    uint64_t result = sub_18FD02DA0();
    v8 ^= result;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_18FD02D70();
  }
  uint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_18FCB3174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioEffectConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t result = sub_18FD02D70();
  if (v8)
  {
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    do
    {
      sub_18FCB3F9C(v10, (uint64_t)v7);
      sub_18FD01DD0();
      sub_18FCB4000();
      sub_18FD020D0();
      swift_bridgeObjectRetain();
      sub_18FD021E0();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)&v7[*(int *)(v4 + 24)];
      swift_bridgeObjectRetain();
      sub_18FCB2FCC(a1, v12);
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)&v7[*(int *)(v4 + 28)];
      swift_bridgeObjectRetain();
      sub_18FCB2E28(a1, v13);
      swift_bridgeObjectRelease();
      sub_18FD02D80();
      uint64_t result = sub_18FCB404C((uint64_t)v7);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

BOOL _s15AXCoreUtilities14VoiceSelectionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  float v4 = *(float *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 20);
  float v6 = *(float *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 28);
  float v8 = *(float *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 36);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a2 + 8);
  float v13 = *(float *)(a2 + 16);
  int v14 = *(unsigned __int8 *)(a2 + 20);
  float v15 = *(float *)(a2 + 24);
  int v16 = *(unsigned __int8 *)(a2 + 28);
  float v17 = *(float *)(a2 + 32);
  int v18 = *(unsigned __int8 *)(a2 + 36);
  uint64_t v20 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a2 + 48);
  if (!v3)
  {
    if (v12) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v12) {
    return 0;
  }
  if (*(void *)a1 == *(void *)a2 && v3 == v12 || (char v21 = sub_18FD02C00(), result = 0, (v21 & 1) != 0))
  {
LABEL_8:
    if (v5)
    {
      if (!v14) {
        return 0;
      }
    }
    else
    {
      if (v4 == v13) {
        char v23 = v14;
      }
      else {
        char v23 = 1;
      }
      if (v23) {
        return 0;
      }
    }
    if (v7)
    {
      if (!v16) {
        return 0;
      }
    }
    else
    {
      if (v6 == v15) {
        char v24 = v16;
      }
      else {
        char v24 = 1;
      }
      if (v24) {
        return 0;
      }
    }
    if (v9)
    {
      if (!v18) {
        return 0;
      }
    }
    else
    {
      if (v8 == v17) {
        char v25 = v18;
      }
      else {
        char v25 = 1;
      }
      if (v25) {
        return 0;
      }
    }
    if (v11)
    {
      if (!v20) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = swift_bridgeObjectRetain();
      char v27 = sub_18FCB2C30(v26, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        return 0;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v10)
    {
      if (!v19) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = swift_bridgeObjectRetain();
      char v29 = sub_18FCFBE80(v28, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (v29 & 1) != 0;
    }
    return !v19;
  }
  return result;
}

unint64_t sub_18FCB34C0()
{
  unint64_t result = qword_1E926C2E8;
  if (!qword_1E926C2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C2E8);
  }
  return result;
}

uint64_t sub_18FCB3514(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C2A8);
    sub_18FCB3594(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCB3594(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioEffectConfiguration();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCB35D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C2B8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18FCB3640(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = sub_18FCB3670();
  unint64_t result = sub_18FCB36C4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_18FCB3670()
{
  unint64_t result = qword_1E926C328;
  if (!qword_1E926C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C328);
  }
  return result;
}

unint64_t sub_18FCB36C4()
{
  unint64_t result = qword_1E926C330;
  if (!qword_1E926C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C330);
  }
  return result;
}

unint64_t sub_18FCB371C()
{
  unint64_t result = qword_1E926C338;
  if (!qword_1E926C338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C338);
  }
  return result;
}

uint64_t sub_18FCB3770@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for VoiceSelection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VoiceSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 2_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VoiceSelection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  int v5 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 2_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  int v6 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VoiceSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 2_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceSelection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + _Block_object_dispose(&a9, 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceSelection()
{
  return &type metadata for VoiceSelection;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VoiceSelection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VoiceSelection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18FCB3BC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_18FCB3BEC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_18FCB3BF4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for VoiceSelection.CodingKeys()
{
  return &type metadata for VoiceSelection.CodingKeys;
}

unint64_t sub_18FCB3C10()
{
  unint64_t result = qword_1E926C340;
  if (!qword_1E926C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C340);
  }
  return result;
}

unint64_t sub_18FCB3C68()
{
  unint64_t result = qword_1E926C348;
  if (!qword_1E926C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C348);
  }
  return result;
}

unint64_t sub_18FCB3CC0()
{
  unint64_t result = qword_1E926C350;
  if (!qword_1E926C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C350);
  }
  return result;
}

uint64_t sub_18FCB3D14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496563696F76 && a2 == 0xE700000000000000;
  if (v2 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125938 && a2 == 0xE400000000000000 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6863746970 && a2 == 0xE500000000000000 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7465536563696F76 && a2 == 0xED000073676E6974)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_18FD02C00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_18FCB3F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioEffectConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_18FCB4000()
{
  unint64_t result = qword_1E926C198;
  if (!qword_1E926C198)
  {
    sub_18FD01DD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C198);
  }
  return result;
}

uint64_t sub_18FCB404C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioEffectConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FCB40A8()
{
  return sub_18FD02300();
}

uint64_t sub_18FCB4138()
{
  return sub_18FD022E0();
}

uint64_t sub_18FCB41B8()
{
  return sub_18FD022F0();
}

uint64_t sub_18FCB4248()
{
  return sub_18FD022D0();
}

uint64_t sub_18FCB42C8()
{
  return sub_18FCB49F8(&qword_1E926C358, type metadata accessor for AXSVoiceOverFeedbackOption);
}

uint64_t sub_18FCB4314()
{
  return sub_18FD02D70();
}

uint64_t sub_18FCB4344()
{
  return sub_18FD022F0();
}

uint64_t sub_18FCB43D4()
{
  return sub_18FD022D0();
}

uint64_t sub_18FCB4454()
{
  return sub_18FCB49F8(&qword_1E926C360, type metadata accessor for AXSVoiceOverNumberFeedback);
}

uint64_t sub_18FCB449C()
{
  return sub_18FD022F0();
}

uint64_t sub_18FCB452C()
{
  return sub_18FD022D0();
}

uint64_t sub_18FCB45AC()
{
  return sub_18FCB49F8(&qword_1E926C368, type metadata accessor for AXSVoiceOverNavigationStyle);
}

uint64_t sub_18FCB45F4()
{
  return sub_18FD022F0();
}

uint64_t sub_18FCB4684()
{
  return sub_18FD022D0();
}

uint64_t sub_18FCB4704()
{
  return sub_18FCB49F8(&qword_1E926C370, type metadata accessor for AXSVoiceOverKeyboardModifierChoice);
}

uint64_t sub_18FCB474C()
{
  return sub_18FD02DA0();
}

uint64_t sub_18FCB4794()
{
  return sub_18FD02DA0();
}

uint64_t sub_18FCB47D8()
{
  return sub_18FD022F0();
}

uint64_t sub_18FCB4868()
{
  return sub_18FD022D0();
}

uint64_t sub_18FCB48E8()
{
  return sub_18FD022F0();
}

uint64_t sub_18FCB4978()
{
  return sub_18FD022D0();
}

uint64_t sub_18FCB49F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCB4A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  sub_18FCA3724(a1, (uint64_t)v17);
  BOOL v7 = (void *)sub_18FD02CE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v8 = type metadata accessor for FieldAccessor(0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_18FD07C70;
  uint64_t v12 = v11 + v10;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v13, v12);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v14, v12 + v9);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v8, (uint64_t)&unk_1E92708D0);
  sub_18FCCFDB0(v15, v12 + 2 * v9);
  sub_18FCB4F58(v7, a2, a3, v11, (uint64_t)sub_18FCB4F30, 0, (uint64_t)v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  if (v17[3] != 1) {
    return sub_18FCD0068((uint64_t)v17, (uint64_t)a4, &qword_1E926B858);
  }
  *a4 = 0u;
  a4[1] = 0u;
  return sub_18FCA7A04((uint64_t)v17, &qword_1E926C3D8);
}

uint64_t safeValue<A>(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  char v6 = (void *)sub_18FD02BF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v7 = type metadata accessor for FieldAccessor(0);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_18FD07C70;
  uint64_t v11 = v10 + v9;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v12, v11);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v7, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v13, v11 + v8);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v14, v11 + 2 * v8);
  sub_18FCB4F58(v6, a1, a2, v10, (uint64_t)sub_18FCB4F30, 0, (uint64_t)v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  if (v16[3] != 1) {
    return sub_18FCD0068((uint64_t)v16, (uint64_t)a3, &qword_1E926B858);
  }
  *a3 = 0u;
  a3[1] = 0u;
  return sub_18FCA7A04((uint64_t)v16, &qword_1E926C3D8);
}

uint64_t sub_18FCB4F30()
{
  return 1;
}

uint64_t type metadata accessor for FieldAccessor(uint64_t a1)
{
  return sub_18FCA5AFC(a1, (uint64_t *)&unk_1E926C428);
}

uint64_t sub_18FCB4F58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_18FD02880();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  float v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCBBCC0(a1, &v51);
  if (v52)
  {
    sub_18FCD00F0(&v51, &v53);
    __swift_project_boxed_opaque_existential_1(&v53, v54);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
    unsigned int v21 = sub_18FCCF82C(a7, ObjectType, (uint64_t)&v53, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v20, ObjectType);
    uint64_t v23 = v22;
    char v24 = v21 & 1;
    int v25 = (v21 >> 8) & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  }
  else
  {
    uint64_t v43 = v15;
    uint64_t v48 = a7;
    sub_18FCA7A04((uint64_t)&v51, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = 0;
    uint64_t v46 = v26 + 2;
    void v26[3] = 0;
    v26[4] = 0;
    uint64_t v49 = a3;
    v26[5] = 1;
    uint64_t v27 = swift_allocObject();
    int64_t v45 = &v43;
    *(unsigned char *)(v27 + 16) = 1;
    uint64_t v28 = v49;
    *(void *)(v27 + 24) = a1;
    *(void *)(v27 + 32) = a2;
    *(void *)(v27 + 40) = v28;
    *(void *)(v27 + 4_Block_object_dispose(&a9, 8) = a1;
    *(void *)(v27 + 56) = v26;
    __int16 v50 = 0;
    *(void *)&long long v53 = 0;
    uint64_t v29 = MEMORY[0x1F4188790](v27);
    uint64_t v44 = &v43 - 12;
    *(&v43 - 10) = a4;
    *(&v43 - 9) = v30;
    uint64_t v47 = v30;
    *(&v43 - _Block_object_dispose(&a9, 8) = v28;
    *(&v43 - 7) = (uint64_t)&v50 + 1;
    *(&v43 - 6) = (uint64_t)&v53;
    *(&v43 - 5) = a5;
    uint64_t v39 = a6;
    uint64_t v40 = sub_18FCD34EC;
    uint64_t v41 = (uint64_t (*)())v29;
    char v42 = (uint64_t *)&v50;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
      uint64_t v31 = v43;
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_18FD07480;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_18FD02870();
      *(void *)&long long v51 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
      sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
      uint64_t v33 = sub_18FD02680();
      MEMORY[0x1F4188790](v33);
      uint64_t v41 = sub_18FCD1818;
      char v42 = v44;
      sub_18FD02790();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      swift_retain();
      v34(v17, v14);
      a3 = v49;
      swift_release();
      uint64_t v35 = (uint64_t)v46;
      a2 = v47;
    }
    else
    {
      uint64_t v36 = v44;
      *(void *)&long long v51 = ObjectType;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_isOptionalType())
      {
        MEMORY[0x1F4188790](ObjectType);
        uint64_t v41 = (uint64_t (*)())&v51;
        AGTypeApplyFields2();
      }
      uint64_t isClassType = swift_isClassType();
      uint64_t v35 = (uint64_t)v46;
      if ((isClassType & 1) == 0) {
        uint64_t isClassType = AGTypeGetKind();
      }
      MEMORY[0x1F4188790](isClassType);
      uint64_t v41 = sub_18FCD1818;
      char v42 = v36;
      AGTypeApplyFields2();
      swift_retain();
      swift_release();
      a3 = v49;
      a2 = v47;
    }
    char v24 = HIBYTE(v50);
    LOBYTE(v25) = v50;
    uint64_t v23 = v53;
    swift_beginAccess();
    sub_18FCD3504(v35, v48);
    swift_release();
  }
  return sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v24, v25, v23);
}

uint64_t sub_18FCB548C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_18FCBBCC0(a1, &v19);
  if (v20)
  {
    sub_18FCD00F0(&v19, &v21);
    __swift_project_boxed_opaque_existential_1(&v21, v22);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    __int16 v14 = sub_18FCCF82C((uint64_t)&v19, ObjectType, (uint64_t)&v21, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, MEMORY[0x1E4FBB390], ObjectType);
    uint64_t v16 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v19, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v14 = sub_18FCC31A4(&v19, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    uint64_t v16 = v17;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v14 & 1, HIBYTE(v14) & 1, v16);
  return v19;
}

uint64_t sub_18FCB55D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v23);
  if (v24)
  {
    sub_18FCD00F0(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    __int16 v18 = sub_18FCCF82C((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    uint64_t v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v23, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v20 = v21;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return v23 | (BYTE1(v23) << 8);
}

uint64_t sub_18FCB5738(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v23);
  if (v24)
  {
    sub_18FCD00F0(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    __int16 v18 = sub_18FCCF82C((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    uint64_t v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v23, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v20 = v21;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return (unsigned __int16)v23 | (BYTE2(v23) << 16);
}

unint64_t sub_18FCB5898(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v23);
  if (v24)
  {
    sub_18FCD00F0(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    __int16 v18 = sub_18FCCF82C((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    uint64_t v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v23, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v20 = v21;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return v23 | ((unint64_t)BYTE4(v23) << 32);
}

uint64_t sub_18FCB5A00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v23);
  if (v24)
  {
    sub_18FCD00F0(&v23, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    __int16 v18 = sub_18FCCF82C((uint64_t)&v23, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, a7, ObjectType);
    uint64_t v20 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v23, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v18 = a8(&v23, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v20 = v21;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v18 & 1, HIBYTE(v18) & 1, v20);
  return v23;
}

uint64_t sub_18FCB5B5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_18FCBBCC0(a1, &v19);
  if (v20)
  {
    sub_18FCD00F0(&v19, &v21);
    __swift_project_boxed_opaque_existential_1(&v21, v22);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    __int16 v14 = sub_18FCCF82C((uint64_t)&v19, ObjectType, (uint64_t)&v21, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, MEMORY[0x1E4FBC960], ObjectType);
    uint64_t v16 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v19, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v14 = sub_18FCC689C(&v19, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    uint64_t v16 = v17;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v14 & 1, HIBYTE(v14) & 1, v16);
  return v19;
}

uint64_t sub_18FCB5CAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = a7(0);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

double sub_18FCB5E14@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_18FCBBCC0(a1, &v26);
  if (*((void *)&v27 + 1))
  {
    sub_18FCD00F0(&v26, &v24);
    __swift_project_boxed_opaque_existential_1(&v24, v25);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    type metadata accessor for CGRect(0);
    __int16 v17 = sub_18FCCF82C((uint64_t)&v26, ObjectType, (uint64_t)&v24, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v16, ObjectType);
    uint64_t v19 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v26, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v17 = sub_18FCC7558(&v26, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    uint64_t v19 = v20;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v17 & 1, HIBYTE(v17) & 1, v19);
  char v21 = v28;
  double result = *(double *)&v26;
  long long v23 = v27;
  *(_OWORD *)a7 = v26;
  *(_OWORD *)(a7 + 16) = v23;
  *(unsigned char *)(a7 + 32) = v21;
  return result;
}

uint64_t sub_18FCB5F70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_18FCBBCC0(a1, &v20);
  if (v21)
  {
    sub_18FCD00F0(&v20, &v22);
    __swift_project_boxed_opaque_existential_1(&v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C598);
    __int16 v15 = sub_18FCCF82C((uint64_t)&v20, ObjectType, (uint64_t)&v22, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v14, ObjectType);
    uint64_t v17 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v20, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v15 = sub_18FCC799C(&v20, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    uint64_t v17 = v18;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v15 & 1, HIBYTE(v15) & 1, v17);
  return v20;
}

uint64_t sub_18FCB60C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

uint64_t sub_18FCB622C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return (unsigned __int16)v24 | (BYTE2(v24) << 16);
}

uint64_t sub_18FCB6394(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return (unsigned __int16)v24 | (BYTE2(v24) << 16) | (BYTE3(v24) << 24);
}

unint64_t sub_18FCB6504(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24 | ((unint64_t)BYTE4(v24) << 32) | ((unint64_t)BYTE5(v24) << 40);
}

uint64_t sub_18FCB667C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

double sub_18FCB67E8@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_18FCBBCC0(a1, &v27);
  if (*((void *)&v28 + 1))
  {
    sub_18FCD00F0(&v27, &v25);
    __swift_project_boxed_opaque_existential_1(&v25, v26);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3E0);
    __int16 v17 = sub_18FCCF82C((uint64_t)&v27, ObjectType, (uint64_t)&v25, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v16, ObjectType);
    uint64_t v19 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v27, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v17 = sub_18FCCBDB8(&v27, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    uint64_t v19 = v20;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v17 & 1, HIBYTE(v17) & 1, v19);
  char v21 = v29;
  char v22 = v30;
  double result = *(double *)&v27;
  long long v24 = v28;
  *(_OWORD *)a7 = v27;
  *(_OWORD *)(a7 + 16) = v24;
  *(unsigned char *)(a7 + 32) = v21;
  *(unsigned char *)(a7 + 33) = v22;
  return result;
}

uint64_t sub_18FCB6950(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_18FCBBCC0(a1, &v20);
  if (v21)
  {
    sub_18FCD00F0(&v20, &v22);
    __swift_project_boxed_opaque_existential_1(&v22, v23);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4A0);
    __int16 v15 = sub_18FCCF82C((uint64_t)&v20, ObjectType, (uint64_t)&v22, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v14, ObjectType);
    uint64_t v17 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v20, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v15 = sub_18FCCC204((uint64_t *)&v20, (uint64_t)a1, ObjectType, a2, a3, a5, a6, 1, a4, (uint64_t)a1);
    uint64_t v17 = v18;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v15 & 1, HIBYTE(v15) & 1, v17);
  return v20;
}

uint64_t sub_18FCB6AA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  sub_18FCBBCC0(a1, &v24);
  if (v25)
  {
    sub_18FCD00F0(&v24, &v26);
    __swift_project_boxed_opaque_existential_1(&v26, v27);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t ObjectType = sub_18FCBB718(DynamicType);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a7);
    __int16 v19 = sub_18FCCF82C((uint64_t)&v24, ObjectType, (uint64_t)&v26, ObjectType, a4, (uint64_t)a1, a2, a3, a5, a6, v18, ObjectType);
    uint64_t v21 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v24, &qword_1E926B858);
    uint64_t ObjectType = swift_getObjectType();
    __int16 v19 = a8(&v24, a1, ObjectType, a2, a3, a5, a6, 1, a4, a1);
    uint64_t v21 = v22;
  }
  sub_18FCBC780((uint64_t)a1, ObjectType, a2, a3, v19 & 1, HIBYTE(v19) & 1, v21);
  return v24;
}

uint64_t _AXSafeSwiftBoolForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  char v14 = sub_18FCB548C(a1, v2, v4, v8, (uint64_t)sub_18FCC2A0C, 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t _AXSafeSwiftIntForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18FCC2A68, MEMORY[0x1E4FBB550], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC35D4);
}

uint64_t _AXSafeSwiftUIntForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18FCC2AC4, MEMORY[0x1E4FBB808], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC3A10);
}

uint64_t _AXSafeSwiftIntForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8 = sub_18FD02150();
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v11 = type metadata accessor for FieldAccessor(0);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18FD07C70;
  uint64_t v15 = v14 + v13;
  uint64_t v16 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v17, v15);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v18, v15 + v12);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v19, v15 + 2 * v12);
  uint64_t v20 = sub_18FCB5A00(a1, v8, v10, v14, a3, 0, a4, a5);
  char v22 = v21;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v22) {
    return 0;
  }
  else {
    return v20;
  }
}

uint64_t _AXSafeSwiftInt8ForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  __int16 v14 = sub_18FCB55D8(a1, v2, v4, v8, (uint64_t)sub_18FCC2B20, 0, MEMORY[0x1E4FBC098], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC3E4C);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x100) != 0) {
    return 0;
  }
  else {
    return (char)v14;
  }
}

uint64_t _AXSafeSwiftUInt8ForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  __int16 v14 = sub_18FCB55D8(a1, v2, v4, v8, (uint64_t)sub_18FCC2B7C, 0, MEMORY[0x1E4FBC358], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC4284);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x100) != 0) {
    return 0;
  }
  else {
    return v14;
  }
}

uint64_t _AXSafeSwiftInt16ForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  int v14 = sub_18FCB5738(a1, v2, v4, v8, (uint64_t)sub_18FCC2BD8, 0, MEMORY[0x1E4FBC0F8], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC46BC);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x10000) != 0) {
    return 0;
  }
  else {
    return (__int16)v14;
  }
}

uint64_t _AXSafeSwiftUInt16ForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  int v14 = sub_18FCB5738(a1, v2, v4, v8, (uint64_t)sub_18FCC2C34, 0, MEMORY[0x1E4FBC450], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC4AF8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 0x10000) != 0) {
    return 0;
  }
  else {
    return (unsigned __int16)v14;
  }
}

uint64_t _AXSafeSwiftInt32ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftInt32ForKeyTm(a1, a2, (uint64_t)sub_18FCC2C90, MEMORY[0x1E4FBC150], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC4F34);
}

uint64_t _AXSafeSwiftUInt32ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftInt32ForKeyTm(a1, a2, (uint64_t)sub_18FCC2CEC, MEMORY[0x1E4FBC4C0], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC5370);
}

uint64_t _AXSafeSwiftInt32ForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8 = sub_18FD02150();
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v11 = type metadata accessor for FieldAccessor(0);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18FD07C70;
  uint64_t v15 = v14 + v13;
  uint64_t v16 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v17, v15);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v18, v15 + v12);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v19, v15 + 2 * v12);
  unint64_t v20 = sub_18FCB5898(a1, v8, v10, v14, a3, 0, a4, a5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 0x100000000) != 0) {
    return 0;
  }
  else {
    return v20;
  }
}

uint64_t _AXSafeSwiftInt64ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18FCC2D48, MEMORY[0x1E4FBC1C8], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC57AC);
}

uint64_t _AXSafeSwiftUInt64ForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftIntForKeyTm(a1, a2, (uint64_t)sub_18FCC2DA4, MEMORY[0x1E4FBC538], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC5BE8);
}

float _AXSafeSwiftFloatForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  unint64_t v14 = sub_18FCB5898(a1, v2, v4, v8, (uint64_t)sub_18FCC2E00, 0, MEMORY[0x1E4FBB470], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC6024);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  float result = *(float *)&v14;
  if ((v14 & 0x100000000) != 0) {
    return 0.0;
  }
  return result;
}

double _AXSafeSwiftDoubleForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  double v14 = COERCE_DOUBLE(sub_18FCB5A00(a1, v2, v4, v8, (uint64_t)sub_18FCC2E5C, 0, MEMORY[0x1E4FBB3D0], (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC6460));
  char v16 = v15;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  double result = v14;
  if (v16) {
    return 0.0;
  }
  return result;
}

double _AXSafeSwiftCGFloatForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  double v14 = COERCE_DOUBLE(sub_18FCB5B5C(a1, v2, v4, v8, (uint64_t)sub_18FCC2EB8, 0));
  char v16 = v15;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  double result = v14;
  if (v16) {
    return 0.0;
  }
  return result;
}

double _AXSafeSwiftCGPointForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftCGPointForKeyTm(a1, a2, (uint64_t)sub_18FCC2F14, (uint64_t (*)(void))type metadata accessor for CGPoint, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC6CD8);
}

double _AXSafeSwiftCGSizeForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftCGPointForKeyTm(a1, a2, (uint64_t)sub_18FCC2F34, (uint64_t (*)(void))type metadata accessor for CGSize, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC7118);
}

double _AXSafeSwiftCGPointForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8 = sub_18FD02150();
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v11 = type metadata accessor for FieldAccessor(0);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18FD07C70;
  uint64_t v15 = v14 + v13;
  uint64_t v16 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v17, v15);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v18, v15 + v12);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v19, v15 + 2 * v12);
  double v20 = COERCE_DOUBLE(sub_18FCB5CAC(a1, v8, v10, v14, a3, 0, a4, a5));
  char v22 = v21;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  double result = v20;
  if (v22) {
    return 0.0;
  }
  return result;
}

uint64_t _AXSafeSwiftCGRectForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  sub_18FCB5E14(a1, v2, v4, v8, (uint64_t)sub_18FCC2F54, 0, (uint64_t)&v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return sub_18FCD0068((uint64_t)&v15, (uint64_t)v16, &qword_1E926C3E0);
}

id _AXSafeSwiftOptionalBoolForKey(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftOptionalBoolForKeyTm(a1, a2, (void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))sub_18FCB89C0);
}

uint64_t sub_18FCB89C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v8 = type metadata accessor for FieldAccessor(0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_18FD07C70;
  uint64_t v12 = v11 + v10;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v13, v12);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v14, v12 + v9);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v15, v12 + 2 * v9);
  char v16 = sub_18FCB5F70(a1, a2, a3, v11, (uint64_t)sub_18FCC2FE4, 0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if ((v16 & 0xFE) == 2)
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    *(void *)(a4 + 24) = MEMORY[0x1E4FBB390];
    *(unsigned char *)a4 = v16 & 1;
  }
  return result;
}

id _AXSafeSwiftOptionalIntForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBA7C0(v3, v0, v2, (uint64_t)sub_18FCC2FF8, &qword_1E926C588, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC7DCC, MEMORY[0x1E4FBB550], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalUIntForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBA7C0(v3, v0, v2, (uint64_t)sub_18FCC300C, &qword_1E926C578, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC8210, MEMORY[0x1E4FBB808], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalInt8ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB9274(v3, v0, v2, (uint64_t)sub_18FCC3020, &qword_1E926C568, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC8654, MEMORY[0x1E4FBC098], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalUInt8ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB9274(v3, v0, v2, (uint64_t)sub_18FCC3034, &qword_1E926C558, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC8A90, MEMORY[0x1E4FBC358], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

uint64_t sub_18FCB9274@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v13 = type metadata accessor for FieldAccessor(0);
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_18FD07C70;
  uint64_t v17 = v16 + v15;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v18, v17);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v19, v17 + v14);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v20, v17 + 2 * v14);
  int v21 = sub_18FCB622C(a1, a2, a3, v16, a4, 0, a5, a6);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if ((v21 & 0x10100) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(void *)(a8 + 24) = a7;
    *(unsigned char *)a8 = v21;
  }
  return result;
}

id _AXSafeSwiftOptionalInt16ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB97F4(v3, v0, v2, (uint64_t)sub_18FCC3048, &qword_1E926C548, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC8ECC, MEMORY[0x1E4FBC0F8], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalUInt16ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB97F4(v3, v0, v2, (uint64_t)sub_18FCC305C, &qword_1E926C538, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC930C, MEMORY[0x1E4FBC450], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

uint64_t sub_18FCB97F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v13 = type metadata accessor for FieldAccessor(0);
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_18FD07C70;
  uint64_t v17 = v16 + v15;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v18, v17);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v19, v17 + v14);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v20, v17 + 2 * v14);
  int v21 = sub_18FCB6394(a1, a2, a3, v16, a4, 0, a5, a6);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if ((v21 & 0x1010000) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(void *)(a8 + 24) = a7;
    *(_WORD *)a8 = v21;
  }
  return result;
}

id _AXSafeSwiftOptionalInt32ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB9D70(v3, v0, v2, (uint64_t)sub_18FCC3070, &qword_1E926C528, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC974C, MEMORY[0x1E4FBC150], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalUInt32ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB9D70(v3, v0, v2, (uint64_t)sub_18FCC3084, &qword_1E926C518, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC9B90, MEMORY[0x1E4FBC4C0], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

uint64_t sub_18FCB9D70@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v13 = type metadata accessor for FieldAccessor(0);
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_18FD07C70;
  uint64_t v17 = v16 + v15;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v18, v17);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v19, v17 + v14);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v20, v17 + 2 * v14);
  unint64_t v21 = sub_18FCB6504(a1, a2, a3, v16, a4, 0, a5, a6);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if ((v21 & 0x10100000000) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(void *)(a8 + 24) = a7;
    *(_DWORD *)a8 = v21;
  }
  return result;
}

id _AXSafeSwiftOptionalInt64ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBA7C0(v3, v0, v2, (uint64_t)sub_18FCC3098, &qword_1E926C508, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCC9FD4, MEMORY[0x1E4FBC1C8], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalUInt64ForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBA7C0(v3, v0, v2, (uint64_t)sub_18FCC30AC, &qword_1E926C4F8, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCA418, MEMORY[0x1E4FBC538], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalFloatForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCB9D70(v3, v0, v2, (uint64_t)sub_18FCC30C0, &qword_1E926C4E8, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCA85C, MEMORY[0x1E4FBB470], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalDoubleForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBA7C0(v3, v0, v2, (uint64_t)sub_18FCC30D4, &qword_1E926C4D8, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCACA0, MEMORY[0x1E4FBB3D0], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalCGFloatForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBA7C0(v3, v0, v2, (uint64_t)sub_18FCC30E8, &qword_1E926C4C8, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCB0E4, MEMORY[0x1E4FBC960], (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

uint64_t sub_18FCBA7C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v13 = type metadata accessor for FieldAccessor(0);
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_18FD07C70;
  uint64_t v17 = v16 + v15;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v18, v17);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v19, v17 + v14);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v20, v17 + 2 * v14);
  uint64_t v21 = sub_18FCB60C0(a1, a2, a3, v16, a4, 0, a5, a6);
  __int16 v23 = v22;
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if ((v23 & 0x101) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    *(void *)(a8 + 24) = a7;
    *(void *)a8 = v21;
  }
  return result;
}

id _AXSafeSwiftOptionalCGPointForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBAD58(v3, v0, v2, (uint64_t)sub_18FCC30FC, &qword_1E926C4B8, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCB528, (uint64_t (*)(void))type metadata accessor for CGPoint, (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

id _AXSafeSwiftOptionalCGSizeForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBAD58(v3, v0, v2, (uint64_t)sub_18FCC3110, &qword_1E926C4A8, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCB970, (uint64_t (*)(void))type metadata accessor for CGSize, (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v6 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v5);
    uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v9 = 0;
  }
  return v9;
}

uint64_t sub_18FCBAD58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t (*a6)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t (*a7)(void)@<X6>, uint64_t a8@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v13 = type metadata accessor for FieldAccessor(0);
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_18FD07C70;
  uint64_t v17 = v16 + v15;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v18, v17);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v19, v17 + v14);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v20, v17 + 2 * v14);
  uint64_t v21 = sub_18FCB667C(a1, a2, a3, v16, a4, 0, a5, a6);
  uint64_t v23 = v22;
  __int16 v25 = v24;
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if ((v25 & 0x101) != 0)
  {
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  else
  {
    uint64_t result = a7(0);
    *(void *)(a8 + 24) = result;
    *(void *)a8 = v21;
    *(void *)(a8 + _Block_object_dispose(&a9, 8) = v23;
  }
  return result;
}

id _AXSafeSwiftOptionalCGRectForKey(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftOptionalBoolForKeyTm(a1, a2, (void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))sub_18FCBB134);
}

id _AXSafeSwiftOptionalBoolForKeyTm(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_18FD02150();
  uint64_t v6 = v5;
  uint64_t v7 = swift_unknownObjectRetain();
  a3(v15, v7, v4, v6);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v16;
  if (v16)
  {
    uint64_t v9 = __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x1F4188790](v9);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = (void *)sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    uint64_t v13 = 0;
  }
  return v13;
}

void *sub_18FCBB134@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v8 = type metadata accessor for FieldAccessor(0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_18FD07C70;
  uint64_t v12 = v11 + v10;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v13, v12);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v14, v12 + v9);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v8, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v15, v12 + 2 * v9);
  sub_18FCB67E8(a1, a2, a3, v11, (uint64_t)sub_18FCC3124, 0, (uint64_t)v23);
  uint64_t v16 = v23[0];
  uint64_t v17 = v23[1];
  uint64_t v18 = v23[2];
  uint64_t v19 = v23[3];
  char v20 = v24;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t result = (void *)sub_18FCD0068((uint64_t)v23, (uint64_t)v25, &qword_1E926C3E8);
  if ((v25[33] & 1) != 0
    || (uint64_t result = (void *)sub_18FCD0068((uint64_t)v25, (uint64_t)v26, &qword_1E926C3E0), (v20 & 1) != 0))
  {
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    type metadata accessor for CGRect(0);
    *(void *)(a4 + 24) = v22;
    uint64_t result = (void *)swift_allocObject();
    *(void *)a4 = result;
    result[2] = v16;
    result[3] = v17;
    result[4] = v18;
    result[5] = v19;
  }
  return result;
}

id _AXSafeSwiftStringForKey(void *a1)
{
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v5 = type metadata accessor for FieldAccessor(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_18FD07C70;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v11, v9);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v12, v9 + v6);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v5, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v13, v9 + 2 * v6);
  uint64_t v14 = sub_18FCB6950(a1, v2, v4, v8, (uint64_t)sub_18FCBB648, 0);
  unint64_t v16 = v15;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = 0;
  if (v16 >= 2)
  {
    uint64_t v17 = (void *)sub_18FD02120();
    sub_18FCD00DC(v14, v16);
  }
  return v17;
}

BOOL sub_18FCBB648(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4A0);
  return a1 == MEMORY[0x1E4FBB1A0] || v2 == a1;
}

id _AXSafeSwiftValueForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18FCBB6BC, &qword_1E926C498, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCC63C);
}

uint64_t sub_18FCBB6BC(uint64_t a1)
{
  sub_18FCBB718(a1);
  if (swift_isClassType()) {
    return 1;
  }
  uint64_t Kind = AGTypeGetKind();
  return sub_18FCBB7BC(Kind, (uint64_t)&unk_1EDF5DCF8);
}

uint64_t sub_18FCBB718(uint64_t a1)
{
  if (swift_isOptionalType())
  {
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790]();
      AGTypeApplyFields2();
    }
    return sub_18FCBB718(a1);
  }
  return a1;
}

uint64_t sub_18FCBB7BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

id _AXSafeSwiftArrayForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18FCBBAAC, &qword_1E926C490, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCCA74);
}

id _AXSafeSwiftValueForKeyTm(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))
{
  uint64_t v8 = sub_18FD02150();
  uint64_t v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v11 = type metadata accessor for FieldAccessor(0);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_18FD07C70;
  uint64_t v15 = v14 + v13;
  uint64_t v16 = qword_1E926BF10;
  swift_unknownObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v17, v15);
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v18, v15 + v12);
  if (qword_1E926BF20 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92708D0);
  sub_18FCCFDB0(v19, v15 + 2 * v12);
  uint64_t v20 = sub_18FCB6AA0(a1, v8, v10, v14, a3, 0, a4, a5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v20 == 1) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = (void *)v20;
  }
  return v21;
}

BOOL sub_18FCBBAAC(uint64_t a1)
{
  uint64_t v1 = sub_18FCBB718(a1);
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return v2 != 0;
}

id _AXSafeSwiftSetForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18FCBBB2C, &qword_1E926C488, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCCEAC);
}

BOOL sub_18FCBBB2C(uint64_t a1)
{
  uint64_t v1 = sub_18FCBB718(a1);
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return v2 != 0;
}

id _AXSafeSwiftDictionaryForKey(void *a1, uint64_t a2)
{
  return _AXSafeSwiftValueForKeyTm(a1, a2, (uint64_t)sub_18FCBBBAC, &qword_1E926C470, (uint64_t (*)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_18FCCD2E4);
}

BOOL sub_18FCBBBAC(uint64_t a1)
{
  uint64_t v1 = sub_18FCBB718(a1);
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return v2 != 0;
}

uint64_t _AXSafeSwiftCallAsFunctionForKey()
{
  uint64_t v0 = sub_18FD02150();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_18FCBBCC0(v3, &v7);
  if (v8)
  {
    sub_18FCD00F0(&v7, &v9);
    __swift_project_boxed_opaque_existential_1(&v9, v10);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v5 = sub_18FCBB718(DynamicType);
    sub_18FCBBDF0(v5, &v9, v5, v0, v2, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v7, &qword_1E926B858);
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_18FCBBCC0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = (NSString *)sub_18FD02120();
  Class v5 = NSClassFromString(v4);

  if (v5 && objc_msgSend(a1, sel_isKindOfClass_, v5))
  {
    memset(v8, 0, sizeof(v8));
    void v7[4] = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
    if (swift_dynamicCast())
    {
      sub_18FCA7A04((uint64_t)v8, &qword_1E926B858);
      sub_18FCD0068((uint64_t)v7, (uint64_t)v8, &qword_1E926B858);
      sub_18FCD0068((uint64_t)v8, (uint64_t)a2, &qword_1E926B858);
      return result;
    }
    memset(v7, 0, 24);
    v7[3] = 1;
    sub_18FCA7A04((uint64_t)v7, &qword_1E926C3D8);
    sub_18FCA7A04((uint64_t)v8, &qword_1E926B858);
  }
  double result = 0.0;
  *a2 = 0u;
  a2[1] = 0u;
  return result;
}

uint64_t sub_18FCBBDF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = sub_18FD02600();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v28[-v14];
  uint64_t v16 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = &v28[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_18FCA3724((uint64_t)a2, (uint64_t)v30);
  int v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v19)
  {
    v20(v15, 0, 1, a6);
    uint64_t v21 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v18, v15, a6);
    MEMORY[0x1F4188790](v21);
    *(void *)&v28[-32] = a6;
    *(void *)&v28[-24] = a3;
    *(void *)&v28[-16] = a4;
    *(void *)&v28[-8] = a5;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C450);
    sub_18FCBC6A4((uint64_t)v18, (uint64_t)sub_18FCD2B00, (uint64_t)&v28[-48], a6, MEMORY[0x1E4FBC248], v22, MEMORY[0x1E4FBC278], v23);
    int v29 = v30[0];
    char v24 = v30[1];
    uint64_t v25 = v31;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v26 = sub_18FD02BF0();
    sub_18FCBC780(v26, a3, a4, a5, v29, v24, v25);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v18, a6);
  }
  else
  {
    v20(v15, 1, 1, a6);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_18FCBC0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  unint64_t v37 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v34 = sub_18FD02880();
  uint64_t v9 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v13 = type metadata accessor for FieldAccessor(0);
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_18FD07470;
  uint64_t v17 = v16 + v15;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v18, v17);
  uint64_t v19 = v17 + v14;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1E92708B8);
  uint64_t v21 = sub_18FCCFDB0(v20, v19);
  __int16 v40 = 0;
  uint64_t v39 = 0;
  MEMORY[0x1F4188790](v21);
  uint64_t v22 = &v33 - 12;
  uint64_t v23 = v35;
  char v24 = v36;
  *(&v33 - 10) = v16;
  *(&v33 - 9) = v23;
  *(&v33 - _Block_object_dispose(&a9, 8) = (uint64_t)v24;
  *(&v33 - 7) = (uint64_t)&v40 + 1;
  *(&v33 - 6) = (uint64_t)&v39;
  *(&v33 - 5) = (uint64_t)sub_18FCB4F30;
  *(&v33 - 4) = 0;
  *(&v33 - 3) = (uint64_t)sub_18FCD2B84;
  *(&v33 - 2) = v12;
  *(&v33 - 1) = (uint64_t)&v40;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v36 = &v33;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v38 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v26 = v34;
    uint64_t v27 = sub_18FD02680();
    MEMORY[0x1F4188790](v27);
    *(&v33 - 2) = (uint64_t)sub_18FCD1818;
    *(&v33 - 1) = (uint64_t)v22;
    sub_18FD02790();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = a2;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a2);
      *(&v33 - 2) = (uint64_t)&v38;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (uint64_t)sub_18FCD1818;
    *(&v33 - 1) = (uint64_t)v22;
    AGTypeApplyFields2();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  char v30 = v40;
  uint64_t v31 = v39;
  uint64_t v32 = v37;
  *unint64_t v37 = HIBYTE(v40);
  v32[1] = v30;
  *((void *)v32 + 1) = v31;
  return result;
}

uint64_t sub_18FCBC5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_18FCBB718(a2);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C468);
  if (v6 == result)
  {
    uint64_t v8 = (void (**)(uint64_t))(a4 + a1);
    uint64_t result = swift_isOptionalType();
    if (result)
    {
      uint64_t v9 = *v8;
      if (*v8)
      {
        uint64_t v10 = swift_retain();
        v9(v10);
        return sub_18FCA5CBC((uint64_t)v9);
      }
    }
    else
    {
      uint64_t v11 = *v8;
      uint64_t v12 = swift_retain();
      v11(v12);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_18FCBC6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790]();
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_18FCBC780(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  if ((a5 & 1) == 0 || (a6 & 1) == 0)
  {
    uint64_t v12 = sub_18FD02E60();
    uint64_t v14 = v13;
    if (AXShouldLogValidationErrors())
    {
      unint64_t v15 = (void *)sub_18FD02120();
      uint64_t v16 = (void *)sub_18FD02120();
      AXValidationManagerSendExceptionForSafeValueKey(v15, v16);
    }
    if ((AXShouldLogValidationErrors() & 1) == 0) {
      goto LABEL_14;
    }
    if (a5)
    {
      if ((a6 & 1) != 0 || !a7) {
        goto LABEL_14;
      }
      uint64_t result = (uint64_t)AXLogValidations();
      if (result)
      {
        uint64_t v17 = (void *)result;
        sub_18FD025D0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C150);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_18FD08300;
        uint64_t v19 = MEMORY[0x1E4FBB1A0];
        *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v20 = sub_18FCA716C();
        *(void *)(v18 + 32) = a3;
        *(void *)(v18 + 40) = a4;
        *(void *)(v18 + 96) = v19;
        *(void *)(v18 + 104) = v20;
        *(void *)(v18 + 64) = v20;
        *(void *)(v18 + 72) = v12;
        *(void *)(v18 + 80) = v14;
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_18FD02170();
        *(void *)(v18 + 136) = v19;
        *(void *)(v18 + 144) = v20;
        *(void *)(v18 + 112) = v21;
        *(void *)(v18 + 120) = v22;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C460);
        swift_dynamicCast();
        uint64_t v23 = sub_18FD02E60();
        *(void *)(v18 + 216) = v19;
        *(void *)(v18 + 224) = v20;
        *(void *)(v18 + 192) = v23;
        *(void *)(v18 + 200) = v24;
        id v25 = objc_msgSend(self, sel_callStackSymbols);
        uint64_t v26 = sub_18FD02320();

        *(void *)(v18 + 256) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B890);
        *(void *)(v18 + 264) = sub_18FCD2B24();
        *(void *)(v18 + 232) = v26;
        sub_18FD02040();

        goto LABEL_14;
      }
    }
    else
    {
      uint64_t result = (uint64_t)AXLogValidations();
      if (result)
      {
        uint64_t v27 = (void *)result;
        sub_18FD025D0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C150);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_18FD07C70;
        uint64_t v29 = MEMORY[0x1E4FBB1A0];
        *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v30 = sub_18FCA716C();
        *(void *)(v28 + 32) = a3;
        *(void *)(v28 + 40) = a4;
        *(void *)(v28 + 96) = v29;
        *(void *)(v28 + 104) = v30;
        *(void *)(v28 + 64) = v30;
        *(void *)(v28 + 72) = v12;
        *(void *)(v28 + 80) = v14;
        uint64_t v31 = self;
        swift_bridgeObjectRetain();
        id v32 = objc_msgSend(v31, sel_callStackSymbols);
        uint64_t v33 = sub_18FD02320();

        *(void *)(v28 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B890);
        *(void *)(v28 + 144) = sub_18FCD2B24();
        *(void *)(v28 + 112) = v33;
        sub_18FD02040();

LABEL_14:
        swift_bridgeObjectRelease();
        uint64_t result = AXShouldCrashOnValidationErrors();
        if (result) {
          abort();
        }
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t _AXSafeSwiftIsStructWithTypeName(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftIsStructWithTypeNameTm(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_18FCBCAD4);
}

uint64_t sub_18FCBCAD4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_18FCBBCC0(a1, &v9);
  if (!v10)
  {
    sub_18FCA7A04((uint64_t)&v9, &qword_1E926B858);
LABEL_11:
    char v6 = 0;
    return v6 & 1;
  }
  sub_18FCD00F0(&v9, &v11);
  __swift_project_boxed_opaque_existential_1(&v11, v12);
  uint64_t DynamicType = swift_getDynamicType();
  *(void *)&long long v9 = DynamicType;
  if (swift_isOptionalType())
  {
    MEMORY[0x1F4188790](DynamicType);
    AGTypeApplyFields2();
  }
  if (AGTypeGetKind() != 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    goto LABEL_11;
  }
  char v6 = 1;
  if (sub_18FD02E60() != a2 || v7 != a3) {
    char v6 = sub_18FD02C00();
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  return v6 & 1;
}

uint64_t _AXSafeSwiftIsEnumWithTypeName(uint64_t a1, uint64_t a2)
{
  return _AXSafeSwiftIsStructWithTypeNameTm(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_18FCBCCBC);
}

uint64_t _AXSafeSwiftIsStructWithTypeNameTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_18FD02150();
  uint64_t v6 = v5;
  uint64_t v7 = swift_unknownObjectRetain();
  LOBYTE(a3) = a3(v7, v4, v6);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_18FCBCCBC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_18FCBBCC0(a1, &v9);
  if (!v10)
  {
    sub_18FCA7A04((uint64_t)&v9, &qword_1E926B858);
LABEL_11:
    char v6 = 0;
    return v6 & 1;
  }
  sub_18FCD00F0(&v9, &v11);
  __swift_project_boxed_opaque_existential_1(&v11, v12);
  uint64_t DynamicType = swift_getDynamicType();
  *(void *)&long long v9 = DynamicType;
  if (swift_isOptionalType())
  {
    MEMORY[0x1F4188790](DynamicType);
    AGTypeApplyFields2();
  }
  if (AGTypeGetKind() != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
    goto LABEL_11;
  }
  char v6 = 1;
  if (sub_18FD02E60() != a2 || v7 != a3) {
    char v6 = sub_18FD02C00();
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  return v6 & 1;
}

BOOL _AXSafeSwiftIsTuple()
{
  uint64_t v0 = (void *)swift_unknownObjectRetain();
  BOOL v1 = sub_18FCBCE58(v0);
  swift_unknownObjectRelease();
  return v1;
}

BOOL sub_18FCBCE58(void *a1)
{
  sub_18FCBBCC0(a1, &v4);
  if (v5)
  {
    sub_18FCD00F0(&v4, &v6);
    __swift_project_boxed_opaque_existential_1(&v6, v7);
    *(void *)&long long v4 = swift_getDynamicType();
    uint64_t isOptionalType = swift_isOptionalType();
    if (isOptionalType)
    {
      MEMORY[0x1F4188790](isOptionalType);
      AGTypeApplyFields2();
    }
    BOOL v2 = AGTypeGetKind() == 5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v4, &qword_1E926B858);
    return 0;
  }
  return v2;
}

id _AXSafeSwiftTypeName(uint64_t a1)
{
  return _AXSafeSwiftTypeNameTm(a1, (void (*)(uint64_t))sub_18FCBCF6C);
}

uint64_t sub_18FCBCF6C(void *a1)
{
  sub_18FCBBCC0(a1, &v2);
  if (v3)
  {
    sub_18FCD00F0(&v2, &v4);
    __swift_project_boxed_opaque_existential_1(&v4, v5);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v2, &qword_1E926B858);
    swift_getObjectType();
  }
  return sub_18FD02E60();
}

id _AXDebugPrintSwiftAllFields(uint64_t a1)
{
  return _AXSafeSwiftTypeNameTm(a1, (void (*)(uint64_t))sub_18FCBD01C);
}

uint64_t sub_18FCBD01C()
{
  uint64_t v0 = sub_18FD02880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t ObjectType = swift_getObjectType();
  long long v11 = &v13;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v12 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v6 = sub_18FD02680();
    MEMORY[0x1F4188790](v6);
    *(void *)&v10[-16] = sub_18FCD1644;
    *(void *)&v10[-8] = v10;
    sub_18FD02790();
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    uint64_t v12 = ObjectType;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](ObjectType);
      *(void *)&v10[-16] = &v12;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v10[-16] = sub_18FCD1644;
    *(void *)&v10[-8] = v10;
    AGTypeApplyFields2();
  }
  uint64_t v12 = v13;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B890);
  sub_18FCD17CC((unint64_t *)&qword_1E926B898, &qword_1E926B890);
  uint64_t v8 = sub_18FD020E0();
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t sub_18FCBD37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char **a5)
{
  sub_18FCBB718(a4);
  AGTypeGetKind();
  sub_18FD02750();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_18FD02220();
  sub_18FD02E60();
  sub_18FD02220();
  swift_bridgeObjectRelease();
  sub_18FD02220();
  sub_18FD02220();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1;
  long long v9 = *a5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a5 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v9 = sub_18FCAE4E4(0, *((void *)v9 + 2) + 1, 1, v9);
    *a5 = v9;
  }
  unint64_t v12 = *((void *)v9 + 2);
  unint64_t v11 = *((void *)v9 + 3);
  if (v12 >= v11 >> 1)
  {
    long long v9 = sub_18FCAE4E4((char *)(v11 > 1), v12 + 1, 1, v9);
    *a5 = v9;
  }
  *((void *)v9 + 2) = v12 + 1;
  uint64_t v13 = &v9[16 * v12];
  *((void *)v13 + 4) = v8;
  *((void *)v13 + 5) = a2;
  return 1;
}

uint64_t sub_18FCBD628(uint64_t a1, int a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 <= 2 && a2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B890);
    sub_18FCD17CC((unint64_t *)&qword_1E926B898, &qword_1E926B890);
    return sub_18FD020E0();
  }
  else
  {
    if (v3)
    {
      uint64_t v17 = MEMORY[0x1E4FBC860];
      sub_18FCA9E00(0, v3, 0);
      uint64_t v6 = (uint64_t *)(a1 + 40);
      do
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_18FCBD8FC(v7, v8);
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        unint64_t v13 = *(void *)(v17 + 16);
        unint64_t v12 = *(void *)(v17 + 24);
        if (v13 >= v12 >> 1) {
          sub_18FCA9E00((char *)(v12 > 1), v13 + 1, 1);
        }
        v6 += 2;
        *(void *)(v17 + 16) = v13 + 1;
        uint64_t v14 = v17 + 16 * v13;
        *(void *)(v14 + 32) = v9;
        *(void *)(v14 + 40) = v11;
        --v3;
      }
      while (v3);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B890);
    sub_18FCD17CC((unint64_t *)&qword_1E926B898, &qword_1E926B890);
    sub_18FD020E0();
    swift_bridgeObjectRelease();
    switch(a2)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 7:
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_18FD02280();
        sub_18FD02210();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v16;
        break;
      default:
        sub_18FD02890();
        __break(1u);
        JUMPOUT(0x18FCBD8E0);
    }
  }
  return result;
}

uint64_t sub_18FCBD8FC(uint64_t a1, uint64_t a2)
{
  if (sub_18FD02260() & 1) != 0 || (sub_18FD02260() & 1) != 0 || (sub_18FD02260())
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_18FD021F0();
    uint64_t v6 = sub_18FCD2A64(v4, a1, a2, v5);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    MEMORY[0x192FC1610](v6, v8, v10, v12);
    swift_bridgeObjectRelease();
    sub_18FD021F0();
    uint64_t v14 = sub_18FD029E0();
    sub_18FD02220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_18FD02220();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_18FD021F0();
    uint64_t v14 = sub_18FD029E0();
    sub_18FD02220();
  }
  return v14;
}

id _AXGetSwiftMangledClassNameWithItems()
{
  uint64_t v0 = sub_18FD02320();
  sub_18FCBD628(v0, 1);
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_18FD02120();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t _AXSwiftValidateClassHasField(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateClassHasFieldTm(a1, a2, sub_18FCBDCD4);
}

uint64_t sub_18FCBDCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD02880();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v10 = type metadata accessor for FieldAccessor(0);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_18FD07470;
  uint64_t v14 = v13 + v12;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v15, v14);
  uint64_t v16 = v14 + v11;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708B8);
  uint64_t v18 = sub_18FCCFDB0(v17, v16);
  __int16 v27 = 0;
  uint64_t v26 = 0;
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = &v24 - 12;
  *(&v24 - 10) = v13;
  *(&v24 - 9) = a2;
  *(&v24 - _Block_object_dispose(&a9, 8) = a3;
  *(&v24 - 7) = (uint64_t)&v27 + 1;
  *(&v24 - 6) = (uint64_t)&v26;
  *(&v24 - 5) = (uint64_t)sub_18FCB4F30;
  *(&v24 - 4) = 0;
  *(&v24 - 3) = 0;
  *(&v24 - 2) = 0;
  *(&v24 - 1) = (uint64_t)&v27;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v25 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = sub_18FD02680();
    MEMORY[0x1F4188790](v21);
    *(&v24 - 2) = (uint64_t)sub_18FCD1818;
    *(&v24 - 1) = (uint64_t)v19;
    sub_18FD02790();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = a1;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a1);
      *(&v24 - 2) = (uint64_t)&v25;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v24 - 2) = (uint64_t)sub_18FCD1818;
    *(&v24 - 1) = (uint64_t)v19;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v27);
}

uint64_t _AXSwiftValidateClassHasFieldWithTypeString()
{
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v1 = sub_18FD02150();
  uint64_t v3 = v2;
  uint64_t v4 = sub_18FD02150();
  LOBYTE(v1) = sub_18FCBE1C4(ObjCClassMetadata, v1, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_18FCBE1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_18FD02880();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v14 = type metadata accessor for FieldAccessor(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
  uint64_t v18 = v17 + v16;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v19, v18);
  uint64_t v20 = v18 + v15;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
  uint64_t v22 = sub_18FCCFDB0(v21, v20);
  __int16 v33 = 0;
  uint64_t v32 = 0;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = &v28[-96];
  *(void *)&v28[-80] = v17;
  *(void *)&v28[-72] = a2;
  *(void *)&v28[-64] = a3;
  *(void *)&v28[-56] = (char *)&v33 + 1;
  *(void *)&v28[-48] = &v32;
  *(void *)&v28[-40] = sub_18FCD181C;
  *(void *)&v28[-32] = v28;
  *(void *)&v28[-24] = 0;
  *(void *)&v28[-16] = 0;
  *(void *)&v28[-8] = &v33;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v31 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v25 = sub_18FD02680();
    MEMORY[0x1F4188790](v25);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    sub_18FD02790();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = a1;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a1);
      *(void *)&v28[-16] = &v31;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v33) & v33 & 1;
}

id _AXSwiftValidateClassGetFieldTypeString()
{
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v1 = sub_18FD02150();
  sub_18FCBE6E0(ObjCClassMetadata, v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_18FD02120();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18FCBE6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD02880();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v10 = type metadata accessor for FieldAccessor(0);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_18FD07470;
  uint64_t v14 = v13 + v12;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v15, v14);
  uint64_t v16 = v14 + v11;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708B8);
  uint64_t v18 = sub_18FCCFDB0(v17, v16);
  __int16 v27 = 0;
  uint64_t v26 = 0;
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = &v24 - 12;
  *(&v24 - 10) = v13;
  *(&v24 - 9) = a2;
  *(&v24 - _Block_object_dispose(&a9, 8) = a3;
  *(&v24 - 7) = (uint64_t)&v27 + 1;
  *(&v24 - 6) = (uint64_t)&v26;
  *(&v24 - 5) = (uint64_t)sub_18FCB4F30;
  *(&v24 - 4) = 0;
  *(&v24 - 3) = 0;
  *(&v24 - 2) = 0;
  *(&v24 - 1) = (uint64_t)&v27;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v25 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = sub_18FD02680();
    MEMORY[0x1F4188790](v21);
    *(&v24 - 2) = (uint64_t)sub_18FCD1818;
    *(&v24 - 1) = (uint64_t)v19;
    sub_18FD02790();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = a1;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a1);
      *(&v24 - 2) = (uint64_t)&v25;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v24 - 2) = (uint64_t)sub_18FCD1818;
    *(&v24 - 1) = (uint64_t)v19;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  if ((v27 & 0x100) == 0) {
    return 0;
  }
  uint64_t result = v26;
  if (v26) {
    return sub_18FD02E60();
  }
  __break(1u);
  return result;
}

uint64_t _AXSwiftValidateClassHasFieldOfAnyClass(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateClassHasFieldTm(a1, a2, sub_18FCBEBF4);
}

uint64_t _AXSwiftValidateClassHasFieldTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v5 = sub_18FD02150();
  LOBYTE(a3) = a3(ObjCClassMetadata, v5, v6);
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_18FCBEBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD02880();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v10 = type metadata accessor for FieldAccessor(0);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_18FD07470;
  uint64_t v14 = v13 + v12;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v15, v14);
  uint64_t v16 = v14 + v11;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708B8);
  uint64_t v18 = sub_18FCCFDB0(v17, v16);
  __int16 v27 = 0;
  uint64_t v26 = 0;
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = &v24 - 12;
  *(&v24 - 10) = v13;
  *(&v24 - 9) = a2;
  *(&v24 - _Block_object_dispose(&a9, 8) = a3;
  *(&v24 - 7) = (uint64_t)&v27 + 1;
  *(&v24 - 6) = (uint64_t)&v26;
  *(&v24 - 5) = (uint64_t)sub_18FCBF070;
  *(&v24 - 4) = 0;
  *(&v24 - 3) = 0;
  *(&v24 - 2) = 0;
  *(&v24 - 1) = (uint64_t)&v27;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v25 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = sub_18FD02680();
    MEMORY[0x1F4188790](v21);
    *(&v24 - 2) = (uint64_t)sub_18FCD1818;
    *(&v24 - 1) = (uint64_t)v19;
    sub_18FD02790();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = a1;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a1);
      *(&v24 - 2) = (uint64_t)&v25;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v24 - 2) = (uint64_t)sub_18FCD1818;
    *(&v24 - 1) = (uint64_t)v19;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v27) & v27 & 1;
}

uint64_t sub_18FCBF070()
{
  return sub_18FCC1334();
}

uint64_t _AXSwiftValidateStruct(uint64_t a1)
{
  return _AXSwiftValidateStructTm(a1, (uint64_t (*)(uint64_t))sub_18FCBF0A0);
}

BOOL sub_18FCBF0A0()
{
  sub_18FCA61E8();
  uint64_t v0 = sub_18FD02620();
  sub_18FCBD628(v0, 2);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (!v1) {
    return 0;
  }
  uint64_t isOptionalType = swift_isOptionalType();
  if (isOptionalType)
  {
    MEMORY[0x1F4188790](isOptionalType);
    AGTypeApplyFields2();
  }
  return AGTypeGetKind() == 2;
}

BOOL _AXSwiftValidateStructHasSize(uint64_t a1, uint64_t a2)
{
  sub_18FD02150();
  sub_18FCA61E8();
  uint64_t v3 = sub_18FD02620();
  sub_18FCBD628(v3, 2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = sub_18FCBF290(v4, v4);
    swift_bridgeObjectRelease();
    return v5 == a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_18FCBF290(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 - 8) + 64);
}

uint64_t _AXSwiftValidateStructHasField(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18FCBF2C0);
}

uint64_t sub_18FCBF2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_18FD02880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[0] = a1;
  v31[1] = a2;
  v30[0] = 46;
  v30[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v12 = sub_18FD02620();
  sub_18FCBD628(v12, 2);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (!v13) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v14 = type metadata accessor for FieldAccessor(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
  uint64_t v18 = v17 + v16;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v19, v18);
  uint64_t v20 = v18 + v15;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
  uint64_t v22 = sub_18FCCFDB0(v21, v20);
  __int16 v29 = 0;
  v31[0] = 0;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = &v28[-96];
  *(void *)&v28[-80] = v17;
  *(void *)&v28[-72] = a3;
  *(void *)&v28[-64] = a4;
  *(void *)&v28[-56] = (char *)&v29 + 1;
  *(void *)&v28[-48] = v31;
  *(void *)&v28[-40] = sub_18FCB4F30;
  *(void *)&v28[-32] = 0;
  *(void *)&v28[-24] = 0;
  *(void *)&v28[-16] = 0;
  *(void *)&v28[-8] = &v29;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    v30[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v25 = sub_18FD02680();
    MEMORY[0x1F4188790](v25);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    sub_18FD02790();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v30[0] = v13;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](v13);
      *(void *)&v28[-16] = v30;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v29);
}

uint64_t _AXSwiftValidateStructHasFieldWithTypeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _AXSwiftValidateStructHasFieldWithTypeStringTm(a1, a2, a3, sub_18FCBF7C4);
}

uint64_t sub_18FCBF7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_18FD02880();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[0] = a1;
  v40[1] = a2;
  v39[0] = 46;
  v39[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v16 = sub_18FD02620();
  sub_18FCBD628(v16, 2);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_18FD02760();
  uint64_t v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v36 = v13;
    unint64_t v37 = &v35;
    MEMORY[0x1F4188790](v18);
    *(&v35 - 2) = a5;
    *(&v35 - 1) = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
    uint64_t v19 = type metadata accessor for FieldAccessor(0);
    uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 72);
    unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_18FD07470;
    uint64_t v23 = v22 + v21;
    if (qword_1E926BF10 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v19, (uint64_t)qword_1E92708A0);
    sub_18FCCFDB0(v24, v23);
    uint64_t v25 = v23 + v20;
    if (qword_1E926BF18 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v19, (uint64_t)qword_1E92708B8);
    uint64_t v27 = sub_18FCCFDB0(v26, v25);
    __int16 v38 = 0;
    v40[0] = 0;
    MEMORY[0x1F4188790](v27);
    uint64_t v28 = &v35 - 12;
    *(&v35 - 10) = v22;
    *(&v35 - 9) = a3;
    *(&v35 - _Block_object_dispose(&a9, 8) = a4;
    *(&v35 - 7) = (uint64_t)&v38 + 1;
    *(&v35 - 6) = (uint64_t)v40;
    *(&v35 - 5) = (uint64_t)sub_18FCD3860;
    *(&v35 - 4) = (uint64_t)(&v35 - 4);
    *(&v35 - 3) = 0;
    *(&v35 - 2) = 0;
    *(&v35 - 1) = (uint64_t)&v38;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
      uint64_t v29 = v36;
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_18FD07480;
      sub_18FD02870();
      v39[0] = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
      sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
      uint64_t v31 = sub_18FD02680();
      MEMORY[0x1F4188790](v31);
      *(&v35 - 2) = (uint64_t)sub_18FCD1818;
      *(&v35 - 1) = (uint64_t)v28;
      sub_18FD02790();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      v39[0] = v17;
      if (swift_isOptionalType())
      {
        MEMORY[0x1F4188790](v17);
        *(&v35 - 2) = (uint64_t)v39;
        AGTypeApplyFields2();
      }
      uint64_t isClassType = swift_isClassType();
      if ((isClassType & 1) == 0) {
        uint64_t isClassType = AGTypeGetKind();
      }
      MEMORY[0x1F4188790](isClassType);
      *(&v35 - 2) = (uint64_t)sub_18FCD1818;
      *(&v35 - 1) = (uint64_t)v28;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    char v32 = HIBYTE(v38) & v38;
  }
  else
  {
    char v32 = 0;
  }
  return v32 & 1;
}

id _AXSwiftValidateStructGetFieldTypeString(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructGetFieldTypeStringTm(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_18FCBFD1C);
}

uint64_t sub_18FCBFD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_18FD02880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[0] = a1;
  v31[1] = a2;
  v30[0] = 46;
  v30[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v12 = sub_18FD02620();
  sub_18FCBD628(v12, 2);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (!v13) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v14 = type metadata accessor for FieldAccessor(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
  uint64_t v18 = v17 + v16;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v19, v18);
  uint64_t v20 = v18 + v15;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
  uint64_t v22 = sub_18FCCFDB0(v21, v20);
  __int16 v29 = 0;
  v31[0] = 0;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = &v28[-96];
  *(void *)&v28[-80] = v17;
  *(void *)&v28[-72] = a3;
  *(void *)&v28[-64] = a4;
  *(void *)&v28[-56] = (char *)&v29 + 1;
  *(void *)&v28[-48] = v31;
  *(void *)&v28[-40] = sub_18FCB4F30;
  *(void *)&v28[-32] = 0;
  *(void *)&v28[-24] = 0;
  *(void *)&v28[-16] = 0;
  *(void *)&v28[-8] = &v29;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    v30[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v25 = sub_18FD02680();
    MEMORY[0x1F4188790](v25);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    sub_18FD02790();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v30[0] = v13;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](v13);
      *(void *)&v28[-16] = v30;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  if ((v29 & 0x100) == 0) {
    return 0;
  }
  uint64_t result = v31[0];
  if (v31[0]) {
    return sub_18FD02E60();
  }
  __break(1u);
  return result;
}

uint64_t _AXSwiftValidateStructHasFieldOfAnyClass(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18FCC0248);
}

uint64_t sub_18FCC0248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_18FD02880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v12 = sub_18FD02620();
  sub_18FCBD628(v12, 2);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
    uint64_t v14 = type metadata accessor for FieldAccessor(0);
    uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
    unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
    uint64_t v18 = v17 + v16;
    if (qword_1E926BF10 != -1) {
      swift_once();
    }
    uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
    sub_18FCCFDB0(v19, v18);
    uint64_t v20 = v18 + v15;
    if (qword_1E926BF18 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
    uint64_t v22 = sub_18FCCFDB0(v21, v20);
    __int16 v30 = 0;
    v32[0] = 0;
    MEMORY[0x1F4188790](v22);
    uint64_t v23 = &v29[-96];
    *(void *)&v29[-80] = v17;
    *(void *)&v29[-72] = a3;
    *(void *)&v29[-64] = a4;
    *(void *)&v29[-56] = (char *)&v30 + 1;
    *(void *)&v29[-48] = v32;
    *(void *)&v29[-40] = sub_18FCBF070;
    *(void *)&v29[-32] = 0;
    *(void *)&v29[-24] = 0;
    *(void *)&v29[-16] = 0;
    *(void *)&v29[-8] = &v30;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
      sub_18FD02870();
      v31[0] = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
      sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
      uint64_t v25 = sub_18FD02680();
      MEMORY[0x1F4188790](v25);
      *(void *)&v29[-16] = sub_18FCD1818;
      *(void *)&v29[-8] = v23;
      sub_18FD02790();
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v31[0] = v13;
      if (swift_isOptionalType())
      {
        MEMORY[0x1F4188790](v13);
        *(void *)&v29[-16] = v31;
        AGTypeApplyFields2();
      }
      uint64_t isClassType = swift_isClassType();
      if ((isClassType & 1) == 0) {
        uint64_t isClassType = AGTypeGetKind();
      }
      MEMORY[0x1F4188790](isClassType);
      *(void *)&v29[-16] = sub_18FCD1818;
      *(void *)&v29[-8] = v23;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    char v26 = HIBYTE(v30) & v30;
  }
  else
  {
    char v26 = 0;
  }
  return v26 & 1;
}

uint64_t _AXSwiftValidateEnum(uint64_t a1)
{
  return _AXSwiftValidateStructTm(a1, (uint64_t (*)(uint64_t))sub_18FCC0798);
}

uint64_t _AXSwiftValidateStructTm(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_18FD02150();
  LOBYTE(a2) = a2(v3);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

BOOL sub_18FCC0798()
{
  sub_18FCA61E8();
  uint64_t v0 = sub_18FD02620();
  sub_18FCBD628(v0, 3);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (!v1) {
    return 0;
  }
  uint64_t isOptionalType = swift_isOptionalType();
  if (isOptionalType)
  {
    MEMORY[0x1F4188790](isOptionalType);
    AGTypeApplyFields2();
  }
  return AGTypeGetKind() == 3;
}

uint64_t _AXSwiftValidateEnumHasCase(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18FCC08C4);
}

uint64_t sub_18FCC08C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_18FD02880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[0] = a1;
  v31[1] = a2;
  v30[0] = 46;
  v30[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v12 = sub_18FD02620();
  sub_18FCBD628(v12, 3);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (!v13) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v14 = type metadata accessor for FieldAccessor(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
  uint64_t v18 = v17 + v16;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v19, v18);
  uint64_t v20 = v18 + v15;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
  uint64_t v22 = sub_18FCCFDB0(v21, v20);
  __int16 v29 = 0;
  v31[0] = 0;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = &v28[-96];
  *(void *)&v28[-80] = v17;
  *(void *)&v28[-72] = a3;
  *(void *)&v28[-64] = a4;
  *(void *)&v28[-56] = (char *)&v29 + 1;
  *(void *)&v28[-48] = v31;
  *(void *)&v28[-40] = sub_18FCB4F30;
  *(void *)&v28[-32] = 0;
  *(void *)&v28[-24] = 0;
  *(void *)&v28[-16] = 0;
  *(void *)&v28[-8] = &v29;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    v30[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v25 = sub_18FD02680();
    MEMORY[0x1F4188790](v25);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    sub_18FD02790();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v30[0] = v13;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](v13);
      *(void *)&v28[-16] = v30;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  return HIBYTE(v29);
}

uint64_t _AXSwiftValidateEnumHasCaseOfAnyClass(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructHasFieldTm(a1, a2, sub_18FCC0E3C);
}

uint64_t _AXSwiftValidateStructHasFieldTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_18FD02150();
  uint64_t v6 = v5;
  uint64_t v7 = sub_18FD02150();
  LOBYTE(a3) = a3(v4, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_18FCC0E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_18FD02880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = a1;
  v32[1] = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v12 = sub_18FD02620();
  sub_18FCBD628(v12, 3);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
    uint64_t v14 = type metadata accessor for FieldAccessor(0);
    uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
    unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
    uint64_t v18 = v17 + v16;
    if (qword_1E926BF10 != -1) {
      swift_once();
    }
    uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
    sub_18FCCFDB0(v19, v18);
    uint64_t v20 = v18 + v15;
    if (qword_1E926BF18 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
    uint64_t v22 = sub_18FCCFDB0(v21, v20);
    __int16 v30 = 0;
    v32[0] = 0;
    MEMORY[0x1F4188790](v22);
    uint64_t v23 = &v29[-96];
    *(void *)&v29[-80] = v17;
    *(void *)&v29[-72] = a3;
    *(void *)&v29[-64] = a4;
    *(void *)&v29[-56] = (char *)&v30 + 1;
    *(void *)&v29[-48] = v32;
    *(void *)&v29[-40] = sub_18FCBF070;
    *(void *)&v29[-32] = 0;
    *(void *)&v29[-24] = 0;
    *(void *)&v29[-16] = 0;
    *(void *)&v29[-8] = &v30;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
      sub_18FD02870();
      v31[0] = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
      sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
      uint64_t v25 = sub_18FD02680();
      MEMORY[0x1F4188790](v25);
      *(void *)&v29[-16] = sub_18FCD1818;
      *(void *)&v29[-8] = v23;
      sub_18FD02790();
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v31[0] = v13;
      if (swift_isOptionalType())
      {
        MEMORY[0x1F4188790](v13);
        *(void *)&v29[-16] = v31;
        AGTypeApplyFields2();
      }
      uint64_t isClassType = swift_isClassType();
      if ((isClassType & 1) == 0) {
        uint64_t isClassType = AGTypeGetKind();
      }
      MEMORY[0x1F4188790](isClassType);
      *(void *)&v29[-16] = sub_18FCD1818;
      *(void *)&v29[-8] = v23;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    char v26 = HIBYTE(v30) & v30;
  }
  else
  {
    char v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_18FCC1334()
{
  uint64_t isOptionalType = swift_isOptionalType();
  if (isOptionalType)
  {
    MEMORY[0x1F4188790](isOptionalType);
    AGTypeApplyFields2();
  }
  return swift_isClassType();
}

uint64_t _AXSwiftValidateEnumHasCaseWithTypeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _AXSwiftValidateStructHasFieldWithTypeStringTm(a1, a2, a3, sub_18FCC1478);
}

uint64_t _AXSwiftValidateStructHasFieldWithTypeStringTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = sub_18FD02150();
  uint64_t v7 = v6;
  uint64_t v8 = sub_18FD02150();
  uint64_t v10 = v9;
  uint64_t v11 = sub_18FD02150();
  LOBYTE(a4) = a4(v5, v7, v8, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_18FCC1478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_18FD02880();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[0] = a1;
  v40[1] = a2;
  v39[0] = 46;
  v39[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v16 = sub_18FD02620();
  sub_18FCBD628(v16, 3);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_18FD02760();
  uint64_t v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v36 = v13;
    unint64_t v37 = &v35;
    MEMORY[0x1F4188790](v18);
    *(&v35 - 2) = a5;
    *(&v35 - 1) = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
    uint64_t v19 = type metadata accessor for FieldAccessor(0);
    uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 72);
    unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_18FD07470;
    uint64_t v23 = v22 + v21;
    if (qword_1E926BF10 != -1) {
      swift_once();
    }
    uint64_t v24 = __swift_project_value_buffer(v19, (uint64_t)qword_1E92708A0);
    sub_18FCCFDB0(v24, v23);
    uint64_t v25 = v23 + v20;
    if (qword_1E926BF18 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v19, (uint64_t)qword_1E92708B8);
    uint64_t v27 = sub_18FCCFDB0(v26, v25);
    __int16 v38 = 0;
    v40[0] = 0;
    MEMORY[0x1F4188790](v27);
    uint64_t v28 = &v35 - 12;
    *(&v35 - 10) = v22;
    *(&v35 - 9) = a3;
    *(&v35 - _Block_object_dispose(&a9, 8) = a4;
    *(&v35 - 7) = (uint64_t)&v38 + 1;
    *(&v35 - 6) = (uint64_t)v40;
    *(&v35 - 5) = (uint64_t)sub_18FCD3860;
    *(&v35 - 4) = (uint64_t)(&v35 - 4);
    *(&v35 - 3) = 0;
    *(&v35 - 2) = 0;
    *(&v35 - 1) = (uint64_t)&v38;
    if (AGTypeGetKind() == 5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
      uint64_t v29 = v36;
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_18FD07480;
      sub_18FD02870();
      v39[0] = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
      sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
      uint64_t v31 = sub_18FD02680();
      MEMORY[0x1F4188790](v31);
      *(&v35 - 2) = (uint64_t)sub_18FCD1818;
      *(&v35 - 1) = (uint64_t)v28;
      sub_18FD02790();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      v39[0] = v17;
      if (swift_isOptionalType())
      {
        MEMORY[0x1F4188790](v17);
        *(&v35 - 2) = (uint64_t)v39;
        AGTypeApplyFields2();
      }
      uint64_t isClassType = swift_isClassType();
      if ((isClassType & 1) == 0) {
        uint64_t isClassType = AGTypeGetKind();
      }
      MEMORY[0x1F4188790](isClassType);
      *(&v35 - 2) = (uint64_t)sub_18FCD1818;
      *(&v35 - 1) = (uint64_t)v28;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
    }
    char v32 = HIBYTE(v38) & v38;
  }
  else
  {
    char v32 = 0;
  }
  return v32 & 1;
}

uint64_t sub_18FCC19B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_18FD02E60() == a3 && v5 == a4) {
    char v6 = 1;
  }
  else {
    char v6 = sub_18FD02C00();
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

id _AXSwiftValidateEnumGetCaseTypeString(uint64_t a1, uint64_t a2)
{
  return _AXSwiftValidateStructGetFieldTypeStringTm(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_18FCC1AFC);
}

id _AXSwiftValidateStructGetFieldTypeStringTm(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_18FD02150();
  uint64_t v6 = v5;
  uint64_t v7 = sub_18FD02150();
  a3(v4, v6, v7, v8);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  return v11;
}

uint64_t sub_18FCC1AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_18FD02880();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[0] = a1;
  v31[1] = a2;
  v30[0] = 46;
  v30[1] = 0xE100000000000000;
  sub_18FCA61E8();
  uint64_t v12 = sub_18FD02620();
  sub_18FCBD628(v12, 3);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_18FD02760();
  swift_bridgeObjectRelease();
  if (!v13) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v14 = type metadata accessor for FieldAccessor(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07470;
  uint64_t v18 = v17 + v16;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
  sub_18FCCFDB0(v19, v18);
  uint64_t v20 = v18 + v15;
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708B8);
  uint64_t v22 = sub_18FCCFDB0(v21, v20);
  __int16 v29 = 0;
  v31[0] = 0;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = &v28[-96];
  *(void *)&v28[-80] = v17;
  *(void *)&v28[-72] = a3;
  *(void *)&v28[-64] = a4;
  *(void *)&v28[-56] = (char *)&v29 + 1;
  *(void *)&v28[-48] = v31;
  *(void *)&v28[-40] = sub_18FCB4F30;
  *(void *)&v28[-32] = 0;
  *(void *)&v28[-24] = 0;
  *(void *)&v28[-16] = 0;
  *(void *)&v28[-8] = &v29;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    v30[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v25 = sub_18FD02680();
    MEMORY[0x1F4188790](v25);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    sub_18FD02790();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v30[0] = v13;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](v13);
      *(void *)&v28[-16] = v30;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v28[-16] = sub_18FCD1818;
    *(void *)&v28[-8] = v23;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
  }
  if ((v29 & 0x100) == 0) {
    return 0;
  }
  uint64_t result = v31[0];
  if (v31[0]) {
    return sub_18FD02E60();
  }
  __break(1u);
  return result;
}

id _AXSafeSwiftEnumAssociatedObject()
{
  uint64_t v0 = (void *)swift_unknownObjectRetain();
  uint64_t v1 = sub_18FCC2058(v0);
  swift_unknownObjectRelease();
  return v1;
}

void *sub_18FCC2058(void *a1)
{
  sub_18FCBBCC0(a1, &v5);
  if (!v6)
  {
    sub_18FCA7A04((uint64_t)&v5, &qword_1E926B858);
    return 0;
  }
  sub_18FCD00F0(&v5, &v7);
  __swift_project_boxed_opaque_existential_1(&v7, v8);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v2 = sub_18FCBB718(DynamicType);
  if (AGTypeGetKind() != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    return 0;
  }
  uint64_t v3 = sub_18FCC210C(v2, (uint64_t)&v7, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v3;
}

void *sub_18FCC210C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v29[5] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_18FD02600();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v27 - v14;
  sub_18FCA3724(a2, (uint64_t)v29);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v16)
  {
    v17(v9, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  v17(v9, 0, 1, a3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v9, a3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C440);
  if (!swift_dynamicCast())
  {
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    uint64_t v24 = sub_18FCA7A04((uint64_t)v27, &qword_1E926C448);
    v29[0] = 0;
    MEMORY[0x1F4188790](v24);
    *(void *)&v27[-1] = a3;
    *((void *)&v27[-1] + 1) = v29;
    AGTypeApplyEnumData();
    uint64_t v22 = (void *)v29[0];
    if (!v29[0]
      || (sub_18FCD28F8(), !objc_msgSend(v22, sel_isKindOfClass_, swift_getObjCClassFromMetadata())))
    {
      uint64_t v25 = (NSString *)sub_18FD02120();
      Class v26 = NSClassFromString(v25);

      if (!v22 || !v26 || !objc_msgSend(v22, sel_isKindOfClass_, v26)) {
        goto LABEL_4;
      }
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, a3);
    return 0;
  }
  sub_18FCA370C(v27, (uint64_t)v29);
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v21 = (char *)v27 - v20;
  sub_18FD022C0();
  uint64_t v22 = (void *)sub_18FD02BF0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
LABEL_4:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, a3);
  return v22;
}

uint64_t sub_18FCC25A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  uint64_t v8 = sub_18FD02BF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a4);
  return v8;
}

id _AXSafeSwiftEnumCase(uint64_t a1)
{
  return _AXSafeSwiftTypeNameTm(a1, (void (*)(uint64_t))sub_18FCC2718);
}

id _AXSafeSwiftTypeNameTm(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = swift_unknownObjectRetain();
  a2(v3);
  uint64_t v5 = v4;
  swift_unknownObjectRelease();
  if (v5)
  {
    uint64_t v6 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  return v6;
}

uint64_t sub_18FCC2718(void *a1)
{
  sub_18FCBBCC0(a1, &v5);
  if (!v6)
  {
    sub_18FCA7A04((uint64_t)&v5, &qword_1E926B858);
    return 0;
  }
  sub_18FCD00F0(&v5, &v7);
  __swift_project_boxed_opaque_existential_1(&v7, v8);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v2 = sub_18FCBB718(DynamicType);
  if (AGTypeGetKind() != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    return 0;
  }
  uint64_t v3 = sub_18FCC27D8(v2, (uint64_t)&v7, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  return v3;
}

uint64_t sub_18FCC27D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_18FD02600();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v17[-v8];
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_18FCA3724(a2, (uint64_t)v17);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v13)
  {
    v14(v9, 1, 1, a3);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  v14(v9, 0, 1, a3);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v9, a3);
  if (!swift_EnumCaseName())
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, a3);
    return 0;
  }
  uint64_t v15 = sub_18FD02100();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, a3);
  return v15;
}

BOOL sub_18FCC2A0C(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBB390] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBB390]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C598) == a1;
  }
  return result;
}

BOOL sub_18FCC2A68(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBB550] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBB550]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C588) == a1;
  }
  return result;
}

BOOL sub_18FCC2AC4(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBB808] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBB808]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C578) == a1;
  }
  return result;
}

BOOL sub_18FCC2B20(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC098] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC098]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C568) == a1;
  }
  return result;
}

BOOL sub_18FCC2B7C(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC358] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC358]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C558) == a1;
  }
  return result;
}

BOOL sub_18FCC2BD8(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC0F8] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC0F8]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C548) == a1;
  }
  return result;
}

BOOL sub_18FCC2C34(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC450] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC450]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C538) == a1;
  }
  return result;
}

BOOL sub_18FCC2C90(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC150] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC150]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C528) == a1;
  }
  return result;
}

BOOL sub_18FCC2CEC(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC4C0] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC4C0]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C518) == a1;
  }
  return result;
}

BOOL sub_18FCC2D48(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC1C8] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC1C8]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C508) == a1;
  }
  return result;
}

BOOL sub_18FCC2DA4(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC538] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC538]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4F8) == a1;
  }
  return result;
}

BOOL sub_18FCC2E00(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBB470] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBB470]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4E8) == a1;
  }
  return result;
}

BOOL sub_18FCC2E5C(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBB3D0] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBB3D0]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4D8) == a1;
  }
  return result;
}

BOOL sub_18FCC2EB8(uint64_t a1, int a2)
{
  BOOL result = a1 == MEMORY[0x1E4FBC960] || a2 == 4;
  if (a2 == 4 && a1 != MEMORY[0x1E4FBC960]) {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4C8) == a1;
  }
  return result;
}

BOOL sub_18FCC2F14(uint64_t a1, int a2)
{
  return sub_18FCC2F74(a1, a2, (uint64_t (*)(void))type metadata accessor for CGPoint, &qword_1E926C4B8);
}

BOOL sub_18FCC2F34(uint64_t a1, int a2)
{
  return sub_18FCC2F74(a1, a2, (uint64_t (*)(void))type metadata accessor for CGSize, &qword_1E926C4A8);
}

BOOL sub_18FCC2F54(uint64_t a1, int a2)
{
  return sub_18FCC2F74(a1, a2, (uint64_t (*)(void))type metadata accessor for CGRect, &qword_1E926C3E0);
}

BOOL sub_18FCC2F74(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v7 = a3(0);
  BOOL result = v7 == a1 || a2 == 4;
  if (a2 == 4 && v7 != a1) {
    return __swift_instantiateConcreteTypeFromMangledName(a4) == a1;
  }
  return result;
}

BOOL sub_18FCC2FE4(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C598, &qword_1E926C5A0);
}

BOOL sub_18FCC2FF8(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C588, &qword_1E926C590);
}

BOOL sub_18FCC300C(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C578, &qword_1E926C580);
}

BOOL sub_18FCC3020(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C568, &qword_1E926C570);
}

BOOL sub_18FCC3034(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C558, &qword_1E926C560);
}

BOOL sub_18FCC3048(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C548, &qword_1E926C550);
}

BOOL sub_18FCC305C(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C538, &qword_1E926C540);
}

BOOL sub_18FCC3070(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C528, &qword_1E926C530);
}

BOOL sub_18FCC3084(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C518, &qword_1E926C520);
}

BOOL sub_18FCC3098(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C508, &qword_1E926C510);
}

BOOL sub_18FCC30AC(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C4F8, &qword_1E926C500);
}

BOOL sub_18FCC30C0(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C4E8, &qword_1E926C4F0);
}

BOOL sub_18FCC30D4(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C4D8, &qword_1E926C4E0);
}

BOOL sub_18FCC30E8(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C4C8, &qword_1E926C4D0);
}

BOOL sub_18FCC30FC(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C4B8, &qword_1E926C4C0);
}

BOOL sub_18FCC3110(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C4A8, &qword_1E926C4B0);
}

BOOL sub_18FCC3124(uint64_t a1, int a2)
{
  return sub_18FCC3138(a1, a2, &qword_1E926C3E0, &qword_1E926C3E8);
}

BOOL sub_18FCC3138(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  BOOL result = v7 == a1 || a2 == 4;
  if (a2 == 4 && v7 != a1) {
    return __swift_instantiateConcreteTypeFromMangledName(a4) == a1;
  }
  return result;
}

uint64_t sub_18FCC31A4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a7;
  uint64_t v35 = a1;
  uint64_t v32 = sub_18FD02880();
  uint64_t v31 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v30 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 2;
  uint64_t v34 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v49 = 0;
  uint64_t v37 = a9;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  __int16 v40 = (char *)&v49[1];
  uint64_t v41 = &v47;
  uint64_t v42 = a6;
  uint64_t v43 = v33;
  uint64_t v44 = sub_18FCD3444;
  uint64_t v45 = v18;
  uint64_t v46 = v49;
  uint64_t v47 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v31;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v48 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v30;
    uint64_t v22 = v32;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v30 - 2) = (char *)sub_18FCD1818;
    *(&v30 - 1) = v36;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v48 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v30 - 2) = (char *)&v48;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v30 - 2) = (char *)sub_18FCD1818;
    *(&v30 - 1) = v36;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v49[1];
  int v27 = v49[0];
  swift_beginAccess();
  unsigned char *v35 = *(unsigned char *)(v17 + 16);
  swift_release();
  if (v27) {
    int v28 = 256;
  }
  else {
    int v28 = 0;
  }
  return v28 | v26;
}

uint64_t sub_18FCC35D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3420;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  __int16 v29 = v37;
  *uint64_t v37 = *(void *)(v17 + 16);
  *((unsigned char *)v29 + _Block_object_dispose(&a9, 8) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC3A10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD33FC;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  __int16 v29 = v37;
  *uint64_t v37 = *(void *)(v17 + 16);
  *((unsigned char *)v29 + _Block_object_dispose(&a9, 8) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC3E4C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 256;
  uint64_t v36 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD33D8;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 17);
  __int16 v29 = v37;
  *uint64_t v37 = *(unsigned char *)(v17 + 16);
  v29[1] = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC4284(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 256;
  uint64_t v36 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD33B4;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 17);
  __int16 v29 = v37;
  *uint64_t v37 = *(unsigned char *)(v17 + 16);
  v29[1] = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC46BC(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 1_Block_object_dispose(&a9, 8) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3380;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 18);
  __int16 v29 = v37;
  *uint64_t v37 = *(_WORD *)(v17 + 16);
  *((unsigned char *)v29 + 2) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC4AF8(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 1_Block_object_dispose(&a9, 8) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD335C;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 18);
  __int16 v29 = v37;
  *uint64_t v37 = *(_WORD *)(v17 + 16);
  *((unsigned char *)v29 + 2) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC4F34(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 20) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3338;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 20);
  __int16 v29 = v37;
  *uint64_t v37 = *(_DWORD *)(v17 + 16);
  *((unsigned char *)v29 + 4) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC5370(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 20) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3314;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 20);
  __int16 v29 = v37;
  *uint64_t v37 = *(_DWORD *)(v17 + 16);
  *((unsigned char *)v29 + 4) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC57AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD32F0;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  __int16 v29 = v37;
  *uint64_t v37 = *(void *)(v17 + 16);
  *((unsigned char *)v29 + _Block_object_dispose(&a9, 8) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC5BE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD32CC;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  __int16 v29 = v37;
  *uint64_t v37 = *(void *)(v17 + 16);
  *((unsigned char *)v29 + _Block_object_dispose(&a9, 8) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC6024(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 20) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD32A8;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 20);
  __int16 v29 = v37;
  *uint64_t v37 = *(_DWORD *)(v17 + 16);
  *((unsigned char *)v29 + 4) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC6460(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3284;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  __int16 v29 = v37;
  *uint64_t v37 = *(void *)(v17 + 16);
  *((unsigned char *)v29 + _Block_object_dispose(&a9, 8) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC689C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 24) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3268;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  __int16 v29 = v37;
  *uint64_t v37 = *(void *)(v17 + 16);
  *((unsigned char *)v29 + _Block_object_dispose(&a9, 8) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC6CD8(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(void *)(v17 + 24) = 0;
  *(unsigned char *)(v17 + 32) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3238;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 32);
  __int16 v29 = v37;
  *uint64_t v37 = *(_OWORD *)(v17 + 16);
  *((unsigned char *)v29 + 16) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC7118(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(void *)(v17 + 24) = 0;
  *(unsigned char *)(v17 + 32) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3208;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 32);
  __int16 v29 = v37;
  *uint64_t v37 = *(_OWORD *)(v17 + 16);
  *((unsigned char *)v29 + 16) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC7558(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  uint64_t v37 = v17 + 16;
  *(_OWORD *)(v17 + 32) = 0u;
  *(unsigned char *)(v17 + 4_Block_object_dispose(&a9, 8) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD31EC;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 48);
  long long v29 = *(_OWORD *)(v17 + 32);
  int v30 = v38;
  *uint64_t v38 = *(_OWORD *)(v17 + 16);
  v30[1] = v29;
  *((unsigned char *)v30 + 32) = v28;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC799C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a7;
  uint64_t v35 = a1;
  uint64_t v32 = sub_18FD02880();
  uint64_t v31 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  int v30 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 3;
  uint64_t v34 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v49 = 0;
  uint64_t v37 = a9;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = (char *)&v49[1];
  uint64_t v41 = &v47;
  uint64_t v42 = a6;
  uint64_t v43 = v33;
  uint64_t v44 = sub_18FCD31D0;
  uint64_t v45 = v18;
  uint64_t v46 = v49;
  uint64_t v47 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v31;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v48 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v30;
    uint64_t v22 = v32;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v30 - 2) = (char *)sub_18FCD1818;
    *(&v30 - 1) = v36;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v48 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v30 - 2) = (char *)&v48;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v30 - 2) = (char *)sub_18FCD1818;
    *(&v30 - 1) = v36;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v49[1];
  int v27 = v49[0];
  swift_beginAccess();
  unsigned char *v35 = *(unsigned char *)(v17 + 16);
  swift_release();
  if (v27) {
    int v28 = 256;
  }
  else {
    int v28 = 0;
  }
  return v28 | v26;
}

uint64_t sub_18FCC7DCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD319C;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  char v29 = *(unsigned char *)(v17 + 25);
  int v30 = v38;
  *uint64_t v38 = *(void *)(v17 + 16);
  *((unsigned char *)v30 + _Block_object_dispose(&a9, 8) = v28;
  *((unsigned char *)v30 + 9) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC8210(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD3178;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  char v29 = *(unsigned char *)(v17 + 25);
  int v30 = v38;
  *uint64_t v38 = *(void *)(v17 + 16);
  *((unsigned char *)v30 + _Block_object_dispose(&a9, 8) = v28;
  *((unsigned char *)v30 + 9) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC8654(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 1_Block_object_dispose(&a9, 8) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3154;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 18);
  char v29 = v37;
  *uint64_t v37 = *(_WORD *)(v17 + 16);
  *((unsigned char *)v29 + 2) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC8A90(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v37 = a1;
  uint64_t v34 = sub_18FD02880();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_WORD *)(v17 + 16) = 0;
  uint64_t v36 = v17 + 16;
  *(unsigned char *)(v17 + 1_Block_object_dispose(&a9, 8) = 1;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v51 = 0;
  uint64_t v39 = a9;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = (char *)&v51[1];
  uint64_t v43 = &v49;
  uint64_t v44 = a6;
  uint64_t v45 = v35;
  uint64_t v46 = sub_18FCD3130;
  uint64_t v47 = v18;
  uint64_t v48 = v51;
  uint64_t v49 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v33;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v32;
    uint64_t v22 = v34;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v50 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v32 - 2) = (char *)&v50;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v32 - 2) = (char *)sub_18FCD1818;
    *(&v32 - 1) = v38;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v51[1];
  int v27 = v51[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 18);
  char v29 = v37;
  *uint64_t v37 = *(_WORD *)(v17 + 16);
  *((unsigned char *)v29 + 2) = v28;
  swift_release();
  if (v27) {
    int v30 = 256;
  }
  else {
    int v30 = 0;
  }
  return v30 | v26;
}

uint64_t sub_18FCC8ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0x1000000;
  uint64_t v37 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD30FC;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  __int16 v28 = *(_WORD *)(v17 + 16);
  char v29 = *(unsigned char *)(v17 + 19);
  uint64_t v30 = v38;
  *(unsigned char *)(v38 + 2) = *(unsigned char *)(v17 + 18);
  *(_WORD *)uint64_t v30 = v28;
  *(unsigned char *)(v30 + 3) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC930C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0x1000000;
  uint64_t v37 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD30D8;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  __int16 v28 = *(_WORD *)(v17 + 16);
  char v29 = *(unsigned char *)(v17 + 19);
  uint64_t v30 = v38;
  *(unsigned char *)(v38 + 2) = *(unsigned char *)(v17 + 18);
  *(_WORD *)uint64_t v30 = v28;
  *(unsigned char *)(v30 + 3) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 20) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD30A4;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  int v28 = *(_DWORD *)(v17 + 16);
  char v29 = *(unsigned char *)(v17 + 21);
  uint64_t v30 = v38;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v17 + 20);
  *(_DWORD *)uint64_t v30 = v28;
  *(unsigned char *)(v30 + 5) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC9B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 20) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD3080;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  int v28 = *(_DWORD *)(v17 + 16);
  char v29 = *(unsigned char *)(v17 + 21);
  uint64_t v30 = v38;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v17 + 20);
  *(_DWORD *)uint64_t v30 = v28;
  *(unsigned char *)(v30 + 5) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCC9FD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD305C;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  char v29 = *(unsigned char *)(v17 + 25);
  uint64_t v30 = v38;
  *uint64_t v38 = *(void *)(v17 + 16);
  *((unsigned char *)v30 + _Block_object_dispose(&a9, 8) = v28;
  *((unsigned char *)v30 + 9) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCA418(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD3038;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  char v29 = *(unsigned char *)(v17 + 25);
  uint64_t v30 = v38;
  *uint64_t v38 = *(void *)(v17 + 16);
  *((unsigned char *)v30 + _Block_object_dispose(&a9, 8) = v28;
  *((unsigned char *)v30 + 9) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCA85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 20) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD3014;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  int v28 = *(_DWORD *)(v17 + 16);
  char v29 = *(unsigned char *)(v17 + 21);
  uint64_t v30 = v38;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v17 + 20);
  *(_DWORD *)uint64_t v30 = v28;
  *(unsigned char *)(v30 + 5) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCACA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD2FE0;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  char v29 = *(unsigned char *)(v17 + 25);
  uint64_t v30 = v38;
  *uint64_t v38 = *(void *)(v17 + 16);
  *((unsigned char *)v30 + _Block_object_dispose(&a9, 8) = v28;
  *((unsigned char *)v30 + 9) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCB0E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(_WORD *)(v17 + 24) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD2FBC;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 24);
  char v29 = *(unsigned char *)(v17 + 25);
  uint64_t v30 = v38;
  *uint64_t v38 = *(void *)(v17 + 16);
  *((unsigned char *)v30 + _Block_object_dispose(&a9, 8) = v28;
  *((unsigned char *)v30 + 9) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCB528(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(void *)(v17 + 24) = 0;
  *(_WORD *)(v17 + 32) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD2F88;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 32);
  char v29 = *(unsigned char *)(v17 + 33);
  uint64_t v30 = v38;
  *uint64_t v38 = *(_OWORD *)(v17 + 16);
  *((unsigned char *)v30 + 16) = v28;
  *((unsigned char *)v30 + 17) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCB970(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v37 = v17 + 16;
  *(void *)(v17 + 24) = 0;
  *(_WORD *)(v17 + 32) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD2F24;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 32);
  char v29 = *(unsigned char *)(v17 + 33);
  uint64_t v30 = v38;
  *uint64_t v38 = *(_OWORD *)(v17 + 16);
  *((unsigned char *)v30 + 16) = v28;
  *((unsigned char *)v30 + 17) = v29;
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCBDB8(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v37 = a7;
  uint64_t v39 = a1;
  uint64_t v36 = sub_18FD02880();
  uint64_t v35 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v34 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  uint64_t v38 = v17 + 16;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_WORD *)(v17 + 4_Block_object_dispose(&a9, 8) = 256;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)long long v53 = 0;
  uint64_t v41 = a9;
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v44 = (char *)&v53[1];
  uint64_t v45 = &v51;
  uint64_t v46 = a6;
  uint64_t v47 = v37;
  uint64_t v48 = sub_18FCD2EF8;
  uint64_t v49 = v18;
  uint64_t v50 = v53;
  uint64_t v51 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v35;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v52 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v34;
    uint64_t v22 = v36;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v34 - 2) = (char *)sub_18FCD1818;
    *(&v34 - 1) = v40;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v52 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v34 - 2) = (char *)&v52;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v34 - 2) = (char *)sub_18FCD1818;
    *(&v34 - 1) = v40;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v53[1];
  int v27 = v53[0];
  swift_beginAccess();
  char v28 = *(unsigned char *)(v17 + 48);
  char v29 = *(unsigned char *)(v17 + 49);
  long long v30 = *(_OWORD *)(v17 + 32);
  int v31 = v39;
  _OWORD *v39 = *(_OWORD *)(v17 + 16);
  v31[1] = v30;
  *((unsigned char *)v31 + 32) = v28;
  *((unsigned char *)v31 + 33) = v29;
  swift_release();
  if (v27) {
    int v32 = 256;
  }
  else {
    int v32 = 0;
  }
  return v32 | v26;
}

uint64_t sub_18FCCC204(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a7;
  uint64_t v38 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_18FD07D60;
  uint64_t v37 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v52 = 0;
  uint64_t v40 = a9;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = (char *)&v52[1];
  uint64_t v44 = &v50;
  uint64_t v45 = a6;
  uint64_t v46 = v36;
  uint64_t v47 = sub_18FCD2E7C;
  uint64_t v48 = v18;
  uint64_t v49 = v52;
  uint64_t v50 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v34;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v51 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v33;
    uint64_t v22 = v35;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v51 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v51;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v39;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v52[1];
  int v27 = v52[0];
  swift_beginAccess();
  uint64_t v28 = *(void *)(v17 + 16);
  uint64_t v29 = *(void *)(v17 + 24);
  long long v30 = v38;
  *uint64_t v38 = v28;
  v30[1] = v29;
  sub_18FCD2ED0(v28, v29);
  swift_release();
  if (v27) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v26;
}

uint64_t sub_18FCCC63C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v36 = a1;
  uint64_t v33 = sub_18FD02880();
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  int v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 1;
  uint64_t v35 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v50 = 0;
  uint64_t v38 = a9;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = (char *)&v50[1];
  uint64_t v42 = &v48;
  uint64_t v43 = a6;
  uint64_t v44 = v34;
  uint64_t v45 = sub_18FCD2DF8;
  uint64_t v46 = v18;
  uint64_t v47 = v50;
  uint64_t v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v32;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v31;
    uint64_t v22 = v33;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v50[1];
  int v27 = v50[0];
  swift_beginAccess();
  uint64_t v28 = *(void *)(v17 + 16);
  uint64_t *v36 = v28;
  sub_18FCD2E18(v28);
  swift_release();
  if (v27) {
    int v29 = 256;
  }
  else {
    int v29 = 0;
  }
  return v29 | v26;
}

uint64_t sub_18FCCCA74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v36 = a1;
  uint64_t v33 = sub_18FD02880();
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  int v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 1;
  uint64_t v35 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v50 = 0;
  uint64_t v38 = a9;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = (char *)&v50[1];
  uint64_t v42 = &v48;
  uint64_t v43 = a6;
  uint64_t v44 = v34;
  uint64_t v45 = sub_18FCD2D94;
  uint64_t v46 = v18;
  uint64_t v47 = v50;
  uint64_t v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v32;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v31;
    uint64_t v22 = v33;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v50[1];
  int v27 = v50[0];
  swift_beginAccess();
  uint64_t v28 = *(void **)(v17 + 16);
  void *v36 = v28;
  sub_18FCD2CCC(v28);
  swift_release();
  if (v27) {
    int v29 = 256;
  }
  else {
    int v29 = 0;
  }
  return v29 | v26;
}

uint64_t sub_18FCCCEAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v36 = a1;
  uint64_t v33 = sub_18FD02880();
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  int v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 1;
  uint64_t v35 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v50 = 0;
  uint64_t v38 = a9;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = (char *)&v50[1];
  uint64_t v42 = &v48;
  uint64_t v43 = a6;
  uint64_t v44 = v34;
  uint64_t v45 = sub_18FCD2CF0;
  uint64_t v46 = v18;
  uint64_t v47 = v50;
  uint64_t v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v32;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v31;
    uint64_t v22 = v33;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v50[1];
  int v27 = v50[0];
  swift_beginAccess();
  uint64_t v28 = *(void **)(v17 + 16);
  void *v36 = v28;
  sub_18FCD2CCC(v28);
  swift_release();
  if (v27) {
    int v29 = 256;
  }
  else {
    int v29 = 0;
  }
  return v29 | v26;
}

uint64_t sub_18FCCD2E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v36 = a1;
  uint64_t v33 = sub_18FD02880();
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  int v31 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 1;
  uint64_t v35 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a10;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = a2;
  *(void *)(v18 + 56) = v17;
  *(_WORD *)uint64_t v50 = 0;
  uint64_t v38 = a9;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = (char *)&v50[1];
  uint64_t v42 = &v48;
  uint64_t v43 = a6;
  uint64_t v44 = v34;
  uint64_t v45 = sub_18FCD2CAC;
  uint64_t v46 = v18;
  uint64_t v47 = v50;
  uint64_t v48 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v19 = v32;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v49 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v21 = v31;
    uint64_t v22 = v33;
    uint64_t v23 = sub_18FD02680();
    MEMORY[0x1F4188790](v23);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    sub_18FD02790();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
    swift_retain();
    v24(v21, v22);
    swift_release();
  }
  else
  {
    uint64_t v49 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v31 - 2) = (char *)&v49;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v31 - 2) = (char *)sub_18FCD1818;
    *(&v31 - 1) = v37;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v26 = v50[1];
  int v27 = v50[0];
  swift_beginAccess();
  uint64_t v28 = *(void **)(v17 + 16);
  void *v36 = v28;
  sub_18FCD2CCC(v28);
  swift_release();
  if (v27) {
    int v29 = 256;
  }
  else {
    int v29 = 0;
  }
  return v29 | v26;
}

uint64_t sub_18FCCD71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v37 = a7;
  uint64_t v36 = a6;
  uint64_t v40 = a1;
  uint64_t v35 = sub_18FD02880();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_18FD02600();
  uint64_t v17 = swift_allocBox();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 56);
  uint64_t v38 = v19;
  v18(v19, 1, 1, a11);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a11;
  *(unsigned char *)(v20 + 24) = a8;
  *(void *)(v20 + 32) = a10;
  *(void *)(v20 + 40) = a4;
  *(void *)(v20 + 4_Block_object_dispose(&a9, 8) = a5;
  *(void *)(v20 + 56) = a2;
  *(void *)(v20 + 64) = v17;
  *(_WORD *)uint64_t v54 = 0;
  uint64_t v42 = a9;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v45 = (char *)&v54[1];
  uint64_t v46 = &v52;
  uint64_t v47 = v36;
  uint64_t v48 = v37;
  uint64_t v49 = sub_18FCD2C0C;
  uint64_t v50 = v20;
  uint64_t v51 = v54;
  uint64_t v52 = 0;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v21 = v34;
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_18FD07480;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FD02870();
    uint64_t v53 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v23 = v33;
    uint64_t v24 = v35;
    uint64_t v25 = sub_18FD02680();
    MEMORY[0x1F4188790](v25);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v41;
    sub_18FD02790();
    unsigned int v26 = *(void (**)(char *, uint64_t))(v21 + 8);
    swift_retain();
    v26(v23, v24);
    swift_release();
  }
  else
  {
    uint64_t v53 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a3);
      *(&v33 - 2) = (char *)&v53;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(&v33 - 2) = (char *)sub_18FCD1818;
    *(&v33 - 1) = v41;
    AGTypeApplyFields2();
    swift_retain();
    swift_release();
  }
  unsigned int v28 = v54[1];
  int v29 = v54[0];
  uint64_t v30 = v38;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v40, v30);
  swift_release();
  if (v29) {
    int v31 = 256;
  }
  else {
    int v31 = 0;
  }
  return v31 | v28;
}

uint64_t sub_18FCCDBBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
  sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, v19, v17, a2);
  if (v20 == 1) {
    return sub_18FCA7A04((uint64_t)v19, &qword_1E926C3D8);
  }
  sub_18FCD0068((uint64_t)v19, (uint64_t)v21, &qword_1E926B858);
  sub_18FCD0068((uint64_t)v21, (uint64_t)v19, &qword_1E926B858);
  swift_beginAccess();
  return sub_18FCD356C((uint64_t)v19, a9 + 16);
}

uint64_t sub_18FCCDCC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, v11, MEMORY[0x1E4FBB390], a2);
  char v10 = v11[0];
  if (v11[0] != 2)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a9 + 16) = v10;
  }
  return result;
}

uint64_t sub_18FCCDD40(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, v12, a10, a2);
  if ((v12[1] & 1) == 0)
  {
    char v11 = v12[0];
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a9 + 16) = v11;
    *(unsigned char *)(a9 + 17) = 0;
  }
  return result;
}

uint64_t sub_18FCCDDC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v12, a10, a2);
  if ((v13 & 1) == 0)
  {
    __int16 v11 = v12;
    uint64_t result = swift_beginAccess();
    *(_WORD *)(a9 + 16) = v11;
    *(unsigned char *)(a9 + 1_Block_object_dispose(&a9, 8) = 0;
  }
  return result;
}

uint64_t sub_18FCCDE40(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v12, a10, a2);
  if ((v13 & 1) == 0)
  {
    int v11 = v12;
    uint64_t result = swift_beginAccess();
    *(_DWORD *)(a9 + 16) = v11;
    *(unsigned char *)(a9 + 20) = 0;
  }
  return result;
}

uint64_t sub_18FCCDEC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v12, a10, a2);
  if ((v13 & 1) == 0)
  {
    uint64_t v11 = v12;
    uint64_t result = swift_beginAccess();
    *(void *)(a9 + 16) = v11;
    *(unsigned char *)(a9 + 24) = 0;
  }
  return result;
}

uint64_t sub_18FCCDF40(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v11, MEMORY[0x1E4FBC960], a2);
  if ((v12 & 1) == 0)
  {
    uint64_t v10 = v11;
    uint64_t result = swift_beginAccess();
    *(void *)(a9 + 16) = v10;
    *(unsigned char *)(a9 + 24) = 0;
  }
  return result;
}

uint64_t sub_18FCCDFC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v18 = a10(0);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)v22, v18, a2);
  if ((v23 & 1) == 0)
  {
    uint64_t v21 = v22[0];
    uint64_t v20 = v22[1];
    uint64_t result = swift_beginAccess();
    *(void *)(a9 + 16) = v21;
    *(void *)(a9 + 24) = v20;
    *(unsigned char *)(a9 + 32) = 0;
  }
  return result;
}

__n128 sub_18FCCE088(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 *a9)
{
  type metadata accessor for CGRect(0);
  sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v17, a2);
  if ((v25 & 1) == 0)
  {
    unint64_t v20 = v23;
    unint64_t v19 = v24;
    __n128 v21 = v22;
    swift_beginAccess();
    __n128 result = v21;
    a9[1] = v21;
    a9[2].n128_u64[0] = v20;
    a9[2].n128_u64[1] = v19;
    a9[3].n128_u8[0] = 0;
  }
  return result;
}

uint64_t sub_18FCCE154(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C598);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, v20, v17, a2);
  char v19 = v20[0];
  if (v20[0] != 3)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a9 + 16) = v19;
  }
  return result;
}

uint64_t sub_18FCCE210(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v21, v18, a2);
  if ((v22 & 1) == 0)
  {
    __int16 v20 = v21;
    uint64_t result = swift_beginAccess();
    *(_WORD *)(a9 + 16) = v20;
    *(unsigned char *)(a9 + 1_Block_object_dispose(&a9, 8) = 0;
  }
  return result;
}

uint64_t sub_18FCCE2CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v18, a2);
  if ((v24 & 1) == 0)
  {
    __int16 v20 = v22;
    char v21 = v23;
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a9 + 1_Block_object_dispose(&a9, 8) = v21;
    *(_WORD *)(a9 + 16) = v20;
    *(unsigned char *)(a9 + 19) = 0;
  }
  return result;
}

uint64_t sub_18FCCE390(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v18, a2);
  if ((v24 & 1) == 0)
  {
    int v20 = v22;
    char v21 = v23;
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a9 + 20) = v21;
    *(_DWORD *)(a9 + 16) = v20;
    *(unsigned char *)(a9 + 21) = 0;
  }
  return result;
}

uint64_t sub_18FCCE454(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v22, v18, a2);
  if ((v24 & 1) == 0)
  {
    char v20 = v23;
    uint64_t v21 = v22;
    uint64_t result = swift_beginAccess();
    *(void *)(a9 + 16) = v21;
    *(unsigned char *)(a9 + 24) = v20;
    *(unsigned char *)(a9 + 25) = 0;
  }
  return result;
}

uint64_t sub_18FCCE518(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)v23, v18, a2);
  if ((v25 & 1) == 0)
  {
    char v20 = v24;
    uint64_t v22 = v23[0];
    uint64_t v21 = v23[1];
    uint64_t result = swift_beginAccess();
    *(void *)(a9 + 16) = v22;
    *(void *)(a9 + 24) = v21;
    *(unsigned char *)(a9 + 32) = v20;
    *(unsigned char *)(a9 + 33) = 0;
  }
  return result;
}

__n128 sub_18FCCE5DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 *a9)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3E0);
  sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v23, v17, a2);
  if ((v27 & 1) == 0)
  {
    unsigned __int8 v19 = v26;
    unint64_t v21 = v24;
    unint64_t v20 = v25;
    __n128 v22 = v23;
    swift_beginAccess();
    __n128 result = v22;
    a9[1] = v22;
    a9[2].n128_u64[0] = v21;
    a9[2].n128_u64[1] = v20;
    a9[3].n128_u8[0] = v19;
    a9[3].n128_u8[1] = 0;
  }
  return result;
}

uint64_t sub_18FCCE6B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C4A0);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, (char *)&v23, v17, a2);
  uint64_t v19 = v24;
  if (v24 != 1)
  {
    uint64_t v20 = v23;
    swift_beginAccess();
    uint64_t v21 = *(void *)(a9 + 16);
    uint64_t v22 = *(void *)(a9 + 24);
    *(void *)(a9 + 16) = v20;
    *(void *)(a9 + 24) = v19;
    return sub_18FCD00DC(v21, v22);
  }
  return result;
}

uint64_t sub_18FCCE77C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t (*a11)(uint64_t))
{
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t result = sub_18FCCEAAC(a4, a3, a5, a6, a7, a8, a1, v23, v19, a2);
  uint64_t v21 = *(void *)v23;
  if (*(void *)v23 != 1)
  {
    swift_beginAccess();
    uint64_t v22 = *(void *)(a9 + 16);
    *(void *)(a9 + 16) = v21;
    return a11(v22);
  }
  return result;
}

uint64_t sub_18FCCE844(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v28 = a1;
  uint64_t v29 = a6;
  uint64_t v27 = a5;
  uint64_t v32 = sub_18FD02600();
  uint64_t v13 = *(void *)(v32 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v32);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v20 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_projectBox();
  sub_18FCCEAAC(a4, a3, v27, v29, v30, v31, v28, v19, a10, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a10) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v32);
  }
  unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v25(v22, v19, a10);
  v25(v16, v22, a10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, a10);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 40))(v23, v16, v32);
}

uint64_t sub_18FCCEAAC@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  void (*v61)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t *boxed_opaque_existential_0;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  void (*v72)(char *, void, uint64_t, uint64_t);
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  void (*v80)(char *, void, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[4];
  uint64_t v107[5];

  v95 = a6;
  v96 = a7;
  v87 = a5;
  v86 = a4;
  v85 = a3;
  LODWORD(v9_Block_object_dispose(&a9, 8) = a1;
  v97 = a8;
  v91 = sub_18FD02600();
  v90 = *(void *)(v91 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v91);
  v93 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v88 = (char *)&v83 - v14;
  v101 = a9;
  v100 = *(void *)(a9 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v84 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](v15);
  v83 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for FieldAccessor(0);
  uint64_t v19 = MEMORY[0x1F4188790](v102);
  uint64_t v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = sub_18FD02600();
  uint64_t v25 = *(void *)(v24 - 8);
  v103 = v24;
  v104 = v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v92 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v89 = (char *)&v83 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v99 = (char *)&v83 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v83 - v33;
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v37 = (char *)&v83 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v83 - v38;
  char isOptionalType = swift_isOptionalType();
  v105 = v17;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v41(v39, 1, 1, a10);
  v94 = a2;
  sub_18FCCFDB0(a2, (uint64_t)v23);
  if ((v98 & 1) == 0 || (isOptionalType & 1) == 0)
  {
    sub_18FCD2938((uint64_t)v23);
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v34, v95 + v96, a10);
    uint64_t v48 = v103;
    uint64_t v46 = v104;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v104 + 8);
    v49(v39, v103);
    v41(v34, 0, 1, a10);
    uint64_t v50 = v48;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v39, v34, v48);
    uint64_t v45 = v99;
    goto LABEL_12;
  }
  if (qword_1E926BF18 != -1) {
    swift_once();
  }
  uint64_t v42 = __swift_project_value_buffer(v102, (uint64_t)qword_1E92708B8);
  sub_18FCCFDB0(v42, (uint64_t)v21);
  char v43 = sub_18FD01DA0();
  sub_18FCD2938((uint64_t)v21);
  sub_18FCD2938((uint64_t)v23);
  if (v43) {
    goto LABEL_11;
  }
  sub_18FCBB718(a10);
  char isClassType = swift_isClassType();
  uint64_t v45 = v99;
  if ((isClassType & 1) != 0 || AGTypeGetKind() == 7)
  {
    sub_18FCCF5C0(v85, v86, v87, a10, (uint64_t)v37);
    uint64_t v46 = v104;
    v98 = *(void (**)(char *, uint64_t))(v104 + 8);
    v98(v39, v103);
    uint64_t v47 = v105;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v37, 1, a10) == 1)
    {
      v98(v37, v103);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v97, 1, 1, v101);
    }
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    unint64_t v57 = v83;
    unint64_t v58 = v37;
    uint64_t v59 = v56;
    v56(v83, v58, a10);
    v59(v39, v57, a10);
    v41(v39, 0, 1, a10);
    uint64_t v49 = v98;
    uint64_t v50 = v103;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v34, v95 + v96, a10);
    v82 = v103;
    uint64_t v46 = v104;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v104 + 8);
    v49(v39, v103);
    v41(v34, 0, 1, a10);
    uint64_t v50 = v82;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v39, v34, v82);
  }
LABEL_12:
  if (isOptionalType)
  {
    uint64_t v51 = (void *)sub_18FD025F0();
    sub_18FCD28F8();
    if (objc_msgSend(v51, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      v49(v39, v50);
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v97, 1, 1, v101);
    }
    uint64_t v52 = (NSString *)sub_18FD02120();
    Class v53 = NSClassFromString(v52);

    if (v53)
    {
      unsigned __int8 v54 = objc_msgSend(v51, sel_isKindOfClass_, v53);
      swift_unknownObjectRelease();
      uint64_t v46 = v104;
      if (v54)
      {
        v49(v39, v50);
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v97, 1, 1, v101);
      }
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v46 = v104;
    }
  }
  uint64_t v60 = v94 + *(int *)(v102 + 28);
  uint64_t v61 = *(void (**)(uint64_t *__return_ptr, uint64_t *))v60;
  if (*(void *)v60)
  {
    v98 = v49;
    uint64_t v62 = *(void *)(v60 + 8);
    uint64_t v63 = v46 + 16;
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v64(v45, v39, v50);
    int64_t v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48);
    if (v65(v45, 1, a10) == 1)
    {
      v98(v45, v50);
      uint64_t v46 = v104;
    }
    else
    {
      v102 = v62;
      swift_retain();
      v99 = (char *)(v63 - 8);
      v98(v45, v50);
      uint64_t v66 = v89;
      v64(v89, v39, v50);
      uint64_t result = v65(v66, 1, a10);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      v106[3] = a10;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v106);
      (*(void (**)(uint64_t *, char *, uint64_t))(v105 + 32))(boxed_opaque_existential_0, v66, a10);
      v61(v107, v106);
      sub_18FCA5CBC((uint64_t)v61);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
      int64_t v68 = v88;
      uint64_t v69 = v101;
      unint64_t v70 = swift_dynamicCast();
      int64_t v71 = v100;
      uint64_t v72 = *(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56);
      if (v70)
      {
        v72(v68, 0, 1, v69);
        v98(v39, v103);
        v73 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
        uint64_t v74 = v84;
        v73(v84, v68, v69);
        uint64_t v75 = v97;
        v73(v97, v74, v69);
        return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v72)(v75, 0, 1, v69);
      }
      v72(v68, 1, 1, v69);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v91);
      uint64_t v50 = v103;
      uint64_t v46 = v104;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v92, v39, v50);
  unint64_t v76 = v93;
  v77 = v101;
  unint64_t v78 = swift_dynamicCast();
  unint64_t v79 = v100;
  uint64_t v80 = *(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56);
  if (v78)
  {
    v80(v76, 0, 1, v77);
    uint64_t v81 = v97;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v97, v76, v77);
    return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v80)(v81, 0, 1, v77);
  }
  else
  {
    v80(v76, 1, 1, v77);
    v80(v97, 1, 1, v77);
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v76, v91);
  }
}

uint64_t sub_18FCCF5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  *(void *)&v26[0] = a1;
  swift_getObjectType();
  uint64_t v8 = swift_reflectionMirror_normalizedType();
  if (swift_isClassType()) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (!v9) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, 1, 1);
  }
  while (1)
  {
    *(void *)&v26[0] = a1;
    uint64_t v10 = swift_reflectionMirror_count();
    if (v10 < 0) {
      goto LABEL_28;
    }
    uint64_t v11 = v10;
    if (v10) {
      break;
    }
LABEL_20:
    uint64_t v19 = MEMORY[0x192FC1C00](v9);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v9 = swift_isClassType() ? v20 : 0;
      if (v9) {
        continue;
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, 1, 1);
  }
  uint64_t v12 = 0;
  while (1)
  {
    if (v11 == v12)
    {
      __break(1u);
LABEL_28:
      __break(1u);
    }
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    *(void *)&long long v25 = a1;
    swift_reflectionMirror_subscript();
    uint64_t v14 = v28;
    if (v28)
    {
      uint64_t v15 = MEMORY[0x192FC1630](v28);
      uint64_t v17 = v16;
      uint64_t v18 = v27;
      if (!v27) {
        goto LABEL_14;
      }
LABEL_13:
      v18(v14);
      goto LABEL_14;
    }
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = v27;
    if (v27) {
      goto LABEL_13;
    }
LABEL_14:
    if (v17) {
      break;
    }
LABEL_9:
    ++v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (v11 == v12) {
      goto LABEL_20;
    }
  }
  if (v15 != a2 || v17 != a3)
  {
    char v13 = sub_18FD02C00();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_26;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  sub_18FCD00F0(v26, &v25);
  int v22 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(a4 - 8) + 56))(a5, v22 ^ 1u, 1);
}

uint64_t sub_18FCCF82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v40 = a7;
  uint64_t v41 = a8;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v43 = a4;
  uint64_t v44 = a1;
  uint64_t v49 = *MEMORY[0x1E4F143B8];
  uint64_t v45 = MEMORY[0x1E4FBB390];
  uint64_t v46 = MEMORY[0x1E4FBB390];
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C478);
  uint64_t v13 = sub_18FD02600();
  uint64_t v48 = v13;
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v15 = (unsigned __int8 *)&v37 - v14;
  uint64_t v16 = sub_18FD02600();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v37 - v19;
  uint64_t v21 = *(void *)(a12 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCA3724(a3, (uint64_t)&v45);
  int v24 = swift_dynamicCast();
  long long v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (v24)
  {
    v25(v20, 0, 1, a12);
    uint64_t v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, a12);
    MEMORY[0x1F4188790](v26);
    *(&v37 - _Block_object_dispose(&a9, 8) = a11;
    *(&v37 - 7) = a12;
    uint64_t v27 = v39;
    *(&v37 - 6) = v38;
    *(&v37 - 5) = v27;
    uint64_t v28 = v41;
    *(&v37 - 4) = v40;
    *(&v37 - 3) = v28;
    *(&v37 - 2) = a9;
    *(&v37 - 1) = a10;
    uint64_t v45 = MEMORY[0x1E4FBB390];
    uint64_t v46 = MEMORY[0x1E4FBB390];
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C480);
    uint64_t v48 = v13;
    uint64_t v29 = swift_getTupleTypeMetadata();
    sub_18FCBC6A4((uint64_t)v23, (uint64_t)sub_18FCD2B8C, (uint64_t)(&v37 - 10), a12, MEMORY[0x1E4FBC248], v29, MEMORY[0x1E4FBC278], v30);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a12);
    unsigned int v31 = *v15;
    int v32 = v15[1];
    uint64_t v33 = &v15[*(int *)(TupleTypeMetadata + 80)];
    uint64_t v34 = sub_18FD02600();
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 32))(v44, v33, v34);
    if (v32) {
      int v35 = 256;
    }
    else {
      int v35 = 0;
    }
  }
  else
  {
    v25(v20, 1, 1, a12);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 56))(v44, 1, 1, a11);
    unsigned int v31 = 0;
    int v35 = 0;
  }
  return v35 | v31;
}

uint64_t sub_18FCCFC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C478);
  sub_18FD02600();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t result = sub_18FCCD71C(a9 + *(int *)(TupleTypeMetadata + 80), a1, a10, a4, a5, a6, a7, 0, a2, a3, a8);
  *(unsigned char *)a9 = result & 1;
  *(unsigned char *)(a9 + 1) = BYTE1(result) & 1;
  *(void *)(a9 + _Block_object_dispose(&a9, 8) = v20;
  return result;
}

uint64_t sub_18FCCFD44(uint64_t a1)
{
  return sub_18FCCFE7C(a1, qword_1E92708A0, (uint64_t)sub_18FCCFE14, (uint64_t)nullsub_1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_18FCCFDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FieldAccessor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCCFE14(uint64_t a1)
{
  return a1;
}

uint64_t sub_18FCCFE48(uint64_t a1)
{
  return sub_18FCCFE7C(a1, qword_1E92708B8, (uint64_t)sub_18FCCFEFC, (uint64_t)sub_18FCCFF24);
}

uint64_t sub_18FCCFE7C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (int *)type metadata accessor for FieldAccessor(0);
  __swift_allocate_value_buffer((uint64_t)v7, a2);
  uint64_t v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)a2);
  uint64_t result = sub_18FD01DC0();
  uint64_t v10 = (void *)(v8 + v7[5]);
  *uint64_t v10 = a3;
  v10[1] = 0;
  uint64_t v11 = (void *)(v8 + v7[6]);
  void *v11 = a4;
  v11[1] = 0;
  uint64_t v12 = (void *)(v8 + v7[7]);
  void *v12 = 0;
  v12[1] = 0;
  return result;
}

uint64_t sub_18FCCFEFC(uint64_t a1, uint64_t a2)
{
  return sub_18FCD0128(a1, a2, &qword_1E926BF30, &qword_1E926C3C0);
}

uint64_t sub_18FCCFF24(uint64_t a1)
{
  if ((swift_isOptionalType() & 1) == 0) {
    return 0;
  }
  uint64_t isOptionalType = swift_isOptionalType();
  if (isOptionalType)
  {
    MEMORY[0x1F4188790](isOptionalType);
    AGTypeApplyFields2();
  }
  return a1;
}

uint64_t sub_18FCCFFC4()
{
  uint64_t v0 = (int *)type metadata accessor for FieldAccessor(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_1E92708D0);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1E92708D0);
  uint64_t result = sub_18FD01DC0();
  uint64_t v3 = (uint64_t (**)(uint64_t, uint64_t))(v1 + v0[5]);
  *uint64_t v3 = sub_18FCD0100;
  v3[1] = 0;
  uint64_t v4 = (uint64_t (**)(uint64_t))(v1 + v0[6]);
  *uint64_t v4 = sub_18FCD01A4;
  v4[1] = 0;
  uint64_t v5 = (void *)(v1 + v0[7]);
  void *v5 = sub_18FCD1060;
  v5[1] = 0;
  return result;
}

uint64_t sub_18FCD0068(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_18FCD00CC()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_18FCD00DC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_OWORD *sub_18FCD00F0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_18FCD0100(uint64_t a1, uint64_t a2)
{
  return sub_18FCD0128(a1, a2, &qword_1E926BF28, &qword_1E926C3B0);
}

uint64_t sub_18FCD0128(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v6 = *a4;
  swift_bridgeObjectRetain();
  sub_18FD02220();
  return v6;
}

uint64_t sub_18FCD01A4(uint64_t a1)
{
  sub_18FD02E60();
  uint64_t v2 = sub_18FCD01F8(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_18FCD01F8(uint64_t a1)
{
  uint64_t v2 = sub_18FD02880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  if (sub_18FCD0A98())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
    uint64_t v7 = type metadata accessor for FieldAccessor(0);
    unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
    uint64_t v9 = swift_allocObject();
    long long v28 = xmmword_18FD07480;
    *(_OWORD *)(v9 + 16) = xmmword_18FD07480;
    uint64_t v10 = v9 + v8;
    if (qword_1E926BF10 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1E92708A0);
    uint64_t v12 = sub_18FCCFDB0(v11, v10);
    __int16 v30 = 0;
    v31[0] = 0;
    MEMORY[0x1F4188790](v12);
    uint64_t v13 = &v27[-12];
    v27[-10] = v9;
    v27[-9] = 0x656761726F7473;
    v27[-8] = 0xE700000000000000;
    v27[-7] = (char *)&v30 + 1;
    v27[-6] = v31;
    v27[-5] = sub_18FCB4F30;
    v27[-4] = 0;
    v27[-3] = sub_18FCD3688;
    v27[-2] = v6;
    v27[-1] = &v30;
    if (AGTypeGetKind() == 5)
    {
LABEL_10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
      uint64_t v20 = swift_allocObject();
      v27[1] = v27;
      uint64_t v21 = v20;
      *(_OWORD *)(v20 + 16) = v28;
      sub_18FD02870();
      uint64_t v29 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
      sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
      uint64_t v22 = sub_18FD02680();
      MEMORY[0x1F4188790](v22);
      v27[-2] = sub_18FCD1818;
      v27[-1] = v13;
      sub_18FD02790();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
      swift_retain();
      v23(v5, v2);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_23;
    }
    uint64_t v29 = a1;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a1);
      v27[-2] = &v29;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if (isClassType)
    {
LABEL_22:
      MEMORY[0x1F4188790](isClassType);
      v27[-2] = sub_18FCD1818;
      v27[-1] = v13;
      AGTypeApplyFields2();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_21:
    uint64_t isClassType = AGTypeGetKind();
    goto LABEL_22;
  }
  if (sub_18FCD0A98())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
    uint64_t v14 = type metadata accessor for FieldAccessor(0);
    unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
    uint64_t v16 = swift_allocObject();
    long long v28 = xmmword_18FD07480;
    *(_OWORD *)(v16 + 16) = xmmword_18FD07480;
    uint64_t v17 = v16 + v15;
    if (qword_1E926BF10 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92708A0);
    uint64_t v19 = sub_18FCCFDB0(v18, v17);
    __int16 v30 = 0;
    v31[0] = 0;
    MEMORY[0x1F4188790](v19);
    uint64_t v13 = &v27[-12];
    v27[-10] = v16;
    v27[-9] = 0x65756C61765FLL;
    v27[-8] = 0xE600000000000000;
    v27[-7] = (char *)&v30 + 1;
    v27[-6] = v31;
    v27[-5] = sub_18FCB4F30;
    v27[-4] = 0;
    v27[-3] = sub_18FCD3648;
    v27[-2] = v6;
    v27[-1] = &v30;
    if (AGTypeGetKind() == 5) {
      goto LABEL_10;
    }
    uint64_t v29 = a1;
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a1);
      v27[-2] = &v29;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if (isClassType) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if ((sub_18FCD0A98() & 1) == 0 && (sub_18FCD0A98() & 1) == 0) {
    sub_18FCD0A98();
  }
LABEL_23:
  swift_beginAccess();
  uint64_t v25 = *(void *)(v6 + 16);
  swift_release();
  return v25;
}

uint64_t sub_18FCD0A98()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_18FD02240();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_18FD02240();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_18FD02C00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_18FD02240();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_18FD02240();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18FCD0C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_18FD02880();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D0);
  uint64_t v10 = type metadata accessor for FieldAccessor(0);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = swift_allocObject();
  long long v21 = xmmword_18FD07480;
  *(_OWORD *)(v12 + 16) = xmmword_18FD07480;
  uint64_t v13 = v12 + v11;
  if (qword_1E926BF10 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92708A0);
  uint64_t v15 = sub_18FCCFDB0(v14, v13);
  __int16 v24 = 0;
  uint64_t v23 = 0;
  MEMORY[0x1F4188790](v15);
  uint64_t v16 = &v21 - 6;
  *((void *)&v21 - 10) = v12;
  *((void *)&v21 - 9) = 0x65756C6176;
  *((void *)&v21 - _Block_object_dispose(&a9, 8) = 0xE500000000000000;
  *((void *)&v21 - 7) = (char *)&v24 + 1;
  *((void *)&v21 - 6) = &v23;
  *((void *)&v21 - 5) = sub_18FCB4F30;
  *((void *)&v21 - 4) = 0;
  *((void *)&v21 - 3) = sub_18FCD3864;
  *((void *)&v21 - 2) = a4;
  *((void *)&v21 - 1) = &v24;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = v21;
    swift_retain();
    sub_18FD02870();
    uint64_t v22 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v18 = sub_18FD02680();
    MEMORY[0x1F4188790](v18);
    *((void *)&v21 - 2) = sub_18FCD1818;
    *((void *)&v21 - 1) = v16;
    sub_18FD02790();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v22 = a2;
    swift_retain();
    if (swift_isOptionalType())
    {
      MEMORY[0x1F4188790](a2);
      *((void *)&v21 - 2) = &v22;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *((void *)&v21 - 2) = sub_18FCD1818;
    *((void *)&v21 - 1) = v16;
    AGTypeApplyFields2();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

_OWORD *sub_18FCD1060@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_18FD02E60();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_getDynamicType();
  sub_18FCD1130((uint64_t)a1, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  if (v6) {
    return sub_18FCD00F0(&v5, a2);
  }
  *a2 = 0u;
  a2[1] = 0u;
  return (_OWORD *)sub_18FCA7A04((uint64_t)&v5, &qword_1E926B858);
}

double sub_18FCD1130@<D0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  if (sub_18FCD0A98())
  {
    sub_18FCB4A44(a1, 0x656761726F7473, 0xE700000000000000, &v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
    if (swift_dynamicCast())
    {
      char v4 = sub_18FCC2058(v7);
      if (v4)
      {
        long long v5 = v4;
        *(void *)(a2 + 24) = swift_getObjectType();
        swift_unknownObjectRelease();
        *(void *)a2 = v5;
        return result;
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_13;
  }
  if ((sub_18FCD0A98() & 1) == 0)
  {
    if ((sub_18FCD0A98() & 1) == 0 && (sub_18FCD0A98() & 1) == 0) {
      sub_18FCD0A98();
    }
LABEL_13:
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_18FCB4A44(a1, 0x65756C61765FLL, 0xE600000000000000, (_OWORD *)a2);
  return result;
}

uint64_t sub_18FCD130C()
{
  return sub_18FD01DA0() & 1;
}

uint64_t sub_18FCD1328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8, uint64_t *a9, uint64_t (*a10)(uint64_t, uint64_t), uint64_t a11, void (*a12)(uint64_t, uint64_t, char *), uint64_t a13, unsigned char *a14)
{
  uint64_t v46 = a6;
  uint64_t v47 = a7;
  uint64_t v45 = a4;
  uint64_t v19 = type metadata accessor for FieldAccessor(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a5 + 16);
  if (!v23) {
    return 1;
  }
  uint64_t v36 = a13;
  uint64_t v37 = a3;
  uint64_t v38 = a12;
  uint64_t v39 = a14;
  uint64_t v42 = a11;
  uint64_t v43 = a8;
  uint64_t v40 = a9;
  uint64_t v41 = a10;
  uint64_t v24 = a5 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v25 = *(void *)(v20 + 72);
  uint64_t v44 = a5;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_18FCCFDB0(v24, (uint64_t)v22);
    long long v28 = *(uint64_t (**)(uint64_t, uint64_t))&v22[*(int *)(v19 + 20)];
    swift_retain();
    uint64_t v29 = v28(v46, v47);
    uint64_t v31 = v30;
    swift_release();
    if (v29 == a1 && v31 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v33 = sub_18FD02C00();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0) {
        goto LABEL_5;
      }
    }
    uint64_t v26 = *(uint64_t (**)(uint64_t))&v22[*(int *)(v19 + 24)];
    swift_retain();
    uint64_t v27 = v26(v45);
    swift_release();
    if (v27) {
      break;
    }
LABEL_5:
    sub_18FCD2938((uint64_t)v22);
    v24 += v25;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  unsigned char *v43 = 1;
  *uint64_t v40 = v27;
  swift_bridgeObjectRelease();
  uint64_t Kind = AGTypeGetKind();
  if (v41(v27, Kind))
  {
    if (v38) {
      v38(v37, v45, v22);
    }
    sub_18FCD2938((uint64_t)v22);
    uint64_t result = 0;
    unsigned char *v39 = 1;
  }
  else
  {
    sub_18FCD2938((uint64_t)v22);
    return 0;
  }
  return result;
}

uint64_t sub_18FCD15A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_18FD02100();
  if (v7)
  {
    if (v6 == 1701670771 && v7 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t result = 0;
      *a4 = a3;
      return result;
    }
    char v8 = sub_18FD02C00();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
  }
  return 1;
}

uint64_t sub_18FCD163C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD15A4(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_18FCD1644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCBD37C(a1, a2, a3, a4, *(char ***)(v4 + 16));
}

uint64_t sub_18FCD164C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = sub_18FD02100();
  if (!v9) {
    return 1;
  }
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  uint64_t v17 = v8;
  unint64_t v18 = v9;
  swift_bridgeObjectRetain();
  char v12 = sub_18FD02250();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    char v16 = a5(v10, v11, a2, a3);
    swift_bridgeObjectRelease();
    return v16 & 1;
  }
  uint64_t v14 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    uint64_t result = sub_18FCD2994(v10, v11);
    if (v15)
    {
      sub_18FCD29DC(1);
      swift_bridgeObjectRelease();
      uint64_t v10 = v17;
      unint64_t v11 = v18;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18FCD1754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = sub_18FD02100();
  if (!v6) {
    return 1;
  }
  char v7 = a4(v5);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_18FCD17C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD1754(a1, a2, a3, *(uint64_t (**)(uint64_t))(v3 + 16));
}

uint64_t sub_18FCD17CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCD1810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCD164C(a1, a2, a3, a4, *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 16));
}

uint64_t sub_18FCD181C(uint64_t a1, uint64_t a2)
{
  return sub_18FCC19B8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24)) & 1;
}

uint64_t sub_18FCD183C()
{
  uint64_t v0 = sub_18FD02880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Prefix(0);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  unint64_t v11 = &v13;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v12 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v6 = sub_18FD02680();
    MEMORY[0x1F4188790](v6);
    *(void *)&v10[-16] = sub_18FCD36CC;
    *(void *)&v10[-8] = v10;
    sub_18FD02790();
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    uint64_t v12 = v4;
    uint64_t isOptionalType = swift_isOptionalType();
    if (isOptionalType)
    {
      MEMORY[0x1F4188790](isOptionalType);
      *(void *)&v10[-16] = &v12;
      AGTypeApplyFields2();
    }
    uint64_t isClassType = swift_isClassType();
    if ((isClassType & 1) == 0) {
      uint64_t isClassType = AGTypeGetKind();
    }
    MEMORY[0x1F4188790](isClassType);
    *(void *)&v10[-16] = sub_18FCD36CC;
    *(void *)&v10[-8] = v10;
    uint64_t result = AGTypeApplyFields2();
  }
  if (v14)
  {
    qword_1E926C3B0 = v13;
    *(void *)algn_1E926C3B8 = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18FCD1B28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCF15AXCoreUtilities27_axPropertyWrapperFieldNameFSSSSL_6Prefix__publishedValue;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C438);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_18FCD1BCC()
{
  return type metadata accessor for Prefix(0);
}

uint64_t type metadata accessor for Prefix(uint64_t a1)
{
  return sub_18FCA5AFC(a1, (uint64_t *)&unk_1E926C410);
}

void sub_18FCD1BF4()
{
  sub_18FCD1C84();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_18FCD1C84()
{
  if (!qword_1E926C420)
  {
    unint64_t v0 = sub_18FD02050();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E926C420);
    }
  }
}

uint64_t sub_18FCD1CE0()
{
  uint64_t v0 = sub_18FD02880();
  uint64_t v1 = *(void *)(v0 - 8);
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s15AXCoreUtilities6PrefixCMa_0();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v9 = &v11;
  if (AGTypeGetKind() == 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18FD07480;
    sub_18FD02870();
    uint64_t v10 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3F8);
    sub_18FCD17CC(&qword_1E926C400, &qword_1E926C3F8);
    uint64_t v6 = sub_18FD02680();
    MEMORY[0x1F4188790](v6);
    *(void *)&v8[-16] = sub_18FCD3714;
    *(void *)&v8[-8] = v8;
    sub_18FD02790();
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    uint64_t v10 = v4;
    if (swift_isOptionalType())
    {
      ((void (*)(void))MEMORY[0x1F4188790])();
      *(void *)&v8[-16] = &v10;
      AGTypeApplyFields2();
    }
    if ((swift_isClassType() & 1) == 0) {
      AGTypeGetKind();
    }
    ((void (*)(void))MEMORY[0x1F4188790])();
    *(void *)&v8[-16] = sub_18FCD3714;
    *(void *)&v8[-8] = v8;
    uint64_t result = AGTypeApplyFields2();
  }
  if (v12)
  {
    qword_1E926C3C0 = v11;
    *(void *)algn_1E926C3C8 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18FCD1FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  sub_18FCA61E8();
  if ((sub_18FD02640() & 1) == 0 || __swift_instantiateConcreteTypeFromMangledName(a8) != a4) {
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_18FD021F0();
  uint64_t v16 = sub_18FCD2A64(v14, a1, a2, v15);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x192FC1610](v16, v18, v20, v22);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *a5 = v23;
  a5[1] = v25;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18FCD20D8()
{
  return swift_deallocClassInstance();
}

uint64_t _s15AXCoreUtilities6PrefixCMa_0()
{
  return self;
}

uint64_t *sub_18FCD210C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_18FD01DD0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = *v18;
    swift_retain();
    swift_retain();
    if (v19)
    {
      uint64_t v20 = v18[1];
      *uint64_t v17 = v19;
      v17[1] = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

uint64_t sub_18FCD2230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 28)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_18FCD22DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  swift_retain();
  swift_retain();
  if (v18)
  {
    uint64_t v19 = v17[1];
    *uint64_t v16 = v18;
    v16[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t sub_18FCD23B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a1 + v15);
  uint64_t v19 = *(void *)(a2 + v15);
  if (!v18)
  {
    if (v19)
    {
      uint64_t v21 = *(void *)(v17 + 8);
      *uint64_t v16 = v19;
      v16[1] = v21;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    return a1;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v20 = *(void *)(v17 + 8);
  *uint64_t v16 = v19;
  v16[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_18FCD24C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = v10[1];
    *uint64_t v9 = v11;
    v9[1] = v12;
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  return a1;
}

uint64_t sub_18FCD2570(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *(void *)(a1 + v7);
  uint64_t v11 = *v9;
  if (!v10)
  {
    if (v11)
    {
      uint64_t v13 = v9[1];
      void *v8 = v11;
      v8[1] = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v12 = v9[1];
  void *v8 = v11;
  v8[1] = v12;
  swift_release();
  return a1;
}

uint64_t sub_18FCD2660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_18FCD2674);
}

uint64_t sub_18FCD2674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD01DD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_18FCD2734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_18FCD2748);
}

uint64_t sub_18FCD2748(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_18FD01DD0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_18FCD2804()
{
  uint64_t result = sub_18FD01DD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_18FCD28A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t **)(v3 + 24);
  *uint64_t v4 = sub_18FCC25A0(a2, a3, *(void *)(v3 + 16), a2);
  return swift_unknownObjectRelease();
}

unint64_t sub_18FCD28F8()
{
  unint64_t result = qword_1E926B828;
  if (!qword_1E926B828)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E926B828);
  }
  return result;
}

uint64_t sub_18FCD2938(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FieldAccessor(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FCD2994(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_18FD02270();
  }
  else {
    return 0;
  }
}

uint64_t sub_18FCD29DC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t result = sub_18FD02200();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        unint64_t result = 15;
        uint64_t v1 = v2;
        return MEMORY[0x1F41838E8](result, v1);
      }
    }
    __break(1u);
    return MEMORY[0x1F41838E8](result, v1);
  }
  return result;
}

uint64_t sub_18FCD2A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = sub_18FD02200();
    if (v7) {
      a2 = 15;
    }
    else {
      a2 = v6;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
}

uint64_t sub_18FCD2B00@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_18FCBC0EC(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(uint64_t **)(v2 + 40), *(void *)(v2 + 16), a2);
}

unint64_t sub_18FCD2B24()
{
  unint64_t result = qword_1E926C458;
  if (!qword_1E926C458)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926B890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C458);
  }
  return result;
}

uint64_t sub_18FCD2B74()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_18FCD2B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCBC5C8(a1, a2, a3, *(void *)(v3 + 24));
}

uint64_t sub_18FCD2B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18FCCFC50(a1, v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[2], a2, v2[3]);
}

uint64_t sub_18FCD2BC4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_18FCD2C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCCE844(a1, a2, a3, *(unsigned __int8 *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 16));
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_18FCD2CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2D10(a1, a2, a3, &qword_1E926C470, (uint64_t (*)(uint64_t))sub_18FCD2CDC);
}

id sub_18FCD2CCC(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_18FCD2CDC(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_18FCD2CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2D10(a1, a2, a3, &qword_1E926C488, (uint64_t (*)(uint64_t))sub_18FCD384C);
}

uint64_t sub_18FCD2D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t))
{
  return sub_18FCCE77C(a1, a2, a3, *(unsigned __int8 *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), a4, a5);
}

uint64_t sub_18FCD2D50()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1 != (void *)1) {

  }
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD2D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2D10(a1, a2, a3, &qword_1E926C490, (uint64_t (*)(uint64_t))sub_18FCD384C);
}

uint64_t sub_18FCD2DB4()
{
  if (*(void *)(v0 + 16) != 1) {
    swift_unknownObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD2DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2D10(a1, a2, a3, &qword_1E926C498, sub_18FCD2E28);
}

uint64_t sub_18FCD2E18(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_18FCD2E28(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_18FCD2E38()
{
  if (*(void *)(v0 + 24) != 1) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_18FCD2E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCE6B4);
}

uint64_t sub_18FCD2E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a4(a1, a2, a3, *(unsigned __int8 *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56));
}

uint64_t sub_18FCD2ED0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_18FCD2EE4()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_18FCD2EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCE5DC);
}

uint64_t sub_18FCD2F10()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_18FCD2F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C4A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE518);
}

uint64_t sub_18FCD2F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))
{
  return a5(a1, a2, a3, *(unsigned __int8 *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), a4);
}

uint64_t sub_18FCD2F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C4B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE518);
}

uint64_t sub_18FCD2FA8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_18FCD2FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C4C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE454);
}

uint64_t sub_18FCD2FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C4D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE454);
}

uint64_t sub_18FCD3000()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD3014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C4E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE390);
}

uint64_t sub_18FCD3038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C4F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE454);
}

uint64_t sub_18FCD305C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C508, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE454);
}

uint64_t sub_18FCD3080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C518, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE390);
}

uint64_t sub_18FCD30A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE390);
}

uint64_t sub_18FCD30C4()
{
  return MEMORY[0x1F4186498](v0, 20, 7);
}

uint64_t sub_18FCD30D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C538, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE2CC);
}

uint64_t sub_18FCD30FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C548, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE2CC);
}

uint64_t sub_18FCD311C()
{
  return MEMORY[0x1F4186498](v0, 19, 7);
}

uint64_t sub_18FCD3130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C558, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE210);
}

uint64_t sub_18FCD3154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C568, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE210);
}

uint64_t sub_18FCD3178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C578, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE454);
}

uint64_t sub_18FCD319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)&qword_1E926C588, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCE454);
}

uint64_t sub_18FCD31BC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_18FCD31D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCE154);
}

uint64_t sub_18FCD31EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCE088);
}

uint64_t sub_18FCD3208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDFC4);
}

uint64_t sub_18FCD3238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, (uint64_t)type metadata accessor for CGPoint, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDFC4);
}

uint64_t sub_18FCD3268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCDF40);
}

uint64_t sub_18FCD3284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBB3D0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDEC0);
}

uint64_t sub_18FCD32A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDE40);
}

uint64_t sub_18FCD32CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC538], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDEC0);
}

uint64_t sub_18FCD32F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDEC0);
}

uint64_t sub_18FCD3314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDE40);
}

uint64_t sub_18FCD3338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC150], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDE40);
}

uint64_t sub_18FCD335C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC450], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDDC0);
}

uint64_t sub_18FCD3380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC0F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDDC0);
}

uint64_t sub_18FCD33A0()
{
  return MEMORY[0x1F4186498](v0, 18, 7);
}

uint64_t sub_18FCD33B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC358], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDD40);
}

uint64_t sub_18FCD33D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBC098], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDD40);
}

uint64_t sub_18FCD33FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBB808], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDEC0);
}

uint64_t sub_18FCD3420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2F44(a1, a2, a3, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, uint64_t))sub_18FCCDEC0);
}

uint64_t sub_18FCD3444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCDCC0);
}

uint64_t sub_18FCD345C()
{
  if (*(void *)(v0 + 40) >= 2uLL) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroy_92Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_18FCD34EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD2E94(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))sub_18FCCDBBC);
}

uint64_t sub_18FCD3504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCD356C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_18FCD3638()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD3648(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t sub_18FCD3688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD0C00(a1, a2, a3, v3);
}

uint64_t sub_18FCD3690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCD1328(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned char **)(v4 + 40), *(uint64_t **)(v4 + 48), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 56), *(void *)(v4 + 64), *(void (**)(uint64_t, uint64_t, char *))(v4 + 72), *(void *)(v4 + 80), *(unsigned char **)(v4 + 88)) & 1;
}

uint64_t sub_18FCD36CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCD1FCC(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), 0x656873696C627570, 0xEE0065756C615664, &qword_1E926C438) & 1;
}

uint64_t sub_18FCD3714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCD1FCC(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), 0x756C6156797A616CLL, 0xE900000000000065, &qword_1E926C5A8) & 1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FieldAccessor.TypeValidation(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FieldAccessor.TypeValidation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + _Block_object_dispose(&a9, 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + _Block_object_dispose(&a9, 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_18FCD3804(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_18FCD381C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FieldAccessor.TypeValidation()
{
  return &type metadata for FieldAccessor.TypeValidation;
}

uint64_t sub_18FCD386C(uint64_t a1)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v11[-v4];
  type metadata accessor for AXMigratingEncoder();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  v6[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  type metadata accessor for AXDataHolder();
  memset(v12, 0, sizeof(v12));
  uint64_t v13 = 0;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 32) = 0u;
  *(void *)(v8 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v12, v8 + 16);
  uint64_t v9 = swift_endAccess();
  void v6[4] = v8;
  id v6[2] = v7;
  sub_18FCD74D8(v9, (uint64_t)v5);
  sub_18FCEFF70(v2, (uint64_t)v12);
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  swift_release();
  sub_18FCA3780((uint64_t)v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  sub_18FCD705C();
  sub_18FD02700();
  return sub_18FCA7A04((uint64_t)v12, &qword_1E926B830);
}

uint64_t sub_18FCD3AAC(uint64_t a1)
{
  uint64_t v15 = a1;
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v14 = sub_18FD02600();
  uint64_t v3 = MEMORY[0x1F4188790](v14);
  uint64_t v5 = (char *)&v14 - v4;
  uint64_t v6 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v14 - v7;
  type metadata accessor for AXMigratingDecoder();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  v9[2] = MEMORY[0x1E4FBC860];
  v9[3] = sub_18FCEF7B4(v10);
  type metadata accessor for AXDataHolder();
  memset(v16, 0, sizeof(v16));
  uint64_t v17 = 0;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 32) = 0u;
  *(void *)(v11 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v11 + 16) = 0u;
  swift_beginAccess();
  uint64_t v12 = v15;
  sub_18FCA3BCC((uint64_t)v16, v11 + 16);
  swift_endAccess();
  v9[4] = v11;
  sub_18FCE9AF8(v2, v12, v2);
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v5, v2);
  sub_18FCD8F28((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v2);
  return sub_18FCA36B8(v12);
}

void *sub_18FCD3DD4()
{
  uint64_t v1 = (void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 24))(&v22, v2, v3);
  unint64_t v5 = v22;
  unint64_t v6 = v23;
  if (v25)
  {
    if (v25 != 1) {
      return result;
    }
    unint64_t v7 = v24;
    if (!v24)
    {
      swift_bridgeObjectRetain();
      sub_18FCDC810(1, v5, v6, v8);
      swift_bridgeObjectRelease();
      sub_18FD02610();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_18FCDC8AC(1uLL, v5, v6, v9);
      swift_bridgeObjectRelease();
      sub_18FCD6C14();
      swift_bridgeObjectRetain();
      sub_18FD02210();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FD02220();
      swift_bridgeObjectRelease();
      uint64_t result = (void *)sub_18FD02220();
      unint64_t v7 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0;
  }
  uint64_t v10 = sub_18FCD40E0((uint64_t)result);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  unint64_t v16 = v15;
  type metadata accessor for AXSetting();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v18 = (const char *)sub_18FD01FC0();
  uint64_t v22 = v14;
  unint64_t v23 = v16;
  swift_bridgeObjectRetain();
  sub_18FD02220();
  uint64_t v19 = sub_18FD021A0();
  swift_bridgeObjectRelease();
  class_replaceMethod(ObjCClassFromMetadata, v18, v10, (const char *)(v19 + 32));
  swift_release();
  if (!v7) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v20 = (const char *)sub_18FD01FC0();
  uint64_t v22 = 3817590;
  unint64_t v23 = 0xE300000000000000;
  sub_18FD02220();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_18FD021A0();
  swift_bridgeObjectRelease();
  class_replaceMethod(ObjCClassFromMetadata, v20, v12, (const char *)(v21 + 32));
  return (void *)swift_release();
}

IMP sub_18FCD40E0(uint64_t a1)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  unint64_t v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  unint64_t v9 = (char *)&v90 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v90 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v90 - v13;
  unint64_t v16 = (char *)v1 + *(void *)(v15 + 104);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v17((char *)&v90 - v13, v16, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5B8);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5C0);
    if (swift_dynamicCast())
    {
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v1;
      v95 = sub_18FCD6F3C;
      uint64_t v96 = v27;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD570C;
      v94 = &block_descriptor_132;
      long long v28 = _Block_copy(&aBlock);
      uint64_t v29 = v1;
      swift_release();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v29;
      v95 = sub_18FCD6EAC;
      uint64_t v96 = v30;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5714;
      v94 = &block_descriptor_138;
      uint64_t v31 = _Block_copy(&aBlock);
      int v32 = v29;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v28);
      imp_implementationWithBlock(v31);
      _Block_release(v31);
      _Block_release(v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
LABEL_6:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v26;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5C8);
    if (swift_dynamicCast())
    {
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v1;
      v95 = sub_18FCD6F18;
      uint64_t v96 = v33;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD580C;
      v94 = &block_descriptor_120;
      uint64_t v34 = _Block_copy(&aBlock);
      int v35 = v1;
      swift_release();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      v95 = sub_18FCD6E74;
      uint64_t v96 = v36;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5870;
      v94 = &block_descriptor_126;
      uint64_t v37 = _Block_copy(&aBlock);
      uint64_t v38 = v35;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v34);
      imp_implementationWithBlock(v37);
      _Block_release(v37);
      _Block_release(v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v1;
      v95 = sub_18FCD6EC0;
      uint64_t v96 = v39;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD59A4;
      v94 = &block_descriptor_108;
      uint64_t v40 = _Block_copy(&aBlock);
      uint64_t v41 = v1;
      swift_release();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      v95 = sub_18FCD6EC8;
      uint64_t v96 = v42;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5A00;
      v94 = &block_descriptor_114;
      uint64_t v43 = _Block_copy(&aBlock);
      uint64_t v44 = v41;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v40);
      imp_implementationWithBlock(v43);
      _Block_release(v43);
      _Block_release(v40);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v1;
      v95 = sub_18FCD6E88;
      uint64_t v96 = v46;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD570C;
      v94 = &block_descriptor_96;
      uint64_t v47 = _Block_copy(&aBlock);
      uint64_t v48 = v1;
      swift_release();
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v48;
      v95 = sub_18FCD6EAC;
      uint64_t v96 = v49;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5714;
      v94 = &block_descriptor_102;
      uint64_t v50 = _Block_copy(&aBlock);
      uint64_t v51 = v48;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v47);
      imp_implementationWithBlock(v50);
      _Block_release(v50);
      _Block_release(v47);
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v1;
      v95 = sub_18FCD6E50;
      uint64_t v96 = v52;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD580C;
      v94 = &block_descriptor_84;
      Class v53 = _Block_copy(&aBlock);
      unsigned __int8 v54 = v1;
      swift_release();
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v54;
      v95 = sub_18FCD6E74;
      uint64_t v96 = v55;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5870;
      v94 = &block_descriptor_90;
      uint64_t v56 = _Block_copy(&aBlock);
      unint64_t v57 = v54;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v53);
      imp_implementationWithBlock(v56);
      _Block_release(v56);
      _Block_release(v53);
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v1;
      v95 = sub_18FCD6E40;
      uint64_t v96 = v58;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5BD8;
      v94 = &block_descriptor_72;
      uint64_t v59 = _Block_copy(&aBlock);
      uint64_t v60 = v1;
      swift_release();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v60;
      v95 = sub_18FCD6E48;
      uint64_t v96 = v61;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      uint64_t v62 = sub_18FCD5C30;
      uint64_t v63 = &block_descriptor_78;
LABEL_20:
      v93 = v62;
      v94 = v63;
      uint64_t v66 = _Block_copy(&aBlock);
      uint64_t v67 = v60;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v59);
      imp_implementationWithBlock(v66);
      _Block_release(v66);
      _Block_release(v59);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v1;
      v95 = sub_18FCD6DE8;
      uint64_t v96 = v64;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5CF0;
      v94 = &block_descriptor_60;
      uint64_t v59 = _Block_copy(&aBlock);
      uint64_t v60 = v1;
      swift_release();
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = v60;
      v95 = sub_18FCD6DF0;
      uint64_t v96 = v65;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      uint64_t v62 = sub_18FCD5D5C;
      uint64_t v63 = &block_descriptor_66;
      goto LABEL_20;
    }
    if (swift_dynamicCast())
    {
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = v1;
      v95 = sub_18FCD6D90;
      uint64_t v96 = v68;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5E8C;
      v94 = &block_descriptor_48;
      uint64_t v69 = _Block_copy(&aBlock);
      unint64_t v70 = v1;
      swift_release();
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = v70;
      v95 = sub_18FCD6D98;
      uint64_t v96 = v71;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD5EF0;
      v94 = &block_descriptor_54;
      uint64_t v72 = _Block_copy(&aBlock);
      v73 = v70;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v69);
      imp_implementationWithBlock(v72);
      _Block_release(v72);
      _Block_release(v69);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v74 = swift_allocObject();
      *(void *)(v74 + 16) = v1;
      v95 = sub_18FCD6D38;
      uint64_t v96 = v74;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD6018;
      v94 = &block_descriptor_36;
      uint64_t v75 = _Block_copy(&aBlock);
      unint64_t v76 = v1;
      swift_release();
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v76;
      v95 = sub_18FCD6D40;
      uint64_t v96 = v77;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v92 = 1107296256;
      v93 = sub_18FCD6074;
      v94 = &block_descriptor_42;
      unint64_t v78 = _Block_copy(&aBlock);
      unint64_t v79 = v76;
      swift_release();
      IMP v26 = imp_implementationWithBlock(v75);
      imp_implementationWithBlock(v78);
      _Block_release(v78);
      _Block_release(v75);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
      return v26;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5D0);
    if (swift_dynamicCast())
    {
      v17(v12, v16, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5D8);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_29;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      v17(v9, v16, v2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5E8);
      if (swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
LABEL_29:
        v17(v6, v16, v2);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5E0);
        if (swift_dynamicCast())
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = v1;
          v95 = sub_18FCD6D28;
          uint64_t v96 = v80;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v92 = 1107296256;
          v93 = sub_18FCD61F8;
          v94 = &block_descriptor_24;
          uint64_t v19 = _Block_copy(&aBlock);
          uint64_t v20 = v1;
          swift_release();
          uint64_t v81 = swift_allocObject();
          *(void *)(v81 + 16) = v20;
          v95 = sub_18FCD6D30;
          uint64_t v96 = v81;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v92 = 1107296256;
          uint64_t v22 = sub_18FCD63C0;
          unint64_t v23 = &block_descriptor_30;
        }
        else
        {
          uint64_t v82 = swift_allocObject();
          *(void *)(v82 + 16) = v1;
          v95 = sub_18FCD6D18;
          uint64_t v96 = v82;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v92 = 1107296256;
          v93 = sub_18FCD61F8;
          v94 = &block_descriptor_12;
          uint64_t v19 = _Block_copy(&aBlock);
          uint64_t v20 = v1;
          swift_release();
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = v20;
          v95 = sub_18FCD6D20;
          uint64_t v96 = v83;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v92 = 1107296256;
          uint64_t v22 = sub_18FCD63C0;
          unint64_t v23 = &block_descriptor_18;
        }
        goto LABEL_3;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v1;
    v95 = sub_18FCD6CA0;
    uint64_t v96 = v84;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v92 = 1107296256;
    v93 = sub_18FCD66B0;
    v94 = &block_descriptor;
    v85 = _Block_copy(&aBlock);
    v86 = v1;
    swift_release();
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = v86;
    v95 = sub_18FCD6CDC;
    uint64_t v96 = v87;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v92 = 1107296256;
    v93 = sub_18FCD6738;
    v94 = &block_descriptor_6;
    v88 = _Block_copy(&aBlock);
    v89 = v86;
    swift_release();
    IMP v26 = imp_implementationWithBlock(v85);
    imp_implementationWithBlock(v88);
    _Block_release(v88);
    _Block_release(v85);
    return v26;
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v1;
  v95 = sub_18FCD6FA8;
  uint64_t v96 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v92 = 1107296256;
  v93 = sub_18FCD55A4;
  v94 = &block_descriptor_144;
  uint64_t v19 = _Block_copy(&aBlock);
  uint64_t v20 = v1;
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  v95 = sub_18FCD6FB0;
  uint64_t v96 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v92 = 1107296256;
  uint64_t v22 = sub_18FCD5684;
  unint64_t v23 = &block_descriptor_150;
LABEL_3:
  v93 = v22;
  v94 = v23;
  unint64_t v24 = _Block_copy(&aBlock);
  char v25 = v20;
  swift_release();
  IMP v26 = imp_implementationWithBlock(v19);
  imp_implementationWithBlock(v24);
  _Block_release(v24);
  _Block_release(v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  return v26;
}

uint64_t sub_18FCD54B0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)v4 - v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5B8);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_18FD022C0();
  uint64_t v2 = v4[1];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v2;
}

id sub_18FCD55A4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v3 = (void *)sub_18FD02120();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18FCD562C()
{
  swift_bridgeObjectRetain();
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

uint64_t sub_18FCD5684(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_18FD02150();
  uint64_t v4 = v3;
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v1(v5, v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCD570C(uint64_t a1)
{
  return sub_18FCD5814(a1);
}

uint64_t sub_18FCD5714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD5878(a1, a2, a3);
}

uint64_t sub_18FCD571C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)&v8[-1] - v4);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_dynamicCast();
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_18FD022C0();
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_18FCD580C(uint64_t a1)
{
  return sub_18FCD5814(a1);
}

uint64_t sub_18FCD5814(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18FCD5870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCD5878(a1, a2, a3);
}

uint64_t sub_18FCD5878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCD58EC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)&v3[-v1]);
  swift_dynamicCast();
  return v3[15];
}

uint64_t sub_18FCD59A4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_18FCD5A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCD5A68(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)v3 - v1);
  swift_dynamicCast();
  return v3[1];
}

double sub_18FCD5B20(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)v3 - v1);
  swift_dynamicCast();
  return *(double *)&v3[1];
}

double sub_18FCD5BD8(uint64_t a1)
{
  return sub_18FCD5CF8(a1);
}

uint64_t sub_18FCD5BE0()
{
  sub_18FCD6FB8();
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

uint64_t sub_18FCD5C30(uint64_t a1, double a2)
{
  return sub_18FCD5D64(a1, a2);
}

double sub_18FCD5C38(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)v3 - v1);
  swift_dynamicCast();
  return *(double *)&v3[1];
}

double sub_18FCD5CF0(uint64_t a1)
{
  return sub_18FCD5CF8(a1);
}

double sub_18FCD5CF8(uint64_t a1)
{
  uint64_t v1 = *(double (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  double v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18FCD5D5C(uint64_t a1, double a2)
{
  return sub_18FCD5D64(a1, a2);
}

uint64_t sub_18FCD5D64(uint64_t a1, double a2)
{
  double v3 = *(void (**)(uint64_t, double))(a1 + 32);
  swift_retain();
  uint64_t v4 = swift_unknownObjectRetain();
  v3(v4, a2);
  swift_release();
  return swift_unknownObjectRelease();
}

float sub_18FCD5DD4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)v3 - v1);
  swift_dynamicCast();
  return *(float *)&v3[3];
}

float sub_18FCD5E8C(uint64_t a1)
{
  uint64_t v1 = *(float (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  float v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18FCD5EF0(uint64_t a1, float a2)
{
  float v3 = *(void (**)(uint64_t, float))(a1 + 32);
  swift_retain();
  uint64_t v4 = swift_unknownObjectRetain();
  v3(v4, a2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCD5F60(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  sub_18FCD7D48((uint64_t)&v3[-v1]);
  swift_dynamicCast();
  return v3[15];
}

uint64_t sub_18FCD6018(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1 & 1;
}

uint64_t sub_18FCD6074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCD60DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - v4;
  sub_18FCD7D48((uint64_t)&v8 - v4);
  uint64_t v6 = sub_18FD02BF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  self;
  if (swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v6;
}

id sub_18FCD61F8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_18FCD6264(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a3) + 0x50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)v9 - v5;
  if (v7)
  {
    swift_unknownObjectRetain();
    sub_18FD02BE0();
    sub_18FCD8F28((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
    swift_dynamicCast();
    sub_18FCD8F28((uint64_t)v6);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_18FCD63C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCD643C(uint64_t a1, void *a2)
{
  uint64_t v13 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x50);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  sub_18FCD7D48((uint64_t)boxed_opaque_existential_0);
  sub_18FCA3724((uint64_t)v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C5F8);
  if (swift_dynamicCast())
  {
    sub_18FCA7A04((uint64_t)&v8, &qword_1E926C600);
    sub_18FCA3724((uint64_t)v12, (uint64_t)&v8);
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C608);
    if (swift_dynamicCast())
    {
      uint64_t v4 = v11[0];
      *((void *)&v9 + 1) = v3;
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_18FCD67DC(MEMORY[0x1E4FBC868], v4, v4);
      swift_bridgeObjectRelease_n();
      *(void *)&long long v8 = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      sub_18FCD00F0(&v8, v12);
    }
  }
  else
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    sub_18FCA7A04((uint64_t)&v8, &qword_1E926C600);
  }
  sub_18FCA3724((uint64_t)v12, (uint64_t)&v8);
  uint64_t v6 = sub_18FD02CE0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v6;
}

uint64_t sub_18FCD65C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a3) + 0x50);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_18FD02BE0();
  sub_18FCD8F28((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_18FCD66B0(uint64_t a1)
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  void *v3;
  void v5[5];
  uint64_t vars8;

  uint64_t v1 = *(void (**)(void *__return_ptr, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v5, v2);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v3 = (void *)sub_18FD026A0();
  sub_18FCA36B8((uint64_t)v5);
  return v3;
}

uint64_t sub_18FCD6738(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, unsigned char *))(a1 + 32);
  sub_18FD026B0();
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2, v4);
  swift_unknownObjectRelease();
  swift_release();
  return sub_18FCA36B8((uint64_t)v4);
}

uint64_t Locale.LanguageCode.description.getter()
{
  return sub_18FD01E40();
}

uint64_t sub_18FCD67C4()
{
  return sub_18FD01E40();
}

uint64_t sub_18FCD67DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v54 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v9 << 6);
LABEL_25:
    sub_18FCA365C(*(void *)(a2 + 48) + 40 * v12, (uint64_t)v52);
    v50[0] = v52[0];
    v50[1] = v52[1];
    uint64_t v51 = v53;
    swift_bridgeObjectRetain();
    *(void *)&long long v46 = sub_18FD026C0();
    *((void *)&v46 + 1) = v16;
    sub_18FD02700();
    if (*(void *)(a3 + 16) && (unint64_t v17 = sub_18FCA9718((uint64_t)v50), (v18 & 1) != 0))
    {
      sub_18FCA365C(*(void *)(a3 + 56) + 40 * v17, (uint64_t)&v46);
      long long v43 = v46;
      long long v44 = v47;
      uint64_t v45 = v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v21 = sub_18FCA9718((uint64_t)v49);
      uint64_t v22 = a1[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_44;
      }
      char v25 = v20;
      if (a1[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_18FCE2930();
        }
      }
      else
      {
        sub_18FCE09C0(v24, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = sub_18FCA9718((uint64_t)v49);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_47;
        }
        unint64_t v21 = v26;
      }
      uint64_t v10 = (uint64_t)a1;
      if (v25)
      {
        sub_18FCD7000((uint64_t)&v43, a1[7] + 40 * v21);
      }
      else
      {
        a1[(v21 >> 6) + 8] |= 1 << v21;
        sub_18FCA365C((uint64_t)v49, a1[6] + 40 * v21);
        uint64_t v35 = a1[7] + 40 * v21;
        long long v36 = v43;
        long long v37 = v44;
        *(void *)(v35 + 32) = v45;
        *(_OWORD *)uint64_t v35 = v36;
        *(_OWORD *)(v35 + 16) = v37;
        uint64_t v38 = a1[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_45;
        }
        a1[2] = v40;
      }
      swift_bridgeObjectRelease();
      sub_18FCA36B8((uint64_t)v49);
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_18FCA9718((uint64_t)v49);
      char v30 = v29;
      swift_bridgeObjectRelease();
      if (v30)
      {
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v43 = a1;
        uint64_t v10 = (uint64_t)a1;
        if ((v31 & 1) == 0)
        {
          sub_18FCE2930();
          uint64_t v10 = v43;
        }
        sub_18FCA36B8(*(void *)(v10 + 48) + 40 * v28);
        uint64_t v32 = *(void *)(v10 + 56) + 40 * v28;
        uint64_t v33 = *(void *)(v32 + 32);
        long long v34 = *(_OWORD *)(v32 + 16);
        long long v46 = *(_OWORD *)v32;
        long long v47 = v34;
        uint64_t v48 = v33;
        sub_18FCE2008(v28, v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = 0;
        uint64_t v10 = (uint64_t)a1;
        long long v46 = 0u;
        long long v47 = 0u;
      }
      sub_18FCA36B8((uint64_t)v49);
      sub_18FCA7A04((uint64_t)&v46, &qword_1E926B830);
    }
    sub_18FCA36B8((uint64_t)v50);
    swift_bridgeObjectRelease();
    a1 = (void *)v10;
  }
  int64_t v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v13 >= v54) {
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v42 + 8 * v13);
  ++v9;
  if (v14) {
    goto LABEL_24;
  }
  int64_t v9 = v13 + 1;
  if (v13 + 1 >= v54) {
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v42 + 8 * v9);
  if (v14) {
    goto LABEL_24;
  }
  int64_t v9 = v13 + 2;
  if (v13 + 2 >= v54) {
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v42 + 8 * v9);
  if (v14) {
    goto LABEL_24;
  }
  int64_t v9 = v13 + 3;
  if (v13 + 3 >= v54) {
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v42 + 8 * v9);
  if (v14)
  {
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_25;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v54)
  {
LABEL_42:
    swift_release();
    return (uint64_t)a1;
  }
  unint64_t v14 = *(void *)(v42 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v54) {
      goto LABEL_42;
    }
    unint64_t v14 = *(void *)(v42 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_18FD02D00();
  __break(1u);
  return result;
}

unint64_t sub_18FCD6C14()
{
  unint64_t result = qword_1E926C5B0;
  if (!qword_1E926C5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C5B0);
  }
  return result;
}

uint64_t sub_18FCD6C68()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD6CA0(uint64_t a1)
{
  return sub_18FCD386C(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_18FCD6CDC(uint64_t a1, uint64_t a2)
{
  sub_18FCA365C(a2, (uint64_t)v3);
  return sub_18FCD3AAC((uint64_t)v3);
}

uint64_t sub_18FCD6D18(uint64_t a1)
{
  return sub_18FCD643C(a1, *(void **)(v1 + 16));
}

uint64_t sub_18FCD6D20(uint64_t a1, uint64_t a2)
{
  return sub_18FCD65C4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_18FCD6D28(uint64_t a1)
{
  return sub_18FCD60DC(a1, *(void **)(v1 + 16));
}

uint64_t sub_18FCD6D30(uint64_t a1, uint64_t a2)
{
  return sub_18FCD6264(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_18FCD6D38(uint64_t a1)
{
  return sub_18FCD5F60(a1);
}

uint64_t sub_18FCD6D40()
{
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

float sub_18FCD6D90(uint64_t a1)
{
  return sub_18FCD5DD4(a1);
}

uint64_t sub_18FCD6D98()
{
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

double sub_18FCD6DE8(uint64_t a1)
{
  return sub_18FCD5C38(a1);
}

uint64_t sub_18FCD6DF0()
{
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

double sub_18FCD6E40(uint64_t a1)
{
  return sub_18FCD5B20(a1);
}

uint64_t sub_18FCD6E48()
{
  return sub_18FCD5BE0();
}

uint64_t sub_18FCD6E50(uint64_t a1)
{
  return sub_18FCD5A68(a1);
}

uint64_t sub_18FCD6E74()
{
  return sub_18FCD6F60();
}

uint64_t sub_18FCD6E88(uint64_t a1)
{
  return sub_18FCD5A68(a1);
}

uint64_t sub_18FCD6EAC()
{
  return sub_18FCD6F60();
}

uint64_t sub_18FCD6EC0(uint64_t a1)
{
  return sub_18FCD58EC(a1);
}

uint64_t sub_18FCD6EC8()
{
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

uint64_t sub_18FCD6F18(uint64_t a1)
{
  return sub_18FCD571C(a1, *(void *)(v1 + 16), &qword_1E926C5C8);
}

uint64_t sub_18FCD6F3C(uint64_t a1)
{
  return sub_18FCD571C(a1, *(void *)(v1 + 16), &qword_1E926C5C0);
}

uint64_t sub_18FCD6F60()
{
  sub_18FD02700();
  return sub_18FCD3AAC((uint64_t)v1);
}

uint64_t sub_18FCD6FA8(uint64_t a1)
{
  return sub_18FCD54B0(a1);
}

uint64_t sub_18FCD6FB0()
{
  return sub_18FCD562C();
}

unint64_t sub_18FCD6FB8()
{
  unint64_t result = qword_1E926C5F0;
  if (!qword_1E926C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C5F0);
  }
  return result;
}

uint64_t sub_18FCD7000(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_18FCD705C()
{
  unint64_t result = qword_1E926C610[0];
  if (!qword_1E926C610[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926B830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E926C610);
  }
  return result;
}

uint64_t sub_18FCD71F4@<X0>(uint64_t a1@<X8>)
{
  return AXSetting.key.getter(a1);
}

uint64_t AXSetting.key.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCA3A48((uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x70), a1);
}

uint64_t sub_18FCD725C@<X0>(uint64_t a1@<X8>)
{
  return AXSetting.store.getter(a1);
}

uint64_t AXSetting.store.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCA3A48((uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x80), a1);
}

uint64_t sub_18FCD72C4()
{
  sub_18FCD921C();
  return swift_bridgeObjectRetain();
}

uint64_t AXSetting.additionalObserveSelectors.getter()
{
  sub_18FCD921C();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCD7320()
{
  return sub_18FCD734C();
}

id sub_18FCD7344()
{
  return v0;
}

uint64_t sub_18FCD734C()
{
  return sub_18FCD8F28((uint64_t)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68));
}

uint64_t sub_18FCD737C(uint64_t a1)
{
  return sub_18FCD7F60(a1, (void (*)(void))sub_18FCD9248);
}

void (*sub_18FCD7394(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  _DWORD v3[4] = v7;
  sub_18FCD74D8((uint64_t)v7, (uint64_t)v7);
  return sub_18FCD7478;
}

void sub_18FCD7478(uint64_t a1, char a2)
{
}

uint64_t sub_18FCD7490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18FCD74D8(a1, a2);
}

uint64_t sub_18FCD74B4(uint64_t a1)
{
  return sub_18FCD8F28(a1);
}

uint64_t sub_18FCD74D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *(void *)v2;
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  int64_t v9 = (char *)v22 - v8;
  uint64_t v10 = sub_18FD02600();
  v22[1] = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)v22 - v11;
  uint64_t v25 = v6;
  long long v23 = *(_OWORD *)(v5 + 88);
  long long v26 = v23;
  swift_getKeyPath();
  sub_18FCD8944();
  swift_release();
  sub_18FCD83D0();
  int64_t v13 = &v3[*(void *)((*v4 & *(void *)v3) + 0x80)];
  uint64_t v14 = *((void *)v13 + 3);
  uint64_t v15 = *((void *)v13 + 4);
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(long long *__return_ptr, char *, uint64_t, uint64_t))(v15 + 8))(&v27, &v3[*(void *)((*v4 & *(void *)v3) + 0x70)], v14, v15);
  if (*((void *)&v28 + 1))
  {
    v30[0] = v27;
    v30[1] = v28;
    uint64_t v31 = v29;
    type metadata accessor for AXMigratingDecoder();
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = MEMORY[0x1E4FBC860];
    _OWORD v16[2] = MEMORY[0x1E4FBC860];
    v16[3] = sub_18FCEF7B4(v17);
    type metadata accessor for AXDataHolder();
    long long v27 = 0u;
    long long v28 = 0u;
    uint64_t v29 = 0;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 32) = 0u;
    *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = 0;
    *(_OWORD *)(v18 + 16) = 0u;
    swift_beginAccess();
    sub_18FCA3BCC((uint64_t)&v27, v18 + 16);
    swift_endAccess();
    void v16[4] = v18;
    sub_18FCE9AF8(v6, (uint64_t)v30, v6);
    sub_18FCA36B8((uint64_t)v30);
    swift_release();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24, v12, v6);
  }
  else
  {
    uint64_t v19 = sub_18FCA3568((uint64_t)&v27);
    char v20 = (void (**)(uint64_t))&v3[*(void *)((*v4 & *(void *)v3) + 0x78)];
    if (*v20)
    {
      (*v20)(v19);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24, v9, v6);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 16))(v24, &v3[*(void *)((*v4 & *(void *)v3) + 0x68)], v6);
    }
  }
}

uint64_t sub_18FCD795C(uint64_t a1)
{
  return sub_18FCD7F60(a1, (void (*)(void))sub_18FCD8F28);
}

uint64_t sub_18FCD7974()
{
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = v0;
  axObservationTrackingStream<A>(_:)((uint64_t)sub_18FCD92EC, v2, v3);
  return swift_release();
}

uint64_t sub_18FCD7A1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90);
  swift_beginAccess();
  uint64_t v4 = sub_18FD02600();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_18FCD7ADC(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90);
  swift_beginAccess();
  uint64_t v4 = sub_18FD02600();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_18FCD7BA4@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCD7A1C(a1);
}

uint64_t sub_18FCD7C54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_18FD02600();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - v4, a2);
  return sub_18FCD7ADC((uint64_t)v5);
}

uint64_t sub_18FCD7D48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v4 = sub_18FD02600();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  sub_18FCD83D0();
  sub_18FCD7BA4((uint64_t)v10);
  uint64_t v11 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v10, v3);
  }
  unint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v13 = v12(v10, v4);
  sub_18FCD74D8(v13, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v3);
  sub_18FCD8E54();
  return v12(v8, v4);
}

uint64_t sub_18FCD7F48(uint64_t a1)
{
  return sub_18FCD7F60(a1, (void (*)(void))sub_18FCD9310);
}

uint64_t sub_18FCD7F60(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v2;
  a2();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8);
  return v5(a1);
}

void (*sub_18FCD7FF0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  _DWORD v3[4] = v7;
  sub_18FCD7D48((uint64_t)v7);
  return sub_18FCD80D4;
}

void sub_18FCD80D4(uint64_t a1, char a2)
{
}

void sub_18FCD80EC(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 24);
  size_t v6 = *(void **)(*(void *)a1 + 32);
  uint64_t v7 = *(void *)(*(void *)a1 + 8);
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 24), v6, v7);
    a3(v5);
    uint64_t v9 = *(void (**)(void *, uint64_t))(v8 + 8);
    v9(v5, v7);
    v9(v6, v7);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_18FCD81DC()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98));
}

uint64_t sub_18FCD8208(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x98)) = result;
  return result;
}

uint64_t sub_18FCD8234()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  swift_getKeyPath();
  sub_18FCD8944();
  swift_release();
  return *((unsigned __int8 *)v0 + *(void *)((*v1 & *v0) + 0x98));
}

uint64_t sub_18FCD82F8()
{
  return swift_release();
}

uint64_t sub_18FCD83D0()
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t result = sub_18FCD8234();
  if ((result & 1) == 0)
  {
    sub_18FCD82F8();
    uint64_t v4 = (void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x80));
    uint64_t v5 = v4[3];
    uint64_t v6 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v5);
    uint64_t v7 = (char *)v0 + *(void *)((*v1 & *v0) + 0x70);
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(v2 + 80);
    *(void *)(v9 + 32) = *(void *)(v2 + 96);
    *(void *)(v9 + 40) = v8;
    uint64_t v10 = *(void (**)(char *, void (*)(), uint64_t, uint64_t, uint64_t))(v6 + 24);
    swift_retain();
    v10(v7, sub_18FCD9F14, v9, v5, v6);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_18FCD856C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x192FC3700](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_18FCD85C0();
  }
}

uint64_t sub_18FCD85C0()
{
  uint64_t v1 = (void *)(*MEMORY[0x1E4FBC8C8] & *v0);
  uint64_t v2 = v1[10];
  uint64_t v3 = sub_18FD02600();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  sub_18FCD74D8(v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v7, 0, 1, v2);
  sub_18FCD8E54();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  uint64_t v14 = v0;
  uint64_t v11[4] = v2;
  uint64_t v12 = v1[11];
  uint64_t v8 = v12;
  uint64_t v9 = v1[12];
  uint64_t v13 = v9;
  swift_getKeyPath();
  type metadata accessor for AXSetting();
  swift_getWitnessTable();
  sub_18FD02010();
  swift_release();
  uint64_t v14 = v0;
  v11[0] = v2;
  v11[1] = v8;
  _OWORD v11[2] = v9;
  swift_getKeyPath();
  sub_18FD02000();
  return swift_release();
}

id AXSetting.__allocating_init(wrappedValue:_:initializer:additionalObserveSelectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v12 = objc_allocWithZone(v6);
  id v13 = sub_18FCD947C(a1, a2, a3, a4, a5);
  sub_18FCA5CBC(a3);
  (*(void (**)(uint64_t))(*(void *)(*((void *)v6 + 10) - 8) + 8))(a1);
  return v13;
}

id AXSetting.init(wrappedValue:_:initializer:additionalObserveSelectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *MEMORY[0x1E4FBC8C8] & *v5;
  id v9 = sub_18FCD947C(a1, a2, a3, a4, a5);
  sub_18FCA5CBC(a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 80) - 8) + 8))(a1);
  return v9;
}

uint64_t sub_18FCD8944()
{
  return sub_18FD01FF0();
}

uint64_t sub_18FCD8A08()
{
  return sub_18FD01FE0();
}

id AXSetting.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AXSetting.init()()
{
}

void sub_18FCD8B8C()
{
}

id AXSetting.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AXSetting();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FCD8C6C(char *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(char *, void))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x50) - 8)
                                         + 8))(&a1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x68)], *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x50));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x70)]);
  sub_18FCA5CBC(*(void *)&a1[*(void *)((*v2 & *(void *)a1) + 0x78)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(void *)((*v2 & *(void *)a1) + 0x80)]);
  swift_bridgeObjectRelease();
  uint64_t v3 = &a1[*(void *)((*v2 & *(void *)a1) + 0x90)];
  uint64_t v4 = sub_18FD02600();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = &a1[*(void *)((*v2 & *(void *)a1) + 0xA0)];
  uint64_t v6 = sub_18FD02030();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_18FCD8E54()
{
  return swift_release();
}

uint64_t sub_18FCD8F28(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v17 = a1;
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *(void *)v1;
  uint64_t v4 = *(void *)(v3 + 0x50);
  uint64_t v5 = sub_18FD02600();
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - v6;
  sub_18FCA3A48((uint64_t)&v1[*(void *)(v3 + 128)], (uint64_t)v22);
  uint64_t v8 = v23;
  uint64_t v9 = v24;
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v22, v23);
  type metadata accessor for AXMigratingEncoder();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  v10[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  type metadata accessor for AXDataHolder();
  memset(v20, 0, sizeof(v20));
  uint64_t v21 = 0;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 32) = 0u;
  *(void *)(v12 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v12 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v20, v12 + 16);
  swift_endAccess();
  v10[4] = v12;
  void v10[2] = v11;
  uint64_t v13 = v17;
  sub_18FCEFF70(v4, (uint64_t)v20);
  swift_release();
  (*(void (**)(_OWORD *, char *, uint64_t, uint64_t))(v9 + 16))(v20, &v2[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v2) + 0x70)], v8, v9);
  sub_18FCA3568((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  uint64_t v14 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v13, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v4);
  sub_18FCD8E54();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v7, v19);
}

uint64_t sub_18FCD921C()
{
  return *(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88));
}

uint64_t sub_18FCD924C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18FCD74D8(a1, a2);
}

uint64_t sub_18FCD9270(uint64_t a1)
{
  return sub_18FCD8F28(a1);
}

uint64_t sub_18FCD9294()
{
  return 24;
}

__n128 sub_18FCD92A0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18FCD92B4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD92EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18FCD74D8(a1, a2);
}

uint64_t sub_18FCD9310(uint64_t a1)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v4 = sub_18FD02600();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  sub_18FCD8F28(a1);
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_18FCD8E54();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_18FCD947C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v25 = a5;
  uint64_t v11 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v26 = *MEMORY[0x1E4FBC8C8] & *v6;
  uint64_t v12 = *(void *)(v26 + 80);
  uint64_t v13 = sub_18FD02600();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))((char *)&v24 - v14, 1, 1, v12);
  swift_getObjectType();
  uint64_t v17 = (char *)v6 + *(void *)((*v11 & *v6) + 0x90);
  uint64_t v18 = sub_18FD02600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17, v15, v18);
  *((unsigned char *)v6 + *(void *)((*v11 & *v6) + 0x98)) = 0;
  uint64_t v19 = v6;
  sub_18FD02020();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(&v19[*(void *)((*v11 & *(void *)v19) + 0x68)], a1, v12);
  char v20 = (uint64_t *)&v19[*(void *)((*v11 & *(void *)v19) + 0x78)];
  uint64_t *v20 = a3;
  v20[1] = a4;
  sub_18FCA3A48(a2, (uint64_t)&v19[*(void *)((*v11 & *(void *)v19) + 0x70)]);
  *(void *)&v19[*(void *)((*v11 & *(void *)v19) + 0x88)] = v25;
  sub_18FCAF6B0(a3);
  if (qword_1E926BF38 != -1) {
    swift_once();
  }
  swift_retain();
  sub_18FCDC4A0((uint64_t)v28);
  swift_release();
  sub_18FCA370C(v28, (uint64_t)&v19[*(void *)((*v11 & *(void *)v19) + 0x80)]);

  uint64_t v21 = (objc_class *)type metadata accessor for AXSetting();
  v27.receiver = v19;
  v27.super_class = v21;
  id v22 = objc_msgSendSuper2(&v27, sel_init);
  sub_18FCD3DD4();

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v22;
}

void sub_18FCD97E8()
{
}

uint64_t type metadata accessor for AXSetting()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_18FCD9830()
{
  return sub_18FCD7378();
}

uint64_t sub_18FCD9854()
{
  return sub_18FCD9248();
}

uint64_t sub_18FCD9878()
{
  return 24;
}

__n128 sub_18FCD9884(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18FCD9898()
{
  return 24;
}

__n128 sub_18FCD98A4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18FCD98B8@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCD7D48(a1);
}

uint64_t sub_18FCD98DC(uint64_t a1)
{
  return sub_18FCD9310(a1);
}

uint64_t sub_18FCD9900()
{
  return 24;
}

__n128 sub_18FCD990C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of AXSettingProtocol.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AXSettingProtocol.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AXSettingProtocol.additionalObserveSelectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AXSettingProtocol.resetToDefaultValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_18FCD9970()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = sub_18FD02600();
    if (v2 <= 0x3F)
    {
      uint64_t v0 = sub_18FD02030();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return v0;
}

uint64_t method lookup function for AXSetting(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXSetting);
}

uint64_t dispatch thunk of AXSetting.projectedValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AXSetting.resetToDefaultValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AXSetting.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AXSetting.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AXSetting.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AXSetting.value.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AXSetting.value.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AXSetting.value.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AXSetting.stream.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AXSetting.cachedValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of AXSetting.cachedValue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of AXSetting.cachedValue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of AXSetting.__allocating_init(wrappedValue:_:initializer:additionalObserveSelectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t sub_18FCD9D74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_18FCD8234();
  *a1 = result & 1;
  return result;
}

uint64_t sub_18FCD9DA4()
{
  return sub_18FCD82F8();
}

uint64_t sub_18FCD9DCC()
{
  return 24;
}

__n128 sub_18FCD9DD8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_18FCD9DEC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + *(void *)((*MEMORY[0x1E4FBC8C8] & **(void **)(v0 + 16)) + 0x98)) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_18FCD9E20@<X0>(uint64_t a1@<X8>)
{
  return sub_18FCD7BA4(a1);
}

uint64_t sub_18FCD9E44()
{
  return sub_18FCD8E54();
}

uint64_t sub_18FCD9E68()
{
  return 24;
}

__n128 sub_18FCD9E74(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_18FCD9E88()
{
  return sub_18FCD7C54(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_18FCD9EA4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCD9EDC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_18FCD9F14()
{
  sub_18FCD856C(*(void *)(v0 + 40));
}

uint64_t sub_18FCD9F20(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_18FCA370C((long long *)a1, (uint64_t)v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_18FCFCF00(v7, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v6;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_18FCA7A04(a1, &qword_1E926C6A8);
    sub_18FCDC630(a2, (uint64_t)v7);
    return sub_18FCA7A04((uint64_t)v7, &qword_1E926C6A8);
  }
}

uint64_t sub_18FCD9FD0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_18FCD00F0((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_18FCFD040(v7, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v6;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_18FCA7A04(a1, &qword_1E926B858);
    sub_18FCDC724(a2, v7);
    return sub_18FCA7A04((uint64_t)v7, &qword_1E926B858);
  }
}

uint64_t sub_18FCDA080@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t String.axUppercasedFirstLetter.getter(unint64_t a1, unint64_t a2)
{
  return sub_18FCDC388(a1, a2, MEMORY[0x1E4FBB768]);
}

uint64_t static AXPreferenceContext.store.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E926BF38 != -1) {
    swift_once();
  }
  swift_retain();
  sub_18FCDC4A0(a1);
  return swift_release();
}

void sub_18FCDA16C(void *a1@<X8>)
{
}

void AXSettingsKey.traits.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t AXSettingsTrait.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t AXSettingsTrait.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static AXSettingsTrait.watchSynced.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static AXSettingsTrait.excludeFromBuddy.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void *sub_18FCDA1B4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_18FCDA1C0(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_18FCDA1C8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_18FCDA1DC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_18FCDA1F0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_18FCDA204(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_18FCDA234@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + _Block_object_dispose(&a9, 8) = v3 == 0;
  return result;
}

uint64_t *sub_18FCDA260@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + _Block_object_dispose(&a9, 8) = v5 == 0;
  return result;
}

void *sub_18FCDA284(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_18FCDA298(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_18FCDA2AC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_18FCDA2C0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_18FCDA2D4(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_18FCDA2E8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_18FCDA2FC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_18FCDA310()
{
  return *v0 == 0;
}

uint64_t sub_18FCDA320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_18FCDA338(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t AXConcreteKey.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AXConcreteKey.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AXConcreteKey.key.modify())()
{
  return nullsub_1;
}

uint64_t AXConcreteKey.domain.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AXConcreteKey.domain.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AXConcreteKey.domain.modify())()
{
  return nullsub_1;
}

uint64_t AXConcreteKey.objcMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_18FCDC95C(v2, v3, v4, v5, v6);
}

__n128 AXConcreteKey.objcMode.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  sub_18FCDC9B4(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
  __n128 result = v6;
  *(__n128 *)(v1 + 32) = v6;
  *(void *)(v1 + 4_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v1 + 56) = v3;
  *(unsigned char *)(v1 + 64) = v4;
  return result;
}

uint64_t (*AXConcreteKey.objcMode.modify())()
{
  return nullsub_1;
}

void AXConcreteKey.traits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
}

void *AXConcreteKey.traits.setter(void *result)
{
  *(void *)(v1 + 72) = *result;
  return result;
}

uint64_t (*AXConcreteKey.traits.modify())()
{
  return nullsub_1;
}

__n128 AXConcreteKey.init(key:domain:objcMode:traits:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, unint64_t *a5@<X4>, __n128 *a6@<X8>)
{
  __n128 v16 = *a4;
  unint64_t v9 = a4[1].n128_u64[0];
  unint64_t v10 = a4[1].n128_u64[1];
  unsigned __int8 v11 = a4[2].n128_u8[0];
  unint64_t v12 = *a5;
  uint64_t v13 = AXCDomain.suiteName.getter(a3);
  a6->n128_u64[0] = a1;
  a6->n128_u64[1] = a2;
  a6[1].n128_u64[0] = v13;
  a6[1].n128_u64[1] = v14;
  __n128 result = v16;
  a6[2] = v16;
  a6[3].n128_u64[0] = v9;
  a6[3].n128_u64[1] = v10;
  a6[4].n128_u8[0] = v11;
  a6[4].n128_u64[1] = v12;
  return result;
}

uint64_t AXCDomain.suiteName.getter(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = (void **)MEMORY[0x1E4FB8FD0];
      unint64_t v2 = (void *)*MEMORY[0x1E4FB8FD0];
      if (!*MEMORY[0x1E4FB8FD0])
      {
        __break(1u);
        goto LABEL_39;
      }
      id v3 = (id)AXCPCopySharedResourcesPreferencesDomainForDomain();

      if (v3) {
        goto LABEL_28;
      }
      unsigned __int8 v4 = *v1;
      if (*v1)
      {
LABEL_27:
        id v3 = v4;
        goto LABEL_28;
      }
      __break(1u);
LABEL_6:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB8FE0];
      if (*MEMORY[0x1E4FB8FE0]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_8:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9308];
      if (*MEMORY[0x1E4FB9308]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_10:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9168];
      if (*MEMORY[0x1E4FB9168]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_12:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9318];
      if (*MEMORY[0x1E4FB9318]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_14:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9368];
      if (*MEMORY[0x1E4FB9368]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_16:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9378];
      if (*MEMORY[0x1E4FB9378]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_18:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB93B0];
      if (*MEMORY[0x1E4FB93B0]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_20:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9090];
      if (*MEMORY[0x1E4FB9090]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_22:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB92D0];
      if (*MEMORY[0x1E4FB92D0])
      {
LABEL_36:
        id v7 = v5;
        goto LABEL_37;
      }
      __break(1u);
LABEL_24:
      __n128 v6 = (void *)*MEMORY[0x1E4FB9270];
      if (!*MEMORY[0x1E4FB9270])
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      id v3 = (id)AXCPCopySharedResourcesPreferencesDomainForDomain();

      if (!v3)
      {
        unsigned __int8 v4 = (void *)*MEMORY[0x1E4FB8FD0];
        if (*MEMORY[0x1E4FB8FD0]) {
          goto LABEL_27;
        }
LABEL_41:
        __break(1u);
LABEL_42:
        sub_18FD02890();
        __break(1u);
        JUMPOUT(0x18FCDA7FCLL);
      }
LABEL_28:
      id v7 = v3;
LABEL_37:
      uint64_t v8 = sub_18FD02150();

      return v8;
    case 2:
      goto LABEL_16;
    case 3:
      goto LABEL_18;
    case 4:
      goto LABEL_20;
    case 5:
      goto LABEL_10;
    case 6:
      goto LABEL_24;
    case 7:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB91A0];
      if (*MEMORY[0x1E4FB91A0]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_31:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9330];
      if (*MEMORY[0x1E4FB9330]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_33:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9200];
      if (*MEMORY[0x1E4FB9200]) {
        goto LABEL_36;
      }
      __break(1u);
LABEL_35:
      uint64_t v5 = (void *)*MEMORY[0x1E4FB9148];
      if (*MEMORY[0x1E4FB9148]) {
        goto LABEL_36;
      }
      goto LABEL_40;
    case 8:
      goto LABEL_22;
    case 9:
      goto LABEL_31;
    case 10:
      goto LABEL_12;
    case 11:
      goto LABEL_33;
    case 12:
      goto LABEL_8;
    case 13:
      goto LABEL_14;
    case 14:
      goto LABEL_35;
    case 15:
      goto LABEL_6;
    default:
      goto LABEL_42;
  }
}

__n128 AXConcreteKey.init(key:domain:objcMode:traits:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *(unsigned char *)(a5 + 32);
  uint64_t v8 = *a6;
  *(void *)a7 = a1;
  *(void *)(a7 + _Block_object_dispose(&a9, 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  __n128 result = *(__n128 *)a5;
  long long v10 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a7 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a7 + 4_Block_object_dispose(&a9, 8) = v10;
  *(unsigned char *)(a7 + 64) = v7;
  *(void *)(a7 + 72) = v8;
  return result;
}

uint64_t sub_18FCDA85C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FCDA88C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FCDA8BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_18FCDC95C(v2, v3, v4, v5, v6);
}

void sub_18FCDA8D8(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
}

uint64_t sub_18FCDA8E4()
{
  uint64_t v1 = OBJC_IVAR___AXBridgedSettings____lazy_storage___selectorTargetMap;
  if (*(void *)&v0[OBJC_IVAR___AXBridgedSettings____lazy_storage___selectorTargetMap])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR___AXBridgedSettings____lazy_storage___selectorTargetMap];
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC868];
    MEMORY[0x1F4188790](0);
    void v4[2] = &v5;
    sub_18FCDD574(1, v0, 0, (void (*)(void))sub_18FCDD2B4, (uint64_t)v4);
    uint64_t v2 = v5;
    *(void *)&v0[v1] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_18FCDA9B0(void *a1, void *a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 8))(&v59, v4, v5);
  uint64_t v6 = v60;
  uint64_t v7 = v61;
  __swift_project_boxed_opaque_existential_1(&v59, v60);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 24))(v56, v6, v7);
  unint64_t v8 = v56[0];
  unint64_t v9 = v56[1];
  uint64_t v10 = v56[2];
  uint64_t v11 = v57;
  if (!v58)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_18FD01FC0();
    sub_18FCA3A48((uint64_t)a1, (uint64_t)v55);
    sub_18FCD9F20((uint64_t)v55, v12);
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    uint64_t v16 = v11;
    char v17 = 0;
LABEL_8:
    sub_18FCDC9B4(v13, v14, v15, v16, v17);
    goto LABEL_9;
  }
  if (v58 == 1)
  {
    if (v57)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v55[7] = 7628147;
      v55[8] = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_18FCDC810(1, v8, v9, v18);
      uint64_t v19 = sub_18FD02610();
      uint64_t v52 = v20;
      uint64_t v53 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_18FCDC8AC(1uLL, v8, v9, v21);
      uint64_t v23 = v22;
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      v55[5] = v53;
      v55[6] = v52;
      v55[0] = v51;
      v55[1] = v23;
      v55[2] = v25;
      v55[3] = v27;
      sub_18FCD6C14();
      swift_bridgeObjectRetain();
      sub_18FD02210();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FD02220();
      swift_bridgeObjectRelease();
      sub_18FD02220();
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_18FD01FC0();
    sub_18FCA3A48((uint64_t)a1, (uint64_t)v55);
    sub_18FCD9F20((uint64_t)v55, v28);
    uint64_t v29 = sub_18FD01FC0();
    sub_18FCA3A48((uint64_t)a1, (uint64_t)v55);
    sub_18FCD9F20((uint64_t)v55, v29);
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    uint64_t v16 = v11;
    char v17 = 1;
    goto LABEL_8;
  }
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  uint64_t v32 = *(void *)(v54 + 16);
  if (!v32) {
    return swift_bridgeObjectRelease();
  }
  for (uint64_t i = (uint64_t *)(v54 + 32); ; ++i)
  {
    uint64_t v35 = *i;
    sub_18FCA3A48((uint64_t)a1, (uint64_t)&v59);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55[0] = *a2;
    uint64_t v37 = v55[0];
    *a2 = 0x8000000000000000;
    unint64_t v39 = sub_18FCA975C(v35);
    uint64_t v40 = *(void *)(v37 + 16);
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      break;
    }
    char v43 = v38;
    if (*(void *)(v37 + 24) >= v42)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        long long v46 = (void *)v55[0];
        if (v38) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_18FCE2B14();
        long long v46 = (void *)v55[0];
        if (v43) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_18FCE0CF0(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_18FCA975C(v35);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_27;
      }
      unint64_t v39 = v44;
      long long v46 = (void *)v55[0];
      if (v43)
      {
LABEL_11:
        uint64_t v34 = v46[7] + 40 * v39;
        __swift_destroy_boxed_opaque_existential_1(v34);
        sub_18FCA370C(&v59, v34);
        goto LABEL_12;
      }
    }
    v46[(v39 >> 6) + 8] |= 1 << v39;
    *(void *)(v46[6] + 8 * v39) = v35;
    sub_18FCA370C(&v59, v46[7] + 40 * v39);
    uint64_t v47 = v46[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_26;
    }
    v46[2] = v49;
LABEL_12:
    *a2 = v46;
    swift_bridgeObjectRelease();
    if (!--v32) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_18FD02D00();
  __break(1u);
  return result;
}

uint64_t AXSettingsGroup.enumerateSettings(_:requiredTraits:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *a3;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v9;
  v10[3] = a1;
  v10[4] = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6A0);
  sub_18FCDB89C((void (*)(void))sub_18FCDCA24, (uint64_t)v10, 1u, a4, v11, a5);
  return swift_release();
}

uint64_t AXBridgedSettings.observe(with:listener:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_18FCDA8E4();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_18FCA975C(a1), (v9 & 1) != 0))
  {
    sub_18FCA3A48(*(void *)(v7 + 56) + 40 * v8, (uint64_t)&v20);
    swift_bridgeObjectRelease();
    if (*((void *)&v21 + 1))
    {
      sub_18FCA370C(&v20, (uint64_t)v23);
      uint64_t v10 = v24;
      uint64_t v11 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 16))(&v20, v10, v11);
      uint64_t v12 = *((void *)&v21 + 1);
      uint64_t v13 = v22;
      __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
      uint64_t v14 = v24;
      uint64_t v15 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v19, v14, v15);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = a3;
      *(void *)(v16 + 24) = a4;
      char v17 = *(void (**)(void *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 24);
      swift_retain();
      v17(v19, sub_18FCDCA68, v16, v12, v13);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      return 1;
    }
  }
  else
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_18FCA7A04((uint64_t)&v20, &qword_1E926C6A8);
  return 0;
}

uint64_t AXBridgedSettings.forwardingTarget(for:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v4 = sub_18FCDA8E4();
    if (*(void *)(v4 + 16) && (unint64_t v5 = sub_18FCA975C(v2), (v6 & 1) != 0))
    {
      sub_18FCA3A48(*(void *)(v4 + 56) + 40 * v5, (uint64_t)&v10);
      swift_bridgeObjectRelease();
      uint64_t v7 = *((void *)&v11 + 1);
      if (*((void *)&v11 + 1))
      {
        unint64_t v8 = __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
        *(void *)(a2 + 24) = v7;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_0, v8, v7);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
      }
    }
    else
    {
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_18FCA7A04((uint64_t)&v10, &qword_1E926C6A8);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void __swiftcall AXBridgedSettings.init()(AXBridgedSettings *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

id AXBridgedSettings.init()()
{
  *(void *)(v0 + OBJC_IVAR___AXBridgedSettings____lazy_storage___selectorTargetMap) = 0;
  v2.super_class = (Class)AXBridgedSettings;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t AXSettingsGroup.forwadingTargets()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x1E4FBC868];
  void v3[2] = &v5;
  AXSettingsGroup.enumerateSettings(_:requiredTraits:)((uint64_t)sub_18FCDCA90, (uint64_t)v3, &v4, a1, a2);
  return v5;
}

uint64_t sub_18FCDB48C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v41, v2, v3);
  uint64_t v4 = v42;
  uint64_t v5 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 24))(v38, v4, v5);
  unint64_t v6 = v38[0];
  unint64_t v7 = v38[1];
  if (v40)
  {
    if (v40 != 1) {
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }
    uint64_t v9 = v38[2];
    uint64_t v8 = v39;
    if (v39)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v36 = 7628147;
      unint64_t v37 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_18FCDC810(1, v6, v7, v11);
      uint64_t v30 = sub_18FD02610();
      uint64_t v31 = v9;
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_18FCDC8AC(1uLL, v6, v7, v14);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v34 = v30;
      uint64_t v35 = v13;
      v32[0] = v15;
      v32[1] = v17;
      void v32[2] = v19;
      uint64_t v33 = v21;
      sub_18FCD6C14();
      swift_bridgeObjectRetain();
      sub_18FD02210();
      uint64_t v9 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FD02220();
      swift_bridgeObjectRelease();
      sub_18FD02220();
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_18FD01FC0();
    uint64_t v23 = a1[3];
    uint64_t v24 = __swift_project_boxed_opaque_existential_1(a1, v23);
    uint64_t v33 = v23;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(boxed_opaque_existential_0, v24, v23);
    sub_18FCD9FD0((uint64_t)v32, v22);
    sub_18FCDC9B4(v6, v7, v9, v8, 1);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  uint64_t v26 = sub_18FD01FC0();
  uint64_t v27 = a1[3];
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(a1, v27);
  uint64_t v42 = v27;
  uint64_t v29 = __swift_allocate_boxed_opaque_existential_0(v41);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v29, v28, v27);
  return sub_18FCD9FD0((uint64_t)v41, v26);
}

void sub_18FCDB76C(void (*a1)(char *), uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  unsigned int outCount = 0;
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v15 = class_copyIvarList(ObjCClassFromMetadata, &outCount);
  if (v15)
  {
    uint64_t v12 = outCount;
    if (outCount)
    {
      char v13 = a3 & 1;
      unint64_t v14 = v15;
      do
      {
        if (object_getIvar(v5, *v14))
        {
          sub_18FD02660();
          swift_unknownObjectRelease();
          sub_18FCD00F0(&v17, v18);
          sub_18FCDD2BC(a1, a2, (uint64_t)v18, v13, a4, a5);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
        }
        ++v14;
        --v12;
      }
      while (v12);
    }
    free(v15);
  }
}

void sub_18FCDB89C(void (*a1)(void), uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  unsigned int v53 = a3;
  uint64_t v67 = a1;
  uint64_t v51 = sub_18FD02600();
  uint64_t v66 = *(char **)(v51 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v51);
  long long v59 = (char *)&v50 - v13;
  uint64_t v60 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_18FD02DD0();
  uint64_t v16 = *(void *)(v52 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v52);
  char v58 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v21((char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C700);
  if (swift_dynamicCast())
  {
    uint64_t v22 = v78;
    uint64_t v23 = v79;
    uint64_t ObjectType = swift_getObjectType();
    sub_18FCDB76C(v67, a2, v53 & 1, ObjectType, a5, v23);

    return;
  }
  uint64_t v57 = v15;
  uint64_t v50 = v16;
  uint64_t v81 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v78);
  v21((char *)boxed_opaque_existential_0, v7, a4);
  uint64_t v26 = v58;
  sub_18FD02DB0();
  sub_18FD02DC0();
  uint64_t v27 = sub_18FD02840();
  swift_release();
  swift_retain();
  uint64_t v63 = v27;
  sub_18FD028D0();
  uint64_t v28 = v53;
  uint64_t v29 = a4;
  uint64_t v30 = v51;
  uint64_t v31 = v59;
  if (v82)
  {
    uint64_t v32 = &v77;
    uint64_t v62 = &v80;
    uint64_t v65 = &v75;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56);
    uint64_t v56 = (void (**)(char *, uint64_t))(v66 + 8);
    uint64_t v55 = (void (**)(char *, char *, uint64_t))(v60 + 32);
    uint64_t v54 = (void (**)(char *, uint64_t))(v60 + 8);
    uint64_t v60 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v66 = &v77;
    uint64_t v64 = a2;
    do
    {
      uint64_t v36 = (uint64_t)v78;
      uint64_t v35 = v79;
      v76[0] = v78;
      v76[1] = v79;
      sub_18FCD00F0(v62, v32);
      uint64_t v73 = v36;
      uint64_t v74 = v35;
      sub_18FCA3724((uint64_t)v32, (uint64_t)v65);
      swift_bridgeObjectRetain();
      char v37 = swift_dynamicCast();
      char v38 = *v61;
      if (v37)
      {
        v38(v31, 0, 1, a5);
        uint64_t v39 = v57;
        (*v55)(v57, v31, a5);
        uint64_t v40 = v30;
        uint64_t v41 = a5;
        uint64_t v42 = v29;
        uint64_t v43 = a6;
        uint64_t v44 = v28;
        char v45 = v67;
        v67(v39);
        long long v46 = v45;
        uint64_t v28 = v44;
        a6 = v43;
        uint64_t v29 = v42;
        a5 = v41;
        uint64_t v30 = v40;
        uint64_t v31 = v59;
        uint64_t v47 = v39;
        uint64_t v26 = v58;
        (*v54)(v47, a5);
        if ((v28 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        v38(v31, 1, 1, a5);
        (*v56)(v31, v30);
        long long v46 = v67;
        if ((v28 & 1) == 0)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      uint64_t v73 = v36;
      uint64_t v74 = v35;
      sub_18FCA3724((uint64_t)v66, (uint64_t)v65);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6F0);
      if (swift_dynamicCast())
      {
        sub_18FCA370C(v68, (uint64_t)v70);
        uint64_t v48 = v71;
        uint64_t v49 = v72;
        __swift_project_boxed_opaque_existential_1(v70, v71);
        uint64_t v33 = v64;
        sub_18FCDB89C(v67, v64, 1, v48, a5, v49);
        long long v46 = v67;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
        goto LABEL_7;
      }
      uint64_t v69 = 0;
      memset(v68, 0, sizeof(v68));
      sub_18FCA7A04((uint64_t)v68, &qword_1E926C6F8);
LABEL_6:
      uint64_t v33 = v64;
LABEL_7:
      uint64_t v34 = (uint64_t)v66;
      sub_18FCDD2BC(v46, v33, v66, v28 & 1, v29, a5, a6);
      sub_18FCA7A04((uint64_t)v76, &qword_1E926C6E8);
      sub_18FD028D0();
      uint64_t v32 = (char *)v34;
    }
    while (v82);
  }
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v52);
}

uint64_t sub_18FCDBF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_18FCA3A48(a1, (uint64_t)v16);
  if (!a2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return a3(a1);
  }
  uint64_t v6 = v17;
  uint64_t v7 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v13, v6, v7);
  uint64_t v8 = v14;
  uint64_t v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 32))(&v12, v8, v9);
  uint64_t v10 = a2 & ~v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if (!v10) {
    return a3(a1);
  }
  return result;
}

uint64_t AXSettingsGroup.allMembersOfType<A>(_:recursive:)(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_18FD02060();
  void v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = &v11;
  sub_18FCDB89C((void (*)(void))sub_18FCDCA98, (uint64_t)v10, a2, a3, a4, a5);
  return v11;
}

uint64_t sub_18FCDC110(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_18FD02370();
  return sub_18FD02350();
}

Swift::Void __swiftcall AXSettingsGroup.resetAllSettings()()
{
  uint64_t v2 = 0;
  AXSettingsGroup.enumerateSettings(_:requiredTraits:)((uint64_t)sub_18FCDC228, 0, &v2, v0, v1);
}

uint64_t sub_18FCDC228(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t sub_18FCDC278()
{
  Class v3 = (Class)type metadata accessor for AXCoreSettingsStore();
  uint64_t v4 = &protocol witness table for AXCoreSettingsStore;
  *(void *)&long long v2 = objc_msgSend(objc_allocWithZone(v3), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C718);
  uint64_t v0 = swift_allocObject();
  sub_18FD01DC0();
  uint64_t result = sub_18FCA370C(&v2, v0 + 16);
  qword_1E926C698 = v0;
  return result;
}

uint64_t static AXPreferenceContext.$store.getter()
{
  if (qword_1E926BF38 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t String.axLowercasedFirstLetter.getter(unint64_t a1, unint64_t a2)
{
  return sub_18FCDC388(a1, a2, MEMORY[0x1E4FBB758]);
}

uint64_t sub_18FCDC388(unint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_18FCDC810(1, a1, a2, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3(v7, v9, v11, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18FCDC8AC(1uLL, a1, a2, v15);
  swift_bridgeObjectRelease();
  sub_18FCD6C14();
  swift_bridgeObjectRetain();
  sub_18FD02210();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_18FCDC4A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(self, sel_currentThread);
  id v5 = objc_msgSend(v4, sel_threadDictionary);

  *(void *)&v9[0] = sub_18FD01D80();
  *((void *)&v9[0] + 1) = v6;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_18FD02CE0(), v9[0]);
  swift_unknownObjectRelease();

  if (v7)
  {
    sub_18FD02660();
    swift_unknownObjectRelease();
    sub_18FCD00F0(v9, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C708);
  if (swift_dynamicCast())
  {
    sub_18FCA370C(v9, a1);
  }
  else
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_18FCA3A48(v2 + 16, a1);
    sub_18FCA7A04((uint64_t)v9, &qword_1E926C710);
  }
  return swift_bridgeObjectRelease();
}

double sub_18FCDC630@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Class v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_18FCA975C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *Class v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18FCE2B14();
      uint64_t v9 = v11;
    }
    sub_18FCA370C((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_18FCE21DC(v6, v9);
    *Class v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_18FCDC724@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  Class v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_18FCA975C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *Class v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18FCE2CDC();
      uint64_t v9 = v11;
    }
    sub_18FCD00F0((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_18FCE23A4(v6, v9);
    *Class v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_18FCDC810(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_18FD02200();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
}

uint64_t sub_18FCDC8AC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
  }
  unint64_t v4 = a3;
  unint64_t v5 = a2;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v7 = 11;
  }
  unint64_t v8 = v7 | (v6 << 16);
  a1 = sub_18FD02200();
  if (a2) {
    a1 = v8;
  }
  if (4 * v6 < a1 >> 14) {
    goto LABEL_14;
  }
  a2 = v8;
  a3 = v5;
  a4 = v4;
  return MEMORY[0x1F4183BA0](a1, a2, a3, a4);
}

uint64_t sub_18FCDC95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCDC9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FCDCA14()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_18FCDCA24(uint64_t a1)
{
  return sub_18FCDBF8C(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_18FCDCA30()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_18FCDCA68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_18FCDCA90(void *a1)
{
  return sub_18FCDB48C(a1);
}

uint64_t sub_18FCDCA98(uint64_t a1)
{
  return sub_18FCDC110(a1);
}

unint64_t sub_18FCDCAA8()
{
  unint64_t result = qword_1E926C6B8;
  if (!qword_1E926C6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C6B8);
  }
  return result;
}

unint64_t sub_18FCDCB00()
{
  unint64_t result = qword_1E926C6C0;
  if (!qword_1E926C6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C6C0);
  }
  return result;
}

unint64_t sub_18FCDCB58()
{
  unint64_t result = qword_1E926C6C8;
  if (!qword_1E926C6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C6C8);
  }
  return result;
}

unint64_t sub_18FCDCBB0()
{
  unint64_t result = qword_1E926C6D0;
  if (!qword_1E926C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C6D0);
  }
  return result;
}

unint64_t sub_18FCDCC04(uint64_t a1)
{
  unint64_t result = sub_18FCDCC2C();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = result;
  return result;
}

unint64_t sub_18FCDCC2C()
{
  unint64_t result = qword_1E926C6D8;
  if (!qword_1E926C6D8)
  {
    type metadata accessor for AXBridgedSettings();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C6D8);
  }
  return result;
}

unint64_t type metadata accessor for AXBridgedSettings()
{
  unint64_t result = qword_1E926C6E0;
  if (!qword_1E926C6E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E926C6E0);
  }
  return result;
}

uint64_t dispatch thunk of AXSettingsKey.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AXSettingsKey.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AXSettingsKey.objcMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AXSettingsKey.traits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for AXSettingsTrait()
{
  return &type metadata for AXSettingsTrait;
}

uint64_t destroy for AXSettingsObjCMode(uint64_t a1)
{
  return sub_18FCDC9B4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for AXSettingsObjCMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_18FCDC95C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AXSettingsObjCMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_18FCDC95C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_18FCDC9B4(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AXSettingsObjCMode(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_18FCDC9B4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXSettingsObjCMode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AXSettingsObjCMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_18FCDCEFC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_18FCDCF14(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AXSettingsObjCMode()
{
  return &type metadata for AXSettingsObjCMode;
}

uint64_t destroy for AXConcreteKey(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  return sub_18FCDC9B4(v2, v3, v4, v5, v6);
}

uint64_t initializeWithCopy for AXConcreteKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  char v10 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FCDC95C(v6, v7, v8, v9, v10);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for AXConcreteKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  char v8 = *(unsigned char *)(a2 + 64);
  sub_18FCDC95C(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v6;
  *(void *)(a1 + 56) = v7;
  char v13 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v8;
  sub_18FCDC9B4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for AXConcreteKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v11;
  char v12 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v6;
  sub_18FCDC9B4(v7, v8, v9, v10, v12);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXConcreteKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXConcreteKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXConcreteKey()
{
  return &type metadata for AXConcreteKey;
}

ValueMetadata *type metadata accessor for AXPreferenceContext()
{
  return &type metadata for AXPreferenceContext;
}

uint64_t dispatch thunk of AXSettingsStore.value(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AXSettingsStore.set(value:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AXSettingsStore.observe(key:onChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_18FCDD26C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCDD2A4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_18FCDD2B4(void *a1)
{
  return sub_18FCDA9B0(a1, *(void **)(v1 + 16));
}

uint64_t sub_18FCDD2BC(void (*a1)(char *), uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_18FD02600();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCA3724(a3, (uint64_t)v27);
  char v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v19)
  {
    v20(v15, 0, 1, a6);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a6);
    a1(v18);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, a6);
    if ((a4 & 1) == 0) {
      return result;
    }
  }
  else
  {
    v20(v15, 1, 1, a6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if ((a4 & 1) == 0) {
      return result;
    }
  }
  sub_18FCA3724(a3, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6F0);
  if (swift_dynamicCast())
  {
    sub_18FCA370C(v24, (uint64_t)v27);
    uint64_t v22 = v28;
    uint64_t v23 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    sub_18FCDB89C((void (*)(void))a1, a2, 1u, v22, a6, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    uint64_t v25 = 0;
    memset(v24, 0, sizeof(v24));
    return sub_18FCA7A04((uint64_t)v24, &qword_1E926C6F8);
  }
}

void sub_18FCDD574(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  void (*v35)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  long long v63;
  long long v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  long long v71;
  long long v72;
  uint64_t v73;
  void v74[2];
  uint64_t v75;
  void *v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t vars8;

  uint64_t v10 = sub_18FD02DD0();
  unsigned int v53 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  void v13[3] = a4;
  void v13[4] = a5;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v14 = a2;
  }
  else {
    uint64_t v14 = 0;
  }
  if (!v14)
  {
    uint64_t v52 = v10;
    uint64_t v79 = type metadata accessor for AXBridgedSettings();
    unint64_t v76 = a2;
    id v19 = a2;
    sub_18FD02DB0();
    sub_18FD02DC0();
    uint64_t v20 = sub_18FD02840();
    swift_release();
    swift_retain();
    char v58 = v20;
    sub_18FD028D0();
    uint64_t v21 = v12;
    if (!v80)
    {
LABEL_36:
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v52);
      swift_release();
      return;
    }
    uint64_t v61 = &v75;
    uint64_t v57 = &v78;
    long long v59 = &v68;
    uint64_t v22 = MEMORY[0x1E4FBC840];
    uint64_t v56 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v55 = v21;
    uint64_t v54 = a3;
    while (1)
    {
      uint64_t v23 = v22;
      uint64_t v25 = v76;
      uint64_t v24 = v77;
      v74[0] = v76;
      v74[1] = v77;
      uint64_t v26 = v61;
      sub_18FCD00F0(v57, v61);
      uint64_t v66 = v25;
      uint64_t v67 = v24;
      sub_18FCA3724((uint64_t)v26, (uint64_t)v59);
      swift_bridgeObjectRetain();
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6A0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v65 = 0;
        uint64_t v64 = 0u;
        uint64_t v63 = 0u;
        sub_18FCA7A04((uint64_t)&v63, &qword_1E926C6A8);
        if ((a1 & 1) == 0) {
          goto LABEL_17;
        }
        goto LABEL_21;
      }
      sub_18FCA370C(&v63, (uint64_t)&v71);
      sub_18FCA3A48((uint64_t)&v71, (uint64_t)&v66);
      if (!a3) {
        break;
      }
      uint64_t v27 = a4;
      uint64_t v28 = a1;
      uint64_t v29 = a5;
      uint64_t v30 = v13;
      uint64_t v31 = v69;
      uint64_t v32 = v70;
      __swift_project_boxed_opaque_existential_1(&v66, v69);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v63, v31, v32);
      uint64_t v33 = *((void *)&v64 + 1);
      uint64_t v34 = v65;
      __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
      uint64_t v35 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 32);
      uint64_t v36 = v33;
      uint64_t v21 = v55;
      char v37 = v34;
      uint64_t v13 = v30;
      a5 = v29;
      a1 = v28;
      a4 = v27;
      a3 = v54;
      v35(&v62, v36, v37);
      char v38 = a3 & ~v62;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      if (!v38) {
        goto LABEL_19;
      }
LABEL_20:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      if ((a1 & 1) == 0)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v22 = v23;
        goto LABEL_24;
      }
LABEL_21:
      uint64_t v66 = v25;
      uint64_t v67 = v24;
      sub_18FCA3724((uint64_t)v61, (uint64_t)v59);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6F0);
      uint64_t v22 = v23;
      if (swift_dynamicCast())
      {
        sub_18FCA370C(&v63, (uint64_t)&v71);
        uint64_t v39 = *((void *)&v72 + 1);
        uint64_t v40 = v73;
        __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
        uint64_t v41 = v60;
        sub_18FCDB89C((void (*)(void))sub_18FCDDD08, (uint64_t)v13, 1u, v39, v60, v40);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
        goto LABEL_25;
      }
      uint64_t v65 = 0;
      uint64_t v64 = 0u;
      uint64_t v63 = 0u;
      sub_18FCA7A04((uint64_t)&v63, &qword_1E926C6F8);
LABEL_24:
      uint64_t v41 = v60;
LABEL_25:
      sub_18FCA3724((uint64_t)v61, (uint64_t)&v63);
      if (!swift_dynamicCast())
      {
        uint64_t v73 = 0;
        uint64_t v71 = 0u;
        uint64_t v72 = 0u;
        sub_18FCA7A04((uint64_t)&v71, &qword_1E926C6A8);
        if (a1) {
          goto LABEL_34;
        }
        goto LABEL_11;
      }
      sub_18FCA370C(&v71, (uint64_t)&v66);
      sub_18FCA3A48((uint64_t)&v66, (uint64_t)&v71);
      if (!a3)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
LABEL_32:
        a4(&v66);
        goto LABEL_33;
      }
      uint64_t v42 = *((void *)&v72 + 1);
      uint64_t v43 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, *((uint64_t *)&v72 + 1));
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v43 + 8))(&v63, v42, v43);
      uint64_t v44 = *((void *)&v64 + 1);
      char v45 = v65;
      __swift_project_boxed_opaque_existential_1(&v63, *((uint64_t *)&v64 + 1));
      long long v46 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v45 + 32);
      uint64_t v47 = v45;
      uint64_t v21 = v55;
      v46(&v62, v44, v47);
      uint64_t v48 = a3 & ~v62;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      if (!v48) {
        goto LABEL_32;
      }
LABEL_33:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      if (a1)
      {
LABEL_34:
        sub_18FCA3724((uint64_t)v61, (uint64_t)&v63);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6F0);
        if (swift_dynamicCast())
        {
          sub_18FCA370C(&v71, (uint64_t)&v66);
          uint64_t v49 = v69;
          uint64_t v50 = v70;
          __swift_project_boxed_opaque_existential_1(&v66, v69);
          sub_18FCDB89C((void (*)(void))sub_18FCDDD08, (uint64_t)v13, 1u, v49, v41, v50);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
        }
        else
        {
          uint64_t v73 = 0;
          uint64_t v71 = 0u;
          uint64_t v72 = 0u;
          sub_18FCA7A04((uint64_t)&v71, &qword_1E926C6F8);
        }
      }
LABEL_11:
      sub_18FCA7A04((uint64_t)v74, &qword_1E926C6E8);
      sub_18FD028D0();
      if (!v80) {
        goto LABEL_36;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
LABEL_19:
    a4(&v71);
    goto LABEL_20;
  }
  uint64_t v15 = (uint64_t)v13;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v61 = a2;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C6A0);
  sub_18FCDB76C((void (*)(char *))sub_18FCDDD08, v15, a1 & 1, ObjectType, v17);
  swift_release();
  uint64_t v18 = v61;
}

uint64_t sub_18FCDDCF4()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

id AXCoreSettingsStore.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t sub_18FCDDD44()
{
  return swift_deallocClassInstance();
}

id sub_18FCDDD7C()
{
  id v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_suiteLock) + 16);
  os_unfair_lock_lock(v1);
  sub_18FCDF280(&v4);
  os_unfair_lock_unlock(v1);
  id v2 = *(id *)(v4 + 16);
  swift_release();
  return v2;
}

uint64_t sub_18FCDDE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_cachedSuites);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(*v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_18FCA963C(a2, a3);
    if (v10)
    {
      id v11 = *(id *)(*(void *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v12 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_18FD02120();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithSuiteName_, v13);

  if (!v14) {
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CB18]), sel_init);
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v11 = v14;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  sub_18FCFD17C((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v7 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_8:
  type metadata accessor for AXCoreSettingsStore.SuiteSmuggler();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v11;
  *a4 = result;
  return result;
}

double sub_18FCDDFDC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  id v6 = sub_18FCDDD7C();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  unint64_t v9 = (void *)sub_18FD02120();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v6, sel_valueForKey_, v9);

  if (v10)
  {
    sub_18FD02660();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v12, 0, sizeof(v12));
  }
  sub_18FCDE14C((uint64_t)v12, (uint64_t)v13);
  if (!v14)
  {
    sub_18FCA2480((uint64_t)v13);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_18FCDE14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCDE1B4(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  id v6 = sub_18FCDDD7C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    sub_18FCDF1C0(a1, (uint64_t)&v15, &qword_1E926B830);
    if (v17)
    {
      uint64_t v8 = sub_18FD026A0();
      sub_18FCA36B8((uint64_t)&v15);
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    id v11 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setObject_forKey_, v8, v11);
    swift_unknownObjectRelease();

    unint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_18FD02750();
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xD000000000000010;
    unint64_t v16 = 0x800000018FD0FF70;
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    sub_18FD02220();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_18FD021A0();
    swift_bridgeObjectRelease();
    notify_post((const char *)(v14 + 32));

    return swift_release();
  }
  return result;
}

uint64_t sub_18FCDE388()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
  uint64_t v2 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_key);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCDE44C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
  uint64_t v4 = sub_18FD01DD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

void sub_18FCDE4C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  id v10 = sub_18FCDDD7C();
  swift_bridgeObjectRelease();
  if (v10)
  {
    sub_18FCA3A48((uint64_t)a1, (uint64_t)v25);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a3;
    type metadata accessor for AXCoreSettingsStore.Observation();
    uint64_t v12 = (char *)swift_allocObject();
    swift_retain();
    sub_18FD01DC0();
    uint64_t v13 = sub_18FCA370C(v25, (uint64_t)&v12[OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_key]);
    uint64_t v14 = (uint64_t (**)())&v12[OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_block];
    *uint64_t v14 = sub_18FCDCA68;
    v14[1] = (uint64_t (*)())v11;
    uint64_t v15 = MEMORY[0x1F4188790](v13);
    MEMORY[0x1F4188790](v15);
    uint64_t v17 = v16 + 4;
    os_unfair_lock_lock(v16 + 4);
    sub_18FCDED5C();
    os_unfair_lock_unlock(v17);
    uint64_t v18 = a1[3];
    uint64_t v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    uint64_t v20 = (void *)sub_18FD02120();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_addObserver_forKeyPath_options_context_, v4, v20, 3, v12);

    *(void *)&v25[0] = 0;
    *((void *)&v25[0] + 1) = 0xE000000000000000;
    sub_18FD02750();
    swift_bridgeObjectRelease();
    *(void *)&v25[0] = 0xD000000000000010;
    *((void *)&v25[0] + 1) = 0x800000018FD0FF70;
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
    sub_18FD02220();
    swift_bridgeObjectRelease();
    uint64_t v23 = CFNotificationCenterGetDarwinNotifyCenter();
    uint64_t v24 = (__CFString *)sub_18FD02120();
    swift_bridgeObjectRelease();
    CFNotificationCenterAddObserver(v23, v12, (CFNotificationCallback)sub_18FCDE920, v24, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    swift_release();
  }
}

uint64_t sub_18FCDE7C8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t type metadata accessor for AXCoreSettingsStore.Observation()
{
  uint64_t result = qword_1E926C740;
  if (!qword_1E926C740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18FCDE84C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
  uint64_t v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observations);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  sub_18FCFD2EC(a2, v3, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v7;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_18FCDE904()
{
  return sub_18FCDE84C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_18FCDE920(void *result, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    uint64_t v7 = *(void (**)(uint64_t))(a2 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_block);
    id v8 = result;
    id v9 = a3;
    id v10 = a5;
    uint64_t v11 = swift_retain();
    v7(v11);

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_18FCDE9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observations);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *v5;
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_18FCA97C8(a2);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
      swift_retain();
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  *a3 = v10;
  return result;
}

id AXCoreSettingsStore.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_cachedSuites;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_18FCEF9B4(MEMORY[0x1E4FBC860]);
  uint64_t v3 = OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_suiteLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C180);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(void *)&v2[v3] = v4;
  uint64_t v5 = OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observationLock;
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)&v2[v5] = v6;
  *(void *)&v2[OBJC_IVAR____TtC15AXCoreUtilities19AXCoreSettingsStore_observations] = MEMORY[0x1E4FBC868];

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for AXCoreSettingsStore();
  return objc_msgSendSuper2(&v8, sel_init);
}

id AXCoreSettingsStore.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AXCoreSettingsStore();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_18FCDECF0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18FCDDFDC(a1, a2);
}

uint64_t sub_18FCDED14(uint64_t a1, void *a2)
{
  return sub_18FCDE1B4(a1, a2);
}

void sub_18FCDED38(void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_18FCDED5C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_18FCDED84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    sub_18FCDF1C0(a1, (uint64_t)v17, &qword_1E926B858);
    if (v17[3])
    {
      sub_18FCDF224();
      if (swift_dynamicCast())
      {

        if (a3)
        {
          uint64_t v5 = sub_18FD01DD0();
          uint64_t v6 = *(void *)(v5 - 8);
          MEMORY[0x1F4188790](v5);
          objc_super v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v9 = a3 + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_id;
          uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
          swift_retain();
          v10(v8, v9, v5);
          uint64_t v11 = swift_release();
          uint64_t v12 = MEMORY[0x1F4188790](v11);
          v16[-2] = v3;
          v16[-1] = v8;
          MEMORY[0x1F4188790](v12);
          v16[-2] = sub_18FCDF264;
          v16[-1] = v13;
          uint64_t v15 = v14 + 4;
          os_unfair_lock_lock(v14 + 4);
          sub_18FCDF280(v17);
          os_unfair_lock_unlock(v15);
          if (v17[0])
          {
            (*(void (**)(void))(v17[0] + OBJC_IVAR____TtCC15AXCoreUtilities19AXCoreSettingsStore11Observation_block))();
            swift_release();
          }
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
      }
    }
    else
    {
      sub_18FCA2480((uint64_t)v17);
    }
  }
}

uint64_t type metadata accessor for AXCoreSettingsStore()
{
  return self;
}

uint64_t method lookup function for AXCoreSettingsStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXCoreSettingsStore);
}

uint64_t dispatch thunk of AXCoreSettingsStore.value(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AXCoreSettingsStore.set(value:forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AXCoreSettingsStore.observe(key:onChange:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t type metadata accessor for AXCoreSettingsStore.SuiteSmuggler()
{
  return self;
}

uint64_t sub_18FCDF0B4()
{
  return type metadata accessor for AXCoreSettingsStore.Observation();
}

uint64_t sub_18FCDF0BC()
{
  uint64_t result = sub_18FD01DD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_18FCDF168()
{
  unint64_t result = qword_1E926BFC8;
  if (!qword_1E926BFC8)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926BFC8);
  }
  return result;
}

uint64_t sub_18FCDF1C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_18FCDF224()
{
  unint64_t result = qword_1E926C750;
  if (!qword_1E926C750)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E926C750);
  }
  return result;
}

uint64_t sub_18FCDF264@<X0>(void *a1@<X8>)
{
  return sub_18FCDE9B8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_18FCDF280@<X0>(void *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_18FCDF2C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCDDE14(v1[2], v1[3], v1[4], a1);
}

void __swiftcall AudioEffectConfiguration._bridgeToObjectiveC()(AXAudioEffectConfiguration *__return_ptr retstr)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)AXAudioEffectConfiguration), sel_init);
  uint64_t v3 = type metadata accessor for AudioEffectConfiguration();
  objc_msgSend(v2, sel_setEnabled_, *(unsigned __int8 *)(v1 + *(int *)(v3 + 32)));
  uint64_t v4 = MEMORY[0x1E4FBC860];
  sub_18FCEF9C0(MEMORY[0x1E4FBC860]);
  sub_18FCA2634(0, &qword_1E926C2A0);
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v6 = MEMORY[0x1E4FBB1B0];
  uint64_t v7 = (void *)sub_18FD02080();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setParameters_, v7);

  sub_18FCEF9C0(v4);
  objc_super v8 = (void *)sub_18FD02080();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setProperties_, v8);

  uint64_t v94 = v3;
  uint64_t v95 = v1;
  uint64_t v9 = *(void *)(v1 + *(int *)(v3 + 24));
  uint64_t v96 = v9 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v9 + 64);
  int64_t v98 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v100 = v9;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  id v104 = v2;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_23;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_78;
    }
    if (v18 >= v98) {
      break;
    }
    unint64_t v19 = *(void *)(v96 + 8 * v18);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v98) {
        break;
      }
      unint64_t v19 = *(void *)(v96 + 8 * v13);
      if (!v19)
      {
        int64_t v13 = v18 + 2;
        if (v18 + 2 >= v98) {
          break;
        }
        unint64_t v19 = *(void *)(v96 + 8 * v13);
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v98) {
            break;
          }
          unint64_t v19 = *(void *)(v96 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v13 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_82;
              }
              if (v13 >= v98) {
                goto LABEL_38;
              }
              unint64_t v19 = *(void *)(v96 + 8 * v13);
              ++v20;
              if (v19) {
                goto LABEL_22;
              }
            }
          }
          int64_t v13 = v20;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_23:
    uint64_t v21 = (uint64_t *)(*(void *)(v100 + 48) + 16 * v17);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    int v24 = *(_DWORD *)(*(void *)(v100 + 56) + 4 * v17);
    id v25 = objc_allocWithZone(NSNumber);
    swift_bridgeObjectRetain();
    LODWORD(v26) = v24;
    id v27 = objc_msgSend(v25, sel_initWithFloat_, v26);
    id v28 = objc_msgSend(v2, sel_parameters);
    uint64_t v29 = (void *)sub_18FD02090();

    if (v27)
    {
      unint64_t v102 = v12;
      int64_t v30 = v13;
      uint64_t v31 = v6;
      uint64_t v32 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v35 = sub_18FCA963C(v22, v23);
      uint64_t v36 = v29[2];
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      char v39 = v34;
      if (v29[3] >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_18FCE3178(&qword_1E926C798);
        }
      }
      else
      {
        sub_18FCE16E8(v38, isUniquelyReferenced_nonNull_native, &qword_1E926C798);
        unint64_t v40 = sub_18FCA963C(v22, v23);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_84;
        }
        unint64_t v35 = v40;
      }
      uint64_t v5 = v32;
      uint64_t v6 = v31;
      if (v39)
      {
        uint64_t v14 = v29[7];

        *(void *)(v14 + 8 * v35) = v27;
        int64_t v13 = v30;
      }
      else
      {
        v29[(v35 >> 6) + 8] |= 1 << v35;
        long long v46 = (uint64_t *)(v29[6] + 16 * v35);
        *long long v46 = v22;
        v46[1] = v23;
        *(void *)(v29[7] + 8 * v35) = v27;
        uint64_t v47 = v29[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_80;
        }
        int64_t v13 = v30;
        v29[2] = v49;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v12 = v102;
      id v2 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_18FCA963C(v22, v23);
      char v44 = v43;
      swift_bridgeObjectRelease();
      if (v44)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_18FCE3178(&qword_1E926C798);
        }
        swift_bridgeObjectRelease();
        char v45 = *(void **)(v29[7] + 8 * v42);
        sub_18FCE2560(v42, (uint64_t)v29);

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v15 = (void *)sub_18FD02080();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setParameters_, v15);
  }
LABEL_38:
  swift_release();
  uint64_t v50 = *(void *)(v95 + *(int *)(v94 + 28));
  uint64_t v51 = *(void *)(v50 + 64);
  uint64_t v97 = v50 + 64;
  uint64_t v52 = 1 << *(unsigned char *)(v50 + 32);
  uint64_t v53 = -1;
  if (v52 < 64) {
    uint64_t v53 = ~(-1 << v52);
  }
  unint64_t v54 = v53 & v51;
  int64_t v99 = (unint64_t)(v52 + 63) >> 6;
  uint64_t v101 = *(void *)(v95 + *(int *)(v94 + 28));
  swift_bridgeObjectRetain();
  int64_t v55 = 0;
  uint64_t v56 = MEMORY[0x1E4FBB1A0];
  uint64_t v57 = MEMORY[0x1E4FBB1B0];
  while (1)
  {
    if (v54)
    {
      unint64_t v60 = __clz(__rbit64(v54));
      v54 &= v54 - 1;
      unint64_t v61 = v60 | (v55 << 6);
      goto LABEL_60;
    }
    int64_t v62 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      goto LABEL_79;
    }
    if (v62 >= v99)
    {
LABEL_75:
      swift_release();
      uint64_t v92 = (void *)sub_18FD01D90();
      objc_msgSend(v2, sel_setIdentifier_, v92);

      v93 = (void *)sub_18FD02120();
      objc_msgSend(v2, sel_setEffectName_, v93);

      return;
    }
    unint64_t v63 = *(void *)(v97 + 8 * v62);
    ++v55;
    if (!v63)
    {
      int64_t v55 = v62 + 1;
      if (v62 + 1 >= v99) {
        goto LABEL_75;
      }
      unint64_t v63 = *(void *)(v97 + 8 * v55);
      if (!v63)
      {
        int64_t v55 = v62 + 2;
        if (v62 + 2 >= v99) {
          goto LABEL_75;
        }
        unint64_t v63 = *(void *)(v97 + 8 * v55);
        if (!v63) {
          break;
        }
      }
    }
LABEL_59:
    unint64_t v54 = (v63 - 1) & v63;
    unint64_t v61 = __clz(__rbit64(v63)) + (v55 << 6);
LABEL_60:
    uint64_t v65 = (uint64_t *)(*(void *)(v101 + 48) + 16 * v61);
    uint64_t v66 = *v65;
    uint64_t v67 = v65[1];
    uint64_t v68 = *(unsigned int *)(*(void *)(v101 + 56) + 4 * v61);
    id v69 = objc_allocWithZone(NSNumber);
    swift_bridgeObjectRetain();
    id v70 = objc_msgSend(v69, sel_initWithUnsignedInt_, v68);
    id v71 = objc_msgSend(v2, sel_properties);
    uint64_t v72 = (void *)sub_18FD02090();

    if (v70)
    {
      unint64_t v103 = v54;
      int64_t v73 = v55;
      uint64_t v74 = v57;
      uint64_t v75 = v56;
      char v76 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v78 = sub_18FCA963C(v66, v67);
      uint64_t v79 = v72[2];
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80)) {
        goto LABEL_77;
      }
      char v82 = v77;
      if (v72[3] >= v81)
      {
        if ((v76 & 1) == 0) {
          sub_18FCE3178(&qword_1E926C798);
        }
      }
      else
      {
        sub_18FCE16E8(v81, v76, &qword_1E926C798);
        unint64_t v83 = sub_18FCA963C(v66, v67);
        if ((v82 & 1) != (v84 & 1)) {
          goto LABEL_84;
        }
        unint64_t v78 = v83;
      }
      uint64_t v56 = v75;
      uint64_t v57 = v74;
      if (v82)
      {
        uint64_t v58 = v72[7];

        *(void *)(v58 + 8 * v7_Block_object_dispose(&a9, 8) = v70;
        int64_t v55 = v73;
      }
      else
      {
        v72[(v78 >> 6) + 8] |= 1 << v78;
        v89 = (uint64_t *)(v72[6] + 16 * v78);
        uint64_t *v89 = v66;
        v89[1] = v67;
        *(void *)(v72[7] + 8 * v7_Block_object_dispose(&a9, 8) = v70;
        uint64_t v90 = v72[2];
        BOOL v48 = __OFADD__(v90, 1);
        uint64_t v91 = v90 + 1;
        if (v48) {
          goto LABEL_81;
        }
        int64_t v55 = v73;
        v72[2] = v91;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v54 = v103;
      id v2 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v85 = sub_18FCA963C(v66, v67);
      char v87 = v86;
      swift_bridgeObjectRelease();
      if (v87)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_18FCE3178(&qword_1E926C798);
        }
        swift_bridgeObjectRelease();
        v88 = *(void **)(v72[7] + 8 * v85);
        sub_18FCE2560(v85, (uint64_t)v72);

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    long long v59 = (void *)sub_18FD02080();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setProperties_, v59);
  }
  int64_t v64 = v62 + 3;
  if (v64 >= v99) {
    goto LABEL_75;
  }
  unint64_t v63 = *(void *)(v97 + 8 * v64);
  if (v63)
  {
    int64_t v55 = v64;
    goto LABEL_59;
  }
  while (1)
  {
    int64_t v55 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      break;
    }
    if (v55 >= v99) {
      goto LABEL_75;
    }
    unint64_t v63 = *(void *)(v97 + 8 * v55);
    ++v64;
    if (v63) {
      goto LABEL_59;
    }
  }
LABEL_83:
  __break(1u);
LABEL_84:
  sub_18FD02D00();
  __break(1u);
}

uint64_t static AudioEffectConfiguration._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t a2)
{
  uint64_t result = _s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_18FD02890();
    __break(1u);
  }
  return result;
}

uint64_t static AudioEffectConfiguration._unconditionallyBridgeFromObjectiveC(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C758);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  if (a1)
  {
    uint64_t v10 = type metadata accessor for AudioEffectConfiguration();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    id v12 = a1;
    if (_s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(v12, (uint64_t)v9))
    {
      sub_18FCE3D54((uint64_t)v9, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
      {
        sub_18FCE3DBC((uint64_t)v9);

        return sub_18FCE3E1C((uint64_t)v7, a2);
      }
      sub_18FCE3DBC((uint64_t)v7);
    }
  }
  uint64_t result = sub_18FD02890();
  __break(1u);
  return result;
}

uint64_t sub_18FCDFE7C(void *a1, uint64_t a2)
{
  uint64_t result = _s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(a1, a2);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_18FD02890();
    __break(1u);
  }
  return result;
}

id AXAudioEffectConfiguration.identifier.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___AXAudioEffectConfiguration_identifier);
  swift_beginAccess();
  id v2 = *v1;
  return v2;
}

void AXAudioEffectConfiguration.identifier.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR___AXAudioEffectConfiguration_identifier);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t AXAudioEffectConfiguration.effectName.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___AXAudioEffectConfiguration_effectName);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AXAudioEffectConfiguration.effectName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___AXAudioEffectConfiguration_effectName);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_18FCE01EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_effectName);
  uint64_t v4 = sub_18FD02150();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t AXAudioEffectConfiguration.enabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AXAudioEffectConfiguration_enabled);
  swift_beginAccess();
  return *v1;
}

uint64_t AXAudioEffectConfiguration.enabled.setter(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___AXAudioEffectConfiguration_enabled);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t AXAudioEffectConfiguration.properties.getter()
{
  return sub_18FCB04C8();
}

uint64_t AXAudioEffectConfiguration.properties.setter(uint64_t a1)
{
  return sub_18FCB0590(a1, &OBJC_IVAR___AXAudioEffectConfiguration_properties);
}

id sub_18FCE03A8()
{
  swift_beginAccess();
  sub_18FCA2634(0, &qword_1E926C2A0);
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_18FD02080();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AXAudioEffectConfiguration.parameters.getter()
{
  return sub_18FCB04C8();
}

uint64_t sub_18FCE0460(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_18FCA2634(0, &qword_1E926C2A0);
  uint64_t v6 = sub_18FD02090();
  uint64_t v7 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v7 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t AXAudioEffectConfiguration.parameters.setter(uint64_t a1)
{
  return sub_18FCB0590(a1, &OBJC_IVAR___AXAudioEffectConfiguration_parameters);
}

void sub_18FCE0504(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  sub_18FCA2634(0, &qword_1E926C2A0);
  uint64_t v5 = sub_18FD02090();

  *a3 = v5;
}

void sub_18FCE0584(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  sub_18FCA2634(0, &qword_1E926C2A0);
  id v7 = (id)sub_18FD02080();
  objc_msgSend(v6, *a5, v7);
}

uint64_t sub_18FCE0688(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B608);
  char v42 = a2;
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          id v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v40) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v41 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    id v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 40 * v20;
    if (v42)
    {
      long long v29 = *(_OWORD *)v28;
      long long v30 = *(_OWORD *)(v28 + 16);
      uint64_t v45 = *(void *)(v28 + 32);
      long long v43 = v29;
      long long v44 = v30;
    }
    else
    {
      sub_18FCA365C(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_18FD02D60();
    sub_18FD021E0();
    uint64_t result = sub_18FD02DA0();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v27;
    v15[1] = v26;
    uint64_t v16 = *(void *)(v7 + 56) + 40 * v14;
    long long v17 = v43;
    long long v18 = v44;
    *(void *)(v16 + 32) = v45;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v39;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_18FCE09C0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7C0);
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v23 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v24 = v23 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v11) {
      break;
    }
    uint64_t v26 = (void *)(v5 + 64);
    unint64_t v27 = *(void *)(v43 + 8 * v25);
    ++v14;
    if (!v27)
    {
      int64_t v14 = v25 + 1;
      if (v25 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v14);
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            int64_t v14 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v27 = *(void *)(v43 + 8 * v14);
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v28;
      }
    }
LABEL_21:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v5 + 48) + 40 * v24;
    if (a2)
    {
      long long v30 = *(_OWORD *)v29;
      long long v31 = *(_OWORD *)(v29 + 16);
      uint64_t v49 = *(void *)(v29 + 32);
      long long v47 = v30;
      long long v48 = v31;
      uint64_t v32 = *(void *)(v5 + 56) + 40 * v24;
      uint64_t v33 = *(void *)(v32 + 32);
      long long v34 = *(_OWORD *)(v32 + 16);
      long long v44 = *(_OWORD *)v32;
      long long v45 = v34;
      uint64_t v46 = v33;
    }
    else
    {
      sub_18FCA365C(v29, (uint64_t)&v47);
      sub_18FCA365C(*(void *)(v5 + 56) + 40 * v24, (uint64_t)&v44);
    }
    uint64_t result = sub_18FD026D0();
    uint64_t v35 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v12 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v36) & ~*(void *)(v12 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v12 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v15 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v7 + 48) + v16;
    long long v18 = v47;
    long long v19 = v48;
    *(void *)(v17 + 32) = v49;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    uint64_t v20 = *(void *)(v7 + 56) + v16;
    long long v21 = v44;
    long long v22 = v45;
    *(void *)(v20 + 32) = v46;
    *(_OWORD *)uint64_t v20 = v21;
    *(_OWORD *)(v20 + 16) = v22;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v26 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v26 = -1 << v42;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_18FCE0CF0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7B8);
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v31 = v2;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v32) {
      break;
    }
    long long v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v33 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v32)
        {
LABEL_34:
          swift_release();
          id v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v32) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v33 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    long long v22 = (long long *)(*(void *)(v5 + 56) + 40 * v16);
    if (a2) {
      sub_18FCA370C(v22, (uint64_t)v34);
    }
    else {
      sub_18FCA3A48((uint64_t)v22, (uint64_t)v34);
    }
    sub_18FD02D60();
    sub_18FD01FB0();
    uint64_t result = sub_18FD02DA0();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = sub_18FCA370C(v34, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v31;
  long long v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_18FCE0FF0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7B0);
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          id v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_18FCD00F0(v23, v34);
    }
    else {
      sub_18FCA3724((uint64_t)v23, (uint64_t)v34);
    }
    sub_18FD02D60();
    sub_18FD01FB0();
    uint64_t result = sub_18FD02DA0();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_18FCD00F0(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v32;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_18FCE12E0(uint64_t a1, char a2)
{
  return sub_18FCE16E8(a1, a2, &qword_1E926C7A8);
}

uint64_t sub_18FCE12EC(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7A0);
  int v43 = a2;
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  uint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  unint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v40) {
      break;
    }
    unint64_t v19 = v41;
    unint64_t v20 = v41[v18];
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v20 = v41[v14];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v40)
        {
LABEL_34:
          swift_release();
          id v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v41[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v40) {
              goto LABEL_34;
            }
            unint64_t v20 = v41[v14];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = sub_18FD01DD0();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22);
    unint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = *(void *)(v26 + 72);
    unint64_t v28 = *(void *)(v5 + 48) + v27 * v17;
    uint64_t v44 = v29;
    if (v43)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      swift_retain();
    }
    sub_18FCB4000();
    uint64_t result = sub_18FD020C0();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v12 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v15 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(*(void *)(v7 + 48) + v27 * v15, v25, v22);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v39;
  unint64_t v19 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v19, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_18FCE16E8(uint64_t a1, char a2, uint64_t *a3)
{
  id v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_18FD028B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  BOOL v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    unint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_18FD02D60();
    sub_18FD021E0();
    uint64_t result = sub_18FD02DA0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v1_Block_object_dispose(&a9, 8) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  id v4 = v36;
  uint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v4 = v8;
  return result;
}

uint64_t sub_18FCE19F4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C790);
  char v37 = a2;
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          id v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    int v32 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_18FD02D60();
    sub_18FD021E0();
    uint64_t result = sub_18FD02DA0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_18FCE1D00(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2D0);
  char v37 = a2;
  uint64_t v6 = sub_18FD028B0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          id v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    int v33 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_18FD02D60();
    sub_18FD021E0();
    uint64_t result = sub_18FD02DA0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v1_Block_object_dispose(&a9, 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

unint64_t sub_18FCE2008(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_18FD02690();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_18FCA365C(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v29);
        uint64_t v11 = sub_18FD026D0();
        uint64_t result = sub_18FCA36B8((uint64_t)v29);
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            unint64_t v16 = v15 + 40 * v3;
            unint64_t v17 = (long long *)(v15 + 40 * v6);
            if (v3 != v6 || v16 >= (unint64_t)v17 + 40)
            {
              long long v18 = *v17;
              long long v19 = v17[1];
              *(void *)(v16 + 32) = *((void *)v17 + 4);
              *(_OWORD *)unint64_t v16 = v18;
              *(_OWORD *)(v16 + 16) = v19;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            unint64_t v21 = v20 + 40 * v3;
            int64_t v22 = (long long *)(v20 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              long long v9 = *v22;
              long long v10 = v22[1];
              *(void *)(v21 + 32) = *((void *)v22 + 4);
              *(_OWORD *)unint64_t v21 = v9;
              *(_OWORD *)(v21 + 16) = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *unint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18FCE21DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_18FD02690();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_18FD02D60();
        sub_18FD01FB0();
        uint64_t result = sub_18FD02DA0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (void *)(v12 + 8 * v3);
          int64_t v14 = (void *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            void *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 40 * v3;
          unint64_t v17 = (long long *)(v15 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 40))
          {
            long long v9 = *v17;
            long long v10 = v17[1];
            *(void *)(v16 + 32) = *((void *)v17 + 4);
            *(_OWORD *)unint64_t v16 = v9;
            *(_OWORD *)(v16 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    long long v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18FCE23A4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_18FD02690();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_18FD02D60();
        sub_18FD01FB0();
        uint64_t result = sub_18FD02DA0();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (void *)(v11 + 8 * v3);
          int64_t v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            void *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          unint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            _OWORD *v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18FCE2560(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_18FD02690();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_18FD02D60();
        swift_bridgeObjectRetain();
        sub_18FD021E0();
        uint64_t v9 = sub_18FD02DA0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_18FCE2738()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B608);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD028A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v28 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_18FCA365C(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    BOOL v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    uint64_t v23 = v30;
    long long v24 = v29[1];
    *(_OWORD *)uint64_t v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18FCE2930()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD028A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_18FCA365C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v28);
    uint64_t result = (void *)sub_18FCA365C(*(void *)(v2 + 56) + v16, (uint64_t)v26);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v28[1];
    long long v19 = v28[0];
    *(void *)(v17 + 32) = v29;
    *(_OWORD *)uint64_t v17 = v19;
    *(_OWORD *)(v17 + 16) = v18;
    uint64_t v20 = *(void *)(v4 + 56) + v16;
    uint64_t v21 = v27;
    long long v22 = v26[1];
    *(_OWORD *)uint64_t v20 = v26[0];
    *(_OWORD *)(v20 + 16) = v22;
    *(void *)(v20 + 32) = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FCE2B14()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD028A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_18FCA3A48(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_18FCA370C(v22, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FCE2CDC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD028A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_18FCA3724(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = sub_18FCD00F0(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_18FCE2EA0()
{
  return sub_18FCE3178(&qword_1E926C7A8);
}

void *sub_18FCE2EAC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7A0);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_18FD028A0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v35 = v2;
  if (!v3)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v31;
LABEL_28:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v4 = v2;
  uint64_t result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v35;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v34 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v32 = v1 + 64;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v35;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v34;
      goto LABEL_12;
    }
    int64_t v25 = v8 + 1;
    uint64_t v15 = v34;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v8;
    if (!v26)
    {
      int64_t v8 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v8);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v14 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_12:
    uint64_t v16 = sub_18FD01DD0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v16);
    int64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 8 * v14;
    uint64_t v24 = *(void *)(v22 + 8 * v14);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v21, v19, v16);
    *(void *)(*(void *)(v12 + 56) + v23) = v24;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v8 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v8 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v8);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_18FCE3178(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_18FD028A0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    unint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FCE3324()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD028A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(void *)(v2 + 56) + v20);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v20) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FCE34D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_18FD028A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 4 * v15;
    int v20 = *(_DWORD *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s15AXCoreUtilities24AudioEffectConfigurationV34_conditionallyBridgeFromObjectiveC_6resultSbSo07AXAudiodE0C_ACSgztFZ_0(void *a1, uint64_t a2)
{
  sub_18FCE3DBC(a2);
  id v75 = a1;
  id v3 = objc_msgSend(a1, sel_parameters);
  sub_18FCA2634(0, &qword_1E926C2A0);
  uint64_t v4 = sub_18FD02090();

  int64_t v5 = 0;
  uint64_t v77 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v79 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v81 = v4;
  int64_t v9 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_70;
    }
    if (v12 >= v79) {
      break;
    }
    unint64_t v13 = *(void *)(v77 + 8 * v12);
    ++v5;
    if (!v13)
    {
      int64_t v5 = v12 + 1;
      if (v12 + 1 >= v79) {
        break;
      }
      unint64_t v13 = *(void *)(v77 + 8 * v5);
      if (!v13)
      {
        int64_t v5 = v12 + 2;
        if (v12 + 2 >= v79) {
          break;
        }
        unint64_t v13 = *(void *)(v77 + 8 * v5);
        if (!v13)
        {
          int64_t v14 = v12 + 3;
          if (v14 >= v79) {
            break;
          }
          unint64_t v13 = *(void *)(v77 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              int64_t v5 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_72;
              }
              if (v5 >= v79) {
                goto LABEL_33;
              }
              unint64_t v13 = *(void *)(v77 + 8 * v5);
              ++v14;
              if (v13) {
                goto LABEL_21;
              }
            }
          }
          int64_t v5 = v14;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
LABEL_22:
    unint64_t v15 = (uint64_t *)(*(void *)(v81 + 48) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(v81 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    id v19 = v18;
    objc_msgSend(v19, sel_floatValue);
    int v21 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = sub_18FCA963C(v17, v16);
    uint64_t v25 = v9[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    char v28 = v23;
    if (v9[3] >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_18FCE34D4();
        if (v28) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_18FCE1D00(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_18FCA963C(v17, v16);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_74;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_4:
        *(_DWORD *)(v9[7] + 4 * v24) = v21;
        goto LABEL_5;
      }
    }
    v9[(v24 >> 6) + 8] |= 1 << v24;
    uint64_t v31 = (uint64_t *)(v9[6] + 16 * v24);
    uint64_t *v31 = v17;
    v31[1] = v16;
    *(_DWORD *)(v9[7] + 4 * v24) = v21;
    uint64_t v32 = v9[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_68;
    }
    long long v9[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_33:
  swift_release();
  id v35 = objc_msgSend(v75, sel_properties);
  uint64_t v36 = sub_18FD02090();

  int64_t v37 = 0;
  uint64_t v76 = v36 + 64;
  uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & *(void *)(v36 + 64);
  int64_t v78 = (unint64_t)(v38 + 63) >> 6;
  uint64_t v80 = v36;
  uint64_t v41 = (void *)MEMORY[0x1E4FBC868];
  while (2)
  {
    if (v40)
    {
      unint64_t v42 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      int64_t v82 = v37;
      unint64_t v43 = v42 | (v37 << 6);
      goto LABEL_54;
    }
    int64_t v44 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_71;
    }
    if (v44 >= v78)
    {
LABEL_65:
      swift_release();
      id v66 = objc_msgSend(v75, sel_identifier);
      sub_18FD01DB0();

      id v67 = objc_msgSend(v75, sel_effectName);
      uint64_t v68 = sub_18FD02150();
      uint64_t v70 = v69;

      LOBYTE(v67) = objc_msgSend(v75, sel_enabled);
      id v71 = (int *)type metadata accessor for AudioEffectConfiguration();
      uint64_t v72 = (uint64_t *)(a2 + v71[5]);
      *uint64_t v72 = v68;
      v72[1] = v70;
      *(void *)(a2 + v71[6]) = v9;
      *(unsigned char *)(a2 + v71[8]) = (_BYTE)v67;
      *(void *)(a2 + v71[7]) = v41;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v71 - 1) + 56))(a2, 0, 1, v71);
      return 1;
    }
    unint64_t v45 = *(void *)(v76 + 8 * v44);
    int64_t v46 = v37 + 1;
    if (v45) {
      goto LABEL_53;
    }
    int64_t v46 = v37 + 2;
    if (v37 + 2 >= v78) {
      goto LABEL_65;
    }
    unint64_t v45 = *(void *)(v76 + 8 * v46);
    if (v45) {
      goto LABEL_53;
    }
    int64_t v46 = v37 + 3;
    if (v37 + 3 >= v78) {
      goto LABEL_65;
    }
    unint64_t v45 = *(void *)(v76 + 8 * v46);
    if (v45)
    {
LABEL_53:
      unint64_t v40 = (v45 - 1) & v45;
      int64_t v82 = v46;
      unint64_t v43 = __clz(__rbit64(v45)) + (v46 << 6);
LABEL_54:
      long long v48 = (uint64_t *)(*(void *)(v80 + 48) + 16 * v43);
      uint64_t v50 = *v48;
      uint64_t v49 = v48[1];
      uint64_t v51 = *(void **)(*(void *)(v80 + 56) + 8 * v43);
      swift_bridgeObjectRetain();
      id v52 = v51;
      unsigned int v53 = objc_msgSend(v52, sel_unsignedIntValue);
      char v54 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v56 = sub_18FCA963C(v50, v49);
      uint64_t v57 = v41[2];
      BOOL v58 = (v55 & 1) == 0;
      uint64_t v59 = v57 + v58;
      if (__OFADD__(v57, v58)) {
        goto LABEL_67;
      }
      char v60 = v55;
      if (v41[3] < v59)
      {
        sub_18FCE19F4(v59, v54);
        unint64_t v61 = sub_18FCA963C(v50, v49);
        if ((v60 & 1) != (v62 & 1)) {
          goto LABEL_74;
        }
        unint64_t v56 = v61;
        if ((v60 & 1) == 0) {
          goto LABEL_61;
        }
LABEL_36:
        *(_DWORD *)(v41[7] + 4 * v56) = v53;
LABEL_37:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v37 = v82;
        continue;
      }
      if (v54)
      {
        if (v55) {
          goto LABEL_36;
        }
      }
      else
      {
        sub_18FCE3324();
        if (v60) {
          goto LABEL_36;
        }
      }
LABEL_61:
      v41[(v56 >> 6) + 8] |= 1 << v56;
      unint64_t v63 = (uint64_t *)(v41[6] + 16 * v56);
      *unint64_t v63 = v50;
      v63[1] = v49;
      *(_DWORD *)(v41[7] + 4 * v56) = v53;
      uint64_t v64 = v41[2];
      BOOL v33 = __OFADD__(v64, 1);
      uint64_t v65 = v64 + 1;
      if (v33) {
        goto LABEL_69;
      }
      v41[2] = v65;
      swift_bridgeObjectRetain();
      goto LABEL_37;
    }
    break;
  }
  uint64_t v47 = v37 + 4;
  if (v37 + 4 >= v78) {
    goto LABEL_65;
  }
  unint64_t v45 = *(void *)(v76 + 8 * v47);
  if (v45)
  {
    int64_t v46 = v37 + 4;
    goto LABEL_53;
  }
  while (1)
  {
    int64_t v46 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v46 >= v78) {
      goto LABEL_65;
    }
    unint64_t v45 = *(void *)(v76 + 8 * v46);
    ++v47;
    if (v45) {
      goto LABEL_53;
    }
  }
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = sub_18FD02D00();
  __break(1u);
  return result;
}

uint64_t sub_18FCE3D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C758);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FCE3DBC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C758);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FCE3E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioEffectConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

id sub_18FCE3E8C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_identifier);
  *a2 = result;
  return result;
}

id sub_18FCE3EC8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIdentifier_, *a1);
}

char *keypath_get_selector_effectName()
{
  return sel_effectName;
}

void sub_18FCE3EEC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_18FD02120();
  objc_msgSend(v2, sel_setEffectName_, v3);
}

char *keypath_get_selector_enabled()
{
  return sel_enabled;
}

id sub_18FCE3F5C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_enabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_18FCE3F90(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEnabled_, *a1);
}

char *keypath_get_selector_properties()
{
  return sel_properties;
}

void sub_18FCE3FB0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_18FCE3FD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_parameters()
{
  return sel_parameters;
}

void sub_18FCE3FFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_18FCE401C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for AXAudioEffectConfiguration(uint64_t a1)
{
  return sub_18FCA2634(a1, &qword_1E926C788);
}

const char *AccessibilityFeatureFlags.domain.getter()
{
  return "Accessibility";
}

const char *AccessibilityFeatureFlags.feature.getter()
{
  id result = "PersonalVoiceForAssistiveTechnologies";
  switch(*v0)
  {
    case 1:
      id result = "PersonalVoiceShortPhraseTraining";
      break;
    case 2:
      id result = "PassthroughZoom";
      break;
    case 3:
      id result = "GuestPass";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static AccessibilityFeatureFlags.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AccessibilityFeatureFlags.hash(into:)()
{
  return sub_18FD02D70();
}

uint64_t AccessibilityFeatureFlags.hashValue.getter()
{
  return sub_18FD02DA0();
}

unint64_t sub_18FCE416C()
{
  unint64_t result = qword_1E926C7C8;
  if (!qword_1E926C7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C7C8);
  }
  return result;
}

const char *sub_18FCE41C0()
{
  return "Accessibility";
}

const char *sub_18FCE41D4()
{
  unint64_t result = "PersonalVoiceForAssistiveTechnologies";
  switch(*v0)
  {
    case 1:
      unint64_t result = "PersonalVoiceShortPhraseTraining";
      break;
    case 2:
      unint64_t result = "PassthroughZoom";
      break;
    case 3:
      unint64_t result = "GuestPass";
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AccessibilityFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccessibilityFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18FCE43ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityFeatureFlags()
{
  return &type metadata for AccessibilityFeatureFlags;
}

char *sub_18FCE43E4(uint64_t a1, uint64_t a2)
{
  int v3 = (char *)(*(uint64_t (**)(void))(a2 + 32))();
  swift_bridgeObjectRetain();
  sub_18FCE51BC(&v3);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18FCE4458(uint64_t a1, uint64_t a2)
{
  int v2 = sub_18FCE43E4(a1, a2);
  uint64_t v3 = *((void *)v2 + 2);
  if (v3) {
    uint64_t v4 = *(void *)&v2[24 * v3 + 8];
  }
  else {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18FCE449C()
{
  sub_18FD026F0();
  sub_18FCD28F8();
  if (swift_dynamicCast())
  {

    return 1;
  }
  sub_18FD026F0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_18FD026F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7D8);
  if (swift_dynamicCast())
  {
    sub_18FCA370C(v3, (uint64_t)v6);
    uint64_t v1 = v7;
    uint64_t v2 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2))
    {
LABEL_7:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 1;
    }
    sub_18FCA3A48((uint64_t)v6, (uint64_t)v3);
    if (swift_dynamicCast())
    {

      goto LABEL_7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    memset(v3, 0, sizeof(v3));
    sub_18FCE4C50((uint64_t)v3);
  }
  return 0;
}

uint64_t AXMigration.version.getter()
{
  return *(void *)v0;
}

uint64_t AXMigration.version.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*AXMigration.version.modify())()
{
  return nullsub_1;
}

uint64_t sub_18FCE4634(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = sub_18FCE5CA0;
  *(void *)(a2 + 16) = v5;
  return result;
}

uint64_t AXMigration.migrate.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t AXMigration.migrate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + _Block_object_dispose(&a9, 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AXMigration.migrate.modify())()
{
  return nullsub_1;
}

uint64_t AXMigration.init(version:migrate:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

BOOL static AXCodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AXCodingError.hash(into:)()
{
  return sub_18FD02D70();
}

uint64_t AXCodingError.hashValue.getter()
{
  return sub_18FD02DA0();
}

unint64_t sub_18FCE47C4()
{
  unint64_t result = qword_1E926C7F0;
  if (!qword_1E926C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C7F0);
  }
  return result;
}

BOOL sub_18FCE4828(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  int v5 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 48))(v4, 1);
  if (v5 != 1) {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  return v5 == 1;
}

uint64_t sub_18FCE4944@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_18FCE5CE8;
  a2[1] = v5;
  return swift_retain();
}

uint64_t dispatch thunk of static AXMigratable.typeKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static AXMigratable.migrations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t destroy for AXMigration()
{
  return swift_release();
}

void *_s15AXCoreUtilities11AXMigrationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for AXMigration(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AXMigration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AXMigration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXMigration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMigration()
{
  return &type metadata for AXMigration;
}

unsigned char *storeEnumTagSinglePayload for AXCodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18FCE4C18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXCodingError()
{
  return &type metadata for AXCodingError;
}

uint64_t sub_18FCE4C50(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_18FCE4CB0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B610);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

size_t sub_18FCE4DCC(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C168);
  uint64_t v10 = *(void *)(sub_18FD01EE0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  __n128 result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_18FD01EE0() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_18FCE4FA0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_18FCE50A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B838);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_18FCE51BC(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_18FCE5C54((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_18FCE5228(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_18FCE5228(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_18FD029D0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = *(void *)(v86 + 24 * i);
        uint64_t v89 = v85;
        do
        {
          uint64_t v90 = v86 + v89;
          if (v88 >= *(void *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_141;
          }
          uint64_t v91 = v86 + v89;
          long long v92 = *(_OWORD *)(v86 + v89 + 32);
          *(_OWORD *)(v86 + v89 + 24) = *(_OWORD *)v90;
          *(void *)(v86 + v89 + 40) = *(void *)(v90 + 16);
          *(void *)uint64_t v91 = v88;
          *(_OWORD *)(v91 + _Block_object_dispose(&a9, 8) = v92;
          v89 -= 24;
        }
        while (v89 != -24);
        v85 += 24;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v6 = result;
    uint64_t v101 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      uint64_t result = sub_18FD02340();
      *(void *)(result + 16) = v7;
      uint64_t v103 = result;
      v107 = (char *)(result + 32);
LABEL_13:
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v102 = *a1 + 48;
      uint64_t v100 = *a1 - 24;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v104 = v6;
      uint64_t v105 = v3;
      uint64_t v106 = v10;
      while (1)
      {
        uint64_t v13 = v9++;
        if (v9 < v3)
        {
          uint64_t v14 = *(void *)(v10 + 24 * v9);
          uint64_t v15 = *(void *)(v10 + 24 * v13);
          uint64_t v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            unint64_t v16 = (uint64_t *)(v102 + 24 * v13);
            uint64_t v17 = v14;
            while (1)
            {
              uint64_t v19 = *v16;
              v16 += 3;
              uint64_t v18 = v19;
              if (v14 < v15 == v19 >= v17) {
                break;
              }
              ++v9;
              uint64_t v17 = v18;
              if (v3 == v9)
              {
                uint64_t v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_138;
            }
            if (v13 < v9)
            {
              uint64_t v20 = 24 * v9;
              uint64_t v21 = 24 * v13;
              uint64_t v22 = v9;
              uint64_t v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10) {
                    goto LABEL_144;
                  }
                  uint64_t v24 = v10 + v21;
                  uint64_t v25 = v10 + v20;
                  uint64_t v26 = *(void *)(v10 + v21);
                  long long v27 = *(_OWORD *)(v10 + v21 + 8);
                  long long v28 = *(_OWORD *)(v10 + v20 - 24);
                  *(void *)(v24 + 16) = *(void *)(v10 + v20 - 8);
                  *(_OWORD *)uint64_t v24 = v28;
                  *(void *)(v25 - 24) = v26;
                  *(_OWORD *)(v25 - 16) = v27;
                }
                ++v23;
                v20 -= 24;
                v21 += 24;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_135;
          }
          if (v9 - v13 < v6)
          {
            uint64_t v29 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_139;
            }
            if (v29 >= v3) {
              uint64_t v29 = v3;
            }
            if (v29 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v29)
            {
              uint64_t v30 = v100 + 24 * v9;
              do
              {
                uint64_t v31 = *(void *)(v10 + 24 * v9);
                uint64_t v32 = v13;
                uint64_t v33 = v30;
                do
                {
                  if (v31 >= *(void *)v33) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_142;
                  }
                  long long v34 = *(_OWORD *)(v33 + 32);
                  *(_OWORD *)(v33 + 24) = *(_OWORD *)v33;
                  *(void *)(v33 + 40) = *(void *)(v33 + 16);
                  *(void *)uint64_t v33 = v31;
                  *(_OWORD *)(v33 + _Block_object_dispose(&a9, 8) = v34;
                  v33 -= 24;
                  ++v32;
                }
                while (v9 != v32);
                ++v9;
                v30 += 24;
              }
              while (v9 != v29);
              uint64_t v9 = v29;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_18FCE5B44(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
          uint64_t v11 = result;
        }
        unint64_t v36 = *(void *)(v11 + 16);
        unint64_t v35 = *(void *)(v11 + 24);
        unint64_t v12 = v36 + 1;
        uint64_t v10 = v106;
        if (v36 >= v35 >> 1)
        {
          uint64_t result = (uint64_t)sub_18FCE5B44((char *)(v35 > 1), v36 + 1, 1, (char *)v11);
          uint64_t v10 = v106;
          uint64_t v11 = result;
        }
        *(void *)(v11 + 16) = v12;
        uint64_t v37 = v11 + 32;
        uint64_t v38 = (uint64_t *)(v11 + 32 + 16 * v36);
        *uint64_t v38 = v13;
        v38[1] = v9;
        if (v36)
        {
          while (1)
          {
            unint64_t v39 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v44 = v37 + 16 * v12;
              uint64_t v45 = *(void *)(v44 - 64);
              uint64_t v46 = *(void *)(v44 - 56);
              BOOL v50 = __OFSUB__(v46, v45);
              uint64_t v47 = v46 - v45;
              if (v50) {
                goto LABEL_119;
              }
              uint64_t v49 = *(void *)(v44 - 48);
              uint64_t v48 = *(void *)(v44 - 40);
              BOOL v50 = __OFSUB__(v48, v49);
              uint64_t v42 = v48 - v49;
              char v43 = v50;
              if (v50) {
                goto LABEL_120;
              }
              unint64_t v51 = v12 - 2;
              id v52 = (uint64_t *)(v37 + 16 * (v12 - 2));
              uint64_t v54 = *v52;
              uint64_t v53 = v52[1];
              BOOL v50 = __OFSUB__(v53, v54);
              uint64_t v55 = v53 - v54;
              if (v50) {
                goto LABEL_121;
              }
              BOOL v50 = __OFADD__(v42, v55);
              uint64_t v56 = v42 + v55;
              if (v50) {
                goto LABEL_123;
              }
              if (v56 >= v47)
              {
                uint64_t v74 = (uint64_t *)(v37 + 16 * v39);
                uint64_t v76 = *v74;
                uint64_t v75 = v74[1];
                BOOL v50 = __OFSUB__(v75, v76);
                uint64_t v77 = v75 - v76;
                if (v50) {
                  goto LABEL_129;
                }
                BOOL v67 = v42 < v77;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v68 = *(void *)(v11 + 32);
                uint64_t v69 = *(void *)(v11 + 40);
                BOOL v50 = __OFSUB__(v69, v68);
                uint64_t v61 = v69 - v68;
                char v62 = v50;
                goto LABEL_77;
              }
              uint64_t v41 = *(void *)(v11 + 32);
              uint64_t v40 = *(void *)(v11 + 40);
              BOOL v50 = __OFSUB__(v40, v41);
              uint64_t v42 = v40 - v41;
              char v43 = v50;
            }
            if (v43) {
              goto LABEL_122;
            }
            unint64_t v51 = v12 - 2;
            uint64_t v57 = (uint64_t *)(v37 + 16 * (v12 - 2));
            uint64_t v59 = *v57;
            uint64_t v58 = v57[1];
            BOOL v60 = __OFSUB__(v58, v59);
            uint64_t v61 = v58 - v59;
            char v62 = v60;
            if (v60) {
              goto LABEL_124;
            }
            unint64_t v63 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v50 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v50) {
              goto LABEL_126;
            }
            if (__OFADD__(v61, v66)) {
              goto LABEL_128;
            }
            if (v61 + v66 >= v42)
            {
              BOOL v67 = v42 < v66;
LABEL_83:
              if (v67) {
                unint64_t v39 = v51;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v62) {
              goto LABEL_125;
            }
            uint64_t v70 = (uint64_t *)(v37 + 16 * v39);
            uint64_t v72 = *v70;
            uint64_t v71 = v70[1];
            BOOL v50 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v50) {
              goto LABEL_127;
            }
            if (v73 < v61) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v78 = v39 - 1;
            if (v39 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10) {
              goto LABEL_143;
            }
            uint64_t v79 = v11;
            uint64_t v80 = (uint64_t *)(v37 + 16 * v78);
            uint64_t v81 = *v80;
            int64_t v82 = (void *)(v37 + 16 * v39);
            uint64_t v83 = v82[1];
            uint64_t result = sub_18FCE58FC((char *)(v10 + 24 * *v80), (char *)(v10 + 24 * *v82), v10 + 24 * v83, v107);
            if (v1) {
              goto LABEL_93;
            }
            if (v83 < v81) {
              goto LABEL_116;
            }
            if (v39 > *(void *)(v79 + 16)) {
              goto LABEL_117;
            }
            *uint64_t v80 = v81;
            *(void *)(v37 + 16 * v78 + _Block_object_dispose(&a9, 8) = v83;
            unint64_t v84 = *(void *)(v79 + 16);
            if (v39 >= v84) {
              goto LABEL_118;
            }
            uint64_t v11 = v79;
            unint64_t v12 = v84 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v37 + 16 * v39), v82 + 2, 16 * (v84 - 1 - v39));
            *(void *)(v79 + 16) = v84 - 1;
            uint64_t v10 = v106;
            if (v84 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v104;
        uint64_t v3 = v105;
        if (v9 >= v105)
        {
          uint64_t v8 = v103;
          goto LABEL_102;
        }
      }
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    v107 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v103 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_102:
    uint64_t result = v11;
    uint64_t v103 = v8;
    if (v12 >= 2)
    {
      uint64_t v93 = *v101;
      do
      {
        unint64_t v94 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_131;
        }
        if (!v93) {
          goto LABEL_145;
        }
        uint64_t v95 = result;
        uint64_t v96 = *(void *)(result + 32 + 16 * v94);
        uint64_t v97 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_18FCE58FC((char *)(v93 + 24 * v96), (char *)(v93 + 24 * *(void *)(result + 32 + 16 * (v12 - 1))), v93 + 24 * v97, v107);
        if (v1) {
          break;
        }
        if (v97 < v96) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_18FCE5C40(v95);
          uint64_t v95 = result;
        }
        if (v94 >= *(void *)(v95 + 16)) {
          goto LABEL_133;
        }
        int64_t v98 = (void *)(v95 + 32 + 16 * v94);
        *int64_t v98 = v96;
        v98[1] = v97;
        unint64_t v99 = *(void *)(v95 + 16);
        if (v12 > v99) {
          goto LABEL_134;
        }
        memmove((void *)(v95 + 32 + 16 * (v12 - 1)), (const void *)(v95 + 32 + 16 * v12), 16 * (v99 - v12));
        uint64_t result = v95;
        *(void *)(v95 + 16) = v99 - 1;
        unint64_t v12 = v99 - 1;
      }
      while (v99 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(void *)(v103 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18FCE58FC(char *__dst, char *__src, unint64_t a3, char *a4)
{
  unsigned int v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 24;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 24;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[24 * v11] <= a4) {
      memmove(a4, __src, 24 * v11);
    }
    unint64_t v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_36;
    }
    unint64_t v16 = a3 - 24;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 24);
      uint64_t v18 = v6 - 24;
      if (*((void *)v12 - 3) >= *((void *)v6 - 3))
      {
        uint64_t v18 = v12 - 24;
        if (v17 != v12)
        {
          v12 -= 24;
          goto LABEL_33;
        }
        BOOL v19 = v16 >= (unint64_t)v12;
        v12 -= 24;
        if (v19) {
          goto LABEL_33;
        }
      }
      else
      {
        if (v17 != v6)
        {
          v6 -= 24;
LABEL_33:
          long long v20 = *(_OWORD *)v18;
          *(void *)(v16 + 16) = *((void *)v18 + 2);
          *(_OWORD *)unint64_t v16 = v20;
          goto LABEL_34;
        }
        BOOL v19 = v16 >= (unint64_t)v6;
        v6 -= 24;
        if (v19) {
          goto LABEL_33;
        }
      }
LABEL_34:
      if (v6 > v7)
      {
        v16 -= 24;
        if (v12 > v4) {
          continue;
        }
      }
      goto LABEL_36;
    }
  }
  if (a4 != __dst || &__dst[24 * v9] <= a4) {
    memmove(a4, __dst, 24 * v9);
  }
  unint64_t v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (*(void *)v6 < *(void *)v4)
    {
      uint64_t v13 = v6;
      BOOL v14 = v7 == v6;
      v6 += 24;
      if (!v14) {
        goto LABEL_12;
      }
LABEL_13:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_15;
      }
    }
    uint64_t v13 = v4;
    BOOL v14 = v7 == v4;
    v4 += 24;
    if (v14) {
      goto LABEL_13;
    }
LABEL_12:
    long long v15 = *(_OWORD *)v13;
    *((void *)v7 + 2) = *((void *)v13 + 2);
    *(_OWORD *)uint64_t v7 = v15;
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v6 = v7;
LABEL_36:
  uint64_t v21 = (unsigned __int128)((v12 - v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  uint64_t v22 = (v21 >> 2) + ((unint64_t)v21 >> 63);
  if (v6 != v4 || v6 >= &v4[24 * v22]) {
    memmove(v6, v4, 24 * v22);
  }
  return 1;
}

char *sub_18FCE5B44(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C7F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FCE5C40(uint64_t a1)
{
  return sub_18FCE5B44(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_18FCE5C54(uint64_t a1)
{
  return sub_18FCE4CB0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18FCE5C68()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_18FCE5CA0(uint64_t a1)
{
  void *(*v3)(uint64_t *__return_ptr, uint64_t *);
  void *result;
  uint64_t v5;
  uint64_t v6;

  uint64_t v3 = *(void *(**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  unint64_t v6 = a1;
  uint64_t result = v3(&v5, &v6);
  if (!v2) {
    return (void *)v5;
  }
  return result;
}

uint64_t sub_18FCE5CE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_18FCE5D24(void *a1)
{
  sub_18FCA3140(a1, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    uint64_t v9 = v7;
    uint64_t v1 = v8;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      unsigned char *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      LOBYTE(v1) = sub_18FCE662C((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18FCA36B8((uint64_t)v8);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v5, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v3 = 4;
    swift_willThrow();
  }
  return v1 & 1;
}

_OWORD *sub_18FCE5E38(void *a1)
{
  sub_18FCA3140(a1, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    uint64_t v9 = v7;
    uint64_t v1 = v8;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      unsigned char *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      uint64_t v1 = (_OWORD *)sub_18FCE68E8((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18FCA36B8((uint64_t)v8);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v5, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v3 = 4;
    swift_willThrow();
  }
  return v1;
}

double sub_18FCE5F5C(void *a1)
{
  sub_18FCA3140(a1, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    uint64_t v9 = v7;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      unsigned char *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      double v1 = sub_18FCE6BE0((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18FCA36B8((uint64_t)v8);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v5, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v3 = 4;
    swift_willThrow();
  }
  return v1;
}

float sub_18FCE6078(void *a1)
{
  sub_18FCA3140(a1, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    v8[0] = v5;
    v8[1] = v6;
    uint64_t v9 = v7;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      unsigned char *v2 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      float v1 = sub_18FCE6F14((uint64_t)&v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
    }
    sub_18FCA36B8((uint64_t)v8);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v5, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v3 = 4;
    swift_willThrow();
  }
  return v1;
}

_OWORD *sub_18FCE6194(void *a1, uint64_t (*a2)(long long *))
{
  sub_18FCA3140(a1, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    v10[0] = v7;
    v10[1] = v8;
    uint64_t v11 = v9;
    uint64_t v2 = v10;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      *unsigned int v4 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      uint64_t v2 = (_OWORD *)a2(&v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
    sub_18FCA36B8((uint64_t)v10);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v7, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 4;
    swift_willThrow();
  }
  return v2;
}

_OWORD *sub_18FCE62B8(void *a1, uint64_t (*a2)(long long *))
{
  sub_18FCA3140(a1, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    v10[0] = v7;
    v10[1] = v8;
    uint64_t v11 = v9;
    uint64_t v2 = v10;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      *unsigned int v4 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      uint64_t v2 = (_OWORD *)a2(&v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
    sub_18FCA36B8((uint64_t)v10);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v7, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 4;
    swift_willThrow();
  }
  return v2;
}

_OWORD *sub_18FCE63DC(void *a1, uint64_t (*a2)(long long *))
{
  sub_18FCA3140(a1, (uint64_t)&v7);
  if (*((void *)&v8 + 1))
  {
    v10[0] = v7;
    v10[1] = v8;
    uint64_t v11 = v9;
    uint64_t v2 = v10;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      *unsigned int v4 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      uint64_t v2 = (_OWORD *)a2(&v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    }
    sub_18FCA36B8((uint64_t)v10);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v7, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 4;
    swift_willThrow();
  }
  return v2;
}

_OWORD *sub_18FCE6500(void *a1, uint64_t a2, uint64_t (*a3)(long long *, uint64_t))
{
  sub_18FCA3140(a1, (uint64_t)&v9);
  if (*((void *)&v10 + 1))
  {
    v12[0] = v9;
    v12[1] = v10;
    uint64_t v13 = v11;
    uint64_t v3 = v12;
    if (sub_18FCE449C())
    {
      sub_18FCA24E0();
      swift_allocError();
      *long long v6 = 4;
      swift_willThrow();
    }
    else
    {
      sub_18FD026F0();
      uint64_t v3 = (_OWORD *)a3(&v9, a2);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    }
    sub_18FCA36B8((uint64_t)v12);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v9, &qword_1E926B830);
    sub_18FCA24E0();
    swift_allocError();
    *long long v7 = 4;
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_18FCE662C(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v5);
  char v1 = MEMORY[0x1E4FBC840] + 8;
  if (swift_dynamicCast())
  {
    char v1 = v4[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
    if (swift_dynamicCast()) {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    }
    if ((swift_dynamicCast() & 1) == 0
      && !swift_dynamicCast()
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0
      && (swift_dynamicCast() & 1) == 0)
    {
      swift_dynamicCast();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v2 = 3;
    swift_willThrow();
  }
  return v1 & 1;
}

uint64_t sub_18FCE68E8(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v6);
  uint64_t v1 = MEMORY[0x1E4FBC840] + 8;
  if (swift_dynamicCast())
  {
    uint64_t v1 = v5;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    return v1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast())
  {
    sub_18FCA370C(&v5, (uint64_t)v4);
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    uint64_t v1 = sub_18FD029E0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0
    && !swift_dynamicCast()
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0
    && (swift_dynamicCast() & 1) == 0)
  {
    swift_dynamicCast();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_18FCA24E0();
  swift_allocError();
  unsigned char *v2 = 3;
  swift_willThrow();
  return v1;
}

double sub_18FCE6BE0(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
    if (swift_dynamicCast()) {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    }
    if (swift_dynamicCast()) {
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      double v1 = (double)SLOBYTE(v6[0]);
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
      v2.i16[0] = LOWORD(v6[0]);
      double v1 = (double)vmovl_s16(v2).i32[0];
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
      double v1 = (double)SLODWORD(v6[0]);
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
LABEL_6:
      double v1 = (double)*(uint64_t *)&v6[0];
      goto LABEL_23;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (swift_dynamicCast())
      {
        LOBYTE(v3) = LOBYTE(v6[0]);
        goto LABEL_22;
      }
      if (swift_dynamicCast())
      {
        LOWORD(v3) = LOWORD(v6[0]);
        goto LABEL_22;
      }
      if (swift_dynamicCast())
      {
        LODWORD(v3) = LODWORD(v6[0]);
        goto LABEL_22;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
          if (swift_dynamicCast())
          {
            double v1 = *(float *)v6;
            goto LABEL_23;
          }
          if ((swift_dynamicCast() & 1) == 0 && (swift_dynamicCast() & 1) == 0)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
            sub_18FCA24E0();
            swift_allocError();
            unsigned char *v5 = 3;
            swift_willThrow();
            return v1;
          }
        }
        goto LABEL_2;
      }
    }
    unint64_t v3 = *(void *)&v6[0];
LABEL_22:
    double v1 = (double)v3;
    goto LABEL_23;
  }
LABEL_2:
  double v1 = v6[0];
LABEL_23:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v1;
}

float sub_18FCE6F14(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v9);
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  if (swift_dynamicCast()) {
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    v2.i8[0] = LOBYTE(v8[0]);
    float v1 = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v2)).i32[0];
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    v3.i16[0] = LOWORD(v8[0]);
    float v1 = (float)vmovl_s16(v3).i32[0];
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    float v1 = (float)SLODWORD(v8[0]);
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
LABEL_6:
    float v1 = (float)*(uint64_t *)&v8[0];
    goto LABEL_28;
  }
  if (swift_dynamicCast()) {
    goto LABEL_15;
  }
  if (swift_dynamicCast())
  {
    LOBYTE(v4) = LOBYTE(v8[0]);
    float v1 = (float)v4;
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    LOWORD(v5) = LOWORD(v8[0]);
    float v1 = (float)v5;
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    float v1 = (float)LODWORD(v8[0]);
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
LABEL_15:
    float v1 = (float)*(unint64_t *)&v8[0];
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
LABEL_27:
    float v1 = v8[0];
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    if ((swift_dynamicCast() & 1) == 0 && (swift_dynamicCast() & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      sub_18FCA24E0();
      swift_allocError();
      *long long v7 = 3;
      swift_willThrow();
      return v1;
    }
    goto LABEL_27;
  }
LABEL_2:
  float v1 = *(float *)v8;
LABEL_28:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v1;
}

uint64_t sub_18FCE7254(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (swift_dynamicCast())
    {
LABEL_2:
      uint64_t v2 = LOBYTE(v6[0]);
LABEL_8:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      return v2;
    }
    if (swift_dynamicCast())
    {
      uint64_t v2 = SLOWORD(v6[0]);
      if ((int)v2 < -128)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      if ((int)v2 <= 127) {
        goto LABEL_8;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v2 = LODWORD(v6[0]);
      if (SLODWORD(v6[0]) < -128)
      {
        __break(1u);
        goto LABEL_63;
      }
      if (SLODWORD(v6[0]) <= 127) {
        goto LABEL_8;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0)
    {
LABEL_23:
      uint64_t result = swift_dynamicCast();
      if ((result & 1) == 0)
      {
        if (swift_dynamicCast())
        {
          uint64_t v2 = SLOBYTE(v6[0]);
          if ((v2 & 0x80000000) == 0) {
            goto LABEL_8;
          }
          __break(1u);
        }
        if (swift_dynamicCast())
        {
          uint64_t v2 = LOWORD(v6[0]);
          if (LOWORD(v6[0]) <= 0x7Fu) {
            goto LABEL_8;
          }
          __break(1u);
        }
        if (swift_dynamicCast())
        {
          uint64_t v2 = LODWORD(v6[0]);
          if (LODWORD(v6[0]) <= 0x7F) {
            goto LABEL_8;
          }
          __break(1u);
        }
        if (swift_dynamicCast())
        {
          uint64_t v2 = *(void *)&v6[0];
          if (*(void *)&v6[0] <= 0x7FuLL) {
            goto LABEL_8;
          }
          __break(1u);
        }
        uint64_t result = swift_dynamicCast();
        if ((result & 1) == 0)
        {
          uint64_t result = swift_dynamicCast();
          if ((result & 1) == 0) {
            goto LABEL_50;
          }
          if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
          {
            if (*(float *)v6 > -129.0)
            {
              if (*(float *)v6 < 128.0)
              {
                uint64_t v2 = (int)*(float *)v6;
                goto LABEL_8;
              }
              goto LABEL_70;
            }
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        double v4 = v6[0];
        if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
        {
          if (v6[0] > -129.0)
          {
            if (v6[0] < 128.0) {
              goto LABEL_42;
            }
            goto LABEL_67;
          }
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      uint64_t v2 = *(void *)&v6[0];
      if (*(void *)&v6[0] <= 0x7FuLL) {
        goto LABEL_8;
      }
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    uint64_t v2 = *(void *)&v6[0];
    if (*(uint64_t *)&v6[0] >= -128)
    {
      if (*(uint64_t *)&v6[0] <= 127) {
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_23;
    }
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v2 = *(void *)&v6[0];
  if (*(uint64_t *)&v6[0] < -128)
  {
    __break(1u);
  }
  else if (*(uint64_t *)&v6[0] <= 127)
  {
    goto LABEL_8;
  }
  __break(1u);
LABEL_50:
  uint64_t v2 = v1 + 8;
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_55;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0) {
    goto LABEL_71;
  }
  if (v6[0] <= -129.0)
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v6[0] < 128.0) {
    goto LABEL_42;
  }
  __break(1u);
LABEL_55:
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_61:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0) {
    goto LABEL_73;
  }
  if (v6[0] > -129.0)
  {
    if (v6[0] >= 128.0)
    {
      __break(1u);
      goto LABEL_60;
    }
LABEL_42:
    uint64_t v2 = (int)v4;
    goto LABEL_8;
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_18FCE76F0(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(void *)&double v2 = LOWORD(v6[0]);
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(void *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if (*(uint64_t *)&v6[0] < -32768)
    {
      __break(1u);
      goto LABEL_47;
    }
    if (*(uint64_t *)&v6[0] < 0x8000) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = SLOBYTE(v6[0]);
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    *(void *)&double v2 = LODWORD(v6[0]);
    if (SLODWORD(v6[0]) < -32768)
    {
      __break(1u);
      goto LABEL_59;
    }
    if (SLODWORD(v6[0]) < 0x8000) {
      goto LABEL_11;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v2 = v6[0];
    if (*(uint64_t *)&v6[0] >= -32768)
    {
      if (*(uint64_t *)&v6[0] < 0x8000) {
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_22;
    }
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_22:
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v2 = v6[0];
    if (!(*(void *)&v6[0] >> 15)) {
      goto LABEL_11;
    }
    goto LABEL_60;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LOBYTE(v6[0]);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = SLOWORD(v6[0]);
    if ((LODWORD(v2) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LODWORD(v6[0]);
    if (!(LODWORD(v6[0]) >> 15)) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if (!(*(void *)&v6[0] >> 15)) {
      goto LABEL_11;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    if (v6[0] <= -32769.0)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (v6[0] >= 32768.0)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
LABEL_40:
    *(void *)&double v2 = (int)v4;
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -32769.0)
      {
        if (*(float *)v6 < 32768.0)
        {
          *(void *)&double v2 = (int)*(float *)v6;
          goto LABEL_11;
        }
        goto LABEL_66;
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_47:
  *(void *)&double v2 = v1 + 8;
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v6[0] <= -32769.0)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if (v6[0] < 32768.0) {
      goto LABEL_40;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_57:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return *(void *)&v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v6[0] > -32769.0)
  {
    if (v6[0] < 32768.0) {
      goto LABEL_40;
    }
    __break(1u);
    goto LABEL_57;
  }
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_18FCE7B70(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(void *)&double v2 = LODWORD(v6[0]);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(void *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if (*(uint64_t *)&v6[0] < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
      goto LABEL_43;
    }
    if (*(uint64_t *)&v6[0] <= 0x7FFFFFFF) {
      goto LABEL_20;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = SLOBYTE(v6[0]);
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = SLOWORD(v6[0]);
    goto LABEL_20;
  }
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v2 = v6[0];
    if (*(uint64_t *)&v6[0] < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (*(uint64_t *)&v6[0] <= 0x7FFFFFFF) {
      goto LABEL_20;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v2 = v6[0];
    if (!(*(void *)&v6[0] >> 31)) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LOBYTE(v6[0]);
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LOWORD(v6[0]);
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LODWORD(v6[0]);
    if ((LODWORD(v6[0]) & 0x80000000) == 0) {
      goto LABEL_20;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if (!(*(void *)&v6[0] >> 31)) {
      goto LABEL_20;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    if (v6[0] <= -2147483650.0)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v6[0] >= 2147483650.0)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_36:
    *(void *)&double v2 = (int)v4;
    goto LABEL_20;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -2147500000.0)
      {
        if (*(float *)v6 < 2147500000.0)
        {
          *(void *)&double v2 = (int)*(float *)v6;
          goto LABEL_20;
        }
        goto LABEL_61;
      }
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_43:
  *(void *)&double v2 = v1 + 8;
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (v6[0] <= -2147483650.0)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v6[0] < 2147483650.0) {
      goto LABEL_36;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_53:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return *(void *)&v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v6[0] > -2147483650.0)
  {
    if (v6[0] < 2147483650.0) {
      goto LABEL_36;
    }
    __break(1u);
    goto LABEL_53;
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_18FCE7FE4(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast()) {
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  if (swift_dynamicCast()) {
    goto LABEL_5;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = SLOBYTE(v6[0]);
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = SLOWORD(v6[0]);
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = SLODWORD(v6[0]);
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
LABEL_5:
    uint64_t v2 = *(void *)&v6[0];
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return v2;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)&v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) == 0) {
      goto LABEL_6;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = LOBYTE(v6[0]);
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = LOWORD(v6[0]);
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = LODWORD(v6[0]);
    goto LABEL_6;
  }
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)&v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) == 0) {
      goto LABEL_6;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
    {
      if (v6[0] > -9.22337204e18)
      {
        if (v6[0] < 9.22337204e18)
        {
LABEL_31:
          uint64_t v2 = (uint64_t)v4;
          goto LABEL_6;
        }
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -9.2234e18)
      {
        if (*(float *)v6 < 9.2234e18)
        {
          uint64_t v2 = (uint64_t)*(float *)v6;
          goto LABEL_6;
        }
        goto LABEL_53;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v2 = v1 + 8;
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    if (v6[0] <= -9.22337204e18)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v6[0] < 9.22337204e18) {
      goto LABEL_31;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_47:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v6[0] > -9.22337204e18)
  {
    if (v6[0] < 9.22337204e18) {
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_47;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_18FCE8408(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_49;
    }
    if (*(void *)&v6[0] <= 0xFFuLL) {
      goto LABEL_26;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = SLOBYTE(v6[0]);
    if ((LODWORD(v2) & 0x80000000) == 0) {
      goto LABEL_26;
    }
    __break(1u);
  }
  *(void *)&double v2 = v1 + 8;
  if (swift_dynamicCast())
  {
    if (SLOWORD(v6[0]) < 0)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *(void *)&double v2 = LOWORD(v6[0]);
    if (LOWORD(v6[0]) <= 0xFFu) {
      goto LABEL_26;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    *(void *)&double v2 = LODWORD(v6[0]);
    if ((LODWORD(v6[0]) & 0x80000000) != 0)
    {
      __break(1u);
      goto LABEL_62;
    }
    if (LODWORD(v6[0]) <= 0xFF) {
      goto LABEL_26;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v2 = v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) == 0)
    {
      if (*(void *)&v6[0] <= 0xFFuLL) {
        goto LABEL_26;
      }
      __break(1u);
      goto LABEL_24;
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_24:
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v2 = v6[0];
    if (*(void *)&v6[0] <= 0xFFuLL) {
      goto LABEL_26;
    }
    goto LABEL_63;
  }
  if (swift_dynamicCast())
  {
LABEL_2:
    *(void *)&double v2 = LOBYTE(v6[0]);
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(void *)&v2;
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LOWORD(v6[0]);
    if (LOWORD(v6[0]) <= 0xFFu) {
      goto LABEL_26;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    *(void *)&double v2 = LODWORD(v6[0]);
    if (LODWORD(v6[0]) <= 0xFF) {
      goto LABEL_26;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if (*(void *)&v6[0] <= 0xFFuLL) {
      goto LABEL_26;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v6[0] <= -1.0)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (v6[0] >= 256.0)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_42:
    *(void *)&double v2 = (int)v4;
    goto LABEL_26;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
    {
      if (*(float *)v6 > -1.0)
      {
        if (*(float *)v6 < 256.0)
        {
          *(void *)&double v2 = (int)*(float *)v6;
          goto LABEL_26;
        }
        goto LABEL_69;
      }
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
LABEL_49:
  *(void *)&double v2 = v1 + 8;
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v6[0] <= -1.0)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v6[0] < 256.0) {
      goto LABEL_42;
    }
    __break(1u);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_60:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return *(void *)&v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (v6[0] > -1.0)
  {
    if (v6[0] < 256.0) {
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_59;
  }
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_18FCE887C(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(void *)&double v2 = LOWORD(v6[0]);
LABEL_25:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(void *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  *(void *)&double v2 = v1 + 8;
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_47;
    }
    if (!(*(void *)&v6[0] >> 16)) {
      goto LABEL_25;
    }
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (swift_dynamicCast())
    {
      *(void *)&double v2 = SLOWORD(v6[0]);
      if ((LODWORD(v2) & 0x80000000) == 0) {
        goto LABEL_25;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      *(void *)&double v2 = LODWORD(v6[0]);
      if ((LODWORD(v6[0]) & 0x80000000) != 0)
      {
        __break(1u);
        goto LABEL_60;
      }
      if (!HIWORD(LODWORD(v6[0]))) {
        goto LABEL_25;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0)
    {
LABEL_23:
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        double v2 = v6[0];
        if (!(*(void *)&v6[0] >> 16)) {
          goto LABEL_25;
        }
        goto LABEL_61;
      }
      if (swift_dynamicCast())
      {
        *(void *)&double v2 = LOBYTE(v6[0]);
        goto LABEL_25;
      }
      if (swift_dynamicCast()) {
        goto LABEL_2;
      }
      if (swift_dynamicCast())
      {
        *(void *)&double v2 = LODWORD(v6[0]);
        if (!HIWORD(LODWORD(v6[0]))) {
          goto LABEL_25;
        }
        __break(1u);
      }
      if (swift_dynamicCast())
      {
        double v2 = v6[0];
        if (!(*(void *)&v6[0] >> 16)) {
          goto LABEL_25;
        }
        __break(1u);
      }
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        double v4 = v6[0];
        if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
        {
          if (v6[0] > -1.0)
          {
            if (v6[0] < 65536.0) {
              goto LABEL_40;
            }
            goto LABEL_64;
          }
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
        {
          if (*(float *)v6 > -1.0)
          {
            if (*(float *)v6 < 65536.0)
            {
              *(void *)&double v2 = (int)*(float *)v6;
              goto LABEL_25;
            }
            goto LABEL_67;
          }
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
LABEL_47:
      *(void *)&double v2 = v1 + 8;
      uint64_t result = swift_dynamicCast();
      if ((result & 1) == 0) {
        goto LABEL_53;
      }
      double v4 = v6[0];
      if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
      {
        if (v6[0] > -1.0)
        {
          if (v6[0] < 65536.0) {
            goto LABEL_40;
          }
          __break(1u);
          goto LABEL_52;
        }
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    double v2 = v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) == 0)
    {
      if (!(*(void *)&v6[0] >> 16)) {
        goto LABEL_25;
      }
      __break(1u);
      goto LABEL_23;
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if ((SLOBYTE(v6[0]) & 0x80000000) == 0)
  {
    *(void *)&double v2 = LOBYTE(v6[0]);
    goto LABEL_25;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_58:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return *(void *)&v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0) {
    goto LABEL_70;
  }
  if (v6[0] > -1.0)
  {
    if (v6[0] >= 65536.0)
    {
      __break(1u);
      goto LABEL_58;
    }
LABEL_40:
    *(void *)&double v2 = (int)v4;
    goto LABEL_25;
  }
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_18FCE8CE0(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast())
  {
LABEL_2:
    *(void *)&double v2 = LODWORD(v6[0]);
LABEL_24:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return *(void *)&v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  *(void *)&double v2 = v1 + 8;
  if (swift_dynamicCast())
  {
    double v2 = v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_45;
    }
    if (!HIDWORD(*(void *)&v6[0])) {
      goto LABEL_24;
    }
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)&double v2 = v1 + 8;
    if (swift_dynamicCast())
    {
      if ((SLOWORD(v6[0]) & 0x80000000) == 0)
      {
        *(void *)&double v2 = LOWORD(v6[0]);
        goto LABEL_24;
      }
      goto LABEL_56;
    }
    if (swift_dynamicCast())
    {
      *(void *)&double v2 = LODWORD(v6[0]);
      if ((LODWORD(v6[0]) & 0x80000000) == 0) {
        goto LABEL_24;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      double v2 = v6[0];
      if ((*(void *)&v6[0] & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if (!HIDWORD(*(void *)&v6[0])) {
        goto LABEL_24;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      double v2 = v6[0];
      if (!HIDWORD(*(void *)&v6[0])) {
        goto LABEL_24;
      }
      goto LABEL_59;
    }
    if (swift_dynamicCast())
    {
      *(void *)&double v2 = LOBYTE(v6[0]);
      goto LABEL_24;
    }
    if (swift_dynamicCast())
    {
      *(void *)&double v2 = LOWORD(v6[0]);
      goto LABEL_24;
    }
    if (swift_dynamicCast()) {
      goto LABEL_2;
    }
    if (swift_dynamicCast())
    {
      double v2 = v6[0];
      if (!HIDWORD(*(void *)&v6[0])) {
        goto LABEL_24;
      }
      __break(1u);
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      double v4 = v6[0];
      if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
      {
        if (v6[0] > -1.0)
        {
          if (v6[0] < 4294967300.0) {
            goto LABEL_38;
          }
          goto LABEL_62;
        }
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
      {
        if (*(float *)v6 > -1.0)
        {
          if (*(float *)v6 < 4295000000.0)
          {
            *(void *)&double v2 = *(float *)v6;
            goto LABEL_24;
          }
          goto LABEL_65;
        }
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
LABEL_45:
    *(void *)&double v2 = v1 + 8;
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0) {
      goto LABEL_51;
    }
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
    {
      if (v6[0] > -1.0)
      {
        if (v6[0] < 4294967300.0) {
          goto LABEL_38;
        }
        __break(1u);
        goto LABEL_50;
      }
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if ((SLOBYTE(v6[0]) & 0x80000000) == 0)
  {
    *(void *)&double v2 = LOBYTE(v6[0]);
    goto LABEL_24;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_57:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return *(void *)&v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0) {
    goto LABEL_68;
  }
  if (v6[0] > -1.0)
  {
    if (v6[0] >= 4294967300.0)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
LABEL_38:
    *(void *)&double v2 = v4;
    goto LABEL_24;
  }
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_18FCE9138(uint64_t a1)
{
  sub_18FCA3724(a1, (uint64_t)v7);
  uint64_t v1 = MEMORY[0x1E4FBC840];
  if (swift_dynamicCast())
  {
LABEL_2:
    unint64_t v2 = *(void *)&v6[0];
LABEL_38:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return v2;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast()) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  unint64_t v2 = v1 + 8;
  if (swift_dynamicCast())
  {
    unint64_t v2 = *(void *)&v6[0];
    if ((*(void *)&v6[0] & 0x8000000000000000) == 0) {
      goto LABEL_38;
    }
    __break(1u);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    unint64_t v2 = v1 + 8;
    if (swift_dynamicCast())
    {
      if ((SLOWORD(v6[0]) & 0x80000000) == 0)
      {
        unint64_t v2 = LOWORD(v6[0]);
        goto LABEL_38;
      }
      goto LABEL_51;
    }
    if (swift_dynamicCast())
    {
      unint64_t v2 = LODWORD(v6[0]);
      if ((LODWORD(v6[0]) & 0x80000000) == 0) {
        goto LABEL_38;
      }
      __break(1u);
    }
    if (swift_dynamicCast())
    {
      unint64_t v2 = *(void *)&v6[0];
      if ((*(void *)&v6[0] & 0x8000000000000000) == 0) {
        goto LABEL_38;
      }
      __break(1u);
    }
    if (swift_dynamicCast()) {
      goto LABEL_2;
    }
    if (swift_dynamicCast())
    {
      unint64_t v2 = LOBYTE(v6[0]);
      goto LABEL_38;
    }
    if (swift_dynamicCast())
    {
      unint64_t v2 = LOWORD(v6[0]);
      goto LABEL_38;
    }
    if (swift_dynamicCast())
    {
      unint64_t v2 = LODWORD(v6[0]);
      goto LABEL_38;
    }
    if (swift_dynamicCast()) {
      goto LABEL_2;
    }
    uint64_t result = swift_dynamicCast();
    if ((result & 1) == 0)
    {
      uint64_t result = swift_dynamicCast();
      if ((result & 1) == 0)
      {
        unint64_t v2 = v1 + 8;
        uint64_t result = swift_dynamicCast();
        if ((result & 1) == 0) {
          goto LABEL_46;
        }
        double v4 = v6[0];
        if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
        {
          if (v6[0] > -1.0)
          {
            if (v6[0] < 1.84467441e19) {
              goto LABEL_32;
            }
            __break(1u);
            goto LABEL_45;
          }
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      if ((~LODWORD(v6[0]) & 0x7F800000) != 0)
      {
        if (*(float *)v6 > -1.0)
        {
          if (*(float *)v6 < 1.8447e19)
          {
            unint64_t v2 = (unint64_t)*(float *)v6;
            goto LABEL_38;
          }
          goto LABEL_58;
        }
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    double v4 = v6[0];
    if ((~*(void *)&v6[0] & 0x7FF0000000000000) != 0)
    {
      if (v6[0] > -1.0)
      {
        if (v6[0] < 1.84467441e19) {
          goto LABEL_32;
        }
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if ((SLOBYTE(v6[0]) & 0x80000000) == 0)
  {
    unint64_t v2 = LOBYTE(v6[0]);
    goto LABEL_38;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_52:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v5 = 3;
    swift_willThrow();
    return v2;
  }
  double v4 = v6[0];
  if ((~*(void *)&v6[0] & 0x7FF0000000000000) == 0) {
    goto LABEL_61;
  }
  if (v6[0] > -1.0)
  {
    if (v6[0] >= 1.84467441e19)
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_32:
    unint64_t v2 = (unint64_t)v4;
    goto LABEL_38;
  }
LABEL_62:
  __break(1u);
  return result;
}

void *AXMigratingDecoder.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[2] = MEMORY[0x1E4FBC860];
  v0[3] = sub_18FCEF7B4(v1);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  uint64_t v5 = 0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  return v0;
}

uint64_t sub_18FCE9618(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FCE9678()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCE96B0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FCE96F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FCE9758()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCE9790(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FCE97D8())()
{
  return j_j__swift_endAccess;
}

void *sub_18FCE982C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  v2[2] = MEMORY[0x1E4FBC860];
  v2[3] = sub_18FCEF7B4(v5);
  type metadata accessor for AXDataHolder();
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = 0;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 32) = 0u;
  *(void *)(v6 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v6 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v8, v6 + 16);
  swift_endAccess();
  v2[4] = v6;
  swift_beginAccess();
  v2[2] = a1;
  swift_bridgeObjectRelease();
  v2[4] = a2;
  swift_release();
  return v2;
}

void *AXMigratingDecoder.init()()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[2] = MEMORY[0x1E4FBC860];
  v0[3] = sub_18FCEF7B4(v1);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  uint64_t v5 = 0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  return v0;
}

uint64_t sub_18FCE99BC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(v2 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCA296C(a2, v5);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    type metadata accessor for AXMigratingDecoder();
    sub_18FCE9F50(&qword_1E926B7D0, v7, (void (*)(uint64_t))type metadata accessor for AXMigratingDecoder);
    swift_retain();
    return sub_18FD02550();
  }
  return result;
}

uint64_t type metadata accessor for AXMigratingDecoder()
{
  return self;
}

uint64_t sub_18FCE9AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_18FCA365C(a2, (uint64_t)v10);
  type metadata accessor for AXDataHolder();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 32) = 0u;
  *(void *)(v6 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v6 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v10, v6 + 16);
  swift_endAccess();
  *(void *)(v3 + 32) = v6;
  swift_release();
  swift_beginAccess();
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v7 = swift_bridgeObjectRelease();
  uint64_t result = sub_18FCE99BC(v7, a3);
  if (!v4)
  {
    uint64_t v9 = *(void *)(v3 + 32);
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    swift_beginAccess();
    swift_retain();
    sub_18FCA3BCC((uint64_t)v10, v9 + 16);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_18FCE9C44()
{
  type metadata accessor for AXMigratingKeyedDecoding();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getWitnessTable();
  return sub_18FD02950();
}

uint64_t type metadata accessor for AXMigratingKeyedDecoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_18FCE9D24(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_18FCE9D64@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = type metadata accessor for AXMigratingUnKeyedDecoding();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 32) = xmmword_18FD08C80;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  a1[3] = v5;
  a1[4] = sub_18FCE9F50((unint64_t *)&unk_1E926B7E8, v7, (void (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedDecoding);
  *a1 = v6;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for AXMigratingUnKeyedDecoding()
{
  return self;
}

uint64_t sub_18FCE9E5C@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = type metadata accessor for AXMigratingSingleValueDecoding();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  a1[3] = v5;
  a1[4] = sub_18FCE9F50(&qword_1E926B7B0, 255, (void (*)(uint64_t))type metadata accessor for AXMigratingSingleValueDecoding);
  *a1 = v6;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for AXMigratingSingleValueDecoding()
{
  return self;
}

uint64_t sub_18FCE9F50(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AXMigratingDecoder.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AXMigratingDecoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCEA010()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCEA054()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCEA098()
{
  return sub_18FCE9C44();
}

uint64_t sub_18FCEA0BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCE9D64(a1);
}

uint64_t sub_18FCEA0E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v6 = type metadata accessor for AXMigratingSingleValueDecoding();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  a1[3] = v6;
  a1[4] = sub_18FCE9F50(&qword_1E926B7B0, 255, (void (*)(uint64_t))type metadata accessor for AXMigratingSingleValueDecoding);
  *a1 = v7;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_18FCEA1B4()
{
  swift_retain();
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  sub_18FCA3140(v0, (uint64_t)v5);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v5[3])
  {
    sub_18FCA7A04((uint64_t)v5, &qword_1E926B830);
    return sub_18FD02330();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
  uint64_t v1 = swift_dynamicCast();
  if ((v1 & 1) == 0) {
    return sub_18FD02330();
  }
  v5[0] = v4;
  MEMORY[0x1F4188790](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C808);
  sub_18FCEF500();
  uint64_t v2 = sub_18FD022A0();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_18FCEA324(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  v10[0] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  sub_18FCA3140(v4, (uint64_t)v10);
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v8 = v10[3] != 0;
  sub_18FCA7A04((uint64_t)v10, &qword_1E926B830);
  return v8;
}

uint64_t sub_18FCEA45C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  *(void *)&v13[0] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  sub_18FCA3140(v4, (uint64_t)&v10);
  swift_release();
  swift_bridgeObjectRelease();
  if (*((void *)&v11 + 1))
  {
    v13[0] = v10;
    v13[1] = v11;
    uint64_t v14 = v12;
    char v8 = sub_18FCE449C();
    sub_18FCA36B8((uint64_t)v13);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v10, &qword_1E926B830);
    char v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_18FCEA5C8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  char v8 = sub_18FCE5D24(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

_OWORD *sub_18FCEA6F4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  char v8 = sub_18FCE5E38(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

double sub_18FCEA828(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  double v8 = sub_18FCE5F5C(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

float sub_18FCEA95C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  float v8 = sub_18FCE6078(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

_OWORD *sub_18FCEAA90(uint64_t a1)
{
  return sub_18FCEAB7C(a1, MEMORY[0x1E4FBB550], (uint64_t (*)(long long *, uint64_t))sub_18FCE7FE4);
}

_OWORD *sub_18FCEAAC4(uint64_t a1)
{
  return sub_18FCEAD20(a1, (uint64_t (*)(long long *))sub_18FCE7254);
}

_OWORD *sub_18FCEAAF0(uint64_t a1)
{
  return sub_18FCEAE88(a1, (uint64_t (*)(long long *))sub_18FCE76F0);
}

_OWORD *sub_18FCEAB1C(uint64_t a1)
{
  return sub_18FCEAFF0(a1, (uint64_t (*)(long long *))sub_18FCE7B70);
}

_OWORD *sub_18FCEAB48(uint64_t a1)
{
  return sub_18FCEAB7C(a1, MEMORY[0x1E4FBC1C8], (uint64_t (*)(long long *, uint64_t))sub_18FCE7FE4);
}

_OWORD *sub_18FCEAB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(long long *, uint64_t))
{
  uint64_t v6 = *v3;
  uint64_t v7 = (void *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v9 = *(void *)(v6 + 80);
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = *(void *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  long long v11 = sub_18FCE6500(v7, a2, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

_OWORD *sub_18FCEACC0(uint64_t a1)
{
  return sub_18FCEAB7C(a1, MEMORY[0x1E4FBB808], (uint64_t (*)(long long *, uint64_t))sub_18FCE9138);
}

_OWORD *sub_18FCEACF4(uint64_t a1)
{
  return sub_18FCEAD20(a1, (uint64_t (*)(long long *))sub_18FCE8408);
}

_OWORD *sub_18FCEAD20(uint64_t a1, uint64_t (*a2)(long long *))
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a1, v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  long long v10 = sub_18FCE6194(v6, a2);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

_OWORD *sub_18FCEAE5C(uint64_t a1)
{
  return sub_18FCEAE88(a1, (uint64_t (*)(long long *))sub_18FCE887C);
}

_OWORD *sub_18FCEAE88(uint64_t a1, uint64_t (*a2)(long long *))
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a1, v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  long long v10 = sub_18FCE62B8(v6, a2);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

_OWORD *sub_18FCEAFC4(uint64_t a1)
{
  return sub_18FCEAFF0(a1, (uint64_t (*)(long long *))sub_18FCE8CE0);
}

_OWORD *sub_18FCEAFF0(uint64_t a1, uint64_t (*a2)(long long *))
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a1, v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  long long v10 = sub_18FCE63DC(v6, a2);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

_OWORD *sub_18FCEB12C(uint64_t a1)
{
  return sub_18FCEAB7C(a1, MEMORY[0x1E4FBC538], (uint64_t (*)(long long *, uint64_t))sub_18FCE9138);
}

uint64_t sub_18FCEB160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v4;
  uint64_t v8 = v4[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v10 = *(void *)(v7 + 80);
  *(void *)(inited + 56) = v10;
  *(void *)(inited + 64) = *(void *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v12 = v4[3];
  type metadata accessor for AXMigratingDecoder();
  swift_allocObject();
  swift_retain();
  uint64_t v13 = sub_18FCE982C(v8, v12);
  sub_18FCE99BC((uint64_t)v13, a3);
  return swift_release();
}

uint64_t sub_18FCEB2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v3;
  type metadata accessor for AXMigratingKeyedDecoding();
  uint64_t v6 = v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v10 = v3[3];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  swift_getWitnessTable();
  return sub_18FD02950();
}

uint64_t sub_18FCEB438@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v9 = *(void *)(v6 + 80);
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = *(void *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v11 = v3[3];
  uint64_t v12 = type metadata accessor for AXMigratingUnKeyedDecoding();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 32) = xmmword_18FD08C80;
  *(void *)(v13 + 16) = v7;
  *(void *)(v13 + 24) = v11;
  a2[3] = v12;
  a2[4] = sub_18FCE9F50((unint64_t *)&unk_1E926B7E8, v14, (void (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedDecoding);
  *a2 = v13;
  return swift_retain();
}

uint64_t sub_18FCEB5AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = sub_18FD02600();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(v4 + 88);
  sub_18FD02E20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
    uint64_t v15 = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FD07480;
    *(void *)(inited + 56) = v5;
    *(void *)(inited + 64) = v13;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_0, v12, v5);
    uint64_t v24 = v15;
    swift_bridgeObjectRetain();
    sub_18FCEEA54((void *)inited);
    uint64_t v18 = v24;
    uint64_t v19 = v2[3];
    uint64_t v20 = type metadata accessor for AXMigratingDecoder();
    uint64_t v21 = swift_allocObject();
    swift_retain();
    sub_18FCE982C(v18, v19);
    a1[3] = v20;
    a1[4] = sub_18FCE9F50(&qword_1E926B7D0, v22, (void (*)(uint64_t))type metadata accessor for AXMigratingDecoder);
    *a1 = v21;
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v5);
  }
  return result;
}

uint64_t sub_18FCEB840@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v9 = *(void *)(v6 + 80);
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = *(void *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v11 = v7;
  uint64_t v12 = v3[3];
  uint64_t v13 = type metadata accessor for AXMigratingDecoder();
  uint64_t v14 = swift_allocObject();
  swift_retain();
  sub_18FCE982C(v11, v12);
  a2[3] = v13;
  uint64_t result = sub_18FCE9F50(&qword_1E926B7D0, v15, (void (*)(uint64_t))type metadata accessor for AXMigratingDecoder);
  a2[4] = result;
  *a2 = v14;
  return result;
}

uint64_t sub_18FCEB9B4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCEB9F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCEBA00()
{
  return sub_18FCEA1B4();
}

BOOL sub_18FCEBA24(uint64_t a1)
{
  return sub_18FCEA324(a1);
}

uint64_t sub_18FCEBA4C(uint64_t a1)
{
  return sub_18FCEA45C(a1) & 1;
}

uint64_t sub_18FCEBA74(uint64_t a1)
{
  return sub_18FCEA5C8(a1) & 1;
}

_OWORD *sub_18FCEBA9C(uint64_t a1)
{
  return sub_18FCEA6F4(a1);
}

double sub_18FCEBAC0(uint64_t a1)
{
  return sub_18FCEA828(a1);
}

float sub_18FCEBAE4(uint64_t a1)
{
  return sub_18FCEA95C(a1);
}

_OWORD *sub_18FCEBB08(uint64_t a1)
{
  return sub_18FCEAA90(a1);
}

_OWORD *sub_18FCEBB2C(uint64_t a1)
{
  return sub_18FCEAAC4(a1);
}

_OWORD *sub_18FCEBB50(uint64_t a1)
{
  return sub_18FCEAAF0(a1);
}

_OWORD *sub_18FCEBB74(uint64_t a1)
{
  return sub_18FCEAB1C(a1);
}

_OWORD *sub_18FCEBB98(uint64_t a1)
{
  return sub_18FCEAB48(a1);
}

uint64_t sub_18FCEBBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEBCC8(a1, a2, a3, MEMORY[0x1E4FBBFC8]);
}

_OWORD *sub_18FCEBBE8(uint64_t a1)
{
  return sub_18FCEACC0(a1);
}

_OWORD *sub_18FCEBC0C(uint64_t a1)
{
  return sub_18FCEACF4(a1);
}

_OWORD *sub_18FCEBC30(uint64_t a1)
{
  return sub_18FCEAE5C(a1);
}

_OWORD *sub_18FCEBC54(uint64_t a1)
{
  return sub_18FCEAFC4(a1);
}

_OWORD *sub_18FCEBC78(uint64_t a1)
{
  return sub_18FCEB12C(a1);
}

uint64_t sub_18FCEBC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEBCC8(a1, a2, a3, MEMORY[0x1E4FBBFD0]);
}

uint64_t sub_18FCEBCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for AXMigratingKeyedDecoding();
  return a4(a1, v7, a3);
}

uint64_t sub_18FCEBD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEB160(a1, a2, a3);
}

uint64_t sub_18FCEBD48()
{
  return sub_18FD02C70();
}

uint64_t sub_18FCEBD9C()
{
  return sub_18FD02C60();
}

uint64_t sub_18FCEBDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC184(a1, a2, a3, MEMORY[0x1E4FBBF58]);
}

uint64_t sub_18FCEBE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC0E0(a1, a2, a3, MEMORY[0x1E4FBBF60]);
}

uint64_t sub_18FCEBE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC184(a1, a2, a3, MEMORY[0x1E4FBBF68]);
}

uint64_t sub_18FCEBE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEBFA8(a1, a2, a3, MEMORY[0x1E4FBBF78]);
}

uint64_t sub_18FCEBEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC044(a1, a2, a3, MEMORY[0x1E4FBBF80]);
}

uint64_t sub_18FCEBECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC0E0(a1, a2, a3, MEMORY[0x1E4FBBF88]);
}

uint64_t sub_18FCEBEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC184(a1, a2, a3, MEMORY[0x1E4FBBF90]);
}

uint64_t sub_18FCEBF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC218(a1, a2, a3, MEMORY[0x1E4FBBFA0]);
}

uint64_t sub_18FCEBF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC184(a1, a2, a3, MEMORY[0x1E4FBBF70]);
}

uint64_t sub_18FCEBF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEBFA8(a1, a2, a3, MEMORY[0x1E4FBBF98]);
}

uint64_t sub_18FCEBFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for AXMigratingKeyedDecoding();
  return a4(a1, v7, a3) & 0x1FF;
}

uint64_t sub_18FCEC018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC044(a1, a2, a3, MEMORY[0x1E4FBBFA8]);
}

uint64_t sub_18FCEC044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for AXMigratingKeyedDecoding();
  return a4(a1, v7, a3) & 0x1FFFF;
}

uint64_t sub_18FCEC0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC0E0(a1, a2, a3, MEMORY[0x1E4FBBFB0]);
}

uint64_t sub_18FCEC0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for AXMigratingKeyedDecoding();
  unint64_t v8 = a4(a1, v7, a3);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_18FCEC158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC184(a1, a2, a3, MEMORY[0x1E4FBBFB8]);
}

uint64_t sub_18FCEC184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for AXMigratingKeyedDecoding();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_18FCEC1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCEC218(a1, a2, a3, MEMORY[0x1E4FBBFC0]);
}

uint64_t sub_18FCEC218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for AXMigratingKeyedDecoding();
  uint64_t result = a4(a1, v8, a3);
  if (v4) {
    return v10;
  }
  return result;
}

uint64_t sub_18FCEC284()
{
  return sub_18FD02C80();
}

uint64_t sub_18FCEC304(uint64_t a1, uint64_t a2)
{
  return sub_18FCEB2C0(a1, a2);
}

uint64_t sub_18FCEC328@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18FCEB438(a1, a2);
}

uint64_t sub_18FCEC34C@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCEB5AC(a1);
}

uint64_t sub_18FCEC370@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18FCEB840(a1, a2);
}

uint64_t AXMigratingUnKeyedDecoding.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCEC39C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = v1;
  if (v1 == 1)
  {
    uint64_t v2 = sub_18FCEC3FC(v0);
    uint64_t v3 = *(void *)(v0 + 32);
    *(void *)(v0 + 32) = v2;
    swift_bridgeObjectRetain();
    sub_18FCEEB54(v3);
  }
  sub_18FCEF55C(v1);
  return v2;
}

uint64_t sub_18FCEC3FC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  swift_retain();
  sub_18FCA3140(v1, (uint64_t)v11);
  swift_release();
  if (!v12)
  {
    sub_18FCA7A04((uint64_t)v11, &qword_1E926B830);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v10 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B808);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_7;
  }
  if (!*((void *)&v9 + 1))
  {
LABEL_7:
    sub_18FCA7A04((uint64_t)&v8, &qword_1E926C818);
    return 0;
  }
  sub_18FCA370C(&v8, (uint64_t)v11);
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v11, v12);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *))(v4 + 16))((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getAssociatedTypeWitness();
  sub_18FD02380();
  uint64_t v5 = sub_18FD02850();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_18FCEC5F8(v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v6;
}

uint64_t sub_18FCEC5F8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_18FCA9E20(0, v2, 0);
  uint64_t v3 = v16;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_18FCA3724(i, (uint64_t)v15);
      if (!swift_dynamicCast()) {
        break;
      }
      long long v9 = v12;
      long long v10 = v13;
      uint64_t v11 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_18FCA9E20(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v16;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_18FCA9E20((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v3 = v16;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 40 * v6;
      *(void *)(v7 + 64) = v11;
      *(_OWORD *)(v7 + 32) = v9;
      *(_OWORD *)(v7 + 4_Block_object_dispose(&a9, 8) = v10;
      if (!--v2) {
        return v3;
      }
    }
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    swift_release();
    sub_18FCA7A04((uint64_t)&v12, &qword_1E926B830);
    return 0;
  }
  return v3;
}

uint64_t sub_18FCEC764()
{
  uint64_t v0 = sub_18FCEC39C();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_18FCEC7AC()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_18FCEC7E0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_18FCEC820())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_18FCEC874()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = sub_18FCEC39C();
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    if (v1 == v3) {
      return 1;
    }
  }
  if (!sub_18FCEC39C()) {
    return 1;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18FCEC8E8()
{
  uint64_t v2 = sub_18FCEC39C();
  if (!v2)
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    goto LABEL_6;
  }
  uint64_t v1 = v2;
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= *(void *)(v1 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18FCA365C(v1 + 40 * v4 + 32, (uint64_t)v10);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v8 = 2;
    swift_willThrow();
    return v1;
  }
  uint64_t v1 = v9;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 40);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (!v6)
  {
    *(void *)(v0 + 40) = v7;
    return v1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18FCECA1C()
{
  uint64_t v1 = sub_18FCEC39C();
  if (!v1)
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 >= *(void *)(v2 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_18FCA365C(v2 + 40 * v4 + 32, (uint64_t)v9);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v8 = 2;
    return swift_willThrow();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 40);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (!v6)
  {
    *(void *)(v0 + 40) = v7;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_18FCECB4C()
{
  uint64_t v1 = sub_18FCEC39C();
  if (!v1)
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 >= *(void *)(v2 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_18FCA365C(v2 + 40 * v4 + 32, (uint64_t)v9);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    unsigned char *v8 = 2;
    return swift_willThrow();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 40);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (!v6)
  {
    *(void *)(v0 + 40) = v7;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_18FCECC7C(uint64_t a1)
{
  uint64_t v3 = sub_18FCEC39C();
  if (!v3)
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    goto LABEL_6;
  }
  uint64_t v4 = v3;
  uint64_t result = swift_beginAccess();
  unint64_t v6 = *(void *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(void *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18FCA365C(v4 + 40 * v6 + 32, (uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v13;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 40);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (!v8)
  {
    *(void *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18FCECDAC(uint64_t a1)
{
  uint64_t v3 = sub_18FCEC39C();
  if (!v3)
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    goto LABEL_6;
  }
  uint64_t v4 = v3;
  uint64_t result = swift_beginAccess();
  unint64_t v6 = *(void *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(void *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18FCA365C(v4 + 40 * v6 + 32, (uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v13;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 40);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (!v8)
  {
    *(void *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18FCECEDC(uint64_t a1)
{
  uint64_t v3 = sub_18FCEC39C();
  if (!v3)
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    goto LABEL_6;
  }
  uint64_t v4 = v3;
  uint64_t result = swift_beginAccess();
  unint64_t v6 = *(void *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(void *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18FCA365C(v4 + 40 * v6 + 32, (uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v13;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 40);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (!v8)
  {
    *(void *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18FCED00C(uint64_t a1)
{
  uint64_t v3 = sub_18FCEC39C();
  if (!v3)
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    goto LABEL_6;
  }
  uint64_t v4 = v3;
  uint64_t result = swift_beginAccess();
  unint64_t v6 = *(void *)(v1 + 40);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(void *)(v4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18FCA365C(v4 + 40 * v6 + 32, (uint64_t)v12);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v10 = 2;
    swift_willThrow();
    return a1;
  }
  a1 = v11;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 40);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (!v8)
  {
    *(void *)(v1 + 40) = v9;
    return a1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18FCED13C()
{
  uint64_t v1 = sub_18FCEC39C();
  if (!v1)
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v4 >= *(void *)(v2 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_18FCA365C(v2 + 40 * v4 + 32, (uint64_t)v10);
  swift_bridgeObjectRelease();
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B830);
  if (!swift_dynamicCast())
  {
    sub_18FCA24E0();
    swift_allocError();
    *uint64_t v9 = 2;
    swift_willThrow();
    return v8 & 1;
  }
  char v5 = v12;
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    char v8 = v5 & 1;
    *(void *)(v0 + 40) = v7;
    return v8 & 1;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_18FCED270()
{
  return sub_18FCEC8E8();
}

uint64_t sub_18FCED288()
{
  return sub_18FCECA1C();
}

uint64_t sub_18FCED2A0()
{
  return sub_18FCECB4C();
}

uint64_t sub_18FCED2B8()
{
  return sub_18FCED00C(MEMORY[0x1E4FBB550]);
}

uint64_t sub_18FCED2D8()
{
  return sub_18FCECC7C(MEMORY[0x1E4FBC098]);
}

uint64_t sub_18FCED2F8()
{
  return sub_18FCECDAC(MEMORY[0x1E4FBC0F8]);
}

uint64_t sub_18FCED318()
{
  return sub_18FCECEDC(MEMORY[0x1E4FBC150]);
}

uint64_t sub_18FCED338()
{
  return sub_18FCED00C(MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_18FCED358()
{
  return sub_18FCED00C(MEMORY[0x1E4FBB808]);
}

uint64_t sub_18FCED378()
{
  return sub_18FCECC7C(MEMORY[0x1E4FBC358]);
}

uint64_t sub_18FCED398()
{
  return sub_18FCECDAC(MEMORY[0x1E4FBC450]);
}

uint64_t sub_18FCED3B8()
{
  return sub_18FCECEDC(MEMORY[0x1E4FBC4C0]);
}

uint64_t sub_18FCED3D8()
{
  return sub_18FCED00C(MEMORY[0x1E4FBC538]);
}

uint64_t sub_18FCED3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t v5 = v2[5];
  sub_18FCED578();
  uint64_t result = sub_18FD02650();
  uint64_t v8 = v2[5];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = result;
    uint64_t v12 = v7;
    void v3[5] = v10;
    uint64_t v13 = v3[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FD07480;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v15 = swift_allocObject();
    *(void *)(inited + 32) = v15;
    *(void *)(v15 + 16) = v5;
    *(unsigned char *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
    swift_bridgeObjectRetain();
    sub_18FCEEA54((void *)inited);
    uint64_t v16 = v3[3];
    type metadata accessor for AXMigratingDecoder();
    swift_allocObject();
    swift_retain();
    uint64_t v17 = sub_18FCE982C(v13, v16);
    sub_18FCE99BC((uint64_t)v17, a2);
    return swift_release();
  }
  return result;
}

unint64_t sub_18FCED578()
{
  unint64_t result = qword_1E926B7A0;
  if (!qword_1E926B7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926B7A0);
  }
  return result;
}

uint64_t sub_18FCED5CC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_18FCED604()
{
  return sub_18FCED13C() & 1;
}

uint64_t sub_18FCED620()
{
  uint64_t v1 = sub_18FCEC39C();
  if (!v1)
  {
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
    goto LABEL_6;
  }
  uint64_t result = swift_beginAccess();
  unint64_t v3 = *(void *)(v0 + 40);
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < *(void *)(v1 + 16))
  {
    sub_18FCA365C(v1 + 40 * v3 + 32, (uint64_t)v7);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_18FCA7A04((uint64_t)v7, &qword_1E926B830);
    uint64_t result = swift_beginAccess();
    uint64_t v4 = *(void *)(v0 + 40);
    BOOL v5 = __OFADD__(v4, 1);
    uint64_t v6 = v4 + 1;
    if (!v5)
    {
      uint64_t result = v1 == 0;
      *(void *)(v0 + 40) = v6;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_18FCED700()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[5];
  sub_18FCED578();
  uint64_t result = sub_18FD02650();
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    uint64_t v9 = v4;
    v1[5] = v7;
    uint64_t v10 = v1[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FD07480;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v2;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v8;
    *(void *)(v12 + 40) = v9;
    swift_bridgeObjectRetain();
    sub_18FCEEA54((void *)inited);
    type metadata accessor for AXMigratingKeyedDecoding();
    uint64_t v13 = v1[3];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v10;
    *(void *)(v14 + 24) = v13;
    swift_retain();
    swift_getWitnessTable();
    return sub_18FD02950();
  }
  return result;
}

uint64_t sub_18FCED898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = v1[5];
  sub_18FCED578();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = v1[5];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    void v2[5] = v9;
    uint64_t v12 = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FD07480;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v14 = swift_allocObject();
    *(void *)(inited + 32) = v14;
    *(void *)(v14 + 16) = v4;
    *(unsigned char *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v11;
    swift_bridgeObjectRetain();
    sub_18FCEEA54((void *)inited);
    uint64_t v15 = v2[3];
    uint64_t v16 = type metadata accessor for AXMigratingUnKeyedDecoding();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 32) = xmmword_18FD08C80;
    *(void *)(v17 + 16) = v12;
    *(void *)(v17 + 24) = v15;
    a1[3] = v16;
    a1[4] = sub_18FCE9F50((unint64_t *)&unk_1E926B7E8, v18, (void (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedDecoding);
    *a1 = v17;
    return swift_retain();
  }
  return result;
}

uint64_t sub_18FCEDA24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = v1[5];
  sub_18FCED578();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = v1[5];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    void v2[5] = v9;
    uint64_t v12 = v2[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FD07480;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v14 = swift_allocObject();
    *(void *)(inited + 32) = v14;
    *(void *)(v14 + 16) = v4;
    *(unsigned char *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v11;
    swift_bridgeObjectRetain();
    sub_18FCEEA54((void *)inited);
    uint64_t v15 = v12;
    uint64_t v16 = v2[3];
    uint64_t v17 = type metadata accessor for AXMigratingDecoder();
    uint64_t v18 = swift_allocObject();
    swift_retain();
    sub_18FCE982C(v15, v16);
    a1[3] = v17;
    uint64_t result = sub_18FCE9F50(&qword_1E926B7D0, v19, (void (*)(uint64_t))type metadata accessor for AXMigratingDecoder);
    a1[4] = result;
    *a1 = v18;
  }
  return result;
}

uint64_t AXMigratingUnKeyedDecoding.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_18FCEEB54(*(void *)(v0 + 32));
  return v0;
}

uint64_t AXMigratingUnKeyedDecoding.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_18FCEEB54(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_18FCEDC28()
{
  uint64_t v0 = sub_18FCEC39C();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_18FCEDC74()
{
  return sub_18FCEC874() & 1;
}

uint64_t sub_18FCEDC9C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(v1 + 40);
}

uint64_t sub_18FCEDCDC()
{
  return sub_18FCED620() & 1;
}

uint64_t sub_18FCEDD04()
{
  return sub_18FCED13C() & 1;
}

uint64_t sub_18FCEDD2C()
{
  return sub_18FCEC8E8();
}

uint64_t sub_18FCEDD50()
{
  return sub_18FCECA1C();
}

uint64_t sub_18FCEDD74()
{
  return sub_18FCECB4C();
}

uint64_t sub_18FCEDD98()
{
  return sub_18FCED00C(MEMORY[0x1E4FBB550]);
}

uint64_t sub_18FCEDDC4()
{
  return sub_18FCECC7C(MEMORY[0x1E4FBC098]);
}

uint64_t sub_18FCEDDF0()
{
  return sub_18FCECDAC(MEMORY[0x1E4FBC0F8]);
}

uint64_t sub_18FCEDE1C()
{
  return sub_18FCECEDC(MEMORY[0x1E4FBC150]);
}

uint64_t sub_18FCEDE48()
{
  return sub_18FCED00C(MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_18FCEDE74()
{
  return sub_18FD02A70();
}

uint64_t sub_18FCEDE8C()
{
  return sub_18FCED00C(MEMORY[0x1E4FBB808]);
}

uint64_t sub_18FCEDEB8()
{
  return sub_18FCECC7C(MEMORY[0x1E4FBC358]);
}

uint64_t sub_18FCEDEE4()
{
  return sub_18FCECDAC(MEMORY[0x1E4FBC450]);
}

uint64_t sub_18FCEDF10()
{
  return sub_18FCECEDC(MEMORY[0x1E4FBC4C0]);
}

uint64_t sub_18FCEDF3C()
{
  return sub_18FCED00C(MEMORY[0x1E4FBC538]);
}

uint64_t sub_18FCEDF68()
{
  return sub_18FD02A80();
}

uint64_t sub_18FCEDF80(uint64_t a1, uint64_t a2)
{
  return sub_18FCED3F8(a1, a2);
}

uint64_t sub_18FCEDFA4()
{
  return sub_18FD02A00();
}

uint64_t sub_18FCEDFBC()
{
  return sub_18FD029F0();
}

uint64_t sub_18FCEDFD4()
{
  uint64_t result = sub_18FD02A10();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18FCEDFF8(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE224(a1, a2, MEMORY[0x1E4FBBE18]);
}

uint64_t sub_18FCEE024()
{
  uint64_t result = sub_18FD02A20();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18FCEE048(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE16C(a1, a2, MEMORY[0x1E4FBBE20]);
}

uint64_t sub_18FCEE074(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE1C8(a1, a2, MEMORY[0x1E4FBBE28]);
}

uint64_t sub_18FCEE0A0(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE224(a1, a2, MEMORY[0x1E4FBBE30]);
}

uint64_t sub_18FCEE0CC()
{
  uint64_t result = sub_18FD02A50();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18FCEE0F0(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE2AC(a1, a2, MEMORY[0x1E4FBBE40]);
}

uint64_t sub_18FCEE11C()
{
  uint64_t result = sub_18FD02A30();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18FCEE140(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE16C(a1, a2, MEMORY[0x1E4FBBE38]);
}

uint64_t sub_18FCEE16C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_18FCEE19C(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE1C8(a1, a2, MEMORY[0x1E4FBBE48]);
}

uint64_t sub_18FCEE1C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_18FCEE1F8(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE224(a1, a2, MEMORY[0x1E4FBBE50]);
}

uint64_t sub_18FCEE224(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_18FCEE25C()
{
  uint64_t result = sub_18FD02A60();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18FCEE280(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE2AC(a1, a2, MEMORY[0x1E4FBBE58]);
}

uint64_t sub_18FCEE2AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_18FCEE2D8()
{
  return sub_18FD02A40();
}

uint64_t sub_18FCEE304()
{
  return sub_18FCED700();
}

uint64_t sub_18FCEE328@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCED898(a1);
}

uint64_t sub_18FCEE34C@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCEDA24(a1);
}

uint64_t sub_18FCEE370()
{
  swift_retain();
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  sub_18FCA3140(v0, (uint64_t)&v3);
  swift_release();
  swift_bridgeObjectRelease();
  if (*((void *)&v4 + 1))
  {
    v6[0] = v3;
    v6[1] = v4;
    uint64_t v7 = v5;
    char v1 = sub_18FCE449C();
    sub_18FCA36B8((uint64_t)v6);
  }
  else
  {
    sub_18FCA7A04((uint64_t)&v3, &qword_1E926B830);
    char v1 = 1;
  }
  return v1 & 1;
}

uint64_t sub_18FCEE418(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  type metadata accessor for AXMigratingDecoder();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = sub_18FCE982C(v5, v4);
  sub_18FCE99BC((uint64_t)v6, a2);
  return swift_release();
}

uint64_t sub_18FCEE4B8()
{
  return sub_18FCEE370() & 1;
}

uint64_t sub_18FCEE4E0()
{
  swift_retain();
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  char v1 = sub_18FCE5D24(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

_OWORD *sub_18FCEE540()
{
  swift_retain();
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  char v1 = sub_18FCE5E38(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

double sub_18FCEE5B0()
{
  swift_retain();
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  double v1 = sub_18FCE5F5C(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

float sub_18FCEE618()
{
  swift_retain();
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  float v1 = sub_18FCE6078(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

_OWORD *sub_18FCEE680(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE76C(a1, a2, MEMORY[0x1E4FBB550], (uint64_t (*)(long long *, uint64_t))sub_18FCE7FE4);
}

_OWORD *sub_18FCEE6B4(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE854(a1, a2, (uint64_t (*)(long long *))sub_18FCE7254);
}

_OWORD *sub_18FCEE6E0(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE8E8(a1, a2, (uint64_t (*)(long long *))sub_18FCE76F0);
}

_OWORD *sub_18FCEE70C(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE97C(a1, a2, (uint64_t (*)(long long *))sub_18FCE7B70);
}

_OWORD *sub_18FCEE738(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE76C(a1, a2, MEMORY[0x1E4FBC1C8], (uint64_t (*)(long long *, uint64_t))sub_18FCE7FE4);
}

_OWORD *sub_18FCEE76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *, uint64_t))
{
  swift_retain();
  uint64_t v6 = (void *)swift_bridgeObjectRetain();
  uint64_t v7 = sub_18FCE6500(v6, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_18FCEE7DC()
{
  return sub_18FD02C20();
}

_OWORD *sub_18FCEE7F4(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE76C(a1, a2, MEMORY[0x1E4FBB808], (uint64_t (*)(long long *, uint64_t))sub_18FCE9138);
}

_OWORD *sub_18FCEE828(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE854(a1, a2, (uint64_t (*)(long long *))sub_18FCE8408);
}

_OWORD *sub_18FCEE854(uint64_t a1, uint64_t a2, uint64_t (*a3)(long long *))
{
  swift_retain();
  uint64_t v4 = (void *)swift_bridgeObjectRetain();
  uint64_t v5 = sub_18FCE6194(v4, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

_OWORD *sub_18FCEE8BC(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE8E8(a1, a2, (uint64_t (*)(long long *))sub_18FCE887C);
}

_OWORD *sub_18FCEE8E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(long long *))
{
  swift_retain();
  uint64_t v4 = (void *)swift_bridgeObjectRetain();
  uint64_t v5 = sub_18FCE62B8(v4, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

_OWORD *sub_18FCEE950(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE97C(a1, a2, (uint64_t (*)(long long *))sub_18FCE8CE0);
}

_OWORD *sub_18FCEE97C(uint64_t a1, uint64_t a2, uint64_t (*a3)(long long *))
{
  swift_retain();
  uint64_t v4 = (void *)swift_bridgeObjectRetain();
  uint64_t v5 = sub_18FCE63DC(v4, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

_OWORD *sub_18FCEE9E4(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE76C(a1, a2, MEMORY[0x1E4FBC538], (uint64_t (*)(long long *, uint64_t))sub_18FCE9138);
}

uint64_t sub_18FCEEA18()
{
  return sub_18FD02C30();
}

uint64_t sub_18FCEEA30(uint64_t a1, uint64_t a2)
{
  return sub_18FCEE418(a1, a2);
}

void *sub_18FCEEA54(void *result)
{
  uint64_t v2 = result[2];
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_18FCAE294(result, v10, 1, v3);
  long long v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E926B848);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    long long v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_18FCEEB54(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18FCEEB64@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCEEBB4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCEEC04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return result;
}

uint64_t sub_18FCEEC4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t method lookup function for AXMigratingDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXMigratingDecoder);
}

uint64_t dispatch thunk of AXMigratingDecoder.codingPath.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AXMigratingDecoder.codingPath.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AXMigratingDecoder.codingPath.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AXMigratingDecoder.userInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AXMigratingDecoder.userInfo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AXMigratingDecoder.userInfo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AXMigratingDecoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of AXMigratingDecoder.decode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AXMigratingDecoder.decode<A>(_:from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of AXMigratingDecoder.container<A>(keyedBy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of AXMigratingDecoder.unkeyedContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of AXMigratingDecoder.singleValueContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_18FCEEEAC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AXMigratingUnKeyedDecoding(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXMigratingUnKeyedDecoding);
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.count.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.currentIndex.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.currentIndex.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.currentIndex.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.isAtEnd.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.decode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 336))() & 1;
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.decode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.decodeNil()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))() & 1;
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.nestedContainer<A>(keyedBy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.nestedUnkeyedContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of AXMigratingUnKeyedDecoding.superDecoder()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t sub_18FCEF494(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_18FCEF49C()
{
  return sub_18FD02E20();
}

unint64_t sub_18FCEF500()
{
  unint64_t result = qword_1E926C810;
  if (!qword_1E926C810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E926C808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C810);
  }
  return result;
}

uint64_t sub_18FCEF55C(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_18FCEF574(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A8);
  uint64_t v2 = (void *)sub_18FD028C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_18FCA963C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FCEF698(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C828);
  uint64_t v2 = (void *)sub_18FD028C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_18FCA963C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FCEF7B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C820);
  uint64_t v6 = sub_18FD028C0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_18FCDF1C0(v12, (uint64_t)v5, &qword_1E926B7A8);
    unint64_t result = sub_18FCA96B4((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_18FD02860();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_18FCD00F0(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FCEF9B4(uint64_t a1)
{
  return sub_18FCEF9CC(a1, &qword_1E926C7A8);
}

unint64_t sub_18FCEF9C0(uint64_t a1)
{
  return sub_18FCEF9CC(a1, &qword_1E926C798);
}

unint64_t sub_18FCEF9CC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_18FD028C0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_18FCA963C(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    long long v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *AXMigratingEncoder.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  uint64_t v5 = 0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  v0[2] = v1;
  return v0;
}

void *AXMigratingEncoder.init()()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  type metadata accessor for AXDataHolder();
  memset(v4, 0, sizeof(v4));
  uint64_t v5 = 0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v4, v2 + 16);
  swift_endAccess();
  v0[4] = v2;
  v0[2] = v1;
  return v0;
}

uint64_t sub_18FCEFC50()
{
  type metadata accessor for AXMigratingKeyedEncoding();
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_18FCF4ACC(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_getWitnessTable();
  return sub_18FD029C0();
}

uint64_t type metadata accessor for AXMigratingKeyedEncoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_18FCEFD38@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = type metadata accessor for AXMigratingUnKeyedEncoding();
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v3;
  void v6[3] = 0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRelease();
  void v6[4] = v4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B818);
  sub_18FCA3B08(&qword_1E926B820, &qword_1E926B818);
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v8, v3);
  swift_bridgeObjectRelease();
  swift_release();
  sub_18FCA3568((uint64_t)v8);
  a1[3] = v5;
  uint64_t result = sub_18FCF4B8C(&qword_1E926B5F0, 255, (void (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedEncoding);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_18FCEFE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = type metadata accessor for AXMigratingSingleValueEncoding();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = v5;
  uint64_t result = sub_18FCF4B8C(&qword_1E926B5F8, 255, (void (*)(uint64_t))type metadata accessor for AXMigratingSingleValueEncoding);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_18FCEFF70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v12 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  swift_beginAccess();
  swift_retain();
  sub_18FCA3BCC((uint64_t)&v10, v6 + 16);
  swift_endAccess();
  swift_release();
  *((void *)&v11 + 1) = type metadata accessor for AXMigratingEncoder();
  uint64_t v12 = sub_18FCF4B8C(&qword_1E926B600, v7, (void (*)(uint64_t))type metadata accessor for AXMigratingEncoder);
  *(void *)&long long v10 = v2;
  swift_retain();
  sub_18FD020B0();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  if (!v3)
  {
    swift_retain();
    sub_18FCA26E4(a1, MEMORY[0x1E4FBC860]);
    swift_release();
    uint64_t v9 = *(void *)(v2 + 32);
    swift_beginAccess();
    sub_18FCDF1C0(v9 + 16, a2, &qword_1E926B830);
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    swift_beginAccess();
    swift_retain();
    sub_18FCA3BCC((uint64_t)&v10, v9 + 16);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t AXMigratingEncoder.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AXMigratingEncoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCF019C()
{
  return sub_18FCEFC50();
}

uint64_t sub_18FCF01C0@<X0>(void *a1@<X8>)
{
  return sub_18FCEFD38(a1);
}

uint64_t sub_18FCF01E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_18FCEFE9C(a1);
}

uint64_t sub_18FCF0208()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0298()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0334()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF03C4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0454()
{
  return sub_18FCF07AC();
}

uint64_t sub_18FCF047C()
{
  return sub_18FCF056C();
}

uint64_t sub_18FCF04A4()
{
  return sub_18FCF062C();
}

uint64_t sub_18FCF04CC()
{
  return sub_18FCF06EC();
}

uint64_t sub_18FCF04F4()
{
  return sub_18FCF07AC();
}

uint64_t sub_18FCF051C()
{
  return sub_18FCF07AC();
}

uint64_t sub_18FCF0544()
{
  return sub_18FCF056C();
}

uint64_t sub_18FCF056C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0604()
{
  return sub_18FCF062C();
}

uint64_t sub_18FCF062C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF06C4()
{
  return sub_18FCF06EC();
}

uint64_t sub_18FCF06EC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0784()
{
  return sub_18FCF07AC();
}

uint64_t sub_18FCF07AC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0844(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = type metadata accessor for AXMigratingEncoder();
  uint64_t v8 = (void *)swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v8[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  void v8[4] = v5;
  _OWORD v8[2] = v6;
  uint64_t v12[3] = v7;
  void v12[4] = sub_18FCF4B8C(&qword_1E926B600, v9, (void (*)(uint64_t))type metadata accessor for AXMigratingEncoder);
  v12[0] = v8;
  swift_retain();
  sub_18FD020B0();
  if (v3)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    long long v11 = *(void **)(v2 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_18FCA26E4(a2, v11);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_18FCF09A0()
{
  return sub_18FCF3FDC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_18FCF09CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCF09D8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 24);
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCA2C3C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v3);
  return swift_release();
}

uint64_t sub_18FCF0A54()
{
  return sub_18FCF0208();
}

uint64_t sub_18FCF0A78()
{
  return sub_18FCF0298();
}

uint64_t sub_18FCF0A9C()
{
  return sub_18FCF0334();
}

uint64_t sub_18FCF0AC0()
{
  return sub_18FCF03C4();
}

uint64_t sub_18FCF0AE4()
{
  return sub_18FCF0454();
}

uint64_t sub_18FCF0B08()
{
  return sub_18FCF047C();
}

uint64_t sub_18FCF0B2C()
{
  return sub_18FCF04A4();
}

uint64_t sub_18FCF0B50()
{
  return sub_18FCF04CC();
}

uint64_t sub_18FCF0B74()
{
  return sub_18FCF04F4();
}

uint64_t sub_18FCF0B98()
{
  return sub_18FD02C40();
}

uint64_t sub_18FCF0BB0()
{
  return sub_18FCF051C();
}

uint64_t sub_18FCF0BD4()
{
  return sub_18FCF0544();
}

uint64_t sub_18FCF0BF8()
{
  return sub_18FCF0604();
}

uint64_t sub_18FCF0C1C()
{
  return sub_18FCF06C4();
}

uint64_t sub_18FCF0C40()
{
  return sub_18FCF0784();
}

uint64_t sub_18FCF0C64()
{
  return sub_18FD02C50();
}

uint64_t sub_18FCF0C7C(uint64_t a1, uint64_t a2)
{
  return sub_18FCF0844(a1, a2);
}

double sub_18FCF0CA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a3 = xmmword_18FD07D60;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 24) = a2;
  return result;
}

uint64_t sub_18FCF0CB4()
{
  return *(void *)v0;
}

uint64_t sub_18FCF0CC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_18FCED578();
  uint64_t result = sub_18FD02650();
  *a2 = a1;
  a2[1] = 0;
  a2[2] = result;
  a2[3] = v5;
  return result;
}

uint64_t sub_18FCF0D18(uint64_t a1)
{
  unint64_t v2 = sub_18FCA37E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_18FCF0D54(uint64_t a1)
{
  unint64_t v2 = sub_18FCA37E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_18FCF0D90()
{
  uint64_t v1 = v0;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF0ED4()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF102C()
{
  uint64_t v1 = v0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF1190()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF12E8()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF1440()
{
  return sub_18FCF19D8();
}

uint64_t sub_18FCF1468()
{
  return sub_18FCF1558();
}

uint64_t sub_18FCF1490()
{
  return sub_18FCF16D8();
}

uint64_t sub_18FCF14B8()
{
  return sub_18FCF1858();
}

uint64_t sub_18FCF14E0()
{
  return sub_18FCF19D8();
}

uint64_t sub_18FCF1508()
{
  return sub_18FCF19D8();
}

uint64_t sub_18FCF1530()
{
  return sub_18FCF1558();
}

uint64_t sub_18FCF1558()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF16B0()
{
  return sub_18FCF16D8();
}

uint64_t sub_18FCF16D8()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF1830()
{
  return sub_18FCF1858();
}

uint64_t sub_18FCF1858()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF19B0()
{
  return sub_18FCF19D8();
}

uint64_t sub_18FCF19D8()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_18FD02700();
  unint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    sub_18FCA2C3C((uint64_t)v13, v2);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_18FCA3568((uint64_t)v13);
  }
  return result;
}

uint64_t sub_18FCF1B30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void **)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v7 = *(void *)(v2 + 24);
  v20[0] = v7;
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v10 = *(void *)(v2 + 24);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = result;
    uint64_t v14 = v9;
    *(void *)(v3 + 24) = v12;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v15 = swift_allocObject();
    *(void *)(inited + 32) = v15;
    *(void *)(v15 + 16) = v7;
    *(unsigned char *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = v13;
    *(void *)(v15 + 40) = v14;
    v20[0] = v5;
    sub_18FCEEA54((void *)inited);
    uint64_t v16 = *(void *)(v3 + 32);
    uint64_t v17 = type metadata accessor for AXMigratingEncoder();
    uint64_t v18 = (void *)swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    v18[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
    v18[4] = v16;
    _OWORD v18[2] = v5;
    v20[3] = v17;
    void v20[4] = sub_18FCF4B8C(&qword_1E926B600, v19, (void (*)(uint64_t))type metadata accessor for AXMigratingEncoder);
    v20[0] = v18;
    swift_retain();
    sub_18FD020B0();
    if (v20[15])
    {
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      swift_retain();
      sub_18FCA26E4(a2, v5);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_18FCF1D4C()
{
  uint64_t v1 = v0;
  type metadata accessor for AXMigratingKeyedEncoding();
  uint64_t v2 = *(void **)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v4 = *(void *)(v0 + 24);
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v7 = *(void *)(v0 + 24);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t v11 = v6;
    *(void *)(v1 + 24) = v9;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v12 = swift_allocObject();
    *(void *)(inited + 32) = v12;
    *(void *)(v12 + 16) = v4;
    *(unsigned char *)(v12 + 24) = 0;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_18FCEEA54((void *)inited);
    uint64_t v13 = *(void *)(v1 + 32);
    swift_retain();
    sub_18FCF4ACC(v2, v13);
    swift_bridgeObjectRelease();
    swift_release();
    swift_getWitnessTable();
    return sub_18FD029C0();
  }
  return result;
}

uint64_t sub_18FCF1ECC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v1 + 24);
  v19[0] = v6;
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v9 = *(void *)(v1 + 24);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = result;
    uint64_t v13 = v8;
    *(void *)(v2 + 24) = v11;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v14 = swift_allocObject();
    *(void *)(inited + 32) = v14;
    *(void *)(v14 + 16) = v6;
    *(unsigned char *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = v12;
    *(void *)(v14 + 40) = v13;
    v19[0] = v4;
    sub_18FCEEA54((void *)inited);
    uint64_t v15 = v4;
    uint64_t v16 = *(void *)(v2 + 32);
    uint64_t v17 = type metadata accessor for AXMigratingUnKeyedEncoding();
    uint64_t v18 = (void *)swift_allocObject();
    _OWORD v18[2] = v15;
    v18[3] = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18[4] = v16;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B818);
    sub_18FCA3B08(&qword_1E926B820, &qword_1E926B818);
    sub_18FD02700();
    sub_18FCA2C3C((uint64_t)v19, v15);
    swift_bridgeObjectRelease();
    swift_release();
    sub_18FCA3568((uint64_t)v19);
    a1[3] = v17;
    uint64_t result = sub_18FCF4B8C(&qword_1E926B5F0, 255, (void (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedEncoding);
    a1[4] = result;
    *a1 = v18;
  }
  return result;
}

uint64_t sub_18FCF20D4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AXMigratingEncoder();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v5[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  type metadata accessor for AXDataHolder();
  memset(v21, 0, sizeof(v21));
  uint64_t v22 = 0;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 32) = 0u;
  *(void *)(v7 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v7 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v21, v7 + 16);
  swift_endAccess();
  void v5[4] = v7;
  uint64_t v5[2] = v6;
  uint64_t v8 = *(void *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v10 = *(void *)(v2 + 24);
  *(void *)&v21[0] = v10;
  sub_18FCED578();
  swift_bridgeObjectRetain();
  uint64_t result = sub_18FD02650();
  uint64_t v13 = *(void *)(v2 + 24);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = result;
    uint64_t v17 = v12;
    *(void *)(v2 + 24) = v15;
    *(void *)(inited + 56) = &type metadata for AXCodingKey;
    *(void *)(inited + 64) = sub_18FCA37E8();
    uint64_t v18 = swift_allocObject();
    *(void *)(inited + 32) = v18;
    *(void *)(v18 + 16) = v10;
    *(unsigned char *)(v18 + 24) = 0;
    *(void *)(v18 + 32) = v16;
    *(void *)(v18 + 40) = v17;
    *(void *)&v21[0] = v8;
    sub_18FCEEA54((void *)inited);
    uint64_t v19 = *(void *)&v21[0];
    swift_beginAccess();
    uint64_t v5[2] = v19;
    swift_bridgeObjectRelease();
    a1[3] = v4;
    uint64_t result = sub_18FCF4B8C(&qword_1E926B600, v20, (void (*)(uint64_t))type metadata accessor for AXMigratingEncoder);
    a1[4] = result;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_18FCF22D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCF2314()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_18FCF2320()
{
  return sub_18FCF0D90();
}

uint64_t sub_18FCF2344()
{
  return sub_18FCF0ED4();
}

uint64_t sub_18FCF2368()
{
  return sub_18FCF102C();
}

uint64_t sub_18FCF238C()
{
  return sub_18FCF1190();
}

uint64_t sub_18FCF23B0()
{
  return sub_18FCF12E8();
}

uint64_t sub_18FCF23D4()
{
  return sub_18FCF1440();
}

uint64_t sub_18FCF23F8()
{
  return sub_18FCF1468();
}

uint64_t sub_18FCF241C()
{
  return sub_18FCF1490();
}

uint64_t sub_18FCF2440()
{
  return sub_18FCF14B8();
}

uint64_t sub_18FCF2464()
{
  return sub_18FCF14E0();
}

uint64_t sub_18FCF2488()
{
  return sub_18FD02BB0();
}

uint64_t sub_18FCF24A0()
{
  return sub_18FCF1508();
}

uint64_t sub_18FCF24C4()
{
  return sub_18FCF1530();
}

uint64_t sub_18FCF24E8()
{
  return sub_18FCF16B0();
}

uint64_t sub_18FCF250C()
{
  return sub_18FCF1830();
}

uint64_t sub_18FCF2530()
{
  return sub_18FCF19B0();
}

uint64_t sub_18FCF2554()
{
  return sub_18FD02BC0();
}

uint64_t sub_18FCF256C(uint64_t a1, uint64_t a2)
{
  return sub_18FCF1B30(a1, a2);
}

uint64_t sub_18FCF2590()
{
  return sub_18FD02A90();
}

uint64_t sub_18FCF25BC()
{
  return sub_18FD02AC0();
}

uint64_t sub_18FCF25E8()
{
  return sub_18FD02AB0();
}

uint64_t sub_18FCF2614()
{
  return sub_18FD02AD0();
}

uint64_t sub_18FCF2640()
{
  return sub_18FD02AE0();
}

uint64_t sub_18FCF266C()
{
  return sub_18FD02AF0();
}

uint64_t sub_18FCF2698()
{
  return sub_18FD02B10();
}

uint64_t sub_18FCF26C4()
{
  return sub_18FD02B20();
}

uint64_t sub_18FCF26F0()
{
  return sub_18FD02B30();
}

uint64_t sub_18FCF271C()
{
  return sub_18FD02B40();
}

uint64_t sub_18FCF2748()
{
  return sub_18FD02B60();
}

uint64_t sub_18FCF2774()
{
  return sub_18FD02B00();
}

uint64_t sub_18FCF27A0()
{
  return sub_18FD02B50();
}

uint64_t sub_18FCF27CC()
{
  return sub_18FD02B70();
}

uint64_t sub_18FCF27F8()
{
  return sub_18FD02B80();
}

uint64_t sub_18FCF2824()
{
  return sub_18FD02B90();
}

uint64_t sub_18FCF2850()
{
  return sub_18FD02BA0();
}

uint64_t sub_18FCF287C()
{
  return sub_18FD02AA0();
}

uint64_t sub_18FCF28B0()
{
  return sub_18FCF1D4C();
}

uint64_t sub_18FCF28D4@<X0>(void *a1@<X8>)
{
  return sub_18FCF1ECC(a1);
}

uint64_t sub_18FCF28F8@<X0>(void *a1@<X8>)
{
  return sub_18FCF20D4(a1);
}

uint64_t sub_18FCF291C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v6 = *(void *)(v3 + 80);
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = *(void *)(v3 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  sub_18FCA2C3C((uint64_t)v9, v4);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v9);
  return swift_release();
}

uint64_t sub_18FCF2A50(char a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  char v12 = a1;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF2BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v6 = (void *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a3, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  swift_bridgeObjectRetain();
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF2D04(uint64_t a1, double a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a1, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  *(double *)&v11[15] = a2;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF2E58(uint64_t a1, float a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a1, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  float v12 = a2;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF2FAC(uint64_t a1, uint64_t a2)
{
  return sub_18FCF352C(a1, a2);
}

uint64_t sub_18FCF2FD4(char a1, uint64_t a2)
{
  return sub_18FCF30C4(a1, a2);
}

uint64_t sub_18FCF2FFC(__int16 a1, uint64_t a2)
{
  return sub_18FCF323C(a1, a2);
}

uint64_t sub_18FCF3024(int a1, uint64_t a2)
{
  return sub_18FCF33B4(a1, a2);
}

uint64_t sub_18FCF304C(uint64_t a1, uint64_t a2)
{
  return sub_18FCF352C(a1, a2);
}

uint64_t sub_18FCF3074(uint64_t a1, uint64_t a2)
{
  return sub_18FCF352C(a1, a2);
}

uint64_t sub_18FCF309C(char a1, uint64_t a2)
{
  return sub_18FCF30C4(a1, a2);
}

uint64_t sub_18FCF30C4(char a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  char v12 = a1;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF3214(__int16 a1, uint64_t a2)
{
  return sub_18FCF323C(a1, a2);
}

uint64_t sub_18FCF323C(__int16 a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  __int16 v12 = a1;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF338C(int a1, uint64_t a2)
{
  return sub_18FCF33B4(a1, a2);
}

uint64_t sub_18FCF33B4(int a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  int v12 = a1;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF3504(uint64_t a1, uint64_t a2)
{
  return sub_18FCF352C(a1, a2);
}

uint64_t sub_18FCF352C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  v11[0] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  v11[15] = a1;
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v11, v6);
  swift_bridgeObjectRelease();
  sub_18FCA3568((uint64_t)v11);
  return swift_release();
}

uint64_t sub_18FCF367C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v4;
  uint64_t v8 = (void *)v4[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v10 = *(void *)(v7 + 80);
  *(void *)(inited + 56) = v10;
  *(void *)(inited + 64) = *(void *)(v7 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  v18[0] = v8;
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  int v12 = v8;
  uint64_t v13 = v4[3];
  uint64_t v14 = type metadata accessor for AXMigratingEncoder();
  uint64_t v15 = (void *)swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  void v15[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  void v15[4] = v13;
  v15[2] = v12;
  v18[3] = v14;
  v18[4] = sub_18FCF4B8C(&qword_1E926B600, v16, (void (*)(uint64_t))type metadata accessor for AXMigratingEncoder);
  v18[0] = v15;
  swift_retain();
  sub_18FD020B0();
  if (v18[15])
  {
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    swift_retain();
    sub_18FCA26E4(a3, v12);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_18FCF3890(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v3;
  type metadata accessor for AXMigratingKeyedEncoding();
  uint64_t v6 = (void *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v8 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, a2, v8);
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v10 = v3[3];
  swift_retain();
  sub_18FCF4ACC(v6, v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_getWitnessTable();
  return sub_18FD029C0();
}

uint64_t sub_18FCF3A10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = (void *)v3[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v9 = *(void *)(v6 + 80);
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = *(void *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  v15[0] = v7;
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v11 = v3[3];
  uint64_t v12 = type metadata accessor for AXMigratingUnKeyedEncoding();
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v7;
  void v13[3] = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v13[4] = v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B818);
  sub_18FCA3B08(&qword_1E926B820, &qword_1E926B818);
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v15, v7);
  swift_bridgeObjectRelease();
  swift_release();
  sub_18FCA3568((uint64_t)v15);
  a2[3] = v12;
  uint64_t result = sub_18FCF4B8C(&qword_1E926B5F0, 255, (void (*)(uint64_t))type metadata accessor for AXMigratingUnKeyedEncoding);
  a2[4] = result;
  *a2 = v13;
  return result;
}

uint64_t sub_18FCF3C10@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_18FD02600();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v12 - v9;
  sub_18FD02E20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    sub_18FCF3DBC((uint64_t)v10, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v3);
  }
  return result;
}

uint64_t sub_18FCF3DBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for AXMigratingEncoder();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  v7[3] = sub_18FCEF7B4(MEMORY[0x1E4FBC860]);
  type metadata accessor for AXDataHolder();
  memset(v17, 0, sizeof(v17));
  uint64_t v18 = 0;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 32) = 0u;
  *(void *)(v9 + 4_Block_object_dispose(&a9, 8) = 0;
  *(_OWORD *)(v9 + 16) = 0u;
  swift_beginAccess();
  sub_18FCA3BCC((uint64_t)v17, v9 + 16);
  swift_endAccess();
  void v7[4] = v9;
  _OWORD v7[2] = v8;
  uint64_t v10 = v2[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FD07480;
  uint64_t v12 = *(void *)(v5 + 80);
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 64) = *(void *)(v5 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(boxed_opaque_existential_0, a1, v12);
  *(void *)&v17[0] = v10;
  swift_bridgeObjectRetain();
  sub_18FCEEA54((void *)inited);
  uint64_t v14 = *(void *)&v17[0];
  swift_beginAccess();
  _OWORD v7[2] = v14;
  swift_bridgeObjectRelease();
  a2[3] = v6;
  uint64_t result = sub_18FCF4B8C(&qword_1E926B600, v15, (void (*)(uint64_t))type metadata accessor for AXMigratingEncoder);
  a2[4] = result;
  *a2 = v7;
  return result;
}

uint64_t sub_18FCF3FB0()
{
  return sub_18FCF3FDC(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_18FCF3FDC(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  return swift_deallocClassInstance();
}

uint64_t sub_18FCF4034(uint64_t a1)
{
  return sub_18FCF291C(a1);
}

uint64_t sub_18FCF4058(char a1, uint64_t a2)
{
  return sub_18FCF2A50(a1, a2);
}

uint64_t sub_18FCF407C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCF2BA4(a1, a2, a3);
}

uint64_t sub_18FCF40A0(uint64_t a1, double a2)
{
  return sub_18FCF2D04(a1, a2);
}

uint64_t sub_18FCF40C4(uint64_t a1, float a2)
{
  return sub_18FCF2E58(a1, a2);
}

uint64_t sub_18FCF40E8(uint64_t a1, uint64_t a2)
{
  return sub_18FCF2FAC(a1, a2);
}

uint64_t sub_18FCF410C(char a1, uint64_t a2)
{
  return sub_18FCF2FD4(a1, a2);
}

uint64_t sub_18FCF4130(__int16 a1, uint64_t a2)
{
  return sub_18FCF2FFC(a1, a2);
}

uint64_t sub_18FCF4154(int a1, uint64_t a2)
{
  return sub_18FCF3024(a1, a2);
}

uint64_t sub_18FCF4178(uint64_t a1, uint64_t a2)
{
  return sub_18FCF304C(a1, a2);
}

uint64_t sub_18FCF419C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF42A8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBC058]);
}

uint64_t sub_18FCF41C8(uint64_t a1, uint64_t a2)
{
  return sub_18FCF3074(a1, a2);
}

uint64_t sub_18FCF41EC(char a1, uint64_t a2)
{
  return sub_18FCF309C(a1, a2);
}

uint64_t sub_18FCF4210(__int16 a1, uint64_t a2)
{
  return sub_18FCF3214(a1, a2);
}

uint64_t sub_18FCF4234(int a1, uint64_t a2)
{
  return sub_18FCF338C(a1, a2);
}

uint64_t sub_18FCF4258(uint64_t a1, uint64_t a2)
{
  return sub_18FCF3504(a1, a2);
}

uint64_t sub_18FCF427C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF42A8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBC060]);
}

uint64_t sub_18FCF42A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = type metadata accessor for AXMigratingKeyedEncoding();
  return a6(a1, a2, a3, v11, a5);
}

uint64_t sub_18FCF4318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18FCF367C(a1, a2, a3);
}

uint64_t sub_18FCF433C()
{
  return sub_18FD02CC0();
}

uint64_t sub_18FCF43AC()
{
  return sub_18FD02CA0();
}

uint64_t sub_18FCF4404()
{
  return sub_18FD02C90();
}

uint64_t sub_18FCF446C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF47E8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBBFE8]);
}

uint64_t sub_18FCF4498(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF474C(a1, a2, a3, a4, MEMORY[0x1E4FBBFF0]);
}

uint64_t sub_18FCF44C4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF47E8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBBFF8]);
}

uint64_t sub_18FCF44F0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF4624(a1, a2, a3, a4, MEMORY[0x1E4FBC008]);
}

uint64_t sub_18FCF451C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF46B8(a1, a2, a3, a4, MEMORY[0x1E4FBC010]);
}

uint64_t sub_18FCF4548(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF474C(a1, a2, a3, a4, MEMORY[0x1E4FBC018]);
}

uint64_t sub_18FCF4574(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF47E8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBC020]);
}

uint64_t sub_18FCF45A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18FCF4888(a1, a2, a3, a4, a5, a6, MEMORY[0x1E4FBC030]);
}

uint64_t sub_18FCF45CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF47E8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBC000]);
}

uint64_t sub_18FCF45F8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF4624(a1, a2, a3, a4, MEMORY[0x1E4FBC028]);
}

uint64_t sub_18FCF4624(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for AXMigratingKeyedEncoding();
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_18FCF468C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF46B8(a1, a2, a3, a4, MEMORY[0x1E4FBC038]);
}

uint64_t sub_18FCF46B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for AXMigratingKeyedEncoding();
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_18FCF4720(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF474C(a1, a2, a3, a4, MEMORY[0x1E4FBC040]);
}

uint64_t sub_18FCF474C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for AXMigratingKeyedEncoding();
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_18FCF47BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FCF47E8(a1, a2, a3, a4, a5, MEMORY[0x1E4FBC048]);
}

uint64_t sub_18FCF47E8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a2 & 1;
  uint64_t v11 = type metadata accessor for AXMigratingKeyedEncoding();
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_18FCF485C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18FCF4888(a1, a2, a3, a4, a5, a6, MEMORY[0x1E4FBC050]);
}

uint64_t sub_18FCF4888(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for AXMigratingKeyedEncoding();
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_18FCF490C()
{
  return sub_18FD02CB0();
}

uint64_t sub_18FCF497C(uint64_t a1, uint64_t a2)
{
  return sub_18FCF3890(a1, a2);
}

uint64_t sub_18FCF49A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_18FCF3A10(a1, a2);
}

uint64_t sub_18FCF49C4@<X0>(void *a1@<X8>)
{
  return sub_18FCF3C10(a1);
}

uint64_t sub_18FCF49E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_18FCF3DBC(a1, a2);
}

uint64_t sub_18FCF4A0C(void *a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B7F8);
  sub_18FCA3B08((unint64_t *)&qword_1E926B800, &qword_1E926B7F8);
  sub_18FD02700();
  sub_18FCA2C3C((uint64_t)v5, a1);
  sub_18FCA3568((uint64_t)v5);
  return v2;
}

uint64_t sub_18FCF4ACC(void *a1, uint64_t a2)
{
  return sub_18FCF4A0C(a1, a2);
}

uint64_t type metadata accessor for AXMigratingUnKeyedEncoding()
{
  return self;
}

uint64_t type metadata accessor for AXMigratingSingleValueEncoding()
{
  return self;
}

uint64_t type metadata accessor for AXMigratingEncoder()
{
  return self;
}

uint64_t sub_18FCF4B8C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCF4BD4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCF4C24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for AXMigratingEncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXMigratingEncoder);
}

uint64_t dispatch thunk of AXMigratingEncoder.codingPath.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AXMigratingEncoder.codingPath.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AXMigratingEncoder.codingPath.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AXMigratingEncoder.userInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AXMigratingEncoder.userInfo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AXMigratingEncoder.userInfo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AXMigratingEncoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AXMigratingEncoder.container<A>(keyedBy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AXMigratingEncoder.unkeyedContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of AXMigratingEncoder.singleValueContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of AXMigratingEncoder.encode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t destroy for AXCodingKey()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AXCodingKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AXCodingKey(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AXCodingKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + _Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AXCodingKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXCodingKey()
{
  return &type metadata for AXCodingKey;
}

unint64_t sub_18FCF4F98()
{
  unint64_t result = qword_1E926B7C8;
  if (!qword_1E926B7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926B7C8);
  }
  return result;
}

unint64_t sub_18FCF4FF0()
{
  unint64_t result = qword_1E926B7C0;
  if (!qword_1E926B7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926B7C0);
  }
  return result;
}

uint64_t sub_18FCF5044()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_18FCF507C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_18FD02430();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_18FD02420();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_18FCA5CCC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18FD02390();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t AsyncSequence.assign<A>(to:on:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF5BD0(a1, a2, a3, a4, (uint64_t)&unk_1EDF5FE60, (uint64_t)asc_1E926C838);
}

{
  return sub_18FCF5BD0(a1, a2, a3, a4, (uint64_t)&unk_1EDF5FE88, (uint64_t)&unk_1E926C848);
}

uint64_t sub_18FCF521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  double v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  void v8[4] = a6;
  _OWORD v8[2] = a4;
  uint64_t v10 = *(void *)(*MEMORY[0x1E4FBBE08] + *a6 + 8);
  v8[7] = v10;
  v8[8] = *(void *)(v10 - 8);
  v8[9] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  v8[11] = *(void *)(AssociatedTypeWitness - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  sub_18FD02600();
  v8[14] = swift_task_alloc();
  v8[15] = *(void *)(a7 - 8);
  unsigned char v8[16] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v8[17] = v12;
  v8[18] = *(void *)(v12 - 8);
  v8[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCF54AC, 0, 0);
}

uint64_t sub_18FCF54AC()
{
  (*(void (**)(void, void, void))(v0[15] + 16))(v0[16], v0[2], v0[5]);
  sub_18FD02530();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[20] = AssociatedConformanceWitness;
  unint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  void *v2 = v0;
  v2[1] = sub_18FCF55C0;
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_18FCF55C0()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_18FCF58A4;
  }
  else {
    uint64_t v1 = sub_18FCF56D0;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_18FCF56D0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2);
    swift_setAtReferenceWritableKeyPath();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[20] = AssociatedConformanceWitness;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[21] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_18FCF55C0;
    uint64_t v8 = v0[17];
    uint64_t v10 = v0[13];
    uint64_t v9 = v0[14];
    return MEMORY[0x1F4187C80](v9, 0, 0, v10, v8, AssociatedConformanceWitness);
  }
}

uint64_t sub_18FCF58A4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 32);
  v1(v0[12], v0[13], v0[10]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_18FD02BD0();
  uint64_t v3 = v0[12];
  if (v2)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  }
  else
  {
    uint64_t v4 = v0[10];
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_18FCF5A28(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[6];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = *(void *)(v1[5] - 8);
  unint64_t v8 = (v6 + *(void *)(*(void *)(v4 - 8) + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + v6;
  uint64_t v12 = (uint64_t)v1 + v8;
  uint64_t v13 = *(void **)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_18FCA1444;
  return sub_18FCF521C(a1, v9, v10, v11, v12, v13, v4, v5);
}

uint64_t sub_18FCF5BD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a1;
  uint64_t v32 = a6;
  uint64_t v29 = a5;
  uint64_t v30 = a4;
  uint64_t v7 = v6;
  uint64_t v28 = a2;
  uint64_t v9 = *(void *)(*a1 + *MEMORY[0x1E4FBBE08]);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v27 - v13;
  long long v27 = (char *)&v27 - v13;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_18FD02430();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v7, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v28, v9);
  unint64_t v23 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v24 = (v17 + v23 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = a3;
  *((void *)v25 + 5) = v9;
  *((void *)v25 + 6) = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v25[v23], v18, a3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v25[v24], v27, v9);
  *(void *)&v25[(v11 + v24 + 7) & 0xFFFFFFFFFFFFFFF8] = v31;
  swift_retain();
  return sub_18FCF507C((uint64_t)v21, v32, (uint64_t)v25);
}

uint64_t sub_18FCF5EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  double v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  void v8[4] = a6;
  _OWORD v8[2] = a4;
  uint64_t v10 = *a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[7] = AssociatedTypeWitness;
  v8[8] = *(void *)(AssociatedTypeWitness - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  v8[11] = *(void *)(*MEMORY[0x1E4FBBE08] + v10 + 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(a7 - 8);
  v8[15] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  unsigned char v8[16] = v12;
  v8[17] = *(void *)(v12 - 8);
  v8[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCF60E8, 0, 0);
}

uint64_t sub_18FCF60E8()
{
  (*(void (**)(void, void, void))(v0[14] + 16))(v0[15], v0[2], v0[5]);
  sub_18FD02530();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[19] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = v2;
  void *v2 = v0;
  v2[1] = sub_18FCF6200;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  return MEMORY[0x1F4187C80](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_18FCF6200()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_18FCF6550;
  }
  else {
    uint64_t v1 = sub_18FCF6310;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_18FCF6310()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = *(void *)(v0[11] + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[12];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v2);
    swift_setAtReferenceWritableKeyPath();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[19] = AssociatedConformanceWitness;
    unint64_t v8 = (void *)swift_task_alloc();
    v0[20] = v8;
    void *v8 = v0;
    v8[1] = sub_18FCF6200;
    uint64_t v9 = v0[16];
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[10];
    return MEMORY[0x1F4187C80](v10, 0, 0, v11, v9, AssociatedConformanceWitness);
  }
}

uint64_t sub_18FCF6550()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[8] + 32);
  v1(v0[9], v0[10], v0[7]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_18FD02BD0();
  uint64_t v3 = v0[9];
  if (v2)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  }
  else
  {
    uint64_t v4 = v0[7];
    swift_allocError();
    v1(v5, v3, v4);
  }
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = *(void *)(v2 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v4 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v2);
  swift_release();
  return MEMORY[0x1F4186498](v0, v10, v9);
}

uint64_t sub_18FCF6828(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[6];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = *(void *)(v1[5] - 8);
  unint64_t v8 = (v6 + *(void *)(*(void *)(v4 - 8) + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + v6;
  uint64_t v12 = (uint64_t)v1 + v8;
  uint64_t v13 = *(uint64_t **)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_18FCA1444;
  return sub_18FCF5EA4(a1, v9, v10, v11, v12, v13, v4, v5);
}

uint64_t AsyncSequence.assignObject<A>(to:on:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = *a1;
  uint64_t v25 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  unint64_t v23 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_18FD02430();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a3);
  sub_18FD02400();
  swift_retain();
  swift_retain();
  uint64_t v14 = sub_18FD023F0();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBCFD8];
  *((void *)v17 + 2) = v14;
  *((void *)v17 + 3) = v18;
  *((void *)v17 + 4) = a3;
  uint64_t v19 = v23;
  uint64_t v20 = v25;
  *((void *)v17 + 5) = *(void *)(v24 + *MEMORY[0x1E4FBBE08]);
  *((void *)v17 + 6) = v20;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v15], v19, a3);
  *(void *)&v17[v16] = v13;
  *(void *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = a1;
  swift_release();
  return sub_18FCF507C((uint64_t)v11, (uint64_t)&unk_1E926C858, (uint64_t)v17);
}

uint64_t sub_18FCF6C34()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_18FCF6C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[6] = a4;
  uint64_t v10 = *(void *)(*(void *)(*MEMORY[0x1E4FBBE08] + *a6 + 8) + 16);
  v8[11] = v10;
  v8[12] = *(void *)(v10 - 8);
  v8[13] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  v8[15] = *(void *)(AssociatedTypeWitness - 8);
  unsigned char v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v8[20] = *(void *)(a7 - 8);
  v8[21] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v8[22] = v12;
  v8[23] = *(void *)(v12 - 8);
  v8[24] = swift_task_alloc();
  v8[25] = sub_18FD02400();
  v8[26] = sub_18FD023F0();
  uint64_t v14 = sub_18FD02390();
  v8[27] = v14;
  v8[28] = v13;
  return MEMORY[0x1F4188298](sub_18FCF6F38, v14, v13);
}

uint64_t sub_18FCF6F38()
{
  (*(void (**)(void, void, void))(v0[20] + 16))(v0[21], v0[6], v0[9]);
  sub_18FD02530();
  swift_beginAccess();
  uint64_t v1 = sub_18FD023F0();
  v0[29] = v1;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[30] = AssociatedConformanceWitness;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[31] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_18FCF7094;
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[17];
  uint64_t v7 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F4187C80](v5, v1, v7, v6, v4, AssociatedConformanceWitness);
}

uint64_t sub_18FCF7094()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 224);
  uint64_t v4 = *(void *)(v2 + 216);
  if (v0) {
    uint64_t v5 = sub_18FCF74E8;
  }
  else {
    uint64_t v5 = sub_18FCF71E8;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_18FCF71E8()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  uint64_t v4 = v0[7] + 16;
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[13], v1, v2);
  uint64_t v5 = MEMORY[0x192FC3700](v4);
  if (!v5)
  {
    uint64_t v19 = v0[23];
    uint64_t v18 = v0[24];
    uint64_t v20 = v0[22];
    uint64_t v22 = v0[12];
    uint64_t v21 = v0[13];
    uint64_t v23 = v0[11];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_8;
  }
  uint64_t v6 = v5;
  uint64_t v7 = v0[18];
  uint64_t v9 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v10 = v0[11];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v10);
  v0[5] = v6;
  swift_unknownObjectRetain();
  swift_setAtReferenceWritableKeyPath();
  swift_unknownObjectRelease_n();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = sub_18FD023F0();
  v0[29] = v11;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[30] = AssociatedConformanceWitness;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[31] = v13;
  void *v13 = v0;
  v13[1] = sub_18FCF7094;
  uint64_t v14 = v0[22];
  uint64_t v15 = v0[19];
  uint64_t v16 = v0[17];
  uint64_t v17 = MEMORY[0x1E4FBCFD8];
  return MEMORY[0x1F4187C80](v15, v11, v17, v16, v14, AssociatedConformanceWitness);
}

uint64_t sub_18FCF74E8()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = sub_18FD02BD0();
  uint64_t v7 = v0[16];
  if (v6)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  }
  else
  {
    uint64_t v8 = v0[14];
    swift_allocError();
    v5(v9, v7, v8);
  }
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_18FCF767C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_18FCF776C(uint64_t a1)
{
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v6 = v1[6];
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v4 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v1[2];
  uint64_t v10 = (uint64_t)v1 + v7;
  uint64_t v11 = *(void *)((char *)v1 + v8);
  uint64_t v12 = *(void **)((char *)v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_18FCA05A0;
  return sub_18FCF6C6C(a1, v9, v5, v10, v11, v12, v4, v6);
}

uint64_t AsyncStream.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF8DF8(a1, a2, a3, a4);
}

uint64_t sub_18FCF78C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a6;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v8 = sub_18FD024A0();
  uint64_t v34 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = a5;
  unint64_t v36 = (char *)&v32 - v11;
  uint64_t v12 = a5;
  uint64_t v13 = sub_18FD024E0();
  uint64_t v33 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_18FD02430();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v38, v13);
  uint64_t v22 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v36, a1, v8);
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v24 = (v15 + *(unsigned __int8 *)(v9 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = v12;
  uint64_t v26 = v39;
  *((void *)v25 + 5) = v39;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v25[v23], v17, v33);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v25[v24], v22, v34);
  long long v27 = &v25[(v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v28 = v41;
  *(void *)long long v27 = v40;
  *((void *)v27 + 1) = v28;
  swift_retain();
  uint64_t v29 = sub_18FCA46C8((uint64_t)v20, (uint64_t)&unk_1E926C8B0, (uint64_t)v25);
  uint64_t v30 = (void *)swift_allocObject();
  _OWORD v30[2] = v35;
  v30[3] = v26;
  v30[4] = v29;
  return sub_18FD02460();
}

uint64_t sub_18FCF7BFC(uint64_t a1)
{
  return sub_18FCF9210(a1, sub_18FCF78C8);
}

uint64_t sub_18FCF7C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v14;
  void v8[4] = a6;
  double v8[5] = a7;
  _OWORD v8[2] = a4;
  v8[3] = a5;
  v8[8] = swift_task_alloc();
  uint64_t v10 = sub_18FD02450();
  v8[9] = v10;
  v8[10] = *(void *)(v10 - 8);
  v8[11] = swift_task_alloc();
  v8[12] = *(void *)(a8 - 8);
  v8[13] = swift_task_alloc();
  sub_18FD02600();
  v8[14] = swift_task_alloc();
  uint64_t v11 = sub_18FD024D0();
  v8[15] = v11;
  unsigned char v8[16] = *(void *)(v11 - 8);
  v8[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCF7DF8, 0, 0);
}

uint64_t sub_18FCF7DF8()
{
  sub_18FD024E0();
  sub_18FD024B0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  void *v1 = v0;
  v1[1] = sub_18FCF7EB8;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  return MEMORY[0x1F4187D58](v2, 0, 0, v3);
}

uint64_t sub_18FCF7EB8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCF7FB4, 0, 0);
}

uint64_t sub_18FCF7FB4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[4];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[13], v1, v3);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
    unint64_t v7 = (void *)swift_task_alloc();
    v0[19] = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_18FCF8178;
    uint64_t v8 = v0[13];
    uint64_t v9 = v0[8];
    return v10(v9, v8);
  }
}

uint64_t sub_18FCF8178()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCF8274, 0, 0);
}

uint64_t sub_18FCF8274()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[6];
  sub_18FD024A0();
  sub_18FD02480();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  unint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_18FCF7EB8;
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[15];
  return MEMORY[0x1F4187D58](v8, 0, 0, v9);
}

uint64_t AsyncStream.asyncMap<A>(_:)(void *a1)
{
  uint64_t v3 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  uint64_t v4 = sub_18FD02470();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v8[-v5];
  uint64_t v9 = v1;
  uint64_t v10 = a1;
  nullsub_1(v3);
  sub_18FC9FD5C((uint64_t)v6);
  return sub_18FD024F0();
}

uint64_t sub_18FCF848C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v34 = a3;
  uint64_t v4 = (uint64_t *)(*a3 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v33 = v4[1];
  uint64_t v5 = sub_18FD024A0();
  uint64_t v28 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v29 = *v4;
  uint64_t v8 = v29;
  uint64_t v30 = (char *)&v27 - v9;
  uint64_t v10 = sub_18FD024E0();
  uint64_t v27 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_18FD02430();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v32, v10);
  uint64_t v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v30, a1, v5);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v21 = (v12 + *(unsigned __int8 *)(v6 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v8;
  uint64_t v23 = v33;
  *((void *)v22 + 5) = v33;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v22[v20], v14, v27);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], v19, v28);
  *(void *)&v22[(v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8] = v34;
  swift_retain();
  uint64_t v24 = sub_18FCA46C8((uint64_t)v17, (uint64_t)&unk_1E926C8A0, (uint64_t)v22);
  uint64_t v25 = (void *)swift_allocObject();
  long long v25[2] = v29;
  v25[3] = v23;
  v25[4] = v24;
  return sub_18FD02460();
}

uint64_t sub_18FCF87EC(uint64_t a1)
{
  return sub_18FCF848C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_18FCF87F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void v6[3] = a5;
  void v6[4] = a6;
  _OWORD v6[2] = a4;
  uint64_t v7 = (uint64_t *)(*a6 + *MEMORY[0x1E4FBC5F0]);
  double v6[5] = v7[1];
  v6[6] = swift_task_alloc();
  uint64_t v8 = *v7;
  v6[7] = v8;
  v6[8] = *(void *)(v8 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v9 = sub_18FD02450();
  v6[10] = v9;
  v6[11] = *(void *)(v9 - 8);
  v6[12] = swift_task_alloc();
  sub_18FD02600();
  v6[13] = swift_task_alloc();
  uint64_t v10 = sub_18FD024D0();
  v6[14] = v10;
  v6[15] = *(void *)(v10 - 8);
  v6[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCF8A0C, 0, 0);
}

uint64_t sub_18FCF8A0C()
{
  sub_18FD024E0();
  sub_18FD024B0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  void *v1 = v0;
  v1[1] = sub_18FCF8ACC;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  return MEMORY[0x1F4187D58](v2, 0, 0, v3);
}

uint64_t sub_18FCF8ACC()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCF8BC8, 0, 0);
}

uint64_t sub_18FCF8BC8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v8 = v0[9];
    uint64_t v12 = v0[10];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v1, v2);
    swift_getAtKeyPath();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v2);
    sub_18FD024A0();
    sub_18FD02480();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v12);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[17] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_18FCF8ACC;
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[14];
    return MEMORY[0x1F4187D58](v10, 0, 0, v11);
  }
}

uint64_t AsyncStream.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FCF8DF8(a1, a2, a3, a4);
}

uint64_t sub_18FCF8DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_18FD02470();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v13[-v10];
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = a4;
  uint64_t v16 = v4;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  nullsub_1(a4);
  sub_18FC9FD5C((uint64_t)v11);
  return sub_18FD024F0();
}

uint64_t sub_18FCF8ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v7 = sub_18FD024A0();
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v34 = (char *)&v31 - v9;
  uint64_t v11 = sub_18FD024E0();
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B8A0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_18FD02430();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v36, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + v21 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0;
  uint64_t v24 = v37;
  uint64_t v25 = v38;
  *((void *)v23 + 4) = v37;
  *((void *)v23 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v23[v20], v15, v32);
  uint64_t v26 = &v23[v21];
  uint64_t v27 = v40;
  *(void *)uint64_t v26 = v39;
  *((void *)v26 + 1) = v27;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v23[v22], v34, v33);
  swift_retain();
  uint64_t v28 = sub_18FCA46C8((uint64_t)v18, (uint64_t)&unk_1E926C890, (uint64_t)v23);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = v24;
  v29[3] = v25;
  void v29[4] = v28;
  return sub_18FD02460();
}

uint64_t sub_18FCF91F8(uint64_t a1)
{
  return sub_18FCF9210(a1, sub_18FCF8ED4);
}

uint64_t sub_18FCF9210(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_18FCF9228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v15;
  void v8[4] = a6;
  double v8[5] = a7;
  _OWORD v8[2] = a4;
  v8[3] = a5;
  uint64_t v10 = sub_18FD02450();
  v8[8] = v10;
  v8[9] = *(void *)(v10 - 8);
  v8[10] = swift_task_alloc();
  uint64_t v11 = sub_18FD02600();
  v8[11] = v11;
  v8[12] = *(void *)(v11 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(v15 - 8);
  v8[15] = swift_task_alloc();
  unsigned char v8[16] = swift_task_alloc();
  v8[17] = *(void *)(a8 - 8);
  v8[18] = swift_task_alloc();
  sub_18FD02600();
  v8[19] = swift_task_alloc();
  uint64_t v12 = sub_18FD024D0();
  v8[20] = v12;
  v8[21] = *(void *)(v12 - 8);
  v8[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_18FCF94A4, 0, 0);
}

uint64_t sub_18FCF94A4()
{
  sub_18FD024E0();
  sub_18FD024B0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[23] = v1;
  void *v1 = v0;
  v1[1] = sub_18FCF9564;
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  return MEMORY[0x1F4187D58](v2, 0, 0, v3);
}

uint64_t sub_18FCF9564()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCF9660, 0, 0);
}

uint64_t sub_18FCF9660()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[3];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[18], v1, v3);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[24] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_18FCF9844;
    uint64_t v8 = v0[18];
    uint64_t v9 = v0[13];
    return v10(v9, v8);
  }
}

uint64_t sub_18FCF9844()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_18FCF9940, 0, 0);
}

uint64_t sub_18FCF9940()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[7];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3);
  uint64_t v5 = v0[17];
  if (v4 == 1)
  {
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    (*(void (**)(void, void))(v5 + 8))(v0[18], v0[6]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v7);
  }
  else
  {
    uint64_t v9 = v0[15];
    uint64_t v8 = v0[16];
    uint64_t v10 = v0[9];
    uint64_t v11 = v0[10];
    uint64_t v16 = v0[8];
    uint64_t v17 = v0[18];
    uint64_t v18 = v0[6];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v8, v2, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v9, v8, v3);
    sub_18FD024A0();
    sub_18FD02480();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v16);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v8, v3);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v18);
  }
  uint64_t v12 = (void *)swift_task_alloc();
  v0[23] = v12;
  void *v12 = v0;
  v12[1] = sub_18FCF9564;
  uint64_t v13 = v0[19];
  uint64_t v14 = v0[20];
  return MEMORY[0x1F4187D58](v13, 0, 0, v14);
}

uint64_t AsyncStream.first()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  _OWORD v3[2] = a1;
  return MEMORY[0x1F4188298](sub_18FCF9B4C, 0, 0);
}

uint64_t sub_18FCF9B4C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = *(void *)(v1 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v3 = v0;
  v3[1] = sub_18FCF9C44;
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[2];
  return MEMORY[0x1F4187E80](v6, &unk_1E926C870, v2, v5, WitnessTable);
}

uint64_t sub_18FCF9C44()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_18FCF9D54()
{
  return sub_18FCFA2BC(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_18FCF9D90()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_18FCF9E24;
  return sub_18FCF9E24(1);
}

uint64_t sub_18FCF9E24(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t AsyncStream.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 16);
  uint64_t v4 = v3[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (char *)swift_allocObject();
  *((void *)v9 + 2) = v4;
  *((void *)v9 + 3) = v3[3];
  *((void *)v9 + 4) = v3[4];
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], v7, v4);
  uint64_t v10 = sub_18FD02600();
  AsyncStream.asyncMap<A>(_:)((uint64_t)&unk_1E926C880, (uint64_t)v9, a2, v10);
  return swift_release();
}

uint64_t sub_18FCFA08C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[4] = a4;
  double v6[5] = a5;
  _OWORD v6[2] = a1;
  void v6[3] = a3;
  uint64_t v7 = *a2;
  v6[6] = a6;
  v6[7] = v7;
  return MEMORY[0x1F4188298](sub_18FCFA0B8, 0, 0);
}

uint64_t sub_18FCFA0B8()
{
  MEMORY[0x192FC1500](v0[3], v0[7], v0[4], v0[5], v0[6]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_18FCFA120()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_18FCFA1A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(void *)(v2 + 32);
  long long v11 = *(_OWORD *)(v2 + 16);
  uint64_t v7 = v2
     + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80));
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(_OWORD *)(v8 + 32) = v11;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v7;
  *(void *)(v8 + _Block_object_dispose(&a9, 8) = sub_18FCA1444;
  uint64_t v9 = *a2;
  *(void *)(v8 + 4_Block_object_dispose(&a9, 8) = v6;
  *(void *)(v8 + 56) = v9;
  return MEMORY[0x1F4188298](sub_18FCFA0B8, 0, 0);
}

uint64_t sub_18FCFA2BC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_18FCFA2D0()
{
  uint64_t v1 = sub_18FD024E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_18FD024A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_18FCFA448(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(sub_18FD024E0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_18FD024A0() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = (uint64_t)v1 + v7;
  uint64_t v14 = (char *)v1 + v8;
  uint64_t v15 = *(void *)((char *)v1 + v8);
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v17 = (uint64_t)v1 + v10;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  void *v18 = v3;
  v18[1] = sub_18FCA05A0;
  return sub_18FCF9228(a1, v11, v12, v13, v15, v16, v17, v5);
}

uint64_t sub_18FCFA5E4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_18FCFA61C()
{
  return sub_18FD02500();
}

uint64_t sub_18FCFA640()
{
  uint64_t v1 = sub_18FD024E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_18FD024A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t sub_18FCFA7B4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_18FD024E0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_18FD024A0() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + v9;
  uint64_t v14 = *(void **)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_18FCA1444;
  return sub_18FCF87F4(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_18FCFA944()
{
  uint64_t v1 = sub_18FD024E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_18FD024A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x1F4186498](v0, v11, v10);
}

uint64_t sub_18FCFAABC(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(sub_18FD024E0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_18FD024A0() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = (uint64_t)v1 + v7;
  uint64_t v14 = (uint64_t)v1 + v10;
  uint64_t v15 = (void *)((char *)v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  void *v18 = v3;
  v18[1] = sub_18FCA1444;
  return sub_18FCF7C14(a1, v11, v12, v13, v14, v16, v17, v5);
}

uint64_t AXThreadLocal.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  AXThreadLocal.init(wrappedValue:)(a1);
  return v2;
}

uint64_t sub_18FCFACC0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 88));
}

uint64_t *AXThreadLocal.init(wrappedValue:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_18FD01DC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 88), a1);
  return v1;
}

uint64_t sub_18FCFADC0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_currentThread);
  id v6 = objc_msgSend(v5, sel_threadDictionary);

  v19[0] = sub_18FD01D80();
  v19[1] = v7;
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v6, sel___swift_objectForKeyedSubscript_, sub_18FD02CE0());
  swift_unknownObjectRelease();

  if (v8)
  {
    sub_18FD02660();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_18FCDE14C((uint64_t)v18, (uint64_t)v19);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v4, sel_currentThread);
  id v10 = objc_msgSend(v9, sel_threadDictionary);

  uint64_t v11 = sub_18FD01D80();
  uint64_t v13 = v12;
  uint64_t v14 = sub_18FD02BF0();
  *(void *)&v18[0] = v11;
  *((void *)&v18[0] + 1) = v13;
  swift_bridgeObjectRetain();
  objc_msgSend(v10, sel___swift_setObject_forKeyedSubscript_, v14, sub_18FD02CE0());
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v15 = swift_unknownObjectRelease();
  a2(v15);
  sub_18FCFAFEC(v3, (uint64_t)v19);
  return sub_18FCA2480((uint64_t)v19);
}

uint64_t sub_18FCFAFEC(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(self, sel_currentThread);
  id v4 = objc_msgSend(v3, sel_threadDictionary);

  uint64_t v5 = sub_18FD01D80();
  uint64_t v7 = v6;
  sub_18FCFB760(a2, (uint64_t)v15);
  uint64_t v8 = v16;
  if (v16)
  {
    id v9 = __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x1F4188790](v9);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = sub_18FD02BF0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    uint64_t v13 = 0;
  }
  v15[0] = v5;
  v15[1] = v7;
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v13, sub_18FD02CE0());
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18FCFB1D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = sub_18FD02600();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - v7;
  id v9 = objc_msgSend(self, sel_currentThread);
  id v10 = objc_msgSend(v9, sel_threadDictionary);

  *(void *)&v18[0] = sub_18FD01D80();
  *((void *)&v18[0] + 1) = v11;
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_18FD02CE0());
  swift_unknownObjectRelease();

  if (v12)
  {
    sub_18FD02660();
    swift_unknownObjectRelease();
    sub_18FCD00F0(v17, v18);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  if (v13)
  {
    uint64_t v15 = *(void *)(v4 - 8);
    v14(v8, 0, 1, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v8, v4);
  }
  else
  {
    v14(v8, 1, 1, v4);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 16))(a1, v2 + *(void *)(*(void *)v2 + 88));
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FCFB4B8()
{
  return swift_retain();
}

uint64_t AXThreadLocal.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AXThreadLocal.__deallocating_deinit()
{
  AXThreadLocal.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18FCFB5E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_18FD01DD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for AXThreadLocal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AXThreadLocal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AXThreadLocal);
}

uint64_t dispatch thunk of AXThreadLocal.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AXThreadLocal.withValue<A>(_:operation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AXThreadLocal.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AXThreadLocal.projectedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_18FCFB760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926B858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

int *AudioEffectConfiguration.init(id:effect:parameters:properties:enabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a7, a1, v14);
  uint64_t result = (int *)type metadata accessor for AudioEffectConfiguration();
  uint64_t v16 = (void *)(a7 + result[5]);
  *uint64_t v16 = a2;
  v16[1] = a3;
  *(void *)(a7 + result[6]) = a4;
  *(unsigned char *)(a7 + result[8]) = a6;
  *(void *)(a7 + result[7]) = a5;
  return result;
}

uint64_t type metadata accessor for AudioEffectConfiguration()
{
  uint64_t result = qword_1E926C900;
  if (!qword_1E926C900) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AudioEffectConfiguration.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_18FD01DD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AudioEffectConfiguration.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_18FD01DD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*AudioEffectConfiguration.id.modify())()
{
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.effect.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioEffectConfiguration.effect.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AudioEffectConfiguration.effect.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.parameters.getter()
{
  type metadata accessor for AudioEffectConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEffectConfiguration.parameters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for AudioEffectConfiguration() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AudioEffectConfiguration.parameters.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.properties.getter()
{
  type metadata accessor for AudioEffectConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEffectConfiguration.properties.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for AudioEffectConfiguration() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AudioEffectConfiguration.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioEffectConfiguration.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 32));
}

uint64_t AudioEffectConfiguration.enabled.setter(char a1)
{
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 32)) = a1;
  return sub_18FCFBC68();
}

uint64_t sub_18FCFBC68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AudioEffectConfiguration();
  uint64_t v3 = *(int *)(v2 + 28);
  int v4 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 32));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(v1 + v3);
  *(void *)(v1 + v3) = 0x8000000000000000;
  sub_18FCFD494(v4 != 1, 0x737361707962, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + v3) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t (*AudioEffectConfiguration.enabled.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  type metadata accessor for AudioEffectConfiguration();
  return sub_18FCFBD60;
}

uint64_t sub_18FCFBD60(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_18FCFBC68();
  }
  return result;
}

uint64_t AudioEffectConfiguration.hash(into:)(uint64_t a1)
{
  sub_18FD01DD0();
  sub_18FCFD904((unint64_t *)&qword_1E926C198);
  sub_18FD020D0();
  uint64_t v3 = type metadata accessor for AudioEffectConfiguration();
  swift_bridgeObjectRetain();
  sub_18FD021E0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_18FCB2FCC(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  sub_18FCB2E28(a1, v5);
  swift_bridgeObjectRelease();
  return sub_18FD02D80();
}

uint64_t sub_18FCFBE80(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    float v18 = *(float *)(*(void *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_18FCA963C(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(float *)(*(void *)(a2 + 56) + 4 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_18FCFC034(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int v18 = *(_DWORD *)(*(void *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_18FCA963C(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(_DWORD *)(*(void *)(a2 + 56) + 4 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_18FCFC1E0()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746365666665;
      break;
    case 2:
      uint64_t result = 0x6574656D61726170;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    case 4:
      uint64_t result = 0x64656C62616E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_18FCFC288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18FCFE420(a1, a2);
  *a3 = result;
  return result;
}

void sub_18FCFC2B0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_18FCFC2BC(uint64_t a1)
{
  unint64_t v2 = sub_18FCFD844();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_18FCFC2F8(uint64_t a1)
{
  unint64_t v2 = sub_18FCFD844();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AudioEffectConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C8B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FCFD844();
  sub_18FD02DF0();
  LOBYTE(v12) = 0;
  sub_18FD01DD0();
  sub_18FCFD904(&qword_1E926C8C8);
  sub_18FD029B0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AudioEffectConfiguration();
    LOBYTE(v12) = 1;
    sub_18FD02990();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B8);
    sub_18FCFD898(&qword_1E926C300, &qword_1E926C2B8);
    sub_18FD029B0();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C8D0);
    sub_18FCFD898(&qword_1E926C8D8, &qword_1E926C8D0);
    sub_18FD029B0();
    LOBYTE(v12) = 4;
    sub_18FD029A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AudioEffectConfiguration.hashValue.getter()
{
  sub_18FD02D60();
  sub_18FD01DD0();
  sub_18FCFD904((unint64_t *)&qword_1E926C198);
  sub_18FD020D0();
  uint64_t v1 = type metadata accessor for AudioEffectConfiguration();
  swift_bridgeObjectRetain();
  sub_18FD021E0();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 24));
  swift_bridgeObjectRetain();
  sub_18FCB2FCC((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + *(int *)(v1 + 28));
  swift_bridgeObjectRetain();
  sub_18FCB2E28((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  sub_18FD02D80();
  return sub_18FD02DA0();
}

uint64_t AudioEffectConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C8E0);
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for AudioEffectConfiguration();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FCFD844();
  uint64_t v26 = v6;
  sub_18FD02DE0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v22 = v9;
  uint64_t v23 = a1;
  uint64_t v24 = v4;
  uint64_t v10 = sub_18FD01DD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v29) = 0;
  sub_18FCFD904(&qword_1E926C8E8);
  int64_t v14 = v26;
  uint64_t v15 = v27;
  sub_18FD02940();
  uint64_t v16 = (uint64_t)v22;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v22, v13, v10);
  LOBYTE(v29) = 1;
  uint64_t v17 = sub_18FD02920();
  uint64_t v21 = v11;
  int v18 = (uint64_t *)(v16 + v7[5]);
  uint64_t *v18 = v17;
  v18[1] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C2B8);
  char v28 = 2;
  sub_18FCFD948(&qword_1E926C320, &qword_1E926C2B8);
  sub_18FD02940();
  *(void *)(v16 + v7[6]) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C8D0);
  char v28 = 3;
  sub_18FCFD948(&qword_1E926C8F0, &qword_1E926C8D0);
  sub_18FD02940();
  *(void *)(v16 + v7[7]) = v29;
  LOBYTE(v29) = 4;
  LOBYTE(v11) = sub_18FD02930();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v15);
  *(unsigned char *)(v16 + v7[8]) = v11 & 1;
  sub_18FCB3F9C(v16, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_18FCB404C(v16);
}

uint64_t sub_18FCFCBE0(uint64_t a1, uint64_t a2)
{
  sub_18FD02D60();
  sub_18FD01DD0();
  sub_18FCFD904((unint64_t *)&qword_1E926C198);
  sub_18FD020D0();
  swift_bridgeObjectRetain();
  sub_18FD021E0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_18FCB2FCC((uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 28));
  swift_bridgeObjectRetain();
  sub_18FCB2E28((uint64_t)v7, v5);
  swift_bridgeObjectRelease();
  sub_18FD02D80();
  return sub_18FD02DA0();
}

uint64_t sub_18FCFCCD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_18FD01DD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_18FCFCD3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEffectConfiguration.init(from:)(a1, a2);
}

uint64_t sub_18FCFCD54(void *a1)
{
  return AudioEffectConfiguration.encode(to:)(a1);
}

uint64_t sub_18FCFCD70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_18FCA963C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18FCE2738();
LABEL_7:
    int v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      return sub_18FCD7000(a1, v19);
    }
    goto LABEL_13;
  }
  sub_18FCE0688(v15, a4 & 1);
  unint64_t v21 = sub_18FCA963C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_18FD02D00();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  int v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 40 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(void *)(v24 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  _OWORD v18[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCFCF00(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_18FCA975C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_18FCE2B14();
      goto LABEL_7;
    }
    sub_18FCE0CF0(v13, a3 & 1);
    unint64_t v19 = sub_18FCA975C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_18FD02D00();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 40 * v10;
    __swift_destroy_boxed_opaque_existential_1(v17);
    return sub_18FCA370C(a1, v17);
  }
LABEL_13:
  return sub_18FCFD5F8(v10, a2, a1, v16);
}

_OWORD *sub_18FCFD040(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_18FCA975C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_18FCE2CDC();
      goto LABEL_7;
    }
    sub_18FCE0FF0(v13, a3 & 1);
    unint64_t v19 = sub_18FCA975C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_18FD02D00();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return sub_18FCD00F0(a1, v17);
  }
LABEL_13:
  return sub_18FCFD664(v10, a2, a1, v16);
}

void sub_18FCFD17C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_18FCA963C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18FCE2EA0();
LABEL_7:
    int v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_18FCE12E0(v15, a4 & 1);
  unint64_t v20 = sub_18FCA963C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_18FD02D00();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  int v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_18FCFD2EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_18FCA97C8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_18FCE2EAC();
    goto LABEL_7;
  }
  sub_18FCE12EC(v13, a3 & 1);
  unint64_t v19 = sub_18FCA97C8(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    sub_18FD01DD0();
    uint64_t result = sub_18FD02D00();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v21 = sub_18FD01DD0();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v24 + 16))(v23, a2);
  return sub_18FCFD6CC(v10, (uint64_t)v23, a1, v16);
}

uint64_t sub_18FCFD494(int a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_18FCA963C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_18FCE3324();
LABEL_7:
    int v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(_DWORD *)(v18[7] + 4 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_18FCE19F4(result, a4 & 1);
  uint64_t result = sub_18FCA963C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_18FD02D00();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  int v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(_DWORD *)(v18[7] + 4 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FCFD5F8(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_18FCA370C(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_18FCFD664(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_18FCD00F0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_18FCFD6CC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_18FD01DD0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t _s15AXCoreUtilities24AudioEffectConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_18FD01DA0() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v4 = (int *)type metadata accessor for AudioEffectConfiguration();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_18FD02C00(), v11 = 0, (v10 & 1) != 0))
  {
    if ((sub_18FCFBE80(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])) & 1) != 0
      && (sub_18FCFC034(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])) & 1) != 0)
    {
      char v11 = *(unsigned char *)(a1 + v4[8]) ^ *(unsigned char *)(a2 + v4[8]) ^ 1;
      return v11 & 1;
    }
LABEL_10:
    char v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_18FCFD844()
{
  unint64_t result = qword_1E926C8C0;
  if (!qword_1E926C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C8C0);
  }
  return result;
}

uint64_t sub_18FCFD898(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCFD904(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_18FD01DD0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FCFD948(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18FCFD9B8()
{
  unint64_t result = qword_1E926C8F8;
  if (!qword_1E926C8F8)
  {
    type metadata accessor for AudioEffectConfiguration();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C8F8);
  }
  return result;
}

uint64_t sub_18FCFDA10()
{
  return sub_18FCFD904((unint64_t *)&qword_1E926C198);
}

uint64_t sub_18FCFDA38@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for AudioEffectConfiguration();
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 32));
  return result;
}

uint64_t sub_18FCFDA70(char *a1, uint64_t a2)
{
  char v2 = *a1;
  *(unsigned char *)(a2 + *(int *)(type metadata accessor for AudioEffectConfiguration() + 32)) = v2;
  return sub_18FCFBC68();
}

void *initializeBufferWithCopyOfBuffer for AudioEffectConfiguration(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_18FD01DD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (void *)((char *)a1 + v8);
    char v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEffectConfiguration(uint64_t a1)
{
  uint64_t v2 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v_Block_object_dispose(&a9, 8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for AudioEffectConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_18FD01DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEffectConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_18FCFDF3C);
}

uint64_t sub_18FCFDF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_18FD01DD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AudioEffectConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_18FCFE014);
}

uint64_t sub_18FCFE014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_18FD01DD0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + _Block_object_dispose(&a9, 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_18FCFE0D4()
{
  uint64_t result = sub_18FD01DD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioEffectConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudioEffectConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18FCFE2E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEffectConfiguration.CodingKeys()
{
  return &type metadata for AudioEffectConfiguration.CodingKeys;
}

unint64_t sub_18FCFE31C()
{
  unint64_t result = qword_1E926C910;
  if (!qword_1E926C910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C910);
  }
  return result;
}

unint64_t sub_18FCFE374()
{
  unint64_t result = qword_1E926C918;
  if (!qword_1E926C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C918);
  }
  return result;
}

unint64_t sub_18FCFE3CC()
{
  unint64_t result = qword_1E926C920;
  if (!qword_1E926C920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E926C920);
  }
  return result;
}

uint64_t sub_18FCFE420(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746365666665 && a2 == 0xE600000000000000 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_18FD02C00() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_18FD02C00();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SmartForceCast<A>(value:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCA3724(v7, (uint64_t)v26);
  uint64_t v10 = MEMORY[0x1E4FBC840];
  uint64_t v11 = MEMORY[0x1E4FBC840] + 8;
  if (swift_dynamicCast())
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v9, a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E926C800);
  if (swift_dynamicCast())
  {
    sub_18FCA370C(&v25, (uint64_t)v24);
    if (swift_dynamicCastMetatype())
    {
      __swift_project_boxed_opaque_existential_1(v24, v24[3]);
      v23[0] = sub_18FD029E0();
      v23[1] = v12;
      swift_dynamicCast();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  if (swift_dynamicCast())
  {
    uint64_t v13 = v25;
    if (swift_dynamicCastMetatype())
    {
LABEL_9:
      v24[0] = v13;
LABEL_92:
      swift_dynamicCast();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    if (swift_dynamicCastMetatype())
    {
      if (v13 < -128)
      {
        __break(1u);
      }
      else if (v13 <= 127)
      {
LABEL_25:
        LOBYTE(v24[0]) = v13;
        goto LABEL_92;
      }
      __break(1u);
LABEL_240:
      if (swift_dynamicCastMetatype())
      {
        if ((unint64_t)v13 >> 31)
        {
          __break(1u);
LABEL_243:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
            {
              unsigned int v15 = (unsigned __int16)v13;
LABEL_246:
              LODWORD(v25) = v15;
              goto LABEL_92;
            }
            goto LABEL_551;
          }
LABEL_287:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0) {
              goto LABEL_289;
            }
            goto LABEL_576;
          }
LABEL_316:
          if (swift_dynamicCastMetatype())
          {
            double v16 = (double)(int)v13;
LABEL_318:
            *(double *)&long long v25 = v16;
            goto LABEL_92;
          }
          if (swift_dynamicCastMetatype())
          {
            float v17 = (float)(int)v13;
LABEL_321:
            *(float *)&long long v25 = v17;
            goto LABEL_92;
          }
          if (swift_dynamicCastMetatype())
          {
            double v21 = (double)(int)v13;
LABEL_372:
            *(double *)&long long v25 = v21;
            goto LABEL_92;
          }
          goto LABEL_598;
        }
LABEL_50:
        LODWORD(v24[0]) = v13;
        goto LABEL_92;
      }
LABEL_284:
      if (swift_dynamicCastMetatype())
      {
        if (v13 < 0)
        {
          __break(1u);
          goto LABEL_287;
        }
LABEL_65:
        v24[0] = v13;
        goto LABEL_92;
      }
LABEL_333:
      if (!swift_dynamicCastMetatype())
      {
        if (swift_dynamicCastMetatype())
        {
          if ((unint64_t)v13 > 0xFF)
          {
            __break(1u);
LABEL_337:
            if (swift_dynamicCastMetatype())
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
              {
                if (v3 > -2147483650.0)
                {
                  if (v3 >= 2147483650.0)
                  {
                    __break(1u);
LABEL_342:
                    if (swift_dynamicCastMetatype())
                    {
                      if (HIDWORD(v13))
                      {
                        __break(1u);
                        goto LABEL_345;
                      }
LABEL_181:
                      LODWORD(v24[0]) = v13;
                      goto LABEL_92;
                    }
LABEL_444:
                    if (!swift_dynamicCastMetatype())
                    {
                      if (swift_dynamicCastMetatype())
                      {
                        double v18 = (double)(unint64_t)v13;
                        goto LABEL_355;
                      }
                      if (swift_dynamicCastMetatype())
                      {
                        float v19 = (float)(unint64_t)v13;
                        goto LABEL_358;
                      }
                      goto LABEL_478;
                    }
LABEL_228:
                    v24[0] = v13;
                    goto LABEL_92;
                  }
LABEL_273:
                  LODWORD(v24[0]) = (int)v3;
                  goto LABEL_92;
                }
LABEL_595:
                __break(1u);
                goto LABEL_596;
              }
LABEL_594:
              __break(1u);
              goto LABEL_595;
            }
LABEL_382:
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_607:
                __break(1u);
                goto LABEL_608;
              }
              if (v3 <= -9.22337204e18)
              {
LABEL_608:
                __break(1u);
                goto LABEL_609;
              }
              if (v3 >= 9.22337204e18)
              {
                __break(1u);
LABEL_387:
                if (!swift_dynamicCastMetatype()) {
                  goto LABEL_390;
                }
                if (WORD1(v13))
                {
                  __break(1u);
                  goto LABEL_390;
                }
                goto LABEL_237;
              }
LABEL_312:
              v24[0] = (uint64_t)v3;
              goto LABEL_92;
            }
LABEL_418:
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_616:
                __break(1u);
                goto LABEL_617;
              }
              if (v3 <= -1.0)
              {
LABEL_617:
                __break(1u);
                goto LABEL_618;
              }
              if (v3 >= 1.84467441e19)
              {
                __break(1u);
LABEL_423:
                uint64_t result = swift_dynamicCastMetatype();
                if (result)
                {
                  if ((~LODWORD(v3) & 0x7F800000) != 0)
                  {
                    if (*(float *)&v3 > -1.0)
                    {
                      if (*(float *)&v3 < 256.0)
                      {
                        LOBYTE(v25) = (int)*(float *)&v3;
                        goto LABEL_92;
                      }
                      goto LABEL_620;
                    }
LABEL_619:
                    __break(1u);
LABEL_620:
                    __break(1u);
                    goto LABEL_621;
                  }
LABEL_618:
                  __break(1u);
                  goto LABEL_619;
                }
                goto LABEL_455;
              }
LABEL_369:
              v24[0] = (unint64_t)v3;
              goto LABEL_92;
            }
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_626:
                __break(1u);
                goto LABEL_627;
              }
              if (v3 <= -1.0)
              {
LABEL_627:
                __break(1u);
                goto LABEL_628;
              }
              if (v3 >= 256.0)
              {
                __break(1u);
                goto LABEL_454;
              }
LABEL_469:
              LOBYTE(v24[0]) = (int)v3;
              goto LABEL_92;
            }
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_636:
                __break(1u);
                goto LABEL_637;
              }
              if (v3 <= -1.0)
              {
LABEL_637:
                __break(1u);
                goto LABEL_638;
              }
              if (v3 >= 65536.0)
              {
                __break(1u);
                goto LABEL_485;
              }
LABEL_433:
              LOWORD(v24[0]) = (int)v3;
              goto LABEL_92;
            }
LABEL_515:
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_646:
                __break(1u);
                goto LABEL_647;
              }
              if (v3 <= -1.0)
              {
LABEL_647:
                __break(1u);
                goto LABEL_648;
              }
              if (v3 >= 4294967300.0)
              {
                __break(1u);
                goto LABEL_520;
              }
LABEL_538:
              LODWORD(v24[0]) = v3;
              goto LABEL_92;
            }
LABEL_546:
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_654:
                __break(1u);
                goto LABEL_655;
              }
              if (v3 <= -1.0)
              {
LABEL_655:
                __break(1u);
                goto LABEL_656;
              }
              if (v3 >= 1.84467441e19)
              {
                __break(1u);
LABEL_551:
                __break(1u);
                goto LABEL_552;
              }
              goto LABEL_501;
            }
            goto LABEL_565;
          }
LABEL_108:
          LOBYTE(v24[0]) = v13;
          goto LABEL_92;
        }
        if (swift_dynamicCastMetatype())
        {
          if ((unint64_t)v13 >> 16)
          {
            __break(1u);
LABEL_417:
            __break(1u);
            goto LABEL_418;
          }
LABEL_138:
          LOWORD(v24[0]) = v13;
          goto LABEL_92;
        }
LABEL_441:
        if (swift_dynamicCastMetatype())
        {
          if (!HIDWORD(v13)) {
            goto LABEL_181;
          }
          __break(1u);
        }
        goto LABEL_444;
      }
LABEL_89:
      v24[0] = v13;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
    {
      if (v13 < -32768)
      {
        __break(1u);
      }
      else if (v13 < 0x8000)
      {
        goto LABEL_32;
      }
      __break(1u);
      goto LABEL_284;
    }
    goto LABEL_47;
  }
  if (swift_dynamicCast())
  {
    uint64_t v13 = SLOBYTE(v24[0]);
    if (swift_dynamicCastMetatype())
    {
LABEL_21:
      *(void *)&long long v25 = v13;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
    {
LABEL_54:
      LOBYTE(v25) = v13;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype()) {
      goto LABEL_69;
    }
    if (swift_dynamicCastMetatype()) {
      goto LABEL_91;
    }
    if (swift_dynamicCastMetatype()) {
      goto LABEL_58;
    }
    uint64_t v11 = v13;
    if (!swift_dynamicCastMetatype()) {
      goto LABEL_125;
    }
    if ((v13 & 0x80000000) == 0)
    {
LABEL_121:
      *(void *)&long long v25 = v11;
      goto LABEL_92;
    }
    __break(1u);
  }
  if (swift_dynamicCast())
  {
    uint64_t v13 = SLOWORD(v24[0]);
    if (swift_dynamicCastMetatype()) {
      goto LABEL_21;
    }
  }
  else
  {
    if (swift_dynamicCast())
    {
      uint64_t v13 = LODWORD(v24[0]);
      uint64_t v11 = SLODWORD(v24[0]);
      if (swift_dynamicCastMetatype()) {
        goto LABEL_28;
      }
      if (swift_dynamicCastMetatype())
      {
        if ((int)v13 < -128)
        {
          __break(1u);
        }
        else if ((int)v13 <= 127)
        {
          goto LABEL_54;
        }
        __break(1u);
        goto LABEL_333;
      }
      if (swift_dynamicCastMetatype())
      {
        if ((int)v13 < -32768)
        {
          __break(1u);
        }
        else if ((int)v13 < 0x8000)
        {
          goto LABEL_69;
        }
        __break(1u);
        goto LABEL_382;
      }
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
        {
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0) {
              goto LABEL_147;
            }
LABEL_477:
            __break(1u);
LABEL_478:
            if (!swift_dynamicCastMetatype()) {
              goto LABEL_598;
            }
            double v20 = (double)(unint64_t)v13;
            goto LABEL_361;
          }
LABEL_187:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
            {
              if (v13 <= 0xFF) {
                goto LABEL_190;
              }
LABEL_514:
              __break(1u);
              goto LABEL_515;
            }
LABEL_513:
            __break(1u);
            goto LABEL_514;
          }
LABEL_234:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x80000000) == 0)
            {
              if (!WORD1(v13)) {
                goto LABEL_237;
              }
              goto LABEL_543;
            }
LABEL_542:
            __break(1u);
LABEL_543:
            __break(1u);
            goto LABEL_544;
          }
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype()) {
              goto LABEL_316;
            }
            if ((v13 & 0x80000000) == 0) {
              goto LABEL_315;
            }
            goto LABEL_590;
          }
          if ((v13 & 0x80000000) == 0) {
            goto LABEL_276;
          }
          goto LABEL_572;
        }
        goto LABEL_110;
      }
      goto LABEL_91;
    }
    if (!swift_dynamicCast()) {
      goto LABEL_43;
    }
    uint64_t v13 = v25;
    if (swift_dynamicCastMetatype()) {
      goto LABEL_9;
    }
    if (!swift_dynamicCastMetatype())
    {
LABEL_78:
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_101;
      }
      if (v13 < -32768)
      {
        __break(1u);
LABEL_400:
        uint64_t result = swift_dynamicCastMetatype();
        if (!result)
        {
LABEL_429:
          uint64_t result = swift_dynamicCastMetatype();
          if (result)
          {
            if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
            {
LABEL_621:
              __break(1u);
              goto LABEL_622;
            }
            if (v3 <= -1.0)
            {
LABEL_622:
              __break(1u);
              goto LABEL_623;
            }
            if (v3 >= 65536.0)
            {
LABEL_623:
              __break(1u);
              goto LABEL_624;
            }
            goto LABEL_433;
          }
          uint64_t result = swift_dynamicCastMetatype();
          if (!result)
          {
LABEL_497:
            uint64_t result = swift_dynamicCastMetatype();
            if (result)
            {
              if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
              {
LABEL_641:
                __break(1u);
                goto LABEL_642;
              }
              if (v3 <= -1.0)
              {
LABEL_642:
                __break(1u);
                goto LABEL_643;
              }
              if (v3 >= 1.84467441e19)
              {
LABEL_643:
                __break(1u);
                goto LABEL_644;
              }
LABEL_501:
              v24[0] = (unint64_t)v3;
              goto LABEL_92;
            }
            goto LABEL_565;
          }
          if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_631:
            __break(1u);
            goto LABEL_632;
          }
          if (v3 <= -1.0)
          {
LABEL_632:
            __break(1u);
            goto LABEL_633;
          }
          if (v3 < 4294967300.0) {
            goto LABEL_538;
          }
          __break(1u);
          goto LABEL_465;
        }
        if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_612:
          __break(1u);
          goto LABEL_613;
        }
        if (v3 <= -1.0)
        {
LABEL_613:
          __break(1u);
          goto LABEL_614;
        }
        if (v3 < 256.0) {
          goto LABEL_469;
        }
        __break(1u);
LABEL_405:
        uint64_t result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_614:
            __break(1u);
            goto LABEL_615;
          }
          if (v3 <= -9.22337204e18)
          {
LABEL_615:
            __break(1u);
            goto LABEL_616;
          }
          if (v3 < 9.22337204e18) {
            goto LABEL_312;
          }
          __break(1u);
LABEL_410:
          __break(1u);
          goto LABEL_411;
        }
        uint64_t result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_624:
            __break(1u);
            goto LABEL_625;
          }
          if (v3 <= -1.0)
          {
LABEL_625:
            __break(1u);
            goto LABEL_626;
          }
          if (v3 < 1.84467441e19) {
            goto LABEL_369;
          }
          __break(1u);
          goto LABEL_439;
        }
LABEL_465:
        uint64_t result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_633:
            __break(1u);
            goto LABEL_634;
          }
          if (v3 <= -1.0)
          {
LABEL_634:
            __break(1u);
            goto LABEL_635;
          }
          if (v3 >= 256.0)
          {
LABEL_635:
            __break(1u);
            goto LABEL_636;
          }
          goto LABEL_469;
        }
        uint64_t result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
          {
LABEL_644:
            __break(1u);
            goto LABEL_645;
          }
          if (v3 <= -1.0)
          {
LABEL_645:
            __break(1u);
            goto LABEL_646;
          }
          if (v3 < 65536.0) {
            goto LABEL_433;
          }
          __break(1u);
          goto LABEL_507;
        }
        goto LABEL_534;
      }
      if (v13 < 0x8000) {
        goto LABEL_32;
      }
      __break(1u);
      goto LABEL_82;
    }
    if (v13 < -128)
    {
      __break(1u);
LABEL_365:
      uint64_t result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_602:
          __break(1u);
          goto LABEL_603;
        }
        if (v3 <= -1.0)
        {
LABEL_603:
          __break(1u);
          goto LABEL_604;
        }
        if (v3 >= 1.84467441e19)
        {
LABEL_604:
          __break(1u);
          goto LABEL_605;
        }
        goto LABEL_369;
      }
      goto LABEL_400;
    }
    if (v13 <= 127) {
      goto LABEL_25;
    }
    __break(1u);
  }
  if (!swift_dynamicCastMetatype())
  {
    if (swift_dynamicCastMetatype()) {
      goto LABEL_69;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (swift_dynamicCastMetatype()) {
        goto LABEL_58;
      }
      uint64_t v11 = (unsigned __int16)v13;
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_153;
      }
      if ((v13 & 0x80000000) != 0)
      {
LABEL_454:
        __break(1u);
LABEL_455:
        uint64_t result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~LODWORD(v3) & 0x7F800000) != 0)
          {
            if (*(float *)&v3 > -1.0)
            {
              if (*(float *)&v3 < 65536.0)
              {
                LOWORD(v25) = (int)*(float *)&v3;
                goto LABEL_92;
              }
              goto LABEL_630;
            }
LABEL_629:
            __break(1u);
LABEL_630:
            __break(1u);
            goto LABEL_631;
          }
LABEL_628:
          __break(1u);
          goto LABEL_629;
        }
        goto LABEL_488;
      }
      goto LABEL_121;
    }
LABEL_91:
    LODWORD(v25) = v13;
    goto LABEL_92;
  }
  if ((int)v13 < -128)
  {
LABEL_298:
    __break(1u);
    goto LABEL_299;
  }
  if ((int)v13 <= 127) {
    goto LABEL_54;
  }
  __break(1u);
LABEL_43:
  if (swift_dynamicCast())
  {
    uint64_t v13 = v25;
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0) {
        goto LABEL_9;
      }
      __break(1u);
LABEL_47:
      if (swift_dynamicCastMetatype())
      {
        if (v13 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else if (v13 <= 0x7FFFFFFF)
        {
          goto LABEL_50;
        }
        __break(1u);
        goto LABEL_329;
      }
      if (swift_dynamicCastMetatype()) {
        goto LABEL_65;
      }
LABEL_87:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000000000000000) == 0) {
          goto LABEL_89;
        }
        goto LABEL_410;
      }
LABEL_105:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v13 <= 0xFF) {
            goto LABEL_108;
          }
          goto LABEL_440;
        }
LABEL_439:
        __break(1u);
LABEL_440:
        __break(1u);
        goto LABEL_441;
      }
      goto LABEL_135;
    }
LABEL_75:
    if (swift_dynamicCastMetatype())
    {
      if ((unint64_t)v13 <= 0x7F) {
        goto LABEL_25;
      }
      __break(1u);
      goto LABEL_78;
    }
    if (swift_dynamicCastMetatype())
    {
      if (!((unint64_t)v13 >> 15)) {
        goto LABEL_32;
      }
      __break(1u);
      goto LABEL_97;
    }
    if (!swift_dynamicCastMetatype()) {
      goto LABEL_157;
    }
    if (!((unint64_t)v13 >> 31)) {
      goto LABEL_50;
    }
    __break(1u);
LABEL_125:
    if (!swift_dynamicCastMetatype()) {
      goto LABEL_163;
    }
    if ((v13 & 0x80000000) == 0)
    {
LABEL_190:
      LOBYTE(v25) = v13;
      goto LABEL_92;
    }
    __break(1u);
LABEL_128:
    if (swift_dynamicCastMetatype()) {
      goto LABEL_65;
    }
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0) {
        goto LABEL_89;
      }
      __break(1u);
      goto LABEL_132;
    }
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0)
      {
        if ((unint64_t)v13 <= 0xFF) {
          goto LABEL_108;
        }
        __break(1u);
        goto LABEL_226;
      }
      goto LABEL_533;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
      {
        if (swift_dynamicCastMetatype())
        {
          if ((v13 & 0x8000000000000000) == 0) {
            goto LABEL_228;
          }
          __break(1u);
        }
        goto LABEL_353;
      }
      if (v13 < 0) {
        goto LABEL_586;
      }
      if (!HIDWORD(v13)) {
        goto LABEL_181;
      }
      __break(1u);
LABEL_308:
      if (swift_dynamicCastMetatype())
      {
        if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
        {
          if (v3 > -9.22337204e18)
          {
            if (v3 < 9.22337204e18) {
              goto LABEL_312;
            }
            goto LABEL_589;
          }
LABEL_588:
          __break(1u);
LABEL_589:
          __break(1u);
LABEL_590:
          __break(1u);
          goto LABEL_591;
        }
LABEL_587:
        __break(1u);
        goto LABEL_588;
      }
      goto LABEL_365;
    }
    if (v13 < 0)
    {
LABEL_559:
      __break(1u);
      goto LABEL_560;
    }
    if (!((unint64_t)v13 >> 16)) {
      goto LABEL_138;
    }
    __break(1u);
LABEL_269:
    if (swift_dynamicCastMetatype())
    {
      if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
      {
        if (v3 > -2147483650.0)
        {
          if (v3 < 2147483650.0) {
            goto LABEL_273;
          }
          goto LABEL_571;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_571:
      __break(1u);
LABEL_572:
      __break(1u);
      goto LABEL_573;
    }
    goto LABEL_308;
  }
  if (swift_dynamicCast())
  {
    uint64_t v11 = LOBYTE(v24[0]);
    if (!swift_dynamicCastMetatype())
    {
      LODWORD(v13) = (char)v11;
      if (swift_dynamicCastMetatype())
      {
        if (((char)v11 & 0x80000000) == 0)
        {
          LOBYTE(v25) = v11;
          goto LABEL_92;
        }
        goto LABEL_417;
      }
      if (swift_dynamicCastMetatype())
      {
        LOWORD(v25) = v11;
        goto LABEL_92;
      }
      if (swift_dynamicCastMetatype())
      {
        LODWORD(v25) = v11;
        goto LABEL_92;
      }
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
        {
          if (swift_dynamicCastMetatype())
          {
            LOBYTE(v25) = v11;
            goto LABEL_92;
          }
LABEL_329:
          if (swift_dynamicCastMetatype())
          {
            LOWORD(v25) = v11;
            goto LABEL_92;
          }
LABEL_378:
          if (swift_dynamicCastMetatype())
          {
            LODWORD(v25) = v11;
            goto LABEL_92;
          }
LABEL_411:
          if (swift_dynamicCastMetatype()) {
            goto LABEL_289;
          }
          if (swift_dynamicCastMetatype())
          {
            double v16 = (double)v13;
            goto LABEL_318;
          }
LABEL_472:
          if (swift_dynamicCastMetatype())
          {
            float v17 = (float)v13;
            goto LABEL_321;
          }
LABEL_509:
          if (swift_dynamicCastMetatype())
          {
            double v21 = (double)v13;
            goto LABEL_372;
          }
LABEL_598:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
          sub_18FCA24E0();
          swift_allocError();
          unsigned char *v22 = 3;
          return swift_willThrow();
        }
        goto LABEL_121;
      }
LABEL_110:
      *(void *)&long long v25 = v11;
      goto LABEL_92;
    }
LABEL_28:
    *(void *)&long long v25 = v11;
    goto LABEL_92;
  }
  if (swift_dynamicCast())
  {
    uint64_t v13 = LOWORD(v24[0]);
    if (swift_dynamicCastMetatype()) {
      goto LABEL_21;
    }
    if (!swift_dynamicCastMetatype())
    {
LABEL_132:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000) != 0)
        {
          __break(1u);
LABEL_135:
          if (swift_dynamicCastMetatype())
          {
            if (v13 < 0)
            {
              __break(1u);
            }
            else if (!((unint64_t)v13 >> 16))
            {
              goto LABEL_138;
            }
            __break(1u);
            goto LABEL_472;
          }
LABEL_178:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x8000000000000000) == 0)
            {
              if (!HIDWORD(v13)) {
                goto LABEL_181;
              }
              goto LABEL_508;
            }
LABEL_507:
            __break(1u);
LABEL_508:
            __break(1u);
            goto LABEL_509;
          }
LABEL_226:
          if (swift_dynamicCastMetatype())
          {
            if ((v13 & 0x8000000000000000) == 0) {
              goto LABEL_228;
            }
            __break(1u);
            goto LABEL_540;
          }
LABEL_353:
          if (swift_dynamicCastMetatype())
          {
            double v18 = (double)v13;
LABEL_355:
            *(double *)uint64_t v24 = v18;
            goto LABEL_92;
          }
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype()) {
              goto LABEL_598;
            }
            double v20 = (double)v13;
LABEL_361:
            *(double *)uint64_t v24 = v20;
            goto LABEL_92;
          }
          float v19 = (float)v13;
LABEL_358:
          *(float *)uint64_t v24 = v19;
          goto LABEL_92;
        }
        goto LABEL_69;
      }
LABEL_172:
      if (swift_dynamicCastMetatype()) {
        goto LABEL_91;
      }
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype())
        {
          if (!swift_dynamicCastMetatype())
          {
            if (!swift_dynamicCastMetatype())
            {
LABEL_390:
              if (!swift_dynamicCastMetatype())
              {
                if (!swift_dynamicCastMetatype())
                {
                  if (swift_dynamicCastMetatype())
                  {
                    double v16 = (double)v13;
                    goto LABEL_318;
                  }
LABEL_485:
                  if (swift_dynamicCastMetatype())
                  {
                    float v17 = (float)v13;
                    goto LABEL_321;
                  }
LABEL_520:
                  if (swift_dynamicCastMetatype())
                  {
                    double v21 = (double)v13;
                    goto LABEL_372;
                  }
                  goto LABEL_598;
                }
LABEL_315:
                *(void *)&long long v25 = v13;
                goto LABEL_92;
              }
LABEL_276:
              LODWORD(v25) = v13;
              goto LABEL_92;
            }
LABEL_237:
            LOWORD(v25) = v13;
            goto LABEL_92;
          }
          if (v13 > 0xFF)
          {
            __break(1u);
            goto LABEL_178;
          }
          goto LABEL_190;
        }
        goto LABEL_147;
      }
LABEL_58:
      *(void *)&long long v25 = v13;
      goto LABEL_92;
    }
    if (v13 <= 0x7F) {
      goto LABEL_54;
    }
    __break(1u);
    goto LABEL_75;
  }
LABEL_82:
  if (swift_dynamicCast())
  {
    uint64_t v13 = LODWORD(v24[0]);
    if (swift_dynamicCastMetatype()) {
      goto LABEL_21;
    }
    if (swift_dynamicCastMetatype())
    {
      if (v13 > 0x7F)
      {
        __break(1u);
        goto LABEL_87;
      }
      goto LABEL_54;
    }
LABEL_160:
    if (swift_dynamicCastMetatype())
    {
      if (v13 >> 15)
      {
        __break(1u);
LABEL_163:
        LODWORD(v10) = v13;
        if (swift_dynamicCastMetatype())
        {
          if ((v13 & 0x80000000) == 0)
          {
            LOWORD(v25) = v13;
            goto LABEL_92;
          }
          __break(1u);
          goto LABEL_494;
        }
LABEL_214:
        if (swift_dynamicCastMetatype())
        {
          if ((v13 & 0x80000000) == 0)
          {
            LODWORD(v25) = v10;
            goto LABEL_92;
          }
          __break(1u);
          goto LABEL_530;
        }
        goto LABEL_257;
      }
LABEL_69:
      LOWORD(v25) = v13;
      goto LABEL_92;
    }
LABEL_211:
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x80000000) != 0)
      {
        __break(1u);
        goto LABEL_214;
      }
      goto LABEL_91;
    }
LABEL_252:
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype()) {
          goto LABEL_387;
        }
        if (v13 > 0xFF)
        {
          __break(1u);
LABEL_257:
          if (!swift_dynamicCastMetatype()) {
            goto LABEL_316;
          }
          if ((v13 & 0x80000000) == 0)
          {
LABEL_289:
            *(void *)&long long v25 = v11;
            goto LABEL_92;
          }
          __break(1u);
          goto LABEL_260;
        }
        goto LABEL_190;
      }
LABEL_147:
      *(void *)&long long v25 = v13;
      goto LABEL_92;
    }
    goto LABEL_58;
  }
LABEL_97:
  if (swift_dynamicCast())
  {
    uint64_t v13 = v25;
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x8000000000000000) == 0) {
        goto LABEL_9;
      }
      __break(1u);
LABEL_101:
      if (swift_dynamicCastMetatype())
      {
        if (v13 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v13 <= 0x7FFFFFFF) {
            goto LABEL_50;
          }
          __break(1u);
          goto LABEL_105;
        }
        __break(1u);
        goto LABEL_429;
      }
      goto LABEL_128;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_240;
      }
      if (!((unint64_t)v13 >> 15))
      {
LABEL_32:
        LOWORD(v24[0]) = v13;
        goto LABEL_92;
      }
      __break(1u);
LABEL_198:
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_243;
      }
      if ((v13 & 0x80000000) == 0) {
        goto LABEL_237;
      }
      __break(1u);
      goto LABEL_201;
    }
    if ((unint64_t)v13 <= 0x7F) {
      goto LABEL_25;
    }
    __break(1u);
LABEL_153:
    if (swift_dynamicCastMetatype())
    {
      if ((v13 & 0x80000000) != 0)
      {
        __break(1u);
LABEL_488:
        uint64_t result = swift_dynamicCastMetatype();
        if (result)
        {
          if ((~LODWORD(v3) & 0x7F800000) != 0)
          {
            if (*(float *)&v3 > -1.0)
            {
              if (*(float *)&v3 < 4295000000.0)
              {
                unsigned int v15 = *(float *)&v3;
                goto LABEL_246;
              }
              goto LABEL_640;
            }
LABEL_639:
            __break(1u);
LABEL_640:
            __break(1u);
            goto LABEL_641;
          }
LABEL_638:
          __break(1u);
          goto LABEL_639;
        }
LABEL_524:
        uint64_t result = swift_dynamicCastMetatype();
        if (!result)
        {
LABEL_554:
          if (swift_dynamicCastMetatype())
          {
            double v16 = *(float *)&v3;
            goto LABEL_318;
          }
          if (swift_dynamicCastMetatype())
          {
            LODWORD(v25) = LODWORD(v3);
            goto LABEL_92;
          }
LABEL_596:
          if (swift_dynamicCastMetatype())
          {
            double v21 = *(float *)&v3;
            goto LABEL_372;
          }
          goto LABEL_598;
        }
        if ((~LODWORD(v3) & 0x7F800000) != 0)
        {
          if (*(float *)&v3 > -1.0)
          {
            if (*(float *)&v3 < 1.8447e19)
            {
              *(void *)&long long v25 = (unint64_t)*(float *)&v3;
              goto LABEL_92;
            }
            goto LABEL_650;
          }
LABEL_649:
          __break(1u);
LABEL_650:
          __break(1u);
          goto LABEL_651;
        }
LABEL_648:
        __break(1u);
        goto LABEL_649;
      }
      if (v13 <= 0xFF) {
        goto LABEL_190;
      }
      __break(1u);
LABEL_157:
      if (swift_dynamicCastMetatype())
      {
        if ((v13 & 0x8000000000000000) == 0) {
          goto LABEL_65;
        }
        __break(1u);
        goto LABEL_160;
      }
      goto LABEL_207;
    }
    goto LABEL_198;
  }
  uint64_t v13 = v10 + 8;
  if (swift_dynamicCast())
  {
    double v3 = *(double *)&v25;
    if (swift_dynamicCastMetatype())
    {
      if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
      {
        if (v3 > -9.22337204e18)
        {
          if (v3 < 9.22337204e18) {
            goto LABEL_118;
          }
          goto LABEL_476;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_476:
      __break(1u);
      goto LABEL_477;
    }
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_269;
      }
      if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_540:
        __break(1u);
        goto LABEL_541;
      }
      if (v3 <= -32769.0)
      {
LABEL_541:
        __break(1u);
        goto LABEL_542;
      }
      if (v3 < 32768.0) {
        goto LABEL_326;
      }
      __break(1u);
      goto LABEL_234;
    }
    if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -129.0)
      {
        if (v3 < 128.0) {
          goto LABEL_281;
        }
        __break(1u);
        goto LABEL_187;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_513;
  }
  if (!swift_dynamicCast())
  {
    uint64_t v13 = v10 + 8;
    if (swift_dynamicCast())
    {
      double v3 = *(double *)&v25;
      if (swift_dynamicCastMetatype())
      {
        if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
        {
          if (v3 > -9.22337204e18)
          {
            if (v3 >= 9.22337204e18)
            {
              __break(1u);
              goto LABEL_172;
            }
            goto LABEL_118;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_524;
      }
      if (swift_dynamicCastMetatype())
      {
        if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_552:
          __break(1u);
          goto LABEL_553;
        }
        if (v3 <= -129.0)
        {
LABEL_553:
          __break(1u);
          goto LABEL_554;
        }
        if (v3 >= 128.0)
        {
          __break(1u);
          goto LABEL_252;
        }
        goto LABEL_281;
      }
      if (!swift_dynamicCastMetatype()) {
        goto LABEL_337;
      }
      if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_577:
        __break(1u);
        goto LABEL_578;
      }
      if (v3 <= -32769.0)
      {
LABEL_578:
        __break(1u);
LABEL_579:
        if (swift_dynamicCastMetatype())
        {
          *(double *)uint64_t v24 = v3;
          goto LABEL_92;
        }
        goto LABEL_598;
      }
      if (v3 >= 32768.0)
      {
        __break(1u);
LABEL_295:
        if (!swift_dynamicCastMetatype()) {
          goto LABEL_342;
        }
        if (!((unint64_t)v13 >> 16)) {
          goto LABEL_138;
        }
        __break(1u);
        goto LABEL_298;
      }
LABEL_326:
      LOWORD(v24[0]) = (int)v3;
      goto LABEL_92;
    }
LABEL_201:
    if (!swift_dynamicCast()) {
      goto LABEL_598;
    }
    double v3 = *(double *)&v25;
    if (swift_dynamicCastMetatype())
    {
      if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_544:
        __break(1u);
        goto LABEL_545;
      }
      if (v3 <= -9.22337204e18)
      {
LABEL_545:
        __break(1u);
        goto LABEL_546;
      }
      if (v3 >= 9.22337204e18)
      {
        __break(1u);
LABEL_207:
        if (swift_dynamicCastMetatype()) {
          goto LABEL_89;
        }
        if (swift_dynamicCastMetatype())
        {
          if ((unint64_t)v13 <= 0xFF) {
            goto LABEL_108;
          }
          __break(1u);
          goto LABEL_211;
        }
        goto LABEL_295;
      }
LABEL_118:
      v24[0] = (uint64_t)v3;
      goto LABEL_92;
    }
    if (swift_dynamicCastMetatype())
    {
      if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
      {
LABEL_573:
        __break(1u);
        goto LABEL_574;
      }
      if (v3 <= -129.0)
      {
LABEL_574:
        __break(1u);
        goto LABEL_575;
      }
      if (v3 >= 128.0)
      {
LABEL_575:
        __break(1u);
LABEL_576:
        __break(1u);
        goto LABEL_577;
      }
LABEL_281:
      LOBYTE(v24[0]) = (int)v3;
      goto LABEL_92;
    }
    if (!swift_dynamicCastMetatype())
    {
      uint64_t result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
        {
LABEL_605:
          __break(1u);
          goto LABEL_606;
        }
        if (v3 <= -2147483650.0)
        {
LABEL_606:
          __break(1u);
          goto LABEL_607;
        }
        if (v3 < 2147483650.0) {
          goto LABEL_273;
        }
        __break(1u);
        goto LABEL_378;
      }
      goto LABEL_405;
    }
    if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
    {
LABEL_591:
      __break(1u);
      goto LABEL_592;
    }
    if (v3 <= -32769.0)
    {
LABEL_592:
      __break(1u);
      goto LABEL_593;
    }
    if (v3 >= 32768.0)
    {
LABEL_593:
      __break(1u);
      goto LABEL_594;
    }
    goto LABEL_326;
  }
  LODWORD(v3) = v24[0];
  if (swift_dynamicCastMetatype())
  {
    if ((~LODWORD(v3) & 0x7F800000) != 0)
    {
      if (*(float *)&v3 > -9.2234e18)
      {
        if (*(float *)&v3 < 9.2234e18)
        {
          *(void *)&long long v25 = (uint64_t)*(float *)&v3;
          goto LABEL_92;
        }
        goto LABEL_496;
      }
LABEL_495:
      __break(1u);
LABEL_496:
      __break(1u);
      goto LABEL_497;
    }
LABEL_494:
    __break(1u);
    goto LABEL_495;
  }
  if (!swift_dynamicCastMetatype())
  {
LABEL_260:
    if (swift_dynamicCastMetatype())
    {
      if ((~LODWORD(v3) & 0x7F800000) != 0)
      {
        if (*(float *)&v3 > -32769.0)
        {
          if (*(float *)&v3 < 32768.0)
          {
            LOWORD(v25) = (int)*(float *)&v3;
            goto LABEL_92;
          }
          goto LABEL_558;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_558:
      __break(1u);
      goto LABEL_559;
    }
LABEL_299:
    if (!swift_dynamicCastMetatype())
    {
LABEL_345:
      uint64_t result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~LODWORD(v3) & 0x7F800000) != 0)
        {
          if (*(float *)&v3 > -9.2234e18)
          {
            if (*(float *)&v3 < 9.2234e18)
            {
              *(void *)&long long v25 = (uint64_t)*(float *)&v3;
              goto LABEL_92;
            }
            goto LABEL_601;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_601:
        __break(1u);
        goto LABEL_602;
      }
      uint64_t result = swift_dynamicCastMetatype();
      if (result)
      {
        if ((~LODWORD(v3) & 0x7F800000) != 0)
        {
          if (*(float *)&v3 > -1.0)
          {
            if (*(float *)&v3 < 1.8447e19)
            {
              *(void *)&long long v25 = (unint64_t)*(float *)&v3;
              goto LABEL_92;
            }
            goto LABEL_611;
          }
LABEL_610:
          __break(1u);
LABEL_611:
          __break(1u);
          goto LABEL_612;
        }
LABEL_609:
        __break(1u);
        goto LABEL_610;
      }
      goto LABEL_423;
    }
    if ((~LODWORD(v3) & 0x7F800000) != 0)
    {
      if (*(float *)&v3 > -2147500000.0)
      {
        if (*(float *)&v3 < 2147500000.0)
        {
          LODWORD(v25) = (int)*(float *)&v3;
          goto LABEL_92;
        }
        goto LABEL_585;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_585:
    __break(1u);
LABEL_586:
    __break(1u);
    goto LABEL_587;
  }
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
LABEL_530:
    __break(1u);
    goto LABEL_531;
  }
  if (*(float *)&v3 > -129.0)
  {
    if (*(float *)&v3 < 128.0)
    {
      LOBYTE(v25) = (int)*(float *)&v3;
      goto LABEL_92;
    }
    goto LABEL_532;
  }
LABEL_531:
  __break(1u);
LABEL_532:
  __break(1u);
LABEL_533:
  __break(1u);
LABEL_534:
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
    {
LABEL_651:
      __break(1u);
      goto LABEL_652;
    }
    if (v3 <= -1.0)
    {
LABEL_652:
      __break(1u);
      goto LABEL_653;
    }
    if (v3 >= 4294967300.0)
    {
LABEL_653:
      __break(1u);
      goto LABEL_654;
    }
    goto LABEL_538;
  }
LABEL_560:
  uint64_t result = swift_dynamicCastMetatype();
  if (!result)
  {
LABEL_565:
    if (swift_dynamicCastMetatype())
    {
      *(double *)uint64_t v24 = v3;
      goto LABEL_92;
    }
    if (!swift_dynamicCastMetatype()) {
      goto LABEL_579;
    }
    float v19 = v3;
    goto LABEL_358;
  }
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
LABEL_656:
    __break(1u);
    goto LABEL_657;
  }
  if (v3 > -1.0)
  {
    if (v3 < 1.84467441e19) {
      goto LABEL_501;
    }
    __break(1u);
    goto LABEL_565;
  }
LABEL_657:
  __break(1u);
  return result;
}

uint64_t __getAXSettingsClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return __73__AXAccessQueueTimer__afterDelay_processBlock_shouldTreatAsWritingBlock___block_invoke_cold_1(v0);
}

void AXAppNameForBundleId_cold_1(void *a1)
{
  unint64_t v1 = [a1 localizedDescription];
  OUTLINED_FUNCTION_0_0(&dword_18FC6C000, v2, v3, "Error in getting app name: %@", v4, v5, v6, v7, 2u);
}

void soft_AXSettingsLocalizedStringForKey_cold_1()
{
  dlerror();
  uint64_t v0 = (void *)abort_report_np();
  AXIsHiddenAppWithBundleId_cold_1(v0);
}

void AXIsHiddenAppWithBundleId_cold_1(void *a1)
{
  unint64_t v1 = [a1 localizedDescription];
  OUTLINED_FUNCTION_0_0(&dword_18FC6C000, v2, v3, "Error in getting protection mode: %@", v4, v5, v6, v7, 2u);
}

uint64_t __getCSLPRFApplicationLibraryClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return -[AXIndexMap _initAndDeepCopyIndexMap:](v0);
}

void UIAXAppendValidationError_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl(&dword_18FC6C000, log, OS_LOG_TYPE_ERROR, "%@ : %@", (uint8_t *)&v3, 0x16u);
}

void __UIAccessibilityHandleValidationErrorWithDescription_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_18FC6C000, a2, OS_LOG_TYPE_ERROR, "validation error: %{public}@", (uint8_t *)&v2, 0xCu);
}

uint64_t __getCLFSystemShellSwitcherClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return UIAccessibilitySymbolWithName_cold_1(v0);
}

void UIAccessibilitySymbolWithName_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl(&dword_18FC6C000, a2, OS_LOG_TYPE_ERROR, "Error locating symbol %{public}@", (uint8_t *)&v2, 0xCu);
}

void AXPerformSafeBlockWithErrorHandler_cold_1(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138543362;
  *(void *)(buf + 4) = a1;
  _os_log_fault_impl(&dword_18FC6C000, log, OS_LOG_TYPE_FAULT, "%{public}@", buf, 0xCu);
}

void AXPerformSafeBlockWithErrorHandler_cold_2(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138543362;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl(&dword_18FC6C000, log, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
}

void _AXAssert_cold_1()
{
}

void _AXAssertIsMainThread_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void _AXAssertIsThread_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_18FD01CF0()
{
  return MEMORY[0x1F40E3378]();
}

uint64_t sub_18FD01D00()
{
  return MEMORY[0x1F40E3390]();
}

uint64_t sub_18FD01D10()
{
  return MEMORY[0x1F40E3398]();
}

uint64_t sub_18FD01D20()
{
  return MEMORY[0x1F40E33A8]();
}

uint64_t sub_18FD01D30()
{
  return MEMORY[0x1F40E33E0]();
}

uint64_t sub_18FD01D40()
{
  return MEMORY[0x1F40E3410]();
}

uint64_t sub_18FD01D50()
{
  return MEMORY[0x1F40E3428]();
}

uint64_t sub_18FD01D60()
{
  return MEMORY[0x1F40E4548]();
}

uint64_t sub_18FD01D70()
{
  return MEMORY[0x1F40E4D50]();
}

uint64_t sub_18FD01D80()
{
  return MEMORY[0x1F40E53A8]();
}

uint64_t sub_18FD01D90()
{
  return MEMORY[0x1F40E53D0]();
}

uint64_t sub_18FD01DA0()
{
  return MEMORY[0x1F40E53F0]();
}

uint64_t sub_18FD01DB0()
{
  return MEMORY[0x1F40E5400]();
}

uint64_t sub_18FD01DC0()
{
  return MEMORY[0x1F40E5440]();
}

uint64_t sub_18FD01DD0()
{
  return MEMORY[0x1F40E5450]();
}

uint64_t sub_18FD01DE0()
{
  return MEMORY[0x1F40E5460]();
}

uint64_t sub_18FD01DF0()
{
  return MEMORY[0x1F40E5470]();
}

uint64_t sub_18FD01E00()
{
  return MEMORY[0x1F40E5488]();
}

uint64_t sub_18FD01E10()
{
  return MEMORY[0x1F40E54D0]();
}

uint64_t sub_18FD01E20()
{
  return MEMORY[0x1F40E54F0]();
}

uint64_t sub_18FD01E30()
{
  return MEMORY[0x1F40E5518]();
}

uint64_t sub_18FD01E40()
{
  return MEMORY[0x1F40E5528]();
}

uint64_t sub_18FD01E50()
{
  return MEMORY[0x1F40E5530]();
}

uint64_t sub_18FD01E60()
{
  return MEMORY[0x1F40E5538]();
}

uint64_t sub_18FD01E70()
{
  return MEMORY[0x1F40E5548]();
}

uint64_t sub_18FD01E80()
{
  return MEMORY[0x1F40E5580]();
}

uint64_t sub_18FD01E90()
{
  return MEMORY[0x1F40E5588]();
}

uint64_t sub_18FD01EA0()
{
  return MEMORY[0x1F40E5650]();
}

uint64_t sub_18FD01EB0()
{
  return MEMORY[0x1F40E56A8]();
}

uint64_t sub_18FD01EC0()
{
  return MEMORY[0x1F40E56D0]();
}

uint64_t sub_18FD01ED0()
{
  return MEMORY[0x1F40E56E0]();
}

uint64_t sub_18FD01EE0()
{
  return MEMORY[0x1F40E56F8]();
}

uint64_t sub_18FD01EF0()
{
  return MEMORY[0x1F40E5708]();
}

uint64_t sub_18FD01F00()
{
  return MEMORY[0x1F40E5710]();
}

uint64_t sub_18FD01F10()
{
  return MEMORY[0x1F40E5780]();
}

uint64_t sub_18FD01F20()
{
  return MEMORY[0x1F40E5790]();
}

uint64_t sub_18FD01F30()
{
  return MEMORY[0x1F40E57C0]();
}

uint64_t sub_18FD01F40()
{
  return MEMORY[0x1F40E57F0]();
}

uint64_t sub_18FD01F50()
{
  return MEMORY[0x1F40E5828]();
}

uint64_t sub_18FD01F60()
{
  return MEMORY[0x1F40E5830]();
}

uint64_t sub_18FD01F70()
{
  return MEMORY[0x1F40E5848]();
}

uint64_t sub_18FD01F80()
{
  return MEMORY[0x1F40E5870]();
}

uint64_t sub_18FD01F90()
{
  return MEMORY[0x1F40E5888]();
}

uint64_t sub_18FD01FA0()
{
  return MEMORY[0x1F4187478]();
}

uint64_t sub_18FD01FB0()
{
  return MEMORY[0x1F4187488]();
}

uint64_t sub_18FD01FC0()
{
  return MEMORY[0x1F41874A0]();
}

uint64_t sub_18FD01FD0()
{
  return MEMORY[0x1F41874F8]();
}

uint64_t sub_18FD01FE0()
{
  return MEMORY[0x1F4187530]();
}

uint64_t sub_18FD01FF0()
{
  return MEMORY[0x1F4187548]();
}

uint64_t sub_18FD02000()
{
  return MEMORY[0x1F4187558]();
}

uint64_t sub_18FD02010()
{
  return MEMORY[0x1F4187560]();
}

uint64_t sub_18FD02020()
{
  return MEMORY[0x1F4187570]();
}

uint64_t sub_18FD02030()
{
  return MEMORY[0x1F4187580]();
}

uint64_t sub_18FD02040()
{
  return MEMORY[0x1F41884F0]();
}

uint64_t sub_18FD02050()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t sub_18FD02060()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_18FD02070()
{
  return MEMORY[0x1F4187BE8]();
}

uint64_t sub_18FD02080()
{
  return MEMORY[0x1F40E5FF8]();
}

uint64_t sub_18FD02090()
{
  return MEMORY[0x1F40E6028]();
}

uint64_t sub_18FD020A0()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_18FD020B0()
{
  return MEMORY[0x1F4183510]();
}

uint64_t sub_18FD020C0()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_18FD020D0()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_18FD020E0()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_18FD020F0()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_18FD02100()
{
  return MEMORY[0x1F40E6070]();
}

uint64_t sub_18FD02110()
{
  return MEMORY[0x1F40E6090]();
}

uint64_t sub_18FD02120()
{
  return MEMORY[0x1F40E6198]();
}

uint64_t sub_18FD02130()
{
  return MEMORY[0x1F40E61B0]();
}

uint64_t sub_18FD02140()
{
  return MEMORY[0x1F40E61C0]();
}

uint64_t sub_18FD02150()
{
  return MEMORY[0x1F40E61D0]();
}

uint64_t sub_18FD02160()
{
  return MEMORY[0x1F40E6230]();
}

uint64_t sub_18FD02170()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_18FD02180()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_18FD02190()
{
  return MEMORY[0x1F41838B0]();
}

uint64_t sub_18FD021A0()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_18FD021B0()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_18FD021D0()
{
  return MEMORY[0x1F41838F8]();
}

uint64_t sub_18FD021E0()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_18FD021F0()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_18FD02200()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_18FD02210()
{
  return MEMORY[0x1F4183A28]();
}

uint64_t sub_18FD02220()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_18FD02230()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_18FD02240()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_18FD02250()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_18FD02260()
{
  return MEMORY[0x1F4183B38]();
}

uint64_t sub_18FD02270()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_18FD02280()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_18FD022A0()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_18FD022B0()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t sub_18FD022C0()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_18FD022D0()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_18FD022E0()
{
  return MEMORY[0x1F4183DA0]();
}

uint64_t sub_18FD022F0()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_18FD02300()
{
  return MEMORY[0x1F4183E18]();
}

uint64_t sub_18FD02310()
{
  return MEMORY[0x1F40E6340]();
}

uint64_t sub_18FD02320()
{
  return MEMORY[0x1F40E6368]();
}

uint64_t sub_18FD02330()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_18FD02340()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_18FD02350()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_18FD02360()
{
  return MEMORY[0x1F4183F98]();
}

uint64_t sub_18FD02370()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_18FD02380()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_18FD02390()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_18FD023A0()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_18FD023B0()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_18FD023C0()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t sub_18FD023D0()
{
  return MEMORY[0x1F4187C18]();
}

uint64_t sub_18FD023F0()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_18FD02400()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_18FD02410()
{
  return MEMORY[0x1F4187CE0]();
}

uint64_t sub_18FD02420()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_18FD02430()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_18FD02440()
{
  return MEMORY[0x1F4187D08]();
}

uint64_t sub_18FD02450()
{
  return MEMORY[0x1F4187D10]();
}

uint64_t sub_18FD02460()
{
  return MEMORY[0x1F4187D18]();
}

uint64_t sub_18FD02470()
{
  return MEMORY[0x1F4187D20]();
}

uint64_t sub_18FD02480()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_18FD02490()
{
  return MEMORY[0x1F4187D40]();
}

uint64_t sub_18FD024A0()
{
  return MEMORY[0x1F4187D48]();
}

uint64_t sub_18FD024B0()
{
  return MEMORY[0x1F4187D50]();
}

uint64_t sub_18FD024D0()
{
  return MEMORY[0x1F4187D68]();
}

uint64_t sub_18FD024E0()
{
  return MEMORY[0x1F4187D70]();
}

uint64_t sub_18FD024F0()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_18FD02500()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_18FD02510()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t sub_18FD02530()
{
  return MEMORY[0x1F4187E68]();
}

uint64_t sub_18FD02550()
{
  return MEMORY[0x1F4184090]();
}

uint64_t sub_18FD02560()
{
  return MEMORY[0x1F40E6418]();
}

uint64_t sub_18FD02570()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_18FD02580()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_18FD02590()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_18FD025A0()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_18FD025B0()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_18FD025C0()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_18FD025D0()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_18FD025E0()
{
  return MEMORY[0x1F40E6898]();
}

uint64_t sub_18FD025F0()
{
  return MEMORY[0x1F4184638]();
}

uint64_t sub_18FD02600()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_18FD02610()
{
  return MEMORY[0x1F41846E8]();
}

uint64_t sub_18FD02620()
{
  return MEMORY[0x1F40E6BB8]();
}

uint64_t sub_18FD02630()
{
  return MEMORY[0x1F40E6BE0]();
}

uint64_t sub_18FD02640()
{
  return MEMORY[0x1F40E6D80]();
}

uint64_t sub_18FD02650()
{
  return MEMORY[0x1F4184958]();
}

uint64_t sub_18FD02660()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_18FD02680()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_18FD02690()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_18FD026A0()
{
  return MEMORY[0x1F40E6DC0]();
}

uint64_t sub_18FD026B0()
{
  return MEMORY[0x1F40E6DC8]();
}

uint64_t sub_18FD026C0()
{
  return MEMORY[0x1F4184C10]();
}

uint64_t sub_18FD026D0()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_18FD026E0()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_18FD026F0()
{
  return MEMORY[0x1F4184C28]();
}

uint64_t sub_18FD02700()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_18FD02710()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_18FD02720()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_18FD02730()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_18FD02740()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_18FD02750()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_18FD02760()
{
  return MEMORY[0x1F4184CF8]();
}

uint64_t sub_18FD02770()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_18FD02780()
{
  return MEMORY[0x1F4184E70]();
}

uint64_t sub_18FD02790()
{
  return MEMORY[0x1F4184E78]();
}

uint64_t sub_18FD027A0()
{
  return MEMORY[0x1F4184EB0]();
}

uint64_t sub_18FD027B0()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_18FD027C0()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_18FD027D0()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_18FD027E0()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_18FD027F0()
{
  return MEMORY[0x1F4187F88]();
}

uint64_t sub_18FD02800()
{
  return MEMORY[0x1F4187F90]();
}

uint64_t sub_18FD02810()
{
  return MEMORY[0x1F4187FA0]();
}

uint64_t sub_18FD02820()
{
  return MEMORY[0x1F4187FA8]();
}

uint64_t sub_18FD02830()
{
  return MEMORY[0x1F4187FB8]();
}

uint64_t sub_18FD02840()
{
  return MEMORY[0x1F4184FF8]();
}

uint64_t sub_18FD02850()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_18FD02860()
{
  return MEMORY[0x1F41850C0]();
}

uint64_t sub_18FD02870()
{
  return MEMORY[0x1F4185188]();
}

uint64_t sub_18FD02880()
{
  return MEMORY[0x1F4185198]();
}

uint64_t sub_18FD02890()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_18FD028A0()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_18FD028B0()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_18FD028C0()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_18FD028D0()
{
  return MEMORY[0x1F41853A8]();
}

uint64_t sub_18FD028F0()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_18FD02900()
{
  return MEMORY[0x1F4185510]();
}

uint64_t sub_18FD02910()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_18FD02920()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_18FD02930()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_18FD02940()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_18FD02950()
{
  return MEMORY[0x1F41855F8]();
}

uint64_t sub_18FD02960()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_18FD02970()
{
  return MEMORY[0x1F4185640]();
}

uint64_t sub_18FD02980()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_18FD02990()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_18FD029A0()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_18FD029B0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_18FD029C0()
{
  return MEMORY[0x1F4185718]();
}

uint64_t sub_18FD029D0()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_18FD029E0()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_18FD029F0()
{
  return MEMORY[0x1F4185828]();
}

uint64_t sub_18FD02A00()
{
  return MEMORY[0x1F4185830]();
}

uint64_t sub_18FD02A10()
{
  return MEMORY[0x1F4185838]();
}

uint64_t sub_18FD02A20()
{
  return MEMORY[0x1F4185840]();
}

uint64_t sub_18FD02A30()
{
  return MEMORY[0x1F4185848]();
}

uint64_t sub_18FD02A40()
{
  return MEMORY[0x1F4185850]();
}

uint64_t sub_18FD02A50()
{
  return MEMORY[0x1F4185858]();
}

uint64_t sub_18FD02A60()
{
  return MEMORY[0x1F4185860]();
}

uint64_t sub_18FD02A70()
{
  return MEMORY[0x1F4185868]();
}

uint64_t sub_18FD02A80()
{
  return MEMORY[0x1F4185870]();
}

uint64_t sub_18FD02A90()
{
  return MEMORY[0x1F4185908]();
}

uint64_t sub_18FD02AA0()
{
  return MEMORY[0x1F4185910]();
}

uint64_t sub_18FD02AB0()
{
  return MEMORY[0x1F4185918]();
}

uint64_t sub_18FD02AC0()
{
  return MEMORY[0x1F4185920]();
}

uint64_t sub_18FD02AD0()
{
  return MEMORY[0x1F4185928]();
}

uint64_t sub_18FD02AE0()
{
  return MEMORY[0x1F4185930]();
}

uint64_t sub_18FD02AF0()
{
  return MEMORY[0x1F4185938]();
}

uint64_t sub_18FD02B00()
{
  return MEMORY[0x1F4185940]();
}

uint64_t sub_18FD02B10()
{
  return MEMORY[0x1F4185948]();
}

uint64_t sub_18FD02B20()
{
  return MEMORY[0x1F4185950]();
}

uint64_t sub_18FD02B30()
{
  return MEMORY[0x1F4185958]();
}

uint64_t sub_18FD02B40()
{
  return MEMORY[0x1F4185960]();
}

uint64_t sub_18FD02B50()
{
  return MEMORY[0x1F4185968]();
}

uint64_t sub_18FD02B60()
{
  return MEMORY[0x1F4185970]();
}

uint64_t sub_18FD02B70()
{
  return MEMORY[0x1F4185978]();
}

uint64_t sub_18FD02B80()
{
  return MEMORY[0x1F4185980]();
}

uint64_t sub_18FD02B90()
{
  return MEMORY[0x1F4185988]();
}

uint64_t sub_18FD02BA0()
{
  return MEMORY[0x1F4185990]();
}

uint64_t sub_18FD02BB0()
{
  return MEMORY[0x1F4185998]();
}

uint64_t sub_18FD02BC0()
{
  return MEMORY[0x1F41859A0]();
}

uint64_t sub_18FD02BD0()
{
  return MEMORY[0x1F41859A8]();
}

uint64_t sub_18FD02BE0()
{
  return MEMORY[0x1F4185A18]();
}

uint64_t sub_18FD02BF0()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_18FD02C00()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_18FD02C20()
{
  return MEMORY[0x1F4185AC8]();
}

uint64_t sub_18FD02C30()
{
  return MEMORY[0x1F4185AD0]();
}

uint64_t sub_18FD02C40()
{
  return MEMORY[0x1F4185B70]();
}

uint64_t sub_18FD02C50()
{
  return MEMORY[0x1F4185B78]();
}

uint64_t sub_18FD02C60()
{
  return MEMORY[0x1F4185BE8]();
}

uint64_t sub_18FD02C70()
{
  return MEMORY[0x1F4185BF0]();
}

uint64_t sub_18FD02C80()
{
  return MEMORY[0x1F4185C10]();
}

uint64_t sub_18FD02C90()
{
  return MEMORY[0x1F4185C88]();
}

uint64_t sub_18FD02CA0()
{
  return MEMORY[0x1F4185C90]();
}

uint64_t sub_18FD02CB0()
{
  return MEMORY[0x1F4185CB0]();
}

uint64_t sub_18FD02CC0()
{
  return MEMORY[0x1F4185CD8]();
}

uint64_t sub_18FD02CE0()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_18FD02CF0()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_18FD02D00()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_18FD02D10()
{
  return MEMORY[0x1F4188190]();
}

uint64_t sub_18FD02D20()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_18FD02D30()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_18FD02D40()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_18FD02D50()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_18FD02D60()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_18FD02D70()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_18FD02D80()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_18FD02D90()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_18FD02DA0()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_18FD02DB0()
{
  return MEMORY[0x1F4185F10]();
}

uint64_t sub_18FD02DC0()
{
  return MEMORY[0x1F4185F40]();
}

uint64_t sub_18FD02DD0()
{
  return MEMORY[0x1F4185F48]();
}

uint64_t sub_18FD02DE0()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_18FD02DF0()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_18FD02E00()
{
  return MEMORY[0x1F41861A8]();
}

uint64_t sub_18FD02E10()
{
  return MEMORY[0x1F4186288]();
}

uint64_t sub_18FD02E20()
{
  return MEMORY[0x1F4186290]();
}

uint64_t sub_18FD02E30()
{
  return MEMORY[0x1F4186298]();
}

uint64_t sub_18FD02E60()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AGTypeApplyEnumData()
{
  return MEMORY[0x1F410B260]();
}

uint64_t AGTypeApplyFields2()
{
  return MEMORY[0x1F410B268]();
}

uint64_t AGTypeGetKind()
{
  return MEMORY[0x1F410B270]();
}

uint64_t AXCPCopySharedResourcesPreferencesDomainForDomain()
{
  return MEMORY[0x1F41787C8]();
}

uint64_t AXSetUIAXReportSenderErrorLoggerFunction()
{
  return MEMORY[0x1F41787A8]();
}

uint64_t AXSetValidationErrorLoggingFunction()
{
  return MEMORY[0x1F41787B0]();
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1F40D72D8](arg);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1F40D7420]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D7998](allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D79A8](allocator, capacity, theDict);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x1F40D79C0](theDict);
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1F40D7A00]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1F40D7A68](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

CFArrayRef CFLocaleCopyPreferredLanguages(void)
{
  return (CFArrayRef)MEMORY[0x1F40D7BD8]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D08]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1F40D7E90](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1F40D7EE0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1F40D85F0]();
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1F40D9970](space, components);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B60](name);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDD8]();
}

uint64_t MKBUserSessionIsLoginWindow()
{
  return MEMORY[0x1F412FA10]();
}

uint64_t MKBUserTypeDeviceMode()
{
  return MEMORY[0x1F412FA18]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return (Protocol *)MEMORY[0x1F40E71E8](namestr);
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1F40E7228]();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1F40E7258](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1F40E7298](proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

uint64_t _AXSInUnitTestMode()
{
  return MEMORY[0x1F4178CC8]();
}

uint64_t _AXSMossdeepEnabled()
{
  return MEMORY[0x1F4178DA0]();
}

uint64_t _AXSReportValidationErrors()
{
  return MEMORY[0x1F4178E90]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFRuntimeCreateInstance()
{
  return MEMORY[0x1F40D90D0]();
}

uint64_t _CFRuntimeRegisterClass()
{
  return MEMORY[0x1F40D90E8]();
}

uint64_t _CFXPCCreateCFObjectFromXPCMessage()
{
  return MEMORY[0x1F40D9428]();
}

uint64_t _CFXPCCreateXPCMessageWithCFObject()
{
  return MEMORY[0x1F40D9440]();
}

uint64_t _NSDefaultFileSystemEncoding()
{
  return MEMORY[0x1F40E7320]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

float __exp10f(float a1)
{
  MEMORY[0x1F40C9B98](a1);
  return result;
}

const char *__cdecl _dyld_get_image_name(uint32_t image_index)
{
  return (const char *)MEMORY[0x1F40C9E10](*(void *)&image_index);
}

uint32_t _dyld_image_count(void)
{
  return MEMORY[0x1F40C9E60]();
}

void _dyld_register_func_for_add_image(void (__cdecl *func)(const mach_header *, intptr_t))
{
}

uint64_t _get_cpu_capabilities()
{
  return MEMORY[0x1F40C9F38]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1F40C9FB0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void abort(void)
{
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t class_addMethodsBulk()
{
  return MEMORY[0x1F41814D0]();
}

BOOL class_conformsToProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1F41814E0](cls, protocol);
}

Ivar *__cdecl class_copyIvarList(Class cls, unsigned int *outCount)
{
  return (Ivar *)MEMORY[0x1F41814F0](cls, outCount);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return (Method *)MEMORY[0x1F41814F8](cls, outCount);
}

Method class_getClassMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1F4181518](cls, name);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1F4181528](cls, name);
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return (Ivar)MEMORY[0x1F4181538](cls, name);
}

const char *__cdecl class_getName(Class cls)
{
  return (const char *)MEMORY[0x1F4181548](cls);
}

objc_property_t class_getProperty(Class cls, const char *name)
{
  return (objc_property_t)MEMORY[0x1F4181550](cls, name);
}

Class class_getSuperclass(Class cls)
{
  return (Class)MEMORY[0x1F4181558](cls);
}

BOOL class_isMetaClass(Class cls)
{
  return MEMORY[0x1F4181568](cls);
}

IMP class_replaceMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return (IMP)MEMORY[0x1F4181570](cls, name, imp, types);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x1F40CBA68](key);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBB8](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return (const char *)MEMORY[0x1F40CBBD8](queue);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x1F40CBD40](when, delta);
}

int dlclose(void *__handle)
{
  return MEMORY[0x1F40CBDA8](__handle);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1F40CBDB0]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1F40CBDB8](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

uint64_t dyld_image_path_containing_address()
{
  return MEMORY[0x1F40CBE70]();
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x1F40CC1A0](__x, __y);
  return result;
}

void free(void *a1)
{
}

uid_t geteuid(void)
{
  return MEMORY[0x1F40CC3B8]();
}

passwd *__cdecl getpwnam(const char *a1)
{
  return (passwd *)MEMORY[0x1F40CC4D8](a1);
}

passwd *__cdecl getpwuid(uid_t a1)
{
  return (passwd *)MEMORY[0x1F40CC4E8](*(void *)&a1);
}

uid_t getuid(void)
{
  return MEMORY[0x1F40CC570]();
}

IMP imp_implementationWithBlock(id block)
{
  return (IMP)MEMORY[0x1F41815A0](block);
}

ptrdiff_t ivar_getOffset(Ivar v)
{
  return MEMORY[0x1F41815C0](v);
}

const char *__cdecl ivar_getTypeEncoding(Ivar v)
{
  return (const char *)MEMORY[0x1F41815C8](v);
}

launch_data_t launch_data_alloc(launch_data_type_t type)
{
  return (launch_data_t)MEMORY[0x1F40CC780](*(void *)&type);
}

BOOL launch_data_dict_insert(launch_data_t ldict, const launch_data_t lval, const char *key)
{
  return MEMORY[0x1F40CC788](ldict, lval, key);
}

launch_data_t launch_data_dict_lookup(const launch_data_t ldict, const char *key)
{
  return (launch_data_t)MEMORY[0x1F40CC790](ldict, key);
}

void launch_data_free(launch_data_t ld)
{
}

uint64_t launch_data_get_integer(const launch_data_t ld)
{
  return MEMORY[0x1F40CC7A0](ld);
}

launch_data_type_t launch_data_get_type(const launch_data_t ld)
{
  return MEMORY[0x1F40CC7A8](ld);
}

launch_data_t launch_data_new_string(const char *val)
{
  return (launch_data_t)MEMORY[0x1F40CC7B0](val);
}

launch_data_t launch_msg(const launch_data_t request)
{
  return (launch_data_t)MEMORY[0x1F40CC7C0](request);
}

float log10f(float a1)
{
  MEMORY[0x1F40CC888](a1);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1F40CCA60](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCBA8](ptr, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

char *__cdecl method_copyArgumentType(Method m, unsigned int index)
{
  return (char *)MEMORY[0x1F41815D0](m, *(void *)&index);
}

char *__cdecl method_copyReturnType(Method m)
{
  return (char *)MEMORY[0x1F41815D8](m);
}

IMP method_getImplementation(Method m)
{
  return (IMP)MEMORY[0x1F41815F8](m);
}

SEL method_getName(Method m)
{
  return (SEL)MEMORY[0x1F4181600](m);
}

unsigned int method_getNumberOfArguments(Method m)
{
  return MEMORY[0x1F4181608](m);
}

const char *__cdecl method_getTypeEncoding(Method m)
{
  return (const char *)MEMORY[0x1F4181618](m);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

int objc_getClassList(Class *buffer, int bufferCount)
{
  return MEMORY[0x1F4181730](buffer, *(void *)&bufferCount);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1F4181A58](a1);
}

id object_getIvar(id a1, Ivar a2)
{
  return (id)MEMORY[0x1F4181A78](a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

uint64_t os_log_with_args()
{
  return MEMORY[0x1F40CD3C8]();
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t pc_session_add_metric()
{
  return MEMORY[0x1F4181BB0]();
}

uint64_t pc_session_begin()
{
  return MEMORY[0x1F4181BB8]();
}

uint64_t pc_session_create()
{
  return MEMORY[0x1F4181BC8]();
}

uint64_t pc_session_destroy()
{
  return MEMORY[0x1F4181BE0]();
}

uint64_t pc_session_end()
{
  return MEMORY[0x1F4181BE8]();
}

uint64_t pc_session_get_value()
{
  return MEMORY[0x1F4181C00]();
}

uint64_t pc_session_set_procpid()
{
  return MEMORY[0x1F4181C20]();
}

int posix_spawn(pid_t *a1, const char *a2, const posix_spawn_file_actions_t *a3, const posix_spawnattr_t *a4, char *const __argv[], char *const __envp[])
{
  return MEMORY[0x1F40CD790](a1, a2, a3, a4, __argv, __envp);
}

char *__cdecl property_copyAttributeValue(objc_property_t property, const char *attributeName)
{
  return (char *)MEMORY[0x1F4181AC0](property, attributeName);
}

BOOL protocol_conformsToProtocol(Protocol *proto, Protocol *other)
{
  return MEMORY[0x1F4181AE0](proto, other);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  uint64_t v4 = (const char *)MEMORY[0x1F4181B08](p, aSel, isRequiredMethod, isInstanceMethod);
  result.types = v5;
  result.name = v4;
  return result;
}

int pthread_getschedparam(pthread_t a1, int *a2, sched_param *a3)
{
  return MEMORY[0x1F40CDA18](a1, a2, a3);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x1F40CDB30]();
}

int pthread_setschedparam(pthread_t a1, int a2, const sched_param *a3)
{
  return MEMORY[0x1F40CDB68](a1, *(void *)&a2, a3);
}

void qsort_b(void *__base, size_t __nel, size_t __width, void *__compar)
{
}

const char *__cdecl sel_getName(SEL sel)
{
  return (const char *)MEMORY[0x1F4181B28](sel);
}

int seteuid(uid_t a1)
{
  return MEMORY[0x1F40CDF68](*(void *)&a1);
}

int setgid(gid_t a1)
{
  return MEMORY[0x1F40CDF70](*(void *)&a1);
}

int setuid(uid_t a1)
{
  return MEMORY[0x1F40CDFC8](*(void *)&a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1F40CE178](__s1);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1F40CE1B0](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

uint64_t swift_EnumCaseName()
{
  return MEMORY[0x1F41863C8]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isOptionalType()
{
  return MEMORY[0x1F41866D0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_reflectionMirror_count()
{
  return MEMORY[0x1F4186740]();
}

uint64_t swift_reflectionMirror_normalizedType()
{
  return MEMORY[0x1F4186748]();
}

uint64_t swift_reflectionMirror_subscript()
{
  return MEMORY[0x1F4186750]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x1F4186780]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t uldn_close()
{
  return MEMORY[0x1F4180088]();
}

uint64_t uldn_languageDisplayName()
{
  return MEMORY[0x1F4180098]();
}

uint64_t uldn_localeDisplayName()
{
  return MEMORY[0x1F41800A0]();
}

uint64_t uldn_open()
{
  return MEMORY[0x1F41800A8]();
}

uint64_t uldn_regionDisplayName()
{
  return MEMORY[0x1F41800B8]();
}

uint64_t uldn_variantDisplayName()
{
  return MEMORY[0x1F41800C0]();
}

uint64_t ulocdata_close()
{
  return MEMORY[0x1F41801E8]();
}

uint64_t ulocdata_getExemplarSet()
{
  return MEMORY[0x1F4180200]();
}

uint64_t ulocdata_open()
{
  return MEMORY[0x1F4180210]();
}

uint64_t uscript_getScriptExtensions()
{
  return MEMORY[0x1F41805E8]();
}

uint64_t uscript_getShortName()
{
  return MEMORY[0x1F41805F0]();
}

uint64_t uset_clear()
{
  return MEMORY[0x1F41806B8]();
}

uint64_t uset_close()
{
  return MEMORY[0x1F41806D0]();
}

uint64_t uset_getItem()
{
  return MEMORY[0x1F41806F8]();
}

uint64_t uset_getItemCount()
{
  return MEMORY[0x1F4180700]();
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1F40CEE08](xdict, applier);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1F40CEE40](original);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1F40CEEF0](xdict, key);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1F40CF148](object);
}