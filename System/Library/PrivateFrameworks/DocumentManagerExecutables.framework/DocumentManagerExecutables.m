uint64_t getEnumTagSinglePayload for DOCItemSortDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unint64_t sub_22BDC8200@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DOCItemSortMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t DOCItemSortMode.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x646573557473616CLL;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 1936154996;
      break;
    case 4:
      unint64_t result = 1702521203;
      break;
    case 5:
      unint64_t result = 1684957547;
      break;
    case 6:
      unint64_t result = 0x7942646572616873;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_22BDC82DC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

void DOCItemSortDescriptor.sortType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

ValueMetadata *type metadata accessor for DOCItemGroupingBehavior()
{
  return &type metadata for DOCItemGroupingBehavior;
}

uint64_t storeEnumTagSinglePayload for DOCItemSortDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemSortMode()
{
  return &type metadata for DOCItemSortMode;
}

unsigned __int8 *getEnumTagSinglePayload for DOCItemGroupingBehavior(unsigned __int8 *result, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9)
  {
LABEL_18:
    unsigned int v6 = *result;
    BOOL v7 = v6 >= 7;
    unsigned int v8 = v6 - 7;
    if (!v7) {
      unsigned int v8 = -1;
    }
    if (v8 + 1 >= 2) {
      return (unsigned __int8 *)v8;
    }
    else {
      return 0;
    }
  }
  else
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = result[1];
        if (!result[1]) {
          goto LABEL_18;
        }
        goto LABEL_16;
      case 2:
        int v5 = *(unsigned __int16 *)(result + 1);
        if (!*(_WORD *)(result + 1)) {
          goto LABEL_18;
        }
        goto LABEL_16;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v5 = *(_DWORD *)(result + 1);
        if (!v5) {
          goto LABEL_18;
        }
LABEL_16:
        unint64_t result = (unsigned __int8 *)((*result | (v5 << 8)) - 7);
        break;
      default:
        goto LABEL_18;
    }
  }
  return result;
}

uint64_t static Logger.UI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_2684867F8, (uint64_t)qword_2684879E0, a1);
}

ValueMetadata *type metadata accessor for DOCItemSortDescriptor()
{
  return &type metadata for DOCItemSortDescriptor;
}

void *sub_22BDC843C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

Swift::String __swiftcall DOCLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = sub_22BE91F78();
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t static DOCUIPPrototyping.enhandedMajestyGridLayout.getter()
{
  return 0;
}

void sub_22BDC8460(void *a1@<X8>)
{
  *a1 = *v1;
}

void DOCItemSortMode.displayableMode.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x5040302010000uLL >> (8 * *v1);
}

uint64_t sub_22BDC848C(unsigned __int8 *a1, char *a2)
{
  return sub_22BDD3ED4(*a1, *a2);
}

ValueMetadata *type metadata accessor for DOCContentLayoutSizeCategory()
{
  return &type metadata for DOCContentLayoutSizeCategory;
}

ValueMetadata *type metadata accessor for FPItem.SharingStatusOptions()
{
  return &type metadata for FPItem.SharingStatusOptions;
}

ValueMetadata *type metadata accessor for FPItem.SharingStatusStringType()
{
  return &type metadata for FPItem.SharingStatusStringType;
}

unsigned char *storeEnumTagSinglePayload for DOCItemGroupingBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *Swift::String result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *Swift::String result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemSortMode.DisplayableMode()
{
  return &type metadata for DOCItemSortMode.DisplayableMode;
}

unsigned char *sub_22BDC85AC(unsigned char *result, int a2)
{
  if (a2) {
    *Swift::String result = a2 + 6;
  }
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t DOCItemSortMode.DisplayableMode.accessibilityIdentifierComponent.getter()
{
  uint64_t result = 1702125924;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 6775156;
      break;
    case 3:
      uint64_t result = 1702521203;
      break;
    case 4:
      uint64_t result = 1684957547;
      break;
    case 5:
      uint64_t result = 0x7942646572616873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.Client(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t static Logger.StateStore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486848, (uint64_t)qword_268487AD0, a1);
}

uint64_t static Logger.Enumeration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486868, (uint64_t)qword_268487B30, a1);
}

uint64_t sub_22BDC8810(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 7) {
    return v1 - 6;
  }
  else {
    return 0;
  }
}

id static DOCLog.UI.getter()
{
  return sub_22BDCD8A4(&qword_26AF00288, (void **)&qword_26AEFFAC0);
}

unsigned char *sub_22BDC8848(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t sub_22BDC8854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void sub_22BDC886C(void *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_22BDC8874(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void static FPItem.SharingStatusOptions.compact.getter(void *a1@<X8>)
{
  *a1 = 1;
}

ValueMetadata *type metadata accessor for DOCNodeCollaborationType()
{
  return &type metadata for DOCNodeCollaborationType;
}

ValueMetadata *type metadata accessor for DOCAssociatedObjectStorageKey()
{
  return &type metadata for DOCAssociatedObjectStorageKey;
}

uint64_t dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DOCUnicode.rawValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

id static DOCUnicode.horizontalEllipsis.getter()
{
  return sub_22BDCD8A4(&qword_26AEFFC38, (void **)&qword_26AEFFA68);
}

uint64_t dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t static Logger.BrowserHistory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486830, (uint64_t)qword_268487A88, a1);
}

uint64_t sub_22BDC89D4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t DOCItemSortDescriptor.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(char a1, uint64_t (*a2)(void), uint64_t a3, char a4, char a5)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v8 = a2();
    unint64_t v10 = v9;
    if ((a4 & 1) == 0) {
      goto LABEL_11;
    }
    if (qword_2684867D8 != -1) {
      swift_once();
    }
    if (byte_268487860 == 1)
    {
      if (qword_2684867F8 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_22BE925E8();
      __swift_project_value_buffer(v11, (uint64_t)qword_2684879E0);
      swift_bridgeObjectRetain();
      v12 = sub_22BE925C8();
      os_log_type_t v13 = sub_22BE93168();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v23 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_22BDD8478(v8, v10, &v23);
        sub_22BE93408();
        swift_bridgeObjectRelease_n();
        v16 = "Skipping DOCGuardAssert() while attached in debugger: %s";
LABEL_16:
        _os_log_impl(&dword_22BDC5000, v12, v13, v16, v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v15, -1, -1);
        MEMORY[0x230F57540](v14, -1, -1);

        return a1 & 1;
      }
    }
    else
    {
LABEL_11:
      if ((a5 & 1) != 0 && DOCIsRunningUnitTests()())
      {
        if (qword_2684867F8 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_22BE925E8();
        __swift_project_value_buffer(v17, (uint64_t)qword_2684879E0);
        swift_bridgeObjectRetain();
        v12 = sub_22BE925C8();
        os_log_type_t v13 = sub_22BE93168();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          uint64_t v15 = swift_slowAlloc();
          uint64_t v23 = v15;
          *(_DWORD *)v14 = 136315138;
          swift_bridgeObjectRetain();
          sub_22BDD8478(v8, v10, &v23);
          sub_22BE93408();
          swift_bridgeObjectRelease_n();
          v16 = "Skipping DOCGuardAssert() while unit-testing: %s";
          goto LABEL_16;
        }
      }
      else
      {
        if (DOCIsInternalBuild())
        {
          swift_bridgeObjectRelease();
          return a1 & 1;
        }
        if (qword_2684867F8 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_22BE925E8();
        __swift_project_value_buffer(v18, (uint64_t)qword_2684879E0);
        swift_bridgeObjectRetain_n();
        v12 = sub_22BE925C8();
        os_log_type_t v19 = sub_22BE93168();
        if (os_log_type_enabled(v12, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          uint64_t v21 = swift_slowAlloc();
          uint64_t v23 = v21;
          *(_DWORD *)v20 = 136315138;
          swift_bridgeObjectRetain();
          sub_22BDD8478(v8, v10, &v23);
          sub_22BE93408();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_22BDC5000, v12, v19, "assertion failure: %s", v20, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x230F57540](v21, -1, -1);
          MEMORY[0x230F57540](v20, -1, -1);
          swift_bridgeObjectRelease();

          return a1 & 1;
        }
      }
    }

    swift_bridgeObjectRelease_n();
  }
  return a1 & 1;
}

uint64_t sub_22BDC8E98(unsigned __int8 *a1, char *a2)
{
  return sub_22BDCFB90(*a1, *a2);
}

ValueMetadata *type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin()
{
  return &type metadata for DOCAnalyticsConnectToServerShownEvent.Origin;
}

id sub_22BDC8EBC()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), sel_init);
  qword_26AEFFE10 = (uint64_t)result;
  return result;
}

id sub_22BDC8EF0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F086F0]), sel_init);
  id result = objc_msgSend(v0, sel_setCountStyle_, 0);
  qword_268487040 = (uint64_t)v0;
  return result;
}

id sub_22BDC8F40()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FISentinelNode()), sel_init);
  qword_26AEFFA70 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for DOCAnalyticsManager()
{
  return self;
}

uint64_t sub_22BDC8F94()
{
  return swift_initClassMetadata2();
}

void DOCAnalyticsActionEvent.Client.init(configuration:bundleIdentifier:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  if (objc_msgSend(a1, sel_isFilesApp))
  {

    swift_bridgeObjectRelease();
    char v8 = 1;
    goto LABEL_20;
  }
  if (objc_msgSend(a1, sel_isPopover))
  {

    swift_bridgeObjectRelease();
    char v8 = 4;
    goto LABEL_20;
  }
  if (objc_msgSend(a1, sel_isWidget))
  {

    swift_bridgeObjectRelease();
    char v8 = 6;
    goto LABEL_20;
  }
  uint64_t v9 = sub_22BE92CD8();
  if (a3)
  {
    if (v9 == a2 && v10 == a3)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    char v12 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRelease();

LABEL_19:
      char v8 = 5;
      goto LABEL_20;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (!objc_msgSend(a1, sel_forPickingDocuments)
    && !objc_msgSend(a1, sel_forPickingFolders))
  {
    uint64_t v13 = sub_22BE92CD8();
    if (a3)
    {
      if (v13 == a2 && v14 == a3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        char v8 = 3;
        goto LABEL_20;
      }
      char v15 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v15)
      {
        char v8 = 3;
        goto LABEL_20;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    char v8 = 0;
    goto LABEL_20;
  }

  swift_bridgeObjectRelease();
  char v8 = 2;
LABEL_20:
  *a4 = v8;
}

uint64_t sub_22BDC91E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_22BDC9218(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for FPProviderID(0);
  sub_22BDDD3E4((unint64_t *)&unk_26AF00310, type metadata accessor for FPProviderID);
  uint64_t result = sub_22BE93058();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_22BDCD060(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_22BDC92D4@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = qword_268487178;
  return result;
}

id sub_22BDC9320()
{
  id v0 = (objc_class *)type metadata accessor for DOCUnicode();
  unsigned int v1 = (char *)objc_allocWithZone(v0);
  uint64_t v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)uint64_t v2 = 10911970;
  *((void *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_26AEFFA68 = (uint64_t)result;
  return result;
}

uint64_t sub_22BDC9388()
{
  sub_22BE93388();
  MEMORY[0x270FA5388]();
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
  sub_22BE93378();
  uint64_t result = sub_22BE93398();
  qword_26AEFFA88 = result;
  return result;
}

BOOL DOCNode.isFPItem.getter()
{
  return swift_dynamicCastObjCClass() == 0;
}

id sub_22BDC946C()
{
  id result = DOCSourceLogHandle();
  qword_26AEFFAD0 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for DOCRootNode()
{
  return self;
}

id sub_22BDC94B8(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = a1;
  a4();

  uint64_t v14 = a5(0);
  uint64_t v15 = *(void *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
  {
    v16 = (void *)a6();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }

  return v16;
}

uint64_t sub_22BDC95F8(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487328);
  char v6 = a2;
  uint64_t v7 = sub_22BE93818();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = sub_22BE91C58();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              int v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_22BE939F8();
      sub_22BE92D48();
      uint64_t result = sub_22BE93A48();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      v20 = (void *)(*(void *)(v8 + 48) + v19);
      void *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *int v3 = v8;
  return result;
}

double sub_22BDC9904(void *a1)
{
  sub_22BDE1B54();
  id v2 = a1;
  sub_22BE93258();
  double v4 = v3;

  return v4;
}

id sub_22BDC9960()
{
  id result = DOCUILogHandle();
  qword_26AEFFAC0 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for DOCUSBFormatting()
{
  return self;
}

id sub_22BDC9A2C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCAnalyticsManager()), sel_init);
  qword_26AEFFA50 = (uint64_t)result;
  return result;
}

id sub_22BDC9A5C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCCollaborationHighlightManager()), sel_init);
  qword_26AEFFA60 = (uint64_t)result;
  return result;
}

uint64_t sub_22BDC9A8C()
{
  type metadata accessor for DOCUSBFormatting();
  uint64_t v0 = swift_allocObject();
  type metadata accessor for DOCOperationManager();
  swift_allocObject();
  uint64_t result = sub_22BDCA2C4();
  *(void *)(v0 + 16) = result;
  off_26AEFFA78 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_22BDC9AE4@<X0>(uint64_t *a1@<X0>, SEL *a2@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void **)(v5 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (v14)
  {
    id v15 = [v14 *a2];
    if (v15)
    {
      unint64_t v16 = v15;
      a3();

      uint64_t v17 = ((uint64_t (*)(void))a4)(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 0, 1, v17);
    }
    else
    {
      uint64_t v21 = a4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 1, 1, v21);
    }
    return sub_22BDE2770((uint64_t)v13, a5, a1);
  }
  else
  {
    uint64_t v18 = a4();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    return v19(a5, 1, 1, v18);
  }
}

BOOL DOCNode.isFINode.getter()
{
  return swift_dynamicCastObjCClass() != 0;
}

uint64_t type metadata accessor for DOCCollaborationHighlightManager()
{
  return self;
}

uint64_t DOCNode.nodeType.getter@<X0>(BOOL *a1@<X8>)
{
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  *a1 = result != 0;
  return result;
}

uint64_t type metadata accessor for FISentinelNode()
{
  return self;
}

id static FISentinelNode.createSentinelNode.getter()
{
  if (qword_26AEFFE08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_26AEFFA70;

  return v0;
}

uint64_t sub_22BDC9DDC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00520);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    type metadata accessor for FPProviderID(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCColumnViewSpecs()
{
  return self;
}

void *sub_22BDC9F88()
{
  unsigned int v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_deferredCreationNode);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t sub_22BDC9FD8(void *a1)
{
  id v2 = self;
  id v3 = a1;
  if (objc_msgSend(v2, sel_enclosingTabSwitcherCanBeFloating))
  {
    unsigned int v4 = objc_msgSend(v3, sel_isPickerUI);

    return v4 ^ 1;
  }
  else
  {

    return 0;
  }
}

id sub_22BDCA04C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 0);
  id result = objc_msgSend(v0, sel_setTimeStyle_, 1);
  qword_268490A10 = (uint64_t)v0;
  return result;
}

double sub_22BDCA0B0@<D0>(void *a1@<X8>)
{
  if (qword_2684866F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double result = *(double *)&qword_268487160;
  *a1 = qword_268487160;
  return result;
}

Swift::String __swiftcall DOCLocalizedDictionaryString(_:comment:)(Swift::String _, Swift::String comment)
{
  id v2 = (id)_DocumentManagerBundle();
  if (v2)
  {
    unsigned int v4 = v2;
    uint64_t v5 = sub_22BE91F78();
    int64_t v7 = v6;

    id v2 = (id)v5;
    id v3 = v7;
  }
  else
  {
    __break(1u);
  }
  result._object = v3;
  result._countAndFlagsBits = (uint64_t)v2;
  return result;
}

uint64_t sub_22BDCA1D8()
{
  return swift_initClassMetadata2();
}

id sub_22BDCA228(uint64_t a1)
{
  unsigned int v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_22BE91C58();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_22BDD9D50(0, (unint64_t *)&unk_2684882F0);
    unsigned int v4 = (void *)sub_22BE92BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v4 = 0;
  }

  return v4;
}

uint64_t sub_22BDCA2C4()
{
  uint64_t v1 = sub_22BE931B8();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_22BE931D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE92B58();
  MEMORY[0x270FA5388](v6 - 8);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  sub_22BE92B48();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F138], v2);
  uint64_t v7 = MEMORY[0x263F8EE78];
  v9[1] = MEMORY[0x263F8EE78];
  sub_22BDD69C4((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  *(void *)(v0 + 16) = sub_22BE93228();
  *(void *)(v0 + 24) = v7;
  return v0;
}

uint64_t type metadata accessor for DOCAssertionCollection()
{
  return self;
}

uint64_t sub_22BDCA53C(uint64_t a1)
{
  return a1;
}

uint64_t sub_22BDCA574(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v3);
  uint64_t v5 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v6 = v5();
  swift_release();
  if (a2 && v6)
  {
    id v7 = a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_22BDE078C((uint64_t)v7, 0x6556656C646E7562, 0xED00006E6F697372, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  return v6;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider __swiftcall DOCAnalyticsActionEvent.FileProvider.init(items:)(Swift::OpaquePointer items)
{
  uint64_t v3 = v1;
  if (!((unint64_t)items._rawValue >> 62))
  {
    uint64_t v4 = *(void *)(((unint64_t)items._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v4 = sub_22BE937E8();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v18 = MEMORY[0x263F8EE78];
  DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider result = sub_22BDE0ACC(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    uint64_t v7 = v18;
    do
    {
      if (((unint64_t)items._rawValue & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x230F56140](v6, items._rawValue);
      }
      else {
        id v8 = *((id *)items._rawValue + v6 + 4);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_providerID);

      unint64_t v12 = *(void *)(v18 + 16);
      unint64_t v11 = *(void *)(v18 + 24);
      if (v12 >= v11 >> 1) {
        sub_22BDE0ACC(v11 > 1, v12 + 1, 1);
      }
      ++v6;
      *(void *)(v18 + 16) = v12 + 1;
      *(void *)(v18 + 8 * v12 + 32) = v10;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v13 = sub_22BDC9218(v7);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      id v15 = (void *)sub_22BDE12CC(v13);
      DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider result = swift_bridgeObjectRelease();
      if (v15)
      {
        if (v14 == 1)
        {
          DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider result = DOCAnalyticsActionEvent.FileProvider.init(providerID:)((__C::FPProviderID)v15);
          char v16 = v17;
LABEL_21:
          *uint64_t v3 = v16;
          return result;
        }
      }
      char v16 = 1;
      goto LABEL_21;
    }
    DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider result = swift_bridgeObjectRelease();
    char v16 = 0;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_22BDCA810()
{
  sub_22BE92CD8();
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_26AEFFAE0 = (uint64_t)v2;
}

uint64_t sub_22BDCA898()
{
  uint64_t v0 = sub_22BE931D8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE931B8();
  MEMORY[0x270FA5388]();
  sub_22BE92B58();
  MEMORY[0x270FA5388]();
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  sub_22BE92B48();
  v5[1] = MEMORY[0x263F8EE78];
  sub_22BDD69C4((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v0);
  uint64_t result = sub_22BE93228();
  qword_26AEFFFD8 = result;
  return result;
}

uint64_t UIMutableTraits.enclosingTabSwitcherStyle.setter()
{
  return sub_22BE92628();
}

uint64_t sub_22BDCAB80()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t DOCAssertionCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_22BDCAC6C()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    unint64_t v3 = 0;
    unint64_t v4 = v1 & 0xC000000000000001;
    unint64_t v24 = v1 + 32;
    uint64_t v25 = v1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v5 = MEMORY[0x263F8EE78];
    unint64_t v23 = v1;
    unint64_t v26 = v1 & 0xC000000000000001;
    uint64_t v27 = v2;
    while (v4)
    {
      uint64_t v6 = MEMORY[0x230F56140](v3, v1);
      BOOL v7 = __OFADD__(v3++, 1);
      if (v7) {
        goto LABEL_41;
      }
LABEL_12:
      char v8 = *(unsigned char *)(v6 + 32);
      *(unsigned char *)(v6 + 32) = 0;
      if ((v8 & 1) == 0)
      {
        swift_release();
        goto LABEL_5;
      }
      uint64_t v9 = (unint64_t *)(v6 + 40);
      swift_beginAccess();
      unint64_t v10 = *(void *)(v6 + 40);
      unint64_t v28 = v5;
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_22BE937E8();
        if (v11)
        {
LABEL_15:
          if (v11 < 1) {
            goto LABEL_43;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0)
            {
              uint64_t v13 = MEMORY[0x230F56140](i, v10);
            }
            else
            {
              uint64_t v13 = *(void *)(v10 + 8 * i + 32);
              sub_22BE91C58();
            }
            uint64_t v14 = MEMORY[0x230F57630](v13 + 16);
            swift_unknownObjectRelease();
            if (v14)
            {
              sub_22BE936B8();
              sub_22BE936F8();
              sub_22BE93708();
              sub_22BE936C8();
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v15 = v28;
          unint64_t v1 = v23;
          unint64_t v5 = MEMORY[0x263F8EE78];
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v5 = MEMORY[0x263F8EE78];
      unint64_t v15 = MEMORY[0x263F8EE78];
LABEL_27:
      *uint64_t v9 = v15;
      swift_bridgeObjectRelease();
      unint64_t v16 = *v9;
      *uint64_t v9 = v5;
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_22BE937E8();
        swift_bridgeObjectRelease();
        if (!v17)
        {
LABEL_40:
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v4 = v26;
          uint64_t v2 = v27;
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v17) {
          goto LABEL_40;
        }
      }
      if (v17 < 1) {
        goto LABEL_44;
      }
      for (uint64_t j = 0; j != v17; ++j)
      {
        if ((v16 & 0xC000000000000001) != 0)
        {
          uint64_t v21 = MEMORY[0x230F56140](j, v16);
        }
        else
        {
          uint64_t v21 = *(void *)(v16 + 8 * j + 32);
          sub_22BE91C58();
        }
        if (MEMORY[0x230F57630](v21 + 16))
        {
          uint64_t v19 = *(void *)(v21 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v6, ObjectType, v19);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v4 = v26;
      uint64_t v2 = v27;
      unint64_t v5 = MEMORY[0x263F8EE78];
LABEL_5:
      if (v3 == v2) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v3 >= *(void *)(v25 + 16)) {
      goto LABEL_42;
    }
    uint64_t v6 = *(void *)(v24 + 8 * v3);
    sub_22BE91C58();
    BOOL v7 = __OFADD__(v3++, 1);
    if (!v7) {
      goto LABEL_12;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_22BE937E8();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_22BDCB108()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE991D0;
  *(void *)(inited + 32) = 0x6E6F69746361;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = sub_22BE93078();
  *(void *)(inited + 56) = 0x746E65696C63;
  *(void *)(inited + 64) = 0xE600000000000000;
  *(void *)(inited + 72) = sub_22BE93078();
  *(void *)(inited + 80) = 0x72656469766F7270;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = sub_22BE93078();
  *(void *)(inited + 104) = 0x656372756F73;
  *(void *)(inited + 112) = 0xE600000000000000;
  *(void *)(inited + 120) = sub_22BE93078();
  *(void *)(inited + 128) = 0x65646F4D77656976;
  *(void *)(inited + 136) = 0xE800000000000000;
  *(void *)(inited + 144) = sub_22BE93078();
  *(void *)(inited + 152) = 0x65646F4D74726F73;
  *(void *)(inited + 160) = 0xE800000000000000;
  *(void *)(inited + 168) = sub_22BE93078();
  *(void *)(inited + 176) = 0x6564724F74726F73;
  *(void *)(inited + 184) = 0xE900000000000072;
  *(void *)(inited + 192) = sub_22BE93078();
  return sub_22BDD4F50(inited);
}

id *static DOCRootNode.rootNode(for:)(void *a1)
{
  uint64_t v2 = (void *)sub_22BE92198();
  uint64_t v3 = *(v2 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (uint8_t *)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v179 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  unint64_t v12 = (char *)&v179 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v179 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  v188 = (uint8_t *)&v179 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (uint64_t)&v179 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v179 - v21;
  unint64_t v23 = 0;
  if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) == 0) {
    return (id *)v23;
  }
  unsigned int v24 = objc_msgSend(a1, sel_isiCloudDriveProvider);
  id v189 = a1;
  if (v24)
  {
    id v25 = objc_msgSend(a1, sel_isUsingFPFS);
    if (v25)
    {
      if (qword_26AEFFFD0 != -1) {
        id v25 = (id)swift_once();
      }
      uint64_t v26 = MEMORY[0x270FA5388](v25);
      *(&v179 - 2) = (uint64_t)a1;
      MEMORY[0x270FA5388](v26);
      *(&v179 - 4) = (uint64_t)sub_22BDD2D08;
      *(&v179 - 3) = v27;
      *(&v179 - 2) = v28;
      id v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(qword_26AEFFFF0);
      sub_22BE93208();

      id v31 = v189;
      unint64_t v23 = (char *)v196[0];
      if (!v196[0])
      {
        id v32 = objc_msgSend(self, sel_shared);
        objc_msgSend(v32, sel_startIfNeeded);

        id v33 = objc_allocWithZone((Class)type metadata accessor for DOCICloudRootNode());
        return sub_22BDD6D34(v31);
      }
      return (id *)v23;
    }
  }
  uint64_t v186 = (uint64_t)v14;
  *(void *)&long long v187 = v3;
  uint64_t v34 = self;
  id v35 = objc_msgSend(v34, sel_dsEnumerationLocal);
  unsigned int v36 = objc_msgSend(v35, sel_isEnabled);

  if (v36)
  {
    v185 = v12;
    long long v37 = v9;
    v38 = v2;
    v39 = v6;
    id v40 = objc_msgSend(v189, sel_providerID);
    uint64_t v41 = sub_22BE92CD8();
    uint64_t v43 = v42;

    if (v41 == sub_22BE92CD8() && v43 == v44)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    char v45 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v39;
    uint64_t v2 = v38;
    uint64_t v9 = v37;
    unint64_t v12 = v185;
    if (v45)
    {
LABEL_13:
      v46 = self;
      unint64_t v23 = (char *)objc_msgSend(v46, sel_currentSharedInstance);
      if (!v23)
      {
        id v47 = v189;
        id v48 = (id)DOCLocalizedDisplayName();
        if (!v48)
        {
          sub_22BE92CD8();
          id v48 = (id)sub_22BE92C98();
          swift_bridgeObjectRelease();
        }
        unint64_t v23 = (char *)objc_msgSend(v46, sel_sharedInstanceWithDisplayName_domain_, v48, v47);
      }
      return (id *)v23;
    }
  }
  id v49 = objc_msgSend(v34, sel_dsEnumerationUSB);
  unsigned int v50 = objc_msgSend(v49, sel_isEnabled);

  if (v50)
  {
    id v51 = objc_msgSend(v189, sel_providerID);
    uint64_t v52 = sub_22BE92CD8();
    uint64_t v54 = v53;

    if (v52 == sub_22BE92CD8() && v54 == v55)
    {
      swift_bridgeObjectRelease_n();
      id v56 = v189;
      objc_msgSend(v189, sel_isUsingFPFS);
      int v57 = 1;
LABEL_46:
      int v184 = v57;
      if (qword_268486868 != -1) {
LABEL_87:
      }
        swift_once();
      uint64_t v77 = sub_22BE925E8();
      uint64_t v78 = __swift_project_value_buffer(v77, (uint64_t)qword_268487B30);
      id v79 = v56;
      v185 = (char *)v78;
      v80 = sub_22BE925C8();
      int v81 = sub_22BE93148();
      BOOL v82 = os_log_type_enabled(v80, (os_log_type_t)v81);
      v83 = &selRef_removeObserver_;
      v183 = v6;
      if (v82)
      {
        int v180 = v81;
        os_log_t v182 = v80;
        uint64_t v84 = swift_slowAlloc();
        uint64_t v179 = swift_slowAlloc();
        v196[0] = v179;
        *(_DWORD *)uint64_t v84 = 136315394;
        v181 = (uint8_t *)(v84 + 4);
        id v85 = objc_msgSend(v79, sel_identifier);
        uint64_t v86 = sub_22BE92CD8();
        unint64_t v88 = v87;

        uint64_t v195 = sub_22BDD8478(v86, v88, v196);
        sub_22BE93408();

        swift_bridgeObjectRelease();
        v181 = (uint8_t *)v84;
        *(_WORD *)(v84 + 12) = 2080;
        id v89 = objc_msgSend(v79, sel_storageURLs);
        uint64_t v90 = sub_22BE92EB8();

        if (*(void *)(v90 + 16))
        {
          uint64_t v91 = v187;
          (*(void (**)(char *, unint64_t, void *))(v187 + 16))(v22, v90 + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)), v2);
          uint64_t v92 = 0;
        }
        else
        {
          uint64_t v92 = 1;
          uint64_t v91 = v187;
        }
        (*(void (**)(char *, uint64_t, uint64_t, void *))(v91 + 56))(v22, v92, 1, v2);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v91 + 48))(v22, 1, v2) == 1)
        {
          sub_22BDFBCE4((uint64_t)v22);
          unint64_t v108 = 0xE300000000000000;
          uint64_t v109 = 4271950;
        }
        else
        {
          uint64_t v109 = sub_22BE920F8();
          unint64_t v108 = v110;
          (*(void (**)(char *, void *))(v91 + 8))(v22, v2);
        }
        v111 = v181;
        uint64_t v195 = sub_22BDD8478(v109, v108, v196);
        sub_22BE93408();

        swift_bridgeObjectRelease();
        os_log_t v112 = v182;
        _os_log_impl(&dword_22BDC5000, v182, (os_log_type_t)v180, "Creating DOCRootNode from FPFS domain '%s' first storageURL: '%s'", v111, 0x16u);
        uint64_t v113 = v179;
        swift_arrayDestroy();
        MEMORY[0x230F57540](v113, -1, -1);
        MEMORY[0x230F57540](v111, -1, -1);

        v83 = &selRef_removeObserver_;
      }
      else
      {
      }
      id v114 = [v79 v83[474]];
      uint64_t v115 = sub_22BE92EB8();

      uint64_t v116 = v187;
      if (*(void *)(v115 + 16))
      {
        (*(void (**)(uint64_t, unint64_t, void *))(v187 + 16))(v20, v115 + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)), v2);
        v117 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v116 + 56);
        v117(v20, 0, 1, v2);
      }
      else
      {
        v117 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v187 + 56);
        v117(v20, 1, 1, v2);
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v116 + 48))(v20, 1, v2) == 1)
      {
        sub_22BDFBCE4(v20);
        id v118 = v79;
        v119 = sub_22BE925C8();
        os_log_type_t v120 = sub_22BE93158();
        if (!os_log_type_enabled(v119, v120)) {
          goto LABEL_78;
        }
        v121 = (uint8_t *)swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        v196[0] = v122;
        *(_DWORD *)v121 = 136315138;
        id v123 = objc_msgSend(v118, sel_identifier);
        uint64_t v124 = sub_22BE92CD8();
        unint64_t v126 = v125;

        uint64_t v195 = sub_22BDD8478(v124, v126, v196);
        sub_22BE93408();

        swift_bridgeObjectRelease();
        v127 = "Could not create rootNode becuase storageURLs.first is nil for providerDomain '%s'";
LABEL_68:
        _os_log_impl(&dword_22BDC5000, v119, v120, v127, v121, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v122, -1, -1);
        MEMORY[0x230F57540](v121, -1, -1);

        return 0;
      }
      uint64_t v128 = v186;
      (*(void (**)(uint64_t, uint64_t, void *))(v116 + 32))(v186, v20, v2);
      v129 = v79;
      v130 = *(void (**)(char *, uint64_t, void *))(v116 + 16);
      v130(v12, v128, v2);
      sub_22BDD9D50(0, (unint64_t *)&unk_26AF00470);
      v131 = v188;
      v130((char *)v188, (uint64_t)v12, v2);
      v117((uint64_t)v131, 0, 1, v2);
      id v132 = v129;
      uint64_t v133 = v116;
      id v134 = static FINode.docNode(from:)((uint64_t)v131);
      sub_22BDFBCE4((uint64_t)v131);
      if (v134)
      {
        id v135 = v132;
        v136 = (objc_class *)type metadata accessor for DOCRootNode();
        v137 = (char *)objc_allocWithZone(v136);
        *(void *)&v137[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
        v190.receiver = v137;
        v190.super_class = v136;
        unint64_t v23 = (char *)objc_msgSendSuper2(&v190, sel_initWithSubject_, v134);

        v138 = *(void **)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
        *(void *)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = v135;

        v139 = *(void (**)(char *, void *))(v133 + 8);
        v139(v12, v2);
        v139((char *)v186, v2);
        return (id *)v23;
      }

      uint64_t v20 = *(void *)(v133 + 8);
      ((void (*)(char *, void *))v20)(v12, v2);
      uint64_t v140 = v133 + 8;
      if (v184)
      {
        id v189 = v132;
        v130(v9, v186, v2);
        v141 = sub_22BE925C8();
        v142 = v9;
        os_log_type_t v143 = sub_22BE93178();
        if (os_log_type_enabled(v141, v143))
        {
          v144 = (uint8_t *)swift_slowAlloc();
          uint64_t v145 = swift_slowAlloc();
          v196[0] = v145;
          *(_DWORD *)v144 = 136315138;
          v188 = (uint8_t *)v20;
          sub_22BDFBD44();
          uint64_t v146 = sub_22BE93878();
          uint64_t v195 = sub_22BDD8478(v146, v147, v196);
          uint64_t v20 = (uint64_t)v188;
          sub_22BE93408();
          swift_bridgeObjectRelease();
          ((void (*)(char *, void *))v20)(v142, v2);
          _os_log_impl(&dword_22BDC5000, v141, v143, "Could not create node for USB mounted at %s, creating encrypted volume node instead", v144, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x230F57540](v145, -1, -1);
          MEMORY[0x230F57540](v144, -1, -1);
        }
        else
        {
          ((void (*)(char *, void *))v20)(v142, v2);
        }

        v163 = (objc_class *)type metadata accessor for DOCEncryptedVolumeNode();
        v164 = (char *)objc_allocWithZone(v163);
        uint64_t v165 = OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_needsAuthNode;
        *(void *)&v164[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_needsAuthNode] = 0;
        id v166 = v189;
        *(void *)&v164[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain] = v189;
        v167 = (objc_class *)type metadata accessor for DOCNeedsAuthenticationNode();
        v168 = (char *)objc_allocWithZone(v167);
        *(void *)&v168[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCNeedsAuthenticationNode_domain] = v166;
        v193.receiver = v168;
        v193.super_class = v167;
        id v169 = v166;
        v170 = v164;
        id v171 = objc_msgSendSuper2(&v193, sel_init);
        v172 = *(void **)&v164[v165];
        *(void *)&v164[v165] = v171;
        id v173 = v171;

        v192.receiver = v170;
        v192.super_class = v163;
        id v174 = objc_msgSendSuper2(&v192, sel_initWithSubject_, v173);

        v175 = (objc_class *)type metadata accessor for DOCRootNode();
        v176 = (char *)objc_allocWithZone(v175);
        *(void *)&v176[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
        v191.receiver = v176;
        v191.super_class = v175;
        id v177 = v169;
        unint64_t v23 = (char *)objc_msgSendSuper2(&v191, sel_initWithSubject_, v174);

        v178 = *(void **)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
        *(void *)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = v177;

        ((void (*)(uint64_t, void *))v20)(v186, v2);
        return (id *)v23;
      }
      v154 = v183;
      uint64_t v22 = (char *)v186;
      v130((char *)v183, v186, v2);
      v155 = sub_22BE925C8();
      os_log_type_t v156 = sub_22BE93178();
      uint64_t v6 = (uint8_t *)v156;
      if (os_log_type_enabled(v155, v156))
      {
        uint64_t v157 = swift_slowAlloc();
        *(void *)&long long v187 = v140;
        v158 = (uint8_t *)v157;
        uint64_t v159 = swift_slowAlloc();
        v196[0] = v159;
        *(_DWORD *)v158 = 136315138;
        unint64_t v12 = (char *)(v158 + 12);
        v188 = (uint8_t *)v20;
        uint64_t v20 = (uint64_t)(v158 + 4);
        sub_22BDFBD44();
        uint64_t v160 = sub_22BE93878();
        uint64_t v195 = sub_22BDD8478(v160, v161, v196);
        sub_22BE93408();
        swift_bridgeObjectRelease();
        v162 = v188;
        ((void (*)(uint8_t *, void *))v188)(v154, v2);
        _os_log_impl(&dword_22BDC5000, v155, (os_log_type_t)v6, "Could not create rootNode for FPFS %s, going to fallback to safeDomainNode", v158, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v159, -1, -1);
        MEMORY[0x230F57540](v158, -1, -1);

        ((void (*)(char *, void *))v162)(v22, v2);
      }
      else
      {

        ((void (*)(uint8_t *, void *))v20)(v154, v2);
        ((void (*)(char *, void *))v20)(v22, v2);
      }
      id v56 = v189;
      goto LABEL_25;
    }
    int v57 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v57 = 0;
  }
  id v56 = v189;
  if (objc_msgSend(v189, sel_isUsingFPFS) & 1) != 0 || (v57) {
    goto LABEL_46;
  }
LABEL_25:
  uint64_t v2 = self;
  uint64_t v58 = 0;
  v59 = &selRef_removeObserver_;
  *(void *)&long long v60 = 136315394;
  long long v187 = v60;
  uint64_t v186 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    if (v58)
    {
      if (qword_268486868 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_22BE925E8();
      __swift_project_value_buffer(v61, (uint64_t)qword_268487B30);
      id v62 = v56;
      v63 = sub_22BE925C8();
      os_log_type_t v64 = sub_22BE93148();
      uint64_t v20 = v64;
      if (os_log_type_enabled(v63, v64))
      {
        unint64_t v12 = (char *)swift_slowAlloc();
        v188 = (uint8_t *)swift_slowAlloc();
        v196[0] = (uint64_t)v188;
        *(_DWORD *)unint64_t v12 = v187;
        uint64_t v22 = (char *)objc_msgSend(v62, sel_identifier);
        v65 = v59;
        v66 = v2;
        uint64_t v67 = sub_22BE92CD8();
        unint64_t v69 = v68;

        uint64_t v70 = v67;
        uint64_t v2 = v66;
        v59 = v65;
        *(void *)(v12 + 4) = sub_22BDD8478(v70, v69, v196);

        id v56 = v189;
        swift_bridgeObjectRelease();
        *((_WORD *)v12 + 6) = 2048;
        *(void *)(v12 + 14) = v58;
        _os_log_impl(&dword_22BDC5000, v63, (os_log_type_t)v20, "Retrying because we did not find FINode for FPv2 domain '%s': %ld", (uint8_t *)v12, 0x16u);
        uint64_t v6 = v188;
        swift_arrayDestroy();
        MEMORY[0x230F57540](v6, -1, -1);
        MEMORY[0x230F57540](v12, -1, -1);
      }
      else
      {
      }
      objc_msgSend(self, sel_sleepForTimeInterval_, 0.001);
    }
    uint64_t v9 = (char *)[v2 v59[484]];
    v71 = (char *)objc_msgSend(v9, sel_iteratorWithOptions_, 262148);
    if (v71) {
      break;
    }

    if (v58 == 1000) {
      goto LABEL_74;
    }
LABEL_43:
    if (__OFADD__(v58++, 1))
    {
      __break(1u);
      goto LABEL_87;
    }
  }
  unint64_t v12 = v71;
  id v72 = objc_msgSend(v71, sel_first);
  if (v72)
  {
    id v73 = v72;
    while (1)
    {
      uint64_t v20 = (uint64_t)v73;
      v74 = (char *)objc_msgSend((id)v20, sel_fpDomain);
      if (v74)
      {
        uint64_t v22 = v74;
        sub_22BDD9D50(0, &qword_268486EA8);
        uint64_t v6 = (uint8_t *)v56;
        char v75 = sub_22BE93328();

        if (v75) {
          break;
        }
      }
      id v73 = objc_msgSend((id)swift_unknownObjectRetain(), sel_next);
      swift_unknownObjectRelease();

      if (!v73) {
        goto LABEL_40;
      }
    }
    if (qword_268486868 != -1) {
      swift_once();
    }
    uint64_t v93 = sub_22BE925E8();
    __swift_project_value_buffer(v93, (uint64_t)qword_268487B30);
    v94 = v6;
    v95 = sub_22BE925C8();
    os_log_type_t v96 = sub_22BE93148();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      id v189 = (id)swift_slowAlloc();
      v196[0] = (uint64_t)v189;
      v188 = v97;
      *(_DWORD *)v97 = 136315138;
      *(void *)&long long v187 = v97 + 4;
      id v98 = [(uint8_t *)v94 identifier];
      uint64_t v99 = sub_22BE92CD8();
      unint64_t v101 = v100;

      uint64_t v195 = sub_22BDD8478(v99, v101, v196);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      v102 = v188;
      _os_log_impl(&dword_22BDC5000, v95, v96, "Found FINode for FPv2 domain '%s'", v188, 0xCu);
      id v103 = v189;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v103, -1, -1);
      MEMORY[0x230F57540](v102, -1, -1);
    }
    else
    {
    }
    v104 = (objc_class *)type metadata accessor for DOCRootNode();
    v105 = (char *)objc_allocWithZone(v104);
    *(void *)&v105[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
    v194.receiver = v105;
    v194.super_class = v104;
    v106 = v94;
    unint64_t v23 = (char *)objc_msgSendSuper2(&v194, sel_initWithSubject_, v20);

    v107 = *(void **)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
    *(void *)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = v106;

    swift_unknownObjectRelease();
    return (id *)v23;
  }
LABEL_40:

  swift_unknownObjectRelease();
  if (v58 != 1000) {
    goto LABEL_43;
  }
LABEL_74:
  if (qword_268486868 != -1) {
    swift_once();
  }
  uint64_t v148 = sub_22BE925E8();
  __swift_project_value_buffer(v148, (uint64_t)qword_268487B30);
  id v118 = v56;
  v119 = sub_22BE925C8();
  os_log_type_t v120 = sub_22BE93148();
  if (os_log_type_enabled(v119, v120))
  {
    v121 = (uint8_t *)swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    v196[0] = v122;
    *(_DWORD *)v121 = 136315138;
    id v149 = objc_msgSend(v118, sel_identifier);
    uint64_t v150 = sub_22BE92CD8();
    unint64_t v152 = v151;

    uint64_t v195 = sub_22BDD8478(v150, v152, v196);
    sub_22BE93408();

    swift_bridgeObjectRelease();
    v127 = "Did not find FINode for FPv2 domain '%s'";
    goto LABEL_68;
  }
LABEL_78:

  return 0;
}

void *sub_22BDCC94C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00518);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22BDE0AEC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider __swiftcall DOCAnalyticsActionEvent.FileProvider.init(providerID:)(__C::FPProviderID providerID)
{
  uint64_t v3 = v1;
  sub_22BE92CD8();
  uint64_t v4 = (void *)sub_22BE92C98();
  char v5 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v6 = v4;
  if (DOCProviderDomainIDIsExternalDevice())
  {

    char v7 = 5;
    providerID._rawValue = v6;
LABEL_5:

    goto LABEL_9;
  }
  char v8 = DOCProviderDomainIDIsSharedServerDomainID();

  if (v8)
  {
    char v7 = 6;
    goto LABEL_5;
  }
  DOCAnalyticsActionEvent.FileProvider.init(sourceID:)((__C::DOCDocumentSourceIdentifier)v5);

  if (v10 == 9) {
    char v7 = 4;
  }
  else {
    char v7 = v10;
  }
LABEL_9:
  *uint64_t v3 = v7;
  return result;
}

void DOCAnalyticsActionEvent.SortOrder.init(configuration:)(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_sharedStore);
  id v5 = objc_msgSend(v4, sel_interfaceStateForConfiguration_, a1);

  if (!v5) {
    goto LABEL_17;
  }
  id v6 = objc_msgSend(v5, sel_sortingMode);

  if (!v6) {
    goto LABEL_17;
  }
  uint64_t v7 = sub_22BE92BF8();

  uint64_t v8 = sub_22BE92CD8();
  if (!*(void *)(v7 + 16) || (unint64_t v10 = sub_22BDD5734(v8, v9), (v11 & 1) == 0))
  {
    long long v24 = 0u;
    long long v25 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_22BDD854C(*(void *)(v7 + 56) + 32 * v10, (uint64_t)&v24);
  swift_bridgeObjectRelease();
  if (!*((void *)&v25 + 1)) {
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v12 = sub_22BE92CD8();
  if (*(void *)(v7 + 16) && (unint64_t v14 = sub_22BDD5734(v12, v13), (v15 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v7 + 56) + 32 * v14, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v25 + 1))
  {
LABEL_11:

    swift_bridgeObjectRelease();
    sub_22BDD473C((uint64_t)&v24);
LABEL_18:
    char v17 = 0;
LABEL_19:
    *a2 = v17;
    return;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char countAndFlagsBits = v23._countAndFlagsBits;
  DOCItemSortMode.init(rawValue:)(v23);
  if (v24 == 7)
  {
LABEL_17:

    goto LABEL_18;
  }
  LOBYTE(v23._countAndFlagsBits) = v24;
  DOCItemSortDescriptor.init(type:isReversed:)((unsigned __int8 *)&v23, countAndFlagsBits, (uint64_t)&v24);
  uint64_t v18 = *((void *)&v24 + 1);
  if (!(*((void *)&v24 + 1) >> 62))
  {
    uint64_t v19 = *(void *)((*((void *)&v24 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_24;
    }
LABEL_30:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  if (!sub_22BE937E8()) {
    goto LABEL_30;
  }
LABEL_24:
  if ((v18 & 0xC000000000000001) != 0)
  {
    id v20 = (id)MEMORY[0x230F56140](0, v18);
LABEL_27:
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    unsigned __int8 v22 = objc_msgSend(v21, sel_ascending);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v22)
    {
      char v17 = 1;
      goto LABEL_19;
    }
LABEL_31:
    char v17 = 2;
    goto LABEL_19;
  }
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v18 + 32);
    goto LABEL_27;
  }
  __break(1u);
}

void DOCAnalyticsActionEvent.SortMode.init(configuration:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_sharedStore);
  id v5 = objc_msgSend(v4, sel_interfaceStateForConfiguration_, a1);

  if (!v5) {
    goto LABEL_8;
  }
  id v6 = objc_msgSend(v5, sel_sortingMode);

  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = sub_22BE92BF8();

  uint64_t v8 = sub_22BE92CD8();
  if (!*(void *)(v7 + 16) || (unint64_t v10 = sub_22BDD5734(v8, v9), (v11 & 1) == 0))
  {
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_22BDD854C(*(void *)(v7 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_10:

    sub_22BDD473C((uint64_t)&v14);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:

LABEL_11:
    LOBYTE(v12) = 0;
    goto LABEL_12;
  }
  DOCItemSortMode.init(rawValue:)(v13);

  unint64_t v12 = 0x7060504030201uLL >> (8 * v14);
LABEL_12:
  *a2 = v12;
}

uint64_t sub_22BDCD008(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t v4 = *a3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_22BDCD060(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_22BE92CD8();
  sub_22BE939F8();
  swift_bridgeObjectRetain();
  sub_22BE92D48();
  uint64_t v7 = sub_22BE93A48();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_22BDE0BE0((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_22BE92CD8();
  uint64_t v12 = v11;
  if (v10 == sub_22BE92CD8() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_22BE92CD8();
        uint64_t v19 = v18;
        if (v17 == sub_22BE92CD8() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_22BE938C8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_22BDCD28C(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_22BE92B08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22BE92B58();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(void *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_eventsQueue];
  sub_22BDD20C4(a2, (uint64_t)v18);
  uint64_t v12 = swift_allocObject();
  sub_22BDE1DD4(v18, v12 + 16);
  *(void *)(v12 + 56) = a1;
  aBlock[4] = sub_22BDE2464;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  aBlock[3] = &block_descriptor_10;
  uint64_t v13 = _Block_copy(aBlock);
  long long v14 = a1;
  sub_22BE92B38();
  v16[2] = MEMORY[0x263F8EE78];
  sub_22BDE107C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void *sub_22BDCD640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v14 = a2;
  uint64_t v6 = sub_22BE931D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22BE92B58();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_22BE931B8();
  MEMORY[0x270FA5388](v11 - 8);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_22BE93648();
  swift_bridgeObjectRelease();
  unint64_t v18 = 0xD000000000000012;
  unint64_t v19 = 0x800000022BEA69F0;
  uint64_t v17 = &type metadata for DOCICloudRootNode.ThreadSafeRootNodes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFFB8);
  sub_22BE92CF8();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  sub_22BE931A8();
  sub_22BE92B38();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F130], v6);
  v4[2] = sub_22BE93228();
  v4[3] = a1;
  uint64_t v12 = v15;
  v4[4] = v14;
  v4[5] = v12;
  v4[6] = v16;
  return v4;
}

id sub_22BDCD8A4(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_22BDCD8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

id sub_22BDCD944(void *a1)
{
  id result = (id)DOCDeviceIsPad();
  if (result)
  {
    return objc_msgSend(a1, sel_setHorizontalSizeClass_, 2);
  }
  return result;
}

id _s26DocumentManagerExecutables18DOCColumnViewSpecsC23specWithBrowsingContext15traitCollection17columnBrowserSizeACSgSo07UITraitL0C_So6CGSizeVtFZ_0(void *a1, double a2, double a3)
{
  if ((objc_msgSend(a1, sel_enclosedInUIPDocumentLanding) & 1) != 0
    || !DOCUsePadIdiomForTraits()
    || objc_msgSend(a1, sel_horizontalSizeClass) != (id)2)
  {
    return 0;
  }
  id v6 = a1;
  sub_22BDFCAC8(v6);
  uint64_t v8 = v7;
  uint64_t v9 = (objc_class *)type metadata accessor for DOCColumnViewSpecs();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = (double *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize];
  *uint64_t v11 = a2;
  v11[1] = a3;
  *(void *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth] = v8;
  v14.receiver = v10;
  v14.super_class = v9;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

char *sub_22BDCDA6C()
{
  uint64_t v15 = sub_22BE931D8();
  uint64_t v1 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE931B8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_22BE92B58();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_highlightCenter;
  id v7 = objc_allocWithZone(MEMORY[0x263F17730]);
  uint64_t v8 = v0;
  *(void *)&v0[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_collaborationIdentifierToHighlightCache;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF8E0]), (SEL)&selRef_subviews);
  uint64_t v14 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_fetchQueue;
  sub_22BDD27D0();
  sub_22BE92B48();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_22BDE107C((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v15);
  *(void *)&v8[v14] = sub_22BE93228();
  *(void *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_coalescingTimer] = 0;
  *(void *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_pendingIdentifiersToNotify] = MEMORY[0x263F8EE88];

  uint64_t v10 = (objc_class *)type metadata accessor for DOCCollaborationHighlightManager();
  v16.receiver = v8;
  v16.super_class = v10;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_highlightCenter], sel_setDelegate_, v11);
  return v11;
}

id UIViewController.doc_shouldAllowAnimations.getter()
{
  if (!objc_msgSend(v0, sel_doc_hasAppearedOrIsAppearing)) {
    goto LABEL_8;
  }
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(result, sel_window);

    if (v3)
    {

      if (objc_msgSend(v0, sel_doc_isAppearing))
      {
        id v4 = objc_msgSend(v0, sel_navigationController);
        if (v4)
        {
          uint64_t v5 = v4;
          id v6 = objc_msgSend(v4, sel_topViewController);
          if (v6)
          {
            id v7 = v6;
            sub_22BDD9D50(0, &qword_26AF003C8);
            id v8 = v0;
            id v9 = v7;
            char v10 = sub_22BE93328();

            char v11 = v10 ^ 1;
            return (id)(v11 & 1);
          }
        }
      }
      char v11 = 1;
      return (id)(v11 & 1);
    }
LABEL_8:
    char v11 = 0;
    return (id)(v11 & 1);
  }
  __break(1u);
  return result;
}

id sub_22BDCDEB4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = sub_22BE931D8();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE931B8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_22BE92B58();
  MEMORY[0x270FA5388](v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_bundleVersionCache] = MEMORY[0x263F8EE80];
  uint64_t v13 = OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_eventsQueue;
  v12[1] = sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  id v6 = v0;
  sub_22BE92B28();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_22BDE107C((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v14);
  *(void *)&v0[v13] = sub_22BE93228();

  v16.receiver = v6;
  v16.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v16, sel_init);
  id v8 = self;
  id v9 = v7;
  id v10 = objc_msgSend(v8, sel_defaultCenter);
  objc_msgSend(v10, sel_addObserver_selector_name_object_, v9, sel_tagsDidChangeWithNotification_, @"DOCTagEditorTagsDidChangeNotification", 0);

  return v9;
}

uint64_t type metadata accessor for DOCUnicode()
{
  return self;
}

uint64_t sub_22BDCE1E8()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

void sub_22BDCE264(uint64_t a1)
{
  sub_22BDCE26C(a1, *(char **)(v1 + 16));
}

void sub_22BDCE26C(uint64_t a1, char *a2)
{
  uint64_t v4 = OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain;
  if (objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain], sel_isDataSeparatedDomain))
  {
    uint64_t v5 = *(void **)(a1 + 16);
    id v6 = a2;

    *(void *)(a1 + 16) = a2;
    id v7 = objc_msgSend(*(id *)&a2[v4], sel_identifier);

    *(void *)(a1 + 24) = v7;
  }
  else
  {
    id v8 = *(void **)a1;
    id v9 = a2;

    *(void *)a1 = a2;
    id v10 = objc_msgSend(*(id *)&a2[v4], sel_identifier);

    *(void *)(a1 + 8) = v10;
  }
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional __swiftcall DOCAnalyticsActionEvent.FileProvider.init(sourceID:)(__C::DOCDocumentSourceIdentifier sourceID)
{
  id v3 = v1;
  uint64_t v4 = sub_22BE92CD8();
  uint64_t v6 = v5;
  if (v4 == sub_22BE92CD8() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v9 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_14:

    char v20 = 7;
    goto LABEL_17;
  }
  uint64_t v10 = sub_22BE92CD8();
  uint64_t v12 = v11;
  if (v10 == sub_22BE92CD8() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v15 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_16:

    char v20 = 2;
    goto LABEL_17;
  }
  sub_22BE92CD8();
  NSString v16 = sourceID._rawValue;
  uint64_t v17 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  int IsICloud = DOCDocumentSourceIdentifierIsICloud(v17);

  if (IsICloud)
  {

    char v20 = 3;
  }
  else
  {
    uint64_t v21 = sub_22BE92CD8();
    uint64_t v23 = v22;
    if (v21 == sub_22BE92CD8() && v23 == v24)
    {
      id v25 = v16;

      result.value = swift_bridgeObjectRelease_n();
      char v20 = 8;
    }
    else
    {
      char v26 = sub_22BE938C8();
      id v27 = v16;

      swift_bridgeObjectRelease();
      result.value = swift_bridgeObjectRelease();
      if (v26) {
        char v20 = 8;
      }
      else {
        char v20 = 9;
      }
    }
  }
LABEL_17:
  *id v3 = v20;
  return result;
}

void DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(char *a1@<X0>, void *a2@<X1>, char *a3@<X2>, char *a4@<X5>, char *a5@<X6>, uint64_t a6@<X8>)
{
  swift_bridgeObjectRelease();
  char v12 = *a1;
  char v29 = *a4;
  char v30 = *a3;
  char v13 = *a5;
  id v14 = objc_msgSend(self, sel_mainBundle);
  id v15 = objc_msgSend(v14, sel_bundleIdentifier);

  if (v15)
  {
    uint64_t v16 = sub_22BE92CD8();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  id v19 = a2;
  DOCAnalyticsActionEvent.Client.init(configuration:bundleIdentifier:)(v19, v16, v18, &v33);
  char v20 = v33;
  id v21 = v19;
  DOCAnalyticsActionEvent.SortMode.init(configuration:)(v21, &v32);
  char v22 = v32;
  id v23 = v21;
  DOCAnalyticsActionEvent.SortOrder.init(configuration:)(v23, &v31);
  char v24 = v31;
  id v25 = objc_msgSend(v23, sel_hostIdentifier);
  uint64_t v26 = sub_22BE92CD8();
  uint64_t v28 = v27;

  *(void *)a6 = 0xD000000000000032;
  *(void *)(a6 + 8) = 0x800000022BE9FB50;
  *(void *)(a6 + 16) = v26;
  *(void *)(a6 + 24) = v28;
  *(unsigned char *)(a6 + 32) = v12;
  *(unsigned char *)(a6 + 33) = v20;
  *(unsigned char *)(a6 + 34) = v30;
  *(unsigned char *)(a6 + 35) = v29;
  *(unsigned char *)(a6 + 36) = v13;
  *(unsigned char *)(a6 + 37) = v22;
  *(unsigned char *)(a6 + 38) = v24;
}

uint64_t DOCICloudRootNode.displayName.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (v1) {
    id v2 = objc_msgSend(v1, sel_displayName);
  }
  else {
    id v2 = (id)DOCLocalizedDisplayName();
  }
  id v3 = v2;
  uint64_t v4 = sub_22BE92CD8();

  return v4;
}

BOOL sub_22BDCE7B8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_enclosingTabSwitcherStyle);
  id v3 = objc_msgSend(v1, sel_horizontalSizeClass);
  BOOL IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  if (v2 != (id)1)
  {

    return 0;
  }
  BOOL v5 = IsReduceTransparencyEnabled;
  unsigned __int8 v6 = objc_msgSend(v1, sel_enclosedInUIPDocumentLanding);

  if ((v6 & 1) == 0) {
    return 0;
  }
  return v3 == (id)1 && !v5;
}

uint64_t Array<A>.fpfs_syncFetchAllFPItems()(uint64_t a1, uint64_t a2)
{
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  uint64_t v8 = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = &v8;
  *(void *)(v5 + 24) = v4;
  unsigned __int8 v6 = v4;
  Array<A>.fpfs_fetchAllFPItems(completion:)((void (*)(uint64_t))sub_22BDDF380, v5, a1, a2);
  swift_release();
  sub_22BE932B8();

  swift_beginAccess();
  return v8;
}

id sub_22BDCE908(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [*(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer) *a3];

  return v3;
}

uint64_t sub_22BDCE948@<X0>(unint64_t *a1@<X2>, char **a2@<X8>)
{
  sub_22BDD9D50(0, a1);
  if (sub_22BE92D58() >= 1)
  {
    uint64_t v24 = 46;
    unint64_t v25 = 0xE100000000000000;
    sub_22BE92D88();
  }
  sub_22BE93648();
  uint64_t v3 = sub_22BE93A58();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t v24 = v3;
  unint64_t v25 = v5;
  sub_22BE92D88();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  uint64_t v7 = v3;
  unint64_t v6 = v5;
  if (qword_26AF00180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (sub_22BDE142C(v7, v5, off_26AF00178))
  {
    if (qword_2684867F0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_22BE925E8();
    __swift_project_value_buffer(v8, (uint64_t)qword_2684879C8);
    swift_bridgeObjectRetain();
    char v9 = sub_22BE925C8();
    os_log_type_t v10 = sub_22BE93168();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v23[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_22BDD8478(v7, v5, v23);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v9, v10, "ERROR: Associated storage key (%s) already exists, choose different uniqueSuffix!", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v12, -1, -1);
      MEMORY[0x230F57540](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v21 = objc_allocWithZone(MEMORY[0x263F087E8]);
    char v22 = (void *)sub_22BE92C98();
    objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v22, -1, 0);

    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    char v13 = off_26AF00178;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    off_26AF00178 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v13 = sub_22BDCC94C(0, v13[2] + 1, 1, v13);
      off_26AF00178 = v13;
    }
    unint64_t v16 = v13[2];
    unint64_t v15 = v13[3];
    if (v16 >= v15 >> 1)
    {
      char v13 = sub_22BDCC94C((void *)(v15 > 1), v16 + 1, 1, v13);
      off_26AF00178 = v13;
    }
    v13[2] = v16 + 1;
    uint64_t v17 = &v13[2 * v16];
    v17[4] = v7;
    v17[5] = v6;
    swift_endAccess();
    uint64_t v18 = sub_22BE92D18();
    swift_bridgeObjectRelease();
    id v19 = strdup((const char *)(v18 + 32));
    uint64_t result = swift_release();
    if (v19) {
      *a2 = v19;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22BDCED4C@<X0>(char **a1@<X8>)
{
  if (sub_22BE92D58() >= 1)
  {
    uint64_t v23 = 46;
    unint64_t v24 = 0xE100000000000000;
    sub_22BE92D88();
  }
  sub_22BE93648();
  uint64_t v2 = sub_22BE93A58();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v23 = v2;
  unint64_t v24 = v4;
  sub_22BE92D88();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  unint64_t v5 = v4;
  if (qword_26AF00180 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (sub_22BDE142C(v6, v4, off_26AF00178))
  {
    if (qword_2684867F0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22BE925E8();
    __swift_project_value_buffer(v7, (uint64_t)qword_2684879C8);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22BE925C8();
    os_log_type_t v9 = sub_22BE93168();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v22[0] = v11;
      *(_DWORD *)os_log_type_t v10 = 136315138;
      swift_bridgeObjectRetain();
      sub_22BDD8478(v6, v4, v22);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v8, v9, "ERROR: Associated storage key (%s) already exists, choose different uniqueSuffix!", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v11, -1, -1);
      MEMORY[0x230F57540](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v20 = objc_allocWithZone(MEMORY[0x263F087E8]);
    id v21 = (void *)sub_22BE92C98();
    objc_msgSend(v20, sel_initWithDomain_code_userInfo_, v21, -1, 0);

    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    uint64_t v12 = off_26AF00178;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    off_26AF00178 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v12 = sub_22BDCC94C(0, v12[2] + 1, 1, v12);
      off_26AF00178 = v12;
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      uint64_t v12 = sub_22BDCC94C((void *)(v14 > 1), v15 + 1, 1, v12);
      off_26AF00178 = v12;
    }
    void v12[2] = v15 + 1;
    unint64_t v16 = &v12[2 * v15];
    v16[4] = v6;
    v16[5] = v5;
    swift_endAccess();
    uint64_t v17 = sub_22BE92D18();
    swift_bridgeObjectRelease();
    uint64_t v18 = strdup((const char *)(v17 + 32));
    uint64_t result = swift_release();
    if (v18) {
      *a1 = v18;
    }
    else {
      __break(1u);
    }
  }
  return result;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Source __swiftcall DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(__C::DOCDocumentSourceIdentifier sourceIdentifier)
{
  unint64_t v3 = v1;
  uint64_t v4 = sub_22BE92CD8();
  uint64_t v6 = v5;
  if (v4 == sub_22BE92CD8() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v9 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_18:

    char v20 = 1;
    goto LABEL_19;
  }
  uint64_t v10 = sub_22BE92CD8();
  uint64_t v12 = v11;
  if (v10 == sub_22BE92CD8() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v15 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_21:

    char v20 = 2;
    goto LABEL_19;
  }
  uint64_t v16 = sub_22BE92CD8();
  uint64_t v18 = v17;
  char v20 = 3;
  if (v16 != sub_22BE92CD8() || v18 != v19)
  {
    if (sub_22BE938C8()) {
      char v20 = 3;
    }
    else {
      char v20 = 0;
    }
  }
  NSString v21 = sourceIdentifier._rawValue;

  swift_bridgeObjectRelease();
  DocumentManagerExecutables::DOCAnalyticsActionEvent::Source result = swift_bridgeObjectRelease();
LABEL_19:
  *unint64_t v3 = v20;
  return result;
}

uint64_t sub_22BDCF32C()
{
  return sub_22BDCF34C(*(void (**)(char *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_22BDCF34C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v9 - v6;
  sub_22BDCF44C((uint64_t)&v9 - v6);
  a1(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_22BDCF44C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_22BDCF4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

double CGFloat.init(_:roundedBy:inScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_22BE93888();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = a2 * a3;
  double v18 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
LABEL_11:
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    return v12 / a3;
  }
  if (v11 == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F8E200])
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    double v14 = ceil(v10);
    double v15 = floor(v10);
    if (v10 < 0.0) {
      double v12 = v15;
    }
    else {
      double v12 = v14;
    }
  }
  else
  {
    sub_22BE93018();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v16(a1, v6);
    v16((uint64_t)v9, v6);
    double v12 = v18;
  }
  return v12 / a3;
}

id sub_22BDCF788(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_22BE92B88();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (void *)((char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_eventsQueue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_22BE92BB8();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    double v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_bundleVersionCache);
    swift_beginAccess();
    uint64_t v13 = *v12;
    if (*(void *)(*v12 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_22BDD5734(a1, a2);
      if (v15)
      {
        uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 16 * v14 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v16)
        {
          swift_endAccess();
          goto LABEL_19;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_endAccess();
    id v17 = objc_msgSend(self, sel_mainBundle);
    id v18 = objc_msgSend(v17, sel_infoDictionary);

    if (v18)
    {
      uint64_t v19 = sub_22BE92BF8();

      if (*(void *)(v19 + 16) && (unint64_t v20 = sub_22BDD5734(0x656C646E75424643, 0xEF6E6F6973726556), (v21 & 1) != 0))
      {
        sub_22BDD854C(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v27);
      }
      else
      {
        long long v27 = 0u;
        long long v28 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v28 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v23 = v26[0];
          uint64_t v22 = v26[1];
          goto LABEL_18;
        }
LABEL_17:
        uint64_t v23 = 0;
        uint64_t v22 = 0;
LABEL_18:
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26[0] = *v12;
        uint64_t *v12 = 0x8000000000000000;
        sub_22BDD4DC8(v23, v22, a1, a2, isUniquelyReferenced_nonNull_native);
        uint64_t *v12 = v26[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        if (!v22) {
          return objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
        }
LABEL_19:
        uint64_t v25 = sub_22BE92C98();
        swift_bridgeObjectRelease();
        return (id)v25;
      }
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
    }
    sub_22BDD473C((uint64_t)&v27);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_22BDCFAF8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22BE92568();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_22BDCFB90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1702125924;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1702125924;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 1701667182;
      break;
    case 2:
      uint64_t v5 = 1936154996;
      break;
    case 3:
      uint64_t v5 = 1702521203;
      break;
    case 4:
      uint64_t v5 = 1684957547;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7942646572616873;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 1701667182) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 1936154996) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 1702521203) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 1684957547;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7942646572616873) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t UIEdgeInsets.hash(into:)()
{
  return sub_22BE93A38();
}

id sub_22BDCFD78(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  if (*(void *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer)) {
    id v4 = [*(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer) *a3];
  }
  else {
    id v4 = [*(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain) *a4];
  }
  id v5 = v4;

  return v5;
}

void sub_22BDCFDD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (v2)
  {
    unint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer);
    if (v3)
    {
      uint64_t v31 = MEMORY[0x263F8EE78];
      id v4 = v2;
      id v5 = v3;
      MEMORY[0x230F55950]();
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_22BE92EF8();
      }
      sub_22BE92F48();
      sub_22BE92ED8();
      id v6 = v5;
      MEMORY[0x230F55950]();
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_22BE92EF8();
      }
      sub_22BE92F48();
      sub_22BE92ED8();
      id v7 = objc_allocWithZone(MEMORY[0x263F397A0]);
      sub_22BDD9D50(0, (unint64_t *)&unk_26AF00470);
      uint64_t v8 = (void *)sub_22BE92EA8();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(v7, sel_initWithFINodes_, v8);

      id v10 = (id *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_deferredCreationNode);
      swift_beginAccess();
      id v11 = *v10;
      *id v10 = v9;

      if (qword_268486868 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_22BE925E8();
      __swift_project_value_buffer(v12, (uint64_t)qword_268487B30);
      uint64_t v13 = sub_22BE925C8();
      os_log_type_t v14 = sub_22BE93178();
      if (os_log_type_enabled(v13, v14))
      {
        char v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v15 = 0;
        _os_log_impl(&dword_22BDC5000, v13, v14, "DOCICloudRootNode: compound node created", v15, 2u);
        MEMORY[0x230F57540](v15, -1, -1);
      }

      uint64_t v16 = (void (**)(id))(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_observerBlock);
      swift_beginAccess();
      id v17 = *v16;
      if (*v16)
      {
        sub_22BE91C58();
        id v18 = sub_22BE925C8();
        os_log_type_t v19 = sub_22BE93178();
        if (os_log_type_enabled(v18, v19))
        {
          unint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v20 = 0;
          _os_log_impl(&dword_22BDC5000, v18, v19, "DOCICloudRootNode: calling observer block to start observing", v20, 2u);
          MEMORY[0x230F57540](v20, -1, -1);
        }

        id v21 = *v10;
        id v22 = *v10;
        v17(v21);

        sub_22BDE0E58((uint64_t)v17);
      }
      else
      {
      }
      return;
    }
  }
  else
  {
    if (qword_268486868 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_22BE925E8();
    __swift_project_value_buffer(v23, (uint64_t)qword_268487B30);
    unint64_t v24 = sub_22BE925C8();
    os_log_type_t v25 = sub_22BE93168();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_22BDC5000, v24, v25, "iCloudContainer is nil. This should never happen at this stage.", v26, 2u);
      MEMORY[0x230F57540](v26, -1, -1);
    }
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer))
  {
    if (qword_268486868 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_22BE925E8();
    __swift_project_value_buffer(v27, (uint64_t)qword_268487B30);
    long long v28 = sub_22BE925C8();
    os_log_type_t v29 = sub_22BE93168();
    if (os_log_type_enabled(v28, v29))
    {
      char v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v30 = 0;
      _os_log_impl(&dword_22BDC5000, v28, v29, "AppLibrariesContainer is nil. This should never happen at this stage.", v30, 2u);
      MEMORY[0x230F57540](v30, -1, -1);
    }
  }
  sub_22BE8E198();
  swift_allocError();
  swift_willThrow();
}

uint64_t Dictionary<>.doc_firstKey(forValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v23 = a7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_22BE933B8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v22 - v16;
  uint64_t v36 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v35 = a1;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  long long v28 = sub_22BDD44F0;
  os_log_type_t v29 = &v30;
  sub_22BE92C18();
  swift_getWitnessTable();
  sub_22BE92E48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v17, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(v23, 1, 1, a3);
  }
  else
  {
    os_log_type_t v19 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v20 = *(void *)(a3 - 8);
    uint64_t v21 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v23, v17, a3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, a3);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(a4 - 8) + 8))(v19, a4);
  }
}

uint64_t sub_22BDD05A4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t NSNotification.SubscriptionsController.init(observee:)()
{
  uint64_t v0 = sub_22BDD0630();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_22BDD0630()
{
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 24) = sub_22BDD0688(MEMORY[0x263F8EE78]);
  swift_unknownObjectWeakAssign();
  return v0;
}

unint64_t sub_22BDD0688(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004D8);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  id v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_22BDD5734(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    *id v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_22BDD07A4()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40) + *(void *)(**(void **)(v0 + 40) + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_22BDD0834(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE92568();
  __swift_allocate_value_buffer(v6, a2);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  sub_22BE92578();
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.displayableModes.getter(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_22BDD0A34(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (char *)(a1 + 32);
    do
    {
      char v6 = *v4++;
      char v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_22BDD0A34(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(unsigned char *)(result + v8 + 32) = 0x5040302010000uLL >> (8 * v5);
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_22BDD0A34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDD0A5C(a1, a2, a3, *v3, &qword_26AF00500);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22BDD0A5C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BDD0BA8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = sub_22BE91C58();
  v1(v2);

  return swift_release();
}

void sub_22BDD0BEC()
{
  sub_22BDD0BF4(v0);
}

void sub_22BDD0BF4(uint64_t a1)
{
  uint64_t v2 = sub_22BE92B08();
  uint64_t v3 = *(void *)(v2 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  char v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE92B58();
  uint64_t v7 = *(void *)(v6 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v33[14] = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE92AD8();
  v33[10] = *(void *)(v9 - 8);
  v33[11] = v9;
  ((void (*)(void))MEMORY[0x270FA5388])();
  v33[9] = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_22BE92B78();
  v33[13] = *(void *)(v34 - 8);
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v33[8] = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v33[12] = (char *)v33 - v13;
  uint64_t v14 = sub_22BE925B8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x230F57630](a1 + 16);
  if (v18)
  {
    os_log_type_t v19 = (char *)v18;
    v33[5] = v3;
    if (qword_268486868 != -1) {
      swift_once();
    }
    v33[2] = v7;
    v33[3] = v5;
    uint64_t v20 = sub_22BE925E8();
    v33[7] = __swift_project_value_buffer(v20, (uint64_t)qword_268487B30);
    uint64_t v21 = sub_22BE925C8();
    os_log_type_t v22 = sub_22BE93178();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_22BDC5000, v21, v22, "DOCICloudRootNode: building containers...", v23, 2u);
      MEMORY[0x230F57540](v23, -1, -1);
    }
    v33[4] = v6;
    v33[6] = v2;

    sub_22BE93298();
    if (qword_26AF00228 != -1) {
      swift_once();
    }
    sub_22BE925A8();
    sub_22BE92598();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
    v24(v17, v14);
    uint64_t v25 = self;
    id v26 = objc_msgSend(v25, sel_iCloudDefaultContainer);
    uint64_t v27 = *(void **)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer];
    *(void *)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer] = v26;

    id v28 = objc_msgSend(v25, sel_iCloudLibrariesContainer);
    os_log_type_t v29 = *(void **)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer];
    *(void *)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer] = v28;

    sub_22BE93288();
    sub_22BE925A8();
    sub_22BE92598();
    v24(v17, v14);
    sub_22BDCFDD4();
    char v30 = sub_22BE925C8();
    os_log_type_t v31 = sub_22BE93178();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_22BDC5000, v30, v31, "DOCICloudRootNode: finished building containers...", v32, 2u);
      MEMORY[0x230F57540](v32, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t static NSUserDefaults.docUserDefaults.getter()
{
  if (qword_26AF003B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_26AEFFAE0;
  id v1 = (id)qword_26AEFFAE0;
  return v0;
}

uint64_t UTType.isFolderUTI.getter()
{
  sub_22BE923A8();
  char v0 = sub_22BDD15B0();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_22BDD15B0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_22BE92568();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  id v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  if (qword_26AEFFE18 != -1) {
    swift_once();
  }
  id v12 = (id)qword_26AEFFE10;
  uint64_t v13 = (void *)sub_22BE92C98();
  id v14 = objc_msgSend(v12, sel_objectForKey_, v13);

  if (v14)
  {
    unsigned __int8 v15 = objc_msgSend(v14, sel_BOOLValue);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_22BE92578();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_22BE035C8((uint64_t)v2, &qword_26AEFFB28);
      unsigned __int8 v15 = 0;
      unint64_t v16 = 0x26AEFF000;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v2, v3);
      sub_22BE924C8();
      char v17 = sub_22BE92528();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
      v18(v9, v3);
      os_log_type_t v19 = v28;
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v28, v11, v3);
      if (v17)
      {
        sub_22BE92518();
        char v20 = sub_22BE92528();
        v18(v9, v3);
        v18(v19, v3);
        v18(v11, v3);
        unsigned __int8 v15 = v20 ^ 1;
      }
      else
      {
        v18(v19, v3);
        v18(v11, v3);
        unsigned __int8 v15 = 0;
      }
      unint64_t v16 = 0x26AEFF000uLL;
    }
    uint64_t v21 = *(void **)(v16 + 3600);
    id v22 = objc_allocWithZone(NSNumber);
    id v23 = v21;
    id v24 = objc_msgSend(v22, sel_initWithBool_, v15 & 1);
    uint64_t v25 = (void *)sub_22BE92C98();
    objc_msgSend(v23, sel_setObject_forKey_, v24, v25);
  }
  return v15 & 1;
}

uint64_t sub_22BDD1974(uint64_t a1, void *a2)
{
  v24[3] = &type metadata for DOCAnalyticsActionEvent;
  v24[4] = &off_26DF42E70;
  uint64_t v4 = swift_allocObject();
  v24[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 47) = *(void *)(a1 + 31);
  sub_22BDCA53C(a1);
  if (qword_268486850 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22BE925E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_268487AE8);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)aBlock);
  uint64_t v7 = sub_22BE925C8();
  os_log_type_t v8 = sub_22BE93148();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_22BDD8478(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_22BE93408();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22BDD8478(v12, v13, (uint64_t *)v23);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_22BDC5000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v10, -1, -1);
    MEMORY[0x230F57540](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  id v14 = objc_msgSend(self, sel_shared);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)v23);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_22BDE1DD4(v23, v15 + 24);
  uint64_t v21 = sub_22BDE247C;
  uint64_t v22 = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  char v20 = &block_descriptor_50;
  unint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

void sub_22BDD1CB4(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (v5)
  {
    id v6 = sub_22BDCF788(v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  sub_22BDD20C4((uint64_t)a1, (uint64_t)&aBlock);
  uint64_t v7 = swift_allocObject();
  sub_22BDE1DD4(&aBlock, v7 + 16);
  *(void *)(v7 + 56) = v6;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  id v11 = v6;
  v10(v8, v9);
  uint64_t v12 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  char v30 = sub_22BDE2470;
  uint64_t v31 = v7;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  id v28 = sub_22BDCA228;
  os_log_type_t v29 = &block_descriptor_7;
  unint64_t v13 = _Block_copy(&aBlock);
  sub_22BE91C58();
  swift_release();
  int v14 = AnalyticsSendEventLazy();
  _Block_release(v13);

  if (qword_268486850 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_22BE925E8();
  __swift_project_value_buffer(v15, (uint64_t)qword_268487AE8);
  sub_22BDD20C4((uint64_t)a1, (uint64_t)&aBlock);
  unint64_t v16 = sub_22BE925C8();
  os_log_type_t v17 = sub_22BE93148();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = v25;
    *(_DWORD *)uint64_t v18 = 136315650;
    sub_22BDD8478(0x6E657645646E6573, 0xED0000293A5F2874, &v26);
    sub_22BE93408();
    *(_WORD *)(v18 + 12) = 2080;
    os_log_type_t v19 = v29;
    char v20 = v30;
    __swift_project_boxed_opaque_existential_0(&aBlock, (uint64_t)v29);
    uint64_t v21 = (*((uint64_t (**)(void *, uint64_t (*)()))v20 + 1))(v19, v20);
    sub_22BDD8478(v21, v22, &v26);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    if (v14) {
      uint64_t v23 = 0x6564656563637573;
    }
    else {
      uint64_t v23 = 0x64656C696166;
    }
    if (v14) {
      unint64_t v24 = 0xE900000000000064;
    }
    else {
      unint64_t v24 = 0xE600000000000000;
    }
    sub_22BDD8478(v23, v24, &v26);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v16, v17, "%s: Tracking event %s %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v25, -1, -1);
    MEMORY[0x230F57540](v18, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();

    __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  }
}

uint64_t sub_22BDD20C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCAnalyticsActionEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  sub_22BE91C58();
  return v3;
}

void UITraitCollection.doc_preferredLayoutSizeCategory.getter(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_preferredContentSizeCategory);
  if (sub_22BE932D8())
  {
    char v4 = sub_22BE932E8();

    if (v4) {
      char v5 = 2;
    }
    else {
      char v5 = 1;
    }
  }
  else
  {

    char v5 = 0;
  }
  *a1 = v5;
}

uint64_t static UTType.doc_contentTypes(forIdentifiers:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_22BE92EA8();
  id v2 = objc_msgSend(v0, sel_doc_contentTypesForIdentifiers_, v1);

  sub_22BE92568();
  uint64_t v3 = sub_22BE92EB8();

  return v3;
}

uint64_t sub_22BDD2268(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_22BE925E8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  swift_bridgeObjectRetain();
  return sub_22BE925D8();
}

id DOCTypeToFocusController.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_typeToFocusInputBuffer];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_typeToFocusTimeout] = 0;
  uint64_t v2 = OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_typeToFocusInputView;
  id v3 = objc_allocWithZone(MEMORY[0x263F82E00]);
  char v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_init);
  v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_eventHadModifierKey] = 0;

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for DOCTypeToFocusController();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for DOCTypeToFocusController()
{
  return self;
}

uint64_t sub_22BDD2444()
{
  uint64_t v0 = sub_22BE92CD8();
  uint64_t v2 = v1;
  if (v0 == sub_22BE92CD8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_22BE938C8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_22BDD24D0()
{
  id v1 = *(id *)(v0 + 16);
  sub_22BE93208();
}

char *DOCThreadSafeState.init(_:)(uint64_t a1)
{
  v11[0] = a1;
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = sub_22BE931D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  objc_super v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22BE92B58();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_22BE931B8();
  MEMORY[0x270FA5388](v8 - 8);
  sub_22BDD27D0();
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_22BE93648();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000012;
  unint64_t v13 = 0x800000022BE9BD20;
  uint64_t v9 = *(void *)(v2 + 80);
  v11[1] = v9;
  swift_getMetatypeMetadata();
  sub_22BE92CF8();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  sub_22BE931A8();
  sub_22BE92B38();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v3);
  *((void *)v1 + 2) = sub_22BE93228();
  (*(void (**)(char *, void, uint64_t))(*(void *)(v9 - 8) + 32))(&v1[*(void *)(*(void *)v1 + 96)], v11[0], v9);
  return v1;
}

unint64_t sub_22BDD27D0()
{
  unint64_t result = qword_26AF003E0;
  if (!qword_26AF003E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AF003E0);
  }
  return result;
}

Swift::Bool __swiftcall UTType.doc_conformsToAny(inContentTypes:)(Swift::OpaquePointer inContentTypes)
{
  id v1 = (void *)sub_22BE92418();
  sub_22BE92568();
  uint64_t v2 = (void *)sub_22BE92EA8();
  unsigned __int8 v3 = objc_msgSend(v1, sel_doc_conformsToAnyInContentTypes_, v2);

  return v3;
}

uint64_t sub_22BDD287C()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22BE937E8();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = MEMORY[0x230F56140](i, v1);
      }
      else
      {
        uint64_t v5 = *(void *)(v1 + 8 * i + 32);
        sub_22BE91C58();
      }
      if (*(unsigned char *)(v5 + 32) == 1)
      {
        sub_22BE936B8();
        sub_22BE936F8();
        sub_22BE93708();
        sub_22BE936C8();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v8;
    if (v8 < 0) {
      goto LABEL_19;
    }
LABEL_16:
    if ((v6 & 0x4000000000000000) == 0)
    {
      uint64_t v7 = *(void *)(v6 + 16);
LABEL_18:
      swift_release();
      return v7 != 0;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22BE937E8();
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_22BDD2A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_22BE92B08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = *(id *)(v3 + 16);
  sub_22BE92AF8();
  uint64_t v14 = a3;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = v3;
  sub_22BE931F8();

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static UTType.doc_identifiers(forContentTypes:)()
{
  uint64_t v0 = self;
  sub_22BE92568();
  unint64_t v1 = (void *)sub_22BE92EA8();
  id v2 = objc_msgSend(v0, sel_doc_identifiersForContentTypes_, v1);

  uint64_t v3 = sub_22BE92EB8();
  return v3;
}

uint64_t sub_22BDD2BCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22BDD2C4C(*(void (**)(uint64_t *__return_ptr, id *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_22BDD2C00@<X0>(uint64_t *a1@<X8>)
{
  return sub_22BDD2C20(*(void (**)(uint64_t *__return_ptr, id *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_22BDD2C20@<X0>(void (*a1)(uint64_t *__return_ptr, id *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_22BDD2C4C(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_22BDD2C4C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 32);
  uint64_t v7 = *(void **)(a3 + 40);
  uint64_t v6 = *(void **)(a3 + 48);
  v13[0] = *(id *)(a3 + 24);
  v13[1] = v5;
  v13[2] = v7;
  v13[3] = v6;
  id v8 = v6;
  id v9 = v13[0];
  id v10 = v5;
  id v11 = v7;
  a1(&v14, v13);

  return v14;
}

void sub_22BDD2D08(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_22BDD2D10(*(id *)(v2 + 16), a1, a2);
}

void sub_22BDD2D10(id a1@<X1>, uint64_t a2@<X0>, void *a3@<X8>)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  id v8 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  if (objc_msgSend(a1, sel_isDataSeparatedDomain)) {
    BOOL v9 = v8 == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9)
  {
LABEL_14:
    if ((objc_msgSend(a1, sel_isDataSeparatedDomain, v35) & 1) == 0 && v6)
    {
      id v19 = v5;
      id v20 = v6;
      id v21 = objc_msgSend(a1, sel_identifier);
      if (v5)
      {
        uint64_t v22 = sub_22BE92CD8();
        uint64_t v24 = v23;
        if (v22 == sub_22BE92CD8() && v24 == v25)
        {

          swift_bridgeObjectRelease_n();
LABEL_27:
          if (qword_268486868 != -1) {
            swift_once();
          }
          uint64_t v31 = sub_22BE925E8();
          __swift_project_value_buffer(v31, (uint64_t)qword_268487B30);
          uint64_t v27 = sub_22BE925C8();
          os_log_type_t v32 = sub_22BE93138();
          if (!os_log_type_enabled(v27, v32))
          {
            id v8 = v6;
            goto LABEL_39;
          }
          os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v29 = 0;
          _os_log_impl(&dword_22BDC5000, v27, v32, "DOCICloudRootNode: returning existing node for personal iCloud", v29, 2u);
          id v8 = v6;
          goto LABEL_36;
        }
        char v30 = sub_22BE938C8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_27;
        }
      }
      else
      {

        id v20 = v21;
      }
    }
    if (qword_268486868 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_22BE925E8();
    __swift_project_value_buffer(v33, (uint64_t)qword_268487B30);
    uint64_t v27 = sub_22BE925C8();
    os_log_type_t v34 = sub_22BE93138();
    if (!os_log_type_enabled(v27, v34))
    {
      id v8 = 0;
      goto LABEL_39;
    }
    os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v29 = 0;
    _os_log_impl(&dword_22BDC5000, v27, v34, "DOCICloudRootNode: the requested node hasn't been created yet", v29, 2u);
    id v8 = 0;
    goto LABEL_36;
  }
  uint64_t v36 = v6;
  id v10 = v7;
  id v11 = v8;
  id v12 = objc_msgSend(a1, sel_identifier);
  if (!v7)
  {

    id v11 = v12;
LABEL_13:

    uint64_t v6 = v36;
    goto LABEL_14;
  }
  uint64_t v35 = a3;
  uint64_t v13 = sub_22BE92CD8();
  uint64_t v15 = v14;
  if (v13 == sub_22BE92CD8() && v15 == v16)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v18 = sub_22BE938C8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  if (qword_268486868 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_22BE925E8();
  __swift_project_value_buffer(v26, (uint64_t)qword_268487B30);
  uint64_t v27 = sub_22BE925C8();
  os_log_type_t v28 = sub_22BE93138();
  if (os_log_type_enabled(v27, v28))
  {
    os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v29 = 0;
    _os_log_impl(&dword_22BDC5000, v27, v28, "DOCICloudRootNode: returning existing node for DataSeparated iCloud", v29, 2u);
LABEL_36:
    MEMORY[0x230F57540](v29, -1, -1);
  }
LABEL_39:

  *a3 = v8;
}

id FPProviderDomain.shouldUseDSEnumeration.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  char v7 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_9:
    id v10 = objc_msgSend(self, sel_dsEnumerationLocal);
    goto LABEL_10;
  }
  id v8 = objc_msgSend(v0, sel_identifier);
  int v9 = DOCProviderDomainIDIsExternalDevice();

  if (v9)
  {
    id v10 = objc_msgSend(self, sel_dsEnumerationUSB);
  }
  else
  {
    id v14 = objc_msgSend(v0, sel_identifier);
    int v15 = DOCProviderDomainIDIsSharedServerDomainID();

    if (v15)
    {
      id v10 = objc_msgSend(self, sel_dsEnumerationSMB);
    }
    else
    {
      if (objc_msgSend(v0, sel_isUsingFPFS)) {
        return objc_msgSend(v0, sel_isUsingFPFS);
      }
      id v10 = objc_msgSend(self, sel_dsEnumerationFPv2);
    }
  }
LABEL_10:
  id v11 = v10;
  id v12 = objc_msgSend(v11, sel_isEnabled);

  return v12;
}

uint64_t sub_22BDD3344(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))
{
  char v7 = *((unsigned char *)a1 + 8);
  uint64_t v9 = *a1;
  char v10 = v7;
  return a7(a5, a6, &v9, a2, a3, a4);
}

uint64_t UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(char a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_22BDD33E8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_26DF45A00, (uint64_t)sub_22BE2C580, (uint64_t (*)(void *, uint64_t *, uint64_t, void *, uint64_t))UIView.doc_registerForTraitChanges<A>(_:options:handler:));
}

uint64_t sub_22BDD33E8(char a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void *, uint64_t *, uint64_t, void *, uint64_t))
{
  uint64_t v9 = a8;
  uint64_t v13 = *a3;
  char v14 = *((unsigned char *)a3 + 8);
  if ((a1 & 1) == 0)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    if ((a2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  char v29 = *((unsigned char *)a3 + 8);
  uint64_t v15 = *a3;
  uint64_t v17 = sub_22BDD35CC(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    uint64_t v17 = sub_22BDD35CC((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  unint64_t v20 = sub_22BDD9D8C();
  v17[2] = v19 + 1;
  id v21 = &v17[2 * v19];
  v21[4] = &type metadata for DOCTabSwitcherStyleTrait;
  v21[5] = v20;
  uint64_t v9 = a8;
  uint64_t v13 = v15;
  char v14 = v29;
  if (a2)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_22BDD35CC(0, v17[2] + 1, 1, v17);
    }
    unint64_t v23 = v17[2];
    unint64_t v22 = v17[3];
    if (v23 >= v22 >> 1) {
      uint64_t v17 = sub_22BDD35CC((void *)(v22 > 1), v23 + 1, 1, v17);
    }
    unint64_t v24 = sub_22BDD9CFC();
    v17[2] = v23 + 1;
    uint64_t v25 = &v17[2 * v23];
    v25[4] = &type metadata for DOCUIPDocumentLandingModeTrait;
    v25[5] = v24;
  }
LABEL_12:
  uint64_t v31 = v13;
  char v32 = v14;
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = a6;
  v26[3] = a4;
  v26[4] = a5;
  sub_22BE91C58();
  uint64_t v27 = a9(v17, &v31, v9, v26, a6);
  swift_release();
  swift_bridgeObjectRelease();
  return v27;
}

void *sub_22BDD35CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2684885E8);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22BDD37AC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22BDD36DC(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t (*a8)(uint64_t, void (*)(uint64_t, void), uint64_t, uint64_t))
{
  char v10 = v8;
  if (a2[8] & 1) == 0 && (*a2)
  {
    sub_22BDD9D50(0, a6);
    id v15 = v10;
    swift_dynamicCast();
    a3(v17, 0);
    swift_unknownObjectRelease();
  }
  return a8(a1, a3, a4, a5);
}

char *sub_22BDD37AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5)
{
  return sub_22BDD36DC(a1, a2, a3, a4, a5, &qword_26AF003C8, 0x263F82E10, MEMORY[0x263F82078]);
}

uint64_t UIView.doc_registerForTraitChanges<A>(_:options:handler:)(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5)
{
  return sub_22BDD36DC(a1, a2, a3, a4, a5, &qword_26AF004C8, 0x263F82E00, MEMORY[0x263F82170]);
}

uint64_t UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(char a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_22BDD33E8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_26DF45988, (uint64_t)sub_22BE2C580, (uint64_t (*)(void *, uint64_t *, uint64_t, void *, uint64_t))UIViewController.doc_registerForTraitChanges<A>(_:options:handler:));
}

Swift::String __swiftcall DOCNode.localizedSizeDescription()()
{
  id v1 = objc_msgSend(v0, sel_fileSize);
  if (!v1) {
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  if (((unint64_t)objc_msgSend(v1, sel_longLongValue) & 0x8000000000000000) != 0)
  {

LABEL_7:
    id v3 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    uint64_t v4 = sub_22BE92CD8();
    size_t v6 = v7;
    goto LABEL_8;
  }
  if (qword_2684866D8 != -1) {
    swift_once();
  }
  id v3 = objc_msgSend((id)qword_268487040, sel_stringFromByteCount_, sub_22BE939D8());
  uint64_t v4 = sub_22BE92CD8();
  size_t v6 = v5;

LABEL_8:
  uint64_t v8 = v4;
  uint64_t v9 = v6;
  result._object = v9;
  result._char countAndFlagsBits = v8;
  return result;
}

Swift::String __swiftcall DOCNode.displayName(withHiddenPathExtension:)(Swift::Bool withHiddenPathExtension)
{
  if ((objc_msgSend(v1, sel_isAppContainer) & 1) != 0
    || objc_msgSend(v1, sel_isFolder)
    && objc_msgSend(v1, sel_folderType) != (id)1
    && objc_msgSend(v1, sel_folderType))
  {
    id v3 = objc_msgSend(v1, sel_displayName);
  }
  else
  {
    id v4 = objc_msgSend(v1, sel_filename);
    if (!v4)
    {
      __break(1u);
      goto LABEL_10;
    }
    size_t v6 = v4;
    id v3 = objc_msgSend(v4, sel_fp_displayNameFromFilenameWithHiddenPathExtension_isFolder_, withHiddenPathExtension, objc_msgSend(v1, sel_isFolder));
  }
  uint64_t v7 = sub_22BE92CD8();
  uint64_t v9 = v8;

  id v4 = (id)v7;
  char v5 = v9;
LABEL_10:
  result._object = v5;
  result._char countAndFlagsBits = (uint64_t)v4;
  return result;
}

id DOCItemSortMode.DisplayableMode.localizedName.getter()
{
  switch(*v0)
  {
    case 1:
      id result = (id)_DocumentManagerBundle();
      if (!result) {
        goto LABEL_16;
      }
      uint64_t v2 = result;
      goto LABEL_10;
    case 2:
      id result = (id)_DocumentManagerBundle();
      if (!result) {
        goto LABEL_17;
      }
      uint64_t v2 = result;
      goto LABEL_10;
    case 3:
      id result = (id)_DocumentManagerBundle();
      if (!result) {
        goto LABEL_18;
      }
      uint64_t v2 = result;
      goto LABEL_10;
    case 4:
      id result = (id)_DocumentManagerBundle();
      if (!result) {
        goto LABEL_19;
      }
      uint64_t v2 = result;
      goto LABEL_10;
    case 5:
      id result = (id)_DocumentManagerBundle();
      if (!result) {
        goto LABEL_20;
      }
      uint64_t v2 = result;
      goto LABEL_10;
    default:
      id result = (id)_DocumentManagerBundle();
      if (result)
      {
        uint64_t v2 = result;
LABEL_10:
        uint64_t v3 = sub_22BE91F78();

        return (id)v3;
      }
      else
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      return result;
  }
}

uint64_t sub_22BDD3E60()
{
  sub_22BE92CD8();
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t v0 = sub_22BE93A48();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22BDD3ED4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x800000022BE9EDF0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x646573557473616CLL;
      unint64_t v3 = 0xEC00000065746144;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701667182;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1936154996;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1702521203;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1684957547;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7942646572616873;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x800000022BE9EDF0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC00000065746144;
      if (v5 == 0x646573557473616CLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701667182) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1936154996) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702521203) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v2 = 1684957547;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7942646572616873) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void sub_22BDD40B4(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3AB80]), sel_init);
  long long v4 = xmmword_22BE99C00;
  uint64_t v3 = _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(v2, 0, (unsigned __int8 *)&v4);

  *a1 = v3;
}

uint64_t static DOCTabSwitcherStyleTrait.defaultValue.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3AB80]), sel_init);
  long long v3 = xmmword_22BE99C00;
  uint64_t v1 = _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(v0, 0, (unsigned __int8 *)&v3);

  return v1;
}

uint64_t _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(void *a1, void *a2, unsigned __int8 *a3)
{
  uint64_t v5 = *a3;
  if (v5 == 2)
  {
    int IsPad = DOCDeviceIsPad();
    if (a2)
    {
LABEL_3:
      id v7 = a2;
      objc_msgSend(v7, sel_enclosingDocumentLandingMode);
      goto LABEL_10;
    }
  }
  else
  {
    int IsPad = (v5 & 1) == 0 && (*((void *)a3 + 1) & 0xFFFFFFFFFFFFFFFELL) == 2;
    if (a2) {
      goto LABEL_3;
    }
  }
  id v13[4] = sub_22BDCD944;
  v13[5] = 0;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22BDCD8F0;
  v13[3] = &block_descriptor_15;
  uint64_t v8 = _Block_copy(v13);
  id v7 = objc_msgSend(self, sel_traitCollectionWithTraits_, v8);
  _Block_release(v8);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result)
  {
    __break(1u);
    return result;
  }
  swift_beginAccess();
LABEL_10:
  if (objc_msgSend(a1, sel_neverAllowsAnyTypeOfTabs))
  {
LABEL_11:

    return 0;
  }
  unsigned int v10 = DOCUsePhoneIdiomForTraits();
  int v11 = DOCUsePadIdiomForTraits();
  if ((objc_msgSend(self, sel_enclosingTabSwitcherCanBeFloating) & 1) != 0 && v11)
  {
    if (IsPad || objc_msgSend(a1, sel_isPickerUI)) {
      goto LABEL_11;
    }
    id v12 = objc_msgSend(v7, sel_horizontalSizeClass);

    if (v12 == (id)2) {
      return 2;
    }
    else {
      return 1;
    }
  }
  else
  {

    return v10;
  }
}

BOOL sub_22BDD438C()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1 == (id)1;
}

id sub_22BDD43E8(void *a1)
{
  return objc_msgSend(a1, sel_forSavingDocuments);
}

id DOCLocalizedMetadataStringForUnavailablePropertyValue()
{
  id v0 = _DocumentManagerBundle();
  id v1 = [v0 localizedStringForKey:@"Metadata Value Missing Indicator [--]" value:@"--" table:@"Localizable"];

  return v1;
}

uint64_t sub_22BDD4458(uint64_t a1)
{
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t sub_22BDD44BC()
{
  return sub_22BE92C68() & 1;
}

id DOCButtonGestureRecognizer.init(target:action:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_numberOfTouchesRequired] = 1;
  uint64_t v5 = v2;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_22BE937E8()) {
    sub_22BE10108(MEMORY[0x263F8EE78]);
  }
  else {
    uint64_t v6 = MEMORY[0x263F8EE88];
  }
  *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_activeTouches] = v6;
  id v7 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;

  sub_22BDD47C0(a1, (uint64_t)v18);
  uint64_t v8 = v19;
  if (v19)
  {
    uint64_t v9 = __swift_project_boxed_opaque_existential_0(v18, v19);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v9);
    id v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = sub_22BE938B8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    uint64_t v13 = 0;
  }
  char v14 = (objc_class *)type metadata accessor for DOCButtonGestureRecognizer();
  v17.receiver = v5;
  v17.super_class = v14;
  id v15 = objc_msgSendSuper2(&v17, sel_initWithTarget_action_, v13, a2);
  swift_unknownObjectRelease();
  sub_22BDD473C(a1);
  return v15;
}

uint64_t sub_22BDD473C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DOCButtonGestureRecognizer()
{
  return self;
}

uint64_t sub_22BDD47C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id static FPItem.createDocumentSentinelItem()()
{
  uint64_t v0 = sub_22BE92568();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  sub_22BE92478();
  id v6 = objc_allocWithZone(MEMORY[0x263F054A8]);
  id v7 = (void *)sub_22BE92C98();
  uint64_t v8 = (void *)sub_22BE92418();
  id v9 = objc_msgSend(v6, sel_initWithProviderDomainID_itemIdentifier_parentItemIdentifier_filename_contentType_, v4, v5, 0, v7, v8);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

uint64_t destroy for DOCItemSortDescriptor()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t DOCItemSortDescriptor.ascending.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22BE937E8();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x230F56140](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v1 + 32);
LABEL_6:
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v5, sel_ascending);

    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for DOCItemSortDescriptor(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t DOCNode.isSharedServerNode.getter()
{
  id v1 = objc_msgSend(v0, sel_providerDomainID);
  uint64_t v2 = DOCProviderDomainIDIsSharedServerDomainID();

  return v2;
}

id UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)(uint64_t a1, char a2, uint64_t a3)
{
  id v7 = sub_22BDD4C94(a1, a3, (SEL *)&selRef_parentViewController);
  if (!v7 && (a2 & 1) != 0)
  {
    id v8 = objc_msgSend(v3, sel_presentingViewController);
    if (v8)
    {
      id v9 = v8;
      id v7 = sub_22BDD4C94(a1, a3, (SEL *)&selRef_parentViewController);
    }
    else
    {
      return 0;
    }
  }
  return v7;
}

id sub_22BDD4C94(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result = [v3 *a3];
  if (result)
  {
    id v6 = result;
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    while ((objc_msgSend(v6, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
    {
      id v8 = [v6 *a3];

      id v6 = v8;
      if (!v8) {
        return 0;
      }
    }
    return (id)swift_dynamicCastUnknownClassUnconditional();
  }
  return result;
}

uint64_t DOCNode.identifierKey.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  sub_22BE934B8();
  swift_unknownObjectRelease();
  return swift_dynamicCast();
}

uint64_t sub_22BDD4DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_22BDD5734(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_22BE1E390();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      id v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *id v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_22BDC95F8(v17, a5 & 1);
  unint64_t v23 = sub_22BDD5734(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_22BE93958();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

unint64_t sub_22BDD4F50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487308);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  id v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_22BDD5734(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_22BDD506C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v36 = *v5;
  uint64_t v12 = sub_22BE92CD8();
  uint64_t v14 = v13;
  sub_22BDD53C8(v12, v13);
  id v15 = objc_msgSend(self, sel_defaultCenter);
  sub_22BDD47C0(a2, (uint64_t)aBlock);
  BOOL v16 = v39;
  if (v39)
  {
    uint64_t v17 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v39);
    uint64_t v34 = a1;
    uint64_t v35 = a5;
    v33[1] = v33;
    id v18 = v15;
    uint64_t v19 = a3;
    uint64_t v20 = v12;
    uint64_t v21 = *(v16 - 1);
    MEMORY[0x270FA5388](v17);
    uint64_t v23 = a4;
    char v24 = (char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v24);
    uint64_t v25 = sub_22BE938B8();
    uint64_t v26 = v24;
    a4 = v23;
    (*(void (**)(char *, void *))(v21 + 8))(v26, v16);
    uint64_t v12 = v20;
    a3 = v19;
    a1 = v34;
    id v15 = v18;
    a5 = v35;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  BOOL v28 = (void *)swift_allocObject();
  v28[2] = *(void *)(v36 + 80);
  v28[3] = v27;
  v28[4] = a4;
  v28[5] = a5;
  id v40 = sub_22BE42FE8;
  uint64_t v41 = v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE428D8;
  v39 = &block_descriptor_17;
  uint64_t v29 = _Block_copy(aBlock);
  sub_22BE91C58();
  swift_release();
  id v30 = objc_msgSend(v15, sel_addObserverForName_object_queue_usingBlock_, a1, v25, a3, v29);
  _Block_release(v29);

  swift_unknownObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = v6[3];
  v6[3] = 0x8000000000000000;
  sub_22BDD55C4((uint64_t)v30, v12, v14, isUniquelyReferenced_nonNull_native);
  v6[3] = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_22BDD53C8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_22BDD5734(a1, a2);
    if (v7)
    {
      uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(self, sel_defaultCenter);
      objc_msgSend(v9, sel_removeObserver_, v8);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_22BDD54F4(a1, a2);
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_22BDD54F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22BDD5734(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22BE1E6FC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_22BE49AC8(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22BDD55C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_22BDD5734(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_22BE1E6FC();
LABEL_7:
    id v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_22BDD5890(v15, a4 & 1);
  unint64_t v21 = sub_22BDD5734(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_22BE93958();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  id v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v18[2] = v26;

  return swift_bridgeObjectRetain();
}

unint64_t sub_22BDD5734(uint64_t a1, uint64_t a2)
{
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t v4 = sub_22BE93A48();

  return sub_22BDD57AC(a1, a2, v4);
}

unint64_t sub_22BDD57AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22BE938C8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22BE938C8() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_22BDD5890(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004D8);
  char v36 = a2;
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_22BE91C58();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_22BE939F8();
    sub_22BE92D48();
    uint64_t result = sub_22BE93A48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    id v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *id v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BDD5BA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_22BE925E8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

Swift::String_optional __swiftcall DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)(UIUserInterfaceSizeClass horizontalSizeClass, Swift::Bool preferLastUsedDate)
{
  UIUserInterfaceSizeClass v84 = horizontalSizeClass;
  uint64_t v4 = sub_22BE91F48();
  uint64_t v83 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v81 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE92328();
  uint64_t v82 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v85 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB20);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  id v79 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)&v74 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)&v74 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unint64_t v19 = (char *)&v74 - v18;
  MEMORY[0x270FA5388](v17);
  int64_t v21 = (char *)&v74 - v20;
  uint64_t v22 = sub_22BE92248();
  UIUserInterfaceSizeClass v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v80 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v86 = (char *)&v74 - v27;
  MEMORY[0x270FA5388](v26);
  unint64_t v87 = (char *)&v74 - v28;
  if (preferLastUsedDate)
  {
    id v29 = objc_msgSend(v2, sel_doc_lastUsedDate);
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v77 = v6;
      uint64_t v78 = v4;
      uint64_t v31 = v86;
      sub_22BE92218();

      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v32(v19, v31, v22);
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v33(v19, 0, 1, v22);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22) != 1)
      {
        v32(v21, v19, v22);
        v33(v21, 0, 1, v22);
        uint64_t v6 = v77;
        uint64_t v4 = v78;
        goto LABEL_15;
      }
      uint64_t v6 = v77;
      uint64_t v4 = v78;
    }
    else
    {
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v33(v19, 1, 1, v22);
    }
    id v36 = objc_msgSend(v2, sel_modificationDate);
    if (v36)
    {
      uint64_t v37 = v36;
      sub_22BE92218();

      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
    }
    v33(v16, v38, 1, v22);
    sub_22BDE2770((uint64_t)v16, (uint64_t)v21, &qword_26AEFFB20);
    sub_22BE035C8((uint64_t)v19, &qword_26AEFFB20);
  }
  else
  {
    id v34 = objc_msgSend(v2, sel_modificationDate);
    if (v34)
    {
      uint64_t v35 = v34;
      sub_22BE92218();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v13, 0, 1, v22);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v13, 1, 1, v22);
    }
    sub_22BDE2770((uint64_t)v13, (uint64_t)v21, &qword_26AEFFB20);
  }
LABEL_15:
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v39(v21, 1, v22) == 1)
  {
LABEL_22:
    sub_22BE035C8((uint64_t)v21, &qword_26AEFFB20);
    uint64_t v45 = 0;
    id v47 = 0;
    goto LABEL_23;
  }
  id v40 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v40(v87, v21, v22);
  if (v84 == UIUserInterfaceSizeClassRegular)
  {
    if (qword_26AF00480 != -1) {
      swift_once();
    }
    uint64_t v41 = (void *)qword_26AF00D30;
    uint64_t v42 = v87;
    uint64_t v43 = (void *)sub_22BE921F8();
    id v44 = objc_msgSend(v41, sel_stringFromDate_, v43);

    uint64_t v45 = sub_22BE92CD8();
    id v47 = v46;

    (*(void (**)(char *, uint64_t))(v23 + 8))(v42, v22);
    goto LABEL_23;
  }
  char v75 = v40;
  uint64_t v76 = v23 + 32;
  uint64_t v77 = v6;
  uint64_t v78 = v4;
  sub_22BE92308();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487078);
  uint64_t v48 = sub_22BE92318();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(void *)(v49 + 72);
  unint64_t v51 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_22BE99D40;
  unint64_t v53 = v52 + v51;
  uint64_t v54 = *MEMORY[0x263F07870];
  UIUserInterfaceSizeClass v84 = v23;
  uint64_t v55 = *(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 104);
  v55(v53, v54, v48);
  v55(v53 + v50, *MEMORY[0x263F078A8], v48);
  v55(v53 + 2 * v50, *MEMORY[0x263F078A0], v48);
  uint64_t v56 = 3 * v50;
  int v57 = v85;
  v55(v53 + v56, *MEMORY[0x263F07878], v48);
  UIUserInterfaceSizeClass v58 = v84;
  sub_22BDD65D4(v52);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v59 = v86;
  sub_22BE92238();
  long long v60 = v81;
  sub_22BE922E8();
  swift_bridgeObjectRelease();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v58 + 8);
  v61(v59, v22);
  int64_t v21 = v79;
  sub_22BE922F8();
  if (v39(v21, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v78);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v57, v77);
    v61(v87, v22);
    goto LABEL_22;
  }
  v75(v80, v21, v22);
  char v64 = sub_22BE92208();
  uint64_t v65 = v77;
  if (v64)
  {
    if (qword_2684866C8 != -1) {
      swift_once();
    }
    v66 = (void *)qword_268490A10;
    uint64_t v67 = v87;
    unint64_t v68 = (void *)sub_22BE921F8();
    id v69 = objc_msgSend(v66, sel_stringFromDate_, v68);
  }
  else
  {
    if (qword_2684866D0 != -1) {
      swift_once();
    }
    uint64_t v70 = (void *)qword_268490A18;
    uint64_t v67 = v87;
    unint64_t v68 = (void *)sub_22BE921F8();
    id v69 = objc_msgSend(v70, sel_stringFromDate_, v68);
  }
  id v71 = v69;

  uint64_t v45 = sub_22BE92CD8();
  id v47 = v72;

  v61(v80, v22);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v78);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v57, v65);
  v61(v67, v22);
LABEL_23:
  uint64_t v62 = v45;
  v63 = v47;
  result.value._object = v63;
  result.value._char countAndFlagsBits = v62;
  return result;
}

uint64_t sub_22BDD65D4(uint64_t a1)
{
  uint64_t v2 = sub_22BE92318();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487100);
    uint64_t v9 = sub_22BE93638();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_22BDD6934(&qword_268487108, MEMORY[0x263F07908]);
      uint64_t v16 = sub_22BE92C48();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_22BDD6934(&qword_268487110, MEMORY[0x263F07908]);
          char v23 = sub_22BE92C68();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_22BDD68EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BDD6934(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BDD697C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BDD69C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BDD6A0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Bool __swiftcall DOCNode.isCreateDocumentSentinel()()
{
  self;
  uint64_t v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    id v1 = (void *)v0;
    swift_unknownObjectRetain();
    id v2 = objc_msgSend(v1, sel_itemIdentifier);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_22BE92CD8();
    uint64_t v6 = v5;
    if (v4 == sub_22BE92CD8() && v6 == v7) {
      char v9 = 1;
    }
    else {
      char v9 = sub_22BE938C8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    type metadata accessor for FISentinelNode();
    char v9 = swift_dynamicCastClass() != 0;
  }
  return v9 & 1;
}

id *static DOCICloudRootNode.iCloudRootNode(for:)(uint64_t a1)
{
  id v1 = (void *)a1;
  if (qword_26AEFFFD0 != -1) {
    a1 = swift_once();
  }
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  MEMORY[0x270FA5388](v2);
  id v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(qword_26AEFFFF0);
  sub_22BE93208();

  uint64_t result = v8;
  if (!v8)
  {
    id v6 = objc_msgSend(self, sel_shared);
    objc_msgSend(v6, sel_startIfNeeded);

    id v7 = objc_allocWithZone((Class)type metadata accessor for DOCICloudRootNode());
    return sub_22BDD6D34(v1);
  }
  return result;
}

uint64_t type metadata accessor for DOCICloudRootNode()
{
  return self;
}

id *sub_22BDD6D34(void *a1)
{
  uint64_t v3 = sub_22BE92B08();
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22BE925B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_deferredCreationNode] = 0;
  char v9 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_observerBlock];
  *(void *)char v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer] = 0;
  uint64_t v10 = v1;
  sub_22BE932A8();
  if (qword_26AF00228 != -1) {
    swift_once();
  }
  sub_22BE925A8();
  uint64_t v34 = (id *)MEMORY[0x263F8EE78];
  LOBYTE(v33) = 2;
  uint64_t v32 = 22;
  sub_22BE92598();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (qword_268486868 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_22BE925E8();
  __swift_project_value_buffer(v11, (uint64_t)qword_268487B30);
  id v12 = a1;
  uint64_t v13 = sub_22BE925C8();
  os_log_type_t v14 = sub_22BE93178();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v40 = v16;
    uint64_t v36 = v3;
    *(_DWORD *)uint64_t v15 = 136315138;
    v35[1] = v15 + 4;
    id v17 = objc_msgSend(v12, sel_identifier);
    uint64_t v18 = sub_22BE92CD8();
    unint64_t v20 = v19;

    uint64_t v39 = sub_22BDD8478(v18, v20, &v40);
    uint64_t v3 = v36;
    sub_22BE93408();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v13, v14, "Init DOCICloudRootNode for domain %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v16, -1, -1);
    MEMORY[0x230F57540](v15, -1, -1);
  }
  else
  {
  }
  *(void *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain] = v12;
  id v21 = v12;

  uint64_t v22 = (objc_class *)type metadata accessor for DOCICloudRootNode();
  v41.receiver = v10;
  v41.super_class = v22;
  id v23 = objc_msgSendSuper2(&v41, sel_init);
  uint64_t v24 = qword_26AEFFFD0;
  uint64_t v25 = (id *)v23;
  uint64_t v26 = v25;
  if (v24 != -1) {
    uint64_t v25 = (id *)swift_once();
  }
  uint64_t v27 = (id *)off_26AEFFFC0;
  MEMORY[0x270FA5388](v25);
  uint64_t v34 = v26;
  id v28 = v27[2];
  uint64_t v29 = v37;
  uint64_t v30 = sub_22BE92AF8();
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (uint64_t)sub_22BDCE264;
  uint64_t v33 = &v32;
  uint64_t v34 = v27;
  sub_22BE931F8();

  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v3);
  sub_22BDD7244();

  return v26;
}

uint64_t sub_22BDD7244()
{
  uint64_t v1 = sub_22BE92B08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22BE92B58();
  uint64_t v5 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain), sel_isDataSeparatedDomain))
  {
    if (qword_26AEFFFE8 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_26AEFFFD8;
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v21 = sub_22BE8E224;
    uint64_t v22 = v8;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v18 = 1107296256;
    char v9 = &block_descriptor_16_0;
  }
  else
  {
    if (qword_26AEFFFE8 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_26AEFFFD8;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v21 = sub_22BDD0BEC;
    uint64_t v22 = v10;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v18 = 1107296256;
    char v9 = &block_descriptor_27;
  }
  unint64_t v19 = sub_22BDD0BA8;
  unint64_t v20 = v9;
  uint64_t v11 = _Block_copy(&aBlock);
  sub_22BE91C58();
  sub_22BE92B38();
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_22BDD69C4((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v7, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  swift_release();
  return swift_release();
}

uint64_t sub_22BDD7600(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_22BDD7650(void *a1)
{
  id v1 = a1;
  uint64_t v2 = UISplitViewController.doc_splitViewState.getter();

  return v2;
}

id sub_22BDD7694()
{
  return sub_22BDD76B8();
}

id sub_22BDD76B8()
{
  uint64_t v1 = qword_268487BF0;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_22BDD774C(MEMORY[0x263F8EE78]);

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DOCAssociatedObjectStorage();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_22BDD774C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004F8);
  uint64_t v2 = sub_22BE93828();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_22BE91C58();
  while (1)
  {
    sub_22BDDC158(v6, (uint64_t)&v13, &qword_268487300);
    uint64_t v7 = v13;
    unint64_t result = sub_22BDDB784(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_22BDDBF3C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

char *UISplitViewController.doc_splitViewState.getter()
{
  unint64_t result = (char *)objc_msgSend(v0, sel_doc_splitViewStateTransitionEnd);
  if (!result)
  {
    unint64_t result = (char *)objc_msgSend(v0, sel_doc_splitViewStateTransitionStart);
    if (!result)
    {
      id v2 = v0;
      unsigned int v3 = objc_msgSend(v2, sel_isCollapsed);
      id v4 = objc_msgSend(v2, sel_displayMode);

      unint64_t result = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
      uint64_t v5 = &result[OBJC_IVAR___DOCSplitViewState__impl];
      *(void *)uint64_t v5 = v3;
      *((void *)v5 + 1) = v4;
    }
  }
  return result;
}

char *sub_22BDD7934(void *a1, uint64_t a2, void (*a3)(void *__return_ptr))
{
  id v4 = a1;
  a3(v10);
  uint64_t v5 = v10[0];
  if (LOBYTE(v10[0]) == 2)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v7 = v10[1];
    uint64_t v6 = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
    uint64_t v8 = &v6[OBJC_IVAR___DOCSplitViewState__impl];
    *(void *)uint64_t v8 = v5;
    *((void *)v8 + 1) = v7;
  }

  return v6;
}

void sub_22BDD79D8(_OWORD *a1@<X8>)
{
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unsigned int v3 = (char *)sub_22BDD7C20(v1, (const void *)qword_26AEFFAE8);
  swift_getKeyPath();
  id v4 = &v3[qword_268487BF0];
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22BE91C58();
    unint64_t v7 = sub_22BDDB784(v6);
    if (v8)
    {
      sub_22BDD854C(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v9);
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  if ((swift_dynamicCast() & 1) == 0) {
    *a1 = xmmword_22BE99C00;
  }
  swift_release();
}

id sub_22BDD7B34(void *a1, const void *a2, uint64_t *a3)
{
  if (objc_getAssociatedObject(a1, a2))
  {
    sub_22BE934B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_22BDD919C((uint64_t)v9, (uint64_t)v10);
  if (!v11)
  {
    sub_22BDD473C((uint64_t)v10);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    id v6 = objc_msgSend(objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(a3)), sel_init);
    objc_setAssociatedObject(a1, a2, v6, (void *)1);
    return v6;
  }
  return (id)v8;
}

id sub_22BDD7C20(void *a1, const void *a2)
{
  return sub_22BDD7B34(a1, a2, &qword_26AF00210);
}

void sub_22BDD7C2C(_OWORD *a1@<X8>)
{
}

id static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(void *a1, const void **a2)
{
  unsigned int v3 = *a2;
  if (objc_getAssociatedObject(a1, *a2))
  {
    sub_22BE934B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_22BDD919C((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_22BDD473C((uint64_t)v9);
    id v4 = (objc_class *)type metadata accessor for DOCAssociatedObjectStorage();
    goto LABEL_8;
  }
  id v4 = (objc_class *)type metadata accessor for DOCAssociatedObjectStorage();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    id v5 = objc_msgSend(objc_allocWithZone(v4), sel_init);
    objc_setAssociatedObject(a1, v3, v5, (void *)1);
    return v5;
  }
  return (id)v7;
}

uint64_t type metadata accessor for DOCAssociatedObjectStorage()
{
  return __swift_instantiateGenericMetadata();
}

void static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, unsigned char *a4@<X8>)
{
  char v44 = *a3;
  id v6 = objc_msgSend(self, sel_sharedStore);
  id v7 = objc_msgSend(v6, sel_interfaceStateForConfiguration_, a1);

  uint64_t v8 = _sSo26DOCUserInterfaceStateStoreC26DocumentManagerExecutablesE016groupingBehaviorC10Identifier3forSSSo017DOCDocumentSourceJ0aSg_tFZ_0(a2);
  unint64_t v10 = (unint64_t)v9;
  uint64_t v42 = v8;
  sub_22BDD89DC(v7, v8, v9, (char *)&v46);
  char v11 = v46;
  p_opt_class_meths = &OBJC_PROTOCOL___UICollectionViewDelegate.opt_class_meths;
  if (v46 == 8)
  {
    if (qword_268486848 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_22BE925E8();
    __swift_project_value_buffer(v13, (uint64_t)qword_268487AD0);
    long long v14 = sub_22BE925C8();
    os_log_type_t v15 = sub_22BE93158();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v46 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_22BDD8478(0xD000000000000049, 0x800000022BEA6A70, &v46);
      sub_22BE93408();
      *(_WORD *)(v16 + 12) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(qword_26AF00188);
      uint64_t v18 = sub_22BE92CF8();
      sub_22BDD8478(v18, v19, &v46);
      sub_22BE93408();
      p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___UICollectionViewDelegate + 48);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v14, v15, "%s fetched value: %s could not be converted to DOCItemGroupingBehavior", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v17, -1, -1);
      MEMORY[0x230F57540](v16, -1, -1);
    }

    char v11 = v44;
  }
  else
  {
    if (qword_268486848 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22BE925E8();
    __swift_project_value_buffer(v20, (uint64_t)qword_268487AD0);
    id v21 = v7;
    uint64_t v22 = sub_22BE925C8();
    os_log_type_t v23 = sub_22BE93148();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v46 = v25;
      *(_DWORD *)uint64_t v24 = 136315650;
      sub_22BDD8478(0xD000000000000049, 0x800000022BEA6A70, &v46);
      sub_22BE93408();
      *(_WORD *)(v24 + 12) = 2080;
      id v26 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2684887E0);
      uint64_t v27 = sub_22BE92CF8();
      sub_22BDD8478(v27, v28, &v46);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(qword_26AF00188);
      uint64_t v29 = sub_22BE92CF8();
      sub_22BDD8478(v29, v30, &v46);
      p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___UICollectionViewDelegate + 48);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v22, v23, "%s couldn't fetch state: %s and grouping value: %s", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v25, -1, -1);
      MEMORY[0x230F57540](v24, -1, -1);
    }
    else
    {
    }
  }
  if (p_opt_class_meths[265] != (__objc2_meth_list *)-1) {
    swift_once();
  }
  uint64_t v31 = sub_22BE925E8();
  __swift_project_value_buffer(v31, (uint64_t)qword_268487AD0);
  id v32 = a2;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_22BE925C8();
  os_log_type_t v34 = sub_22BE93148();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v46 = v36;
    *(_DWORD *)uint64_t v35 = 136315906;
    sub_22BDD8478(0xD000000000000049, 0x800000022BEA6A70, &v46);
    sub_22BE93408();
    *(_WORD *)(v35 + 12) = 2080;
    char v45 = v11;
    uint64_t v37 = sub_22BE92CF8();
    sub_22BDD8478(v37, v38, &v46);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_22BDD8478(v42, v10, &v46);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 32) = 2080;
    id v39 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2684887D8);
    uint64_t v40 = sub_22BE92CF8();
    sub_22BDD8478(v40, v41, &v46);
    sub_22BE93408();

    char v11 = v45;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v33, v34, "%s fetched: %s for state identifier: %s derived from sourceIdentifier: %s", (uint8_t *)v35, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v36, -1, -1);
    MEMORY[0x230F57540](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a4 = v11;
}

uint64_t sub_22BDD8478(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_22BDD85A8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_22BDD854C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_22BDD854C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_22BDD854C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_22BDD85A8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22BE93418();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_22BDD8764(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_22BE936A8();
  if (!v8)
  {
    sub_22BE93768();
    __break(1u);
LABEL_17:
    uint64_t result = sub_22BE93838();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_22BDD8764(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_22BDD87FC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22BDFBB94(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_22BDFBB94(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22BDD87FC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_22BDD8974(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_22BE93658();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_22BE93768();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_22BE92DC8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_22BE93838();
    __break(1u);
LABEL_14:
    uint64_t result = sub_22BE93768();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_22BDD8974(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00540);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_22BDD89DC(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  if (!a1)
  {
    if (qword_268486848 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22BE925E8();
    __swift_project_value_buffer(v10, (uint64_t)qword_268487AD0);
    uint64_t v11 = sub_22BE925C8();
    os_log_type_t v12 = sub_22BE93148();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(void *)&long long v48 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v47._char countAndFlagsBits = sub_22BDD8478(0xD00000000000001BLL, 0x800000022BEA6B00, (uint64_t *)&v48);
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v11, v12, "%s state store was nil", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v14, -1, -1);
      MEMORY[0x230F57540](v13, -1, -1);
    }
    goto LABEL_27;
  }
  id v7 = a1;
  id v8 = objc_msgSend(v7, sel_groupingBehaviors);
  v47._char countAndFlagsBits = a2;
  v47._object = a3;
  swift_bridgeObjectRetain_n();
  id v9 = objc_msgSend(v8, sel___swift_objectForKeyedSubscript_, sub_22BE93928());
  swift_unknownObjectRelease();

  if (v9)
  {
    sub_22BE934B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(&v47, 0, 32);
  }
  sub_22BDD919C((uint64_t)&v47, (uint64_t)&v48);
  if (!*((void *)&v49 + 1)) {
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684887E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_23:
    if (qword_268486848 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_22BE925E8();
    __swift_project_value_buffer(v24, (uint64_t)qword_268487AD0);
    uint64_t v11 = sub_22BE925C8();
    os_log_type_t v25 = sub_22BE93148();
    if (!os_log_type_enabled(v11, v25))
    {

      goto LABEL_29;
    }
    id v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&long long v48 = v27;
    *(_DWORD *)id v26 = 136315138;
    v47._char countAndFlagsBits = sub_22BDD8478(0xD00000000000001BLL, 0x800000022BEA6B00, (uint64_t *)&v48);
    sub_22BE93408();
    _os_log_impl(&dword_22BDC5000, v11, v25, "%s groupingBehaviors in state store was nil or couldn't be converted to NSNumber", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v27, -1, -1);
    MEMORY[0x230F57540](v26, -1, -1);

LABEL_27:
LABEL_29:
    char v28 = 8;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_22BE92CD8();
  if (*(void *)(v46 + 16) && (unint64_t v17 = sub_22BDD5734(v15, v16), (v18 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v46 + 56) + 32 * v17, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v49 + 1))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_22BDD473C((uint64_t)&v48);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_15;
  }
  int countAndFlagsBits_low = LOBYTE(v47._countAndFlagsBits);
  uint64_t v20 = sub_22BE92CD8();
  if (*(void *)(v46 + 16) && (unint64_t v22 = sub_22BDD5734(v20, v21), (v23 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v46 + 56) + 32 * v22, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v49 + 1))
  {
    sub_22BDD473C((uint64_t)&v48);
    goto LABEL_37;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_37:
    int v29 = 7;
    goto LABEL_38;
  }
  DOCItemSortMode.init(rawValue:)(v47);
  int v29 = v48;
LABEL_38:
  if (countAndFlagsBits_low) {
    char v30 = v29;
  }
  else {
    char v30 = 8;
  }
  if (v29 == 7) {
    char v28 = 7;
  }
  else {
    char v28 = v30;
  }
  if (qword_268486848 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_22BE925E8();
  __swift_project_value_buffer(v31, (uint64_t)qword_268487AD0);
  id v32 = v7;
  swift_bridgeObjectRetain_n();
  id v33 = v32;
  os_log_type_t v34 = sub_22BE925C8();
  os_log_type_t v35 = sub_22BE93148();
  if (os_log_type_enabled(v34, v35))
  {
    os_log_type_t type = v35;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(void *)&long long v48 = v44;
    *(_DWORD *)uint64_t v36 = 136315906;
    v47._char countAndFlagsBits = sub_22BDD8478(0xD00000000000001BLL, 0x800000022BEA6B00, (uint64_t *)&v48);
    sub_22BE93408();
    *(_WORD *)(v36 + 12) = 2080;
    LOBYTE(v47._countAndFlagsBits) = v28;
    __swift_instantiateConcreteTypeFromMangledName(qword_26AF00188);
    uint64_t v37 = sub_22BE92CF8();
    v47._char countAndFlagsBits = sub_22BDD8478(v37, v38, (uint64_t *)&v48);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    swift_bridgeObjectRetain();
    v47._char countAndFlagsBits = sub_22BDD8478(a2, (unint64_t)a3, (uint64_t *)&v48);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 32) = 2080;
    id v39 = v33;
    id v40 = objc_msgSend(v39, sel_description);
    uint64_t v41 = sub_22BE92CD8();
    unint64_t v43 = v42;

    v47._char countAndFlagsBits = sub_22BDD8478(v41, v43, (uint64_t *)&v48);
    sub_22BE93408();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v34, type, "%s fetched value: %s for identifier: %s from state store: %s", (uint8_t *)v36, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v44, -1, -1);
    MEMORY[0x230F57540](v36, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_30:
  *a4 = v28;
}

uint64_t sub_22BDD919C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _sSo26DOCUserInterfaceStateStoreC26DocumentManagerExecutablesE016groupingBehaviorC10Identifier3forSSSo017DOCDocumentSourceJ0aSg_tFZ_0(void *a1)
{
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;
  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    id v17 = a1;
    goto LABEL_15;
  }
  char v7 = sub_22BE938C8();
  id v8 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_16;
  }
  uint64_t v9 = sub_22BE92CD8();
  uint64_t v11 = v10;
  if (v9 == sub_22BE92CD8() && v11 == v12)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v14 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {

LABEL_13:
    uint64_t v15 = qword_2684887C8;
    uint64_t v16 = off_2684887D0;
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v15 = sub_22BE92CD8();
  uint64_t v16 = v18;

LABEL_17:
  if (qword_268486848 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_22BE925E8();
  __swift_project_value_buffer(v19, (uint64_t)qword_268487AD0);
  id v20 = a1;
  swift_bridgeObjectRetain_n();
  id v21 = v20;
  unint64_t v22 = sub_22BE925C8();
  os_log_type_t v23 = sub_22BE93148();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    *(_DWORD *)uint64_t v24 = 136315650;
    sub_22BDD8478(0xD000000000000025, 0x800000022BEA6B20, &v30);
    sub_22BE93408();
    *(_WORD *)(v24 + 12) = 2080;
    id v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2684887D8);
    uint64_t v27 = sub_22BE92CF8();
    sub_22BDD8478(v27, v28, &v30);
    sub_22BE93408();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_22BDD8478(v15, (unint64_t)v16, &v30);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22BDC5000, v22, v23, "%s in identifier: %s out identifier: %s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v25, -1, -1);
    MEMORY[0x230F57540](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v15;
}

char *sub_22BDD958C(void *a1, uint64_t a2)
{
  return sub_22BDD7934(a1, a2, (void (*)(void *__return_ptr))sub_22BDD7C2C);
}

char *sub_22BDD95A4(void *a1, uint64_t a2)
{
  return sub_22BDD7934(a1, a2, (void (*)(void *__return_ptr))sub_22BDD9608);
}

void sub_22BDD9608(_OWORD *a1@<X8>)
{
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

id DOCUILogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC88];
  uint64_t v1 = (void *)*MEMORY[0x263F3AC88];
  if (!*MEMORY[0x263F3AC88])
  {
    DOCInitLogging();
    uint64_t v1 = *v0;
  }

  return v1;
}

id DOCSourceLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC70];
  uint64_t v1 = (void *)*MEMORY[0x263F3AC70];
  if (!*MEMORY[0x263F3AC70])
  {
    DOCInitLogging();
    uint64_t v1 = *v0;
  }

  return v1;
}

uint64_t DOCDocumentSourceIdentifierIsICloud(void *a1)
{
  uint64_t v1 = *MEMORY[0x263F3AB18];
  id v2 = a1;
  if (([v2 hasPrefix:v1] & 1) != 0
    || ([v2 hasPrefix:*MEMORY[0x263F3AB20]] & 1) != 0
    || ([v2 hasPrefix:*MEMORY[0x263F3AB28]] & 1) != 0)
  {
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v3 = [v2 hasPrefix:*MEMORY[0x263F3AB30]];
  }

  return v3;
}

id sub_22BDD99D0(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_traitCollection);
  id v6 = [v5 *a3];

  return v6;
}

uint64_t sub_22BDD9A30(void *a1)
{
  sub_22BDD9D8C();
  sub_22BDD9CB4(&qword_268487188, type metadata accessor for DOCTabSwitcherStyle);
  id v2 = a1;
  sub_22BE93268();

  return v4;
}

uint64_t sub_22BDD9AD0(unint64_t *a1)
{
  sub_22BDD9D50(0, a1);
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487208);
  if (!swift_dynamicCast())
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    sub_22BDE1D74((uint64_t)&v9);
    goto LABEL_5;
  }
  uint64_t v3 = *((void *)&v10 + 1);
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_0(&v9, *((uint64_t *)&v10 + 1));
  id v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v9);
  LOBYTE(v3) = objc_msgSend(v5, sel_isInUIPDocumentLanding);

  if ((v3 & 1) == 0)
  {
LABEL_5:
    id v7 = objc_msgSend(v2, sel_traitCollection);
    id v6 = objc_msgSend(v7, sel_enclosedInUIPDocumentLanding);

    return (uint64_t)v6;
  }
  return 1;
}

BOOL sub_22BDD9BEC(void *a1)
{
  return objc_msgSend(a1, sel_enclosingDocumentLandingMode) != (id)-1;
}

uint64_t sub_22BDD9C14(void *a1)
{
  sub_22BDD9CFC();
  sub_22BDD9CB4(&qword_268487198, type metadata accessor for DOCUIPDocumentLandingMode);
  id v2 = a1;
  sub_22BE93268();

  return v4;
}

uint64_t sub_22BDD9CB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22BDD9CFC()
{
  unint64_t result = qword_268487190;
  if (!qword_268487190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487190);
  }
  return result;
}

uint64_t sub_22BDD9D50(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_22BDD9D8C()
{
  unint64_t result = qword_268487180;
  if (!qword_268487180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487180);
  }
  return result;
}

id DOCNode.localizedSharingStatusDescription(type:options:)(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB08);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE91FE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v52 - v14;
  unsigned __int8 v16 = *a1;
  uint64_t v17 = *a2;
  id v18 = objc_msgSend(v3, sel_fpfs_fpItem);
  if (!v18) {
    return 0;
  }
  uint64_t v19 = v18;
  uint64_t v53 = v10;
  uint64_t v54 = v17;
  DOCNode.collaborationType.getter(&v56);
  if (v56 == 2)
  {
    id v23 = DOCNode.documentAttributes.getter();
    if (v23)
    {
      uint64_t v24 = v23;
      id result = (id)_DocumentManagerBundle();
      if (result)
      {
        id v26 = result;
        sub_22BE91F78();

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_22BE99770;
        id v28 = objc_msgSend(v24, sel_sender);
        id v29 = objc_msgSend(v28, sel_preferredFormattedName);

        uint64_t v30 = sub_22BE92CD8();
        uint64_t v32 = v31;

        *(void *)(v27 + 56) = MEMORY[0x263F8D310];
        *(void *)(v27 + 64) = sub_22BDF8220();
        *(void *)(v27 + 32) = v30;
        *(void *)(v27 + 40) = v32;
        uint64_t v22 = sub_22BE92CA8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return (id)v22;
      }
      __break(1u);
      goto LABEL_29;
    }
  }
  else if (v56 != 3)
  {
    id v20 = FPItem.collaborationStatus.getter();
    if (v21)
    {
      uint64_t v22 = (uint64_t)v20;

      return (id)v22;
    }
  }
  if (!objc_msgSend(v3, sel_isShared))
  {

    return 0;
  }
  unsigned __int8 v55 = v16;
  uint64_t v22 = sub_22BE08BDC(&v55);
  uint64_t v34 = v33;
  if ((v16 & 1) == 0) {
    goto LABEL_18;
  }
  if (objc_msgSend(v3, sel_isSharedByCurrentUser))
  {
    if (!v34)
    {
      id result = (id)_DocumentManagerBundle();
      if (result)
      {
        os_log_type_t v35 = result;
        uint64_t v22 = sub_22BE91F78();

        return (id)v22;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_18:

    return (id)v22;
  }
  if (v34) {
    goto LABEL_18;
  }
  id v36 = objc_msgSend(v19, sel_preformattedOwnerName);
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = sub_22BE92CD8();
    uint64_t v40 = v39;

    uint64_t v22 = (uint64_t)sub_22BE08FC0(v38, v40, v54);
    swift_bridgeObjectRelease();
    return (id)v22;
  }
  id v41 = objc_msgSend(v3, sel_ownerNameComponents);
  if (v41)
  {
    unint64_t v42 = v41;
    sub_22BE91FD8();

    uint64_t v43 = v53;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v44(v8, v13, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v8, 1, v9) != 1)
    {
      v44(v15, v8, v9);
      char v45 = self;
      uint64_t v46 = (void *)sub_22BE91FC8();
      id v47 = objc_msgSend(v45, sel_localizedStringFromPersonNameComponents_style_options_, v46, 0, 0);

      uint64_t v48 = sub_22BE92CD8();
      uint64_t v50 = v49;

      uint64_t v22 = (uint64_t)sub_22BE08FC0(v48, v50, v54);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v9);
      return (id)v22;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v8, 1, 1, v9);
  }
  sub_22BE035C8((uint64_t)v8, &qword_26AEFFB08);
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    unint64_t v51 = result;
    uint64_t v22 = sub_22BE91F78();

    return (id)v22;
  }
LABEL_30:
  __break(1u);
  return result;
}

void DOCNode.collaborationType.getter(unsigned __int8 *a1@<X8>)
{
  id v3 = DOCNode.documentAttributes.getter();

  if (!v3)
  {
    id v5 = objc_msgSend(v1, sel_fpfs_fpItem);
    if (v5)
    {
      uint64_t v6 = v5;
      FPItem.collaborationStatus.getter();
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      if (v8)
      {
        unsigned __int8 v4 = objc_msgSend(v6, sel_doc_isCollaborationInvitation);

        goto LABEL_8;
      }
    }
    unsigned __int8 v4 = 3;
    goto LABEL_8;
  }
  unsigned __int8 v4 = 2;
LABEL_8:
  *a1 = v4;
}

id DOCNode.documentAttributes.getter()
{
  id v0 = objc_msgSend(self, sel_returnToSender);
  unsigned int v1 = objc_msgSend(v0, sel_isEnabled);

  if (!v1) {
    return 0;
  }
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2)
  {
    self;
    uint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_propertyAsNSObject_, 1869769063);
      if (v10)
      {
        id v4 = v10;
        self;
        id v8 = (id)swift_dynamicCastObjCClass();
        if (v8) {
          return v8;
        }
        goto LABEL_6;
      }
    }
    return 0;
  }
  id v3 = (void *)v2;
  swift_unknownObjectRetain();
  id v4 = objc_msgSend(v3, sel_originatorInfo);
  if (v4)
  {
    uint64_t v5 = sub_22BE921C8();
    unint64_t v7 = v6;

    id v4 = (id)sub_22BE921B8();
    sub_22BE0F178(v5, v7);
  }
  id v8 = objc_msgSend(self, sel_documentAttributesFromData_, v4);
  swift_unknownObjectRelease();
LABEL_6:

  return v8;
}

id FPItem.collaborationStatus.getter()
{
  unsigned int v1 = v0;
  if (qword_26AEFFC28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)qword_26AEFFA60;
  id v3 = sub_22BDDA8C0(v1);

  if (!v3) {
    return 0;
  }
  FPItem.collaborationSenderDisplayName.getter();
  uint64_t v6 = v5;
  if (!v5)
  {

    return 0;
  }
  uint64_t v7 = v4;
  if (objc_msgSend(v3, sel_highlightType)
    || (objc_msgSend(v1, sel_doc_isCollaborationInvitation) & 1) != 0)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v9 = result;
LABEL_9:
      sub_22BE91F78();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_22BE99770;
      *(void *)(v10 + 56) = MEMORY[0x263F8D310];
      *(void *)(v10 + 64) = sub_22BDF8220();
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
      uint64_t v11 = sub_22BE92CA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (id)v11;
    }
    __break(1u);
  }
  else
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v9 = result;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

id sub_22BDDA8C0(void *a1)
{
  uint64_t v3 = sub_22BE92B08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22BE92B58();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_collaborationIdentifier);
  if (!v11)
  {
    if (qword_2684867F0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_22BE925E8();
    __swift_project_value_buffer(v24, (uint64_t)qword_2684879C8);
    id v25 = a1;
    id v26 = sub_22BE925C8();
    os_log_type_t v27 = sub_22BE93148();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      id v29 = (void *)swift_slowAlloc();
      *(_DWORD *)id v28 = 138412290;
      aBlock[0] = v25;
      id v30 = v25;
      sub_22BE93408();
      *id v29 = v25;

      _os_log_impl(&dword_22BDC5000, v26, v27, "No collaboration identifier for item %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v29, -1, -1);
      MEMORY[0x230F57540](v28, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  uint64_t v12 = v11;
  uint64_t v37 = v8;
  uint64_t v38 = v4;
  uint64_t v13 = sub_22BE92CD8();
  uint64_t v15 = v14;
  id v16 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_collaborationIdentifierToHighlightCache], sel_objectForKey_, v12);

  if (!v16)
  {
    uint64_t v31 = (void *)swift_allocObject();
    v31[2] = a1;
    v31[3] = v1;
    v31[4] = v13;
    v31[5] = v15;
    aBlock[4] = sub_22BE22C7C;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22BDD0BA8;
    void aBlock[3] = &block_descriptor_33;
    uint64_t v32 = _Block_copy(aBlock);
    id v33 = a1;
    uint64_t v34 = v1;
    sub_22BE92B38();
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_22BDE107C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v10, v6, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
    swift_release();
    return 0;
  }
  swift_bridgeObjectRelease();
  if (qword_2684867F0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_22BE925E8();
  __swift_project_value_buffer(v17, (uint64_t)qword_2684879C8);
  id v18 = a1;
  uint64_t v19 = sub_22BE925C8();
  os_log_type_t v20 = sub_22BE93148();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    aBlock[0] = v18;
    id v23 = v18;
    sub_22BE93408();
    *uint64_t v22 = v18;

    _os_log_impl(&dword_22BDC5000, v19, v20, "Got collaboration highlight from cache for %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v22, -1, -1);
    MEMORY[0x230F57540](v21, -1, -1);
  }
  else
  {
  }
  return v16;
}

uint64_t sub_22BDDAE9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_22BDDAF48(a1, a2);
  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x263F8EA20] + v3 + 8) - 8) + 8);

  return v4(a1);
}

uint64_t sub_22BDDAF48(uint64_t a1, void *a2)
{
  return sub_22BDDB31C(a1, (uint64_t)a2, *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a2 + 8) + 16));
}

uint64_t sub_22BDDAF88@<X0>(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v20[2] = a3;
  uint64_t v21 = a2;
  uint64_t v7 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  uint64_t v8 = sub_22BE933B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v20 - v13;
  sub_22BDDB20C(v7, (uint64_t)v20 - v13);
  uint64_t v15 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v14, v7);
  }
  v20[1] = v4;
  id v16 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v17 = v16(v14, v8);
  v21(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v12, a4, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v7);
  uint64_t v18 = *(void *)(*MEMORY[0x263F8EA20] + *a1 + 8);
  sub_22BE91C58();
  sub_22BDDB31C((uint64_t)v12, (uint64_t)a1, v18);
  swift_release();
  return v16(v12, v8);
}

uint64_t sub_22BDDB20C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = (uint64_t *)(v2 + qword_268487BF0);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22BE91C58();
    unint64_t v8 = sub_22BDDB784(v7);
    if (v9)
    {
      sub_22BDD854C(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v12);
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  int v10 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v10 ^ 1u, 1, a1);
}

uint64_t sub_22BDDB31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22BE933B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int v10 = (char *)v17 - v9 + 16;
  uint64_t v11 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v8);
  long long v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    swift_beginAccess();
    sub_22BDDC228(a2, v17);
    sub_22BDD473C((uint64_t)v17);
    return swift_endAccess();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a3);
    uint64_t v18 = a3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v13, a3);
    swift_beginAccess();
    sub_22BE91C58();
    sub_22BDDB58C((uint64_t)v17, a2);
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a3);
  }
}

uint64_t sub_22BDDB58C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22BDDBF3C((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_22BDDB640(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_22BDD473C(a1);
    sub_22BDDC228(a2, v7);
    swift_release();
    return sub_22BDD473C((uint64_t)v7);
  }
}

_OWORD *sub_22BDDB640(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_22BDDB784(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22BE1DE60();
      goto LABEL_7;
    }
    sub_22BDDB928(v13, a3 & 1);
    unint64_t v19 = sub_22BDDB784(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      id v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_22BE934C8();
    id result = (_OWORD *)sub_22BE93958();
    __break(1u);
    return result;
  }
LABEL_7:
  id v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    return sub_22BDDBF3C(a1, v17);
  }
LABEL_13:
  sub_22BDDB8C0(v10, a2, a1, v16);

  return (_OWORD *)sub_22BE91C58();
}

unint64_t sub_22BDDB784(uint64_t a1)
{
  sub_22BE934C8();
  uint64_t v2 = sub_22BE92C48();
  return sub_22BDDB7F4(a1, v2);
}

unint64_t sub_22BDDB7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_22BE934C8();
    do
    {
      if (sub_22BE92C68()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

_OWORD *sub_22BDDB8C0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  id result = sub_22BDDBF3C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_22BDDB928(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004F8);
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_22BE91C58();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v31) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v32 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v32 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v31)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v32 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v31) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v32 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (a2)
    {
      sub_22BDDBF3C(v22, v33);
    }
    else
    {
      sub_22BDD854C((uint64_t)v22, (uint64_t)v33);
      sub_22BE91C58();
    }
    sub_22BE934C8();
    uint64_t result = sub_22BE92C48();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_22BDDBF3C(v33, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

UIFont __swiftcall UIFont.doc_withFeatureMonospacedDigits()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00530);
  uint64_t inited = swift_initStackObject();
  uint64_t v2 = MEMORY[0x263F8D6C8];
  uint64_t v3 = (void *)*MEMORY[0x263F83550];
  *(void *)(inited + 32) = *MEMORY[0x263F83550];
  *(void *)(inited + 40) = 6;
  unint64_t v4 = (void **)MEMORY[0x263F83538];
  *(_OWORD *)(inited + 16) = xmmword_22BE97A30;
  uint64_t v5 = *v4;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 104) = v2;
  *(void *)(inited + 80) = 0;
  id v6 = v3;
  id v7 = v5;
  unint64_t v8 = sub_22BDDC348(inited);
  id v9 = objc_msgSend(v0, sel_fontDescriptor);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00538);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_22BE99770;
  uint64_t v11 = (void *)*MEMORY[0x263F81748];
  *(void *)(v10 + 32) = *MEMORY[0x263F81748];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00510);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22BE99770;
  *(void *)(v12 + 32) = v8;
  *(void *)(v10 + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF002E8);
  *(void *)(v10 + 40) = v12;
  id v13 = v11;
  sub_22BDDC320(v10);
  type metadata accessor for AttributeName(0);
  sub_22BDDC1D0();
  unint64_t v14 = (void *)sub_22BE92BE8();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v9, sel_fontDescriptorByAddingAttributes_, v14);

  id v16 = objc_msgSend(self, sel_fontWithDescriptor_size_, v15, 0.0);
  return (UIFont)v16;
}

unint64_t sub_22BDDBE0C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_22BE93828();
  unint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  sub_22BE91C58();
  while (1)
  {
    sub_22BDDC158(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_22BDDBF3C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_22BDDBF3C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_22BDDBF4C(uint64_t a1)
{
  sub_22BE92CD8();
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t v2 = sub_22BE93A48();
  swift_bridgeObjectRelease();
  return sub_22BDDBFE0(a1, v2);
}

unint64_t sub_22BDDBFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_22BE92CD8();
    uint64_t v8 = v7;
    if (v6 == sub_22BE92CD8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_22BE92CD8();
          uint64_t v15 = v14;
          if (v13 == sub_22BE92CD8() && v15 == v16) {
            break;
          }
          char v18 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_22BDDC158(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

unint64_t sub_22BDDC1D0()
{
  unint64_t result = qword_26AF00430;
  if (!qword_26AF00430)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF00430);
  }
  return result;
}

double sub_22BDDC228@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22BDDB784(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22BE1DE60();
      uint64_t v9 = v11;
    }
    swift_release();
    sub_22BDDBF3C((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_22BDE08FC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_22BDDC320(uint64_t a1)
{
  return sub_22BDDBE0C(a1, &qword_26AF004F0, &qword_26AF00458, (uint64_t (*)(uint64_t))sub_22BDDBFDC);
}

unint64_t sub_22BDDC348(uint64_t a1)
{
  return sub_22BDDBE0C(a1, &qword_26AF004E8, (uint64_t *)&unk_26AF00420, (uint64_t (*)(uint64_t))sub_22BDDBFDC);
}

uint64_t sub_22BDDC370(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void DOCItemSortDescriptor.init(type:isReversed:)(unsigned __int8 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  LOBYTE(v3) = a2;
  uint64_t v97 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684885B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE97A30;
  uint64_t v93 = (char *)inited;
  *(void *)(inited + 32) = 0x706E616D646E616DLL;
  id v7 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v8 = (void *)sub_22BE92C98();
  id v92 = objc_msgSend(v7, sel_initWithKey_ascending_, v8, 1);

  switch(v5)
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_22BE9BDA0;
      id v25 = objc_allocWithZone(MEMORY[0x263F08B30]);
      char v26 = (void *)sub_22BE92C98();
      id v27 = objc_msgSend(v25, (SEL)&selRef_localizedStandardTagsCompareNode_ + 7, v26, 0);

      *(void *)(v24 + 32) = v27;
      id v28 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v29 = (void *)sub_22BE92C98();
      id v30 = objc_msgSend(v28, sel_initWithKey_ascending_selector_, v29, 1, sel_localizedStandardCompare_);

      *(void *)(v24 + 40) = v30;
      id v31 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v32 = (void *)sub_22BE92C98();
      id v33 = objc_msgSend(v31, sel_initWithKey_ascending_selector_, v32, 1, sel_localizedStandardCompare_);

      long long v19 = v92;
      *(void *)(v24 + 48) = v33;
      *(void *)(v24 + 56) = v92;
      uint64_t v96 = v24;
      sub_22BE92ED8();
      unint64_t v20 = v24;
      id v34 = v92;
      unint64_t v22 = 3;
      uint64_t v23 = sub_22BDDD42C((char *)1, 3, 1, v93);
      *((void *)v23 + 2) = 3;
      *((_DWORD *)v23 + 10) = 1819632756;
      goto LABEL_15;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_22BE9D4A0;
      id v36 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v37 = (void *)sub_22BE92C98();
      unint64_t v22 = (unint64_t)&selRef_isUploading;
      id v38 = objc_msgSend(v36, sel_initWithKey_ascending_selector_, v37, 1, sel_localizedStandardCompare_);

      *(void *)(v35 + 32) = v38;
      id v39 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v40 = (void *)sub_22BE92C98();
      id v41 = objc_msgSend(v39, sel_initWithKey_ascending_selector_, v40, 1, sel_localizedStandardCompare_);

      long long v19 = v92;
      *(void *)(v35 + 40) = v41;
      *(void *)(v35 + 48) = v92;
      uint64_t v96 = v35;
      sub_22BE92ED8();
      unint64_t v20 = v35;
      id v42 = v92;
      goto LABEL_14;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_22BE9BDA0;
      id v44 = objc_allocWithZone(MEMORY[0x263F08B30]);
      char v45 = (void *)sub_22BE92C98();
      id v46 = objc_msgSend(v44, sel_initWithKey_ascending_selector_, v45, 1, sel_localizedStandardTagsCompareNode_);

      *(void *)(v43 + 32) = v46;
      id v47 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v48 = (void *)sub_22BE92C98();
      id v49 = objc_msgSend(v47, sel_initWithKey_ascending_selector_, v48, 1, sel_localizedStandardCompare_);

      *(void *)(v43 + 40) = v49;
      id v50 = objc_allocWithZone(MEMORY[0x263F08B30]);
      unint64_t v51 = (void *)sub_22BE92C98();
      id v52 = objc_msgSend(v50, sel_initWithKey_ascending_selector_, v51, 1, sel_localizedStandardCompare_);

      long long v19 = v92;
      *(void *)(v43 + 48) = v52;
      *(void *)(v43 + 56) = v92;
      uint64_t v96 = v43;
      sub_22BE92ED8();
      unint64_t v20 = v43;
      id v53 = v92;
      unint64_t v22 = 3;
      uint64_t v23 = sub_22BDDD42C((char *)1, 3, 1, v93);
      *((void *)v23 + 2) = 3;
      *((_DWORD *)v23 + 10) = 1718903156;
      goto LABEL_15;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_22BE9BDA0;
      id v55 = objc_allocWithZone(MEMORY[0x263F08B30]);
      unsigned __int8 v56 = (void *)sub_22BE92C98();
      id v57 = objc_msgSend(v55, (SEL)&selRef_localizedStandardTagsCompareNode_ + 7, v56, 0);

      *(void *)(v54 + 32) = v57;
      id v58 = objc_allocWithZone(MEMORY[0x263F08B30]);
      v59 = (void *)sub_22BE92C98();
      id v60 = objc_msgSend(v58, sel_initWithKey_ascending_selector_, v59, 1, sel_localizedStandardCompare_);

      *(void *)(v54 + 40) = v60;
      id v61 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v62 = (void *)sub_22BE92C98();
      id v63 = objc_msgSend(v61, sel_initWithKey_ascending_selector_, v62, 1, sel_localizedStandardCompare_);

      long long v19 = v92;
      *(void *)(v54 + 48) = v63;
      *(void *)(v54 + 56) = v92;
      uint64_t v96 = v54;
      sub_22BE92ED8();
      unint64_t v20 = v54;
      id v64 = v92;
      uint64_t v23 = sub_22BDDD42C((char *)1, 4, 1, v93);
      unint64_t v22 = *((void *)v23 + 2);
      unint64_t v65 = *((void *)v23 + 3);
      int64_t v66 = v65 >> 1;
      int64_t v67 = v22 + 1;
      if (v65 >> 1 > v22) {
        goto LABEL_7;
      }
      goto LABEL_30;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_22BE9BDA0;
      id v69 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v70 = (void *)sub_22BE92C98();
      id v71 = objc_msgSend(v69, sel_initWithKey_ascending_selector_, v70, 1, sel__doc_fileTypeCompare_);

      *(void *)(v68 + 32) = v71;
      id v72 = objc_allocWithZone(MEMORY[0x263F08B30]);
      id v73 = (void *)sub_22BE92C98();
      id v74 = objc_msgSend(v72, sel_initWithKey_ascending_selector_, v73, 1, sel_localizedStandardCompare_);

      *(void *)(v68 + 40) = v74;
      id v75 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v76 = (void *)sub_22BE92C98();
      id v77 = objc_msgSend(v75, sel_initWithKey_ascending_selector_, v76, 1, sel_localizedStandardCompare_);

      long long v19 = v92;
      *(void *)(v68 + 48) = v77;
      *(void *)(v68 + 56) = v92;
      uint64_t v96 = v68;
      sub_22BE92ED8();
      unint64_t v20 = v68;
      id v78 = v92;
      unint64_t v22 = 3;
      uint64_t v23 = sub_22BDDD42C((char *)1, 3, 1, v93);
      *((void *)v23 + 2) = 3;
      *((_DWORD *)v23 + 10) = 1802071652;
      goto LABEL_15;
    case 6:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_22BE9B530;
      id v80 = objc_allocWithZone(MEMORY[0x263F08B30]);
      int v81 = (void *)sub_22BE92C98();
      id v82 = objc_msgSend(v80, sel_initWithKey_ascending_selector_, v81, 1, sel_localizedStandardCompare_);

      *(void *)(v79 + 32) = v82;
      *(void *)(v79 + 40) = v92;
      uint64_t v96 = v79;
      sub_22BE92ED8();
      unint64_t v20 = v79;
      unint64_t v22 = qword_26AF00288;
      id v83 = v92;
      if (v22 != -1) {
        swift_once();
      }
      sub_22BE93168();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
      uint64_t v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_22BE99770;
      *(void *)(v84 + 56) = MEMORY[0x263F8D310];
      *(void *)(v84 + 64) = sub_22BDF8220();
      *(void *)(v84 + 32) = 0xD000000000000016;
      *(void *)(v84 + 40) = 0x800000022BEA5AF0;
      sub_22BE92588();
      swift_bridgeObjectRelease();
      long long v19 = v92;
LABEL_14:
      uint64_t v23 = v93;
      goto LABEL_15;
    default:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_22BE9BDA0;
      id v10 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v11 = (void *)sub_22BE92C98();
      id v12 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 0);

      *(void *)(v9 + 32) = v12;
      id v13 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v14 = (void *)sub_22BE92C98();
      id v15 = objc_msgSend(v13, sel_initWithKey_ascending_selector_, v14, 1, sel_localizedStandardCompare_);

      *(void *)(v9 + 40) = v15;
      id v16 = objc_allocWithZone(MEMORY[0x263F08B30]);
      uint64_t v17 = (void *)sub_22BE92C98();
      id v18 = objc_msgSend(v16, sel_initWithKey_ascending_selector_, v17, 1, sel_localizedStandardCompare_);

      long long v19 = v92;
      *(void *)(v9 + 48) = v18;
      *(void *)(v9 + 56) = v92;
      uint64_t v96 = v9;
      sub_22BE92ED8();
      unint64_t v20 = v9;
      id v21 = v92;
      unint64_t v22 = 3;
      uint64_t v23 = sub_22BDDD42C((char *)1, 3, 1, v93);
      *((void *)v23 + 2) = 3;
      *((_DWORD *)v23 + 10) = 1836016740;
      break;
  }
  while (1)
  {
LABEL_15:
    uint64_t v85 = swift_bridgeObjectRetain();
    uint64_t v86 = sub_22BDDD06C(v85);
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      if (!v3)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        unint64_t v20 = MEMORY[0x263F8EE78];
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v3) {
        goto LABEL_27;
      }
    }
    unint64_t v95 = MEMORY[0x263F8EE78];
    int64_t v67 = (int64_t)&v95;
    sub_22BE936E8();
    if ((v3 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_30:
    uint64_t v23 = sub_22BDDD42C((char *)(v65 > 1), v67, 1, v23);
    unint64_t v65 = *((void *)v23 + 3);
    int64_t v66 = v65 >> 1;
LABEL_7:
    *((void *)v23 + 2) = v67;
    *(_DWORD *)&v23[4 * v22 + 32] = 1819240307;
    if (v66 < (uint64_t)(v22 + 2)) {
      uint64_t v23 = sub_22BDDD42C((char *)(v65 > 1), v22 + 2, 1, v23);
    }
    *((void *)v23 + 2) = v22 + 2;
    *(_DWORD *)&v23[4 * v67 + 32] = 1885895027;
  }
  uint64_t v87 = 0;
  do
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v88 = (id)MEMORY[0x230F56140](v87, v20);
    }
    else {
      id v88 = *(id *)(v20 + 8 * v87 + 32);
    }
    id v89 = v88;
    ++v87;
    id v90 = objc_msgSend(v88, sel_reversedSortDescriptor);
    sub_22BE934B8();
    swift_unknownObjectRelease();
    sub_22BE7DF0C();
    swift_dynamicCast();

    sub_22BE936B8();
    sub_22BE936F8();
    sub_22BE93708();
    sub_22BE936C8();
  }
  while (v3 != v87);
  unint64_t v91 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v20 = v91;
LABEL_28:
  *(unsigned char *)a3 = v5;
  *(void *)(a3 + 8) = v20;
  *(void *)(a3 + 16) = v86;
  *(unsigned char *)(a3 + 24) = a2;
}

uint64_t sub_22BDDD06C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for FINodeProperty(0);
  sub_22BDDD3E4(&qword_268486F78, type metadata accessor for FINodeProperty);
  uint64_t result = sub_22BE93058();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_22BDDD118(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_22BDDD118(_DWORD *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_22BE939F8();
  sub_22BE93A28();
  uint64_t v6 = sub_22BE93A48();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_22BDDD238(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v9 + 4 * v8) != a2);
  }
  uint64_t result = 0;
  LODWORD(a2) = *(_DWORD *)(*(void *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_22BDDD238(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_22BE54280();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_22BE5573C();
      goto LABEL_14;
    }
    sub_22BE55F84();
  }
  uint64_t v8 = *v3;
  sub_22BE939F8();
  sub_22BE93A28();
  uint64_t result = sub_22BE93A48();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for FINodeProperty(0);
      uint64_t result = sub_22BE93948();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_22BDDD388(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for FINodeProperty(uint64_t a1)
{
}

uint64_t sub_22BDDD3E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_22BDDD42C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2684885B0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_22BE7DE20(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.fpfs_fetchAllFPItems(completion:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = MEMORY[0x263F8EE78];
  unint64_t v20 = (void *)(v6 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487070);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  uint64_t v8 = dispatch_group_create();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  uint64_t v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x230F55A40](v10, a4)) {
    goto LABEL_10;
  }
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t v12 = v11 - 4;
    char v13 = sub_22BE92F38();
    sub_22BE92EE8();
    if ((v13 & 1) == 0) {
      break;
    }
    swift_unknownObjectRetain();
    uint64_t v14 = v11 - 3;
    if (__OFADD__(v12, 1)) {
      goto LABEL_9;
    }
LABEL_5:
    dispatch_group_enter(v8);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v9;
    v15[3] = v7;
    v15[4] = v6;
    v15[5] = v8;
    sub_22BE91C58();
    sub_22BE91C58();
    sub_22BE91C58();
    id v16 = v8;
    DOCNode.fpfs_fetchFPItem(completion:)((uint64_t)sub_22BDDF274, (uint64_t)v15);
    swift_unknownObjectRelease();
    swift_release();
    ++v11;
    if (v14 == MEMORY[0x230F55A40](a3, a4)) {
      goto LABEL_10;
    }
  }
  sub_22BE93678();
  uint64_t v14 = v11 - 3;
  if (!__OFADD__(v12, 1)) {
    goto LABEL_5;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  swift_bridgeObjectRelease();
  sub_22BE93198();
  swift_beginAccess();
  if (*v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v17 == MEMORY[0x230F55A10](a3, a4))
  {
    uint64_t v18 = swift_bridgeObjectRetain();
    a1(v18);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    a1(0);
    swift_release();
    swift_release();
  }

  return swift_release();
}

void DOCNode.fpfs_fetchFPItem(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v7[4] = sub_22BDDF248;
  v7[5] = v5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_22BDDF270;
  v7[3] = &block_descriptor_3;
  uint64_t v6 = _Block_copy(v7);
  sub_22BE91C58();
  swift_release();
  objc_msgSend(v2, sel_fetchFPItem_, v6);
  _Block_release(v6);
}

void sub_22BDDF1BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_22BE91C58();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_22BDDF248()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_22BDDF274(void *a1)
{
  sub_22BDDF280(a1, *(void *)(v1 + 16), *(os_unfair_lock_s **)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40));
}

void sub_22BDDF280(void *a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t a4, NSObject *a5)
{
  BOOL v10 = a1 == 0;
  swift_beginAccess();
  *(unsigned char *)(a2 + 16) = v10;
  if (a1)
  {
    uint64_t v11 = a3 + 4;
    id v12 = a1;
    os_unfair_lock_lock(v11);
    swift_beginAccess();
    id v13 = v12;
    MEMORY[0x230F55950]();
    if (*(void *)((*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_22BE92EF8();
    sub_22BE92F48();
    sub_22BE92ED8();
    swift_endAccess();
    os_unfair_lock_unlock(v11);
  }
  dispatch_group_leave(a5);
}

uint64_t sub_22BDDF380(uint64_t a1)
{
  return sub_22BDDF388(a1, *(void **)(v1 + 16));
}

uint64_t sub_22BDDF388(uint64_t a1, void *a2)
{
  *a2 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_22BE932C8();
}

uint64_t static Logger.DocumentManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_2684867F0, (uint64_t)qword_2684879C8, a1);
}

uint64_t sub_22BDDF414(uint64_t a1)
{
  unint64_t v2 = sub_22BDDF450();

  return MEMORY[0x270EE0D28](a1, v2);
}

unint64_t sub_22BDDF450()
{
  unint64_t result = qword_268487628;
  if (!qword_268487628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487628);
  }
  return result;
}

uint64_t sub_22BDDF4A4(uint64_t a1)
{
  unint64_t v2 = sub_22BDDF4E0();

  return MEMORY[0x270EE0D28](a1, v2);
}

unint64_t sub_22BDDF4E0()
{
  unint64_t result = qword_2684873F0;
  if (!qword_2684873F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684873F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCItemSortMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_22BE91C58();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

Swift::Void __swiftcall Array.remove(upTo:)(Swift::Int upTo)
{
  if (upTo >= 1)
  {
    uint64_t v2 = v1;
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x270F9E248](upTo, v2, WitnessTable);
  }
}

ValueMetadata *type metadata accessor for DOCTraitChangeObservingOptions()
{
  return &type metadata for DOCTraitChangeObservingOptions;
}

id updatePointsOfInterestHandler.getter()
{
  return sub_22BDCD8A4(&qword_26AF00228, (void **)&qword_26AEFFA88);
}

uint64_t dispatch thunk of DOCTypeToFocusController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

void *DOCAssertionCollection.init(debugName:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a2;
  v4[2] = MEMORY[0x263F8EE78];
  v4[3] = a3;
  v4[4] = a4;
  v4[5] = a1;
  return v4;
}

uint64_t UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BDD3344(a1, a2, a3, a4, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

BOOL DOCTabSwitcherStyle.showsTabs.getter(uint64_t a1)
{
  return a1 != 0;
}

uint64_t type metadata accessor for NSNotification.SubscriptionsController()
{
  return __swift_instantiateGenericMetadata();
}

void sub_22BDDF96C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static Logger.Application.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486858, (uint64_t)qword_268487B00, a1);
}

id static DOCLog.Source.getter()
{
  return sub_22BDCD8A4(&qword_26AF002A0, (void **)&qword_26AEFFAD0);
}

uint64_t type metadata accessor for DOCThreadSafeState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Optional.isEqualTo(node:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  BOOL v10 = (char *)&v17 - v9;
  MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    char v15 = a1 == 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v12, v3);
    if (a1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268487058);
      swift_dynamicCast();
      char v15 = DOCNode.isEqualTo(node:)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      char v15 = 0;
    }
  }
  return v15 & 1;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v16 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    uint64_t v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487058);
    swift_dynamicCast();
    uint64_t v14 = DOCNode.isEqualTo(node:)();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  return v14 & 1;
}

uint64_t UIViewController.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BDD3344(a1, a2, a3, a4, 0, 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

NSDirectionalEdgeInsets __swiftcall UIEdgeInsets.asDirectionalEdgeInsets(RTL:)(Swift::Bool RTL)
{
  if (RTL) {
    double v3 = v2;
  }
  else {
    double v3 = v1;
  }
  if (RTL) {
    double v2 = v1;
  }
  double v4 = v3;
  result.trailing = v2;
  result.leading = v4;
  return result;
}

uint64_t static Logger.Tests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486838, (uint64_t)qword_268487AA0, a1);
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.subscript.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.subscript.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t sub_22BDDFD14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22BDDB20C(*(void *)(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8) + 16), a2);
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent()
{
  return &type metadata for DOCAnalyticsActionEvent;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.ViewMode()
{
  return &type metadata for DOCAnalyticsActionEvent.ViewMode;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.Source()
{
  return &type metadata for DOCAnalyticsActionEvent.Source;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.FileProvider()
{
  return &type metadata for DOCAnalyticsActionEvent.FileProvider;
}

uint64_t sub_22BDDFDD4(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.Action()
{
  return &type metadata for DOCAnalyticsActionEvent.Action;
}

uint64_t dispatch thunk of DOCAssertionCollection.invalidateAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

ValueMetadata *type metadata accessor for DOCSplitViewState()
{
  return &type metadata for DOCSplitViewState;
}

uint64_t dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

ValueMetadata *type metadata accessor for DOCICloudRootNode.ThreadSafeRootNodes()
{
  return &type metadata for DOCICloudRootNode.ThreadSafeRootNodes;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t objectdestroyTm()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t objectdestroyTm_0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t objectdestroy_26Tm()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t objectdestroy_23Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void sub_22BDE078C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_22BDD5734(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_22BE1E548();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_22BE1C604(v15, a4 & 1);
  unint64_t v20 = sub_22BDD5734(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_22BE93958();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v18[2] = v25;

  swift_bridgeObjectRetain();
}

unint64_t sub_22BDE08FC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    __n128 result = sub_22BE934F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      sub_22BE934C8();
      do
      {
        __n128 result = sub_22BE92C48();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= (uint64_t)v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(a2 + 48);
            BOOL v14 = (void *)(v13 + 8 * v3);
            uint64_t v15 = (void *)(v13 + 8 * v6);
            if (v3 != v6 || v14 >= v15 + 1) {
              void *v14 = *v15;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            uint64_t v17 = (_OWORD *)(v16 + 32 * v3);
            uint64_t v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 2))
            {
              long long v9 = v18[1];
              *uint64_t v17 = *v18;
              v17[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v10 >= v8 || v3 >= (uint64_t)v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_22BDE0ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDC9DDC(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_22BDE0AEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BDE0BE0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_22BE5452C();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_22BE558D4();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_22BE56200();
  }
  uint64_t v9 = *v3;
  sub_22BE92CD8();
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t v10 = sub_22BE93A48();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_22BE92CD8();
  uint64_t v14 = v13;
  if (v12 == sub_22BE92CD8() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_22BE92CD8();
      uint64_t v21 = v20;
      if (v19 == sub_22BE92CD8() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for FPProviderID(0);
  uint64_t result = sub_22BE93948();
  __break(1u);
  return result;
}

uint64_t sub_22BDE0E10()
{
  return sub_22BDDC370(&qword_268486BA0, type metadata accessor for FINodeProperty);
}

uint64_t sub_22BDE0E58(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_22BDE0E70()
{
  unint64_t result = qword_268486FE8;
  if (!qword_268486FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486FE8);
  }
  return result;
}

unint64_t sub_22BDE0EC4()
{
  unint64_t result = qword_268486FE0;
  if (!qword_268486FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486FE0);
  }
  return result;
}

uint64_t sub_22BDE0F18()
{
  return sub_22BDDC370((unint64_t *)&unk_26AF00440, type metadata accessor for AttributeName);
}

uint64_t sub_22BDE0F60()
{
  return sub_22BDDC370(&qword_268486C00, type metadata accessor for DOCDocumentSourceIdentifier);
}

void type metadata accessor for DOCDocumentSourceIdentifier(uint64_t a1)
{
}

void type metadata accessor for DOCUIPDocumentLandingMode(uint64_t a1)
{
}

void type metadata accessor for DOCTabSwitcherStyle(uint64_t a1)
{
}

uint64_t sub_22BDE0FE8()
{
  uint64_t result = sub_22BE92C98();
  qword_26AEFFAF8 = result;
  return result;
}

id static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.getter()
{
  if (qword_26AF00400 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AEFFAF8;

  return v0;
}

uint64_t sub_22BDE107C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_22BDE10F8()
{
  uint64_t v0 = sub_22BE92278();
  MEMORY[0x270FA5388](v0);
  uint64_t result = sub_22BDE1BD4(&v2);
  qword_26AEFFAE8 = (uint64_t)v2;
  return result;
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_22BDE1270()
{
  return sub_22BDDC370(&qword_26AF00320, type metadata accessor for FPProviderID);
}

void type metadata accessor for FPProviderID(uint64_t a1)
{
}

uint64_t sub_22BDE12CC(uint64_t a1)
{
  uint64_t result = sub_22BDE138C(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  unint64_t v5 = (void *)sub_22BDE133C(result, v3, 0, a1);
  id v6 = v5;
  return (uint64_t)v5;
}

uint64_t sub_22BDE133C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_22BDE138C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_22BDE142C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_22BE938C8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_22BE938C8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22BDE14F4(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487AE8);
}

uint64_t sub_22BDE1518(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487A70);
}

uint64_t static Logger.Rename.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486828, (uint64_t)qword_268487A70, a1);
}

uint64_t sub_22BDE1558(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487AA0);
}

uint64_t sub_22BDE1574(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_2684879E0);
}

uint64_t sub_22BDE1588(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487A88);
}

uint64_t sub_22BDE15A8(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B30);
}

uint64_t sub_22BDE15D0(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B00);
}

uint64_t sub_22BDE15F8(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487AD0);
}

uint64_t sub_22BDE161C(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B60);
}

uint64_t static Logger.AppIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486878, (uint64_t)qword_268487B60, a1);
}

uint64_t sub_22BDE1664(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_2684879C8);
}

ValueMetadata *type metadata accessor for SetFilenameExtensionVisibilityIntent()
{
  return &type metadata for SetFilenameExtensionVisibilityIntent;
}

unint64_t sub_22BDE16A0()
{
  unint64_t result = qword_268487988;
  if (!qword_268487988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487988);
  }
  return result;
}

unint64_t sub_22BDE16F4()
{
  unint64_t result = qword_268487990;
  if (!qword_268487990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487990);
  }
  return result;
}

uint64_t sub_22BDE1750(uint64_t a1, uint64_t a2)
{
  return sub_22BDCD008(a1, a2, (uint64_t *)&unk_268487168);
}

uint64_t == infix(_:_:)(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = a2 >> 62;
  if (!(a2 >> 62))
  {
    if (v5 == *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v5 != v11) {
    return 0;
  }
LABEL_5:
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_22BE937E8();
    uint64_t v7 = result;
    if (!result)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_40;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t result = MEMORY[0x230F56140](0, a1);
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
    if (!v6) {
      goto LABEL_12;
    }
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22BE937E8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v10)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return 1;
    }
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_47;
  }
  uint64_t result = swift_unknownObjectRetain();
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v6) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    goto LABEL_39;
  }
LABEL_19:
  unint64_t v12 = 0;
  uint64_t v16 = v7 - 1;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      MEMORY[0x230F56140](v12, a2);
    }
    else
    {
      if (v12 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_45;
      }
      swift_unknownObjectRetain();
    }
    self;
    if (swift_dynamicCastObjCClass() && (self, swift_dynamicCastObjCClass()))
    {
      uint64_t v13 = (unint64_t *)&qword_26AF00490;
    }
    else
    {
      self;
      if (!swift_dynamicCastObjCClass() || (self, !swift_dynamicCastObjCClass()))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return 0;
      }
      uint64_t v13 = (unint64_t *)&unk_26AF00470;
    }
    sub_22BDD9D50(0, v13);
    swift_unknownObjectRetain();
    char v14 = sub_22BE93328();
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease_n();
    if ((v14 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v16 == v12) {
      goto LABEL_40;
    }
    unint64_t v15 = v12 + 1;
    if ((a1 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t result = MEMORY[0x230F56140](v12 + 1, a1);
    if (__OFADD__(v15, 1)) {
      goto LABEL_44;
    }
LABEL_38:
    if (v10 == ++v12) {
      goto LABEL_39;
    }
  }
  if (v15 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_46;
  }
  uint64_t result = swift_unknownObjectRetain();
  if (!__OFADD__(v15, 1)) {
    goto LABEL_38;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DOCUIPHorizontalInsetTrait()
{
  return &type metadata for DOCUIPHorizontalInsetTrait;
}

unint64_t sub_22BDE1B54()
{
  unint64_t result = qword_2684871A0;
  if (!qword_2684871A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684871A0);
  }
  return result;
}

uint64_t sub_22BDE1BA8(uint64_t a1, uint64_t a2)
{
  return sub_22BDCD008(a1, a2, (uint64_t *)&unk_268487150);
}

void sub_22BDE1BB8()
{
  qword_268487160 = 0;
}

uint64_t sub_22BDE1BD4@<X0>(char **a1@<X8>)
{
  return sub_22BDCE948(&qword_26AF003C8, a1);
}

uint64_t static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_22BE92278();
  MEMORY[0x270FA5388](v2);
  uint64_t result = sub_22BDCED4C(&v4);
  *a1 = v4;
  return result;
}

ValueMetadata *type metadata accessor for DOCUserActivityIdentifier()
{
  return &type metadata for DOCUserActivityIdentifier;
}

uint64_t sub_22BDE1D74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22BDE1DD4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_22BDE1DEC(uint64_t a1, uint64_t a2)
{
  return sub_22BDCD008(a1, a2, (uint64_t *)&unk_268487140);
}

uint64_t destroy for DOCAnalyticsActionEvent()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BDE1E38()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22BDE1E68()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t (*sub_22BDE1E98())()
{
  long long v1 = v0[1];
  long long v5 = *v0;
  v6[0] = v1;
  *(void *)((char *)v6 + 15) = *(void *)((char *)v0 + 31);
  uint64_t v2 = swift_allocObject();
  long long v3 = v0[1];
  *(_OWORD *)(v2 + 16) = *v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 47) = *(void *)((char *)v0 + 31);
  sub_22BDCA53C((uint64_t)&v5);
  return sub_22BDE1FE4;
}

unsigned char *_s26DocumentManagerExecutables23DOCAnalyticsActionEventV6SourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unint64_t sub_22BDE1FE4()
{
  return sub_22BDCB108();
}

void sub_22BDE2020()
{
  off_26AF00178 = (_UNKNOWN *)MEMORY[0x263F8EE78];
}

ValueMetadata *type metadata accessor for SetGroupingModeIntent()
{
  return &type metadata for SetGroupingModeIntent;
}

unint64_t sub_22BDE2044()
{
  unint64_t result = qword_268487470;
  if (!qword_268487470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487470);
  }
  return result;
}

unint64_t sub_22BDE2098()
{
  unint64_t result = qword_268487478;
  if (!qword_268487478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487478);
  }
  return result;
}

uint64_t DOCItemSortDescriptor.nodePropertiesAffectingSort.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s26DocumentManagerExecutables17DOCSplitViewStateV4ImplVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    uint64_t v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
    if (v2 != 2)
    {
      uint64_t v3 = *(void *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8);
      *(unsigned char *)a2 = v2 & 1;
      *(void *)(a2 + 8) = v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_22BDE2178()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00078);
  swift_allocObject();
  unint64_t result = sub_22BDCD640(0, 0, 0, 0);
  off_26AEFFFC0 = result;
  return result;
}

uint64_t sub_22BDE21CC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (v3) {
    return (uint64_t)[v3 *a3];
  }
  else {
    return 1;
  }
}

uint64_t DOCICloudRootNode.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDC9AE4((uint64_t *)&unk_26AEFFB10, (SEL *)&selRef_fileURL, MEMORY[0x263F06E90], MEMORY[0x263F06EA8], a1);
}

id sub_22BDE227C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (result) {
    return [result *a3];
  }
  return result;
}

uint64_t static DOCUSBFormatting.shared.getter()
{
  if (qword_26AEFFE28 != -1) {
    swift_once();
  }

  return sub_22BE91C58();
}

uint64_t dispatch thunk of DOCUSBFormatting.hasOperations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

BOOL sub_22BDE2324()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v1 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 > 0;
}

ValueMetadata *type metadata accessor for DOCNodeType()
{
  return &type metadata for DOCNodeType;
}

uint64_t type metadata accessor for DOCOperationManager()
{
  return self;
}

void sub_22BDE2464()
{
  sub_22BDD1CB4((void *)(v0 + 16));
}

uint64_t sub_22BDE2470()
{
  return sub_22BDCA574((void *)(v0 + 16), *(void **)(v0 + 56));
}

uint64_t sub_22BDE2480()
{
  return sub_22BDCD28C(*(char **)(v0 + 16), v0 + 24);
}

id static DOCAnalyticsManager.shared.getter()
{
  if (qword_26AEFFB30 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AEFFA50;

  return v0;
}

Swift::Void __swiftcall DOCAnalyticsManager.sendActionEvent(_:)(DocumentManagerExecutables::DOCAnalyticsActionEvent *a1)
{
  Swift::String_optional bundleID = a1->bundleID;
  Swift::String name = a1->name;
  v4[0] = bundleID;
  *(void *)((char *)v4 + 15) = *(void **)((char *)&a1->bundleID.value._object + 7);
  sub_22BDCA53C((uint64_t)&name);
  sub_22BDD1974((uint64_t)&name, v1);
  sub_22BDC91E0((uint64_t)&name);
}

uint64_t sub_22BDE2530(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_268488728);
}

uint64_t static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_268486928, (uint64_t)qword_268488728, a1);
}

uint64_t sub_22BDE2578(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_2684886F8);
}

uint64_t static UTType.docOfficeOpenXMLMacroEnabledWordProcessing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_268486918, (uint64_t)qword_2684886F8, a1);
}

uint64_t sub_22BDE25C0(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_268488710);
}

uint64_t static UTType.docOfficeOpenXMLWordProcessingTemplate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_268486920, (uint64_t)qword_268488710, a1);
}

uint64_t sub_22BDE2608(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_2684886B0);
}

uint64_t static UTType.docMSOfficeWordProcessingTemplate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_268486900, (uint64_t)qword_2684886B0, a1);
}

uint64_t sub_22BDE2650(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_2684886E0);
}

uint64_t static UTType.docOfficeOpenXMLWordProcessing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_268486910, (uint64_t)qword_2684886E0, a1);
}

uint64_t sub_22BDE2698(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_2684886C8);
}

uint64_t static UTType.docMSOfficeXMLWordProcessing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_268486908, (uint64_t)qword_2684886C8, a1);
}

uint64_t sub_22BDE26E0(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_268488698);
}

uint64_t static UTType.docMSOfficeWordProcessing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_2684868F8, (uint64_t)qword_268488698, a1);
}

uint64_t sub_22BDE2728(uint64_t a1)
{
  return sub_22BDD0834(a1, qword_268488650);
}

uint64_t static UTType.docWatchface.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDCFAF8(&qword_2684868E0, (uint64_t)qword_268488650, a1);
}

uint64_t sub_22BDE2770(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t DOCVibrancyFeatureEnabled()
{
  return objc_msgSend(MEMORY[0x263F82E00], "swift_docVibrancyFeatureEnabled");
}

id DOCLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC28];
  uint64_t v1 = (void *)*MEMORY[0x263F3AC28];
  if (!*MEMORY[0x263F3AC28])
  {
    DOCInitLogging();
    uint64_t v1 = *v0;
  }

  return v1;
}

void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

DOCTagCheckableDotView *dotViewForColor(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = objc_alloc_init(DOCTagCheckableDotView);
  [(DOCTagCheckableDotView *)v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [(DOCTagCheckableDotView *)v4 setTagColor:a1];
  [(DOCTagCheckableDotView *)v4 setChecked:a2];

  return v4;
}

uint64_t DOCSpotlightGPSInfoFromCGImagePropertyDictionary(void *a1, double *a2, double *a3)
{
  id v5 = a1;
  unsigned int v6 = v5;
  if (!a3)
  {
    uint64_t v11 = [MEMORY[0x263F08690] currentHandler];
    unint64_t v12 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL DOCSpotlightGPSInfoFromCGImagePropertyDictionary(NSDictionary *__strong _Nonnull, double * _Nonnull, double * _Nonnull)");
    [v11 handleFailureInFunction:v12, @"DOCLocalizedMetadataUtilities.m", 17, @"Invalid parameter not satisfying: %@", @"oLongitude != NULL" file lineNumber description];
LABEL_18:

LABEL_19:
    uint64_t v10 = 0;
    goto LABEL_20;
  }
  if (!a2)
  {
    uint64_t v11 = [MEMORY[0x263F08690] currentHandler];
    unint64_t v12 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL DOCSpotlightGPSInfoFromCGImagePropertyDictionary(NSDictionary *__strong _Nonnull, double * _Nonnull, double * _Nonnull)");
    [v11 handleFailureInFunction:v12, @"DOCLocalizedMetadataUtilities.m", 20, @"Invalid parameter not satisfying: %@", @"oLatitude != NULL" file lineNumber description];
    goto LABEL_18;
  }
  uint64_t v7 = [v5 objectForKeyedSubscript:*MEMORY[0x263F0F3C0]];

  if (!v7) {
    goto LABEL_19;
  }
  double v15 = 0.0;
  value = 0;
  double valuePtr = 0.0;
  if (!CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x263F0F3E0], (const void **)&value)) {
    goto LABEL_19;
  }
  CFNumberGetValue((CFNumberRef)value, kCFNumberDoubleType, &valuePtr);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x263F0F3E8], (const void **)&value)
    && CFStringCompare((CFStringRef)value, @"S", 1uLL) == kCFCompareEqualTo
    && valuePtr > 0.0)
  {
    double valuePtr = -valuePtr;
  }
  if (!CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x263F0F3F0], (const void **)&value)) {
    goto LABEL_19;
  }
  CFNumberGetValue((CFNumberRef)value, kCFNumberDoubleType, &v15);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x263F0F3F8], (const void **)&value))
  {
    CFComparisonResult v8 = CFStringCompare((CFStringRef)value, @"W", 1uLL);
    double v9 = v15;
    if (v8 == kCFCompareEqualTo && v15 > 0.0)
    {
      double v9 = -v15;
      double v15 = -v15;
    }
  }
  else
  {
    double v9 = v15;
  }
  *a3 = v9;
  *a2 = valuePtr;
  uint64_t v10 = 1;
LABEL_20:

  return v10;
}

id DOCLocalizedMetadataStringForLatitude(double a1)
{
  return _DOCDisplayStringForLatLongValue(1, a1);
}

id _DOCDisplayStringForLatLongValue(int a1, double a2)
{
  unsigned int v4 = _DocumentManagerBundle();
  id v5 = v4;
  if (a1)
  {
    if (a2 < 0.0)
    {
      unsigned int v6 = @"Metadata GPSLatLon Component [South]";
      uint64_t v7 = @"S";
    }
    else
    {
      unsigned int v6 = @"Metadata GPSLatLon Component [North]";
      uint64_t v7 = @"N";
    }
  }
  else if (a2 < 0.0)
  {
    unsigned int v6 = @"Metadata GPSLatLon Component [West]";
    uint64_t v7 = @"W";
  }
  else
  {
    unsigned int v6 = @"Metadata GPSLatLon Component [East]";
    uint64_t v7 = @"E";
  }
  CFComparisonResult v8 = [v4 localizedStringForKey:v6 value:v7 table:@"Localizable"];

  double v9 = -a2;
  if (a2 >= 0.0) {
    double v9 = a2;
  }
  int v10 = (int)v9;
  double v11 = (v9 - (double)(int)v9) * 60.0;
  unsigned int v12 = (int)v11;
  double v13 = ((double)(int)((v11 - (double)(int)v11) * 60.0 * 1000.0) + 0.5) / 1000.0;
  if (v13 == 60.0) {
    double v14 = 0.0;
  }
  else {
    double v14 = v13;
  }
  if (v13 == 60.0) {
    uint64_t v15 = v12 + 1;
  }
  else {
    uint64_t v15 = v12;
  }
  BOOL v16 = v12 == 59 && v13 == 60.0;
  uint64_t v17 = (v16 + v10);
  uint64_t v18 = _DocumentManagerBundle();
  uint64_t v19 = [v18 localizedStringForKey:@"Metadata GPSLatLon Format" value:@"%1$d° %2$d′ %3$.3f″ %4$@" table:@"Localizable"];

  uint64_t v20 = objc_msgSend(NSString, "stringWithFormat:", v19, v17, v15, *(void *)&v14, v8);

  return v20;
}

id DOCLocalizedMetadataStringForLongitude(double a1)
{
  return _DOCDisplayStringForLatLongValue(0, a1);
}

id DOCLocalizedMetadataStringForWidthByHeight(double a1, double a2)
{
  unsigned int v4 = _DocumentManagerBundle();
  id v5 = [v4 localizedStringForKey:@"%1$d × %2$d" value:@"%1$d × %2$d" table:@"Localizable"];

  unsigned int v6 = objc_msgSend(NSString, "localizedStringWithFormat:", v5, (int)a1, (int)a2);

  return v6;
}

id DOCLocalizedMetadataStringInMMSSForDuration(double a1)
{
  unint64_t v2 = objc_opt_new();
  [v2 setUnitsStyle:0];
  [v2 setAllowedUnits:192];
  [v2 setZeroFormattingBehavior:0x10000];
  uint64_t v3 = [v2 stringFromTimeInterval:a1];

  return v3;
}

id DOCLocalizedMetadataStringForExposureProgramNumber(void *a1)
{
  v22[8] = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v21[0] = &unk_26DF540B8;
    uint64_t v20 = _DocumentManagerBundle();
    uint64_t v19 = [v20 localizedStringForKey:@"Exposure Program [Manual]" value:@"Manual" table:@"Localizable"];
    v22[0] = v19;
    v21[1] = &unk_26DF540D0;
    uint64_t v18 = _DocumentManagerBundle();
    uint64_t v17 = [v18 localizedStringForKey:@"Exposure Program [Normal]" value:@"Normal" table:@"Localizable"];
    v22[1] = v17;
    v21[2] = &unk_26DF540E8;
    BOOL v16 = _DocumentManagerBundle();
    uint64_t v15 = [v16 localizedStringForKey:@"Exposure Program [AperturePriority]" value:@"Aperture priority" table:@"Localizable"];
    v22[2] = v15;
    v21[3] = &unk_26DF54100;
    double v14 = _DocumentManagerBundle();
    double v13 = [v14 localizedStringForKey:@"Exposure Program [ShutterPriority]" value:@"Shutter priority" table:@"Localizable"];
    uint64_t v22[3] = v13;
    v21[4] = &unk_26DF54118;
    unint64_t v2 = _DocumentManagerBundle();
    uint64_t v3 = [v2 localizedStringForKey:@"Exposure Program [Creative]" value:@"Creative" table:@"Localizable"];
    v22[4] = v3;
    v21[5] = &unk_26DF54130;
    unsigned int v4 = _DocumentManagerBundle();
    id v5 = [v4 localizedStringForKey:@"Exposure Program [Action]" value:@"Action" table:@"Localizable"];
    v22[5] = v5;
    v21[6] = &unk_26DF54148;
    unsigned int v6 = _DocumentManagerBundle();
    uint64_t v7 = [v6 localizedStringForKey:@"Exposure Program [Portrait]" value:@"Portrait" table:@"Localizable"];
    v22[6] = v7;
    v21[7] = &unk_26DF54160;
    CFComparisonResult v8 = _DocumentManagerBundle();
    double v9 = [v8 localizedStringForKey:@"Exposure Program [Landscape]" value:@"Landscape" table:@"Localizable"];
    v22[7] = v9;
    int v10 = [NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:8];

    double v11 = [v10 objectForKeyedSubscript:v1];
  }
  else
  {
    double v11 = 0;
  }

  return v11;
}

id DOCLocalizedMetadataStringForMeteringModeNumber(void *a1)
{
  v22[8] = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v21[0] = &unk_26DF54178;
    uint64_t v20 = _DocumentManagerBundle();
    uint64_t v19 = [v20 localizedStringForKey:@"Metering Mode [Unknown]" value:@"Unknown" table:@"Localizable"];
    v22[0] = v19;
    v21[1] = &unk_26DF540B8;
    uint64_t v18 = _DocumentManagerBundle();
    uint64_t v17 = [v18 localizedStringForKey:@"Metering Mode [Average]" value:@"Average" table:@"Localizable"];
    v22[1] = v17;
    v21[2] = &unk_26DF540D0;
    BOOL v16 = _DocumentManagerBundle();
    uint64_t v15 = [v16 localizedStringForKey:@"Metering Mode [CenterWeightedAverage]" value:@"Center-weighted average" table:@"Localizable"];
    v22[2] = v15;
    v21[3] = &unk_26DF540E8;
    double v14 = _DocumentManagerBundle();
    double v13 = [v14 localizedStringForKey:@"Metering Mode [Spot]" value:@"Spot" table:@"Localizable"];
    uint64_t v22[3] = v13;
    v21[4] = &unk_26DF54100;
    unint64_t v2 = _DocumentManagerBundle();
    uint64_t v3 = [v2 localizedStringForKey:@"Metering Mode [MultiSpot]" value:@"Multi-spot" table:@"Localizable"];
    v22[4] = v3;
    v21[5] = &unk_26DF54118;
    unsigned int v4 = _DocumentManagerBundle();
    id v5 = [v4 localizedStringForKey:@"Metering Mode [Pattern]" value:@"Pattern" table:@"Localizable"];
    v22[5] = v5;
    v21[6] = &unk_26DF54130;
    unsigned int v6 = _DocumentManagerBundle();
    uint64_t v7 = [v6 localizedStringForKey:@"Metering Mode [Partial]" value:@"Partial" table:@"Localizable"];
    v22[6] = v7;
    v21[7] = &unk_26DF54190;
    CFComparisonResult v8 = _DocumentManagerBundle();
    double v9 = [v8 localizedStringForKey:@"Metering Mode [Other]" value:@"Other" table:@"Localizable"];
    v22[7] = v9;
    int v10 = [NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:8];

    double v11 = [v10 objectForKeyedSubscript:v1];
  }
  else
  {
    double v11 = 0;
  }

  return v11;
}

id DOCLocalizedMetadataStringForWhiteBalanceModeNumber(void *a1)
{
  void v10[2] = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v9[0] = &unk_26DF54178;
    unint64_t v2 = _DocumentManagerBundle();
    uint64_t v3 = [v2 localizedStringForKey:@"WhiteBalance Mode [Auto]" value:@"Auto" table:@"Localizable"];
    v9[1] = &unk_26DF540B8;
    v10[0] = v3;
    unsigned int v4 = _DocumentManagerBundle();
    id v5 = [v4 localizedStringForKey:@"WhiteBalance Mode [Manual]" value:@"Manual" table:@"Localizable"];
    v10[1] = v5;
    unsigned int v6 = [NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:2];

    uint64_t v7 = [v6 objectForKeyedSubscript:v1];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id DOCLocalizedMetadataYesNoStringForBool(int a1)
{
  unint64_t v2 = _DocumentManagerBundle();
  uint64_t v3 = v2;
  if (a1)
  {
    unsigned int v4 = @"Metadata Boolean Value [YES]";
    id v5 = @"YES";
  }
  else
  {
    unsigned int v4 = @"Metadata Boolean Value [NO]";
    id v5 = @"NO";
  }
  unsigned int v6 = [v2 localizedStringForKey:v4 value:v5 table:@"Localizable"];

  return v6;
}

void sub_22BDEBEC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22BDEE6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22BDEEC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22BDEEFD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22BDEF10C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22BDEF300(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22BDEF4B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22BDEF604(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_22BDF11D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double DOCDefaultTagDimension()
{
  uint64_t v0 = +[DOCTagAppearance pickerList];
  [v0 dotSize];
  double v2 = v1;

  uint64_t v3 = +[DOCTagRenderer shared];
  if ([v3 differentiateWithShapes]) {
    double v2 = v2 + 6.0;
  }

  return v2;
}

void sub_22BDF330C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id location)
{
  objc_destroyWeak(v47);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_22BDF4A40()
{
  uint64_t result = sub_22BE92C98();
  qword_2684866A8 = result;
  return result;
}

id DOCNotificationDidUpdateSmartFolders.getter()
{
  if (qword_2684866A0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2684866A8;

  return v0;
}

uint64_t DOCSmartFolderInputFile.init(filename:filetype:dateSaved:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v8 = type metadata accessor for DOCSmartFolderInputFile();
  uint64_t v9 = (char *)a5 + *(int *)(v8 + 20);
  uint64_t v10 = sub_22BE92568();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a3, v10);
  double v11 = (char *)a5 + *(int *)(v8 + 24);
  uint64_t v12 = sub_22BE92248();
  double v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);

  return v13(v11, a4, v12);
}

uint64_t type metadata accessor for DOCSmartFolderInputFile()
{
  uint64_t result = qword_2684869D8;
  if (!qword_2684869D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id DOCSmartFolderManager.database.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database);
}

id sub_22BDF4C0C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return sub_22BDF4CEC(a1, &OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity, a2);
}

void sub_22BDF4C18(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void *sub_22BDF4C24()
{
  double v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_22BDF4C74(void *a1)
{
}

uint64_t (*sub_22BDF4C80())()
{
  return j__swift_endAccess;
}

id sub_22BDF4CE0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return sub_22BDF4CEC(a1, &OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId, a2);
}

id sub_22BDF4CEC@<X0>(void *a1@<X0>, void *a2@<X3>, void **a3@<X8>)
{
  unsigned int v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  id v5 = *v4;
  *a3 = *v4;

  return v5;
}

void sub_22BDF4D4C(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

void sub_22BDF4D58(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v5 = *a1;
  unsigned int v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *unsigned int v6 = v5;
  id v8 = v5;
}

void *sub_22BDF4DB8()
{
  double v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_22BDF4E08(void *a1)
{
}

void sub_22BDF4E14(void *a1, void *a2)
{
  unsigned int v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  id v5 = *v4;
  *unsigned int v4 = a1;
}

uint64_t (*sub_22BDF4E64())()
{
  return j_j__swift_endAccess;
}

id sub_22BDF4EC0()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCSmartFolderManager();
  double v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity] = 0;
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId] = 0;
  id v2 = objc_allocWithZone(MEMORY[0x263F3AAD0]);
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_init);
  *(void *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database] = v4;
  id v5 = v4;
  objc_msgSend(v5, sel_open);

  v7.receiver = v3;
  v7.super_class = v0;
  id result = objc_msgSendSuper2(&v7, sel_init);
  qword_2684866B8 = (uint64_t)result;
  return result;
}

id DOCSmartFolderManager.__allocating_init(_:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_22BDF7E70(a1);

  return v4;
}

id static DOCSmartFolderManager.sharedManager.getter()
{
  if (qword_2684866B0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2684866B8;

  return v0;
}

id DOCSmartFolderManager.init(_:)(void *a1)
{
  id v2 = sub_22BDF7E70(a1);

  return v2;
}

id DOCSmartFolderManager.__deallocating_deinit()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database], sel_close);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSmartFolderManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_22BDF51AC()
{
  uint64_t v0 = sub_22BE91F38();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_defaultCenter);
  if (qword_2684866A0 != -1) {
    swift_once();
  }
  memset(v7, 0, sizeof(v7));
  id v5 = (id)qword_2684866A8;
  sub_22BE91F18();
  unsigned int v6 = (void *)sub_22BE91EF8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_postNotification_, v6);
}

void sub_22BDF530C(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_22BE91F38();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCSmartFolderInputFile();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v38 + 64);
  MEMORY[0x270FA5388](v8);
  id v10 = objc_msgSend(a2, sel_providerDomainID);
  char v11 = DOCProviderDomainIDIsRemovable();

  if ((v11 & 1) == 0)
  {
    uint64_t v35 = v6;
    uint64_t v36 = v5;
    id v12 = objc_allocWithZone(MEMORY[0x263F3AAD8]);
    id v13 = a2;
    uint64_t v37 = v2;
    id v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    BOOL v16 = (void *)sub_22BE921F8();
    id v17 = objc_msgSend(v12, sel_initWithFolder_type_value_lastUsedDate_frecency_, v14, 0, v15, v16, 1.0);

    uint64_t v18 = v17;
    id v19 = v14;
    sub_22BE923A8();
    id v20 = objc_allocWithZone(MEMORY[0x263F3AAD8]);
    uint64_t v21 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)sub_22BE921F8();
    BOOL v23 = v20;
    uint64_t v24 = v37;
    id v25 = objc_msgSend(v23, sel_initWithFolder_type_value_lastUsedDate_frecency_, v19, 1, v21, v22, 1.0);

    uint64_t v26 = *(void **)(v24 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database);
    sub_22BDF7F6C(a1, (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v27 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v28 = swift_allocObject();
    sub_22BDF8104((uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27);
    id v42 = sub_22BDF8168;
    uint64_t v43 = v28;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v41 = sub_22BDF5874;
    *((void *)&v41 + 1) = &block_descriptor;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v26, sel_registerFilenameHit_fileTypeHit_smartScoreBlock_, v18, v25, v29);
    _Block_release(v29);
    id v30 = objc_msgSend(self, sel_defaultCenter);
    if (qword_2684866A0 != -1) {
      swift_once();
    }
    long long aBlock = 0u;
    long long v41 = 0u;
    id v31 = (id)qword_2684866A8;
    uint64_t v32 = v39;
    sub_22BE91F18();
    id v33 = (void *)sub_22BE91EF8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v36);
    objc_msgSend(v30, sel_postNotification_, v33);

    sub_22BDF7D00(v19);
  }
}

uint64_t sub_22BDF5738(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  id v4 = objc_msgSend(a1, sel_value);
  uint64_t v5 = sub_22BE92CD8();
  uint64_t v7 = v6;

  if (sub_22BE92D58() <= 3) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_22BE89BA0(4, v2, v3, v8);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  LOBYTE(v9) = sub_22BE780FC(v9, v11);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  v12._char countAndFlagsBits = v5;
  v12._object = v7;
  String.doc_editDistance(from:)(v12);
  sub_22BE92D58();
  sub_22BE92D58();
  return swift_bridgeObjectRelease();
}

double sub_22BDF5874(uint64_t a1, void *a2)
{
  unint64_t v3 = *(double (**)(void))(a1 + 32);
  sub_22BE91C58();
  id v4 = a2;
  double v5 = v3();
  swift_release();

  return v5;
}

uint64_t sub_22BDF58D4(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = DOCSmartFolderLogHandle();
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22BE97A30;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  *(void *)(v9 + 64) = sub_22BDF8220();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  type metadata accessor for DOCSmartFolderInputFile();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22BE92418();
  *(void *)(v9 + 96) = sub_22BDD9D50(0, &qword_268486950);
  *(void *)(v9 + 104) = sub_22BDF8274();
  *(void *)(v9 + 72) = v12;
  sub_22BE92588();

  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database), sel_previousHits);
  sub_22BDD9D50(0, (unint64_t *)&unk_268486960);
  unint64_t v14 = sub_22BE92EB8();

  uint64_t v15 = sub_22BDF82DC(v14, a2, a3);
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_22BE92C98();
  sub_22BDF869C(v15, (void (*)(id, uint64_t))sub_22BDF8690);
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x263F8EE78];

  return v16;
}

void sub_22BDF5B10(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_22BE92248();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22BE92238();
  uint64_t v32 = a4;
  id v33 = v13;
  double v14 = sub_22BDF627C((void (*)(double *__return_ptr, double *, id *))sub_22BDF9AD4, 0.0, (uint64_t)v31, a2);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  if (!(a2 >> 62))
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  if (!sub_22BE937E8()) {
    goto LABEL_14;
  }
LABEL_3:
  unint64_t v5 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v16 = (id)MEMORY[0x230F56140](0, a2);
    goto LABEL_6;
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  id v16 = *(id *)(a2 + 32);
LABEL_6:
  id v17 = v16;
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v17, sel_folderItem);

  id v19 = objc_msgSend(v18, sel_displayName);
  uint64_t v20 = sub_22BE92CD8();
  uint64_t v22 = v21;

  id v23 = DOCSmartFolderLogHandle();
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22BE97A30;
  uint64_t v25 = MEMORY[0x263F8D5B8];
  *(void *)(v24 + 56) = MEMORY[0x263F8D538];
  *(void *)(v24 + 64) = v25;
  *(double *)(v24 + 32) = v14;
  *(void *)(v24 + 96) = MEMORY[0x263F8D310];
  *(void *)(v24 + 104) = sub_22BDF8220();
  *(void *)(v24 + 72) = v20;
  *(void *)(v24 + 80) = v22;
  sub_22BE92588();

  swift_bridgeObjectRelease();
  if (*(double *)(a5 + 16) < v14)
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v26 = (id)MEMORY[0x230F56140](0, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v26 = *(id *)(a2 + 32);
    }
    id v27 = objc_msgSend(v26, sel_folderItem);

    if (v27)
    {
      uint64_t v28 = *(void **)a5;
      *(void *)a5 = a1;
      id v29 = a1;

      id v30 = *(void **)(a5 + 8);
      *(void *)(a5 + 8) = v27;

      *(double *)(a5 + 16) = v14;
    }
  }
}

double sub_22BDF5E34@<D0>(double *a1@<X0>, id *a2@<X1>, uint64_t *a3@<X2>, double *a4@<X8>)
{
  double v6 = *a1;
  id v7 = *a2;
  id v8 = objc_msgSend(*a2, sel_type);
  uint64_t v48 = a4;
  if (v8 == (id)1)
  {
    type metadata accessor for DOCSmartFolderInputFile();
    uint64_t v9 = sub_22BE923A8();
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v7, sel_value);
    uint64_t v13 = sub_22BE92CD8();
    uint64_t v15 = v14;

    if (v9 == v13 && v11 == v15)
    {
      swift_bridgeObjectRelease_n();
      double v18 = 1.0;
    }
    else
    {
      char v17 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        double v18 = 1.0;
      }
      else {
        double v18 = 0.0;
      }
    }
  }
  else
  {
    if (v8)
    {
      id v46 = objc_msgSend(v7, sel_type);
      type metadata accessor for DOCSmartFolderHitType(0);
      v49[3] = v47;
      v49[0] = v46;
      doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(v49);
    }
    uint64_t v19 = *a3;
    unint64_t v20 = a3[1];
    id v21 = objc_msgSend(v7, sel_value);
    uint64_t v22 = sub_22BE92CD8();
    uint64_t v24 = v23;

    if (sub_22BE92D58() > 3
      && (swift_bridgeObjectRetain(),
          uint64_t v26 = sub_22BE89BA0(4, v19, v20, v25),
          unint64_t v28 = v27,
          swift_bridgeObjectRelease(),
          LOBYTE(v28) = sub_22BE780FC(v26, v28),
          swift_bridgeObjectRelease(),
          (v28 & 1) != 0))
    {
      v29._char countAndFlagsBits = v22;
      v29._object = v24;
      double v30 = (double)String.doc_editDistance(from:)(v29);
      uint64_t v31 = sub_22BE92D58();
      uint64_t v32 = sub_22BE92D58();
      swift_bridgeObjectRelease();
      if (v32 <= v31) {
        uint64_t v33 = v31;
      }
      else {
        uint64_t v33 = v32;
      }
      double v34 = ((double)v33 - v30) / (double)v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      double v34 = 0.0;
    }
    if (v34 <= 0.5) {
      double v18 = 0.0;
    }
    else {
      double v18 = v34;
    }
  }
  id v35 = DOCSmartFolderLogHandle();
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_22BE97A30;
  uint64_t v37 = MEMORY[0x263F8D5B8];
  *(void *)(v36 + 56) = MEMORY[0x263F8D538];
  *(void *)(v36 + 64) = v37;
  *(double *)(v36 + 32) = v18;
  id v38 = objc_msgSend(v7, sel_value);
  uint64_t v39 = sub_22BE92CD8();
  uint64_t v41 = v40;

  *(void *)(v36 + 96) = MEMORY[0x263F8D310];
  *(void *)(v36 + 104) = sub_22BDF8220();
  *(void *)(v36 + 72) = v39;
  *(void *)(v36 + 80) = v41;
  sub_22BE92588();

  swift_bridgeObjectRelease();
  id v42 = (void *)sub_22BE921F8();
  objc_msgSend(v7, sel_frecencyScoreAtDate_, v42);
  double v44 = v43;

  double result = v6 + v18 * v44;
  *uint64_t v48 = result;
  return result;
}

double sub_22BDF627C(void (*a1)(double *__return_ptr, double *, id *), double a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 62) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_22BE937E8())
  {
    uint64_t v9 = 4;
    while (1)
    {
      id v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F56140](v9 - 4, a4) : *(id *)(a4 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      id v15 = v10;
      a1(&v14, &v16, &v15);
      if (v4)
      {
        swift_bridgeObjectRelease();

        return a2;
      }

      a2 = v14;
      double v16 = v14;
      ++v9;
      if (v12 == v8) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return a2;
}

id sub_22BDF63B4()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  return objc_msgSend(*v1, sel_becomeCurrent);
}

id DOCSmartFolderManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCSmartFolderManager.init()()
{
}

void sub_22BDF649C(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_22BDF64F0())()
{
  return j_j__swift_endAccess;
}

void DOCSmartFolderManager.register(event:)(void *a1)
{
  uint64_t v2 = sub_22BE91F38();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = DOCSmartFolderLogHandle();
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22BE97A30;
  id v6 = objc_msgSend(a1, sel_folderItem);
  id v7 = objc_msgSend(v6, sel_displayName);

  uint64_t v8 = sub_22BE92CD8();
  uint64_t v10 = v9;

  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  unint64_t v12 = sub_22BDF8220();
  *(void *)(v5 + 64) = v12;
  *(void *)(v5 + 32) = v8;
  *(void *)(v5 + 40) = v10;
  id v13 = objc_msgSend(a1, sel_appBundleIdentifier);
  uint64_t v14 = sub_22BE92CD8();
  uint64_t v16 = v15;

  *(void *)(v5 + 96) = v11;
  *(void *)(v5 + 104) = v12;
  *(void *)(v5 + 72) = v14;
  *(void *)(v5 + 80) = v16;
  sub_22BE92588();

  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(a1, sel_folderItem);
  LOBYTE(v4) = objc_msgSend(v17, sel_isRootItem);

  if (v4) {
    return;
  }
  id v18 = objc_msgSend(a1, (SEL)&selRef_scribbleInteractionShouldDelayFocus_ + 2);
  id v19 = objc_msgSend(v18, sel_providerDomainID);

  LOBYTE(v18) = DOCProviderDomainIDIsRemovable();
  if (v18) {
    return;
  }
  id v20 = objc_msgSend(a1, (SEL)&selRef_scribbleInteractionShouldDelayFocus_ + 2);
  id v21 = objc_msgSend(v20, sel_itemIdentifier);

  uint64_t v22 = (void *)(v36 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId);
  swift_beginAccess();
  if (!*v22)
  {

LABEL_9:
    objc_msgSend(*(id *)(v36 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database), sel_registerEvent_, a1);
    id v28 = objc_msgSend(self, sel_defaultCenter);
    if (qword_2684866A0 != -1) {
      swift_once();
    }
    long long v37 = 0u;
    long long v38 = 0u;
    id v29 = (id)qword_2684866A8;
    double v30 = v33;
    sub_22BE91F18();
    uint64_t v31 = (void *)sub_22BE91EF8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v35);
    objc_msgSend(v28, sel_postNotification_, v31);

    id v32 = objc_msgSend(a1, (SEL)&selRef_scribbleInteractionShouldDelayFocus_ + 2);
    sub_22BDF7D00(v32);

    return;
  }
  uint64_t v23 = sub_22BE92CD8();
  uint64_t v25 = v24;
  if (v23 == sub_22BE92CD8() && v25 == v26)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v27 = sub_22BE938C8();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0) {
    goto LABEL_9;
  }
}

void DOCSmartFolderManager.delete(hotFolder:for:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22BE91F38();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = DOCSmartFolderLogHandle();
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22BE97A30;
  id v11 = objc_msgSend(a1, sel_displayName);
  uint64_t v12 = sub_22BE92CD8();
  uint64_t v14 = v13;

  uint64_t v15 = MEMORY[0x263F8D310];
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  unint64_t v16 = sub_22BDF8220();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  *(void *)(v10 + 96) = v15;
  *(void *)(v10 + 104) = v16;
  *(void *)(v10 + 64) = v16;
  *(void *)(v10 + 72) = a2;
  *(void *)(v10 + 80) = a3;
  swift_bridgeObjectRetain();
  sub_22BE92588();

  swift_bridgeObjectRelease();
  id v17 = *(void **)(v24[1] + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database);
  id v18 = objc_msgSend(a1, sel_itemIdentifier);
  sub_22BE92CD8();

  id v19 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v20 = (void *)sub_22BE92C98();
  objc_msgSend(v17, sel_deleteFolderWithIdentifier_appBundleIdentifier_, v19, v20);

  id v21 = objc_msgSend(self, sel_defaultCenter);
  if (qword_2684866A0 != -1) {
    swift_once();
  }
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = (id)qword_2684866A8;
  sub_22BE91F18();
  uint64_t v23 = (void *)sub_22BE91EF8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  objc_msgSend(v21, sel_postNotification_, v23);
}

uint64_t sub_22BDF6C40(uint64_t a1, uint64_t a2)
{
  return sub_22BDF7C68(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_22BDF6C68(uint64_t a1, uint64_t a2)
{
  return sub_22BDF7C68(a1, a2, MEMORY[0x263F8D308]);
}

void sub_22BDF6C84(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_22BDF6C90()
{
  return sub_22BE93A48();
}

uint64_t sub_22BDF6CD8()
{
  return sub_22BE93A28();
}

uint64_t sub_22BDF6D04()
{
  return sub_22BE93A48();
}

uint64_t sub_22BDF6D48()
{
  return sub_22BE92368();
}

uint64_t sub_22BDF6D94()
{
  return sub_22BE92358();
}

uint64_t sub_22BDF6DEC()
{
  return sub_22BE93A48();
}

id sub_22BDF6E54()
{
  return *v0;
}

uint64_t sub_22BDF6E5C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_22BDF6E64(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_22BDF6E78(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22BDF6E8C(uint64_t a1, id *a2)
{
  uint64_t result = sub_22BE92CB8();
  *a2 = 0;
  return result;
}

uint64_t sub_22BDF6F04(uint64_t a1, id *a2)
{
  char v3 = sub_22BE92CC8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_22BDF6F84@<X0>(uint64_t *a1@<X8>)
{
  sub_22BE92CD8();
  uint64_t v2 = sub_22BE92C98();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_22BDF6FC8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_22BDF6FD8()
{
  swift_getWitnessTable();

  return sub_22BE92348();
}

uint64_t sub_22BDF7044()
{
  return sub_22BE92CD8();
}

uint64_t sub_22BDF7054(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_22BDF70C0(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_22BDF712C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_22BDF71BC()
{
  id v1 = *v0;
  uint64_t v2 = sub_22BE93338();

  return v2;
}

uint64_t sub_22BDF71F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_22BDF7270()
{
  return sub_22BE93A48();
}

uint64_t sub_22BDF72D0(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486C70, type metadata accessor for NSFileProviderItemIdentifier);
  uint64_t v3 = sub_22BDDC370(&qword_268486C78, type metadata accessor for NSFileProviderItemIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF738C(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486CA0, type metadata accessor for FPProviderDomainID);
  uint64_t v3 = sub_22BDDC370((unint64_t *)&unk_268486CA8, type metadata accessor for FPProviderDomainID);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22BE92CD8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22BDF7474(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370((unint64_t *)&unk_26AF00310, type metadata accessor for FPProviderID);
  uint64_t v3 = sub_22BDDC370(&qword_268486DA8, type metadata accessor for FPProviderID);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7530(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486C90, type metadata accessor for DOCDocumentSourceIdentifier);
  uint64_t v3 = sub_22BDDC370(&qword_268486C98, type metadata accessor for DOCDocumentSourceIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF75EC(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486D58, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_22BDF7658(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486D58, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_22BDF76C8(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_22BDF7734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_22BDF77B8(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486CC0, type metadata accessor for FeatureKey);
  uint64_t v3 = sub_22BDDC370(&qword_268486CC8, type metadata accessor for FeatureKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7874(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370((unint64_t *)&qword_26AF00430, type metadata accessor for AttributeName);
  uint64_t v3 = sub_22BDDC370(&qword_268486CB8, type metadata accessor for AttributeName);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7930(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486DC0, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_22BDDC370(&qword_268486DC8, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF79EC(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486C60, type metadata accessor for DOCIntentLocationType);
  uint64_t v3 = sub_22BDDC370(&qword_268486C68, type metadata accessor for DOCIntentLocationType);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7AA8(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486C80, type metadata accessor for UIContentSizeCategory);
  uint64_t v3 = sub_22BDDC370(&qword_268486C88, type metadata accessor for UIContentSizeCategory);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7B64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_22BE92C98();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22BDF7BAC(uint64_t a1)
{
  uint64_t v2 = sub_22BDDC370(&qword_268486DB0, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_22BDDC370(&qword_268486DB8, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_22BDF7C68(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_22BE92CD8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_22BDF7CAC()
{
  sub_22BE92CD8();
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BDF7D00(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = &protocol witness table for DOCSmartFolderManager;
  swift_unknownObjectWeakInit();
  sub_22BE91C58();
  id v3 = objc_msgSend(a1, sel_itemID);
  uint64_t v4 = (void *)swift_allocObject();
  _OWORD v4[2] = a1;
  v4[3] = sub_22BDF9B3C;
  v4[4] = v2;
  v8[4] = sub_22BDF9B84;
  v8[5] = v4;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_22BE02F38;
  v8[3] = &block_descriptor_78;
  uint64_t v5 = _Block_copy(v8);
  id v6 = a1;
  sub_22BE91C58();
  sub_22BE91C58();
  swift_release();
  FPCrossDeviceItemIDForItemID();
  _Block_release(v5);
  swift_release_n();

  return swift_release();
}

id sub_22BDF7E70(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity] = 0;
  *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId] = 0;
  if (a1)
  {
    *(void *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database] = a1;
    id v3 = v1;
    id v4 = a1;
  }
  else
  {
    id v5 = objc_allocWithZone(MEMORY[0x263F3AAD0]);
    id v6 = v1;
    id v4 = objc_msgSend(v5, sel_init);
    *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database] = v4;
  }
  id v7 = a1;
  id v8 = v4;
  objc_msgSend(v8, sel_open);

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCSmartFolderManager();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for DOCSmartFolderManager()
{
  return self;
}

uint64_t sub_22BDF7F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCSmartFolderInputFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22BDF7FD0()
{
  id v1 = (int *)(type metadata accessor for DOCSmartFolderInputFile() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_22BE92568();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[8];
  uint64_t v10 = sub_22BE92248();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_22BDF8104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCSmartFolderInputFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22BDF8168(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DOCSmartFolderInputFile() - 8);
  uint64_t v4 = (uint64_t *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_22BDF5738(a1, v4);
}

id DOCSmartFolderLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC68];
  uint64_t v1 = (void *)*MEMORY[0x263F3AC68];
  if (!*MEMORY[0x263F3AC68])
  {
    DOCInitLogging();
    uint64_t v1 = *v0;
  }

  return v1;
}

unint64_t sub_22BDF8220()
{
  unint64_t result = qword_26AF002B8;
  if (!qword_26AF002B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF002B8);
  }
  return result;
}

unint64_t sub_22BDF8274()
{
  unint64_t result = qword_268486958;
  if (!qword_268486958)
  {
    sub_22BDD9D50(255, &qword_268486950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486958);
  }
  return result;
}

uint64_t sub_22BDF82DC(unint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = (void *)sub_22BE1A410(MEMORY[0x263F8EE78]);
  if (a1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  while (2)
  {
    if (v7 >= 1)
    {
      uint64_t v8 = 0;
      unint64_t v9 = a1 & 0xC000000000000001;
      uint64_t v10 = &selRef_removeObserver_;
      uint64_t v40 = v7;
      uint64_t v41 = a2;
      unint64_t v39 = a1 & 0xC000000000000001;
      unint64_t v38 = a1;
      while (1)
      {
        id v11 = v9 ? (id)MEMORY[0x230F56140](v8, a1) : *(id *)(a1 + 8 * v8 + 32);
        uint64_t v12 = v11;
        id v13 = [v11 v10[462]];
        if (objc_msgSend(a3, sel_canAppWithConfiguration_handleNode_, a2, v13)) {
          break;
        }

LABEL_6:
        if (v7 == ++v8) {
          goto LABEL_32;
        }
      }
      id v14 = objc_msgSend(v13, sel_itemIdentifier);
      a2 = v14;
      if (v6[2])
      {
        id v15 = v14;
        uint64_t v16 = sub_22BDDBFDC(v15);
        if (v17)
        {
          uint64_t v18 = *(void *)(v6[7] + 8 * v16);
          swift_bridgeObjectRetain();

          id v19 = v15;
          id v20 = v12;
          MEMORY[0x230F55950]();
          if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_22BE92EF8();
          }
          sub_22BE92F48();
          sub_22BE92ED8();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_22BE1D2A8(v18, v19, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
LABEL_28:
          uint64_t v7 = v40;
          a2 = v41;
          unint64_t v9 = v39;
          uint64_t v10 = &selRef_removeObserver_;
          goto LABEL_6;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_22BE97A40;
      *(void *)(v22 + 32) = v12;
      uint64_t v42 = v22;
      sub_22BE92ED8();
      id v23 = a2;
      id v24 = v12;
      a1 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v26 = sub_22BDDBFDC(v23);
      uint64_t v27 = v6[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_22BE937E8();
        if (!v7) {
          goto LABEL_32;
        }
        continue;
      }
      a2 = v25;
      if (v6[3] >= v29)
      {
        if ((a1 & 1) == 0) {
          sub_22BE1DCB4();
        }
      }
      else
      {
        sub_22BE1BC94(v29, a1);
        uint64_t v30 = sub_22BDDBFDC(v23);
        if ((a2 & 1) != (v31 & 1)) {
          goto LABEL_34;
        }
        unint64_t v26 = v30;
      }
      if (a2)
      {
        uint64_t v32 = v6[7];
        swift_bridgeObjectRelease();
        *(void *)(v32 + 8 * v26) = v42;
      }
      else
      {
        v6[(v26 >> 6) + 8] |= 1 << v26;
        *(void *)(v6[6] + 8 * v26) = v23;
        *(void *)(v6[7] + 8 * v26) = v42;
        uint64_t v33 = v6[2];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_30;
        }
        _OWORD v6[2] = v35;
        id v36 = v23;
      }

      swift_bridgeObjectRelease();
      a1 = v38;
      goto LABEL_28;
    }
    break;
  }
  __break(1u);
LABEL_34:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  uint64_t result = sub_22BE93958();
  __break(1u);
  return result;
}

void sub_22BDF8690(void *a1, unint64_t a2)
{
  sub_22BDF5B10(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_22BDF869C(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = 8 * v11;
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + v12);
    id v14 = *(id *)(*(void *)(a1 + 48) + v12);
    swift_bridgeObjectRetain();
    a2(v14, v13);
    swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCSmartFolderInputFile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_22BE91C58();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    int64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22BE92568();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    id v14 = (char *)v4 + v13;
    int64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_22BE92248();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for DOCSmartFolderInputFile(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_22BE92568();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_22BE92248();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for DOCSmartFolderInputFile(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  int64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22BE92568();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22BE92248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *assignWithCopy for DOCSmartFolderInputFile(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22BE92568();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22BE92248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for DOCSmartFolderInputFile(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22BE92568();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22BE92248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *assignWithTake for DOCSmartFolderInputFile(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22BE92568();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_22BE92248();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSmartFolderInputFile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22BDF8DD4);
}

uint64_t sub_22BDF8DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22BE92568();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_22BE92248();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DOCSmartFolderInputFile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22BDF8F14);
}

uint64_t sub_22BDF8F14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_22BE92568();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_22BE92248();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_22BDF9040()
{
  uint64_t result = sub_22BE92568();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22BE92248();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DOCSmartFolderManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCSmartFolderManager);
}

uint64_t dispatch thunk of DOCSmartFolderManager.currentUserActivity.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.currentUserActivity.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.currentUserActivity.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.defaultSaveLocationItemId.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.defaultSaveLocationItemId.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.defaultSaveLocationItemId.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.register(savedFile:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.suggestions(for:configuration:managedPermission:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DOCSmartFolderManager.makeHostedActivityCurrent()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

void type metadata accessor for DOCIntentLocationType(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
}

void type metadata accessor for CFUserNotification(uint64_t a1)
{
}

uint64_t sub_22BDF9398(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_22BDF93B8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for NSFileProviderItemIdentifier(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCDiskProperties.Size(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCDiskProperties.Size(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for FPProviderDomainID(uint64_t a1)
{
}

void type metadata accessor for DOCDataOwnerState(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_22BDF94EC()
{
  return sub_22BDDC370(&qword_268486BA8, type metadata accessor for CFString);
}

uint64_t sub_22BDF9534()
{
  return sub_22BDDC370(&qword_268486BB0, type metadata accessor for FeatureKey);
}

uint64_t sub_22BDF957C()
{
  return sub_22BDDC370((unint64_t *)&unk_268486BB8, type metadata accessor for FeatureKey);
}

uint64_t sub_22BDF95C4()
{
  return sub_22BDDC370(&qword_26AF00410, type metadata accessor for FeatureKey);
}

uint64_t sub_22BDF960C()
{
  return sub_22BDDC370(&qword_268486BC8, type metadata accessor for AttributeName);
}

uint64_t sub_22BDF9654()
{
  return sub_22BDDC370(&qword_268486BD0, type metadata accessor for AttributeName);
}

uint64_t sub_22BDF969C()
{
  return sub_22BDDC370(&qword_268486BD8, type metadata accessor for FPProviderDomainID);
}

uint64_t sub_22BDF96E4()
{
  return sub_22BDDC370((unint64_t *)&unk_268486BE0, type metadata accessor for FPProviderDomainID);
}

uint64_t sub_22BDF972C()
{
  return sub_22BDDC370((unint64_t *)&unk_26AF003E8, type metadata accessor for FPProviderDomainID);
}

uint64_t sub_22BDF9774()
{
  return sub_22BDDC370(&qword_268486BF0, type metadata accessor for DOCDocumentSourceIdentifier);
}

uint64_t sub_22BDF97BC()
{
  return sub_22BDDC370(&qword_268486BF8, type metadata accessor for DOCDocumentSourceIdentifier);
}

uint64_t sub_22BDF9804()
{
  return sub_22BDDC370(&qword_268486C08, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_22BDF984C()
{
  return sub_22BDDC370(&qword_268486C10, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_22BDF9894()
{
  return sub_22BDDC370(&qword_268486C18, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_22BDF98DC()
{
  return sub_22BDDC370(&qword_268486C20, type metadata accessor for NSFileProviderItemIdentifier);
}

uint64_t sub_22BDF9924()
{
  return sub_22BDDC370(&qword_268486C28, type metadata accessor for NSFileProviderItemIdentifier);
}

uint64_t sub_22BDF996C()
{
  return sub_22BDDC370(&qword_268486C30, type metadata accessor for NSFileProviderItemIdentifier);
}

uint64_t sub_22BDF99B4()
{
  return sub_22BDDC370(&qword_268486C38, type metadata accessor for DOCIntentLocationType);
}

uint64_t sub_22BDF99FC()
{
  return sub_22BDDC370(&qword_268486C40, type metadata accessor for DOCIntentLocationType);
}

uint64_t sub_22BDF9A44()
{
  return sub_22BDDC370((unint64_t *)&unk_268486C48, type metadata accessor for DOCIntentLocationType);
}

uint64_t sub_22BDF9A8C()
{
  return sub_22BDDC370(&qword_268486C58, type metadata accessor for CFString);
}

double sub_22BDF9AD4@<D0>(double *a1@<X0>, id *a2@<X1>, double *a3@<X8>)
{
  return sub_22BDF5E34(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

void type metadata accessor for DOCSmartFolderHitType(uint64_t a1)
{
}

uint64_t sub_22BDF9B04()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BDF9B3C(void *a1)
{
  sub_22BE004D0(a1, v1);
}

uint64_t sub_22BDF9B44()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22BDF9B84(void *a1, void *a2)
{
  sub_22BE0072C(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24));
}

void type metadata accessor for CSSearchQueryError(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for DisplayMode(uint64_t a1)
{
}

uint64_t sub_22BDF9BF4()
{
  return sub_22BDDC370(&qword_268486D08, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_22BDF9C3C()
{
  return sub_22BDDC370(&qword_268486D10, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_22BDF9C84()
{
  return sub_22BDDC370(&qword_268486D18, type metadata accessor for URLResourceKey);
}

uint64_t sub_22BDF9CCC()
{
  return sub_22BDDC370(&qword_268486D20, type metadata accessor for URLResourceKey);
}

uint64_t sub_22BDF9D14()
{
  return sub_22BDDC370(&qword_268486D28, type metadata accessor for URLResourceKey);
}

uint64_t sub_22BDF9D5C()
{
  return sub_22BDDC370(&qword_268486D30, type metadata accessor for CSSearchQueryError);
}

uint64_t sub_22BDF9DA4()
{
  return sub_22BDDC370(&qword_268486D38, type metadata accessor for CSSearchQueryError);
}

uint64_t sub_22BDF9DEC()
{
  return sub_22BDDC370(&qword_268486D40, type metadata accessor for FPProviderID);
}

uint64_t sub_22BDF9E34()
{
  return sub_22BDDC370((unint64_t *)&unk_268486D48, type metadata accessor for FPProviderID);
}

uint64_t sub_22BDF9E7C()
{
  return sub_22BDDC370(&qword_268486D58, type metadata accessor for CSSearchQueryError);
}

uint64_t sub_22BDF9EC4()
{
  return sub_22BDDC370(&qword_268486D60, type metadata accessor for CSSearchQueryError);
}

uint64_t sub_22BDF9F0C()
{
  return sub_22BDDC370(&qword_268486D68, type metadata accessor for CSSearchQueryError);
}

uint64_t sub_22BDF9F54()
{
  return sub_22BDDC370(&qword_268486D70, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_22BDF9FB0()
{
  return sub_22BDDC370(&qword_268486D78, type metadata accessor for Code);
}

unint64_t sub_22BDF9FFC()
{
  unint64_t result = qword_268486D80;
  if (!qword_268486D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486D80);
  }
  return result;
}

uint64_t sub_22BDFA050()
{
  return sub_22BDDC370(&qword_268486D88, type metadata accessor for Code);
}

uint64_t sub_22BDFA098()
{
  return sub_22BDDC370(&qword_268486D90, type metadata accessor for CSSearchQueryError);
}

uint64_t sub_22BDFA0E0()
{
  return sub_22BDDC370((unint64_t *)&unk_268486D98, type metadata accessor for NSKeyValueChangeKey);
}

void sub_22BDFA150(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain);
  swift_beginAccess();
  unint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_22BDFA1B4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void sub_22BDFA20C(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain);
  swift_beginAccess();
  unint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_22BDFA260())()
{
  return j__swift_endAccess;
}

void sub_22BDFA2E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (id *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain];
  swift_beginAccess();
  id v6 = objc_msgSend(*v5, sel_storageURLs);
  uint64_t v7 = sub_22BE92198();
  uint64_t v8 = sub_22BE92EB8();

  uint64_t v9 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v4, v8+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), v7);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v10, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v7) == 1)
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = (void *)sub_22BE92138();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v7);
  }
  id v12 = objc_msgSend(self, sel_fiNodeFromURL_, v11);

  if (v12)
  {
    objc_msgSend(v1, sel_setSubjectNode_, v12);
  }
}

void DOCEncryptedVolumeNode.init(subject:)()
{
}

id DOCEncryptedVolumeNode.__deallocating_deinit()
{
  return sub_22BDFAC0C(type metadata accessor for DOCEncryptedVolumeNode);
}

uint64_t type metadata accessor for DOCEncryptedVolumeNode()
{
  return self;
}

id sub_22BDFA7B0()
{
  return sub_22BDFAC0C(type metadata accessor for DOCNeedsAuthenticationNode);
}

char *DOCRootNode.__allocating_init(from:for:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BDD9D50(0, (unint64_t *)&unk_26AF00470);
  uint64_t v7 = sub_22BE92198();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  id v9 = static FINode.docNode(from:)((uint64_t)v6);
  sub_22BDFBCE4((uint64_t)v6);
  if (v9)
  {
    uint64_t v10 = (objc_class *)type metadata accessor for DOCRootNode();
    uint64_t v11 = (char *)objc_allocWithZone(v10);
    *(void *)&v11[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
    v15.receiver = v11;
    v15.super_class = v10;
    id v12 = (char *)objc_msgSendSuper2(&v15, sel_initWithSubject_, v9);

    uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
    *(void *)&v12[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = a2;
  }
  else
  {

    id v12 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v12;
}

char *DOCRootNode.__allocating_init(from:for:)(void *a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
  v9.receiver = v5;
  v9.super_class = v2;
  id v6 = (char *)objc_msgSendSuper2(&v9, sel_initWithSubject_, a1);

  uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = a2;

  return v6;
}

char *DOCRootNode.init(from:for:)(void *a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DOCRootNode();
  uint64_t v5 = (char *)objc_msgSendSuper2(&v8, sel_initWithSubject_, a1);

  id v6 = *(void **)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
  *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = a2;

  return v5;
}

id DOCRootNode.__allocating_init(subject:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithSubject_, a1);

  return v3;
}

void DOCRootNode.init(subject:)()
{
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;

  sub_22BE93778();
  __break(1u);
}

uint64_t sub_22BDFABA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void))
{
  *(void *)(a1 + *a4) = 0;
  a5();
  swift_deallocPartialClassInstance();
  return 0;
}

id DOCRootNode.__deallocating_deinit()
{
  return sub_22BDFAC0C(type metadata accessor for DOCRootNode);
}

id sub_22BDFAC0C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t DOCRootNode.identifier.getter()
{
  id v1 = objc_msgSend(v0, sel_source);
  id v2 = objc_msgSend(v1, sel_identifier);

  sub_22BE934B8();

  return swift_unknownObjectRelease();
}

void DOCRootNode.identifierKey.getter()
{
  id v1 = objc_msgSend(v0, sel_source);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_22BE934B8();
  swift_unknownObjectRelease();
  swift_dynamicCast();
}

id DOCRootNode.fpfs_fpItem.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_fpfs_fpItem);
}

id DOCRootNode.fileSize.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_fileSize);
}

void *DOCRootNode.fpDomain.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain);
  id v2 = v1;
  return v1;
}

id DOCRootNode.providerDomainID.getter()
{
  return sub_22BDFAFB0((SEL *)&selRef_identifier);
}

id sub_22BDFAF04(char *a1, uint64_t a2, SEL *a3)
{
  if (*(void *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain])
  {
    id v3 = [*(id *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] *a3];
  }
  else
  {
    uint64_t v4 = a1;
    id v3 = (id)sub_22BE92C98();
  }

  return v3;
}

id DOCRootNode.providerID.getter()
{
  return sub_22BDFAFB0((SEL *)&selRef_providerID);
}

id sub_22BDFAFB0(SEL *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain))
  {
    id v2 = [*(id *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain) *a1];
    return v2;
  }
  else
  {
    return (id)sub_22BE92C98();
  }
}

uint64_t DOCRootNode.doc_lastUsedDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDFB248((SEL *)&selRef_doc_lastUsedDate, a1);
}

id sub_22BDFB038(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB20);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  objc_super v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  id v11 = a1;
  id v12 = objc_msgSend(v11, sel_source);
  id v13 = [v12 *a3];

  if (v13)
  {
    sub_22BE92218();

    uint64_t v14 = sub_22BE92248();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  else
  {
    uint64_t v14 = sub_22BE92248();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_22BDFBF3C((uint64_t)v8, (uint64_t)v10);

  sub_22BE92248();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) != 1)
  {
    uint64_t v16 = (void *)sub_22BE921F8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }

  return v16;
}

uint64_t DOCRootNode.dateForSortingByRecents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDFB248((SEL *)&selRef_dateForSortingByRecents, a1);
}

uint64_t sub_22BDFB248@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = objc_msgSend(v2, sel_source);
  id v6 = [v5 *a1];

  if (v6)
  {
    sub_22BE92218();

    uint64_t v7 = sub_22BE92248();
    objc_super v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_22BE92248();
    objc_super v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t DOCRootNode.filename.getter()
{
  id v1 = objc_msgSend(v0, sel_source);
  id v2 = objc_msgSend(v1, sel_filename);

  uint64_t v3 = sub_22BE92CD8();
  return v3;
}

id DOCRootNode.isActionable.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isActionable);
}

id DOCRootNode.isReadable.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isReadable);
}

id DOCRootNode.isWritable.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isWritable);
}

id DOCRootNode.isPending.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isPending);
}

id DOCRootNode.isExternalDownloadPlaceholder.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isExternalDownloadPlaceholder);
}

id DOCRootNode.isCloudItem.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isCloudItem);
}

uint64_t DOCRootNode.isRootItem.getter()
{
  return 1;
}

id DOCRootNode.isDownloading.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isDownloading);
}

id DOCRootNode.isDownloaded.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isDownloaded);
}

id DOCRootNode.downloadingProgress.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_downloadingProgress);
}

id DOCRootNode.downloadingError.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_downloadingError);
}

id DOCRootNode.isUploading.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isUploading);
}

id sub_22BDFB57C(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_source);
  id v6 = [v5 *a3];

  return v6;
}

id DOCRootNode.isUploaded.getter()
{
  return sub_22BDFB5E8((SEL *)&selRef_isUploaded);
}

id sub_22BDFB5E8(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_source);
  id v4 = [v3 *a1];

  return v4;
}

id DOCRootNode.uploadingProgress.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_uploadingProgress);
}

id sub_22BDFB65C(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_source);
  id v6 = [v5 *a3];

  if (v6)
  {
    uint64_t v7 = (void *)sub_22BE92078();
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id DOCRootNode.uploadingError.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_uploadingError);
}

id sub_22BDFB708(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_source);
  id v6 = [v5 *a3];

  return v6;
}

id DOCRootNode.copyingProgress.getter()
{
  return sub_22BDFB78C((SEL *)&selRef_copyingProgress);
}

id sub_22BDFB78C(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_source);
  id v4 = [v3 *a1];

  return v4;
}

id DOCRootNode.localizedStandardTagsCompare(node:)(uint64_t a1)
{
  return sub_22BDFB808(a1, (SEL *)&selRef_localizedStandardTagsCompareNode_);
}

id DOCRootNode._doc_fileTypeCompare(node:)(uint64_t a1)
{
  return sub_22BDFB808(a1, (SEL *)&selRef__doc_fileTypeCompare_);
}

id sub_22BDFB808(uint64_t a1, SEL *a2)
{
  id v5 = objc_msgSend(v2, sel_source);
  id v6 = objc_msgSend(v5, *a2, a1);

  return v6;
}

id sub_22BDFB874(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  swift_unknownObjectRetain();
  id v7 = a1;
  id v8 = objc_msgSend(v7, sel_source);
  id v9 = objc_msgSend(v8, *a4, a3);
  swift_unknownObjectRelease();

  return v9;
}

uint64_t FPProviderDomain.isPOSIXCompatible.getter()
{
  if ((objc_msgSend(v0, sel_isUsingFPFS) & 1) != 0
    || (objc_msgSend(v0, sel_isiCloudDriveProvider) & 1) != 0
    || (id v1 = objc_msgSend(v0, sel_identifier),
        char v2 = DOCProviderDomainIDIsExternalDevice(),
        v1,
        (v2 & 1) != 0)
    || (id v3 = objc_msgSend(v0, sel_identifier),
        char v4 = DOCProviderDomainIDIsSharedServerDomainID(),
        v3,
        (v4 & 1) != 0))
  {
    char v5 = 1;
  }
  else
  {
    id v7 = objc_msgSend(v0, sel_identifier);
    uint64_t v8 = sub_22BE92CD8();
    uint64_t v10 = v9;

    if (v8 == sub_22BE92CD8() && v10 == v11) {
      char v5 = 1;
    }
    else {
      char v5 = sub_22BE938C8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t FPProviderDomain.shouldUseDSCopyEngine.getter()
{
  if ((objc_msgSend(v0, sel_isUsingFPFS) & 1) != 0
    || (objc_msgSend(v0, sel_isiCloudDriveProvider) & 1) != 0
    || (id v1 = objc_msgSend(v0, sel_identifier),
        char v2 = DOCProviderDomainIDIsExternalDevice(),
        v1,
        (v2 & 1) != 0)
    || (id v3 = objc_msgSend(v0, sel_identifier),
        char v4 = DOCProviderDomainIDIsSharedServerDomainID(),
        v3,
        (v4 & 1) != 0))
  {
    char v5 = 1;
  }
  else
  {
    id v7 = objc_msgSend(v0, sel_identifier);
    uint64_t v8 = sub_22BE92CD8();
    uint64_t v10 = v9;

    if (v8 == sub_22BE92CD8() && v10 == v11) {
      char v5 = 1;
    }
    else {
      char v5 = sub_22BE938C8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t FPProviderDomain.shouldResolveDSNodeAsFPv2.getter()
{
  if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
    && (objc_msgSend(v0, sel_isUsingFPFS) & 1) == 0)
  {
    char v1 = FPProviderDomain.isPOSIXCompatible.getter() ^ 1;
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_22BDFBB94(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00540);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BDFBCE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22BDFBD44()
{
  unint64_t result = qword_268486EB8;
  if (!qword_268486EB8)
  {
    sub_22BE92198();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486EB8);
  }
  return result;
}

uint64_t type metadata accessor for DOCNeedsAuthenticationNode()
{
  return self;
}

id sub_22BDFBDC0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain);
  swift_beginAccess();
  char v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t method lookup function for DOCEncryptedVolumeNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCEncryptedVolumeNode);
}

uint64_t dispatch thunk of DOCEncryptedVolumeNode.domain.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DOCEncryptedVolumeNode.domain.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DOCEncryptedVolumeNode.domain.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DOCEncryptedVolumeNode.tryResolving()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t method lookup function for DOCRootNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCRootNode);
}

uint64_t dispatch thunk of DOCRootNode.__allocating_init(from:for:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_22BDFBF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall SYDocumentAttributes.performReturnToDocumentRequest()()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7C228]), sel_init);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7C240]), sel_init);
  objc_msgSend(v2, sel_setDocumentAttributes_, v0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  v6[4] = sub_22BDFC110;
  v6[5] = v3;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_22BDFC13C;
  v6[3] = &block_descriptor_0;
  uint64_t v4 = _Block_copy(v6);
  id v5 = v2;
  swift_release();
  objc_msgSend(v1, sel_performRequest_completion_, v5, v4);
  _Block_release(v4);
}

uint64_t sub_22BDFC0D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BDFC110(char a1, void *a2)
{
  sub_22BDFC558(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef_documentAttributes, "Error while performing SYReturnToDocumentRequest with attributes %@: %s");
}

void sub_22BDFC13C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_22BE91C58();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void SYDocumentAttributes.performReplyToSenderRequest(with:)(uint64_t a1)
{
  uint64_t v2 = sub_22BE92198();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone(MEMORY[0x263F7C218]);
  int64_t v7 = (void *)sub_22BE92138();
  id v8 = objc_msgSend(v6, sel_initWithFileURL_, v7);

  if (v8)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7C228]), sel_init);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7C248]), sel_init);
    objc_msgSend(v10, sel_setDocument_, v8);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    aBlock[4] = (uint64_t)sub_22BDFC808;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_22BDFC13C;
    void aBlock[3] = (uint64_t)&block_descriptor_6;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v10;
    swift_release();
    objc_msgSend(v9, sel_performRequest_completion_, v13, v12);
    _Block_release(v12);
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_22BE925E8();
    __swift_project_value_buffer(v14, (uint64_t)qword_2684879E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    uint64_t v15 = sub_22BE925C8();
    os_log_type_t v16 = sub_22BE93158();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      sub_22BDFBD44();
      uint64_t v19 = sub_22BE93878();
      void aBlock[6] = sub_22BDD8478(v19, v20, aBlock);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl(&dword_22BDC5000, v15, v16, "Could not create SYDocument from URL %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v18, -1, -1);
      MEMORY[0x230F57540](v17, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

void sub_22BDFC558(char a1, void *a2, void *a3, SEL *a4, const char *a5)
{
  if ((a1 & 1) == 0)
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_22BE925E8();
    __swift_project_value_buffer(v9, (uint64_t)qword_2684879E0);
    id v10 = a3;
    id v11 = a2;
    id v12 = v10;
    id v13 = a2;
    oslog = sub_22BE925C8();
    os_log_type_t v14 = sub_22BE93158();
    if (os_log_type_enabled(oslog, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v23 = v17;
      *(_DWORD *)uint64_t v15 = 138412546;
      id v18 = [v12 *a4];
      sub_22BE93408();
      void *v16 = v18;

      *(_WORD *)(v15 + 12) = 2080;
      id v19 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268488470);
      uint64_t v20 = sub_22BE92CF8();
      sub_22BDD8478(v20, v21, &v23);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22BDC5000, oslog, v14, a5, (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v17, -1, -1);
      MEMORY[0x230F57540](v15, -1, -1);
    }
    else
    {
    }
  }
}

void sub_22BDFC808(char a1, void *a2)
{
  sub_22BDFC558(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef_document, "Error while performing SYReturnToSenderRequest with document %@: %s");
}

double DOCColumnViewSpecs.columnWidth.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth);
}

id DOCColumnViewSpecs.__allocating_init(traitCollection:columnBrowserSize:)(void *a1, double a2, double a3)
{
  sub_22BDFCAC8(a1);
  uint64_t v7 = v6;
  id v8 = (objc_class *)type metadata accessor for DOCColumnViewSpecs();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  id v10 = (double *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize];
  *id v10 = a2;
  v10[1] = a3;
  *(void *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth] = v7;
  v13.receiver = v9;
  v13.super_class = v8;
  id v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

BOOL static DOCColumnViewSpecs.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize) == *(double *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize)
      && *(double *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize + 8) == *(double *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize + 8)
      && *(double *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth) == *(double *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth);
}

id sub_22BDFC984()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize + 8);
  uint64_t v3 = (objc_class *)type metadata accessor for DOCColumnViewSpecs();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  id v5 = &v4[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize];
  *(void *)id v5 = v1;
  *((void *)v5 + 1) = v2;
  *(void *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth] = v1;
  v7.receiver = v4;
  v7.super_class = v3;
  return objc_msgSendSuper2(&v7, sel_init);
}

id DOCColumnViewSpecs.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCColumnViewSpecs.init()()
{
}

id DOCColumnViewSpecs.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCColumnViewSpecs();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BDFCAC8(void *a1)
{
  objc_super v2 = self;
  id v3 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v3, sel_bounds);
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v30.origin.x = v5;
  v30.origin.y = v7;
  v30.size.width = v9;
  v30.size.height = v11;
  double v12 = CGRectGetWidth(v30) * 0.5;
  id v13 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v13, sel_bounds);
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v31.origin.x = v15;
  v31.origin.y = v17;
  v31.size.width = v19;
  v31.size.height = v21;
  double v22 = CGRectGetHeight(v31) * 0.6;
  if (v12 > v22) {
    double v23 = v12;
  }
  else {
    double v23 = v22;
  }
  id v24 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  if (sub_22BE932D8()) {
    sub_22BE932E8();
  }

  uint64_t v25 = sub_22BE86C88();
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    for (uint64_t i = 0; v26 != i; ++i)
    {
      if (*(unsigned char *)(v25 + i + 32))
      {
        if (*(unsigned char *)(v25 + i + 32) == 1) {
          double v28 = 400.0;
        }
        else {
          double v28 = 480.0;
        }
        if (v28 < v23) {
          return swift_bridgeObjectRelease();
        }
      }
      else if (v23 > 320.0)
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for DOCColumnViewSpecs(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCColumnViewSpecs);
}

uint64_t dispatch thunk of DOCColumnViewSpecs.fullBrowserColumnWidthSpec.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t sub_22BDFCD10(uint64_t a1)
{
  uint64_t result = sub_22BDE138C(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_22BDFEC54(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

void *sub_22BDFCD90(uint64_t a1)
{
  uint64_t result = (void *)sub_22BDFEB48(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_22BDFEBD0(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_22BDFCE18(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_22BE92DF8();
  }
  else {
    return 0;
  }
}

uint64_t sub_22BDFCE60(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_22BE93518();
    uint64_t v5 = v4;
    uint64_t v6 = sub_22BE935C8();
    char v8 = MEMORY[0x230F55FF0](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_22BDFF9E4(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_22BDFE868(v3, v5, v2 != 0, a1);
    uint64_t v9 = v13;
    sub_22BDFF9E4(v3, v5, v2 != 0);
    return v9;
  }
  uint64_t result = sub_22BDFEAC0(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v5 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void __swiftcall DOCAnalyticsActionEvent.init(actionType:client:provider:source:viewMode:sortingField:sortingOrder:bundleID:)(DocumentManagerExecutables::DOCAnalyticsActionEvent *__return_ptr retstr, DocumentManagerExecutables::DOCAnalyticsActionEvent::Action actionType, DocumentManagerExecutables::DOCAnalyticsActionEvent::Client client, DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider provider, DocumentManagerExecutables::DOCAnalyticsActionEvent::Source source, DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode viewMode, DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode sortingField, DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder sortingOrder, Swift::String_optional bundleID)
{
  DocumentManagerExecutables::DOCAnalyticsActionEvent::Action v9 = *(unsigned char *)actionType;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::Client v10 = *(unsigned char *)client;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider v11 = *(unsigned char *)provider;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::Source v12 = *(unsigned char *)source;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode v13 = *(unsigned char *)viewMode;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode v14 = *(unsigned char *)sortingField;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder v15 = *(unsigned char *)sortingOrder;
  retstr->name._char countAndFlagsBits = 0xD000000000000032;
  retstr->name._object = (void *)0x800000022BE9FB50;
  retstr->Swift::String_optional bundleID = bundleID;
  retstr->actionType = v9;
  retstr->client = v10;
  retstr->provider = v11;
  retstr->source = v12;
  retstr->viewMode = v13;
  retstr->sortMode = v14;
  retstr->sortOrder = v15;
}

uint64_t DOCAnalyticsActionEvent.Action.rawValue.getter()
{
  return *v0;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Action_optional __swiftcall DOCAnalyticsActionEvent.Action.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::Action_optional)rawValue;
}

BOOL sub_22BDFCFEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22BDFD004()
{
  return sub_22BE93A08();
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Action_optional sub_22BDFD034(Swift::Int *a1)
{
  return DOCAnalyticsActionEvent.Action.init(rawValue:)(*a1);
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Client_optional __swiftcall DOCAnalyticsActionEvent.Client.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 7;
  if ((unint64_t)rawValue < 7) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::Client_optional)rawValue;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Client_optional sub_22BDFD050(Swift::Int *a1)
{
  return DOCAnalyticsActionEvent.Client.init(rawValue:)(*a1);
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional __swiftcall DOCAnalyticsActionEvent.FileProvider.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 9;
  if ((unint64_t)rawValue < 9) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional)rawValue;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional sub_22BDFD06C(Swift::Int *a1)
{
  return DOCAnalyticsActionEvent.FileProvider.init(rawValue:)(*a1);
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional __swiftcall DOCAnalyticsActionEvent.FileProvider.init(providerDomainID:)(__C::FPProviderDomainID providerDomainID)
{
  uint64_t v3 = v1;
  if (DOCProviderDomainIDIsExternalDevice())
  {

    char v5 = 5;
  }
  else
  {
    int v6 = DOCProviderDomainIDIsSharedServerDomainID();

    if (v6) {
      char v5 = 6;
    }
    else {
      char v5 = 9;
    }
  }
  *uint64_t v3 = v5;
  return result;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Source_optional __swiftcall DOCAnalyticsActionEvent.Source.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::Source_optional)rawValue;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Source_optional sub_22BDFD0EC(Swift::Int *a1)
{
  return DOCAnalyticsActionEvent.Source.init(rawValue:)(*a1);
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode_optional __swiftcall DOCAnalyticsActionEvent.SortMode.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 8;
  if ((unint64_t)rawValue < 8) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode_optional)rawValue;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode_optional sub_22BDFD108(Swift::Int *a1)
{
  return DOCAnalyticsActionEvent.SortMode.init(rawValue:)(*a1);
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode __swiftcall DOCAnalyticsActionEvent.SortMode.init(itemSortMode:)(DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode itemSortMode)
{
  unsigned char *v1 = *(unsigned char *)itemSortMode + 1;
  return itemSortMode;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder_optional __swiftcall DOCAnalyticsActionEvent.SortOrder.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder_optional)rawValue;
}

uint64_t sub_22BDFD134()
{
  return sub_22BE93A48();
}

uint64_t sub_22BDFD17C()
{
  return sub_22BE93A48();
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder_optional sub_22BDFD1C0(Swift::Int *a1)
{
  return DOCAnalyticsActionEvent.SortOrder.init(rawValue:)(*a1);
}

unint64_t sub_22BDFD1C8(uint64_t a1)
{
  uint64_t v2 = sub_22BE935D8();

  return sub_22BDFD7BC(a1, v2);
}

unint64_t sub_22BDFD20C(uint64_t a1)
{
  uint64_t v2 = sub_22BE939E8();

  return sub_22BDFD884(a1, v2);
}

unint64_t sub_22BDFD250(void *a1)
{
  sub_22BE939F8();
  sub_22BE93A18();
  if (a1)
  {
    type metadata accessor for CFString(0);
    sub_22BDDD3E4(&qword_268486F70, type metadata accessor for CFString);
    id v2 = a1;
    sub_22BE92358();
  }
  uint64_t v3 = sub_22BE93A48();

  return sub_22BDFD920((uint64_t)a1, v3);
}

unint64_t sub_22BDFD338(unsigned __int8 a1)
{
  sub_22BE939F8();
  sub_22BE92D48();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_22BE93A48();

  return sub_22BDFDA40(a1, v2);
}

unint64_t sub_22BDFD428(uint64_t a1)
{
  sub_22BE92388();
  sub_22BDDD3E4(&qword_268486F58, MEMORY[0x263F8F348]);
  uint64_t v2 = sub_22BE92C48();

  return sub_22BDFDC30(a1, v2);
}

unint64_t sub_22BDFD4C0(unsigned __int8 a1)
{
  sub_22BE939F8();
  sub_22BE92D48();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_22BE93A48();

  return sub_22BDFDDF0(a1, v2);
}

unint64_t sub_22BDFD5A4(unsigned __int8 a1)
{
  sub_22BE939F8();
  sub_22BE92D48();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_22BE93A48();

  return sub_22BDFDFC0(a1, v2);
}

unint64_t sub_22BDFD674(unsigned __int8 a1)
{
  sub_22BE939F8();
  sub_22BE92D48();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_22BE93A48();

  return sub_22BDFE174(a1, v2);
}

unint64_t sub_22BDFD728(uint64_t a1)
{
  sub_22BE92CD8();
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t v2 = sub_22BE93A48();
  swift_bridgeObjectRelease();

  return sub_22BDDBFE0(a1, v2);
}

unint64_t sub_22BDFD7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_22BDFFA30(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x230F560A0](v9, a1);
      sub_22BDFFA8C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_22BDFD884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_22BDFD920(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    do
    {
      DocumentManagerExecutables::DOCAnalyticsActionEvent::Action v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          type metadata accessor for CFString(0);
          sub_22BDDD3E4(&qword_268486F70, type metadata accessor for CFString);
          id v10 = v9;
          char v11 = sub_22BE92348();

          if (v11) {
            return v5;
          }
        }
      }
      else if (!a1)
      {
        return v5;
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_22BDFDA40(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1701736302;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 1684957547;
          break;
        case 2:
          uint64_t v8 = 1702125924;
          break;
        case 3:
          uint64_t v8 = 1702521203;
          break;
        case 4:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7942646572616873;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1701736302;
      switch(v6)
      {
        case 1:
          if (v8 == 1684957547) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          if (v8 != 1702125924) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          uint64_t v10 = 1702521203;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7942646572616873) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_22BDFDC30(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_22BE92388();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_22BDDD3E4(&qword_268486F60, MEMORY[0x263F8F348]);
      char v15 = sub_22BE92C68();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_22BDFDDF0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x736F64736DLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x7461667865;
          break;
        case 2:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 7562856;
          break;
        case 3:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1936093281;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x736F64736DLL;
      switch(v6)
      {
        case 1:
          if (v8 == 0x7461667865) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 7562856;
          goto LABEL_11;
        case 3:
          unint64_t v9 = 0xE400000000000000;
          if (v8 == 1936093281) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v10) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_22BDFDFC0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v7 = 0x6574707972636E65;
          unint64_t v8 = 0xE900000000000064;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v7 = 0x736E655365736163;
          unint64_t v8 = 0xED00006576697469;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE400000000000000;
            if (v7 != 1701736302) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v8 = 0xE400000000000000;
        uint64_t v7 = 1701736302;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x6574707972636E65;
      }
      else {
        uint64_t v10 = 0x736E655365736163;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE900000000000064;
      }
      else {
        unint64_t v11 = 0xED00006576697469;
      }
      if (v7 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_22BDFE174(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        unint64_t v7 = 0xE400000000000000;
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v8 = 2003789939;
          int v9 = a1;
          if (!a1) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v8 = 1701079400;
          int v9 = a1;
          if (!a1)
          {
LABEL_14:
            unint64_t v11 = 0xE600000000000000;
            if (v8 != 0x656C67676F74) {
              goto LABEL_16;
            }
            goto LABEL_15;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x656C67676F74;
        int v9 = a1;
        if (!a1) {
          goto LABEL_14;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 2003789939;
      }
      else {
        uint64_t v10 = 1701079400;
      }
      unint64_t v11 = 0xE400000000000000;
      if (v8 != v10) {
        goto LABEL_16;
      }
LABEL_15:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_16:
      char v12 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

uint64_t sub_22BDFE2E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDFE3D8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22BDFE308(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDFE544(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22BDFE328(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDFE6D8(a1, a2, a3, (void *)*v3, &qword_268486F68, &qword_268487560);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22BDFE358(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDD0A5C(a1, a2, a3, *v3, &qword_268486F20);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22BDFE380(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDFE6D8(a1, a2, a3, (void *)*v3, &qword_268486F40, &qword_268486F48);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_22BDFE3B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_22BDD0A5C(a1, a2, a3, *v3, &qword_268486F30);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_22BDFE3D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00518);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BDFE544(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486F50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BDFE6CC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_22BDD0A5C(a1, a2, a3, a4, &qword_268486F80);
}

uint64_t sub_22BDFE6D8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

void sub_22BDFE868(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x230F56040](a1, a2, v7);
      sub_22BDFF9F0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_22BE93548() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_22BE93558();
  sub_22BDFF9F0();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_22BE93318();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_22BE93328();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_22BE93328();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v16 = v15;
}

uint64_t sub_22BDFEAC0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_22BDFEB48(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_22BDFEBD0(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    char v5 = *(void **)(*(void *)(a5 + 48) + 8 * a2);
    unsigned int v6 = *(void **)(*(void *)(a5 + 56) + 8 * a2);
    *uint64_t result = v6;
    id v7 = v5;
    id v8 = v6;
    return v7;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_22BDFEC54(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_22BDFECA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_22BE93058();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_22BE53858(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_22BDFED44()
{
  unint64_t result = qword_268486EE8;
  if (!qword_268486EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486EE8);
  }
  return result;
}

unint64_t sub_22BDFED9C()
{
  unint64_t result = qword_268486EF0;
  if (!qword_268486EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486EF0);
  }
  return result;
}

unint64_t sub_22BDFEDF4()
{
  unint64_t result = qword_268486EF8;
  if (!qword_268486EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486EF8);
  }
  return result;
}

unint64_t sub_22BDFEE4C()
{
  unint64_t result = qword_268486F00;
  if (!qword_268486F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486F00);
  }
  return result;
}

unint64_t sub_22BDFEEA4()
{
  unint64_t result = qword_268486F08;
  if (!qword_268486F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486F08);
  }
  return result;
}

unint64_t sub_22BDFEEFC()
{
  unint64_t result = qword_268486F10;
  if (!qword_268486F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486F10);
  }
  return result;
}

unint64_t sub_22BDFEF54()
{
  unint64_t result = qword_268486F18;
  if (!qword_268486F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486F18);
  }
  return result;
}

uint64_t initializeWithCopy for DOCAnalyticsActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCAnalyticsActionEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  return a1;
}

__n128 __swift_memcpy39_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 31) = *(void *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DOCAnalyticsActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 39)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 38) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 39) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 39) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.Action(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsActionEvent.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BDFF30CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsActionEvent.Client(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BDFF404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.Client()
{
  return &type metadata for DOCAnalyticsActionEvent.Client;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.FileProvider(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsActionEvent.FileProvider(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BDFF598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DOCUserActivityIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.SortMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsActionEvent.SortMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BDFF7D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.SortMode()
{
  return &type metadata for DOCAnalyticsActionEvent.SortMode;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.SortOrder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsActionEvent.SortOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BDFF96CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.SortOrder()
{
  return &type metadata for DOCAnalyticsActionEvent.SortOrder;
}

uint64_t sub_22BDFF9A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 55, 7);
}

uint64_t sub_22BDFF9E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_22BDFF9F0()
{
  unint64_t result = qword_268486F38;
  if (!qword_268486F38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268486F38);
  }
  return result;
}

uint64_t sub_22BDFFA30(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22BDFFA8C(uint64_t a1)
{
  return a1;
}

id static FILocalStorageNode.sharedInstance(for:)(void *a1)
{
  v25[1] = *(id *)MEMORY[0x263EF8340];
  int v2 = self;
  id v3 = objc_msgSend(v2, sel_currentSharedInstance);
  if (v3) {
    return v3;
  }
  if (a1)
  {
    uint64_t v5 = a1;
LABEL_7:
    id v11 = a1;
    id v12 = (id)DOCLocalizedDisplayName();
    if (!v12)
    {
      sub_22BE92CD8();
      id v12 = (id)sub_22BE92C98();
      swift_bridgeObjectRelease();
    }
    id v4 = objc_msgSend(v2, sel_sharedInstanceWithDisplayName_domain_, v12, v5);

    return v4;
  }
  unsigned int v6 = (void *)*MEMORY[0x263F3AB60];
  BOOL v7 = self;
  v25[0] = 0;
  id v8 = v6;
  id v9 = objc_msgSend(v7, sel_providerDomainWithID_cachePolicy_error_, v8, 3, v25);
  if (v9)
  {
    uint64_t v5 = v9;
    id v10 = v25[0];

    goto LABEL_7;
  }
  id v14 = v25[0];
  uint64_t v15 = (void *)sub_22BE92088();

  swift_willThrow();
  if (qword_268486868 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_22BE925E8();
  __swift_project_value_buffer(v16, (uint64_t)qword_268487B30);
  id v17 = v15;
  id v18 = v15;
  uint64_t v19 = sub_22BE925C8();
  os_log_type_t v20 = sub_22BE93158();
  if (os_log_type_enabled(v19, v20))
  {
    CGFloat v21 = (uint8_t *)swift_slowAlloc();
    double v22 = (void *)swift_slowAlloc();
    v25[0] = v22;
    *(_DWORD *)CGFloat v21 = 136315138;
    swift_getErrorValue();
    uint64_t v23 = sub_22BE93988();
    sub_22BDD8478(v23, v24, (uint64_t *)v25);
    sub_22BE93408();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22BDC5000, v19, v20, "[FPFS] Unable to create local storage domain %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v22, -1, -1);
    MEMORY[0x230F57540](v21, -1, -1);
  }
  else
  {
  }
  return 0;
}

id static FINode.docNode(from:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  id v8 = (char *)&v20 - v7;
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v20 - v9;
  id v11 = objc_msgSend(self, sel_shared);
  objc_msgSend(v11, sel_startIfNeeded);

  sub_22BE0012C(a1, (uint64_t)v10);
  uint64_t v12 = sub_22BE92198();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_22BDFBCE4((uint64_t)v10);
    int v15 = 0;
  }
  else
  {
    char v16 = sub_22BE92178();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    int v15 = v16 & 1;
  }
  sub_22BE0012C(a1, (uint64_t)v8);
  if (v14(v8, 1, v12) == 1)
  {
    id v17 = 0;
  }
  else
  {
    id v17 = (void *)sub_22BE92138();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  id v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fiNodeFromURL_, v17);

  if (v15)
  {
    sub_22BE0012C(a1, (uint64_t)v5);
    if (v14(v5, 1, v12) == 1)
    {
      sub_22BDFBCE4((uint64_t)v5);
    }
    else
    {
      sub_22BE92158();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
  }
  return v18;
}

void static FINode.startIfNeeded()()
{
  id v0 = objc_msgSend(self, sel_shared);
  objc_msgSend(v0, sel_startIfNeeded);
}

uint64_t sub_22BE0012C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t DOCUserActivityItemIdentifierKey.getter()
{
  return 0xD000000000000020;
}

unint64_t DOCUserActivityFileProviderIdentifierKey.getter()
{
  return 0xD000000000000028;
}

unint64_t DOCUserActivityFileProviderDomainIdentifierKey.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t DOCUserActivityCrossDeviceItemIdentifierKey.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t DOCUserActivityLocalizedFileNameKey.getter()
{
  return 0xD000000000000023;
}

unint64_t DOCUserActivityLocalizedDomainNameKey.getter()
{
  return 0xD000000000000025;
}

unint64_t DOCUserActivityFPItemKey.getter()
{
  return 0xD000000000000018;
}

unint64_t DOCUserActivityLocationKey.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t DOCUserActivityTagNameKey.getter()
{
  return 0xD000000000000019;
}

unint64_t DOCUserActivityQuickLookStateRestorationUserInfoKey.getter()
{
  return 0xD000000000000024;
}

uint64_t static DOCUserActivityIdentifier.identifierSupportsRestoration(_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000020 && a2 == 0x800000022BE9EE30
    || (sub_22BE938C8() & 1) != 0
    || a1 == 0xD00000000000001DLL && a2 == 0x800000022BE9EE60)
  {
    return 1;
  }

  return sub_22BE938C8();
}

unint64_t DOCUserActivityIdentifier.rawValue.getter()
{
  unint64_t result = 0xD000000000000020;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000024;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

DocumentManagerExecutables::DOCUserActivityIdentifier_optional __swiftcall DOCUserActivityIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_22BE93858();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_22BE00470(char *a1, char *a2)
{
  return sub_22BE7C2DC(*a1, *a2);
}

uint64_t sub_22BE0047C()
{
  return sub_22BE86EA0();
}

uint64_t sub_22BE00484()
{
  return sub_22BE80778();
}

uint64_t sub_22BE0048C()
{
  return sub_22BE8750C();
}

DocumentManagerExecutables::DOCUserActivityIdentifier_optional sub_22BE00494(Swift::String *a1)
{
  return DOCUserActivityIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_22BE004A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DOCUserActivityIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22BE004C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BE03458(a1, a2, a3, a4, a3);
}

void sub_22BE004D0(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  v7[4] = sub_22BE03978;
  v7[5] = v4;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_22BDD0BA8;
  v7[3] = &block_descriptor_35;
  char v5 = _Block_copy(v7);
  id v6 = a1;
  sub_22BE91C58();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
}

uint64_t sub_22BE005A8(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x230F57630](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    id v8 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
    id v9 = a2;
    v8(a2, ObjectType, v6);
    (*(void (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22BE00660(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_msgSend(a1, sel_itemID);
  id v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  id v9 = *(void (**)(id, void (*)(void *, void *), void *))(v3 + 96);
  id v10 = a1;
  sub_22BE91C58();
  v9(v7, sub_22BDF9B84, v8);

  return swift_release();
}

void sub_22BE0072C(void *a1, void *a2, void *a3, void (*a4)(void))
{
  uint64_t v103 = *MEMORY[0x263EF8340];
  if (!a1)
  {
    if (a2)
    {
      type metadata accessor for CFError(0);
      sub_22BE038B4(&qword_268486F98, type metadata accessor for CFError);
      id v11 = (void *)swift_allocError();
      void *v12 = a2;
      uint64_t v13 = qword_2684867F0;
      id v14 = a2;
      if (v13 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_22BE925E8();
      __swift_project_value_buffer(v15, (uint64_t)qword_2684879C8);
      id v16 = a3;
      id v17 = v11;
      id v18 = v16;
      id v19 = v11;
      uint64_t v20 = sub_22BE925C8();
      os_log_type_t v21 = sub_22BE93158();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        id v98 = (void *)swift_slowAlloc();
        uint64_t v99 = (void *)swift_slowAlloc();
        id v101 = v99;
        *(_DWORD *)uint64_t v22 = 138412546;
        id v23 = v11;
        uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        sub_22BE93408();
        *id v98 = v24;

        *(_WORD *)(v22 + 12) = 2080;
        id v25 = objc_msgSend(v18, sel_displayName);
        uint64_t v26 = a4;
        uint64_t v27 = sub_22BE92CD8();
        double v28 = v20;
        unint64_t v30 = v29;

        uint64_t v31 = v27;
        a4 = v26;
        sub_22BDD8478(v31, v30, (uint64_t *)&v101);
        sub_22BE93408();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22BDC5000, v28, v21, "Failed to create cross device itemID %@ for item: %s", (uint8_t *)v22, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v98, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v99, -1, -1);
        MEMORY[0x230F57540](v22, -1, -1);
      }
      else
      {
      }
    }
    id v40 = 0;
    goto LABEL_26;
  }
  id v6 = a1;
  unsigned __int8 v7 = objc_msgSend(a3, sel_isFolder);
  id v8 = (id)_DocumentManagerBundle();
  id v9 = v8;
  uint64_t v97 = a4;
  if (v7)
  {
    if (!v8)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v92 = 0x800000022BE9FF90;
LABEL_12:
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_22BE99770;
    id v33 = objc_msgSend(a3, sel_displayName, v92);
    uint64_t v34 = sub_22BE92CD8();
    uint64_t v36 = v35;

    uint64_t v37 = MEMORY[0x263F8D310];
    *(void *)(v32 + 56) = MEMORY[0x263F8D310];
    *(void *)(v32 + 64) = sub_22BDF8220();
    *(void *)(v32 + 32) = v34;
    *(void *)(v32 + 40) = v36;
    sub_22BE92CE8();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_isFolder);
    id v38 = objc_allocWithZone(MEMORY[0x263F018D0]);
    unint64_t v39 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v38, sel_initWithActivityType_, v39);

    uint64_t v41 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setTitle_, v41);

    objc_msgSend(v40, sel_setEligibleForPrediction_, 1);
    objc_msgSend(v40, sel_setEligibleForSearch_, 1);
    objc_msgSend(v40, sel_setEligibleForPublicIndexing_, 0);
    objc_msgSend(v40, sel_setEligibleForHandoff_, 0);
    sub_22BE0F3A8((uint64_t)&unk_26DF41E70);
    swift_arrayDestroy();
    uint64_t v42 = (void *)sub_22BE93038();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setRequiredUserInfoKeys_, v42);

    __swift_instantiateConcreteTypeFromMangledName(&qword_268486FB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22BE97A30;
    sub_22BE935F8();
    type metadata accessor for CFString(0);
    *(void *)(inited + 96) = v44;
    *(void *)(inited + 72) = v6;
    unint64_t v102 = 0x800000022BE9FC20;
    id v96 = v6;
    sub_22BE935F8();
    id v45 = objc_msgSend(a3, sel_displayName);
    uint64_t v46 = sub_22BE92CD8();
    uint64_t v48 = v47;

    *(void *)(inited + 168) = v37;
    *(void *)(inited + 144) = v46;
    *(void *)(inited + 152) = v48;
    sub_22BE1A51C(inited);
    id v49 = (void *)sub_22BE92BE8();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_addUserInfoEntriesFromDictionary_, v49);

    id v50 = self;
    id v101 = 0;
    id v51 = a3;
    id v52 = objc_msgSend(v50, sel_providerDomainForItem_cachePolicy_error_, v51, 3, &v101);
    if (v52)
    {
      id v53 = v52;
      id v54 = v101;

      id v55 = (id)DOCLocalizedDisplayName();
      uint64_t v56 = sub_22BE92CD8();
      uint64_t v58 = v57;

      uint64_t v59 = swift_initStackObject();
      *(_OWORD *)(v59 + 16) = xmmword_22BE99770;
      id v101 = (id)0xD000000000000025;
      unint64_t v102 = 0x800000022BE9FC50;
      sub_22BE935F8();
      *(void *)(v59 + 96) = v37;
      *(void *)(v59 + 72) = v56;
      *(void *)(v59 + 80) = v58;
      sub_22BE1A51C(v59);
      id v60 = (void *)sub_22BE92BE8();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_addUserInfoEntriesFromDictionary_, v60);
    }
    else
    {
      id v61 = v101;
      uint64_t v62 = (void *)sub_22BE92088();

      swift_willThrow();
      if (qword_2684867F0 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_22BE925E8();
      __swift_project_value_buffer(v63, (uint64_t)qword_2684879C8);
      id v64 = v51;
      id v65 = v62;
      id v66 = v64;
      id v67 = v62;
      uint64_t v68 = sub_22BE925C8();
      os_log_type_t v69 = sub_22BE93158();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        v94 = (void *)swift_slowAlloc();
        unint64_t v95 = (void *)swift_slowAlloc();
        id v101 = v95;
        *(_DWORD *)uint64_t v70 = 136315394;
        id v71 = objc_msgSend(v66, sel_displayName);
        uint64_t v72 = sub_22BE92CD8();
        log = v68;
        unint64_t v74 = v73;

        sub_22BDD8478(v72, v74, (uint64_t *)&v101);
        sub_22BE93408();

        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2112;
        id v75 = v62;
        uint64_t v100 = _swift_stdlib_bridgeErrorToNSError();
        sub_22BE93408();
        void *v94 = v100;

        _os_log_impl(&dword_22BDC5000, log, v69, "Could not fetch provider domain for %s: %@", (uint8_t *)v70, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v94, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v95, -1, -1);
        MEMORY[0x230F57540](v70, -1, -1);
      }
      else
      {
      }
    }
    id v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02AE8]), sel_init);
    id v77 = objc_msgSend(v51, sel_itemID);
    id v78 = objc_msgSend(v77, sel_coreSpotlightIdentifier);

    if (!v78)
    {
      sub_22BE92CD8();
      id v78 = (id)sub_22BE92C98();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v76, sel_setRelatedUniqueIdentifier_, v78);

    id v79 = objc_msgSend(v51, sel_providerID);
    sub_22BE92CD8();

    id v80 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    objc_msgSend(v76, sel_setBundleID_, v80);

    uint64_t v81 = swift_initStackObject();
    *(_OWORD *)(v81 + 16) = xmmword_22BE99770;
    id v101 = (id)sub_22BE92CD8();
    unint64_t v102 = v82;
    swift_bridgeObjectRetain();
    uint64_t v83 = MEMORY[0x263F8D310];
    sub_22BE935F8();
    id v84 = (id)_DocumentManagerBundle();
    if (v84)
    {
      uint64_t v85 = v84;
      id v86 = objc_msgSend(v84, sel_bundleIdentifier);

      if (v86)
      {
        uint64_t v87 = sub_22BE92CD8();
        uint64_t v89 = v88;
        swift_bridgeObjectRelease();

        *(void *)(v81 + 96) = v83;
        *(void *)(v81 + 72) = v87;
        *(void *)(v81 + 80) = v89;
        sub_22BE1A51C(v81);
        id v90 = (void *)sub_22BE92BE8();
        swift_bridgeObjectRelease();
        objc_msgSend(v76, sel_addAttributesFromDictionary_, v90);

        id v91 = v76;
        objc_msgSend(v40, sel_setContentAttributeSet_, v91);

        a4 = v97;
LABEL_26:
        a4(v40);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  if (v8)
  {
    unint64_t v92 = 0x800000022BE9FF60;
    goto LABEL_12;
  }
LABEL_30:
  __break(1u);
}

void static DOCUserActivityController.fetchURLFrom(activity:completion:)(void *a1, void (*a2)(uint64_t, void *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v76 = a3;
  uint64_t v7 = sub_22BE91EA8();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v73 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_userInfo);
  if (!v12)
  {
    long long v84 = 0u;
    long long v85 = 0u;
LABEL_11:
    sub_22BE035C8((uint64_t)&v84, &qword_26AF00570);
    uint64_t v17 = 0;
    goto LABEL_12;
  }
  uint64_t v13 = v12;
  uint64_t v14 = sub_22BE92BF8();

  *(void *)&long long v84 = 0xD00000000000002BLL;
  *((void *)&v84 + 1) = 0x800000022BE9EED0;
  sub_22BE935F8();
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_22BDFD1C8((uint64_t)&aBlock), (v16 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  sub_22BDFFA8C((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v85 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    uint64_t v17 = v79;
  }
  else {
    uint64_t v17 = 0;
  }
LABEL_12:
  id v18 = objc_msgSend(a1, sel_userInfo);
  id v77 = a2;
  if (!v18)
  {
    long long v84 = 0u;
    long long v85 = 0u;
LABEL_24:
    sub_22BE035C8((uint64_t)&v84, &qword_26AF00570);
    uint64_t v71 = 0;
    uint64_t v25 = 0;
    goto LABEL_25;
  }
  id v19 = v18;
  uint64_t v20 = sub_22BE92BF8();

  *(void *)&long long v84 = 0xD000000000000020;
  *((void *)&v84 + 1) = 0x800000022BE9FB90;
  sub_22BE935F8();
  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_22BDFD1C8((uint64_t)&aBlock), (v22 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  sub_22BDFFA8C((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v85 + 1)) {
    goto LABEL_24;
  }
  int v23 = swift_dynamicCast();
  uint64_t v24 = aBlock;
  if (!v23) {
    uint64_t v24 = 0;
  }
  uint64_t v71 = v24;
  if (v23) {
    uint64_t v25 = v79;
  }
  else {
    uint64_t v25 = 0;
  }
LABEL_25:
  id v26 = objc_msgSend(a1, sel_userInfo);
  uint64_t v72 = v9;
  if (!v26)
  {
    long long v84 = 0u;
    long long v85 = 0u;
LABEL_35:
    sub_22BE035C8((uint64_t)&v84, &qword_26AF00570);
    uint64_t v31 = 0;
    goto LABEL_36;
  }
  uint64_t v27 = v26;
  uint64_t v28 = sub_22BE92BF8();

  *(void *)&long long v84 = 0xD000000000000028;
  *((void *)&v84 + 1) = 0x800000022BE9FBC0;
  sub_22BE935F8();
  if (*(void *)(v28 + 16) && (unint64_t v29 = sub_22BDFD1C8((uint64_t)&aBlock), (v30 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v28 + 56) + 32 * v29, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  sub_22BDFFA8C((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v85 + 1)) {
    goto LABEL_35;
  }
  if (swift_dynamicCast()) {
    uint64_t v31 = v79;
  }
  else {
    uint64_t v31 = 0;
  }
LABEL_36:
  id v32 = objc_msgSend(a1, sel_userInfo);
  if (!v32)
  {
    long long v84 = 0u;
    long long v85 = 0u;
    goto LABEL_51;
  }
  id v33 = v32;
  uint64_t v34 = sub_22BE92BF8();

  *(void *)&long long v84 = 0xD00000000000002ELL;
  *((void *)&v84 + 1) = 0x800000022BE9FBF0;
  sub_22BE935F8();
  if (*(void *)(v34 + 16) && (unint64_t v35 = sub_22BDFD1C8((uint64_t)&aBlock), (v36 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v34 + 56) + 32 * v35, (uint64_t)&v84);
  }
  else
  {
    long long v84 = 0u;
    long long v85 = 0u;
  }
  sub_22BDFFA8C((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v85 + 1))
  {
LABEL_51:
    sub_22BE035C8((uint64_t)&v84, &qword_26AF00570);
    uint64_t v37 = 0;
    if (!v17) {
      goto LABEL_46;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_allocObject();
    uint64_t v49 = v76;
    uint64_t v50 = (uint64_t)v77;
    *(void *)(v48 + 16) = v77;
    *(void *)(v48 + 24) = v49;
    id v51 = *(void (**)(void *, void (*)(void *, void *), uint64_t))(v4 + 104);
    id v52 = v47;
    sub_22BE03630(v50);
    v51(v47, sub_22BE03684, v48);

    swift_release();
    return;
  }
  if (swift_dynamicCast()) {
    uint64_t v37 = v79;
  }
  else {
    uint64_t v37 = 0;
  }
  if (v17) {
    goto LABEL_52;
  }
LABEL_46:
  if (v25 && v31 && v37)
  {
    id v38 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    unint64_t v39 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v40 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054B8]), sel_initWithProviderID_domainIdentifier_itemIdentifier_, v38, v39, v40);

    id v42 = objc_msgSend(self, sel_defaultManager);
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v76;
    uint64_t v45 = (uint64_t)v77;
    *(void *)(v43 + 16) = v77;
    *(void *)(v43 + 24) = v44;
    unint64_t v82 = sub_22BE03628;
    uint64_t v83 = v43;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v79 = 1107296256;
    id v80 = sub_22BE026A4;
    uint64_t v81 = &block_descriptor_1;
    uint64_t v46 = _Block_copy(&aBlock);
    sub_22BE03630(v45);
    swift_release();
    objc_msgSend(v42, sel_fetchURLForItemID_completionHandler_, v41, v46);
    _Block_release(v46);

    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_2684867F0 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_22BE925E8();
  __swift_project_value_buffer(v53, (uint64_t)qword_2684879C8);
  id v54 = a1;
  id v55 = sub_22BE925C8();
  os_log_type_t v56 = sub_22BE93158();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t aBlock = v58;
    *(_DWORD *)uint64_t v57 = 136315138;
    id v59 = objc_msgSend(v54, sel_description);
    uint64_t v60 = sub_22BE92CD8();
    unint64_t v62 = v61;

    *(void *)&long long v84 = sub_22BDD8478(v60, v62, &aBlock);
    sub_22BE93408();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v55, v56, "User activity does not contain expected keys: %s", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v58, -1, -1);
    MEMORY[0x230F57540](v57, -1, -1);

    uint64_t v63 = v77;
    if (!v77) {
      return;
    }
  }
  else
  {

    uint64_t v63 = v77;
    if (!v77) {
      return;
    }
  }
  uint64_t v64 = sub_22BE92198();
  uint64_t v65 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v73, 1, 1, v64);
  LODWORD(aBlock) = 22;
  sub_22BE03160(MEMORY[0x263F8EE78]);
  sub_22BE038B4(&qword_268486F88, MEMORY[0x263F06080]);
  id v66 = v72;
  uint64_t v67 = v75;
  sub_22BE92068();
  uint64_t v68 = (void *)sub_22BE91E98();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v66, v67);
  os_log_type_t v69 = (void *)sub_22BE92078();

  v63(v65, v69);
  sub_22BE035C8(v65, (uint64_t *)&unk_26AEFFB10);
}

void sub_22BE01ECC(void *a1, void *a2, void (*a3)(char *, void *), uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (a2)
    {
      type metadata accessor for CFError(0);
      sub_22BE038B4(&qword_268486F98, type metadata accessor for CFError);
      uint64_t v13 = (void *)swift_allocError();
      void *v14 = a2;
      id v15 = a2;
      char v16 = (void *)sub_22BE92078();
    }
    else
    {
      char v16 = 0;
    }
    if (qword_2684867F0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_22BE925E8();
    __swift_project_value_buffer(v17, (uint64_t)qword_2684879C8);
    id v18 = v16;
    id v19 = sub_22BE925C8();
    os_log_type_t v20 = sub_22BE93158();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v29 = v16;
    if (v21)
    {
      v28[2] = a4;
      char v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = (uint64_t)v16;
      uint64_t v31 = v23;
      *(_DWORD *)char v22 = 136315138;
      v28[1] = v22 + 4;
      id v24 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488390);
      uint64_t v25 = sub_22BE92CF8();
      uint64_t v30 = sub_22BDD8478(v25, v26, &v31);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v19, v20, "Can not fetch itemID: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v23, -1, -1);
      MEMORY[0x230F57540](v22, -1, -1);

      if (a3)
      {
LABEL_11:
        uint64_t v27 = sub_22BE92198();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
        a3(v10, v29);

        goto LABEL_12;
      }
    }
    else
    {

      if (a3) {
        goto LABEL_11;
      }
    }

    return;
  }
  if (!a3) {
    return;
  }
  sub_22BE92168();
  uint64_t v11 = sub_22BE92198();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  id v12 = a1;
  a3(v10, 0);

LABEL_12:
  sub_22BE035C8((uint64_t)v10, (uint64_t *)&unk_26AEFFB10);
}

void sub_22BE0225C(uint64_t a1, void *a2, void (*a3)(char *, void *), uint64_t a4)
{
  uint64_t v33 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v31 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v31 - v14;
  uint64_t v16 = sub_22BE92198();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BDDC158(a1, (uint64_t)v15, (uint64_t *)&unk_26AEFFB10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_22BE035C8((uint64_t)v15, (uint64_t *)&unk_26AEFFB10);
    if (a2)
    {
      id v20 = a2;
      if (qword_2684867F0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_22BE925E8();
      __swift_project_value_buffer(v21, (uint64_t)qword_2684879C8);
      id v22 = a2;
      id v23 = a2;
      id v24 = sub_22BE925C8();
      os_log_type_t v25 = sub_22BE93158();
      if (!os_log_type_enabled(v24, v25))
      {

        if (!a3) {
          return;
        }
LABEL_13:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, 1, 1, v16);
        if (a2) {
          uint64_t v30 = (void *)sub_22BE92078();
        }
        else {
          uint64_t v30 = 0;
        }
        a3(v10, v30);

        sub_22BE035C8((uint64_t)v10, (uint64_t *)&unk_26AEFFB10);
        return;
      }
      id v32 = a3;
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v26 = 138412290;
      id v27 = a2;
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v34 = v28;
      sub_22BE93408();
      unint64_t v29 = v31;
      void *v31 = v28;
      a3 = v32;

      _os_log_impl(&dword_22BDC5000, v24, v25, "Can not fetch URL for itemID %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v29, -1, -1);
      MEMORY[0x230F57540](v26, -1, -1);
    }
    if (!a3) {
      return;
    }
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  if (a3)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    a3(v13, 0);
    sub_22BE035C8((uint64_t)v13, (uint64_t *)&unk_26AEFFB10);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_22BE026A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_22BE92168();
    uint64_t v10 = sub_22BE92198();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_22BE92198();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  sub_22BE91C58();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_22BE035C8((uint64_t)v8, (uint64_t *)&unk_26AEFFB10);
}

id static DOCUserActivityController.alertController(with:)(void *a1)
{
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v3 = result;
  sub_22BE91F78();

  id v4 = objc_msgSend(a1, sel_userInfo, 0x800000022BE9FD50);
  if (!v4)
  {
    long long v38 = 0u;
    long long v39 = 0u;
LABEL_15:
    sub_22BE035C8((uint64_t)&v38, &qword_26AF00570);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    goto LABEL_16;
  }
  char v5 = v4;
  uint64_t v6 = sub_22BE92BF8();

  *(void *)&long long v38 = 0xD000000000000023;
  *((void *)&v38 + 1) = 0x800000022BE9FC20;
  sub_22BE935F8();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_22BDFD1C8((uint64_t)&v36), (v8 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  sub_22BDFFA8C((uint64_t)&v36);
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1)) {
    goto LABEL_15;
  }
  int v9 = swift_dynamicCast();
  if (v9) {
    uint64_t v10 = v36;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v9) {
    uint64_t v11 = v37;
  }
  else {
    uint64_t v11 = 0;
  }
LABEL_16:
  id v12 = objc_msgSend(a1, sel_userInfo);
  if (!v12)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_33;
  }
  uint64_t v13 = v12;
  uint64_t v14 = sub_22BE92BF8();

  sub_22BE935F8();
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_22BDFD1C8((uint64_t)&v36), (v16 & 1) != 0))
  {
    sub_22BDD854C(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  sub_22BDFFA8C((uint64_t)&v36);
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_33:
    sub_22BE035C8((uint64_t)&v38, &qword_26AF00570);
    if (v11) {
      goto LABEL_34;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    id result = (id)_DocumentManagerBundle();
    if (!result)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    id v27 = result;
    unint64_t v35 = 0x800000022BE9FDB0;
    sub_22BE91F78();

    goto LABEL_39;
  }
  uint64_t v17 = MEMORY[0x263F8D310];
  int v18 = swift_dynamicCast();
  if (v18) {
    uint64_t v19 = v36;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v18) {
    uint64_t v20 = v37;
  }
  else {
    uint64_t v20 = 0;
  }
  if (!v11) {
    goto LABEL_37;
  }
  if (!v20)
  {
LABEL_34:
    id result = (id)_DocumentManagerBundle();
    if (!result)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    id v24 = result;
    uint64_t v25 = MEMORY[0x263F8D310];
    unint64_t v35 = 0x800000022BE9FE20;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_22BE99770;
    *(void *)(v26 + 56) = v25;
    *(void *)(v26 + 64) = sub_22BDF8220();
    *(void *)(v26 + 32) = v10;
    *(void *)(v26 + 40) = v11;
    sub_22BE92CE8();
    goto LABEL_36;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v21 = result;
    unint64_t v35 = 0x800000022BE9FEB0;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_22BE97A30;
    *(void *)(v22 + 56) = v17;
    unint64_t v23 = sub_22BDF8220();
    *(void *)(v22 + 32) = v10;
    *(void *)(v22 + 40) = v11;
    *(void *)(v22 + 96) = v17;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 64) = v23;
    *(void *)(v22 + 72) = v19;
    *(void *)(v22 + 80) = v20;
    sub_22BE92CE8();
LABEL_36:
    swift_bridgeObjectRelease();
LABEL_39:
    uint64_t v28 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    unint64_t v29 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v28, v29, 1, v35);

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v31 = result;
      sub_22BE91F78();

      id v32 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
      id v33 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v32, 0, 0, 0xE200000000000000);

      id v34 = v30;
      objc_msgSend(v34, sel_addAction_, v33);
      objc_msgSend(v34, sel_setPreferredAction_, v33);

      return v30;
    }
    goto LABEL_42;
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_22BE02E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    v4[4] = a2;
    v4[5] = a3;
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 1107296256;
    _OWORD v4[2] = sub_22BE02F38;
    v4[3] = &block_descriptor_9;
    uint64_t v3 = _Block_copy(v4);
    sub_22BE91C58();
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  FPCrossDeviceItemIDForItemID();
  _Block_release(v3);
}

void sub_22BE02F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    v4[4] = a2;
    v4[5] = a3;
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 1107296256;
    _OWORD v4[2] = sub_22BE02F38;
    v4[3] = &block_descriptor_12;
    uint64_t v3 = _Block_copy(v4);
    sub_22BE91C58();
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  FPItemURLForCrossDeviceItemID();
  _Block_release(v3);
}

void sub_22BE02FF8(uint64_t a1, void *a2, void *a3)
{
  char v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_22BE91C58();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id DOCUserActivityController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id DOCUserActivityController.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUserActivityController();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DOCUserActivityController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUserActivityController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_22BE03160(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486FA0);
  uint64_t v2 = sub_22BE93828();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_22BE91C58();
  while (1)
  {
    sub_22BDDC158(v6, (uint64_t)&v15, &qword_268486FA8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_22BE03298(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_22BDDBF3C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE03298(uint64_t a1, uint64_t a2)
{
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t v4 = sub_22BE93A48();

  return sub_22BE03310(a1, a2, v4);
}

unint64_t sub_22BE03310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_22BE938C8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_22BE938C8() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_22BE938C8()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_22BE03458(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = a5;
  swift_unknownObjectWeakInit();
  sub_22BE91C58();
  id v8 = objc_msgSend(a1, sel_itemID);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = sub_22BDF9B3C;
  v9[4] = v7;
  id v13[4] = sub_22BE039A0;
  v13[5] = v9;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_22BE02F38;
  v13[3] = &block_descriptor_29;
  char v10 = _Block_copy(v13);
  id v11 = a1;
  sub_22BE91C58();
  sub_22BE91C58();
  swift_release();
  FPCrossDeviceItemIDForItemID();
  _Block_release(v10);
  swift_release_n();

  return swift_release();
}

uint64_t sub_22BE035C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_22BE03628(uint64_t a1, void *a2)
{
  sub_22BE0225C(a1, a2, *(void (**)(char *, void *))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_22BE03630(uint64_t result)
{
  if (result) {
    return sub_22BE91C58();
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE03684(void *a1, void *a2)
{
  sub_22BE01ECC(a1, a2, *(void (**)(char *, void *))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t type metadata accessor for DOCUserActivityController()
{
  return self;
}

unint64_t sub_22BE036B4()
{
  unint64_t result = qword_268486F90;
  if (!qword_268486F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486F90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCUserActivityIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE037D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of DOCUserActivityHosting.currentUserActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DOCUserActivityHosting.currentUserActivity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DOCUserActivityHosting.currentUserActivity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DOCUserActivityHosting.makeHostedActivityCurrent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for DOCUserActivityController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCUserActivityController);
}

uint64_t dispatch thunk of static DOCUserActivityController.publishUserActivity(for:activityHosting:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of static DOCUserActivityController.userActivityFor(item:completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static DOCUserActivityController.crossDeviceItemIDForItemID(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static DOCUserActivityController.itemURLForCrossDeviceItemID(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_22BE038B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BE038FC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE03938()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE03978()
{
  return sub_22BE005A8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_22BE039A4(uint64_t a1)
{
  return sub_22BE039C4(a1, 1, &qword_26AF00D30);
}

id sub_22BE039B4(uint64_t a1)
{
  return sub_22BE039C4(a1, 0, &qword_268490A18);
}

id sub_22BE039C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v5, sel_setDoesRelativeDateFormatting_, 1);
  objc_msgSend(v5, sel_setDateStyle_, 1);
  id result = objc_msgSend(v5, sel_setTimeStyle_, a2);
  *a3 = v5;
  return result;
}

Swift::Void __swiftcall FPItem.bumpLastOpenDate(delay:)(Swift::Double delay)
{
  uint64_t v2 = sub_22BE92248();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE92238();
  FPItem.setLastOpenDate(_:delay:)((uint64_t)v5, delay);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void FPItem.setLastOpenDate(_:delay:)(uint64_t a1, double a2)
{
  uint64_t v5 = sub_22BE92B08();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_22BE92B58();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  id v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_22BE92B78();
  uint64_t v40 = *(void *)(v47 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v47);
  long long v38 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v39 = (char *)&v37 - v10;
  uint64_t v11 = sub_22BE92248();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22BE97A40;
  *(void *)(v15 + 32) = v2;
  uint64_t aBlock = v15;
  sub_22BE92ED8();
  id v16 = objc_allocWithZone(MEMORY[0x263F05500]);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
  id v17 = v2;
  int v18 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_22BE921F8();
  id v20 = objc_msgSend(v16, sel_initWithItems_date_, v18, v19);

  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v21, v14, v11);
  id v52 = sub_22BE04844;
  uint64_t v53 = v22;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_22BE0469C;
  id v51 = &block_descriptor_2;
  unint64_t v23 = _Block_copy(&aBlock);
  id v24 = v17;
  id v25 = v20;
  swift_release();
  objc_msgSend(v25, sel_setActionCompletionBlock_, v23);
  _Block_release(v23);

  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  if (a2 == 0.0)
  {
    id v27 = self;
    id v28 = v25;
    id v29 = objc_msgSend(v27, sel_defaultManager);
    objc_msgSend(v29, sel_scheduleAction_, v28);
    swift_release();
  }
  else
  {
    sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
    id v37 = v25;
    id v30 = (void *)sub_22BE931E8();
    uint64_t v31 = v38;
    sub_22BE92B68();
    id v32 = v39;
    MEMORY[0x230F55660](v31, a2);
    uint64_t v40 = *(void *)(v40 + 8);
    ((void (*)(char *, uint64_t))v40)(v31, v47);
    id v52 = sub_22BE048F0;
    uint64_t v53 = v26;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v49 = 1107296256;
    uint64_t v50 = sub_22BDD0BA8;
    id v51 = &block_descriptor_6_0;
    id v33 = _Block_copy(&aBlock);
    sub_22BE91C58();
    swift_release();
    id v34 = v41;
    sub_22BE92B38();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_22BDD68EC((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BE048F8();
    unint64_t v35 = v43;
    uint64_t v36 = v46;
    sub_22BE934E8();
    MEMORY[0x230F55C80](v32, v34, v35, v33);
    _Block_release(v33);

    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v44);
    ((void (*)(char *, uint64_t))v40)(v32, v47);
  }
}

void sub_22BE04198(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22BE92248();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v10 = a1;
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22BE925E8();
    __swift_project_value_buffer(v11, (uint64_t)qword_268487A58);
    id v12 = a2;
    id v13 = a1;
    uint64_t v14 = v12;
    id v15 = a1;
    id v34 = sub_22BE925C8();
    os_log_type_t v16 = sub_22BE93158();
    if (os_log_type_enabled(v34, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      int v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 138412546;
      uint64_t v36 = v14;
      uint64_t v19 = v14;
      sub_22BE93408();
      *int v18 = v14;

      *(_WORD *)(v17 + 12) = 2112;
      id v20 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v36 = v21;
      sub_22BE93408();
      v18[1] = v21;

      _os_log_impl(&dword_22BDC5000, v34, v16, "Failed to set Last Open date for item %@. Error: %@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v18, -1, -1);
      MEMORY[0x230F57540](v17, -1, -1);
    }
    else
    {

      id v32 = v34;
    }
  }
  else
  {
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_22BE925E8();
    __swift_project_value_buffer(v22, (uint64_t)qword_268487A58);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
    id v23 = a2;
    id v24 = sub_22BE925C8();
    os_log_type_t v25 = sub_22BE93138();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      id v33 = (void *)swift_slowAlloc();
      id v34 = swift_slowAlloc();
      uint64_t v36 = v34;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v27 = sub_22BE921D8();
      uint64_t v35 = sub_22BDD8478(v27, v28, (uint64_t *)&v36);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *(_WORD *)(v26 + 12) = 2112;
      uint64_t v35 = (uint64_t)v23;
      id v29 = v23;
      sub_22BE93408();
      id v30 = v33;
      *id v33 = v23;

      _os_log_impl(&dword_22BDC5000, v24, v25, "set Last Open date to '%s' for item %@.", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v30, -1, -1);
      uint64_t v31 = v34;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v31, -1, -1);
      MEMORY[0x230F57540](v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

void sub_22BE0469C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  sub_22BE91C58();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_22BE04708(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_defaultManager);
  objc_msgSend(v2, sel_scheduleAction_, a1);
}

uint64_t sub_22BE04778()
{
  uint64_t v1 = sub_22BE92248();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_22BE04844(void *a1)
{
  uint64_t v3 = *(void *)(sub_22BE92248() - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_22BE04198(a1, v4, v5);
}

uint64_t sub_22BE048B8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE048F0()
{
  sub_22BE04708(*(void *)(v0 + 16));
}

unint64_t sub_22BE048F8()
{
  unint64_t result = qword_26AF002E0;
  if (!qword_26AF002E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26AF002D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF002E0);
  }
  return result;
}

id sub_22BE04954(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, sel_isTrashed)) {
    id v2 = (id)*MEMORY[0x263F053F8];
  }
  else {
    id v2 = objc_msgSend(v1, sel_parentItemIdentifier);
  }
  uint64_t v3 = v2;

  return v3;
}

id FPItem.effectiveParentItemIdentifier.getter()
{
  if (objc_msgSend(v0, sel_isTrashed))
  {
    id v1 = (void *)*MEMORY[0x263F053F8];
    return v1;
  }
  else
  {
    id v3 = objc_msgSend(v0, sel_parentItemIdentifier);
    return v3;
  }
}

BOOL static FPItem.SharingStatusStringType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FPItem.SharingStatusStringType.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t FPItem.SharingStatusStringType.hashValue.getter()
{
  return sub_22BE93A48();
}

BOOL sub_22BE04ACC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FPItem.SharingStatusOptions.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t FPItem.SharingStatusOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_22BE04AF4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_22BE04B00@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_22BE04B14@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_22BE04B28@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_22BE04B3C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_22BE04B68@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_22BE04B8C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_22BE04BA0(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_22BE04BB4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_22BE04BC8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_22BE04BDC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_22BE04BF0(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_22BE04C04(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_22BE04C18()
{
  return *v0 == 0;
}

void *sub_22BE04C28(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t static FPItem.createDocumentSentinelItemIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_268486FB8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static FPItem.createDocumentSentinelItemIdentifier.setter(uint64_t a1, void *a2)
{
  qword_268486FB8 = a1;
  off_268486FC0 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static FPItem.createDocumentSentinelItemIdentifier.modify())()
{
  return j__swift_endAccess;
}

Swift::Bool __swiftcall FPItem.doc_isCreateDocumentSentinel()()
{
  id v1 = objc_msgSend(v0, sel_itemIdentifier);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v2 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_22BE92CD8();
  uint64_t v5 = v4;
  if (v3 == sub_22BE92CD8() && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22BE938C8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8 & 1;
}

void URL.bumpLastOpenDate(delay:completionHandler:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v7 = sub_22BE92198();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_defaultManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v12, v10, v7);
  *(double *)(v14 + v13) = a3;
  sub_22BE03630(a1);
  _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v3, (uint64_t)sub_22BE0588C, v14);
  swift_release();
}

void sub_22BE04FE0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v51 = a4;
  uint64_t v52 = a3;
  uint64_t v10 = sub_22BE92248();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22BE92198();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v48 - v19;
  if (a2)
  {
    uint64_t v50 = a1;
    id v21 = a2;
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_22BE925E8();
    __swift_project_value_buffer(v22, (uint64_t)qword_268487A58);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, a5, v14);
    id v23 = a2;
    id v24 = a2;
    os_log_type_t v25 = sub_22BE925C8();
    os_log_type_t v26 = sub_22BE93158();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      aBlock[0] = v49;
      *(_DWORD *)uint64_t v27 = 136315394;
      sub_22BDD68EC((unint64_t *)&qword_268486EB8, MEMORY[0x263F06EA8]);
      uint64_t v28 = sub_22BE93878();
      uint64_t v53 = sub_22BDD8478(v28, v29, aBlock);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      *(_WORD *)(v27 + 12) = 2112;
      id v30 = a2;
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v53 = v31;
      sub_22BE93408();
      id v32 = v48;
      *uint64_t v48 = v31;

      _os_log_impl(&dword_22BDC5000, v25, v26, "Failed to retrieve item from url %s. Error: %@", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v32, -1, -1);
      uint64_t v33 = v49;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v33, -1, -1);
      MEMORY[0x230F57540](v27, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
    a1 = v50;
    uint64_t v35 = v52;
    if (v52) {
      goto LABEL_11;
    }
  }
  else
  {
    if (a1)
    {
      id v34 = a1;
      sub_22BE92238();
      FPItem.setLastOpenDate(_:delay:)((uint64_t)v13, a6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      uint64_t v35 = v52;
      if (!v52) {
        return;
      }
      goto LABEL_11;
    }
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_22BE925E8();
    __swift_project_value_buffer(v40, (uint64_t)qword_268487A58);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a5, v14);
    id v41 = sub_22BE925C8();
    os_log_type_t v42 = sub_22BE93158();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v50 = 0;
      uint64_t v45 = v44;
      aBlock[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      sub_22BDD68EC((unint64_t *)&qword_268486EB8, MEMORY[0x263F06EA8]);
      uint64_t v46 = sub_22BE93878();
      uint64_t v53 = sub_22BDD8478(v46, v47, aBlock);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      _os_log_impl(&dword_22BDC5000, v41, v42, "Failed to retrieve item from url %s. With no error.", v43, 0xCu);
      swift_arrayDestroy();
      a1 = v50;
      MEMORY[0x230F57540](v45, -1, -1);
      MEMORY[0x230F57540](v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }

    uint64_t v35 = v52;
    if (v52)
    {
LABEL_11:
      uint64_t v36 = (void *)swift_allocObject();
      uint64_t v37 = v51;
      v36[2] = v35;
      v36[3] = v37;
      v36[4] = a1;
      aBlock[4] = (uint64_t)sub_22BE05C08;
      aBlock[5] = (uint64_t)v36;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_22BDD0BA8;
      void aBlock[3] = (uint64_t)&block_descriptor_19;
      long long v38 = _Block_copy(aBlock);
      sub_22BE03630(v35);
      id v39 = a1;
      sub_22BE03630(v35);
      swift_release();
      DOCRunInMainThread();
      _Block_release(v38);
      sub_22BDE0E58(v35);
    }
  }
}

uint64_t FPItemID.identifierString.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_providerDomainID);
  uint64_t v3 = sub_22BE92CD8();

  sub_22BE92D88();
  id v4 = objc_msgSend(v1, sel_identifier);
  sub_22BE92CD8();

  sub_22BE92D88();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_22BE057AC()
{
  uint64_t v1 = sub_22BE92198();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v5 = (v3 + 32) & ~v3;
  unint64_t v6 = ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);

  return MEMORY[0x270FA0238](v0, v6, v3 | 7);
}

void sub_22BE0588C(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_22BE92198() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  double v9 = *(double *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_22BE04FE0(a1, a2, v7, v8, v2 + v6, v9);
}

unint64_t sub_22BE05940()
{
  unint64_t result = qword_268486FC8;
  if (!qword_268486FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486FC8);
  }
  return result;
}

unint64_t sub_22BE05998()
{
  unint64_t result = qword_268486FD0;
  if (!qword_268486FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486FD0);
  }
  return result;
}

unint64_t sub_22BE059F0()
{
  unint64_t result = qword_268486FD8;
  if (!qword_268486FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486FD8);
  }
  return result;
}

uint64_t _s23SharingStatusStringTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23SharingStatusStringTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE05BA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_22BE05BC8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE05C08()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

BOOL static DOCAdjustmentDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DOCAdjustmentDirection.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCAdjustmentDirection.hashValue.getter()
{
  return sub_22BE93A48();
}

uint64_t SignedNumeric.advanced(amount:direction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v14[2] = a3;
  v14[1] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  double v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  swift_getAssociatedConformanceWitness();
  sub_22BE93918();
  sub_22BE938A8();
  sub_22BE93088();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, a2);
  sub_22BE93798();
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

unint64_t sub_22BE05EE8()
{
  unint64_t result = qword_268486FF0;
  if (!qword_268486FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268486FF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCAdjustmentDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE06008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAdjustmentDirection()
{
  return &type metadata for DOCAdjustmentDirection;
}

uint64_t DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BE060A4(a1, a2, a3, a4, (SEL *)&selRef_displayName, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22BE06140);
}

uint64_t type metadata accessor for DOCRenameOperation()
{
  return self;
}

uint64_t DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BE060A4(a1, a2, a3, a4, (SEL *)&selRef_filename, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22BE06264);
}

uint64_t sub_22BE060A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, uint64_t (*a6)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  id v11 = [a1 *a5];
  uint64_t v12 = sub_22BE92CD8();
  uint64_t v14 = v13;

  id v15 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
  return a6(a1, a2, a3, v12, v14, a4);
}

char *sub_22BE06140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item] = a1;
  uint64_t v8 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  double v9 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName];
  *(void *)double v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName];
  *(void *)uint64_t v10 = a4;
  *((void *)v10 + 1) = a5;
  id v11 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager] = a6;
  id v12 = a1;
  swift_bridgeObjectRetain();
  id v13 = a6;
  uint64_t v14 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for DOCRenameOperation();
  id v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithItem_newDisplayName_, v12, v14);

  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager];
  uint64_t v17 = v15;
  objc_msgSend(v16, sel_registerUndoOperationForSender_, v17);

  return v17;
}

char *sub_22BE06264(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item] = a1;
  uint64_t v8 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  double v9 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName];
  *(void *)double v9 = a2;
  *((void *)v9 + 1) = a3;
  uint64_t v10 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  id v11 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName];
  *(void *)id v11 = a4;
  *((void *)v11 + 1) = a5;
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager] = a6;
  id v12 = a1;
  swift_bridgeObjectRetain();
  id v13 = a6;
  uint64_t v14 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for DOCRenameOperation();
  id v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithItem_newFileName_, v12, v14);

  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager];
  uint64_t v17 = v15;
  objc_msgSend(v16, sel_registerUndoOperationForSender_, v17);

  return v17;
}

id sub_22BE0647C()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_22BE91F78();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_22BE06540()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName + 8);
  if (v1
    && (uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName + 8)) != 0)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName);
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
    unsigned int v6 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
    id v7 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_22BE06140(v5, v3, v1, v4, v2, v6);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName + 8);
    if (v9
      && (uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName + 8)) != 0)
    {
      uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName);
      uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName);
      id v13 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
      uint64_t v14 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
      id v15 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_22BE06264(v13, v11, v9, v12, v10, v14);
    }
    else
    {
      return 0;
    }
  }
}

char *sub_22BE066DC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName + 8);
  if (v1
    && (uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName + 8)) != 0)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName);
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
    unsigned int v6 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
    id v7 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_22BE06140(v5, v4, v2, v3, v1, v6);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName + 8);
    if (v9
      && (uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName + 8)) != 0)
    {
      uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName);
      uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName);
      id v13 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
      uint64_t v14 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
      id v15 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_22BE06264(v13, v12, v10, v11, v9, v14);
    }
    else
    {
      return 0;
    }
  }
}

id sub_22BE06878()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager), sel_registerUndoOperationForSender_, v0);
}

id DOCRenameOperation.__allocating_init(item:newName:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_22BE0692C(a1, a2, a3, (SEL *)&selRef_initWithItem_newName_);
}

void DOCRenameOperation.init(item:newName:)()
{
}

id DOCRenameOperation.__allocating_init(item:newFileName:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_22BE0692C(a1, a2, a3, (SEL *)&selRef_initWithItem_newFileName_);
}

void DOCRenameOperation.init(item:newFileName:)()
{
}

id DOCRenameOperation.__allocating_init(item:newDisplayName:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_22BE0692C(a1, a2, a3, (SEL *)&selRef_initWithItem_newDisplayName_);
}

id sub_22BE0692C(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7 = objc_allocWithZone(v4);
  uint64_t v8 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, *a4, a1, v8);

  return v9;
}

void DOCRenameOperation.init(item:newDisplayName:)()
{
}

void sub_22BE069CC()
{
}

void sub_22BE06A08(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCRenameOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCRenameOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DOCRenameOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCRenameOperation);
}

uint64_t dispatch thunk of DOCRenameOperation.actionNameForUndoing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DOCRenameOperation.operationForRedoing()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DOCRenameOperation.operationForUndoing()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DOCRenameOperation.registerUndo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t sub_22BE06BFC()
{
  return 0;
}

uint64_t sub_22BE06DF4()
{
  return sub_22BE06BFC();
}

uint64_t DOCSplitViewState.description.getter()
{
  return sub_22BE06BFC();
}

{
  uint64_t v0;
  uint64_t result;

  if (*(unsigned char *)(v0 + OBJC_IVAR___DOCSplitViewState__impl) != 2) {
    return sub_22BE06BFC();
  }
  __break(1u);
  return result;
}

uint64_t DOCSplitViewState.isCollapsed.getter()
{
  return *v0;
}

uint64_t DOCSplitViewState.displayMode.getter()
{
  return *(void *)(v0 + 8);
}

BOOL DOCSplitViewState.isSidebarShownInOverlay.getter()
{
  return (*(unsigned char *)v0 & 1) == 0 && *(void *)(v0 + 8) == 3;
}

BOOL DOCSplitViewState.isSidebarShownInline.getter()
{
  return (*(unsigned char *)v0 & 1) == 0 && *(void *)(v0 + 8) == 2;
}

BOOL DOCSplitViewState.isSidebarShown.getter()
{
  return (*(unsigned char *)v0 & 1) == 0 && (*(void *)(v0 + 8) & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void DOCSplitViewState.init(forSplitViewController:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = objc_msgSend(a1, sel_isCollapsed);
  id v5 = objc_msgSend(a1, sel_displayMode);

  *(unsigned char *)a2 = v4;
  *(void *)(a2 + 8) = v5;
}

uint64_t DOCSplitViewState.with(isCollapsed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  *(unsigned char *)a2 = result;
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t DOCSplitViewState.with(displayMode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = *v2;
  *(void *)(a2 + 8) = result;
  return result;
}

uint64_t static DOCSplitViewState.isHideOverlayTransition(fromState:toState:)(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned char *)a1) {
    return 0;
  }
  unsigned int v3 = *a2;
  if (*((void *)a2 + 1) != 3) {
    unsigned int v3 = 1;
  }
  if (*(void *)(a1 + 8) == 3) {
    return v3;
  }
  else {
    return 0;
  }
}

BOOL static DOCSplitViewState.isShowOverlayTransition(fromState:toState:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)a2;
  if (*(unsigned char *)a1)
  {
    if (*(unsigned char *)a2) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) == 3) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(void *)(a2 + 8) == 3;
}

uint64_t sub_22BE06F6C(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unsigned __int8 v4 = *a2;
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = sub_22BDD7C20(v4, (const void *)qword_26AEFFAE8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22BE077A0(v2, v3, KeyPath);

  return swift_release();
}

void __swiftcall DOCSplitViewState.init()(DOCSplitViewState *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  objc_msgSend(v1, sel_init);
}

id DOCSplitViewState.init()()
{
  *(_OWORD *)(v0 + OBJC_IVAR___DOCSplitViewState__impl) = xmmword_22BE99C00;
  v2.super_class = (Class)DOCSplitViewState;
  return objc_msgSendSuper2(&v2, sel_init);
}

char *UISplitViewController.doc_splitViewStateTransitionStart.getter()
{
  return sub_22BE07348((void (*)(void *__return_ptr))sub_22BDD9608);
}

uint64_t sub_22BE07318(uint64_t result, uint64_t a2, char *a3)
{
  return sub_22BE073C8(result, a2, a3);
}

void UISplitViewController.doc_splitViewStateTransitionStart.setter(char *a1)
{
}

char *UISplitViewController.doc_splitViewStateTransitionEnd.getter()
{
  return sub_22BE07348((void (*)(void *__return_ptr))sub_22BDD7C2C);
}

char *sub_22BE07348(void (*a1)(void *__return_ptr))
{
  a1(v5);
  uint64_t v1 = v5[0];
  if (LOBYTE(v5[0]) == 2) {
    return 0;
  }
  uint64_t v3 = v5[1];
  id result = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
  unsigned __int8 v4 = &result[OBJC_IVAR___DOCSplitViewState__impl];
  *(void *)unsigned __int8 v4 = v1;
  *((void *)v4 + 1) = v3;
  return result;
}

uint64_t sub_22BE073BC(uint64_t result, uint64_t a2, char *a3)
{
  return sub_22BE073C8(result, a2, a3);
}

uint64_t sub_22BE073C8(uint64_t result, uint64_t a2, char *a3)
{
  unsigned __int8 v4 = (void *)result;
  if (a3)
  {
    uint64_t v5 = *(void *)&a3[OBJC_IVAR___DOCSplitViewState__impl];
    if (v5 == 2)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = *(void *)&a3[OBJC_IVAR___DOCSplitViewState__impl + 8];
    id v7 = a3;
  }
  else
  {
    uint64_t v6 = 0;
    LOBYTE(v5) = 2;
  }
  uint64_t v8 = qword_26AF003C0;
  id v9 = v4;
  if (v8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v10 = sub_22BDD7C20(v9, (const void *)qword_26AEFFAE8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22BE077A0(v5, v6, KeyPath);

  return swift_release();
}

void UISplitViewController.doc_splitViewStateTransitionEnd.setter(char *a1)
{
}

void sub_22BE074EC(char *a1)
{
  if (a1)
  {
    uint64_t v3 = *(void *)&a1[OBJC_IVAR___DOCSplitViewState__impl];
    if (v3 == 2)
    {
      __break(1u);
      return;
    }
    uint64_t v4 = *(void *)&a1[OBJC_IVAR___DOCSplitViewState__impl + 8];
  }
  else
  {
    uint64_t v4 = 0;
    LOBYTE(v3) = 2;
  }
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = sub_22BDD7C20(v1, (const void *)qword_26AEFFAE8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22BE077A0(v3, v4, KeyPath);

  swift_release();
}

void __swiftcall DOCSplitViewState._bridgeToObjectiveC()(DOCSplitViewState *__return_ptr retstr)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *((void *)v1 + 1);
  uint64_t v4 = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
  id v5 = &v4[OBJC_IVAR___DOCSplitViewState__impl];
  *(void *)id v5 = v2;
  *((void *)v5 + 1) = v3;
}

__n128 static DOCSplitViewState._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, __n128 *a2)
{
  __n128 result = *(__n128 *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  *a2 = result;
  return result;
}

uint64_t static DOCSplitViewState._conditionallyBridgeFromObjectiveC(_:result:)(uint64_t a1, _OWORD *a2)
{
  *a2 = *(_OWORD *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  return 1;
}

char *sub_22BE0765C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  __n128 result = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
  uint64_t v4 = &result[OBJC_IVAR___DOCSplitViewState__impl];
  *(void *)uint64_t v4 = v1;
  *((void *)v4 + 1) = v2;
  return result;
}

__n128 sub_22BE076A8(uint64_t a1, __n128 *a2)
{
  __n128 result = *(__n128 *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  *a2 = result;
  return result;
}

uint64_t sub_22BE076BC(uint64_t a1, _OWORD *a2)
{
  *a2 = *(_OWORD *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  return 1;
}

uint64_t sub_22BE076D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    uint64_t v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
    if (v2 != 2)
    {
      uint64_t v3 = *(void *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8);
      *(unsigned char *)a2 = v2 & 1;
      *(void *)(a2 + 8) = v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE077A0(char a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    swift_beginAccess();
    sub_22BDDC228(a3, &v5);
    sub_22BDD473C((uint64_t)&v5);
  }
  else
  {
    LOBYTE(v5) = a1 & 1;
    uint64_t v6 = &type metadata for DOCSplitViewState;
    *((void *)&v5 + 1) = a2;
    swift_beginAccess();
    sub_22BE91C58();
    sub_22BDDB58C((uint64_t)&v5, a3);
  }
  return swift_endAccess();
}

double sub_22BE07860@<D0>(_OWORD *a1@<X8>)
{
  sub_22BDD9608(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_22BE0789C(uint64_t *a1, void **a2)
{
  return sub_22BE06F6C(a1, a2);
}

double sub_22BE078BC@<D0>(_OWORD *a1@<X8>)
{
  sub_22BDD7C2C(&v3);
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_22BE078F8(uint64_t *a1, void **a2)
{
  return sub_22BE06F6C(a1, a2);
}

char *keypath_get_selector_doc_splitViewStateTransitionStart()
{
  return sel_doc_splitViewStateTransitionStart;
}

id sub_22BE07924@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_doc_splitViewStateTransitionStart);
  *a2 = result;
  return result;
}

id sub_22BE07960(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDoc_splitViewStateTransitionStart_, *a1);
}

char *keypath_get_selector_doc_splitViewStateTransitionEnd()
{
  return sel_doc_splitViewStateTransitionEnd;
}

id sub_22BE07980@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_doc_splitViewStateTransitionEnd);
  *a2 = result;
  return result;
}

id sub_22BE079BC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDoc_splitViewStateTransitionEnd_, *a1);
}

unint64_t type metadata accessor for DOCSplitViewState()
{
  unint64_t result = qword_268487038;
  if (!qword_268487038)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268487038);
  }
  return result;
}

uint64_t _s26DocumentManagerExecutables17DOCSplitViewStateV4ImplVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for DOCSplitViewState.Impl()
{
  return &type metadata for DOCSplitViewState.Impl;
}

uint64_t sub_22BE07A78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
  if (v2 == 2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___DOCSplitViewState__impl);
  if (v3 == 2)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  char v4 = 0;
  if ((v2 & 1) == 0 && *(void *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8) == 3) {
    char v4 = v3 | (*(void *)(a2 + OBJC_IVAR___DOCSplitViewState__impl + 8) != 3);
  }
  return v4 & 1;
}

BOOL sub_22BE07AD4(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
  if (v2 == 2)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___DOCSplitViewState__impl);
  if (v3 == 2)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if (v2)
  {
    if (v3) {
      return 0;
    }
  }
  else if (*(void *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8) == 3 || (v3 & 1) != 0)
  {
    return 0;
  }
  return *(void *)(a2 + OBJC_IVAR___DOCSplitViewState__impl + 8) == 3;
}

uint64_t DOCNode.nodeDescription.getter()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_description);
    uint64_t v4 = sub_22BE92CD8();
    swift_unknownObjectRelease();
  }
  else
  {
    id v3 = objc_msgSend(v0, sel_displayName);
    uint64_t v4 = sub_22BE92CD8();
  }

  return v4;
}

uint64_t DOCNode.isEqualTo(node:)()
{
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v0 = (unint64_t *)&qword_26AF00490;
LABEL_7:
      sub_22BDD9D50(0, v0);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      char v2 = sub_22BE93328();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v2 & 1;
    }
    goto LABEL_8;
  }
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  char v2 = v1;
  if (v1)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v0 = (unint64_t *)&unk_26AF00470;
      goto LABEL_7;
    }
LABEL_8:
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t Array<A>.contains(node:)()
{
  return sub_22BE92E78() & 1;
}

uint64_t sub_22BE07FC0()
{
  return DOCNode.isEqualTo(node:)() & 1;
}

BOOL != infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return (== infix(_:_:)(a1, a2) & 1) == 0;
}

void *DOCNode.description.getter()
{
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClass();
  if (v0 || (self, (uint64_t v0 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    swift_unknownObjectRetain();
    id v1 = objc_msgSend(v0, sel_debugDescription);
    uint64_t v0 = (void *)sub_22BE92CD8();
    swift_unknownObjectRelease();
  }
  return v0;
}

id DOCNode.doc_isAppContainerRoot.getter()
{
  id v1 = objc_msgSend(v0, sel_fpfs_fpItem);
  if (!v1) {
    return 0;
  }
  char v2 = v1;
  id v3 = objc_msgSend(v1, sel_doc_isAppContainerRoot);

  return v3;
}

id DOCNode.fpfs_syncFetchFPItem()()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = objc_msgSend(v0, sel_fpfs_fpItem);
  if (v1) {
    return v1;
  }
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel_syncFetchFPItem_, v7);
  id v3 = v7[0];
  if (!v2)
  {
    uint64_t v4 = v3;
    int v5 = (void *)sub_22BE92088();

    swift_willThrow();
    return 0;
  }
  return v2;
}

uint64_t sub_22BE081F4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t DOCNode.fpfs_fetchFPItem()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_22BE0824C, 0, 0);
}

uint64_t sub_22BE0824C()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487068);
  *uint64_t v2 = v0;
  v2[1] = sub_22BE08350;
  return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0xD000000000000012, 0x800000022BEA0470, sub_22BE08694, v1, v3);
}

uint64_t sub_22BE08350()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_22BE08488;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_22BE0846C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_22BE0846C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_22BE08488()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_22BE084EC(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487120);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_22BE11144;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDDF270;
  void aBlock[3] = &block_descriptor_199;
  id v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchFPItem_, v9);
  _Block_release(v9);
}

void sub_22BE08694(uint64_t a1)
{
  sub_22BE084EC(a1, *(void **)(v1 + 24));
}

uint64_t sub_22BE0869C(void *a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487120);
    return sub_22BE92FC8();
  }
  else
  {
    id v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487120);
    return sub_22BE92FD8();
  }
}

uint64_t Array<A>.fpfs_syncFetchAvailableFPItems()(uint64_t a1, uint64_t a2)
{
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  uint64_t v9 = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = &v9;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = v4;
  Array<A>.fpfs_fetchAvailableFPItems(completion:)((void (*)(uint64_t))sub_22BE08838, v5, a1, a2);
  swift_release();
  sub_22BE932B8();
  uint64_t result = swift_beginAccess();
  uint64_t v8 = v9;
  if (v9)
  {

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE087D4(uint64_t a1, void *a2)
{
  *a2 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return sub_22BE932C8();
}

uint64_t sub_22BE08838(uint64_t a1)
{
  return sub_22BE087D4(a1, *(void **)(v1 + 16));
}

uint64_t Array<A>.fpfs_fetchAvailableFPItems(completion:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = MEMORY[0x263F8EE78];
  unint64_t v7 = dispatch_group_create();
  uint64_t v8 = swift_bridgeObjectRetain();
  if (MEMORY[0x230F55A40](v8, a4))
  {
    uint64_t v9 = 4;
    do
    {
      uint64_t v10 = v9 - 4;
      char v11 = sub_22BE92F38();
      sub_22BE92EE8();
      if (v11)
      {
        swift_unknownObjectRetain();
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v10, 1)) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_22BE93678();
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v10, 1))
        {
LABEL_9:
          __break(1u);
          break;
        }
      }
      dispatch_group_enter(v7);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v6;
      *(void *)(v13 + 24) = v7;
      sub_22BE91C58();
      uint64_t v14 = v7;
      DOCNode.fpfs_fetchFPItem(completion:)((uint64_t)sub_22BE0F0D8, v13);
      swift_unknownObjectRelease();
      swift_release();
      ++v9;
    }
    while (v12 != MEMORY[0x230F55A40](a3, a4));
  }
  swift_bridgeObjectRelease();
  sub_22BE93198();
  swift_beginAccess();
  uint64_t v15 = swift_bridgeObjectRetain();
  a1(v15);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE08A04()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE08A3C(void *a1, uint64_t a2, dispatch_group_t group)
{
  if (a1)
  {
    uint64_t v5 = (void *)(a2 + 16);
    swift_beginAccess();
    id v6 = a1;
    MEMORY[0x230F55950]();
    if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_22BE92EF8();
    }
    sub_22BE92F48();
    sub_22BE92ED8();
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

BOOL static DOCNodeType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DOCNodeType.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCNodeType.hashValue.getter()
{
  return sub_22BE93A48();
}

uint64_t DOCNode.sourceIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_providerDomainID);
  sub_22BE92CD8();

  uint64_t v2 = sub_22BE92C98();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22BE08BDC(unsigned __int8 *a1)
{
  int v2 = *a1;
  id v3 = objc_msgSend(v1, sel_fpfs_fpItem);
  if (!v3) {
    return (uint64_t)v3;
  }
  id v4 = objc_msgSend(v1, sel_itemDecorations);
  sub_22BDD9D50(0, &qword_268487118);
  uint64_t v5 = sub_22BE92EB8();

  int64_t v6 = MEMORY[0x263F8EE78];
  int64_t v28 = MEMORY[0x263F8EE78];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      id v4 = (id)v5;
    }
    else {
      id v4 = (id)(v5 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    int64_t v7 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    id v27 = v3;
    if (v7) {
      goto LABEL_4;
    }
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    id v4 = 0;
    int64_t v7 = MEMORY[0x263F8EE78];
    if ((v2 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_26;
  }
  int64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v27 = v3;
  if (!v7) {
    goto LABEL_25;
  }
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  LODWORD(v25) = v2;
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x230F56140](i, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_type, v25);
    uint64_t v12 = sub_22BE92CD8();
    uint64_t v14 = v13;
    if (v12 == sub_22BE92CD8() && v14 == v15)
    {

      swift_bridgeObjectRelease_n();
LABEL_7:
      sub_22BE936B8();
      sub_22BE936F8();
      sub_22BE93708();
      sub_22BE936C8();
      continue;
    }
    char v17 = sub_22BE938C8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  id v4 = 0;
  int64_t v7 = v28;
  id v3 = v27;
  int64_t v6 = MEMORY[0x263F8EE78];
  if ((v25 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_26:
  int64_t v28 = v6;
  if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v19 = *(void *)(v7 + 16);
    if (v19) {
      goto LABEL_29;
    }
LABEL_41:
    swift_release();
    int64_t v7 = MEMORY[0x263F8EE78];
    goto LABEL_42;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_22BE937E8();
  uint64_t result = swift_release();
  if (!v19) {
    goto LABEL_41;
  }
LABEL_29:
  id v26 = v4;
  if (v19 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t j = 0; j != v19; ++j)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v21 = (id)MEMORY[0x230F56140](j, v7);
      }
      else {
        id v21 = *(id *)(v7 + 8 * j + 32);
      }
      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_decorationIdentifier, v26);
      sub_22BE92CD8();

      LOBYTE(v23) = sub_22BE782E8();
      swift_bridgeObjectRelease();
      if (v23)
      {
        sub_22BE936B8();
        sub_22BE936F8();
        sub_22BE93708();
        sub_22BE936C8();
      }
      else
      {
      }
    }
    swift_release();
    int64_t v7 = v28;
    id v3 = v27;
LABEL_42:
    id v24 = v3;
    id v3 = (id)sub_22BE0F1D0(0, 0, v7, (uint64_t)v24);
    swift_bridgeObjectRelease();

    return (uint64_t)v3;
  }
  return result;
}

id sub_22BE08FC0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return (id)a1;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    int64_t v6 = result;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_22BE99770;
    *(void *)(v7 + 56) = MEMORY[0x263F8D310];
    *(void *)(v7 + 64) = sub_22BDF8220();
    *(void *)(v7 + 32) = a1;
    *(void *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    a1 = sub_22BE92CA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)a1;
  }
  __break(1u);
  return result;
}

id sub_22BE0910C()
{
  id v1 = v0;
  if (!objc_msgSend(v1, sel_isFolder)
    || objc_msgSend(v1, sel_nodePermissions_, 2048) != 2048)
  {
    id v10 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    uint64_t v11 = sub_22BE92CD8();

    return (id)v11;
  }

  id v2 = objc_msgSend(v1, sel_childItemCount);
  if (!v2) {
    goto LABEL_9;
  }
  id v3 = v2;
  if (((unint64_t)objc_msgSend(v2, sel_integerValue) & 0x8000000000000000) != 0)
  {

LABEL_9:
    id v12 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    uint64_t v13 = sub_22BE92CD8();

    return (id)v13;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v5 = result;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_22BE99770;
    id v7 = objc_msgSend(v3, sel_integerValue, 0x800000022BEA0550);
    uint64_t v8 = MEMORY[0x263F8D750];
    *(void *)(v6 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v6 + 64) = v8;
    *(void *)(v6 + 32) = v7;
    uint64_t v9 = sub_22BE92CA8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_22BE0930C()
{
  id v1 = objc_msgSend(v0, sel_childItemCount);
  if (!v1) {
    goto LABEL_6;
  }
  id v2 = v1;
  if (((unint64_t)objc_msgSend(v1, sel_integerValue) & 0x8000000000000000) != 0)
  {

LABEL_6:
    id v9 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    uint64_t v10 = sub_22BE92CD8();

    return (id)v10;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v4 = result;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_22BE99770;
    id v6 = objc_msgSend(v2, sel_integerValue, 0x800000022BEA0550);
    uint64_t v7 = MEMORY[0x263F8D750];
    *(void *)(v5 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v5 + 64) = v7;
    *(void *)(v5 + 32) = v6;
    uint64_t v8 = sub_22BE92CA8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::String __swiftcall DOCNode.localizedChildItemCountDescription()()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    id v2 = (void *)v1;
    swift_unknownObjectRetain();
    if (!objc_msgSend(v2, sel_isFolder)
      || objc_msgSend(v2, sel_nodePermissions_, 2048) != 2048)
    {
      id v14 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
      uint64_t v15 = sub_22BE92CD8();
      char v17 = v16;
      swift_unknownObjectRelease();

      id v5 = (id)v15;
      id v6 = v17;
      goto LABEL_13;
    }
    swift_unknownObjectRelease();
  }
  id v3 = objc_msgSend(v0, sel_childItemCount);
  if (!v3)
  {
LABEL_11:
    id v18 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    uint64_t v19 = sub_22BE92CD8();
    id v21 = v20;

    id v5 = (id)v19;
    id v6 = v21;
    goto LABEL_13;
  }
  id v4 = v3;
  if (((unint64_t)objc_msgSend(v3, sel_integerValue) & 0x8000000000000000) != 0)
  {

    goto LABEL_11;
  }
  id v5 = (id)_DocumentManagerBundle();
  if (v5)
  {
    uint64_t v7 = v5;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_22BE99770;
    id v9 = objc_msgSend(v4, sel_integerValue, 0x800000022BEA0550);
    uint64_t v10 = MEMORY[0x263F8D750];
    *(void *)(v8 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v8 + 64) = v10;
    *(void *)(v8 + 32) = v9;
    uint64_t v11 = sub_22BE92CA8();
    uint64_t v13 = v12;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v5 = (id)v11;
    id v6 = v13;
  }
  else
  {
    __break(1u);
  }
LABEL_13:
  result._object = v6;
  result._char countAndFlagsBits = (uint64_t)v5;
  return result;
}

uint64_t sub_22BE096D0()
{
  uint64_t result = sub_22BE0F68C((uint64_t)&unk_26DF41EA0);
  qword_268487048 = result;
  return result;
}

BOOL sub_22BE096F8(int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_22BE939F8();
  sub_22BE93A28();
  uint64_t v4 = sub_22BE93A48();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_22BE097E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_22BE939F8();
    sub_22BE92D48();
    uint64_t v6 = sub_22BE93A48();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_22BE938C8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_22BE938C8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_22BE09920(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_22BE935B8();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_22BE93318(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_22BE93328();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_22BE93328();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_22BE09A80(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v5 = *(NSObject **)(v2 + 16);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = &v12;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_22BE11050;
  *(void *)(v7 + 24) = v6;
  v11[4] = sub_22BE111C8;
  v11[5] = v7;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_22BE16ACC;
  v11[3] = &block_descriptor_193;
  unint64_t v8 = _Block_copy(v11);
  sub_22BE91C58();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else if (v13)
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE09BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22BE92B58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22BE92B08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE92AF8();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_22BE10E44;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_162;
  uint64_t v13 = _Block_copy(aBlock);
  sub_22BE91C58();
  sub_22BE92B38();
  MEMORY[0x230F55CD0](0, v7, v11, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_22BE09E1C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_22BE09E54()
{
  return swift_deallocClassInstance();
}

uint64_t sub_22BE09E64(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = sub_22BE92B08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE92B58();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22BE92B18();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0) {
    return sub_22BE09A80((uint64_t)sub_22BE10E6C, v3);
  }
  uint64_t v42 = v15;
  uint64_t v43 = v12;
  uint64_t v44 = v8;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v47 = v5;
  char v59 = 1;
  id v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  MEMORY[0x270FA5388](v14);
  *(&v41 - 4) = (uint64_t)&v57;
  *(&v41 - 3) = v3;
  *(&v41 - 2) = (uint64_t)&v59;
  LOBYTE(v50) = v18;
  id v20 = *(NSObject **)(v19 + 16);
  id v21 = (void *)swift_allocObject();
  v21[2] = &v50;
  v21[3] = sub_22BE10E78;
  v21[4] = &v41 - 6;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_22BE10ED4;
  *(void *)(v22 + 24) = v21;
  id v55 = sub_22BE10F20;
  os_log_type_t v56 = (void *)v22;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_22BE16ACC;
  id v54 = &block_descriptor_171;
  id v23 = _Block_copy(&aBlock);
  sub_22BE91C58();
  swift_release();
  dispatch_sync(v20, v23);
  _Block_release(v23);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v50)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  swift_release();
  if (v59 == 1)
  {
    uint64_t v26 = v10;
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    int64_t v28 = self;
    sub_22BE91C58();
    if (objc_msgSend(v28, sel_isMainThread))
    {
      swift_release();
      sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
      uint64_t v29 = v42;
      (*(void (**)(char *, void, uint64_t))(v42 + 104))(v17, *MEMORY[0x263F8F060], v13);
      uint64_t v41 = sub_22BE93238();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v13);
      id v30 = (void *)swift_allocObject();
      v30[2] = sub_22BE10F60;
      v30[3] = v27;
      uint64_t v32 = v48;
      uint64_t v31 = v49;
      v30[4] = v48;
      v30[5] = v31;
      id v55 = sub_22BE10FB0;
      os_log_type_t v56 = v30;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v52 = 1107296256;
      uint64_t v53 = sub_22BDD0BA8;
      id v54 = &block_descriptor_180;
      uint64_t v33 = _Block_copy(&aBlock);
      sub_22BE91C58();
      sub_22BE03630(v32);
      id v34 = v43;
      sub_22BE92B38();
      uint64_t v50 = MEMORY[0x263F8EE78];
      sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
      sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
      uint64_t v35 = v44;
      uint64_t v36 = v47;
      sub_22BE934E8();
      uint64_t v37 = (void *)v41;
      MEMORY[0x230F55CD0](0, v34, v35, v33);
      _Block_release(v33);
      swift_release();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v36);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v45);
      swift_release();
    }
    else
    {
      id v38 = sub_22BE0A488();
      unint64_t v40 = v39;
      swift_release_n();
      id v57 = v38;
      unint64_t v58 = v40;
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)v57;
}

id sub_22BE0A488()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = Strong;
  id v2 = *(id *)(Strong + 16);
  id v3 = sub_22BE0910C();
  uint64_t v5 = v4;

  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v1;
  v6[3] = v3;
  v6[4] = v5;
  sub_22BE91C58();
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  sub_22BE09BF4((uint64_t)sub_22BE10FFC, (uint64_t)v6);
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_22BE0A584(uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = a1();
  uint64_t v6 = v5;
  if (a3)
  {
    uint64_t v7 = v4;
    sub_22BE91C58();
    a3(v7, v6);
    swift_bridgeObjectRelease();
    return sub_22BDE0E58((uint64_t)a3);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22BE0A628()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_22BE0A670()
{
  return 0;
}

uint64_t sub_22BE0A678(char a1)
{
  id v3 = v1;
  objc_sync_enter(v3);
  if (a1)
  {
    if (qword_26AF00468 != -1) {
      swift_once();
    }
    id v4 = sub_22BE32614(v3, (const void *)qword_26AF00460);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v6 = sub_22BE0EED8();
    if (v6)
    {
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v9 = type metadata accessor for FINodeItemCountFetcher();
      swift_allocObject();
      id v10 = v3;
      uint64_t v7 = sub_22BE0F7D0(v10);

      uint64_t v12[3] = v9;
      v12[0] = v7;
      swift_beginAccess();
      swift_retain_n();
      sub_22BE91C58();
      sub_22BDDB58C((uint64_t)v12, KeyPath);
      swift_endAccess();

      swift_release();
    }
    swift_release();
  }
  else
  {
    if (qword_26AF00468 != -1) {
      swift_once();
    }
    id v8 = sub_22BE32614(v3, (const void *)qword_26AF00460);
    swift_getKeyPath();
    uint64_t v7 = sub_22BE0EED8();
    swift_release();
  }
  objc_sync_exit(v3);

  return v7;
}

uint64_t DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)(char a1, uint64_t a2, uint64_t a3)
{
  self;
  if (!swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      id v8 = (void *)v7;
      swift_unknownObjectRetain();
      if (objc_msgSend(v8, sel_isFolder)
        && objc_msgSend(v8, sel_nodePermissions_, 2048) == 2048
        && sub_22BE0A678(a1 & 1))
      {
        uint64_t v6 = sub_22BE09E64(a1 & 1, a2, a3);
        swift_release();
        goto LABEL_3;
      }
      swift_unknownObjectRelease();
    }
    return 0;
  }
  swift_unknownObjectRetain();
  uint64_t v6 = (uint64_t)sub_22BE0930C();
LABEL_3:
  swift_unknownObjectRelease();
  return v6;
}

uint64_t DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    goto LABEL_5;
  }
  int v1 = a1;
  if (qword_2684866E0 != -1) {
    swift_once();
  }
  uint64_t result = sub_22BE096F8(v1, qword_268487048);
  if (result)
  {
LABEL_5:
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result)
    {
      id v3 = (void *)result;
      swift_unknownObjectRetain_n();
      objc_sync_enter(v3);
      if (qword_26AF00468 != -1) {
        swift_once();
      }
      id v4 = sub_22BE32614(v3, (const void *)qword_26AF00460);
      swift_getKeyPath();
      uint64_t v5 = sub_22BE0EED8();
      swift_release();

      objc_sync_exit(v3);
      swift_unknownObjectRelease();
      if (v5)
      {
        uint64_t v6 = swift_allocObject();
        *(void *)(v6 + 16) = v5;
        *(unsigned char *)(v6 + 24) = 1;
        sub_22BE91C58();
        sub_22BE09BF4((uint64_t)sub_22BE0F58C, v6);
        swift_release();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_22BE0AB40()
{
  uint64_t v0 = sub_22BE92278();
  MEMORY[0x270FA5388](v0);
  uint64_t result = sub_22BDCE948((unint64_t *)&unk_26AF00470, &v2);
  qword_26AF00460 = (uint64_t)v2;
  return result;
}

uint64_t DOCNode.compareBySharedStatus(node:)(void *a1)
{
  id v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB08);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v58 - v8;
  uint64_t v10 = sub_22BE91FE8();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)&v58 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v58 - v18;
  if (objc_msgSend(v2, sel_isSharedByCurrentUser)
    && (objc_msgSend(a1, sel_isSharedByCurrentUser) & 1) != 0)
  {
    return 0;
  }
  if (objc_msgSend(v2, sel_isSharedByCurrentUser)
    && !objc_msgSend(a1, sel_isSharedByCurrentUser))
  {
    return -1;
  }
  if ((objc_msgSend(v2, sel_isSharedByCurrentUser) & 1) != 0
    || (objc_msgSend(a1, sel_isSharedByCurrentUser) & 1) == 0)
  {
    id v21 = objc_msgSend(v2, sel_ownerNameComponents);
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v60 = v14;
      unint64_t v61 = v7;
      uint64_t v63 = v19;
      sub_22BE91FD8();

      unint64_t v62 = (void (*)(char *, char *, uint64_t))v11[4];
      v62(v9, v17, v10);
      id v23 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11[7];
      v23((uint64_t)v9, 0, 1, v10);
      id v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v11[6];
      if (v24((uint64_t)v9, 1, v10) != 1)
      {
        unint64_t v58 = v24;
        char v59 = v23;
        uint64_t v25 = v9;
        uint64_t v26 = v62;
        v62(v63, v25, v10);
        id v27 = objc_msgSend(a1, sel_ownerNameComponents);
        if (v27)
        {
          int64_t v28 = v27;
          sub_22BE91FD8();

          uint64_t v29 = (uint64_t)v61;
          v26(v61, v17, v10);
          v59(v29, 0, 1, v10);
          int v30 = v58(v29, 1, v10);
          uint64_t v31 = v63;
          if (v30 != 1)
          {
            uint64_t v32 = v60;
            v26(v60, (char *)v29, v10);
            id v33 = objc_msgSend(self, sel_sharedDefaults);
            id v34 = objc_msgSend(v33, sel_sortOrder);

            if (v34 == (id)2)
            {
              uint64_t v43 = sub_22BE91FA8();
              if (!v44) {
                goto LABEL_29;
              }
              uint64_t v37 = v43;
              uint64_t v38 = v44;
              uint64_t v39 = sub_22BE91FA8();
              if (!v40) {
                goto LABEL_16;
              }
            }
            else
            {
              if (v34 != (id)3) {
                goto LABEL_29;
              }
              uint64_t v35 = sub_22BE91FB8();
              if (!v36) {
                goto LABEL_29;
              }
              uint64_t v37 = v35;
              uint64_t v38 = v36;
              uint64_t v39 = sub_22BE91FB8();
              if (!v40)
              {
LABEL_16:
                swift_bridgeObjectRelease();
                goto LABEL_29;
              }
            }
            uint64_t v66 = v37;
            uint64_t v67 = v38;
            uint64_t v64 = v39;
            uint64_t v65 = v40;
            sub_22BE0F59C();
            uint64_t v20 = sub_22BE93478();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20)
            {
              uint64_t v45 = (void (*)(char *, uint64_t))v11[1];
              v45(v32, v10);
              v45(v31, v10);
              return v20;
            }
LABEL_29:
            uint64_t v46 = self;
            uint64_t v47 = (void *)sub_22BE91FC8();
            id v48 = objc_msgSend(v46, sel_localizedStringFromPersonNameComponents_style_options_, v47, 0, 0);

            uint64_t v49 = sub_22BE92CD8();
            uint64_t v51 = v50;

            uint64_t v52 = (void *)sub_22BE91FC8();
            id v53 = objc_msgSend(v46, sel_localizedStringFromPersonNameComponents_style_options_, v52, 0, 0);

            uint64_t v54 = sub_22BE92CD8();
            uint64_t v56 = v55;

            uint64_t v66 = v49;
            uint64_t v67 = v51;
            uint64_t v64 = v54;
            uint64_t v65 = v56;
            sub_22BE0F59C();
            uint64_t v20 = sub_22BE93478();
            id v57 = (void (*)(char *, uint64_t))v11[1];
            v57(v32, v10);
            v57(v31, v10);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v20;
          }
        }
        else
        {
          uint64_t v29 = (uint64_t)v61;
          v59((uint64_t)v61, 1, 1, v10);
          uint64_t v31 = v63;
        }
        ((void (*)(char *, uint64_t))v11[1])(v31, v10);
        uint64_t v41 = v29;
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7])(v9, 1, 1, v10);
    }
    uint64_t v41 = (uint64_t)v9;
LABEL_22:
    sub_22BE035C8(v41, &qword_26AEFFB08);
    return 0;
  }
  return 1;
}

uint64_t DOCNode.typeToFocusItem.getter@<X0>(uint64_t *a1@<X8>)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
    uint64_t v5 = &protocol witness table for FPItem;
  }
  else
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (!v6)
    {
      uint64_t result = sub_22BE93778();
      __break(1u);
      return result;
    }
    uint64_t v3 = v6;
    uint64_t v4 = sub_22BDD9D50(0, (unint64_t *)&unk_26AF00470);
    uint64_t v5 = &protocol witness table for FINode;
  }
  a1[3] = v4;
  a1[4] = (uint64_t)v5;
  *a1 = v3;

  return swift_unknownObjectRetain();
}

uint64_t sub_22BE0B3CC()
{
  id v1 = objc_msgSend(*v0, sel_displayName);
  uint64_t v2 = sub_22BE92CD8();

  return v2;
}

uint64_t DOCFolderSize.logicalBytes.getter()
{
  return *(void *)v0;
}

uint64_t DOCFolderSize.physicalBytes.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t DOCNode.performFolderSizingIfSupported(handlerQueue:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a4;
  uint64_t v29 = a1;
  uint64_t v8 = sub_22BE92B08();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22BE92B58();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22BE92B18();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  BOOL v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (DOCNode.isFolderSizingSupported.getter())
  {
    sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F060], v14);
    uint64_t v27 = sub_22BE93238();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v19 = v29;
    long long v18[2] = v28;
    void v18[3] = v5;
    v18[4] = v19;
    v18[5] = a2;
    v18[6] = a3;
    uint64_t v38 = sub_22BE0F63C;
    uint64_t v39 = v18;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_22BDD0BA8;
    uint64_t v37 = &block_descriptor_36;
    uint64_t v20 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    id v21 = v19;
    sub_22BE91C58();
    sub_22BE92B38();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    uint64_t v22 = (void *)v27;
    MEMORY[0x230F55CD0](0, v13, v10, v20);
    _Block_release(v20);
  }
  else
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = a3;
    uint64_t v38 = sub_22BE0F5F0;
    uint64_t v39 = (void *)v23;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_22BDD0BA8;
    uint64_t v37 = &block_descriptor_30;
    id v24 = _Block_copy(&aBlock);
    sub_22BE91C58();
    sub_22BE92B38();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v13, v10, v24);
    _Block_release(v24);
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  return swift_release();
}

uint64_t DOCNode.isFolderSizingSupported.getter()
{
  id v1 = v0;
  uint64_t result = (uint64_t)objc_msgSend(v0, sel_isFolder);
  if (result)
  {
    uint64_t result = (uint64_t)objc_msgSend(v0, sel_cachedDomain);
    if (result)
    {
      uint64_t v3 = (void *)result;
      if (FPProviderDomain.shouldUseDSEnumeration.getter())
      {
LABEL_17:

        return 1;
      }
      id v4 = objc_msgSend(v1, sel_providerID);
      uint64_t v5 = sub_22BE92CD8();
      uint64_t v7 = v6;
      if (v5 == sub_22BE92CD8() && v7 == v8) {
        char v10 = 1;
      }
      else {
        char v10 = sub_22BE938C8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_22BE92CD8();
      uint64_t v13 = v12;
      if (v11 == sub_22BE92CD8() && v13 == v14) {
        char v15 = 1;
      }
      else {
        char v15 = sub_22BE938C8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (objc_msgSend(v3, sel_isiCloudDriveProvider) & 1) != 0 || (v10)
      {

        goto LABEL_17;
      }
      if (v15)
      {
        unsigned int v16 = objc_msgSend(v1, sel_isRootItem);

        return v16 ^ 1;
      }
      else
      {

        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_22BE0BAE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  id v10 = a2;
  sub_22BE91C58();
  sub_22BE0C068((void (*)(uint64_t))sub_22BE10A64, (uint64_t)v9, a5);

  return swift_release();
}

uint64_t sub_22BE0BB88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_22BE92B08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22BE92B58();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a2;
  if (a1)
  {
    uint64_t v28 = a3;
    uint64_t v29 = v13;
    uint64_t v30 = v12;
    uint64_t v31 = v9;
    id v16 = a1;
    id v17 = objc_msgSend(v16, sel_propertyAsNumber_, 1819240307);
    uint64_t v18 = v17;
    if (v17)
    {
      id v19 = objc_msgSend(v17, sel_longLongValue);
    }
    else
    {
      id v19 = 0;
    }
    id v22 = objc_msgSend(v16, sel_propertyAsNumber_, 1885895027);
    uint64_t v23 = v22;
    if (v22)
    {
      id v24 = objc_msgSend(v22, sel_longLongValue);
    }
    else
    {
      id v24 = 0;
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v28;
    *(void *)(v25 + 24) = a4;
    *(void *)(v25 + 32) = v19;
    *(unsigned char *)(v25 + 40) = v18 == 0;
    *(void *)(v25 + 48) = v24;
    *(unsigned char *)(v25 + 56) = v23 == 0;
    uint64_t v38 = sub_22BE10DDC;
    uint64_t v39 = v25;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_22BDD0BA8;
    uint64_t v37 = &block_descriptor_156;
    uint64_t v26 = _Block_copy(&aBlock);
    sub_22BE91C58();
    sub_22BE92B38();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v15, v11, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a3;
    *(void *)(v20 + 24) = a4;
    uint64_t v38 = sub_22BE0F5F0;
    uint64_t v39 = v20;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_22BDD0BA8;
    uint64_t v37 = &block_descriptor_150;
    id v21 = _Block_copy(&aBlock);
    sub_22BE91C58();
    sub_22BE92B38();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v15, v11, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return swift_release();
}

void sub_22BE0C068(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (!v8)
  {
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (!v10)
    {
      sub_22BE93648();
      sub_22BE92D88();
      swift_getObjectType();
      sub_22BE93A58();
      sub_22BE92D88();
      swift_bridgeObjectRelease();
      sub_22BE93778();
      __break(1u);
      return;
    }
    uint64_t v11 = (void *)v10;
    swift_unknownObjectRetain();
    id v12 = objc_msgSend(v11, sel_cachedDomain);
    if (v12)
    {
      uint64_t v13 = v12;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
        && (objc_msgSend(v13, sel_isUsingFPFS) & 1) == 0
        && (FPProviderDomain.isPOSIXCompatible.getter() & 1) == 0)
      {
        id v17 = self;
        uint64_t v18 = (void *)swift_allocObject();
        long long v18[2] = a3;
        void v18[3] = v4;
        v18[4] = a1;
        v18[5] = a2;
        id v24 = sub_22BE10AF4;
        uint64_t v25 = v18;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v21 = 1107296256;
        id v22 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_22BDDF270;
        uint64_t v23 = &block_descriptor_132;
        id v19 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        id v14 = v13;
        sub_22BE91C58();
        swift_release();
        objc_msgSend(v17, sel_fiNodeFromItem_inFPv2Domain_completion_, v11, v14, v19);
        _Block_release(v19);
        swift_unknownObjectRelease();

        goto LABEL_12;
      }
    }
    id v14 = objc_msgSend(self, sel_defaultManager);
    char v15 = (void *)swift_allocObject();
    v15[2] = a3;
    v15[3] = v4;
    v15[4] = a1;
    v15[5] = a2;
    id v24 = sub_22BE10A88;
    uint64_t v25 = v15;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v21 = 1107296256;
    id v22 = sub_22BE026A4;
    uint64_t v23 = &block_descriptor_126;
    id v16 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    sub_22BE91C58();
    swift_release();
    objc_msgSend(v14, sel_fetchURLForItem_completionHandler_, v11, v16);
    _Block_release(v16);
    swift_unknownObjectRelease();
LABEL_12:

    return;
  }
  uint64_t v9 = v8;
  swift_unknownObjectRetain();
  a1(v9);

  swift_unknownObjectRelease();
}

uint64_t sub_22BE0C3F4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a6;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  uint64_t v7 = sub_22BE92B08();
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_22BE92B58();
  uint64_t v10 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22BE92B18();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F060], v13);
  id v17 = (void *)sub_22BE93238();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v18 = (void *)swift_allocObject();
  id v19 = v26;
  long long v18[2] = v27;
  void v18[3] = a1;
  v18[4] = v25;
  v18[5] = v19;
  uint64_t v20 = v29;
  v18[6] = v28;
  v18[7] = v20;
  aBlock[4] = sub_22BE10B50;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_138;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a1;
  swift_unknownObjectRetain();
  id v23 = v19;
  sub_22BE91C58();
  sub_22BE92B38();
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v12, v9, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  return swift_release();
}

uint64_t sub_22BE0C7B4(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(uint64_t))
{
  v25[1] = *MEMORY[0x263EF8340];
  if (!a1)
  {
    if (qword_268486868 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_22BE925E8();
    __swift_project_value_buffer(v8, (uint64_t)qword_268487B30);
    swift_unknownObjectRetain();
    id v9 = a3;
    swift_unknownObjectRetain();
    id v10 = a3;
    uint64_t v11 = sub_22BE925C8();
    os_log_type_t v12 = sub_22BE93138();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v21 = v12;
      id v24 = v11;
      uint64_t v13 = swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v25[0] = v23;
      *(_DWORD *)uint64_t v13 = 136315394;
      id v14 = objc_msgSend(a2, sel_displayName);
      uint64_t v15 = sub_22BE92CD8();
      unint64_t v17 = v16;

      sub_22BDD8478(v15, v17, v25);
      sub_22BE93408();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      if (a3)
      {
        id v18 = a3;
        uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
        sub_22BE93408();
      }
      else
      {
        sub_22BE93408();
        uint64_t v19 = 0;
      }
      uint64_t v11 = v24;
      *id v22 = v19;

      _os_log_impl(&dword_22BDC5000, v24, v21, "Can't fpfs_fetchFINode on a DOCNode that's not backed by an FINode (%s, error: %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v23, -1, -1);
      MEMORY[0x230F57540](v13, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
  }
  return a4(a1);
}

uint64_t sub_22BE0CABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a6;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v29 = a1;
  uint64_t v34 = sub_22BE92B08();
  uint64_t v37 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22BE92B58();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22BE92B18();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F060], v15);
  uint64_t v19 = (void *)sub_22BE93238();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_22BE0012C(v29, (uint64_t)v14);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v30;
  sub_22BDE2770((uint64_t)v14, v22 + v20, (uint64_t *)&unk_26AEFFB10);
  uint64_t v23 = v32;
  *(void *)(v22 + v21) = v31;
  id v24 = (void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v25 = v33;
  *id v24 = v23;
  v24[1] = v25;
  aBlock[4] = sub_22BE10CB0;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_144;
  uint64_t v26 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_22BE91C58();
  sub_22BE92B38();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  uint64_t v27 = v34;
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v10, v7, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
  return swift_release();
}

void sub_22BE0CF28(uint64_t a1, void *a2, void (*a3)(void))
{
  sub_22BDD9D50(0, (unint64_t *)&unk_26AF00470);
  id v6 = static FINode.docNode(from:)(a1);
  if (!v6
    || (uint64_t v7 = v6, v8 = objc_msgSend(v6, sel_presentationNode), v7, !v8))
  {
    if (qword_268486868 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_22BE925E8();
    __swift_project_value_buffer(v9, (uint64_t)qword_268487B30);
    swift_unknownObjectRetain_n();
    id v10 = sub_22BE925C8();
    os_log_type_t v11 = sub_22BE93138();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v19 = a3;
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      id v14 = objc_msgSend(a2, sel_displayName);
      uint64_t v15 = sub_22BE92CD8();
      unint64_t v17 = v16;

      uint64_t v18 = v15;
      a3 = v19;
      sub_22BDD8478(v18, v17, &v20);
      sub_22BE93408();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v10, v11, "Can't fpfs_fetchFINode on a DOCNode that's not backed by an FINode (%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v13, -1, -1);
      MEMORY[0x230F57540](v12, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    id v8 = 0;
  }
  a3(v8);
}

uint64_t DOCDiskProperties.format.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

__n128 DOCDiskProperties.size.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t DOCDiskProperties.Size.availableSpace.getter()
{
  return *(void *)v0;
}

uint64_t DOCDiskProperties.Size.freeSpace.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t DOCDiskProperties.Size.purgeableSpace.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t DOCDiskProperties.Size.totalSpace.getter()
{
  return *(void *)(v0 + 24);
}

unint64_t DOCDiskProperties.Size.usedSpace.getter()
{
  unint64_t v1 = v0[3];
  unint64_t result = v1 - *v0;
  if (v1 < *v0) {
    __break(1u);
  }
  return result;
}

id DOCNode.fetchDiskPropertiesIfSupported(handlerQueue:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  uint64_t v6 = sub_22BE92B08();
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE92B58();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  os_log_type_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22BE92B18();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((DOCNode.areDiskPropertiesSupported.getter() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v33 = v8;
  uint64_t v16 = v6;
  uint64_t v17 = a3;
  uint64_t v18 = a2;
  id result = objc_msgSend(self, sel_sharedManager);
  if (result)
  {
    uint64_t v20 = result;
    id v21 = objc_msgSend(v3, sel_providerDomainID);
    id v22 = sub_22BE3C054();

    a2 = v18;
    a3 = v17;
    uint64_t v6 = v16;
    id v8 = v33;
    if (v22)
    {
      sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
      (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F060], v12);
      uint64_t v32 = sub_22BE93238();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      uint64_t v23 = (void *)swift_allocObject();
      id v24 = v34;
      long long v23[2] = v22;
      uint64_t v23[3] = v24;
      v23[4] = a2;
      v23[5] = a3;
      uint64_t v43 = sub_22BE0FB20;
      uint64_t v44 = v23;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v40 = 1107296256;
      uint64_t v41 = sub_22BDD0BA8;
      uint64_t v42 = &block_descriptor_48;
      uint64_t v25 = _Block_copy(&aBlock);
      id v26 = v22;
      id v27 = v24;
      sub_22BE91C58();
      sub_22BE92B38();
      uint64_t v38 = MEMORY[0x263F8EE78];
      sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
      sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
      sub_22BE934E8();
      uint64_t v28 = (void *)v32;
      MEMORY[0x230F55CD0](0, v11, v8, v25);
      _Block_release(v25);

LABEL_6:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
      return (id)swift_release();
    }
LABEL_5:
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a2;
    *(void *)(v29 + 24) = a3;
    uint64_t v43 = sub_22BE0F64C;
    uint64_t v44 = (void *)v29;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    uint64_t v41 = sub_22BDD0BA8;
    uint64_t v42 = &block_descriptor_42;
    uint64_t v30 = _Block_copy(&aBlock);
    sub_22BE91C58();
    sub_22BE92B38();
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v11, v8, v30);
    _Block_release(v30);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t DOCNode.areDiskPropertiesSupported.getter()
{
  id v1 = objc_msgSend(self, sel_usbDiskProperties);
  unsigned int v2 = objc_msgSend(v1, sel_isEnabled);

  if (v2)
  {
    if (objc_msgSend(v0, sel_isRootItem))
    {
      id v3 = objc_msgSend(v0, sel_providerID);
      uint64_t v4 = sub_22BE92CD8();
      uint64_t v6 = v5;

      if (v4 == sub_22BE92CD8() && v6 == v7) {
        LOBYTE(v2) = 1;
      }
      else {
        LOBYTE(v2) = sub_22BE938C8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v2) = 0;
    }
  }
  return v2 & 1;
}

void sub_22BE0D85C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a2;
  v8[3] = a1;
  v8[4] = a3;
  v8[5] = a4;
  void v12[4] = sub_22BE10A44;
  v12[5] = v8;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  void v12[2] = sub_22BDD0BA8;
  uint64_t v12[3] = &block_descriptor_111;
  uint64_t v9 = _Block_copy(v12);
  id v10 = a2;
  id v11 = a1;
  sub_22BE91C58();
  swift_release();
  objc_msgSend(v11, sel_expireCacheWithOptions_completionBlock_, 2, v9);
  _Block_release(v9);
}

uint64_t sub_22BE0D960(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v19[0] = a1;
  uint64_t v7 = sub_22BE92B08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22BE92B58();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  aBlock[4] = sub_22BE10A54;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_117;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  sub_22BE91C58();
  sub_22BE92B38();
  v19[1] = MEMORY[0x263F8EE78];
  sub_22BDD6934((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

id sub_22BE0DC18(void *a1, void (*a2)(void *))
{
  id result = objc_msgSend(a1, sel_filesystem);
  if (result)
  {
    uint64_t v5 = result;
    id v6 = objc_msgSend(result, sel_localizedName);

    uint64_t v7 = sub_22BE92CD8();
    uint64_t v9 = v8;

    v10[0] = v7;
    v10[1] = v9;
    void v10[2] = objc_msgSend(a1, sel_availableSpace);
    void v10[3] = objc_msgSend(a1, sel_freeSpace);
    v10[4] = objc_msgSend(a1, sel_purgeableSpace);
    v10[5] = objc_msgSend(a1, sel_totalSpace);
    a2(v10);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void DOCNode.diskProperties.getter(uint64_t *a1@<X8>)
{
  if ((DOCNode.areDiskPropertiesSupported.getter() & 1) == 0) {
    goto LABEL_6;
  }
  id v3 = objc_msgSend(self, sel_sharedManager);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v1, sel_providerDomainID);
    id v6 = sub_22BE3C054();

    if (v6)
    {
      id v7 = objc_msgSend(v6, sel_filesystem);
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = objc_msgSend(v7, sel_localizedName);

        uint64_t v10 = sub_22BE92CD8();
        uint64_t v12 = v11;

        id v13 = objc_msgSend(v6, sel_availableSpace);
        id v14 = objc_msgSend(v6, sel_freeSpace);
        id v15 = objc_msgSend(v6, sel_purgeableSpace);
        id v16 = objc_msgSend(v6, sel_totalSpace);

        *a1 = v10;
        a1[1] = v12;
        a1[2] = (uint64_t)v13;
        a1[3] = (uint64_t)v14;
        a1[4] = (uint64_t)v15;
        a1[5] = (uint64_t)v16;
        return;
      }
      goto LABEL_8;
    }
LABEL_6:
    *((_OWORD *)a1 + 1) = 0u;
    *((_OWORD *)a1 + 2) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  __break(1u);
LABEL_8:
  __break(1u);
}

void DOCNode.fetchAndAccessURL(downloadIfNeeded:handler:)(char a1, void (*a2)(char *), void (*a3)(char *))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = sub_22BE92198();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v48 = (char *)&v44 - v18;
  if ((a1 & 1) != 0
    || !objc_msgSend(v3, sel_isCloudItem)
    || objc_msgSend(v3, sel_isDownloaded))
  {
    uint64_t v19 = swift_allocObject();
    uint64_t v49 = v19;
    uint64_t v50 = a2;
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = a3;
    uint64_t v51 = a3;
    sub_22BE91C58();
    id v20 = objc_msgSend(v3, sel_nodeURL);
    if (v20)
    {
      id v21 = v20;
      sub_22BE92168();

      id v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v22(v12, v17, v13);
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v12, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        id v24 = v48;
        uint64_t v47 = (void (*)(unint64_t, char *, uint64_t))v22;
        v22(v48, v12, v13);
        int v46 = sub_22BE92178();
        uint64_t v25 = self;
        id v26 = (void *)sub_22BE92138();
        id v27 = objc_msgSend(v25, sel_readingIntentWithURL_options_, v26, 0);

        id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_22BE97A40;
        *(void *)(v29 + 32) = v27;
        uint64_t aBlock = v29;
        sub_22BE92ED8();
        sub_22BDD9D50(0, &qword_268487088);
        id v45 = v27;
        uint64_t v30 = (void *)sub_22BE92EA8();
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v24, v13);
        unint64_t v32 = (*(unsigned __int8 *)(v14 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        uint64_t v33 = swift_allocObject();
        *(unsigned char *)(v33 + 16) = v46 & 1;
        v47(v33 + v32, v17, v13);
        uint64_t v34 = (void (**)(char *))(v33 + ((v15 + v32 + 7) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v35 = v51;
        *uint64_t v34 = v50;
        v34[1] = v35;
        uint64_t v56 = (void (*)(uint64_t, void *))sub_22BE0FB5C;
        id v57 = (void *)v33;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v53 = 1107296256;
        uint64_t v54 = sub_22BE0469C;
        uint64_t v55 = &block_descriptor_63;
        uint64_t v36 = _Block_copy(&aBlock);
        sub_22BE91C58();
        swift_release();
        objc_msgSend(v28, sel_coordinateAccessWithIntents_queue_byAccessor_, v30, v31, v36);
        _Block_release(v36);
        swift_release();

        (*(void (**)(char *, uint64_t))(v14 + 8))(v48, v13);
        return;
      }
    }
    else
    {
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v12, 1, 1, v13);
    }
    sub_22BE035C8((uint64_t)v12, (uint64_t *)&unk_26AEFFB10);
    id v37 = DOCNode.fpfs_syncFetchFPItem()();
    if (v37)
    {
      uint64_t v38 = v37;
      id v39 = objc_msgSend(self, sel_defaultManager);
      uint64_t v40 = (void *)swift_allocObject();
      uint64_t v41 = v51;
      v40[2] = v50;
      v40[3] = v41;
      uint64_t v42 = v49;
      v40[4] = sub_22BE0FB2C;
      v40[5] = v42;
      uint64_t v56 = sub_22BE0FB4C;
      id v57 = v40;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v53 = 1107296256;
      uint64_t v54 = sub_22BE026A4;
      uint64_t v55 = &block_descriptor_57;
      uint64_t v43 = _Block_copy(&aBlock);
      sub_22BE91C58();
      sub_22BE91C58();
      swift_release();
      objc_msgSend(v39, sel_fetchURLForItem_completionHandler_, v38, v43);
      _Block_release(v43);
      swift_release();

      return;
    }
    v23(v10, 1, 1, v13);
    v50(v10);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
    a2(v10);
  }
  sub_22BE035C8((uint64_t)v10, (uint64_t *)&unk_26AEFFB10);
}

void sub_22BE0E508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v4 = sub_22BE92198();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  int v21 = sub_22BE92178();
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_22BE92138();
  id v9 = objc_msgSend(v7, sel_readingIntentWithURL_options_, v8, 0);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_22BE97A40;
  *(void *)(v11 + 32) = v9;
  aBlock[0] = v11;
  sub_22BE92ED8();
  sub_22BDD9D50(0, &qword_268487088);
  id v12 = v9;
  uint64_t v13 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(&v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v21 & 1;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v16 + v15, &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  id v17 = (void *)(v16 + ((v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v18 = v23;
  *id v17 = v22;
  v17[1] = v18;
  aBlock[4] = sub_22BE0FB5C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE0469C;
  void aBlock[3] = &block_descriptor_105;
  uint64_t v19 = _Block_copy(aBlock);
  sub_22BE91C58();
  swift_release();
  objc_msgSend(v10, sel_coordinateAccessWithIntents_queue_byAccessor_, v13, v14, v19);
  _Block_release(v19);
}

uint64_t sub_22BE0E7F4(uint64_t a1, char a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22BE92198();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v11);
  }
  a4(v10);
  uint64_t result = sub_22BE035C8((uint64_t)v10, (uint64_t *)&unk_26AEFFB10);
  if (a2) {
    return sub_22BE92158();
  }
  return result;
}

void sub_22BE0E93C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE0012C(a1, (uint64_t)v14);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  sub_22BDE2770((uint64_t)v14, v18 + v15, (uint64_t *)&unk_26AEFFB10);
  *(void *)(v18 + v16) = a2;
  uint64_t v19 = (void *)(v18 + v17);
  *uint64_t v19 = a3;
  v19[1] = a4;
  id v20 = (void *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8));
  void *v20 = v24;
  v20[1] = a6;
  aBlock[4] = sub_22BE107F8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_98;
  int v21 = _Block_copy(aBlock);
  id v22 = a2;
  sub_22BE91C58();
  sub_22BE91C58();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
}

uint64_t sub_22BE0EB1C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, void (*a5)(char *))
{
  id v20 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = sub_22BE92198();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE0012C(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22BE035C8((uint64_t)v13, (uint64_t *)&unk_26AEFFB10);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    a3(v11);
    return sub_22BE035C8((uint64_t)v11, (uint64_t *)&unk_26AEFFB10);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  if (a2)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_5;
  }
  v20(v17);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t DOCNode.syncErrorDescription.getter()
{
  id v1 = objc_msgSend(v0, sel_downloadingError);
  if (v1)
  {
    unsigned int v2 = v1;
  }
  else
  {
    id v3 = objc_msgSend(v0, sel_uploadingError);
    if (!v3) {
      return 0;
    }
    unsigned int v2 = v3;
  }
  swift_getErrorValue();
  uint64_t v4 = sub_22BE93988();

  return v4;
}

id DOCNode.shouldBeUploaded.getter()
{
  if ((objc_msgSend(v0, sel_isUploaded) & 1) != 0
    || (objc_msgSend(v0, sel_isActionable) & 1) != 0
    || (objc_msgSend(v0, sel_isExternalDownloadPlaceholder) & 1) != 0)
  {
    return 0;
  }
  else
  {
    return objc_msgSend(v0, sel_isCloudItem);
  }
}

id DOCNode.representedLocation.getter()
{
  id v1 = (void *)DOCNode.sourceIdentifier.getter();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3AAB8]), sel_initWithSourceIdentifier_node_, v1, v0);

  objc_msgSend(v2, sel_setIsFPV2_, 1);
  return v2;
}

uint64_t sub_22BE0EED8()
{
  id v1 = (uint64_t *)(v0 + qword_268487BF0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22BE91C58();
    unint64_t v4 = sub_22BDDB784(v3);
    if (v5)
    {
      sub_22BDD854C(*(void *)(v2 + 56) + 32 * v4, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  type metadata accessor for FINodeItemCountFetcher();
  if (swift_dynamicCast()) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t sub_22BE0EFB4()
{
  id v1 = (uint64_t *)(v0 + qword_268487BF0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22BE91C58();
    unint64_t v4 = sub_22BDDB784(v3);
    if (v5)
    {
      sub_22BDD854C(*(void *)(v2 + 56) + 32 * v4, (uint64_t)&v7);
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684870A0);
  if (swift_dynamicCast()) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t sub_22BE0F098()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE0F0D8(void *a1)
{
  sub_22BE08A3C(a1, *(void *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_22BE0F0E0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_22BE0F0F0()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE0F140()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE0F178(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_22BE0F1D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a3;
  v24[1] = *(id *)MEMORY[0x263EF8340];
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_22BE937E8())
  {
    unint64_t v23 = v4 & 0xC000000000000001;
    uint64_t v8 = 4;
    uint64_t v21 = v7;
    while (1)
    {
      id v9 = v23 ? (id)MEMORY[0x230F56140](v8 - 4, v4) : *(id *)(v4 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      if (a2)
      {
      }
      else
      {
        unint64_t v12 = v4;
        v24[0] = 0;
        id v13 = objc_msgSend(v9, sel_labelWithItem_error_, a4, v24);
        id v14 = v24[0];
        if (v13)
        {
          uint64_t v15 = v13;
          a1 = sub_22BE92CD8();
          a2 = v16;
          id v17 = v14;
        }
        else
        {
          id v18 = v24[0];
          uint64_t v19 = (void *)sub_22BE92088();

          swift_willThrow();
          a1 = 0;
          a2 = 0;
        }
        unint64_t v4 = v12;
        uint64_t v7 = v21;
      }
      ++v8;
      if (v11 == v7) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22BE0F3A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487130);
    uint64_t v3 = sub_22BE93638();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_22BE939F8();
      swift_bridgeObjectRetain();
      sub_22BE92D48();
      uint64_t result = sub_22BE93A48();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_22BE938C8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_22BE938C8();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_22BE0F54C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_22BE0F554()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_22BE0F58C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 48) = *(unsigned char *)(v0 + 24);
}

unint64_t sub_22BE0F59C()
{
  unint64_t result = qword_268487080;
  if (!qword_268487080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487080);
  }
  return result;
}

uint64_t sub_22BE0F5F4()
{
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22BE0F63C()
{
  return sub_22BE0BAE4(*(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_22BE0F64C()
{
  uint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 16);
  memset(v3, 0, sizeof(v3));
  return v1(v3);
}

uint64_t sub_22BE0F68C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2684870D0);
    uint64_t v3 = sub_22BE93638();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(_DWORD *)(v6 + 4 * v4);
      sub_22BE939F8();
      sub_22BE93A28();
      uint64_t result = sub_22BE93A48();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_DWORD *)(v14 + 4 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(_DWORD *)(v14 + 4 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(_DWORD *)(v14 + 4 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_22BE0F7D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_22BE931D8();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  BOOL v17 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_22BE932F8();
  MEMORY[0x270FA5388](v16);
  uint64_t v6 = sub_22BE92B58();
  MEMORY[0x270FA5388](v6 - 8);
  id v7 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
  uint64_t v8 = sub_22BE92CD8();
  uint64_t v10 = v9;

  *(void *)(v2 + 32) = v8;
  *(void *)(v2 + 40) = v10;
  *(unsigned char *)(v2 + 48) = 1;
  *(void *)(v2 + 16) = a1;
  uint64_t v20 = *(void *)v2;
  id v11 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684870D8);
  uint64_t v20 = sub_22BE92CF8();
  uint64_t v21 = v12;
  sub_22BE92D88();
  id v13 = objc_msgSend(v11, sel_fileName);
  sub_22BE92CD8();

  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  type metadata accessor for ReadWriteLock();
  uint64_t v14 = swift_allocObject();
  sub_22BDD9D50(0, &qword_2684870E0);
  sub_22BE92B48();
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_22BDD6934(&qword_2684870E8, MEMORY[0x263F8F1A8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684870F0);
  sub_22BDD7600(&qword_2684870F8, &qword_2684870F0);
  sub_22BE934E8();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x263F8F138], v19);
  *(void *)(v14 + 16) = sub_22BE93308();
  *(void *)(v2 + 24) = v14;
  return v2;
}

void sub_22BE0FB20()
{
  sub_22BE0D85C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_22BE0FB2C(uint64_t a1)
{
  sub_22BE0E508(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_22BE0FB34()
{
  return objectdestroy_53Tm(MEMORY[0x263F8EED8]);
}

void sub_22BE0FB4C(uint64_t a1, void *a2)
{
  sub_22BE0E93C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

unint64_t sub_22BE0FB64()
{
  unint64_t result = qword_268487090;
  if (!qword_268487090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487090);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCNodeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE0FC84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ReadWriteLock()
{
  return self;
}

uint64_t type metadata accessor for ObjCSync()
{
  return self;
}

uint64_t type metadata accessor for FINodeItemCountFetcher()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DOCFolderSize(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCFolderSize(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCFolderSize()
{
  return &type metadata for DOCFolderSize;
}

uint64_t destroy for DOCDiskProperties()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DOCDiskProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DOCDiskProperties(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCDiskProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCDiskProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCDiskProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDiskProperties()
{
  return &type metadata for DOCDiskProperties;
}

ValueMetadata *type metadata accessor for DOCDiskProperties.Size()
{
  return &type metadata for DOCDiskProperties.Size;
}

uint64_t getEnumTagSinglePayload for DOCNodeCollaborationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22BE0FFE0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCNodeCollaborationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x22BE100C8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_22BE100F0(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

void sub_22BE10108(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_268488300);
      uint64_t v3 = sub_22BE93638();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x230F56140](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_22BE93318();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_22BDD9D50(0, (unint64_t *)&qword_2684870C0);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_22BE93328();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_22BE93328();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_22BE93318();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_22BDD9D50(0, (unint64_t *)&qword_2684870C0);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_22BE93328();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_22BE93328();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_22BE10464(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2684870A8);
    uint64_t v3 = sub_22BE93638();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_22BE92CD8();
      sub_22BE939F8();
      id v7 = v6;
      sub_22BE92D48();
      uint64_t v8 = sub_22BE93A48();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_22BE92CD8();
        uint64_t v17 = v16;
        if (v15 == sub_22BE92CD8() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_22BE938C8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_22BE92CD8();
          uint64_t v24 = v23;
          if (v22 == sub_22BE92CD8() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_22BE10694()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_22BE92198();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v8 + 16, v2 | 7);
}

uint64_t sub_22BE107F8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void (**)(char *))(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v4 + 8);
  unint64_t v8 = *(void (**)(char *))(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_22BE0EB1C(v0 + v2, v5, v6, v7, v8);
}

uint64_t objectdestroy_59Tm()
{
  uint64_t v1 = sub_22BE92198();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_22BE10954(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_22BE92198() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + 16);
  unint64_t v6 = *(void (**)(char *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_22BE0E7F4(a1, v5, v1 + v4, v6);
}

uint64_t objectdestroy_44Tm()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE10A44()
{
  return sub_22BE0D960(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id sub_22BE10A54()
{
  return sub_22BE0DC18(*(void **)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_22BE10A64(void *a1)
{
  return sub_22BE0BB88(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_22BE10A70()
{
  return objectdestroy_53Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_22BE10A88(uint64_t a1, uint64_t a2)
{
  return sub_22BE0CABC(a1, a2, v2[3], v2[4], v2[5], v2[2]);
}

uint64_t sub_22BE10A94()
{
  return objectdestroy_53Tm(MEMORY[0x263F8EEE8]);
}

uint64_t objectdestroy_53Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  swift_release();

  return MEMORY[0x270FA0238](v1, 48, 7);
}

uint64_t sub_22BE10AF4(void *a1, void *a2)
{
  return sub_22BE0C3F4(a1, a2, v2[3], v2[4], v2[5], v2[2]);
}

uint64_t sub_22BE10B00()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_22BE10B50()
{
  return sub_22BE0C7B4(*(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48));
}

uint64_t sub_22BE10B60()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_22BE92198();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

void sub_22BE10CB0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + v3);
  uint64_t v5 = *(void (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_22BE0CF28(v0 + v2, v4, v5);
}

uint64_t sub_22BE10D60()
{
  uint64_t v1 = *(uint64_t (**)(void *))(v0 + 16);
  memset(v3, 0, sizeof(v3));
  __int16 v4 = 256;
  return v1(v3);
}

uint64_t sub_22BE10DA4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t sub_22BE10DDC()
{
  uint64_t v1 = *(uint64_t (**)(void *))(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  v6[0] = *(void *)(v0 + 32);
  v6[1] = v2 & 1;
  _OWORD v6[2] = v3;
  char v7 = v5;
  char v8 = 0;
  return v1(v6);
}

uint64_t sub_22BE10E44()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_22BE10E6C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22BE10E78()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (unsigned char *)v0[4];
  uint64_t v4 = *(void *)(v2 + 40);
  void *v1 = *(void *)(v2 + 32);
  v1[1] = v4;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v3 = *(unsigned char *)(v2 + 48);
  return result;
}

uint64_t sub_22BE10EC4()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void *sub_22BE10ED4()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  unsigned char *v1 = 0;
  return result;
}

uint64_t sub_22BE10F10()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE10F20()
{
  return sub_22BE16AA4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_22BE10F28()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_22BE10F60()
{
  return sub_22BE0A488();
}

uint64_t sub_22BE10F68()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE10FB0()
{
  return sub_22BE0A584(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_22BE10FBC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE10FFC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 32) = v0[3];
  *(void *)(v1 + 40) = v2;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_22BE11040()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE11050()
{
  uint64_t v1 = *(void **)(v0 + 16);
  (*(void (**)(void *__return_ptr))(v0 + 24))(v5);
  uint64_t v2 = v5[0];
  uint64_t v3 = v5[1];
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t sub_22BE110A0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE110B0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487120);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_22BE11144(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487120);

  return sub_22BE0869C(a1, a2);
}

id UIView.enclosingTabSwitcherStyle.getter()
{
  return sub_22BE11318((SEL *)&selRef_enclosingTabSwitcherStyle);
}

id UIView.enclosingDocumentLandingMode.getter()
{
  return sub_22BE11318((SEL *)&selRef_enclosingDocumentLandingMode);
}

uint64_t UIView.enclosedInUIPDocumentLanding.getter()
{
  return sub_22BDD9AD0(&qword_26AF004C8) & 1;
}

id UIViewController.enclosingTabSwitcherStyle.getter()
{
  return sub_22BE11318((SEL *)&selRef_enclosingTabSwitcherStyle);
}

id UIViewController.enclosingDocumentLandingMode.getter()
{
  return sub_22BE11318((SEL *)&selRef_enclosingDocumentLandingMode);
}

id sub_22BE11318(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = [v3 *a1];

  return v4;
}

uint64_t UIViewController.enclosedInUIPDocumentLanding.getter()
{
  return sub_22BDD9AD0(&qword_26AF003C8) & 1;
}

double _sSo6UIViewC26DocumentManagerExecutablesE27enclosingUIPHorizontalInset12CoreGraphics7CGFloatVvg_0()
{
  id v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_enclosingUIPHorizontalInset);
  double v3 = v2;

  return v3;
}

uint64_t UITraitCollection.enclosingTabSwitcherStyle.getter()
{
  sub_22BDD9D8C();
  sub_22BDD9CB4(&qword_268487188, type metadata accessor for DOCTabSwitcherStyle);
  sub_22BE93268();
  return v1;
}

uint64_t UITraitCollection.enclosingDocumentLandingMode.getter()
{
  sub_22BDD9CFC();
  sub_22BDD9CB4(&qword_268487198, type metadata accessor for DOCUIPDocumentLandingMode);
  sub_22BE93268();
  return v1;
}

BOOL UITraitCollection.enclosedInUIPDocumentLanding.getter()
{
  return objc_msgSend(v0, sel_enclosingDocumentLandingMode) != (id)-1;
}

uint64_t UITraitCollection.enclosingUIPHorizontalInset.getter()
{
  sub_22BDE1B54();

  return sub_22BE93258();
}

BOOL static UITraitCollection.enclosingTabSwitcherCanBeFloating.getter()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1 == (id)1;
}

id UITraitCollection.contextPrefersVariableBlurBottomTabBar.getter()
{
  id v1 = objc_msgSend(v0, sel_enclosingTabSwitcherStyle);
  id v2 = objc_msgSend(v0, sel_horizontalSizeClass);
  BOOL IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
  if (v1 != (id)1) {
    return 0;
  }
  BOOL v4 = IsReduceTransparencyEnabled;
  id result = objc_msgSend(v0, sel_enclosedInUIPDocumentLanding);
  if (result)
  {
    if (v2 == (id)1) {
      return (id)!v4;
    }
    else {
      return 0;
    }
  }
  return result;
}

id DOCConfiguration.canHaveFloatingTabSwitcher.getter()
{
  id result = objc_msgSend(self, sel_enclosingTabSwitcherCanBeFloating);
  if (result) {
    return (id)(objc_msgSend(v0, sel_isPickerUI) ^ 1);
  }
  return result;
}

id sub_22BE116DC(void *a1)
{
  id v1 = a1;
  UITraitCollection.descriptionOfDOCUIPTraits.getter();

  id v2 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t UITraitCollection.descriptionOfDOCUIPTraits.getter()
{
  sub_22BE93648();
  sub_22BE92D88();
  id v1 = objc_msgSend(v0, sel_enclosingTabSwitcherStyle);
  if (!v1 || v1 == (id)2 || v1 == (id)1)
  {
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    sub_22BE92D88();
    objc_msgSend(v0, sel_enclosingDocumentLandingMode);
    type metadata accessor for DOCUIPDocumentLandingMode(0);
    sub_22BE93758();
    sub_22BE92D88();
    objc_msgSend(v0, sel_enclosingUIPHorizontalInset);
    sub_22BE93008();
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for DOCTabSwitcherStyle(0);
    uint64_t result = sub_22BE93908();
    __break(1u);
  }
  return result;
}

uint64_t UIMutableTraits.enclosingTabSwitcherStyle.getter()
{
  sub_22BDD9D8C();
  sub_22BDD9CB4(&qword_268487188, type metadata accessor for DOCTabSwitcherStyle);
  sub_22BE92618();
  return v1;
}

uint64_t (*UIMutableTraits.enclosingTabSwitcherStyle.modify(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = UIMutableTraits.enclosingTabSwitcherStyle.getter();
  return sub_22BE119F4;
}

uint64_t sub_22BE119F4()
{
  return UIMutableTraits.enclosingTabSwitcherStyle.setter();
}

uint64_t UIMutableTraits.uipDocumentLandingMode.getter()
{
  sub_22BDD9CFC();
  sub_22BDD9CB4(&qword_268487198, type metadata accessor for DOCUIPDocumentLandingMode);
  sub_22BE92618();
  return v1;
}

uint64_t UIMutableTraits.uipDocumentLandingMode.setter()
{
  return sub_22BE92628();
}

uint64_t (*UIMutableTraits.uipDocumentLandingMode.modify(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = UIMutableTraits.uipDocumentLandingMode.getter();
  return sub_22BE11BA0;
}

uint64_t sub_22BE11BA0()
{
  return UIMutableTraits.uipDocumentLandingMode.setter();
}

uint64_t UIMutableTraits.enclosingUIPHorizontalInset.getter()
{
  sub_22BDE1B54();

  return sub_22BE925F8();
}

uint64_t UIMutableTraits.enclosingUIPHorizontalInset.setter()
{
  sub_22BDE1B54();

  return sub_22BE92608();
}

uint64_t (*UIMutableTraits.enclosingUIPHorizontalInset.modify(void *a1, uint64_t a2, uint64_t a3))()
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  sub_22BDE1B54();
  sub_22BE925F8();
  *a1 = v5;
  return sub_22BE11D00;
}

uint64_t sub_22BE11D00()
{
  return sub_22BE92608();
}

uint64_t UITraitOverrides.enclosingTabSwitcherStyleIfSet.getter()
{
  sub_22BDD9D8C();
  if ((sub_22BE92658() & 1) == 0) {
    return 0;
  }
  sub_22BE92668();
  sub_22BDD9CB4(&qword_268487188, type metadata accessor for DOCTabSwitcherStyle);
  sub_22BE92618();
  return v1;
}

uint64_t UITraitOverrides.uipDocumentLandingModeIfSet.getter()
{
  while ((sub_22BE92658() & 1) != 0)
    ;
  return 0;
}

uint64_t static DOCTabSwitcherStyleTrait.name.getter()
{
  return sub_22BE12134((uint64_t *)&unk_268487140);
}

uint64_t static DOCTabSwitcherStyleTrait.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_22BE12198(a1, a2, qword_268487140, &qword_268487140[1]);
}

uint64_t (*static DOCTabSwitcherStyleTrait.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t static DOCTabSwitcherStyleTrait.defaultStyle(for:)(void *a1)
{
  long long v2 = xmmword_22BE99C00;
  return _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(a1, 0, (unsigned __int8 *)&v2);
}

uint64_t static DOCUIPHorizontalInsetTrait.name.getter()
{
  return sub_22BE12134((uint64_t *)&unk_268487150);
}

uint64_t static DOCUIPHorizontalInsetTrait.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_22BE12198(a1, a2, qword_268487150, &qword_268487150[1]);
}

uint64_t (*static DOCUIPHorizontalInsetTrait.name.modify())()
{
  return j_j__swift_endAccess;
}

double static DOCUIPHorizontalInsetTrait.defaultValue.getter()
{
  if (qword_2684866F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)&qword_268487160;
}

uint64_t static DOCUIPHorizontalInsetTrait.defaultValue.setter(double a1)
{
  if (qword_2684866F0 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  qword_268487160 = *(void *)&a1;
  return result;
}

uint64_t (*static DOCUIPHorizontalInsetTrait.defaultValue.modify())()
{
  if (qword_2684866F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static DOCUIPDocumentLandingModeTrait.name.getter()
{
  return sub_22BE12134((uint64_t *)&unk_268487168);
}

uint64_t sub_22BE12134(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static DOCUIPDocumentLandingModeTrait.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_22BE12198(a1, a2, qword_268487168, &qword_268487168[1]);
}

uint64_t sub_22BE12198(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DOCUIPDocumentLandingModeTrait.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static DOCUIPDocumentLandingModeTrait.defaultValue.getter()
{
  return qword_268487178;
}

uint64_t static DOCUIPDocumentLandingModeTrait.defaultValue.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  qword_268487178 = a1;
  return result;
}

uint64_t (*static DOCUIPDocumentLandingModeTrait.defaultValue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_22BE12334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UIMutableTraits.enclosingTabSwitcherStyle.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22BE12368()
{
  return UIMutableTraits.enclosingTabSwitcherStyle.setter();
}

uint64_t sub_22BE12398()
{
  return 16;
}

__n128 sub_22BE123A4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22BE123B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UIMutableTraits.uipDocumentLandingMode.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22BE123E4()
{
  return UIMutableTraits.uipDocumentLandingMode.setter();
}

uint64_t sub_22BE12414()
{
  return 16;
}

__n128 sub_22BE12420(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22BE1242C@<X0>(void *a1@<X8>)
{
  uint64_t result = UIMutableTraits.enclosingUIPHorizontalInset.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_22BE12460()
{
  return UIMutableTraits.enclosingUIPHorizontalInset.setter();
}

uint64_t sub_22BE12494()
{
  return 16;
}

__n128 sub_22BE124A0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of DOCConfigurationProviding.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for DOCTabSwitcherStyleTrait()
{
  return &type metadata for DOCTabSwitcherStyleTrait;
}

ValueMetadata *type metadata accessor for DOCUIPDocumentLandingModeTrait()
{
  return &type metadata for DOCUIPDocumentLandingModeTrait;
}

ValueMetadata *type metadata accessor for DOCUIPPrototyping()
{
  return &type metadata for DOCUIPPrototyping;
}

id DOCVisualEffectView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DOCVisualEffectView.init(coder:)()
{
}

id DOCVisualEffectView.__allocating_init(effect:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEffect_, a1);

  return v3;
}

id DOCVisualEffectView.init(effect:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCVisualEffectView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithEffect_, a1);

  return v3;
}

uint64_t type metadata accessor for DOCVisualEffectView()
{
  return self;
}

id DOCVisualEffectView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCVisualEffectView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t UIBackgroundConfiguration.doc_configureWithStandardPlatter(cornerRadius:)(double a1)
{
  id v2 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  uint64_t result = sub_22BE926C8();
  if (a1 > 0.0)
  {
    v4.n128_f64[0] = a1;
    return MEMORY[0x270F81CB0](result, v4);
  }
  return result;
}

void UIView.doc_configureWithStandardPlatter(cornerRadius:)(double a1)
{
  id v3 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v3);

  if (a1 > 0.0)
  {
    objc_msgSend(v1, sel__setCornerRadius_, a1);
  }
}

Swift::Void __swiftcall UIView.doc_configureWithNoPlatter()()
{
  id v1 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);
}

void static DOCFileRenamingSupport._renameDocument(atURL:newName:hostIdentifier:roleIdentifier:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, id), uint64_t a9)
{
  uint64_t v17 = qword_268486768;
  swift_bridgeObjectRetain();
  sub_22BE91C58();
  id v18 = a1;
  swift_bridgeObjectRetain();
  if (v17 != -1) {
    swift_once();
  }
  swift_beginAccess();
  LOBYTE(v38[0]) = 0;
  sub_22BE91C58();
  char v19 = sub_22BE2E7AC((char *)v38, a4, a5, a6, a7, a2, a3, (void (*)(void, void))a8, a9, v18, a4, a5);
  swift_release();
  if (v19)
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_22BE925E8();
    __swift_project_value_buffer(v20, (uint64_t)qword_2684879E0);
    uint64_t v21 = sub_22BE925C8();
    os_log_type_t v22 = sub_22BE93148();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = v18;
      uint64_t v25 = swift_slowAlloc();
      v38[0] = v25;
      *(_DWORD *)uint64_t v23 = 136315138;
      sub_22BDD8478(0xD000000000000048, 0x800000022BEA0B60, v38);
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v21, v22, "%s function ran without rate-limiting.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v25, -1, -1);
      MEMORY[0x230F57540](v23, -1, -1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22BE925E8();
    __swift_project_value_buffer(v26, (uint64_t)qword_2684879E0);
    char v27 = sub_22BE925C8();
    os_log_type_t v28 = sub_22BE93148();
    char v37 = v18;
    if (os_log_type_enabled(v27, v28))
    {
      BOOL v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v38[0] = v30;
      *(_DWORD *)BOOL v29 = 136315138;
      sub_22BDD8478(0xD000000000000048, 0x800000022BEA0B60, v38);
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v27, v28, "%s rename function is rate-limited. Returning error.", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v30, -1, -1);
      MEMORY[0x230F57540](v29, -1, -1);
    }

    v38[0] = 0xD000000000000032;
    v38[1] = 0x800000022BEA0B20;
    v38[2] = 0;
    v38[3] = 0;
    v38[4] = a4;
    v38[5] = a5;
    char v39 = 0;
    uint64_t v31 = qword_26AEFFB30;
    swift_bridgeObjectRetain();
    if (v31 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_26AEFFA50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22BE1485C((uint64_t)v38, v32);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_22BE92CD8();
    id v33 = objc_allocWithZone(MEMORY[0x263F087E8]);
    char v34 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v33, sel_initWithDomain_code_userInfo_, v34, 3072, 0);

    id v36 = v35;
    a8(0, v35);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_22BE12F18(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  id v33 = a3;
  v34[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = sub_22BE92198();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = self;
  uint64_t v16 = (void *)sub_22BE92C98();
  v34[0] = 0;
  unsigned int v17 = objc_msgSend(v15, sel__validateFileName_error_, v16, v34);

  id v18 = v34[0];
  if (v17)
  {
    char v19 = self;
    id v20 = v18;
    id v21 = objc_msgSend(v19, sel_defaultManager);
    id v22 = objc_msgSend(a5, sel_url);
    sub_22BE92168();

    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v25 = v32;
    uint64_t v24 = v33;
    long long v23[2] = a5;
    uint64_t v23[3] = v24;
    v23[4] = a4;
    v23[5] = a1;
    uint64_t v26 = v31;
    v23[6] = a2;
    v23[7] = v26;
    v23[8] = v25;
    id v27 = a5;
    sub_22BE91C58();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0((uint64_t)v14, (uint64_t)sub_22BE15D98, (uint64_t)v23);

    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    id v28 = v34[0];
    BOOL v29 = (void *)sub_22BE92088();

    swift_willThrow();
    id v30 = v29;
    v33(0, v29);
  }
}

void sub_22BE1319C(void *a1, id a2, void *a3, void (*a4)(void, id), uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, id), uint64_t a9)
{
  uint64_t v66 = a8;
  void aBlock[6] = *MEMORY[0x263EF8340];
  uint64_t v16 = sub_22BE92198();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  char v19 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v66 = a4;
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_22BE925E8();
    __swift_project_value_buffer(v34, (uint64_t)qword_2684879E0);
    id v35 = a3;
    id v36 = a2;
    id v37 = v35;
    id v38 = a2;
    char v39 = sub_22BE925C8();
    os_log_type_t v40 = sub_22BE93158();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v65 = a5;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v63 = (void *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      aBlock[0] = v64;
      *(_DWORD *)uint64_t v41 = 136315394;
      v62[1] = v41 + 4;
      id v42 = objc_msgSend(v37, sel_url);
      sub_22BE92168();

      sub_22BDFBD44();
      uint64_t v43 = sub_22BE93878();
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      uint64_t v67 = sub_22BDD8478(v43, v45, aBlock);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2112;
      if (a2)
      {
        id v46 = a2;
        uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v67 = v47;
        sub_22BE93408();
      }
      else
      {
        uint64_t v67 = 0;
        sub_22BE93408();
        uint64_t v47 = 0;
      }
      unint64_t v58 = v63;
      void *v63 = v47;

      _os_log_impl(&dword_22BDC5000, v39, v40, "[Rename] FPItemManager failed to fetch item from URL: %s with error: %@", (uint8_t *)v41, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v58, -1, -1);
      uint64_t v59 = v64;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v59, -1, -1);
      MEMORY[0x230F57540](v41, -1, -1);

      if (!a2) {
        goto LABEL_19;
      }
    }
    else
    {

      if (!a2)
      {
LABEL_19:
        sub_22BE92CD8();
        goto LABEL_20;
      }
    }
    a2 = (id)sub_22BE92078();
    id v48 = objc_msgSend(a2, sel_domain);
    uint64_t v49 = sub_22BE92CD8();
    uint64_t v51 = v50;

    uint64_t v52 = sub_22BE92CD8();
    if (v51)
    {
      if (v49 == v52 && v51 == v53)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v54 = sub_22BE938C8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (!a2)
      {
        v66(0, 0);
        goto LABEL_24;
      }
      if (objc_msgSend(a2, sel_code) != (id)256)
      {
        uint64_t v60 = v66;
        goto LABEL_22;
      }
      sub_22BE92CD8();
      id v55 = objc_allocWithZone(MEMORY[0x263F087E8]);
      uint64_t v56 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
      id v57 = objc_msgSend(v55, sel_initWithDomain_code_userInfo_, v56, 4, 0);

      a2 = v57;
LABEL_21:
      uint64_t v60 = v66;
      if (!a2)
      {
LABEL_23:
        v60(0, a2);
LABEL_24:

        goto LABEL_25;
      }
LABEL_22:
      id v61 = a2;
      goto LABEL_23;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  id v20 = self;
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v22 = objc_msgSend(v20, sel_shared);
  id v23 = objc_msgSend(v21, sel_displayName);
  uint64_t v24 = sub_22BE92CD8();
  uint64_t v25 = a5;
  uint64_t v27 = v26;

  id v28 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
  BOOL v29 = sub_22BE06140(v21, a6, a7, v24, v27, v22);
  id v30 = (void *)swift_allocObject();
  v30[2] = a4;
  v30[3] = v25;
  v30[4] = v66;
  v30[5] = a9;
  v30[6] = a6;
  v30[7] = a7;
  v30[8] = v21;
  aBlock[4] = (uint64_t)sub_22BE15DEC;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_22BE1465C;
  void aBlock[3] = (uint64_t)&block_descriptor_4;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = v21;
  swift_bridgeObjectRetain();
  id v33 = v29;
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v33, sel_setFinishedBlock_, v31);
  _Block_release(v31);

  a2 = objc_msgSend(self, sel_defaultManager);
  objc_msgSend(a2, sel_scheduleAction_, v33);

LABEL_25:
}

void sub_22BE13890(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4, uint64_t (*a5)(uint64_t a1, uint64_t a2), uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    sub_22BDDC158(a1, (uint64_t)&aBlock, &qword_26AF00570);
    if (v53)
    {
      sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
      if (swift_dynamicCast())
      {
        id v27 = objc_msgSend(self, sel_defaultManager);
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = a3;
        *(void *)(v28 + 24) = a4;
        char v54 = sub_22BE15EA4;
        uint64_t v55 = v28;
        unint64_t aBlock = MEMORY[0x263EF8330];
        unint64_t v51 = 1107296256;
        uint64_t v52 = sub_22BE026A4;
        uint64_t v53 = &block_descriptor_15;
        BOOL v29 = _Block_copy(&aBlock);
        sub_22BE91C58();
        swift_release();
        objc_msgSend(v27, sel_fetchURLForItem_completionHandler_, v49, v29);
        _Block_release(v29);

        return;
      }
    }
    else
    {
      sub_22BE035C8((uint64_t)&aBlock, &qword_26AF00570);
    }
  }
  uint64_t v47 = a5;
  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_22BE925E8();
  __swift_project_value_buffer(v15, (uint64_t)qword_2684879E0);
  id v16 = a2;
  id v17 = a2;
  uint64_t v18 = sub_22BE925C8();
  os_log_type_t v19 = sub_22BE93158();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v46 = a7;
    uint64_t v20 = a4;
    uint64_t v21 = a8;
    id v22 = a3;
    id v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)id v23 = 138412290;
    if (a2)
    {
      id v25 = a2;
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      unint64_t aBlock = v26;
      sub_22BE93408();
    }
    else
    {
      unint64_t aBlock = 0;
      sub_22BE93408();
      uint64_t v26 = 0;
    }
    *uint64_t v24 = v26;

    _os_log_impl(&dword_22BDC5000, v18, v19, "[Rename] Rename API failed with error: %@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v24, -1, -1);
    MEMORY[0x230F57540](v23, -1, -1);
    a3 = v22;
    a8 = v21;
    a4 = v20;
    a7 = v46;

    if (!a2) {
      goto LABEL_23;
    }
  }
  else
  {

    if (!a2) {
      goto LABEL_23;
    }
  }
  unint64_t aBlock = (unint64_t)a2;
  id v30 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487218);
  sub_22BDD9D50(0, (unint64_t *)&unk_2684880A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    a3(0, a2);
    return;
  }
  if (objc_msgSend(v49, sel_code) != (id)-1001)
  {
    a3(0, a2);
    goto LABEL_26;
  }
  unint64_t aBlock = 0xD000000000000032;
  unint64_t v51 = 0x800000022BEA0B20;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  char v54 = v47;
  uint64_t v55 = a6;
  char v56 = 1;
  uint64_t v31 = qword_26AEFFB30;
  swift_bridgeObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  id v32 = (void *)qword_26AEFFA50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22BE1485C((uint64_t)&aBlock, v32);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  id v33 = (id)_DocumentManagerBundle();
  if (v33)
  {
    uint64_t v34 = v33;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_22BE99770;
    *(void *)(v35 + 56) = MEMORY[0x263F8D310];
    *(void *)(v35 + 64) = sub_22BDF8220();
    *(void *)(v35 + 32) = a7;
    *(void *)(v35 + 40) = a8;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_22BE92CE8();
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    if (qword_268486738 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_22BE91C58();
    id v39 = (id)_DocumentManagerBundle();
    if (v39)
    {
      os_log_type_t v40 = v39;
      uint64_t v41 = sub_22BE91F78();
      uint64_t v43 = v42;

      unint64_t v44 = (void *)swift_allocObject();
      v44[2] = a9;
      v44[3] = a3;
      v44[4] = a4;
      sub_22BE91C58();
      id v45 = a9;
      sub_22BE1B26C(v36, v38, 0, 0xE000000000000000, v41, v43, 0, 0, (uint64_t)sub_22BE15E60, (uint64_t)v44);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_26:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_22BE13FA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_22BE92CD8();
  id v7 = objc_allocWithZone(MEMORY[0x263F087E8]);
  char v8 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, 3072, 0);

  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_22BE925E8();
  __swift_project_value_buffer(v10, (uint64_t)qword_2684879E0);
  id v11 = a2;
  uint64_t v12 = sub_22BE925C8();
  os_log_type_t v13 = sub_22BE93148();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v20 = a3;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    aBlock[0] = v11;
    id v15 = v11;
    sub_22BE93408();
    *os_log_type_t v19 = v11;

    a3 = v20;
    _os_log_impl(&dword_22BDC5000, v12, v13, "Rename: cancelled: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v19, -1, -1);
    MEMORY[0x230F57540](v14, -1, -1);
  }
  else
  {
  }
  id v16 = (void *)swift_allocObject();
  v16[2] = a3;
  void v16[3] = a4;
  v16[4] = v9;
  aBlock[4] = sub_22BE15EEC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_21;
  id v17 = _Block_copy(aBlock);
  sub_22BE91C58();
  id v18 = v9;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v17);
}

uint64_t sub_22BE14284(uint64_t a1, uint64_t a2, uint64_t (*a3)(id, uint64_t))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_22BE92198();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  id v15 = &v19[-v14];
  sub_22BDDC158(a1, (uint64_t)v8, (uint64_t *)&unk_26AEFFB10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_22BE035C8((uint64_t)v8, (uint64_t *)&unk_26AEFFB10);
    return a3(0, a2);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_22BDD9D50(0, &qword_268487220);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v15, v9);
    id v17 = sub_22BE144FC((uint64_t)v13, 0);
    id v18 = v17;
    a3(v17, 0);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

id sub_22BE144FC(uint64_t a1, char a2)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  __n128 v4 = (void *)sub_22BE92138();
  v13[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_wrapperWithURL_readonly_error_, v4, a2 & 1, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_22BE92198();
    char v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_22BE92088();

    swift_willThrow();
    uint64_t v11 = sub_22BE92198();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_22BE1465C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_22BE91C58();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_22BE035C8((uint64_t)&v8, &qword_26AF00570);
}

uint64_t sub_22BE146F8(int a1, int a2, void *a3, int a4, int a5, uint64_t a6, void *aBlock)
{
  long long v9 = _Block_copy(aBlock);
  uint64_t v10 = sub_22BE92CD8();
  uint64_t v12 = v11;
  uint64_t v13 = sub_22BE92CD8();
  uint64_t v15 = v14;
  if (a6)
  {
    uint64_t v16 = sub_22BE92CD8();
    a6 = v17;
  }
  else
  {
    uint64_t v16 = 0;
  }
  _Block_copy(v9);
  id v18 = a3;
  sub_22BE15830(v18, v10, v12, v13, v15, v16, a6, (void (**)(void, void, void))v9);
  _Block_release(v9);
  _Block_release(v9);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_22BE147EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_22BE92078();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_22BE1485C(uint64_t a1, void *a2)
{
  v24[3] = &type metadata for DOCAnalyticsAPIAbuseEvent;
  v24[4] = &off_26DF49010;
  uint64_t v4 = swift_allocObject();
  v24[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v4 + 64) = *(unsigned char *)(a1 + 48);
  sub_22BE15F98(a1);
  if (qword_268486850 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22BE925E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_268487AE8);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)aBlock);
  uint64_t v7 = sub_22BE925C8();
  os_log_type_t v8 = sub_22BE93148();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_22BDD8478(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_22BE93408();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22BDD8478(v12, v13, (uint64_t *)v23);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_22BDC5000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v10, -1, -1);
    MEMORY[0x230F57540](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  id v14 = objc_msgSend(self, sel_shared);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)v23);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_22BDE1DD4(v23, v15 + 24);
  uint64_t v21 = sub_22BDE247C;
  uint64_t v22 = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  uint64_t v20 = &block_descriptor_70;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_22BE14BA4(uint64_t a1, void *a2)
{
  v24[3] = &type metadata for DOCAnalyticsItemTaggedEvent;
  v24[4] = &off_26DF478A8;
  uint64_t v4 = swift_allocObject();
  v24[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 48) = *(unsigned char *)(a1 + 32);
  sub_22BDCA53C(a1);
  if (qword_268486850 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22BE925E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_268487AE8);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)aBlock);
  uint64_t v7 = sub_22BE925C8();
  os_log_type_t v8 = sub_22BE93148();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_22BDD8478(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_22BE93408();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22BDD8478(v12, v13, (uint64_t *)v23);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_22BDC5000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v10, -1, -1);
    MEMORY[0x230F57540](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  id v14 = objc_msgSend(self, sel_shared);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)v23);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_22BDE1DD4(v23, v15 + 24);
  uint64_t v21 = sub_22BDE247C;
  uint64_t v22 = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  uint64_t v20 = &block_descriptor_60;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_22BE14EE4(uint64_t a1, void *a2)
{
  v24[3] = &type metadata for DOCAnalyticsSidebarTagSelectedEvent;
  v24[4] = &off_26DF45888;
  uint64_t v4 = swift_allocObject();
  v24[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 48) = *(unsigned char *)(a1 + 32);
  sub_22BDCA53C(a1);
  if (qword_268486850 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22BE925E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_268487AE8);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)aBlock);
  uint64_t v7 = sub_22BE925C8();
  os_log_type_t v8 = sub_22BE93148();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_22BDD8478(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_22BE93408();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22BDD8478(v12, v13, (uint64_t *)v23);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_22BDC5000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v10, -1, -1);
    MEMORY[0x230F57540](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  id v14 = objc_msgSend(self, sel_shared);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)v23);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_22BDE1DD4(v23, v15 + 24);
  uint64_t v21 = sub_22BDE247C;
  uint64_t v22 = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  uint64_t v20 = &block_descriptor_40;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_22BE15224(uint64_t a1, void *a2)
{
  v24[3] = &type metadata for DOCAnalyticsConnectToServerShownEvent;
  v24[4] = &off_26DF461F0;
  uint64_t v4 = swift_allocObject();
  v24[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 48) = *(unsigned char *)(a1 + 32);
  sub_22BDCA53C(a1);
  if (qword_268486850 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22BE925E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_268487AE8);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)aBlock);
  uint64_t v7 = sub_22BE925C8();
  os_log_type_t v8 = sub_22BE93148();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(void *)&v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_22BDD8478(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_22BE93408();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22BDD8478(v12, v13, (uint64_t *)v23);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_22BDC5000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v10, -1, -1);
    MEMORY[0x230F57540](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  id v14 = objc_msgSend(self, sel_shared);
  sub_22BDD20C4((uint64_t)v24, (uint64_t)v23);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_22BDE1DD4(v23, v15 + 24);
  uint64_t v21 = sub_22BDE2480;
  uint64_t v22 = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  uint64_t v20 = &block_descriptor_30_0;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_22BE15564(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (**a6)(void, void, void))
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  v34[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v33 = sub_22BE92198();
  uint64_t v10 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a6;
  id v14 = self;
  _Block_copy(a6);
  uint64_t v15 = (void *)sub_22BE92C98();
  v34[0] = 0;
  unsigned int v16 = objc_msgSend(v14, sel__validateFileName_error_, v15, v34);

  id v17 = v34[0];
  if (v16)
  {
    id v18 = self;
    id v19 = v17;
    id v20 = objc_msgSend(v18, sel_defaultManager);
    id v21 = objc_msgSend(a3, sel_url);
    sub_22BE92168();

    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a3;
    uint64_t v22[3] = sub_22BE15D8C;
    v22[4] = v13;
    v22[5] = a1;
    uint64_t v23 = v31;
    uint64_t v24 = v32;
    v22[6] = a2;
    v22[7] = v23;
    v22[8] = v24;
    id v25 = a3;
    sub_22BE91C58();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0((uint64_t)v12, (uint64_t)sub_22BE15D98, (uint64_t)v22);

    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v33);
  }
  else
  {
    id v26 = v34[0];
    id v27 = (void *)sub_22BE92088();

    swift_willThrow();
    id v28 = v27;
    BOOL v29 = (void *)sub_22BE92078();
    ((void (**)(void, void, void *))a6)[2](a6, 0, v29);
  }
  return swift_release();
}

void sub_22BE15830(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(void, void, void))
{
  swift_bridgeObjectRetain_n();
  _Block_copy(a8);
  uint64_t v16 = qword_268486768;
  id v17 = a1;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  swift_beginAccess();
  LOBYTE(v36[0]) = 0;
  sub_22BE91C58();
  char v18 = sub_22BE2E3C8((char *)v36, a4, a5, a6, a7, a2, a3, v17, a4, a5, a8);
  _Block_release(a8);
  swift_release();
  if (v18)
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_22BE925E8();
    __swift_project_value_buffer(v19, (uint64_t)qword_2684879E0);
    id v20 = sub_22BE925C8();
    os_log_type_t v21 = sub_22BE93148();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v36[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      sub_22BDD8478(0xD000000000000048, 0x800000022BEA0B60, v36);
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v20, v21, "%s function ran without rate-limiting.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v23, -1, -1);
      MEMORY[0x230F57540](v22, -1, -1);
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_22BE925E8();
    __swift_project_value_buffer(v24, (uint64_t)qword_2684879E0);
    id v25 = sub_22BE925C8();
    os_log_type_t v26 = sub_22BE93148();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v36[0] = v28;
      *(_DWORD *)id v27 = 136315138;
      sub_22BDD8478(0xD000000000000048, 0x800000022BEA0B60, v36);
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v25, v26, "%s rename function is rate-limited. Returning error.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v28, -1, -1);
      MEMORY[0x230F57540](v27, -1, -1);
    }

    v36[0] = 0xD000000000000032;
    v36[1] = 0x800000022BEA0B20;
    v36[2] = 0;
    v36[3] = 0;
    v36[4] = a4;
    v36[5] = a5;
    char v37 = 0;
    uint64_t v29 = qword_26AEFFB30;
    swift_bridgeObjectRetain();
    if (v29 != -1) {
      swift_once();
    }
    id v30 = (void *)qword_26AEFFA50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22BE1485C((uint64_t)v36, v30);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_22BE92CD8();
    id v31 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v32 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v31, sel_initWithDomain_code_userInfo_, v32, 3072, 0);

    id v34 = v33;
    uint64_t v35 = (void *)sub_22BE92078();
    ((void (**)(void, void, void *))a8)[2](a8, 0, v35);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22BE15D54()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE15D8C(uint64_t a1, uint64_t a2)
{
  sub_22BE147EC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_22BE15D9C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_22BE15DEC(uint64_t a1, void *a2)
{
  sub_22BE13890(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_22BE15E20()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_22BE15E60(uint64_t a1)
{
  sub_22BE13FA8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_22BE15E6C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE15EA4(uint64_t a1, uint64_t a2)
{
  return sub_22BE14284(a1, a2, *(uint64_t (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_22BE15EAC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE15EEC()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, *(void *)(v0 + 32));
}

uint64_t sub_22BE15F20()
{
  return objectdestroy_23Tm(49);
}

uint64_t sub_22BE15F2C()
{
  return objectdestroy_23Tm(49);
}

uint64_t sub_22BE15F38()
{
  return objectdestroy_23Tm(55);
}

uint64_t sub_22BE15F44()
{
  return objectdestroy_23Tm(49);
}

uint64_t sub_22BE15F50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 65, 7);
}

uint64_t sub_22BE15F98(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_22BE1603C(void *a1, void *a2)
{
  sub_22BE1319C(a1, a2, *(void **)(v2 + 16), *(void (**)(void, id))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void (**)(void, id))(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_22BE160A0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE1610C(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  *long long v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_22BE1616C())()
{
  return j__swift_endAccess;
}

id DOCUnicode.__allocating_init(rawValue:)(uint64_t a1, uint64_t a2)
{
  long long v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DOCUnicode.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)uint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for DOCUnicode();
  return objc_msgSendSuper2(&v5, sel_init);
}

id DOCUnicode.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCUnicode.init()()
{
}

id DOCUnicode.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUnicode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_22BE16348@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  objc_super v5 = (objc_class *)type metadata accessor for DOCUnicode();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)uint64_t v7 = v3;
  *((void *)v7 + 1) = v4;
  v9.receiver = v6;
  v9.super_class = v5;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a2 = result;
  return result;
}

uint64_t sub_22BE163B0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_22BE164A8()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCUnicode();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)objc_super v2 = 41154;
  *((void *)v2 + 1) = 0xA200000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_268487228 = (uint64_t)result;
  return result;
}

id static DOCUnicode.nonBreakingSpace.getter()
{
  return sub_22BDCD8A4(&qword_268486700, (void **)&qword_268487228);
}

id sub_22BE16554()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCUnicode();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)objc_super v2 = 12565487;
  *((void *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_268487230 = (uint64_t)result;
  return result;
}

id static DOCUnicode.nonBreakingSpace_zeroWidth.getter()
{
  return sub_22BDCD8A4(&qword_268486708, (void **)&qword_268487230);
}

id sub_22BE166A4()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCUnicode();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)objc_super v2 = 10912226;
  *((void *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_268487238 = (uint64_t)result;
  return result;
}

id static DOCUnicode.bidiIsolateBeginLRI.getter()
{
  return sub_22BDCD8A4(&qword_268486710, (void **)&qword_268487238);
}

id sub_22BE16754()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCUnicode();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)objc_super v2 = 10977762;
  *((void *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_268487240 = (uint64_t)result;
  return result;
}

id static DOCUnicode.bidiIsolateBeginRLI.getter()
{
  return sub_22BDCD8A4(&qword_268486718, (void **)&qword_268487240);
}

id sub_22BE16804()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCUnicode();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)objc_super v2 = 11043298;
  *((void *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_268487248 = (uint64_t)result;
  return result;
}

id static DOCUnicode.bidiIsolateBeginFSI.getter()
{
  return sub_22BDCD8A4(&qword_268486720, (void **)&qword_268487248);
}

id sub_22BE168B4()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCUnicode();
  id v1 = (char *)objc_allocWithZone(v0);
  objc_super v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(void *)objc_super v2 = 11108834;
  *((void *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_268487250 = (uint64_t)result;
  return result;
}

id static DOCUnicode.bidiIsolateEnd.getter()
{
  return sub_22BDCD8A4(&qword_268486728, (void **)&qword_268487250);
}

uint64_t sub_22BE16940@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for DOCUnicode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCUnicode);
}

uint64_t dispatch thunk of DOCUnicode.rawValue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DOCUnicode.rawValue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DOCUnicode.__allocating_init(rawValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

id sub_22BE16A54(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  objc_super v5 = *a4;

  return v5;
}

uint64_t sub_22BE16AA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22BE16ACC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

double UIView.doc_pixelRounded(_:)(double a1)
{
  objc_msgSend(v1, sel_contentScaleFactor);
  return round(v3 * a1) / v3;
}

uint64_t UIView.doc_performBlock(allowingAnimations:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if ((a1 & 1) != 0 && (id v6 = objc_msgSend(v3, sel_window)) != 0)
  {

    return a2();
  }
  else
  {
    uint64_t v8 = self;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_22BE181A8;
    *(void *)(v10 + 24) = v9;
    void v12[4] = sub_22BE10E44;
    v12[5] = v10;
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 1107296256;
    void v12[2] = sub_22BE16ACC;
    uint64_t v12[3] = &block_descriptor_5;
    uint64_t v11 = _Block_copy(v12);
    sub_22BE91C58();
    swift_release();
    objc_msgSend((id)v8, sel_performWithoutAnimation_, v11);
    _Block_release(v11);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v8) {
      __break(1u);
    }
  }
  return result;
}

uint64_t static UIView.doc_performBlock(allowingAnimations:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1) {
    return a2();
  }
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_22BE181A8;
  *(void *)(v8 + 24) = v7;
  v10[4] = sub_22BE181A8;
  v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_22BE16ACC;
  void v10[3] = &block_descriptor_14;
  uint64_t v9 = _Block_copy(v10);
  sub_22BE91C58();
  swift_release();
  objc_msgSend((id)v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE16E3C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE16E4C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE16E5C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE16E6C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void static UIView.doc_performAnimatable(allowingAnimations:animationDuration:animations:completion:)(char a1, uint64_t (*a2)(), uint64_t a3, uint64_t (*a4)(), uint64_t a5, double a6)
{
  if ((a1 & 1) != 0
    && (uint64_t v11 = self, (objc_msgSend(v11, sel_areAnimationsEnabled) & 1) != 0))
  {
    uint64_t v23 = a2;
    uint64_t v24 = a3;
    uint64_t v19 = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    os_log_type_t v21 = sub_22BDD0BA8;
    uint64_t v22 = &block_descriptor_27;
    uint64_t v12 = _Block_copy(&v19);
    sub_22BE91C58();
    swift_release();
    uint64_t v23 = a4;
    uint64_t v24 = a5;
    uint64_t v19 = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    os_log_type_t v21 = sub_22BE171B8;
    uint64_t v22 = &block_descriptor_30_1;
    uint64_t v13 = _Block_copy(&v19);
    sub_22BE91C58();
    swift_release();
    objc_msgSend(v11, sel_animateWithDuration_animations_completion_, v12, v13, a6);
    _Block_release(v13);
    _Block_release(v12);
  }
  else
  {
    id v14 = self;
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a2;
    v15[3] = a3;
    v15[4] = a4;
    v15[5] = a5;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_22BE17160;
    *(void *)(v16 + 24) = v15;
    uint64_t v23 = sub_22BE181A8;
    uint64_t v24 = v16;
    uint64_t v19 = MEMORY[0x263EF8330];
    uint64_t v20 = 1107296256;
    os_log_type_t v21 = sub_22BE16ACC;
    uint64_t v22 = &block_descriptor_24;
    id v17 = _Block_copy(&v19);
    sub_22BE91C58();
    sub_22BE91C58();
    sub_22BE91C58();
    swift_release();
    objc_msgSend(v14, sel_performWithoutAnimation_, v17);
    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

uint64_t sub_22BE17120()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE17160()
{
  id v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  return v1(1);
}

uint64_t sub_22BE171A8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE171B8(uint64_t a1, uint64_t a2)
{
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_22BE91C58();
  v3(a2);

  return swift_release();
}

id UIView.doc_nearestAncestor<A>(ofType:)(uint64_t a1, uint64_t a2)
{
  return sub_22BDD4C94(a1, a2, (SEL *)&selRef_superview);
}

id UIView.doc_nearestAncestorNavBar.getter()
{
  sub_22BDD9D50(0, &qword_268487260);
  id result = objc_msgSend(v0, sel_superview);
  if (result)
  {
    objc_super v2 = result;
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    while (!objc_msgSend(v2, sel_isKindOfClass_, ObjCClassFromMetadata))
    {
      id v4 = objc_msgSend(v2, sel_superview);

      objc_super v2 = v4;
      if (!v4) {
        return 0;
      }
    }
    self;
    return (id)swift_dynamicCastObjCClassUnconditional();
  }
  return result;
}

id UIView.doc_nearestAncestor(passingTest:)(uint64_t (*a1)(void))
{
  id v3 = objc_msgSend(v1, sel_superview);
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  while (1)
  {
    id v5 = v4;
    char v6 = a1();

    if (v6) {
      break;
    }
    id v4 = objc_msgSend(v5, sel_superview);

    if (!v4) {
      return 0;
    }
  }
  return v5;
}

BOOL UIView.doc_isRTL.getter()
{
  return objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1;
}

id static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v1 = objc_msgSend(v0, sel_widthAnchor);
  id v2 = objc_msgSend(v1, sel_constraintGreaterThanOrEqualToConstant_, 0.0);

  objc_msgSend(v2, sel_setActive_, 1);
  LODWORD(v3) = 1144750080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  return v0;
}

Swift::Void __swiftcall UIView.doc_addAutoresizingSubview(_:insetBy:)(UIView *_, NSDirectionalEdgeInsets insetBy)
{
  objc_msgSend(v2, sel_addSubview_, _);
  [(UIView *)_ setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = (id)DOCConstraintsToResizeWithSuperview();
  sub_22BDD9D50(0, &qword_268487268);
  unint64_t v5 = sub_22BE92EB8();

  swift_bridgeObjectRetain();
  if (v5 >> 62)
  {
    sub_22BE93788();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22BE938D8();
  }
  char v6 = self;
  id v7 = (id)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v7);
  swift_bridgeObjectRelease();
}

void Array<A>.doc_setActive(_:)(char a1)
{
  id v2 = self;
  sub_22BDD9D50(0, &qword_268487268);
  sub_22BE93748();
  id v4 = (id)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  double v3 = &selRef_activateConstraints_;
  if ((a1 & 1) == 0) {
    double v3 = &selRef_deactivateConstraints_;
  }
  objc_msgSend(v2, *v3, v4);
}

uint64_t UIView.doc_findSubtreeViews<A>(includingSelf:ofType:)(char a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v16 = sub_22BE92F18();
  if (a1)
  {
    uint64_t v7 = swift_dynamicCastUnknownClass();
    if (v7)
    {
      v17[0] = v7;
      sub_22BE92F98();
      id v8 = v4;
      sub_22BE92F68();
    }
  }
  id v9 = objc_msgSend(v4, sel_subviews);
  sub_22BDD9D50(0, &qword_26AF004C8);
  unint64_t v10 = sub_22BE92EB8();

  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_6;
    }
LABEL_13:
    swift_bridgeObjectRelease_n();
    return v16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22BE937E8();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_6:
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x230F56140](v13, v10);
      }
      else {
        id v14 = *(id *)(v10 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      ++v13;
      v17[2] = a3;
      uint64_t v17[3] = &v16;
      sub_22BE178F8(1, (uint64_t (*)(void *))sub_22BE181A0, (uint64_t)v17);
    }
    while (v11 != v13);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

BOOL sub_22BE17884(void *a1)
{
  uint64_t v2 = swift_dynamicCastUnknownClass();
  if (v2)
  {
    sub_22BE92F98();
    id v3 = a1;
    sub_22BE92F68();
  }
  return v2 == 0;
}

uint64_t sub_22BE178F8(char a1, uint64_t (*a2)(void *), uint64_t a3)
{
  if (a1 & 1) == 0 || (uint64_t result = a2(v3), (result))
  {
    id v7 = objc_msgSend(v3, sel_subviews);
    sub_22BDD9D50(0, &qword_26AF004C8);
    unint64_t v8 = sub_22BE92EB8();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_22BE937E8();
      uint64_t v9 = result;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_5:
        if (v9 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)MEMORY[0x230F56140](i, v8);
          }
          else {
            id v11 = *(id *)(v8 + 8 * i + 32);
          }
          uint64_t v12 = v11;
          sub_22BE178F8(1, a2, a3);
        }
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t UIView.doc_performOnSubtree(includingSelf:_:)(char a1, void (*a2)(void *), uint64_t a3)
{
  return sub_22BE17F90(a1, v3, a2, a3);
}

id UIViewController.doc_performBlock(allowingAnimations:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if ((a1 & 1) != 0 && objc_msgSend(v3, sel_doc_hasAppearedOrIsAppearing))
  {
    id result = objc_msgSend(v3, sel_view);
    if (!result)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    id v7 = result;
    id v8 = objc_msgSend(result, sel_window);

    if (v8)
    {

      if (objc_msgSend(v3, sel_doc_isAppearing))
      {
        id v9 = objc_msgSend(v3, sel_navigationController);
        if (v9)
        {
          unint64_t v10 = v9;
          id v11 = objc_msgSend(v9, sel_topViewController);
          if (v11)
          {
            uint64_t v12 = v11;
            sub_22BDD9D50(0, &qword_26AF003C8);
            id v13 = v3;
            id v14 = v12;
            char v15 = sub_22BE93328();

            if (v15) {
              goto LABEL_9;
            }
          }
          else
          {
          }
        }
      }
      return (id)a2();
    }
  }
LABEL_9:
  uint64_t v16 = self;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_22BE181A8;
  *(void *)(v18 + 24) = v17;
  v20[4] = sub_22BE181A8;
  v20[5] = v18;
  v20[0] = MEMORY[0x263EF8330];
  v20[1] = 1107296256;
  v20[2] = sub_22BE16ACC;
  void v20[3] = &block_descriptor_41;
  uint64_t v19 = _Block_copy(v20);
  sub_22BE91C58();
  swift_release();
  objc_msgSend(v16, sel_performWithoutAnimation_, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if (v19)
  {
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

void UIViewController.doc_dismiss(animated:includingPresented:completion:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 1) != 0 && (id v8 = objc_msgSend(v4, sel_presentedViewController)) != 0)
  {
    id v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v4;
    uint64_t v11 = a1 & 1;
    *(unsigned char *)(v10 + 24) = v11;
    *(void *)(v10 + 32) = a3;
    *(void *)(v10 + 40) = a4;
    id v12 = v4;
    sub_22BE91C58();
    UIViewController.doc_dismiss(animated:includingPresented:completion:)(v11, 1, sub_22BE1816C, v10);

    swift_release();
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = a4;
    v15[4] = sub_22BE10E44;
    v15[5] = v13;
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 1107296256;
    v15[2] = sub_22BDD0BA8;
    v15[3] = &block_descriptor_47;
    id v14 = _Block_copy(v15);
    sub_22BE91C58();
    swift_release();
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, a1 & 1, v14);
    _Block_release(v14);
  }
}

Swift::Void __swiftcall UIViewController.doc_dismissViewController()()
{
}

uint64_t UIViewController.doc_findSubtreeViews<A>(includingSelf:loadViewIfNeed:ofType:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  id v8 = objc_msgSend(v5, sel_viewIfLoaded);
  if (v8)
  {
    uint64_t v10 = v8;
    uint64_t v11 = UIView.doc_findSubtreeViews<A>(includingSelf:ofType:)(a1 & 1, v9, a4);

    return v11;
  }
  else
  {
    return sub_22BE92F18();
  }
}

uint64_t sub_22BE17F90(char a1, void *a2, void (*a3)(void *), uint64_t a4)
{
  if (a1) {
    a3(a2);
  }
  id v7 = objc_msgSend(a2, sel_subviews);
  sub_22BDD9D50(0, &qword_26AF004C8);
  unint64_t v8 = sub_22BE92EB8();

  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_5;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22BE937E8();
  uint64_t v9 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_5:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x230F56140](i, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      sub_22BE17F90(1, v12, a3, a4);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE180D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE180E4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE180F4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE1812C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE1816C()
{
  return UIViewController.doc_dismiss(animated:includingPresented:completion:)(*(unsigned __int8 *)(v0 + 24), 0, *(void *)(v0 + 32), *(void *)(v0 + 40));
}

BOOL sub_22BE181A0(void *a1)
{
  return sub_22BE17884(a1);
}

uint64_t sub_22BE181D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t DOCTraitChangeObservingOptions.rawValue.getter()
{
  return *(void *)v0;
}

DocumentManagerExecutables::DOCTraitChangeObservingOptions __swiftcall DOCTraitChangeObservingOptions.init(rawValue:)(DocumentManagerExecutables::DOCTraitChangeObservingOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static DOCTraitChangeObservingOptions.triggerInitialObservance.getter(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_22BE1824C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22BE181D8(a1, a2);
}

unint64_t sub_22BE18268()
{
  unint64_t result = qword_268487270;
  if (!qword_268487270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487270);
  }
  return result;
}

unint64_t sub_22BE182C0()
{
  unint64_t result = qword_268487278;
  if (!qword_268487278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487278);
  }
  return result;
}

unint64_t sub_22BE18318()
{
  unint64_t result = qword_268487280;
  if (!qword_268487280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487280);
  }
  return result;
}

unint64_t sub_22BE18370()
{
  unint64_t result = qword_268487288;
  if (!qword_268487288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487288);
  }
  return result;
}

uint64_t sub_22BE183C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_22BE1A38C;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_22BE03630(v4);
}

uint64_t sub_22BE18464(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_22BE1A354;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_22BE03630(v3);
  return sub_22BDE0E58(v8);
}

uint64_t sub_22BE1852C()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_22BE03630(*v1);
  return v2;
}

uint64_t sub_22BE18588(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_22BDE0E58(v6);
}

uint64_t (*sub_22BE185E8())()
{
  return j__swift_endAccess;
}

id DOCOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id DOCOperation.init()()
{
  uint64_t v1 = sub_22BE931D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22BE931B8();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_22BE92B58();
  MEMORY[0x270FA5388](v6 - 8);
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isFinished] = 0;
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isExecuting] = 0;
  uint64_t v7 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
  sub_22BDD27D0();
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v16 = v0;
  sub_22BE92B38();
  uint64_t v18 = MEMORY[0x263F8EE78];
  v15[2] = sub_22BDE107C((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  v15[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  v15[3] = sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  uint64_t v8 = *MEMORY[0x263F8F130];
  uint64_t v9 = v2 + 104;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v15[0] = v9;
  v10(v4, v8, v1);
  uint64_t v11 = sub_22BE93228();
  id v12 = v16;
  *(void *)&v16[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue] = v11;
  sub_22BE92B38();
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_22BE934E8();
  v10(v4, v8, v1);
  *(void *)&v12[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue] = sub_22BE93228();

  uint64_t v13 = (objc_class *)type metadata accessor for DOCOperation();
  v17.receiver = v12;
  v17.super_class = v13;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t type metadata accessor for DOCOperation()
{
  return self;
}

uint64_t sub_22BE18A00()
{
  uint64_t v1 = sub_22BE92B08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22BE92B58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_22BE18FF8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_6;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v0;
  sub_22BE92B38();
  v13[1] = MEMORY[0x263F8EE78];
  sub_22BDE107C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

id sub_22BE18CAC(char *a1)
{
  uint64_t v2 = sub_22BE92B08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE92B58();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isCancelled))
  {
    v14[0] = *(void *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    aBlock[4] = sub_22BE1A408;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22BDD0BA8;
    void aBlock[3] = &block_descriptor_74;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = a1;
    sub_22BE92B38();
    v14[1] = MEMORY[0x263F8EE78];
    sub_22BDE107C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v9, v5, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (id)swift_release();
  }
  else
  {
    objc_msgSend(a1, sel_setExecuting_, 1);
    return objc_msgSend(a1, sel_main);
  }
}

uint64_t sub_22BE18FC0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_22BE18FF8()
{
  return sub_22BE18CAC(*(char **)(v0 + 16));
}

uint64_t sub_22BE19084()
{
  unsigned __int8 v10 = 0;
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_22BE19444;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_22BE10F20;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE16ACC;
  void aBlock[3] = &block_descriptor_9_0;
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = v0;
  sub_22BE91C58();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

void sub_22BE1923C(char a1)
{
  uint64_t v3 = (void *)sub_22BE92C98();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  uint64_t v4 = *(NSObject **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(unsigned char *)(v5 + 24) = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_22BE194A4;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_22BE111C8;
  v10[5] = v6;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_22BE16ACC;
  void v10[3] = &block_descriptor_19_0;
  uint64_t v7 = _Block_copy(v10);
  uint64_t v8 = v1;
  sub_22BE91C58();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)sub_22BE92C98();
    objc_msgSend(v8, sel_didChangeValueForKey_, v9);
    swift_release();
  }
}

uint64_t sub_22BE1940C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE19444()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isFinished);
}

uint64_t sub_22BE1945C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE1946C()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_22BE194A4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isFinished) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_22BE194BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE19500()
{
  unsigned __int8 v10 = 0;
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_22BE19890;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_22BE111C8;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE16ACC;
  void aBlock[3] = &block_descriptor_29_0;
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = v0;
  sub_22BE91C58();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

void sub_22BE196B8(char a1)
{
  uint64_t v3 = (void *)sub_22BE92C98();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  uint64_t v4 = *(NSObject **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(unsigned char *)(v5 + 24) = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_22BE198B8;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_22BE111C8;
  v10[5] = v6;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_22BE16ACC;
  void v10[3] = &block_descriptor_39;
  uint64_t v7 = _Block_copy(v10);
  uint64_t v8 = v1;
  sub_22BE91C58();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)sub_22BE92C98();
    objc_msgSend(v8, sel_didChangeValueForKey_, v9);
    swift_release();
  }
}

void sub_22BE19890()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isExecuting);
}

uint64_t sub_22BE198A8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE198B8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isExecuting) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_22BE198D0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

Swift::Void __swiftcall DOCOperation.cancel()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCOperation();
  objc_msgSendSuper2(&v1, sel_cancel);
  sub_22BE19970();
}

id sub_22BE19970()
{
  uint64_t v1 = sub_22BE92B08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22BE92B58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v0, sel_isCancelled);
  if (v9)
  {
    uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v0;
    aBlock[4] = sub_22BE1A3B8;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22BDD0BA8;
    void aBlock[3] = &block_descriptor_67;
    uint64_t v11 = _Block_copy(aBlock);
    uint64_t v16 = v5;
    id v12 = v11;
    uint64_t v13 = v0;
    sub_22BE92B38();
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_22BDE107C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
    sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
    sub_22BE934E8();
    MEMORY[0x230F55CD0](0, v8, v4, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    swift_release();
  }
  return v9;
}

uint64_t sub_22BE19C3C(char *a1)
{
  memset(v9, 0, sizeof(v9));
  sub_22BE92CD8();
  id v2 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v3 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, 3072, 0);

  if (!objc_msgSend(a1, sel_isFinished))
  {
    uint64_t v5 = (uint64_t *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
    swift_beginAccess();
    uint64_t v6 = (void (*)(_OWORD *, id))*v5;
    if (*v5)
    {
      sub_22BE91C58();
      v6(v9, v4);
      uint64_t v7 = *v5;
      *uint64_t v5 = 0;
      v5[1] = 0;
      sub_22BDE0E58(v7);
      sub_22BDE0E58((uint64_t)v6);
    }
    objc_msgSend(a1, sel_setExecuting_, 0);
    objc_msgSend(a1, sel_setFinished_, 1);
  }

  return sub_22BDD473C((uint64_t)v9);
}

uint64_t sub_22BE19D84(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_22BE92B08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE92B58();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
  sub_22BDD47C0(a1, (uint64_t)v20);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  sub_22BDD919C((uint64_t)v20, v13 + 24);
  *(void *)(v13 + 56) = a2;
  aBlock[4] = sub_22BE1A188;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_45;
  id v14 = _Block_copy(aBlock);
  uint64_t v15 = v2;
  id v16 = a2;
  sub_22BE92B38();
  v18[1] = MEMORY[0x263F8EE78];
  sub_22BDE107C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

id sub_22BE1A060(char *a1, uint64_t a2, uint64_t a3)
{
  id result = objc_msgSend(a1, sel_isFinished);
  if ((result & 1) == 0)
  {
    uint64_t v7 = (uint64_t *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
    swift_beginAccess();
    uint64_t v8 = (void (*)(uint64_t, uint64_t))*v7;
    if (*v7)
    {
      sub_22BE91C58();
      v8(a2, a3);
      uint64_t v9 = *v7;
      *uint64_t v7 = 0;
      v7[1] = 0;
      sub_22BDE0E58(v9);
      sub_22BDE0E58((uint64_t)v8);
    }
    objc_msgSend(a1, sel_setExecuting_, 0);
    return objc_msgSend(a1, sel_setFinished_, 1);
  }
  return result;
}

uint64_t sub_22BE1A138()
{
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

id sub_22BE1A188()
{
  return sub_22BE1A060(*(char **)(v0 + 16), v0 + 24, *(void *)(v0 + 56));
}

id DOCOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DOCOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCOperation);
}

uint64_t dispatch thunk of DOCOperation.finishedBlock.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DOCOperation.finishedBlock.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DOCOperation.finishedBlock.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DOCOperation.completed(with:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t sub_22BE1A31C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE1A354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t *))(v2 + 16);
  uint64_t v5 = a2;
  return v3(a1, &v5);
}

uint64_t sub_22BE1A38C(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t sub_22BE1A3B8()
{
  return sub_22BE19C3C(*(char **)(v0 + 16));
}

unint64_t sub_22BE1A410(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487360);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  id v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_22BDDBFDC(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1A51C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487330);
  uint64_t v2 = sub_22BE93828();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_22BE91C58();
  while (1)
  {
    sub_22BDDC158(v6, (uint64_t)v15, &qword_268487338);
    unint64_t result = sub_22BDFD1C8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_22BDDBF3C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1A660(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487350);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (void *)*(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    id v8 = v5;
    swift_bridgeObjectRetain();
    unint64_t result = sub_22BDFD250(v5);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    long long v11 = (void *)(v2[7] + 16 * result);
    *long long v11 = v6;
    v11[1] = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1A774(uint64_t a1)
{
  return sub_22BE1AAFC(a1, &qword_268487340, &qword_268487348, (uint64_t (*)(void))sub_22BDFD338);
}

unint64_t sub_22BE1A79C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487320);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_22BDD5734(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1A8C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872E8);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  uint64_t v4 = (char *)(a1 + 33);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 1);
    char v6 = *v4;
    unint64_t result = sub_22BDFD5A4(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(unsigned char *)(v2[7] + result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1A9BC(uint64_t a1)
{
  return sub_22BE1A9D4(a1, &qword_2684872F0);
}

unint64_t sub_22BE1A9C8(uint64_t a1)
{
  return sub_22BE1A9D4(a1, &qword_2684872F8);
}

unint64_t sub_22BE1A9D4(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_22BE93828();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  sub_22BE91C58();
  unsigned __int8 v5 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v6 = *((unsigned char *)v5 - 8);
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    unint64_t result = sub_22BDFD4C0(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v6;
    *(void *)(v3[7] + 8 * result) = v7;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1AAD4(uint64_t a1)
{
  return sub_22BE1AAFC(a1, &qword_268487310, &qword_268487318, (uint64_t (*)(void))sub_22BDFD674);
}

unint64_t sub_22BE1AAFC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = sub_22BE93828();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  BOOL v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  sub_22BE91C58();
  while (1)
  {
    sub_22BDDC158(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_22BE91DC8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1ACF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486FA0);
  uint64_t v2 = sub_22BE93828();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  sub_22BE91C58();
  while (1)
  {
    sub_22BDDC158(v6, (uint64_t)&v15, &qword_268486FA8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_22BDD5734(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_22BDDBF3C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22BE1AE30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004E0);
  uint64_t v2 = (void *)sub_22BE93828();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_22BE91C58();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_22BDFD728((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_22BE1AF3C(void *a1, char a2)
{
  if (a1)
  {
    uint64_t v3 = qword_268486730;
    id v4 = a1;
    if (v3 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = (void (*)(void *))sub_22BE49884((uint64_t)v4);
    swift_endAccess();
    if (v5)
    {
      v6[0] = a2 & 3;
      v5(v6);
      sub_22BDE0E58((uint64_t)v5);
    }
  }
}

unint64_t sub_22BE1B008()
{
  unint64_t result = sub_22BE1EE10(MEMORY[0x263F8EE78]);
  qword_2684872B8 = result;
  return result;
}

BOOL static DOCSystemAlert.Response.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DOCSystemAlert.Response.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCSystemAlert.Response.hashValue.getter()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE1B0BC()
{
  type metadata accessor for DOCSystemAlert();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  qword_2684872C0 = result;
  return result;
}

uint64_t static DOCSystemAlert.shared.getter()
{
  if (qword_268486738 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_22BE91C58();
}

uint64_t static DOCSystemAlert.shared.setter(uint64_t a1)
{
  if (qword_268486738 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2684872C0 = a1;
  return swift_release();
}

uint64_t (*static DOCSystemAlert.shared.modify())()
{
  if (qword_268486738 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_22BE1B26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  if (v10[2].isa)
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22BE925E8();
    __swift_project_value_buffer(v11, (uint64_t)qword_2684879E0);
    oslog = sub_22BE925C8();
    os_log_type_t v12 = sub_22BE93148();
    if (os_log_type_enabled(oslog, v12))
    {
      BOOL v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v13 = 0;
      _os_log_impl(&dword_22BDC5000, oslog, v12, "Error dialog is already visible. Don't show a second one.", v13, 2u);
      MEMORY[0x230F57540](v13, -1, -1);
    }

    return;
  }
  os_log_t osloga = v10;
  SInt32 error = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872C8);
  uint64_t inited = swift_initStackObject();
  unint64_t v22 = (void *)*MEMORY[0x263EFFFC8];
  *(void *)(inited + 32) = *MEMORY[0x263EFFFC8];
  *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a1;
  uint64_t v23 = (void **)MEMORY[0x263EFFFD8];
  *(_OWORD *)(inited + 16) = xmmword_22BE9A3B0;
  uint64_t v24 = *v23;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = v24;
  *(void *)(inited + 64) = a3;
  *(void *)(inited + 72) = a4;
  uint64_t v25 = (void *)*MEMORY[0x263F00000];
  *(void *)(inited + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = *MEMORY[0x263F00000];
  *(void *)(inited + 88) = a5;
  *(void *)(inited + 96) = a6;
  id v26 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v27 = v22;
  id v28 = v24;
  unint64_t v29 = sub_22BE1A660(inited);
  if (a8)
  {
    id v30 = (void *)*MEMORY[0x263EFFFE8];
    id v31 = (id)*MEMORY[0x263EFFFE8];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v61 = v29;
    sub_22BE1D54C(a7, a8, v30, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872D0);
  sub_22BE1BB70();
  CFDictionaryRef v33 = (const __CFDictionary *)sub_22BE92BE8();
  swift_bridgeObjectRelease();
  CFUserNotificationRef v34 = CFUserNotificationCreate(0, 0.0, 3uLL, &error, v33);

  Class isa = osloga[2].isa;
  osloga[2].Class isa = v34;

  Class v36 = osloga[2].isa;
  if (!v36 || error)
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_22BE925E8();
    __swift_project_value_buffer(v37, (uint64_t)qword_2684879E0);
    uint64_t v38 = sub_22BE925C8();
    os_log_type_t v39 = sub_22BE93158();
    if (os_log_type_enabled(v38, v39))
    {
      os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v40 = 67109120;
      swift_beginAccess();
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v38, v39, "Could not create CFUserNotification: %d", v40, 8u);
      MEMORY[0x230F57540](v40, -1, -1);
    }
LABEL_17:

    return;
  }
  uint64_t v41 = v36;
  CFRunLoopSourceRef RunLoopSource = CFUserNotificationCreateRunLoopSource(0, v41, (CFUserNotificationCallBack)sub_22BE1B8D8, 0);
  Class v43 = osloga[3].isa;
  osloga[3].Class isa = RunLoopSource;

  Class v44 = osloga[3].isa;
  if (!v44)
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_22BE925E8();
    __swift_project_value_buffer(v52, (uint64_t)qword_2684879E0);
    uint64_t v53 = sub_22BE925C8();
    os_log_type_t v54 = sub_22BE93158();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_22BDC5000, v53, v54, "Could not create CFRunLoopSource.", v55, 2u);
      MEMORY[0x230F57540](v55, -1, -1);
    }

    uint64_t v38 = osloga[2].isa;
    osloga[2].Class isa = 0;

    goto LABEL_17;
  }
  id v45 = v44;
  uint64_t v46 = CFRunLoopGetCurrent();
  uint64_t v47 = (__CFString *)CFRunLoopCopyCurrentMode(v46);
  if (!v47) {
    uint64_t v47 = (__CFString *)(id)*MEMORY[0x263EFFE78];
  }
  if (qword_268486730 != -1) {
    swift_once();
  }
  uint64_t v48 = swift_allocObject();
  swift_weakInit();
  id v49 = (void *)swift_allocObject();
  v49[2] = v48;
  v49[3] = a9;
  void v49[4] = a10;
  v49[5] = v46;
  swift_beginAccess();
  sub_22BE91C58();
  sub_22BE03630(a9);
  uint64_t v50 = v46;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v59 = qword_2684872B8;
  qword_2684872B8 = 0x8000000000000000;
  sub_22BE1D40C((uint64_t)sub_22BE1BC88, (uint64_t)v49, (uint64_t)v41, v51);
  qword_2684872B8 = v59;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  CFRunLoopAddSource(v50, v45, v47);
  CFRunLoopRun();
}

void sub_22BE1B8D8(void *a1, char a2)
{
  id v4 = a1;
  sub_22BE1AF3C(a1, a2);
}

uint64_t sub_22BE1B92C(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, __CFRunLoop *a5)
{
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void **)(result + 24);
    if (v10)
    {
      uint64_t v11 = v10;
      CFRunLoopSourceInvalidate(v11);
      os_log_type_t v12 = *(void **)(v9 + 24);
      *(void *)(v9 + 24) = 0;
    }
    BOOL v13 = *(void **)(v9 + 16);
    if (v13)
    {
      uint64_t v14 = v13;
      CFUserNotificationCancel(v14);
      uint64_t v15 = *(void **)(v9 + 16);
      *(void *)(v9 + 16) = 0;
    }
    if (v7 == 1)
    {
      if (a3)
      {
        LOBYTE(v2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 1;
        goto LABEL_12;
      }
    }
    else
    {
      if (v7)
      {
        if (qword_2684867F8 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_22BE925E8();
        __swift_project_value_buffer(v16, (uint64_t)qword_2684879E0);
        long long v17 = sub_22BE925C8();
        os_log_type_t v18 = sub_22BE93158();
        if (os_log_type_enabled(v17, v18))
        {
          char v19 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)char v19 = 134217984;
          uint64_t v20 = v7;
          sub_22BE93408();
          _os_log_impl(&dword_22BDC5000, v17, v18, "Unexpected response from validating notification: %lu", v19, 0xCu);
          MEMORY[0x230F57540](v19, -1, -1);
        }

        goto LABEL_18;
      }
      if (a3)
      {
        LOBYTE(v2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0;
LABEL_12:
        a3(&v20);
      }
    }
LABEL_18:
    CFRunLoopStop(a5);
    return swift_release();
  }
  return result;
}

uint64_t DOCSystemAlert.deinit()
{
  return v0;
}

uint64_t DOCSystemAlert.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_22BE1BB70()
{
  unint64_t result = qword_2684872D8;
  if (!qword_2684872D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2684872D0);
    sub_22BE1EDCC(&qword_268486BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684872D8);
  }
  return result;
}

uint64_t sub_22BE1BC00()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE1BC38()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE1BC88(uint64_t *a1)
{
  return sub_22BE1B92C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32), *(__CFRunLoop **)(v1 + 40));
}

uint64_t sub_22BE1BC94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487360);
  char v37 = a2;
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    CFUserNotificationRef v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    Class v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_22BE91C58();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      id v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_bridgeObjectRetain();
      }
      sub_22BE92CD8();
      sub_22BE939F8();
      sub_22BE92D48();
      uint64_t v14 = sub_22BE93A48();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BE1BFB4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487358);
  uint64_t result = sub_22BE93818();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = v3;
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v29;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        sub_22BE91C58();
      }
      uint64_t result = sub_22BE939E8();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BE1C268(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487350);
  char v39 = a2;
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  Class v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_22BE91C58();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v18 >= v37) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v38 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v37) {
        goto LABEL_35;
      }
      unint64_t v20 = *(void *)(v38 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v38 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v37) {
              goto LABEL_35;
            }
            unint64_t v20 = *(void *)(v38 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    int64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v17);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    if ((v39 & 1) == 0)
    {
      id v26 = v22;
      swift_bridgeObjectRetain();
    }
    sub_22BE939F8();
    sub_22BE93A18();
    if (v22)
    {
      type metadata accessor for CFString(0);
      sub_22BE1EDCC(&qword_268486F70);
      id v27 = v22;
      sub_22BE92358();
    }
    uint64_t result = sub_22BE93A48();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v22;
    uint64_t v15 = (void *)(*(void *)(v7 + 56) + 16 * v14);
    *uint64_t v15 = v24;
    v15[1] = v25;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v19, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BE1C604(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487308);
  char v38 = a2;
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = sub_22BE91C58();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_22BE939F8();
    sub_22BE92D48();
    uint64_t result = sub_22BE93A48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BE1C914(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872F0);
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  sub_22BE91C58();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= v31) {
      break;
    }
    unint64_t v17 = v32[v16];
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        break;
      }
      unint64_t v17 = v32[v12];
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v31) {
          break;
        }
        unint64_t v17 = v32[v18];
        if (!v17)
        {
          while (1)
          {
            int64_t v12 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_40;
            }
            if (v12 >= v31) {
              goto LABEL_33;
            }
            unint64_t v17 = v32[v12];
            ++v18;
            if (v17) {
              goto LABEL_21;
            }
          }
        }
        int64_t v12 = v18;
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_22:
    char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_22BE939F8();
    sub_22BE92D48();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_22BE93A48();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x22BE1CC58);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v11 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v13) = v20;
    ++*(void *)(v7 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BE1CC68(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872E8);
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  id v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = sub_22BE91C58();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    char v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    char v23 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
    sub_22BE939F8();
    sub_22BE92D48();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22BE93A48();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  char v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22BE1CFA8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486FA0);
  uint64_t v6 = sub_22BE93818();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = sub_22BE91C58();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_22BDDBF3C(v24, v35);
      }
      else
      {
        sub_22BDD854C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_22BE939F8();
      sub_22BE92D48();
      uint64_t result = sub_22BE93A48();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_22BDDBF3C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

id sub_22BE1D2A8(uint64_t a1, void *a2, char a3)
{
  id v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_22BDDBFDC(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_22BE1DCB4();
LABEL_7:
    unint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_22BE1BC94(v12, a3 & 1);
  uint64_t v18 = sub_22BDDBFDC(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_22BE93958();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  unint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
  *(void *)(v15[7] + v2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v23;

  return a2;
}

uint64_t sub_22BE1D40C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_22BDFD20C(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_22BE1E02C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      char v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      *char v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      void v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_22BE1BFB4(result, a4 & 1);
  uint64_t result = sub_22BDFD20C(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_22BE93958();
  __break(1u);
  return result;
}

id sub_22BE1D54C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_22BDFD250(a3);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_22BE1E1D8();
LABEL_7:
    uint64_t v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = (void *)(v17[7] + 16 * v11);
      id result = (id)swift_bridgeObjectRelease();
      *uint64_t v18 = a1;
      v18[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_22BE1C268(v14, a4 & 1);
  unint64_t v20 = sub_22BDFD250(a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2684872D0);
    id result = (id)sub_22BE93958();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  *(void *)(v17[6] + 8 * v11) = a3;
  uint64_t v22 = (void *)(v17[7] + 16 * v11);
  *uint64_t v22 = a1;
  v22[1] = a2;
  uint64_t v23 = v17[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17[2] = v25;

  return a3;
}

unint64_t sub_22BE1D6C8()
{
  unint64_t result = qword_2684872E0;
  if (!qword_2684872E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684872E0);
  }
  return result;
}

uint64_t type metadata accessor for DOCSystemAlert()
{
  return self;
}

uint64_t method lookup function for DOCSystemAlert(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCSystemAlert);
}

uint64_t dispatch thunk of DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

unsigned char *storeEnumTagSinglePayload for DOCSystemAlert.Response(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE1D850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSystemAlert.Response()
{
  return &type metadata for DOCSystemAlert.Response;
}

uint64_t sub_22BE1D888(uint64_t a1, unsigned __int8 a2, char a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_22BDFD4C0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_22BE1E8B4();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
    *(void *)(v16[7] + 8 * v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_22BE1C914(result, a3 & 1);
  uint64_t result = sub_22BDFD4C0(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_22BE93958();
  __break(1u);
  return result;
}

uint64_t sub_22BE1D9C0(char a1, unsigned __int8 a2, char a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_22BDFD5A4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_22BE1EA58();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
    *(unsigned char *)(v16[7] + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a1 & 1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_22BE1CC68(result, a3 & 1);
  uint64_t result = sub_22BDFD5A4(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_22BE93958();
  __break(1u);
  return result;
}

_OWORD *sub_22BE1DAF4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_22BDD5734(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_22BE1EBE4();
      goto LABEL_7;
    }
    sub_22BE1CFA8(v15, a4 & 1);
    unint64_t v21 = sub_22BDD5734(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_22BE93958();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    BOOL v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_22BDDBF3C(a1, v19);
  }
LABEL_13:
  sub_22BE1DC48(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_22BE1DC48(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unsigned int v6 = (void *)(a5[6] + 16 * a1);
  *unsigned int v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_22BDDBF3C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_22BE1DCB4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487360);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1DE60()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_22BDD854C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_22BDDBF3C(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    uint64_t result = (void *)sub_22BE91C58();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1E02C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487358);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)sub_22BE91C58();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1E1D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487350);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v20;
    v22[1] = v21;
    id v23 = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1E390()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487328);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    long long v21 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    void *v20 = v18;
    v20[1] = v19;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_22BE1E548()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487308);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1E6FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF004D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1E8B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1EA58()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684872E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22BE1EBE4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486FA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93808();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_22BDD854C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = v19;
    v21[1] = v18;
    sub_22BDDBF3C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22BE1EDCC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22BE1EE10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487358);
  uint64_t v3 = (void *)sub_22BE93828();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v13 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_22BDFD20C(v4);
  if (v6)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    sub_22BE91C58();
    return (unint64_t)v3;
  }
  unint64_t v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v11 = (_OWORD *)((char *)v7 + 24);
    uint64_t v4 = *((void *)v7 - 1);
    long long v13 = *v7;
    sub_22BE91C58();
    unint64_t result = sub_22BDFD20C(v4);
    unint64_t v7 = v11;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE1EF18()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_22BE920B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = sub_22BE91E78();
  __swift_allocate_value_buffer(v5, qword_268487368);
  __swift_project_value_buffer(v5, (uint64_t)qword_268487368);
  sub_22BE92098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_22BE91E68();
}

uint64_t static GroupingMode.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_268486740 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE91E78();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268487368);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static GroupingMode.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_268486740 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE91E78();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268487368);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static GroupingMode.typeDisplayRepresentation.modify())()
{
  if (qword_268486740 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_22BE91E78();
  __swift_project_value_buffer(v0, (uint64_t)qword_268487368);
  swift_beginAccess();
  return j__swift_endAccess;
}

DocumentManagerExecutables::GroupingMode_optional __swiftcall GroupingMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_22BE93858();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static GroupingMode.allCases.getter()
{
  return &unk_26DF41F68;
}

uint64_t GroupingMode.rawValue.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 1702125924;
      break;
    case 3:
      uint64_t result = 1702521203;
      break;
    case 4:
      uint64_t result = 0x7942646572616873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22BE1F3BC(unsigned __int8 *a1, char *a2)
{
  return sub_22BE7C9EC(*a1, *a2);
}

uint64_t sub_22BE1F3C8()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE1F494()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE1F548()
{
  return sub_22BE93A48();
}

DocumentManagerExecutables::GroupingMode_optional sub_22BE1F610(Swift::String *a1)
{
  return GroupingMode.init(rawValue:)(*a1);
}

void sub_22BE1F61C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701736302;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1684957547;
      goto LABEL_3;
    case 2:
      *a1 = 1702125924;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 1702521203;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x7942646572616873;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

uint64_t sub_22BE1F6B0@<X0>(uint64_t a1@<X8>)
{
  if (qword_268486740 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE91E78();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268487368);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_22BE1F770(uint64_t a1)
{
  unint64_t v2 = sub_22BE2126C();

  return MEMORY[0x270EE0C40](a1, v2);
}

uint64_t sub_22BE1F7C0(uint64_t a1)
{
  unint64_t v2 = sub_22BE21580();

  return MEMORY[0x270EE1C28](a1, v2);
}

void sub_22BE1F80C(void *a1@<X8>)
{
  *a1 = &unk_26DF41F90;
}

uint64_t SetGroupingModeIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v29 = a1;
  uint64_t v1 = sub_22BE91E28();
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  MEMORY[0x270FA5388](v1);
  int64_t v26 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v25 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int64_t v24 = (char *)v22 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v23 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE920A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22BE922D8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_22BE92C88();
  MEMORY[0x270FA5388](v14 - 8);
  v22[0] = sub_22BE920B8();
  uint64_t v15 = *(void *)(v22[0] - 8);
  MEMORY[0x270FA5388](v22[0]);
  v22[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873D0);
  sub_22BE92C78();
  sub_22BE922C8();
  uint64_t v16 = *MEMORY[0x263F06D18];
  int64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v17(v12, v16, v9);
  sub_22BE920C8();
  sub_22BE92C78();
  sub_22BE922C8();
  v17(v12, v16, v9);
  uint64_t v18 = v23;
  sub_22BE920C8();
  (*(void (**)(char *, void, uint64_t, void))(v15 + 56))(v18, 0, 1, v22[0]);
  char v30 = 0;
  uint64_t v19 = sub_22BE91BA8();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, *MEMORY[0x263EFBDC8], v28);
  sub_22BE2126C();
  uint64_t result = sub_22BE91C08();
  *unint64_t v29 = result;
  return result;
}

uint64_t static SetGroupingModeIntent.attributionBundleIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_268487380;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SetGroupingModeIntent.attributionBundleIdentifier.setter(uint64_t a1, void *a2)
{
  qword_268487380 = a1;
  off_268487388 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SetGroupingModeIntent.attributionBundleIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_22BE1FE44()
{
  uint64_t v0 = sub_22BE920A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE922D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_22BE92C88();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_22BE920B8();
  __swift_allocate_value_buffer(v6, qword_268487390);
  __swift_project_value_buffer(v6, (uint64_t)qword_268487390);
  sub_22BE92C78();
  sub_22BE922C8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06D18], v0);
  return sub_22BE920C8();
}

uint64_t static SetGroupingModeIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE2044C(&qword_268486748, MEMORY[0x263F06D40], (uint64_t)qword_268487390, a1);
}

uint64_t sub_22BE2007C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v16 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_22BE920A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE922D8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_22BE92C88();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v15 = sub_22BE920B8();
  uint64_t v8 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v9 = sub_22BE91D88();
  __swift_allocate_value_buffer(v9, qword_2684873A8);
  uint64_t v14 = __swift_project_value_buffer(v9, (uint64_t)qword_2684873A8);
  sub_22BE92C78();
  sub_22BE922C8();
  uint64_t v10 = *MEMORY[0x263F06D18];
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v11(v5, v10, v2);
  sub_22BE920C8();
  sub_22BE92C78();
  sub_22BE922C8();
  v11(v5, v10, v2);
  char v12 = v16;
  sub_22BE920C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v15);
  return sub_22BE91D98();
}

uint64_t static SetGroupingModeIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE2044C(&qword_268486750, MEMORY[0x263EFBA28], (uint64_t)qword_2684873A8, a1);
}

uint64_t sub_22BE2044C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t SetGroupingModeIntent.groupingMode.getter()
{
  return sub_22BE91BD8();
}

uint64_t sub_22BE20510@<X0>(unsigned char *a1@<X8>)
{
  sub_22BE91C58();
  sub_22BE91BD8();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22BE2055C()
{
  return swift_release();
}

uint64_t SetGroupingModeIntent.groupingMode.setter()
{
  return sub_22BE91BE8();
}

void (*SetGroupingModeIntent.groupingMode.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_22BE91BC8();
  return sub_22BE20638;
}

void sub_22BE20638(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t SetGroupingModeIntent.$groupingMode.getter()
{
  return sub_22BE91BF8();
}

uint64_t static SetGroupingModeIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static SetGroupingModeIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873E0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873E8);
  MEMORY[0x270FA5388](v1);
  sub_22BDDF4E0();
  sub_22BE91E08();
  sub_22BE91DF8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684873F8);
  sub_22BE91DE8();
  swift_release();
  sub_22BE91DF8();
  sub_22BE91E18();
  return sub_22BE91DD8();
}

uint64_t SetGroupingModeIntent.perform()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_22BE20860, 0, 0);
}

uint64_t sub_22BE20860()
{
  sub_22BE91BB8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22BE208C4@<X0>(uint64_t a1@<X8>)
{
  if (qword_268486748 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE920B8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268487390);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_22BE2096C()
{
  return 1;
}

uint64_t sub_22BE20984(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_22BE20860, 0, 0);
}

unint64_t _s26DocumentManagerExecutables12GroupingModeO26caseDisplayRepresentationsSDyAC10AppIntents0G14RepresentationVGvgZ_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684874A8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v64 = (char *)v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v63 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_22BE920A8();
  uint64_t v4 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22BE922D8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22BE92C88();
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_22BE920B8();
  uint64_t v66 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2684874B0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487340);
  uint64_t v16 = *(void *)(v15 - 8);
  int64_t v17 = *(unsigned char **)(v16 + 72);
  uint64_t v54 = v15 - 8;
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v59 = v17;
  uint64_t v48 = 4 * (void)v17;
  uint64_t v19 = swift_allocObject();
  uint64_t v49 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_22BE9A4A0;
  unint64_t v60 = v19 + v18;
  *(unsigned char *)(v19 + v18) = 0;
  sub_22BE92C78();
  sub_22BE922C8();
  unsigned int v61 = *MEMORY[0x263F06D18];
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v55 = v4 + 104;
  uint64_t v65 = v20;
  ((void (*)(char *))v20)(v6);
  long long v21 = v6;
  sub_22BE920C8();
  unint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  v66 += 56;
  uint64_t v22 = v57;
  v58(v63, 1, 1, v57);
  uint64_t v23 = sub_22BE91DA8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v53 = v23;
  uint64_t v62 = v24 + 56;
  unint64_t v25 = v64;
  v52(v64, 1, 1, v23);
  int64_t v26 = v25;
  sub_22BE91DB8();
  unint64_t v27 = v60;
  uint64_t v28 = v54;
  uint64_t v47 = (uint64_t)&v59[v60 + *(int *)(v54 + 56)];
  v59[v60] = 1;
  v46[2] = v12;
  sub_22BE92C78();
  uint64_t v50 = v9;
  sub_22BE922C8();
  char v51 = v21;
  unint64_t v29 = v21;
  uint64_t v30 = v61;
  v65(v29, v61, v56);
  v46[1] = v14;
  sub_22BE920C8();
  uint64_t v31 = v63;
  uint64_t v32 = v58;
  v58(v63, 1, 1, v22);
  int64_t v33 = v26;
  uint64_t v34 = v52;
  v52(v33, 1, 1, v23);
  sub_22BE91DB8();
  uint64_t v47 = 2 * (void)v59;
  uint64_t v35 = (unsigned char *)(v27 + 2 * (void)v59);
  v46[3] = &v35[*(int *)(v28 + 56)];
  *uint64_t v35 = 2;
  sub_22BE92C78();
  sub_22BE922C8();
  v65(v51, v30, v56);
  sub_22BE920C8();
  uint64_t v36 = v57;
  v32(v31, 1, 1, v57);
  uint64_t v37 = v53;
  v34(v64, 1, 1, v53);
  sub_22BE91DB8();
  char v38 = &v59[v47 + v60];
  uint64_t v59 = &v38[*(int *)(v54 + 56)];
  unsigned char *v38 = 3;
  sub_22BE92C78();
  sub_22BE922C8();
  char v39 = v51;
  uint64_t v40 = v56;
  v65(v51, v61, v56);
  sub_22BE920C8();
  uint64_t v41 = v63;
  v58(v63, 1, 1, v36);
  uint64_t v42 = v64;
  uint64_t v43 = v37;
  Class v44 = v52;
  v52(v64, 1, 1, v43);
  sub_22BE91DB8();
  *(unsigned char *)(v60 + v48) = 4;
  sub_22BE92C78();
  sub_22BE922C8();
  v65(v39, v61, v40);
  sub_22BE920C8();
  v58(v41, 1, 1, v57);
  v44(v42, 1, 1, v53);
  sub_22BE91DB8();
  return sub_22BE1A774(v49);
}

unint64_t sub_22BE2126C()
{
  unint64_t result = qword_2684873D8;
  if (!qword_2684873D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684873D8);
  }
  return result;
}

uint64_t sub_22BE212C0@<X0>(uint64_t *a1@<X8>)
{
  sub_22BE91C58();
  uint64_t v2 = sub_22BE91BF8();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

unint64_t sub_22BE2130C()
{
  unint64_t result = qword_268487408;
  if (!qword_268487408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487408);
  }
  return result;
}

unint64_t sub_22BE21364()
{
  unint64_t result = qword_268487410;
  if (!qword_268487410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487410);
  }
  return result;
}

unint64_t sub_22BE213BC()
{
  unint64_t result = qword_268487418;
  if (!qword_268487418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487418);
  }
  return result;
}

unint64_t sub_22BE21414()
{
  unint64_t result = qword_268487420;
  if (!qword_268487420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487420);
  }
  return result;
}

uint64_t sub_22BE21468()
{
  return MEMORY[0x263F8D380];
}

unint64_t sub_22BE21478()
{
  unint64_t result = qword_268487428;
  if (!qword_268487428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487428);
  }
  return result;
}

unint64_t sub_22BE214D0()
{
  unint64_t result = qword_268487430;
  if (!qword_268487430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487430);
  }
  return result;
}

unint64_t sub_22BE21528()
{
  unint64_t result = qword_268487438;
  if (!qword_268487438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487438);
  }
  return result;
}

unint64_t sub_22BE21580()
{
  unint64_t result = qword_268487440;
  if (!qword_268487440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487440);
  }
  return result;
}

uint64_t sub_22BE215D4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22BE21628()
{
  unint64_t result = qword_268487448;
  if (!qword_268487448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487448);
  }
  return result;
}

unint64_t sub_22BE21680()
{
  unint64_t result = qword_268487450;
  if (!qword_268487450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487450);
  }
  return result;
}

unint64_t sub_22BE216D8()
{
  unint64_t result = qword_268487458;
  if (!qword_268487458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487458);
  }
  return result;
}

uint64_t sub_22BE2172C()
{
  return sub_22BE21924(&qword_268487460, &qword_268487468);
}

uint64_t sub_22BE21768()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22BE21784()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for GroupingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE21874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupingMode()
{
  return &type metadata for GroupingMode;
}

uint64_t sub_22BE218AC()
{
  return sub_22BE21924(&qword_268487488, &qword_268487490);
}

uint64_t sub_22BE218E8()
{
  return sub_22BE21924(&qword_268487498, &qword_2684874A0);
}

uint64_t sub_22BE21924(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id static DOCCollaborationHighlightManager.shared.getter()
{
  if (qword_26AEFFC28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_26AEFFA60;

  return v0;
}

void static DOCCollaborationHighlightManager.shared.setter(uint64_t a1)
{
  if (qword_26AEFFC28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_26AEFFA60;
  qword_26AEFFA60 = a1;
}

uint64_t (*static DOCCollaborationHighlightManager.shared.modify())()
{
  if (qword_26AEFFC28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_22BE21AF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_2684867F0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_22BE925E8();
  __swift_project_value_buffer(v7, (uint64_t)qword_2684879C8);
  id v8 = a1;
  uint64_t v9 = sub_22BE925C8();
  os_log_type_t v10 = sub_22BE93148();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v45 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    uint64_t v47 = a3;
    id v12 = v8;
    sub_22BE93408();
    *id v45 = v8;

    a3 = v47;
    _os_log_impl(&dword_22BDC5000, v9, v10, "No collaboration highlight in cache for %@, fetching...", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v45, -1, -1);
    MEMORY[0x230F57540](v11, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = *(void **)(a2
                 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_collaborationIdentifierToHighlightCache);
  uint64_t v14 = (void *)sub_22BE92C98();
  id v15 = objc_msgSend(v13, sel_objectForKey_, v14);

  if (v15)
  {
    id v16 = v8;
    int64_t v17 = sub_22BE925C8();
    os_log_type_t v18 = sub_22BE93148();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      id v21 = v16;
      sub_22BE93408();
      void *v20 = v16;

      _os_log_impl(&dword_22BDC5000, v17, v18, "Highlight already in cache for %@, ignoring!", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v20, -1, -1);
      MEMORY[0x230F57540](v19, -1, -1);

      return;
    }

    goto LABEL_11;
  }
  uint64_t v22 = *(void **)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_highlightCenter);
  uint64_t v23 = (void *)sub_22BE93248();
  id v24 = objc_msgSend(v22, sel_fetchAttributionsForHighlight_, v23);
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    uint64_t v26 = v25;
    id v27 = v24;
    id v28 = v8;
    id v29 = v27;
    id v30 = v28;
    uint64_t v46 = v29;
    uint64_t v31 = sub_22BE925C8();
    os_log_type_t v32 = sub_22BE93148();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138412546;
      Class v44 = v23;
      uint64_t v35 = v46;
      sub_22BE93408();
      *uint64_t v34 = v26;

      *(_WORD *)(v33 + 12) = 2112;
      id v36 = v30;
      sub_22BE93408();
      v34[1] = v30;

      uint64_t v23 = v44;
      _os_log_impl(&dword_22BDC5000, v31, v32, "Successfully fetched highlight %@ for %@", (uint8_t *)v33, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v34, -1, -1);
      MEMORY[0x230F57540](v33, -1, -1);
    }
    else
    {

      uint64_t v31 = v46;
    }

    uint64_t v42 = (void *)sub_22BE92C98();
    objc_msgSend(v13, sel_setObject_forKey_, v26, v42);

    __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00518);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22BE99770;
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a4;
    swift_bridgeObjectRetain();
    sub_22BE22358(inited);

    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {

    id v16 = v8;
    uint64_t v37 = sub_22BE925C8();
    os_log_type_t v38 = sub_22BE93158();
    if (!os_log_type_enabled(v37, v38))
    {

LABEL_11:
      return;
    }
    char v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    *(_DWORD *)char v39 = 138412290;
    id v41 = v16;
    sub_22BE93408();
    *uint64_t v40 = v16;

    _os_log_impl(&dword_22BDC5000, v37, v38, "Could not get complete highlight for %@", v39, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v40, -1, -1);
    MEMORY[0x230F57540](v39, -1, -1);
  }
}

void sub_22BE22358(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  if (a1)
  {
    swift_beginAccess();
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      unsigned int v6 = (uint64_t *)(a1 + 40);
      do
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain();
        sub_22BE53858(&v12, v7, v8);
        swift_bridgeObjectRelease();
        v6 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  *(void *)(v9 + 24) = ObjectType;
  aBlock[4] = sub_22BE22C88;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_27_0;
  os_log_type_t v10 = _Block_copy(aBlock);
  id v11 = v2;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v10);
}

void sub_22BE224BC(char *a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_coalescingTimer;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_coalescingTimer], sel_invalidate);
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v11[4] = sub_22BE22C2C;
  v11[5] = v6;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_22BE2A864;
  v11[3] = &block_descriptor_20;
  uint64_t v7 = _Block_copy(v11);
  uint64_t v8 = a1;
  swift_release();
  id v9 = objc_msgSend(v5, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v7, 0.1);
  _Block_release(v7);
  os_log_type_t v10 = *(void **)&a1[v4];
  *(void *)&a1[v4] = v9;
}

uint64_t sub_22BE225EC(uint64_t a1, uint64_t a2)
{
  int v3 = (uint64_t *)(a2
                 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_pendingIdentifiersToNotify);
  swift_beginAccess();
  if (*(void *)(*v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486FB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22BE99770;
    uint64_t v18 = 0xD000000000000012;
    unint64_t v19 = 0x800000022BEA1530;
    sub_22BE935F8();
    uint64_t v5 = *v3;
    *(void *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_268487560);
    *(void *)(inited + 72) = v5;
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_22BE1A51C(inited);
  }
  else
  {
    unint64_t v6 = 0;
  }
  if (qword_2684867F0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_22BE925E8();
  __swift_project_value_buffer(v7, (uint64_t)qword_2684879C8);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_22BE925C8();
  os_log_type_t v9 = sub_22BE93148();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)os_log_type_t v10 = 136315138;
    uint64_t v20 = v6;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487550);
    uint64_t v12 = sub_22BE92CF8();
    uint64_t v20 = sub_22BDD8478(v12, v13, &v18);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v8, v9, "Sending highlights did change notification with userInfo=%s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v11, -1, -1);
    MEMORY[0x230F57540](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v14 = objc_msgSend(self, sel_defaultCenter);
  if (qword_26AF00400 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_26AEFFAF8;
  if (v6)
  {
    id v16 = (void *)sub_22BE92BE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  objc_msgSend(v14, sel_postNotificationName_object_userInfo_, v15, a2, v16, v18, v19);

  *int v3 = MEMORY[0x263F8EE88];
  return swift_bridgeObjectRelease();
}

id DOCCollaborationHighlightManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCollaborationHighlightManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCCollaborationHighlightManager.highlightCenterHighlightsDidChange(_:)(SWHighlightCenter a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = ObjectType;
  v6[4] = sub_22BE22B00;
  v6[5] = v3;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_22BDD0BA8;
  void v6[3] = &block_descriptor_7;
  uint64_t v4 = _Block_copy(v6);
  id v5 = v1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v4);
}

uint64_t sub_22BE22AC8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE22B00()
{
  sub_22BE224BC(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t static DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.getter()
{
  return 0xD000000000000012;
}

uint64_t method lookup function for DOCCollaborationHighlightManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCCollaborationHighlightManager);
}

uint64_t sub_22BE22C2C(uint64_t a1)
{
  return sub_22BE225EC(a1, *(void *)(v1 + 16));
}

uint64_t sub_22BE22C34()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22BE22C7C()
{
  sub_22BE21AF4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id NSLayoutAnchor.doc_constraint(equalTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  return sub_22BE22DCC(a1, (SEL *)&selRef_constraintEqualToAnchor_constant_, a2, a3);
}

id sub_22BE22CC4(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = a1;
  id v10 = NSLayoutAnchor.doc_constraint(equalTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

id NSLayoutAnchor.doc_constraint(greaterThanOrEqualTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  return sub_22BE22DCC(a1, (SEL *)&selRef_constraintGreaterThanOrEqualToAnchor_constant_, a2, a3);
}

id sub_22BE22D48(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = a1;
  id v10 = NSLayoutAnchor.doc_constraint(greaterThanOrEqualTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

id NSLayoutAnchor.doc_constraint(lessThanOrEqualTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  return sub_22BE22DCC(a1, (SEL *)&selRef_constraintLessThanOrEqualToAnchor_constant_, a2, a3);
}

id sub_22BE22DCC(uint64_t a1, SEL *a2, double a3, float a4)
{
  id v6 = objc_msgSend(v4, *a2, a1);
  *(float *)&double v7 = a4;
  objc_msgSend(v6, sel_setPriority_, v7);
  return v6;
}

id sub_22BE22E24(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = a1;
  id v10 = NSLayoutAnchor.doc_constraint(lessThanOrEqualTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.with(priority:)(UILayoutPriority priority)
{
  objc_msgSend(v1, sel_setPriority_);

  return (NSLayoutConstraint)v3;
}

id NSLayoutDimension.doc_constraint(equalToConstant:priority:)(double a1, float a2)
{
  id v4 = objc_msgSend(v2, sel_constraintEqualToConstant_);
  *(float *)&double v5 = a2;
  objc_msgSend(v4, sel_setPriority_, v5);
  return v4;
}

id sub_22BE22F38(void *a1, double a2, float a3)
{
  id v5 = a1;
  id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, a2);
  *(float *)&double v7 = a3;
  objc_msgSend(v6, sel_setPriority_, v7);

  return v6;
}

double NSDirectionalEdgeInsets.copyWith(top:leading:bottom:trailing:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return *(double *)&a1;
  }
  return result;
}

double _sSo23NSDirectionalEdgeInsetsV26DocumentManagerExecutablesE2by6addingA2B_tF_0(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

double UIEdgeInsets.by(scaling:)(double a1, double a2)
{
  return a1 * a2;
}

double UIEdgeInsets.horizontalInsetsOnly.getter()
{
  return 0.0;
}

double CGRect.byPositioning(leadingRelativeToRect:offset:isRTL:)(char a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  if (a1)
  {
    double v20 = CGRectGetMaxX(*(CGRect *)&a2) + a6;
  }
  else
  {
    CGFloat v21 = CGRectGetMinX(*(CGRect *)&a2) - a6;
    v23.origin.x = a7;
    v23.origin.y = a8;
    v23.size.width = a9;
    v23.size.height = a10;
    double v20 = v21 - CGRectGetWidth(v23);
  }
  v24.origin.x = a7;
  v24.origin.y = a8;
  v24.size.width = a9;
  v24.size.height = a10;
  CGRectGetMinY(v24);
  v25.origin.x = a7;
  v25.origin.y = a8;
  v25.size.width = a9;
  v25.size.height = a10;
  CGRectGetWidth(v25);
  v26.origin.x = a7;
  v26.origin.y = a8;
  v26.size.width = a9;
  v26.size.height = a10;
  CGRectGetHeight(v26);
  return v20;
}

double CGRect.byPositioning(trailingRelativeToRect:offset:isRTL:)(char a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  if (a1)
  {
    CGFloat v20 = CGRectGetMinX(*(CGRect *)&a2) - a6;
    v23.origin.x = a7;
    v23.origin.y = a8;
    v23.size.width = a9;
    v23.size.height = a10;
    double v21 = v20 - CGRectGetWidth(v23);
  }
  else
  {
    double v21 = CGRectGetMaxX(*(CGRect *)&a2) + a6;
  }
  v24.origin.x = a7;
  v24.origin.y = a8;
  v24.size.width = a9;
  v24.size.height = a10;
  CGRectGetMinY(v24);
  v25.origin.x = a7;
  v25.origin.y = a8;
  v25.size.width = a9;
  v25.size.height = a10;
  CGRectGetWidth(v25);
  v26.origin.x = a7;
  v26.origin.y = a8;
  v26.size.width = a9;
  v26.size.height = a10;
  CGRectGetHeight(v26);
  return v21;
}

CGRect __swiftcall CGRect.byCenteringVertically(relativeToRect:isRTL:)(CGRect relativeToRect, Swift::Bool isRTL)
{
  CGFloat v6 = v5;
  CGFloat v7 = v4;
  CGFloat v8 = v3;
  CGFloat v9 = v2;
  CGFloat height = relativeToRect.size.height;
  CGFloat width = relativeToRect.size.width;
  CGFloat y = relativeToRect.origin.y;
  CGFloat x = relativeToRect.origin.x;
  double MinY = CGRectGetMinY(relativeToRect);
  v23.origin.CGFloat x = x;
  v23.origin.CGFloat y = y;
  v23.size.CGFloat width = width;
  v23.size.CGFloat height = height;
  double v14 = CGRectGetHeight(v23);
  v24.origin.CGFloat x = v9;
  v24.origin.CGFloat y = v8;
  v24.size.CGFloat width = v7;
  v24.size.CGFloat height = v6;
  double v15 = MinY + (v14 - CGRectGetHeight(v24)) * 0.5;
  v25.origin.CGFloat x = v9;
  v25.origin.CGFloat y = v8;
  v25.size.CGFloat width = v7;
  v25.size.CGFloat height = v6;
  CGFloat MinX = CGRectGetMinX(v25);
  v26.origin.CGFloat x = v9;
  v26.origin.CGFloat y = v8;
  v26.size.CGFloat width = v7;
  v26.size.CGFloat height = v6;
  CGFloat v17 = CGRectGetWidth(v26);
  v27.origin.CGFloat x = v9;
  v27.origin.CGFloat y = v8;
  v27.size.CGFloat width = v7;
  v27.size.CGFloat height = v6;
  double v18 = CGRectGetHeight(v27);
  double v19 = MinX;
  double v20 = v15;
  double v21 = v17;
  result.size.CGFloat height = v18;
  result.size.CGFloat width = v21;
  result.origin.CGFloat y = v20;
  result.origin.CGFloat x = v19;
  return result;
}

uint64_t sub_22BE232E0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t result = sub_22BE936E8();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = 0;
        do
        {
          uint64_t v5 = v4 + 1;
          id v10 = (void *)MEMORY[0x230F56140]();
          type metadata accessor for DOCOperation();
          id v6 = v10;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2684875A8);
          swift_dynamicCast();
          swift_unknownObjectRelease();
          sub_22BE936B8();
          sub_22BE936F8();
          sub_22BE93708();
          sub_22BE936C8();
          uint64_t v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        CGFloat v7 = (void **)(a1 + 32);
        type metadata accessor for DOCOperation();
        do
        {
          CGFloat v8 = *v7++;
          id v9 = v8;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2684875A8);
          swift_dynamicCast();

          sub_22BE936B8();
          sub_22BE936F8();
          sub_22BE93708();
          sub_22BE936C8();
          --v2;
        }
        while (v2);
      }
      return v11;
    }
  }
  return result;
}

BOOL static DOCChainOperation.DOCChainOperationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DOCChainOperation.DOCChainOperationMode.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCChainOperation.DOCChainOperationMode.hashValue.getter()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE23548@<X0>(unsigned char *a1@<X8>)
{
  double v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_22BE23598(char *a1)
{
  char v2 = *a1;
  double v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode);
  uint64_t result = swift_beginAccess();
  *double v3 = v2;
  return result;
}

uint64_t (*sub_22BE235EC())()
{
  return j__swift_endAccess;
}

char *DOCChainOperation.__allocating_init(operations:)(unint64_t a1)
{
  double v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue;
  id v5 = objc_allocWithZone(MEMORY[0x263F08A48]);
  id v6 = v3;
  *(void *)&v3[v4] = objc_msgSend(v5, sel_init);
  CGFloat v7 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
  *(_OWORD *)CGFloat v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError] = 0;
  v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode] = 0;
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operations] = a1;
  swift_bridgeObjectRetain();

  v16.receiver = v6;
  v16.super_class = v1;
  CGFloat v8 = (char *)objc_msgSendSuper2(&v16, sel_init);
  id v9 = v8;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = v8;
    if (v10) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    id v15 = *(id *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue];
    objc_msgSend(v15, sel_setMaxConcurrentOperationCount_, 1);

    return v9;
  }
  swift_bridgeObjectRetain();
  double v14 = v9;
  uint64_t v10 = sub_22BE937E8();
  uint64_t result = (char *)swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_14;
  }
LABEL_3:
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        MEMORY[0x230F56140](i, a1);
        type metadata accessor for DOCChainableOperation();
        if (swift_dynamicCastClass()) {
          swift_unknownObjectWeakAssign();
        }
        swift_unknownObjectRelease();
      }
    }
    else
    {
      type metadata accessor for DOCChainableOperation();
      for (uint64_t j = 0; j != v10; ++j)
      {
        if (swift_dynamicCastClass()) {
          swift_unknownObjectWeakAssign();
        }
      }
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

char *DOCChainOperation.init(operations:)(unint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue;
  id v4 = objc_allocWithZone(MEMORY[0x263F08A48]);
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  id v6 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
  *(_OWORD *)id v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError] = 0;
  v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode] = 0;
  *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operations] = a1;
  swift_bridgeObjectRetain();

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for DOCChainOperation();
  CGFloat v7 = (char *)objc_msgSendSuper2(&v15, sel_init);
  CGFloat v8 = v7;
  if (!(a1 >> 62))
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = v7;
    if (v9) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    id v14 = *(id *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue];
    objc_msgSend(v14, sel_setMaxConcurrentOperationCount_, 1);

    return v8;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = v8;
  uint64_t v9 = sub_22BE937E8();
  uint64_t result = (char *)swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_14;
  }
LABEL_3:
  if (v9 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        MEMORY[0x230F56140](i, a1);
        type metadata accessor for DOCChainableOperation();
        if (swift_dynamicCastClass()) {
          swift_unknownObjectWeakAssign();
        }
        swift_unknownObjectRelease();
      }
    }
    else
    {
      type metadata accessor for DOCChainableOperation();
      for (uint64_t j = 0; j != v9; ++j)
      {
        if (swift_dynamicCastClass()) {
          swift_unknownObjectWeakAssign();
        }
      }
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCChainableOperation()
{
  return self;
}

uint64_t type metadata accessor for DOCChainOperation()
{
  return self;
}

Swift::Void __swiftcall DOCChainOperation.main()()
{
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operations);
  uint64_t v3 = v2 >> 62;
  unint64_t v39 = v2 >> 62;
  if (!(v2 >> 62))
  {
    int64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
    goto LABEL_62;
  }
LABEL_58:
  swift_bridgeObjectRetain_n();
  int64_t v4 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v3 < 1)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v36 < v4)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    sub_22BE92EF8();
    goto LABEL_22;
  }
LABEL_73:
  uint64_t v3 = v39;
LABEL_4:
  unint64_t v45 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0 && v4 != 1)
  {
    type metadata accessor for DOCOperation();
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = v6 + 1;
      sub_22BE93668();
      uint64_t v6 = v7;
    }
    while (v4 != v7);
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22BE937F8();
    uint64_t v3 = v9;
    uint64_t v1 = v10;
    int64_t v4 = v11;
    swift_bridgeObjectRelease_n();
    if (v4)
    {
LABEL_15:
      sub_22BE938E8();
      swift_unknownObjectRetain_n();
      uint64_t v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        uint64_t v13 = MEMORY[0x263F8EE78];
      }
      uint64_t v14 = *(void *)(v13 + 16);
      swift_release();
      if (!__OFSUB__((unint64_t)v4 >> 1, v1))
      {
        if (v14 == ((unint64_t)v4 >> 1) - v1)
        {
          unint64_t v12 = swift_dynamicCastClass();
          if (!v12)
          {
            swift_unknownObjectRelease();
            unint64_t v12 = MEMORY[0x263F8EE78];
          }
          goto LABEL_21;
        }
        goto LABEL_69;
      }
      goto LABEL_68;
    }
  }
  else
  {
    uint64_t v8 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v3 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v1 = 1;
    int64_t v4 = (2 * v4) | 1;
    if (v4) {
      goto LABEL_15;
    }
  }
  while (1)
  {
    unint64_t v12 = sub_22BE247D0(v8, v3, v1, v4);
LABEL_21:
    swift_unknownObjectRelease();
    uint64_t v15 = sub_22BE232E0(v12);
    swift_release();
    uint64_t v46 = v15;
    uint64_t v16 = swift_bridgeObjectRetain();
    MEMORY[0x230F55950](v16);
    uint64_t v3 = *(void *)(v15 + 16);
    if ((unint64_t)v3 >= *(void *)(v15 + 24) >> 1) {
      goto LABEL_63;
    }
LABEL_22:
    sub_22BE92F48();
    sub_22BE92ED8();
    uint64_t v8 = v46;
    swift_bridgeObjectRelease();
    uint64_t v43 = swift_allocObject();
    *(unsigned char *)(v43 + 16) = 0;
    int64_t v4 = v39;
    if (v39)
    {
      if ((v2 & 0x8000000000000000) != 0) {
        uint64_t v3 = v2;
      }
      else {
        uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      int64_t v4 = v39;
      uint64_t v17 = sub_22BE937E8();
      if (!v17)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8;
        if (v4) {
          goto LABEL_43;
        }
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v17) {
        goto LABEL_42;
      }
    }
    if (v45) {
      break;
    }
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      double v18 = (char *)*(id *)(v2 + 32);
      goto LABEL_27;
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_unknownObjectRelease();
  }
  while (1)
  {
    double v18 = (char *)MEMORY[0x230F56140](0, v2);
LABEL_27:
    double v19 = v18;
    uint64_t v42 = *(void *)(v8 + 16);
    if (v42)
    {
      unint64_t v20 = 0;
      unint64_t v37 = v2 + 40;
      uint64_t v38 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v40 = v17 - 1;
      unint64_t v41 = v2;
      while (v20 < *(void *)(v8 + 16))
      {
        uint64_t v22 = *(void **)(v8 + 32 + 8 * v20);
        CGRect v23 = *(NSObject **)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
        id v24 = v22;
        dispatch_suspend(v23);
        if (v22) {
          objc_msgSend(v24, sel_addDependency_, v19);
        }
        CGRect v25 = (uint64_t *)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
        swift_beginAccess();
        uint64_t v26 = *v25;
        uint64_t v1 = v25[1];
        uint64_t v27 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v28 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v29 = (void *)swift_allocObject();
        v29[2] = v27;
        v29[3] = v43;
        v29[4] = v26;
        v29[5] = v1;
        v29[6] = v28;
        uint64_t v17 = *v25;
        *CGRect v25 = (uint64_t)sub_22BE249F4;
        v25[1] = (uint64_t)v29;
        sub_22BE03630(v26);
        sub_22BE91C58();
        sub_22BDE0E58(v17);

        if (v40 == v20)
        {
          swift_bridgeObjectRelease();
          unint64_t v2 = v41;
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        unint64_t v30 = v20 + 1;
        if (v45)
        {
          unint64_t v2 = v41;
          double v21 = (char *)MEMORY[0x230F56140](v30, v41);
        }
        else
        {
          unint64_t v2 = v41;
          if (v30 >= *(void *)(v38 + 16)) {
            goto LABEL_57;
          }
          double v21 = (char *)*(id *)(v37 + 8 * v20);
        }
        double v19 = v21;
        if (v42 == ++v20) {
          goto LABEL_44;
        }
      }
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_46:
    int64_t v4 = v39;
    uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v39)
    {
LABEL_43:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_22BE937E8();
      goto LABEL_48;
    }
LABEL_47:
    uint64_t v8 = *(void *)(v31 + 16);
    swift_bridgeObjectRetain();
LABEL_48:
    if (!v8)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_71;
    }
    if (v45) {
      break;
    }
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      os_log_type_t v32 = (char *)*(id *)(v2 + 32);
      goto LABEL_52;
    }
    __break(1u);
  }
  os_log_type_t v32 = (char *)MEMORY[0x230F56140](0, v2);
LABEL_52:
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  dispatch_resume(*(dispatch_object_t *)&v33[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue]);

  uint64_t v34 = *(void **)(v44 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue);
  if (v4)
  {
    sub_22BE24A04();
    swift_bridgeObjectRetain();
    sub_22BE93788();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_22BE938D8();
    sub_22BE24A04();
  }
  sub_22BE24A04();
  uint64_t v35 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_addOperations_waitUntilFinished_, v35, 0);
  swift_release();
}

void sub_22BE24134(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *), uint64_t a6, uint64_t a7)
{
  uint64_t v12 = a3 + 16;
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x230F57630](v12);
  if (!v13) {
    return;
  }
  uint64_t v14 = (char *)v13;
  uint64_t v15 = (unsigned char *)(a4 + 16);
  uint64_t v16 = a7 + 16;
  swift_beginAccess();
  if ((*v15 & 1) == 0)
  {
    sub_22BDD47C0(a1, (uint64_t)v31);
    uint64_t v17 = (uint64_t)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
    swift_beginAccess();
    sub_22BE24D78((uint64_t)v31, v17);
    swift_endAccess();
    double v18 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError];
    *(void *)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError] = a2;
    id v19 = a2;

    uint64_t v20 = *(void *)(a1 + 24);
    double v21 = &v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode];
    swift_beginAccess();
    if (*v21)
    {
      if (*v21 == 1 && v20 != 0)
      {
LABEL_10:
        swift_beginAccess();
        *uint64_t v15 = 1;
        swift_beginAccess();
        uint64_t v23 = MEMORY[0x230F57630](v12);
        id v24 = (void *)v23;
        if (v23)
        {
          id v25 = *(id *)(v23 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue);

          objc_msgSend(v25, sel_cancelAllOperations);
        }
      }
    }
    else if (!v20)
    {
      goto LABEL_10;
    }
  }
  if (a5)
  {
    sub_22BE91C58();
    a5(a1, a2);
    sub_22BDE0E58((uint64_t)a5);
  }
  swift_beginAccess();
  uint64_t v26 = MEMORY[0x230F57630](v16);
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    dispatch_resume(*(dispatch_object_t *)(v26 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue));
  }
  else
  {
    uint64_t v28 = (uint64_t)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
    swift_beginAccess();
    sub_22BDD47C0(v28, (uint64_t)v31);
    id v29 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError];
    id v30 = v29;
    sub_22BE19D84((uint64_t)v31, v29);

    sub_22BDD473C((uint64_t)v31);
  }
}

id DOCChainOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCChainOperation.init()()
{
}

void sub_22BE24490()
{
  swift_bridgeObjectRelease();

  sub_22BDD473C(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult);
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError);
}

id DOCChainOperation.__deallocating_deinit()
{
  return sub_22BE24788(type metadata accessor for DOCChainOperation);
}

Swift::Void __swiftcall DOCChainableOperation.main()()
{
  id v1 = (char *)v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCChainableOperation_chainOperation;
  uint64_t v2 = MEMORY[0x230F57630]((char *)v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCChainableOperation_chainOperation);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = v2 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult;
    swift_beginAccess();
    sub_22BDD47C0(v4, (uint64_t)v9);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  uint64_t v5 = MEMORY[0x230F57630](v1);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError);
    id v8 = v7;
  }
  else
  {
    uint64_t v7 = 0;
  }
  (*(void (**)(_OWORD *, void *))((*MEMORY[0x263F8EED0] & *v0) + 0x120))(v9, v7);

  sub_22BDD473C((uint64_t)v9);
}

id DOCChainableOperation.init()()
{
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCChainableOperation();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_22BE24760()
{
  return swift_unknownObjectWeakDestroy();
}

id DOCChainableOperation.__deallocating_deinit()
{
  return sub_22BE24788(type metadata accessor for DOCChainableOperation);
}

id sub_22BE24788(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_22BE247D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        type metadata accessor for DOCOperation();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      _OWORD v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BE24954()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_22BE24964()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE2499C()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_22BE249F4(uint64_t a1, void *a2)
{
  sub_22BE24134(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, void *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

unint64_t sub_22BE24A04()
{
  unint64_t result = qword_268487598;
  if (!qword_268487598)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268487598);
  }
  return result;
}

unint64_t sub_22BE24A48()
{
  unint64_t result = qword_2684875A0;
  if (!qword_2684875A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684875A0);
  }
  return result;
}

uint64_t sub_22BE24A9C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  objc_super v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_22BE24AF0(char *a1, void *a2)
{
  char v2 = *a1;
  objc_super v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

uint64_t method lookup function for DOCChainOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCChainOperation);
}

uint64_t dispatch thunk of DOCChainOperation.mode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DOCChainOperation.mode.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DOCChainOperation.mode.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of DOCChainOperation.__allocating_init(operations:)()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

unsigned char *storeEnumTagSinglePayload for DOCChainOperation.DOCChainOperationMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE24CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCChainOperation.DOCChainOperationMode()
{
  return &type metadata for DOCChainOperation.DOCChainOperationMode;
}

uint64_t method lookup function for DOCChainableOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCChainableOperation);
}

uint64_t dispatch thunk of DOCChainableOperation.main(with:previousOperationError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t sub_22BE24D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22BE24DE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F80);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_22BE57DB4(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_22BE24EB8();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_22BE24EB8()
{
  return swift_release();
}

char *DOCDeleteOperation.__allocating_init(items:originalOperation:undoManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  return DOCDeleteOperation.init(items:originalOperation:undoManager:)(a1, a2, a3);
}

char *DOCDeleteOperation.init(items:originalOperation:undoManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_items] = a1;
  *(void *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation] = a2;
  *(void *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager] = a3;
  sub_22BE25274();
  swift_bridgeObjectRetain();
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for DOCDeleteOperation();
  uint64_t v8 = (char *)objc_msgSendSuper2(&v12, sel_initWithItems_, v7);

  uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager];
  int64_t v10 = v8;
  if (a2)
  {
    objc_msgSend(v9, sel_registerUndoOperationForSender_, v10);

    swift_unknownObjectRelease();
  }
  else
  {
    if (objc_msgSend(v9, sel_isUndoing)) {
      objc_msgSend(v9, sel_setShouldRemoveAllActions_, 1);
    }
    else {
      objc_msgSend(v9, sel_removeAllActions);
    }
  }
  return v10;
}

uint64_t sub_22BE25060()
{
  return 0;
}

char *sub_22BE2506C()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_items);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v8 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation);
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager);
    id v4 = objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation());
    swift_unknownObjectRetain();
    id v5 = v3;
    uint64_t v6 = swift_bridgeObjectRetain();
    return DOCDeleteOperation.init(items:originalOperation:undoManager:)(v6, v2, v5);
  }
  return 0;
}

id sub_22BE25178()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager), sel_setShouldRemoveAllActions_, 1);
  id result = *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation);
  if (result) {
    return objc_msgSend(result, sel_operationForRedoing);
  }
  return result;
}

id sub_22BE25258()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager), sel_registerUndoOperationForSender_, v0);
}

unint64_t sub_22BE25274()
{
  unint64_t result = qword_26AF00490;
  if (!qword_26AF00490)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AF00490);
  }
  return result;
}

uint64_t type metadata accessor for DOCDeleteOperation()
{
  return self;
}

id DOCDeleteOperation.__allocating_init(items:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_22BE25274();
  uint64_t v2 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithItems_, v2);

  return v3;
}

void DOCDeleteOperation.init(items:)()
{
}

id DOCDeleteOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDeleteOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DOCDeleteOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCDeleteOperation);
}

uint64_t dispatch thunk of DOCDeleteOperation.__allocating_init(items:originalOperation:undoManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DOCDeleteOperation.actionNameForUndoing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DOCDeleteOperation.operationForRedoing()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DOCDeleteOperation.operationForUndoing()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DOCDeleteOperation.registerUndo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t DOCUTIDescriptor.utis.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCUTIDescriptor.utis.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*DOCUTIDescriptor.utis.modify())()
{
  return nullsub_1;
}

uint64_t DOCUTIDescriptor.localizedDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DOCUTIDescriptor.isFolder.getter()
{
  uint64_t v1 = sub_22BE92568();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*v0 + 16) != 1)
  {
    char v13 = 0;
    return v13 & 1;
  }
  uint64_t result = sub_22BDFCD10(*v0);
  if (v6)
  {
    uint64_t v7 = result;
    uint64_t v8 = v6;
    sub_22BE924C8();
    uint64_t v9 = sub_22BE923A8();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v7 == v9 && v8 == v11) {
      char v13 = 1;
    }
    else {
      char v13 = sub_22BE938C8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13 & 1;
  }
  __break(1u);
  return result;
}

id sub_22BE25728()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCUTIDescriptorCollector()), sel_init);
  qword_2684875C8 = (uint64_t)result;
  return result;
}

id static DOCUTIDescriptorCollector.shared.getter()
{
  if (qword_268486758 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2684875C8;

  return v0;
}

id sub_22BE257B4()
{
  uint64_t v1 = sub_22BE931D8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22BE931B8();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_22BE92B58();
  MEMORY[0x270FA5388](v6 - 8);
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery] = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_utiDescriptors] = MEMORY[0x263F8EE78];
  uint64_t v8 = v7;
  uint64_t v17 = v0;
  uint64_t v18 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue;
  void v16[3] = sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  id v19 = v0;
  sub_22BE92B38();
  uint64_t v21 = v8;
  v16[2] = sub_22BDD697C((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  v16[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  uint64_t v9 = *MEMORY[0x263F8F130];
  uint64_t v10 = v2 + 104;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16[0] = v10;
  v11(v4, v9, v1);
  *(void *)&v17[v18] = sub_22BE93228();
  uint64_t v18 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue;
  sub_22BE92B38();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_22BE934E8();
  v11(v4, v9, v1);
  uint64_t v12 = sub_22BE93228();
  char v13 = v19;
  *(void *)&v19[v18] = v12;

  uint64_t v14 = (objc_class *)type metadata accessor for DOCUTIDescriptorCollector();
  v20.receiver = v13;
  v20.super_class = v14;
  return objc_msgSendSuper2(&v20, sel_init);
}

uint64_t sub_22BE25B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v10 = sub_22BE92B08();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_22BE92B58();
  uint64_t v14 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE26348(a3);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = v23;
  v17[2] = v5;
  uint64_t v17[3] = v18;
  void v17[4] = a5;
  v17[5] = a1;
  v17[6] = a2;
  aBlock[4] = sub_22BE26668;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_8;
  id v19 = _Block_copy(aBlock);
  id v20 = v5;
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  sub_22BE92B38();
  uint64_t v25 = MEMORY[0x263F8EE78];
  sub_22BDD697C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v16, v13, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  return swift_release();
}

uint64_t sub_22BE25E08(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_22BE92B08();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_22BE92B58();
  uint64_t v14 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue];
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  uint64_t v17[3] = a3;
  void v17[4] = a1;
  v17[5] = a4;
  v17[6] = a5;
  aBlock[4] = sub_22BE2815C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_14_1;
  uint64_t v18 = _Block_copy(aBlock);
  sub_22BE91C58();
  id v19 = a1;
  swift_bridgeObjectRetain();
  sub_22BE92B38();
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_22BDD697C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v22);
  return swift_release();
}

uint64_t sub_22BE260E0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_22BE92B88();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18[1] = a4;
  void v18[2] = a5;
  sub_22BE0F59C();
  sub_22BE93448();
  char v13 = *(void **)(a3 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue);
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_22BE92BB8();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    swift_beginAccess();
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_22BE29A88(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1(v17);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22BE262A4()
{
  uint64_t v1 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery);
  if (v2)
  {
    id v5 = v2;
    if (objc_msgSend(v5, sel_isCancelled))
    {
      uint64_t v3 = v5;
    }
    else
    {
      objc_msgSend(v5, sel_cancel);
      id v4 = *(void **)(v0 + v1);
      *(void *)(v0 + v1) = 0;

      uint64_t v3 = v4;
    }
  }
}

void sub_22BE26348(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02AD0]), sel_init);
  id v4 = (void *)sub_22BE92EA8();
  objc_msgSend(v3, sel_setFetchAttributes_, v4);

  id v5 = objc_allocWithZone(MEMORY[0x263F02AC8]);
  id v6 = v3;
  uint64_t v7 = (void *)sub_22BE92C98();
  id v8 = objc_msgSend(v5, sel_initWithQueryString_queryContext_, v7, v6);

  LOBYTE(v6) = *(void *)(a1 + 16) == 0;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = MEMORY[0x263F8EE88];
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = (_BYTE)v6;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = a1;
  id v20 = sub_22BE29DD0;
  uint64_t v21 = v10;
  uint64_t v16 = MEMORY[0x263EF8330];
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_22BE26D10;
  id v19 = &block_descriptor_23;
  uint64_t v11 = _Block_copy(&v16);
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v8, sel_setFoundItemsHandler_, v11);
  _Block_release(v11);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v9;
  id v20 = sub_22BE29E54;
  uint64_t v21 = v13;
  uint64_t v16 = MEMORY[0x263EF8330];
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_22BE0469C;
  id v19 = &block_descriptor_32;
  id v14 = _Block_copy(&v16);
  sub_22BE91C58();
  swift_release();
  objc_msgSend(v8, sel_setCompletionHandler_, v14);
  _Block_release(v14);
  dispatch_suspend(*(dispatch_object_t *)(v1
                                        + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue));
  objc_msgSend(v8, sel_start);
  uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery);
  *(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery) = v8;
  swift_release();
}

uint64_t sub_22BE26620()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22BE26668()
{
  return sub_22BE28174((uint64_t (*)(void, void, void, void, void))sub_22BE25E08);
}

id static CSSearchQuery.withString(_:fetchedAttributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02AD0]), sel_init);
  if (a3)
  {
    id v5 = (void *)sub_22BE92EA8();
    objc_msgSend(v4, sel_setFetchAttributes_, v5);
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F02AC8]);
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithQueryString_queryContext_, v8, v7);

  return v9;
}

uint64_t sub_22BE26760(unint64_t a1, int a2, void (**a3)(char *, char *, uint64_t), uint64_t a4)
{
  v47[1] = a4;
  int v53 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22BE92568();
  id v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v54 = (char *)v47 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v58 = (char *)v47 - v14;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_22BE937E8();
    uint64_t v15 = result;
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v57 = a3;
  char v51 = v9;
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = 0;
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x230F56140](v17, a1);
      }
      else {
        id v19 = *(id *)(a1 + 8 * v17 + 32);
      }
      id v20 = v19;
      id v21 = objc_msgSend(v19, sel_attributeSet);
      id v22 = objc_msgSend(v21, sel_contentType);

      if (v22)
      {
        uint64_t v23 = sub_22BE92CD8();
        uint64_t v25 = v24;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_22BDCC94C(0, v18[2] + 1, 1, v18);
        }
        unint64_t v27 = v18[2];
        unint64_t v26 = v18[3];
        if (v27 >= v26 >> 1) {
          uint64_t v18 = sub_22BDCC94C((void *)(v26 > 1), v27 + 1, 1, v18);
        }
        void v18[2] = v27 + 1;
        uint64_t v28 = &v18[2 * v27];
        v28[4] = v23;
        v28[5] = v25;
      }
      else
      {
      }
      ++v17;
    }
    while (v15 != v17);
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v18[2];
  if (v29)
  {
    id v30 = (uint64_t *)(v57 + 2);
    swift_bridgeObjectRetain();
    uint64_t v56 = v30;
    swift_beginAccess();
    uint64_t v31 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 6);
    os_log_type_t v32 = (void (**)(char *, uint64_t, uint64_t))(v51 + 4);
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v51 + 2);
    uint64_t v33 = v18 + 5;
    uint64_t v49 = (unint64_t)(v51 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 6);
    uint64_t v35 = v54;
    uint64_t v34 = (uint64_t)v55;
    ++v51;
    uint64_t v52 = v32;
    while (1)
    {
      uint64_t v37 = *(v33 - 1);
      uint64_t v36 = *v33;
      swift_bridgeObjectRetain();
      if ((sub_22BE92DE8() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_22BE92578();
        if ((*v31)(v34, 1, v8) != 1)
        {
          uint64_t v38 = v58;
          (*v52)(v58, v34, v8);
          unint64_t v39 = *v57;
          (*v57)(v35, v38, v8);
          if (v53)
          {
            uint64_t v40 = *v51;
            (*v51)(v35, v8);
            goto LABEL_32;
          }
          uint64_t v41 = *v56;
          swift_bridgeObjectRetain();
          char v42 = sub_22BE097E8(v37, v36, v41);
          swift_bridgeObjectRelease();
          uint64_t v43 = v48;
          v39(v48, v35, v8);
          if (v42)
          {
            unsigned __int8 v44 = 0;
          }
          else
          {
            unint64_t v45 = (void *)sub_22BE92418();
            uint64_t v46 = (void *)sub_22BE92EA8();
            unsigned __int8 v44 = objc_msgSend(v45, sel_doc_conformsToAnyInContentTypes_, v46);
          }
          uint64_t v40 = *v51;
          (*v51)(v43, v8);
          v40(v54, v8);
          if (v44)
          {
            uint64_t v35 = v54;
LABEL_32:
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_22BE53858(&v59, v37, v36);
            swift_endAccess();
            v40(v58, v8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v34 = (uint64_t)v55;
          }
          else
          {
            v40(v58, v8);
            swift_bridgeObjectRelease();
            uint64_t v35 = v54;
            uint64_t v34 = (uint64_t)v55;
          }
          uint64_t v31 = v50;
          goto LABEL_22;
        }
        sub_22BE29F0C(v34);
      }
      swift_bridgeObjectRelease();
LABEL_22:
      v33 += 2;
      if (!--v29) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE26D10(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_22BDD9D50(0, &qword_2684875F8);
  uint64_t v2 = sub_22BE92EB8();
  sub_22BE91C58();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_22BE26D94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22BE92B08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22BE92B58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x230F57630](a2 + 16);
  if (v14)
  {
    uint64_t v15 = (char *)v14;
    if (a1)
    {
      aBlock[0] = a1;
      id v16 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268487218);
      type metadata accessor for CSSearchQueryError(0);
      if ((swift_dynamicCast() & 1) == 0
        || (uint64_t v17 = v23,
            sub_22BDD697C(&qword_268486D90, type metadata accessor for CSSearchQueryError),
            sub_22BE92038(),
            v17,
            aBlock[0] != -2003))
      {
        if (qword_26AF00288 != -1) {
          swift_once();
        }
        sub_22BE93158();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_22BE99770;
        uint64_t v19 = sub_22BE92078();
        *(void *)(v18 + 56) = sub_22BDD9D50(0, (unint64_t *)&unk_2684880A0);
        *(void *)(v18 + 64) = sub_22BE29EA4();
        *(void *)(v18 + 32) = v19;
        sub_22BE92588();
        swift_bridgeObjectRelease();
      }
      dispatch_resume(*(dispatch_object_t *)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue]);
    }
    else
    {
      v22[1] = *(id *)(v14 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v15;
      *(void *)(v20 + 24) = a3;
      aBlock[4] = sub_22BE29E9C;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22BDD0BA8;
      void aBlock[3] = &block_descriptor_38;
      id v21 = _Block_copy(aBlock);
      v22[0] = v15;
      sub_22BE91C58();
      sub_22BE92B38();
      uint64_t v23 = (void *)MEMORY[0x263F8EE78];
      sub_22BDD697C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
      sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
      sub_22BE934E8();
      MEMORY[0x230F55CD0](0, v13, v9, v21);
      _Block_release(v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      swift_release();
    }
  }
}

void sub_22BE27214(char *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = &a1[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_utiDescriptors];
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  int64_t v6 = *(void *)(*(void *)v4 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    id v21 = v3;
    uint64_t v24 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_22BDFE328(0, v6, 0);
    uint64_t v8 = 32;
    uint64_t v9 = v24;
    do
    {
      uint64_t v10 = *(void *)(v5 + v8);
      uint64_t v24 = v9;
      unint64_t v12 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1)
      {
        sub_22BDFE328(v11 > 1, v12 + 1, 1);
        uint64_t v9 = v24;
      }
      *(void *)(v9 + 16) = v12 + 1;
      *(void *)(v9 + 8 * v12 + 32) = v10;
      v8 += 48;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    id v3 = v21;
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  uint64_t v13 = (uint64_t *)(a2 + 16);
  uint64_t v24 = v7;
  uint64_t v14 = *(void *)(v9 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v14; ++i)
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_22BE52EC0(v16);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_22BDFECA8(v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = *v13;
  if (*(void *)(v17 + 16) <= *(void *)(*v13 + 16) >> 3)
  {
    uint64_t v22 = *v13;
    swift_bridgeObjectRetain();
    sub_22BE34E04(v17);
    swift_bridgeObjectRelease();
    uint64_t v19 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_22BE2818C(v17, v18);
    swift_bridgeObjectRelease();
  }
  char v23 = 0;
  uint64_t v20 = v3;
  sub_22BE29728(v19, (uint64_t)v20, &v23);
  swift_bridgeObjectRelease();

  if (v23 == 1)
  {
    swift_beginAccess();
    sub_22BE27D10((void **)v4);
    swift_endAccess();
  }
  dispatch_resume(*(dispatch_object_t *)&v20[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue]);
}

uint64_t sub_22BE27478(uint64_t *a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v4 = v3;
  id v78 = a3;
  uint64_t v79 = a2;
  uint64_t v6 = sub_22BE92388();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22BE92568();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v87 = v17;
  sub_22BE92578();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_22BE29F0C((uint64_t)v12);
LABEL_26:
    if (qword_26AF00288 != -1) {
      swift_once();
    }
    sub_22BE93158();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_22BE99770;
    *(void *)(v59 + 56) = MEMORY[0x263F8D310];
    *(void *)(v59 + 64) = sub_22BDF8220();
    *(void *)(v59 + 32) = v87;
    *(void *)(v59 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v18;
    swift_bridgeObjectRetain();
    sub_22BE92588();
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v19 = sub_22BE92428();
  id v21 = v16;
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_26;
  }
  uint64_t v75 = v19;
  uint64_t v81 = (void *)v19;
  uint64_t v82 = v20;
  uint64_t v77 = v20;
  unint64_t v70 = sub_22BE0F59C();
  uint64_t v73 = sub_22BE93448();
  uint64_t v74 = v22;
  uint64_t v23 = sub_22BE92488();
  sub_22BE92378();
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v72 = v13;
  uint64_t v71 = v14;
  if (!v24 || (unint64_t v25 = sub_22BDFD428((uint64_t)v9), (v26 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_13:
    uint64_t v29 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v68 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v27 = v68;
  int64_t v28 = *(void *)(v68 + 16);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  os_log_type_t v69 = v21;
  uint64_t v76 = v4;
  uint64_t v81 = (void *)MEMORY[0x263F8EE78];
  sub_22BDFE2E8(0, v28, 0);
  uint64_t v29 = v81;
  uint64_t v30 = v27 + 40;
  do
  {
    uint64_t v31 = sub_22BE92D08();
    uint64_t v33 = v32;
    uint64_t v81 = v29;
    unint64_t v35 = v29[2];
    unint64_t v34 = v29[3];
    if (v35 >= v34 >> 1)
    {
      sub_22BDFE2E8(v34 > 1, v35 + 1, 1);
      uint64_t v29 = v81;
    }
    v30 += 16;
    v29[2] = v35 + 1;
    uint64_t v36 = &v29[2 * v35];
    v36[4] = v31;
    v36[5] = v33;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  uint64_t v4 = v76;
  id v21 = v69;
LABEL_14:
  uint64_t v37 = (uint64_t *)(v79 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_utiDescriptors);
  swift_beginAccess();
  uint64_t v38 = sub_22BE29694(*v37, v73, v74);
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  uint64_t v76 = v4;
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (v38 < 0)
    {
      __break(1u);
    }
    else
    {
      os_log_type_t v69 = v21;
      if ((unint64_t)v38 < *(void *)(*v37 + 16))
      {
        uint64_t v41 = (void *)(*v37 + 48 * v38);
        uint64_t v42 = v41[5];
        uint64_t v43 = v41[6];
        uint64_t v44 = v41[7];
        uint64_t v45 = v41[8];
        uint64_t v46 = v41[9];
        uint64_t v81 = (void *)v41[4];
        uint64_t v82 = v42;
        uint64_t v83 = v43;
        uint64_t v84 = v44;
        uint64_t v85 = v45;
        uint64_t v86 = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22BE53858(&v80, v87, v18);
        swift_bridgeObjectRelease();
        uint64_t v47 = v29[2];
        if (v47)
        {
          swift_bridgeObjectRetain();
          uint64_t v48 = v29 + 5;
          do
          {
            uint64_t v49 = *(v48 - 1);
            uint64_t v50 = *v48;
            swift_bridgeObjectRetain_n();
            sub_22BE53858(&v80, v49, v50);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v48 += 2;
            --v47;
          }
          while (v47);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        char v51 = v81;
        uint64_t v52 = v82;
        uint64_t v53 = v83;
        uint64_t v54 = v84;
        uint64_t v55 = v86;
        uint64_t v87 = v85;
        swift_beginAccess();
        uint64_t v56 = (void *)*v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v37 = (uint64_t)v56;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_22BE45834(v56);
          uint64_t v56 = (void *)result;
          *uint64_t v37 = result;
        }
        if (v38 >= v56[2])
        {
          __break(1u);
        }
        else
        {
          unint64_t v58 = &v56[6 * v38];
          v58[4] = v51;
          v58[5] = v52;
          v58[6] = v53;
          v58[7] = v54;
          v58[8] = v87;
          v58[9] = v55;
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        return result;
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF00518);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE99770;
  *(void *)(inited + 32) = v87;
  *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v18;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_22BDFECA8(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v18 = sub_22BDFECA8((uint64_t)v29);
  swift_bridgeObjectRelease();
  uint64_t v81 = (void *)v75;
  uint64_t v82 = v77;
  uint64_t v40 = sub_22BE93448();
  uint64_t v4 = v61;
  swift_beginAccess();
  uint64_t v29 = (void *)*v37;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v37 = (uint64_t)v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_36:
    uint64_t v29 = sub_22BE7D90C(0, v29[2] + 1, 1, v29);
    *uint64_t v37 = (uint64_t)v29;
  }
  unint64_t v64 = v29[2];
  unint64_t v63 = v29[3];
  if (v64 >= v63 >> 1)
  {
    uint64_t v29 = sub_22BE7D90C((void *)(v63 > 1), v64 + 1, 1, v29);
    *uint64_t v37 = (uint64_t)v29;
  }
  v29[2] = v64 + 1;
  uint64_t v65 = &v29[6 * v64];
  v65[4] = v38;
  v65[5] = v18;
  uint64_t v66 = v77;
  v65[6] = v75;
  v65[7] = v66;
  v65[8] = v40;
  v65[9] = v4;
  swift_endAccess();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v21, v72);
  *id v78 = 1;
  return result;
}

uint64_t sub_22BE27D10(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22BE45834(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_22BE285FC(v5);
  *a1 = v2;
  return result;
}

id DOCUTIDescriptorCollector.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUTIDescriptorCollector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DOCUTIDescriptorCollector()
{
  return self;
}

uint64_t destroy for DOCUTIDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DOCUTIDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DOCUTIDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCUTIDescriptor(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCUTIDescriptor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCUTIDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUTIDescriptor()
{
  return &type metadata for DOCUTIDescriptor;
}

uint64_t method lookup function for DOCUTIDescriptorCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCUTIDescriptorCollector);
}

uint64_t dispatch thunk of DOCUTIDescriptorCollector.filteredUTIs(matching:allowedContentTypes:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DOCUTIDescriptorCollector.cancelGathering()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t sub_22BE28114()
{
  swift_release();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22BE2815C()
{
  return sub_22BE28174((uint64_t (*)(void, void, void, void, void))sub_22BE260E0);
}

uint64_t sub_22BE28174(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_22BE2818C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_22BE24EB8();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_22BE939F8();
      swift_bridgeObjectRetain();
      sub_22BE92D48();
      uint64_t v19 = sub_22BE93A48();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_22BE938C8() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        char v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_22BE938C8() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_22BE29388((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_22BE24EB8();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_22BE29388((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_22BE24EB8();
      MEMORY[0x230F57540](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_22BE285FC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_22BE93868();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_22BE28D2C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v113 = result;
  unint64_t v110 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      id v101 = v11;
      uint64_t v112 = v8;
      if (v12 >= 2)
      {
        uint64_t v102 = *v110;
        do
        {
          unint64_t v103 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v102) {
            goto LABEL_159;
          }
          v104 = v101;
          uint64_t v105 = *(void *)&v101[16 * v103 + 32];
          uint64_t v106 = *(void *)&v101[16 * v12 + 24];
          sub_22BE28E24((char *)(v102 + 48 * v105), (char *)(v102 + 48 * *(void *)&v101[16 * v12 + 16]), v102 + 48 * v106, __dst);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v104 = sub_22BE29374((uint64_t)v104);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_149;
          }
          v107 = &v104[16 * v103 + 32];
          *(void *)v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v12 > v108) {
            goto LABEL_150;
          }
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          id v101 = v104;
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_22BE92F28();
    *(void *)(v7 + 16) = v6;
    uint64_t v112 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v111 = *a1 + 24;
  uint64_t v109 = *a1 + 40;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v114 = v3;
  uint64_t v115 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = v10 + 48 * v9;
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = *(void *)(v14 + 24);
    uint64_t v17 = v10 + 48 * v13;
    if (v15 == *(void *)(v17 + 16) && v16 == *(void *)(v17 + 24))
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_22BE938C8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v111 + 48 * v20);
    do
    {
      uint64_t v23 = v10 + 48 * v9;
      if (*(v21 - 1) == *(void *)(v23 + 16) && *v21 == *(void *)(v23 + 24))
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_22BE938C8()))
      {
        goto LABEL_36;
      }
      uint64_t v22 = v20 + 1;
      v21 += 6;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 48 * v20;
        uint64_t v26 = 48 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            char v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            uint64_t v31 = *(void *)(v10 + v26 + 32);
            uint64_t v32 = *(void *)(v10 + v26 + 40);
            long long v34 = *(_OWORD *)(v10 + v26);
            long long v33 = *(_OWORD *)(v10 + v26 + 16);
            long long v36 = *(_OWORD *)(v10 + v25 - 32);
            long long v35 = *(_OWORD *)(v10 + v25 - 16);
            *char v29 = *(_OWORD *)(v10 + v25 - 48);
            v29[1] = v36;
            v29[2] = v35;
            *(_OWORD *)(v30 - 48) = v34;
            *(_OWORD *)(v30 - 32) = v33;
            *(void *)(v30 - 16) = v31;
            *(void *)(v30 - 8) = v32;
          }
          ++v28;
          v25 -= 48;
          v26 += 48;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v113) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_22BE29104(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v52 = *((void *)v11 + 2);
    unint64_t v51 = *((void *)v11 + 3);
    unint64_t v12 = v52 + 1;
    if (v52 >= v51 >> 1) {
      unint64_t v11 = sub_22BE29104((char *)(v51 > 1), v52 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v53 = v11 + 32;
    uint64_t v54 = &v11[16 * v52 + 32];
    *(void *)uint64_t v54 = v13;
    *((void *)v54 + 1) = v9;
    if (v52)
    {
      uint64_t v10 = v115;
      while (1)
      {
        unint64_t v55 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v60 = &v53[16 * v12];
          uint64_t v61 = *((void *)v60 - 8);
          uint64_t v62 = *((void *)v60 - 7);
          BOOL v66 = __OFSUB__(v62, v61);
          uint64_t v63 = v62 - v61;
          if (v66) {
            goto LABEL_135;
          }
          uint64_t v65 = *((void *)v60 - 6);
          uint64_t v64 = *((void *)v60 - 5);
          BOOL v66 = __OFSUB__(v64, v65);
          uint64_t v58 = v64 - v65;
          char v59 = v66;
          if (v66) {
            goto LABEL_136;
          }
          unint64_t v67 = v12 - 2;
          uint64_t v68 = &v53[16 * v12 - 32];
          uint64_t v70 = *(void *)v68;
          uint64_t v69 = *((void *)v68 + 1);
          BOOL v66 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          if (v66) {
            goto LABEL_138;
          }
          BOOL v66 = __OFADD__(v58, v71);
          uint64_t v72 = v58 + v71;
          if (v66) {
            goto LABEL_141;
          }
          if (v72 >= v63)
          {
            id v90 = &v53[16 * v55];
            uint64_t v92 = *(void *)v90;
            uint64_t v91 = *((void *)v90 + 1);
            BOOL v66 = __OFSUB__(v91, v92);
            uint64_t v93 = v91 - v92;
            if (v66) {
              goto LABEL_145;
            }
            BOOL v83 = v58 < v93;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v84 = *((void *)v11 + 4);
            uint64_t v85 = *((void *)v11 + 5);
            BOOL v66 = __OFSUB__(v85, v84);
            uint64_t v77 = v85 - v84;
            char v78 = v66;
            goto LABEL_99;
          }
          uint64_t v57 = *((void *)v11 + 4);
          uint64_t v56 = *((void *)v11 + 5);
          BOOL v66 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          char v59 = v66;
        }
        if (v59) {
          goto LABEL_137;
        }
        unint64_t v67 = v12 - 2;
        uint64_t v73 = &v53[16 * v12 - 32];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v76 = __OFSUB__(v74, v75);
        uint64_t v77 = v74 - v75;
        char v78 = v76;
        if (v76) {
          goto LABEL_140;
        }
        uint64_t v79 = &v53[16 * v55];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v66 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v66) {
          goto LABEL_143;
        }
        if (__OFADD__(v77, v82)) {
          goto LABEL_144;
        }
        if (v77 + v82 >= v58)
        {
          BOOL v83 = v58 < v82;
LABEL_105:
          if (v83) {
            unint64_t v55 = v67;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v78) {
          goto LABEL_139;
        }
        uint64_t v86 = &v53[16 * v55];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v66 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v66) {
          goto LABEL_142;
        }
        if (v89 < v77) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v94 = v55 - 1;
        if (v55 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v95 = v10;
        id v96 = &v53[16 * v94];
        uint64_t v97 = *(void *)v96;
        id v98 = &v53[16 * v55];
        uint64_t v99 = *((void *)v98 + 1);
        sub_22BE28E24((char *)(v95 + 48 * *(void *)v96), (char *)(v95 + 48 * *(void *)v98), v95 + 48 * v99, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v99 < v97) {
          goto LABEL_132;
        }
        if (v55 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)id v96 = v97;
        *(void *)&v53[16 * v94 + 8] = v99;
        unint64_t v100 = *((void *)v11 + 2);
        if (v55 >= v100) {
          goto LABEL_134;
        }
        unint64_t v12 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        *((void *)v11 + 2) = v100 - 1;
        BOOL v83 = v100 > 2;
        uint64_t v10 = v115;
        if (!v83) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v115;
LABEL_15:
    uint64_t v3 = v114;
    if (v9 >= v114)
    {
      uint64_t v8 = v112;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v113)) {
    goto LABEL_153;
  }
  if (v13 + v113 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v13 + v113;
  }
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      uint64_t v38 = v109 + 48 * v9;
      do
      {
        uint64_t v39 = v10 + 48 * v9;
        uint64_t v40 = *(void *)(v39 + 16);
        uint64_t v41 = *(void *)(v39 + 24);
        uint64_t v42 = v13;
        uint64_t v43 = v38;
        do
        {
          BOOL v44 = v40 == *(void *)(v43 - 72) && v41 == *(void *)(v43 - 64);
          if (v44 || (sub_22BE938C8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v45 = (_OWORD *)(v43 - 40);
          uint64_t v46 = (_OWORD *)(v43 - 88);
          long long v48 = *(_OWORD *)(v43 - 72);
          long long v47 = *(_OWORD *)(v43 - 56);
          *(void *)(v43 - 48) = *(void *)v43;
          v43 -= 48;
          uint64_t v40 = *(void *)(v43 + 24);
          uint64_t v41 = *(void *)(v43 + 32);
          uint64_t v49 = *(void *)(v43 + 40);
          long long v50 = *(_OWORD *)(v43 + 8);
          *uint64_t v45 = *v46;
          v45[1] = v48;
          v45[2] = v47;
          *(_OWORD *)(v43 - 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v50;
          *(void *)(v43 - 24) = v40;
          *(void *)(v43 - 16) = v41;
          *(void *)(v43 - 8) = v49;
          ++v42;
        }
        while (v9 != v42);
        ++v9;
        v38 += 48;
      }
      while (v9 != v37);
      uint64_t v9 = v37;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_22BE93768();
  __break(1u);
  return result;
}

uint64_t sub_22BE28D2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 48 * a3 + 40;
LABEL_5:
    uint64_t v9 = v7 + 48 * v4;
    uint64_t result = *(void *)(v9 + 16);
    uint64_t v10 = *(void *)(v9 + 24);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 72) && v10 == *(void *)(v12 - 64);
      if (v13 || (uint64_t result = sub_22BE938C8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 48;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = (_OWORD *)(v12 - 40);
      uint64_t v15 = (_OWORD *)(v12 - 88);
      long long v17 = *(_OWORD *)(v12 - 72);
      long long v16 = *(_OWORD *)(v12 - 56);
      *(void *)(v12 - 48) = *(void *)v12;
      v12 -= 48;
      uint64_t result = *(void *)(v12 + 24);
      uint64_t v10 = *(void *)(v12 + 32);
      uint64_t v18 = *(void *)(v12 + 40);
      long long v19 = *(_OWORD *)(v12 + 8);
      _OWORD *v14 = *v15;
      v14[1] = v17;
      void v14[2] = v16;
      *(_OWORD *)(v12 - 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v19;
      *(void *)(v12 - 24) = result;
      *(void *)(v12 - 16) = v10;
      *(void *)(v12 - 8) = v18;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE28E24(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      long long v19 = &v4[48 * v11];
      char v29 = v19;
      uint64_t v31 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        uint64_t v20 = (char *)(a3 - 48);
        do
        {
          unint64_t v21 = v20 + 48;
          BOOL v22 = *((void *)v19 - 4) == *((void *)v6 - 4) && *((void *)v19 - 3) == *((void *)v6 - 3);
          if (v22 || (sub_22BE938C8() & 1) == 0)
          {
            char v29 = v19 - 48;
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              long long v26 = *((_OWORD *)v19 - 3);
              long long v27 = *((_OWORD *)v19 - 1);
              *((_OWORD *)v20 + 1) = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 2) = v27;
              *(_OWORD *)uint64_t v20 = v26;
            }
            uint64_t v23 = v6;
            v19 -= 48;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 48;
            if (v21 != v6 || v20 >= v6)
            {
              long long v24 = *(_OWORD *)v23;
              long long v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v20 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v20 + 2) = v25;
              *(_OWORD *)uint64_t v20 = v24;
            }
            uint64_t v31 = v6 - 48;
            if (v23 <= v7) {
              break;
            }
          }
          v20 -= 48;
          uint64_t v6 = v23;
        }
        while (v19 > v4);
      }
LABEL_48:
      sub_22BE29200((void **)&v31, &v30, &v29);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    uint64_t v12 = &v4[48 * v9];
    char v29 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      BOOL v13 = v4;
      while (1)
      {
        BOOL v14 = *((void *)v6 + 2) == *((void *)v13 + 2) && *((void *)v6 + 3) == *((void *)v13 + 3);
        if (v14 || (sub_22BE938C8() & 1) == 0)
        {
          uint64_t v4 = v13 + 48;
          long long v16 = v13;
          uint64_t v15 = v6;
          if (v7 == v13)
          {
            v13 += 48;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v13 += 48;
          }
        }
        else
        {
          uint64_t v15 = v6 + 48;
          long long v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_22;
          }
        }
        long long v17 = *(_OWORD *)v16;
        long long v18 = *((_OWORD *)v16 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v16 + 1);
        *((_OWORD *)v7 + 2) = v18;
        *(_OWORD *)uint64_t v7 = v17;
LABEL_22:
        v7 += 48;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v30 = v4;
        uint64_t v31 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

char *sub_22BE29104(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2684875F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  BOOL v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_22BE29200(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_22BE93838();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_22BE292D0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_22BE93838();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

char *sub_22BE29374(uint64_t a1)
{
  return sub_22BE29104(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22BE29388(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                sub_22BE91C58();
                return sub_22BE67F58(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        long long v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_22BE939F8();
        swift_bridgeObjectRetain();
        sub_22BE92D48();
        uint64_t v22 = sub_22BE93A48();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_22BE938C8() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          long long v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_22BE938C8() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_22BE29680(uint64_t a1)
{
  return sub_22BDFE6CC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_22BE29694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (unint64_t i = (void *)(a1 + 72); ; i += 6)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_22BE938C8() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_22BE29728(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v7 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    long long v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_22BE27478(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 3;
      if (v13 + 3 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        int64_t v13 = v18;
        goto LABEL_15;
      }
      int64_t v21 = v13 + 4;
      if (v13 + 4 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17) {
        break;
      }
    }
LABEL_15:
    unint64_t v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    int64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v21;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22BE298E0(uint64_t a1)
{
  uint64_t v1 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v9 >= v5) {
      goto LABEL_24;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_24;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_24;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_24;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10)
          {
            int64_t v11 = v9 + 4;
            if (v11 >= v5)
            {
LABEL_24:
              uint64_t v12 = 0;
              goto LABEL_25;
            }
            uint64_t v10 = *(void *)(v1 + 8 * v11);
            if (!v10)
            {
              while (1)
              {
                int64_t v7 = v11 + 1;
                if (__OFADD__(v11, 1)) {
                  goto LABEL_27;
                }
                if (v7 >= v5) {
                  goto LABEL_24;
                }
                uint64_t v10 = *(void *)(v1 + 8 * v7);
                ++v11;
                if (v10) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v7 = v11;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    char v8 = sub_22BE782E8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v12 = 1;
LABEL_25:
      swift_release();
      return v12;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22BE29A88(uint64_t result)
{
  uint64_t v2 = v1;
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v24 = result + 32;
  unint64_t v22 = *(void *)(result + 16);
  do
  {
    uint64_t v21 = v5;
    if (v4 <= v3) {
      unint64_t v6 = v3;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v23 = v6;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v24 + 48 * v4;
      long long v29 = *(_OWORD *)v7;
      uint64_t v8 = *(void *)(v7 + 24);
      uint64_t v9 = *(void *)(v7 + 32);
      uint64_t v10 = *(void *)(v7 + 40);
      uint64_t v26 = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      char v11 = sub_22BE782E8();
      swift_bridgeObjectRelease();
      unint64_t v28 = v4 + 1;
      uint64_t v25 = v9;
      if (v11) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = swift_bridgeObjectRetain();
      char v13 = sub_22BE298E0(v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      uint64_t v27 = v2;
      sub_22BE0F59C();
      uint64_t v14 = sub_22BE93428();
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = v14 + 40;
        while (1)
        {
          swift_bridgeObjectRetain();
          char v17 = sub_22BE782E8();
          swift_bridgeObjectRelease();
          if (v17) {
            break;
          }
          v16 += 16;
          if (!--v15) {
            goto LABEL_7;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
        unint64_t v3 = v22;
        break;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v3 = v22;
      unint64_t v6 = v23;
      uint64_t v2 = v27;
      unint64_t v4 = v28;
      if (v28 == v22) {
        return v21;
      }
    }
    uint64_t v5 = v21;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_22BDFE308(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v5 = v21;
    }
    unint64_t v4 = v28;
    unint64_t v19 = *(void *)(v5 + 16);
    unint64_t v18 = *(void *)(v5 + 24);
    if (v19 >= v18 >> 1)
    {
      uint64_t result = sub_22BDFE308(v18 > 1, v19 + 1, 1);
      uint64_t v5 = v21;
    }
    *(void *)(v5 + 16) = v19 + 1;
    uint64_t v20 = v5 + 48 * v19;
    *(_OWORD *)(v20 + 32) = v29;
    *(void *)(v20 + 48) = v26;
    *(void *)(v20 + 56) = v8;
    *(void *)(v20 + 64) = v25;
    *(void *)(v20 + 72) = v10;
  }
  while (v28 != v3);
  return v5;
}

uint64_t sub_22BE29D58()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE29D90()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE29DD0(unint64_t a1)
{
  return sub_22BE26760(a1, *(unsigned __int8 *)(v1 + 16), *(void (***)(char *, char *, uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_22BE29DDC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE29E14()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE29E54(void *a1)
{
  sub_22BE26D94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_22BE29E5C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE29E9C()
{
  sub_22BE27214(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_22BE29EA4()
{
  unint64_t result = qword_268488440;
  if (!qword_268488440)
  {
    sub_22BDD9D50(255, (unint64_t *)&unk_2684880A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268488440);
  }
  return result;
}

uint64_t sub_22BE29F0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static UIAlertController.doc_presentPassphraseInputAlert(title:message:actionTitle:alertPresenting:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  char v17 = (void *)swift_allocObject();
  v17[2] = a1;
  uint64_t v17[3] = a2;
  void v17[4] = a3;
  v17[5] = a4;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = a5;
  v17[9] = a6;
  v17[10] = a7;
  v20[4] = sub_22BE2A774;
  v20[5] = v17;
  v20[0] = MEMORY[0x263EF8330];
  v20[1] = 1107296256;
  v20[2] = sub_22BDD0BA8;
  void v20[3] = &block_descriptor_9;
  unint64_t v18 = _Block_copy(v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  id v19 = a7;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v18);
}

void sub_22BE2A0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    char v11 = 0;
  }
  uint64_t v12 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v11, v12, 1);

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v45 = sub_22BE2A85C;
  uint64_t v46 = (void *)v14;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v42 = 1107296256;
  uint64_t v43 = sub_22BE2A864;
  BOOL v44 = &block_descriptor_6_1;
  uint64_t v15 = _Block_copy(&aBlock);
  sub_22BE91C58();
  swift_release();
  id v40 = v13;
  objc_msgSend(v13, sel_addTextFieldWithConfigurationHandler_, v15);
  _Block_release(v15);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  char v17 = (void *)(v16 + 16);
  unint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v16;
  void v18[3] = a5;
  void v18[4] = a6;
  id v19 = (void *)swift_allocObject();
  void v19[2] = sub_22BE2AA18;
  v19[3] = v18;
  v19[4] = v14;
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_22BE2AB10;
  uint64_t v46 = v19;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v42 = 1107296256;
  uint64_t v43 = sub_22BE2A864;
  BOOL v44 = &block_descriptor_18;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v39 = self;
  id v22 = objc_msgSend(v39, sel_actionWithTitle_style_handler_, v20, 0, v21);
  _Block_release(v21);

  objc_msgSend(v22, sel_setEnabled_, 0);
  id v23 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v24 = *MEMORY[0x263F83AC8];
  swift_beginAccess();
  uint64_t v25 = *(void **)(v14 + 16);
  uint64_t v26 = self;
  id v27 = v25;
  id v28 = objc_msgSend(v26, sel_mainQueue);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v22;
  uint64_t v45 = sub_22BE2AC14;
  uint64_t v46 = (void *)v29;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v42 = 1107296256;
  uint64_t v43 = sub_22BE428D8;
  BOOL v44 = &block_descriptor_24_0;
  unint64_t v30 = _Block_copy(&aBlock);
  id v31 = v22;
  swift_release();
  id v32 = objc_msgSend(v23, sel_addObserverForName_object_queue_usingBlock_, v24, v27, v28, v30);
  _Block_release(v30);

  swift_beginAccess();
  *char v17 = v32;
  swift_unknownObjectRelease();
  id v33 = (id)_DocumentManagerBundle();
  if (v33)
  {
    long long v34 = v33;
    sub_22BE91F78();

    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = sub_22BE2AA18;
    *(void *)(v35 + 24) = v18;
    sub_22BE91C58();
    int64_t v36 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_22BE2AD1C;
    uint64_t v46 = (void *)v35;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v42 = 1107296256;
    uint64_t v43 = sub_22BE2A864;
    BOOL v44 = &block_descriptor_30_2;
    uint64_t v37 = _Block_copy(&aBlock);
    swift_release();
    id v38 = objc_msgSend(v39, sel_actionWithTitle_style_handler_, v36, 1, v37, 0xE600000000000000);
    _Block_release(v37);

    objc_msgSend(v40, sel_addAction_, v31);
    objc_msgSend(v40, sel_addAction_, v38);
    objc_msgSend(v40, sel_setPreferredAction_, v31);
    objc_msgSend(a9, sel_presentViewController_animated_completion_, v40, 1, 0);

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22BE2A71C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

void sub_22BE2A774()
{
  sub_22BE2A0C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_22BE2A7AC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_22BE2A7E4(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setSecureTextEntry_, 1);
  swift_beginAccess();
  unint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  return a1;
}

id sub_22BE2A85C(void *a1)
{
  return sub_22BE2A7E4(a1, v1);
}

void sub_22BE2A864(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void (**)(void))(a1 + 32);
  sub_22BE91C58();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_22BE2A8CC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE2A904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(a4 + 16);
  if (v10)
  {
    char v11 = self;
    swift_unknownObjectRetain();
    id v12 = objc_msgSend(v11, sel_defaultCenter);
    objc_msgSend(v12, sel_removeObserver_, v10);
    swift_unknownObjectRelease();
  }
  return a5(a1, a2, a3);
}

uint64_t sub_22BE2A9D8()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE2AA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22BE2A904(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
}

id sub_22BE2AA24(uint64_t a1, void (*a2)(uint64_t, uint64_t, void), uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  id result = *(id *)(a4 + 16);
  if (result)
  {
    id result = objc_msgSend(result, sel_text);
    if (result)
    {
      uint64_t v7 = result;
      uint64_t v8 = sub_22BE92CD8();
      uint64_t v10 = v9;

      a2(v8, v10, 0);
      return (id)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE2AAD0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_22BE2AB10(uint64_t a1)
{
  return sub_22BE2AA24(a1, *(void (**)(uint64_t, uint64_t, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

id sub_22BE2AB1C(uint64_t a1, void *a2)
{
  sub_22BE91F28();
  if (!v13)
  {
    sub_22BDD473C((uint64_t)v12);
    goto LABEL_9;
  }
  sub_22BE2AD24();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    BOOL v9 = 0;
    return objc_msgSend(a2, sel_setEnabled_, v9);
  }
  id v3 = objc_msgSend(v11, sel_text);
  if (!v3)
  {

    goto LABEL_9;
  }
  id v4 = v3;
  uint64_t v5 = sub_22BE92CD8();
  unint64_t v7 = v6;

  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v9 = v8 != 0;
  return objc_msgSend(a2, sel_setEnabled_, v9);
}

id sub_22BE2AC14(uint64_t a1)
{
  return sub_22BE2AB1C(a1, *(void **)(v1 + 16));
}

void sub_22BE2AC1C(uint64_t a1, void (*a2)(void, void, id))
{
  sub_22BE92CD8();
  id v3 = objc_allocWithZone(MEMORY[0x263F087E8]);
  id v4 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithDomain_code_userInfo_, v4, 3072, 0);

  a2(0, 0, v5);
}

uint64_t sub_22BE2ACE4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE2AD1C(uint64_t a1)
{
  sub_22BE2AC1C(a1, *(void (**)(void, void, id))(v1 + 16));
}

unint64_t sub_22BE2AD24()
{
  unint64_t result = qword_268487600;
  if (!qword_268487600)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268487600);
  }
  return result;
}

Swift::Void __swiftcall DOCAnalyticsManager.sendAPIAbuseEvent(_:)(DocumentManagerExecutables::DOCAnalyticsAPIAbuseEvent *a1)
{
  Swift::String_optional bundleID = a1->bundleID;
  v3[0] = a1->name;
  v3[1] = bundleID;
  v3[2] = a1->hostIdentifier;
  DocumentManagerExecutables::DOCAnalyticsAPIAbuseEvent::EventType type = a1->type;
  sub_22BE15F98((uint64_t)v3);
  sub_22BE1485C((uint64_t)v3, v1);
  sub_22BE2AFE4((uint64_t)v3);
}

id DOCAnalyticsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCAnalyticsManager.sendItemTaggedEvent(_:)(DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent *a1)
{
}

Swift::Void __swiftcall DOCAnalyticsManager.sendSidebarTagSelectedEvent(_:)(DocumentManagerExecutables::DOCAnalyticsSidebarTagSelectedEvent *a1)
{
  Swift::String_optional bundleID = a1->bundleID;
  v3[0] = a1->name;
  v3[1] = bundleID;
  Swift::Bool isUserSelection = a1->isUserSelection;
  sub_22BDCA53C((uint64_t)v3);
  sub_22BE14EE4((uint64_t)v3, v1);
  sub_22BDC91E0((uint64_t)v3);
}

Swift::Void __swiftcall DOCAnalyticsManager.sendConnectToServerShownEvent(_:)(DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent *a1)
{
}

uint64_t sub_22BE2AF8C(uint64_t a1, void (*a2)(_OWORD *, uint64_t))
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = *(unsigned char *)(a1 + 32);
  sub_22BDCA53C((uint64_t)v6);
  a2(v6, v2);
  return sub_22BDC91E0((uint64_t)v6);
}

uint64_t sub_22BE2AFE4(uint64_t a1)
{
  return a1;
}

unint64_t sub_22BE2B038()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE99770;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA1CE0;
  *(void *)(inited + 48) = sub_22BE92FB8();
  return sub_22BDD4F50(inited);
}

void __swiftcall DOCAnalyticsSidebarTagSelectedEvent.init(bundleID:isUserSelection:)(DocumentManagerExecutables::DOCAnalyticsSidebarTagSelectedEvent *__return_ptr retstr, Swift::String_optional bundleID, Swift::Bool isUserSelection)
{
  retstr->name._char countAndFlagsBits = 0xD000000000000036;
  retstr->name._object = (void *)0x800000022BEA1CA0;
  retstr->Swift::String_optional bundleID = bundleID;
  retstr->Swift::Bool isUserSelection = isUserSelection;
}

unint64_t (*sub_22BE2B0DC())()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v5[0] = *(_OWORD *)v0;
  v5[1] = v1;
  char v6 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 48) = *(unsigned char *)(v0 + 32);
  sub_22BDCA53C((uint64_t)v5);
  return sub_22BE2B358;
}

uint64_t initializeWithCopy for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsSidebarTagSelectedEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsSidebarTagSelectedEvent()
{
  return &type metadata for DOCAnalyticsSidebarTagSelectedEvent;
}

uint64_t sub_22BE2B318()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 49, 7);
}

unint64_t sub_22BE2B358()
{
  return sub_22BE2B038();
}

uint64_t sub_22BE2B360(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_22BE91C68();
  uint64_t v22 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v21 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487660);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487668);
  MEMORY[0x270FA5388](v7);
  sub_22BDDF450();
  sub_22BE91D28();
  sub_22BE91D18();
  swift_getKeyPath();
  unint64_t v24 = sub_22BE2C3A8();
  sub_22BE91C58();
  swift_release();
  sub_22BE91D08();
  swift_release();
  sub_22BE91D18();
  sub_22BE91D38();
  uint64_t v20 = sub_22BE91C88();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v6, v3);
  unint64_t v18 = v8;
  sub_22BE91D28();
  sub_22BE91D18();
  swift_getKeyPath();
  sub_22BE91C58();
  swift_release();
  sub_22BE91D08();
  swift_release();
  sub_22BE91D18();
  sub_22BE91D38();
  uint64_t v19 = sub_22BE91C88();
  uint64_t v9 = v3;
  v8(v6, v3);
  sub_22BE91D28();
  sub_22BE91D18();
  swift_getKeyPath();
  sub_22BE91C58();
  swift_release();
  sub_22BE91D08();
  swift_release();
  sub_22BE91D18();
  id v11 = v21;
  uint64_t v10 = v22;
  uint64_t v12 = v23;
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v21, *MEMORY[0x263EFB9F0], v23);
  sub_22BE91CF8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  sub_22BE91D18();
  sub_22BE91D38();
  uint64_t v13 = sub_22BE91C88();
  v18(v6, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487670);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_22BE9A3B0;
  uint64_t v15 = v19;
  *(void *)(v14 + 32) = v20;
  *(void *)(v14 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = sub_22BE91C78();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_22BE2B840(uint64_t a1)
{
  return sub_22BE2BD90(a1, (uint64_t)"x!_<", (void (*)(void))sub_22BE2C3A8, (void (*)(uint64_t))sub_22BDDF450);
}

uint64_t sub_22BE2B888()
{
  uint64_t v0 = sub_22BE91CA8();
  uint64_t v1 = sub_22BE91CA8();
  uint64_t v2 = sub_22BE91CA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487620);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_22BE9A3B0;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = sub_22BE91C98();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22BE2B930(uint64_t a1)
{
  v17[1] = a1;
  uint64_t v1 = sub_22BE91C68();
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v22 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v20 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487640);
  uint64_t v3 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487648);
  MEMORY[0x270FA5388](v6);
  sub_22BDDF4E0();
  sub_22BE91D28();
  sub_22BE91D18();
  swift_getKeyPath();
  sub_22BE21528();
  sub_22BE91C58();
  swift_release();
  sub_22BE91D08();
  swift_release();
  sub_22BE91D18();
  sub_22BE91D38();
  uint64_t v19 = sub_22BE91C88();
  uint64_t v7 = v3 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17[2] = v7;
  uint64_t v9 = v18;
  v8(v5, v18);
  sub_22BE91D28();
  sub_22BE91D18();
  swift_getKeyPath();
  sub_22BE91C58();
  swift_release();
  sub_22BE91D08();
  swift_release();
  sub_22BE91D18();
  id v11 = v20;
  uint64_t v10 = v21;
  uint64_t v12 = v22;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x263EFB9F0], v22);
  sub_22BE91CF8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  sub_22BE91D18();
  sub_22BE91D38();
  uint64_t v13 = sub_22BE91C88();
  v8(v5, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487650);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_22BE97A30;
  *(void *)(v14 + 32) = v19;
  *(void *)(v14 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v13;
  uint64_t v15 = sub_22BE91C78();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_22BE2BD48(uint64_t a1)
{
  return sub_22BE2BD90(a1, (uint64_t)&unk_22BE9ABB8, (void (*)(void))sub_22BE21528, (void (*)(uint64_t))sub_22BDDF4E0);
}

uint64_t sub_22BE2BD90(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v6 = sub_22BE91CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  a3();
  sub_22BE91C58();
  uint64_t v10 = swift_release();
  a4(v10);
  sub_22BE91CD8();
  uint64_t v11 = sub_22BE91CC8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487638);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22BE99770;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = sub_22BE91CB8();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_22BE2BF08()
{
  uint64_t v0 = sub_22BE91CA8();
  uint64_t v1 = sub_22BE91CA8();
  uint64_t v2 = sub_22BE91CA8();
  uint64_t v3 = sub_22BE91CA8();
  uint64_t v4 = sub_22BE91CA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487620);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22BE9A4A0;
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v1;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v4;
  uint64_t v6 = sub_22BE91C98();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22BE2BFEC()
{
  uint64_t v0 = sub_22BE91CA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487620);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22BE99770;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = sub_22BE91C98();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_22BE2C078()
{
  uint64_t v0 = sub_22BE91C48();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BDDF4E0();
  sub_22BE91C38();
  uint64_t v4 = sub_22BE91C28();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487618);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22BE99770;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_22BE91C18();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for DocumentAssistantIntentsProvider()
{
  return &type metadata for DocumentAssistantIntentsProvider;
}

uint64_t sub_22BE2C1C0()
{
  uint64_t v0 = sub_22BE91D68();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  SetFilenameExtensionVisibilityIntent.init()(&v11);
  sub_22BDDF450();
  sub_22BE91D78();
  uint64_t v4 = sub_22BE91D58();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  SetGroupingModeIntent.init()(&v11);
  sub_22BDDF4E0();
  sub_22BE91D78();
  uint64_t v6 = sub_22BE91D58();
  v5(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487630);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22BE97A30;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v6;
  uint64_t v8 = sub_22BE91D48();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_22BE2C3A8()
{
  unint64_t result = qword_268487658;
  if (!qword_268487658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487658);
  }
  return result;
}

uint64_t DOCDocumentSourceIdentifier.isICloud.getter()
{
  sub_22BE92CD8();
  uint64_t v0 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t IsICloud = DOCDocumentSourceIdentifierIsICloud(v0);

  return IsICloud;
}

id static DOCDocumentSourceIdentifier.iCloudCurrent.getter()
{
  return sub_22BE2C4B8((uint64_t (*)(void))DOCDocumentSourceIdentifierICloud_Current);
}

id DOCDocumentSourceIdentifierICloud_Current()
{
  int v0 = FPIsCloudDocsWithFPFSEnabled();
  uint64_t v1 = (void **)MEMORY[0x263F3AB18];
  if (!v0) {
    uint64_t v1 = (void **)MEMORY[0x263F3AB28];
  }
  uint64_t v2 = *v1;

  return v2;
}

id static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter()
{
  return sub_22BE2C4B8((uint64_t (*)(void))DOCDocumentSourceIdentifierICloud_CurrentManaged);
}

id sub_22BE2C4B8(uint64_t (*a1)(void))
{
  id result = (id)a1();
  if (!result) {
    __break(1u);
  }
  return result;
}

id DOCDocumentSourceIdentifierICloud_CurrentManaged()
{
  int v0 = FPIsCloudDocsWithFPFSEnabled();
  uint64_t v1 = (void **)MEMORY[0x263F3AB20];
  if (!v0) {
    uint64_t v1 = (void **)MEMORY[0x263F3AB30];
  }
  uint64_t v2 = *v1;

  return v2;
}

uint64_t UIViewController.registerForTabSwitcherTraitChanges<A>(options:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BDD3344(a1, a2, a3, a4, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t sub_22BE2C548()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t UIViewController.registerForTabSwitcherTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_22BE2C748(a1, a2, (uint64_t)&unk_26DF459B0, (uint64_t)sub_22BE10E44, (void (*)(uint64_t, void, uint64_t *, uint64_t, void *, uint64_t))UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t UIViewController.registerForUIPDocumentLandingTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_22BE2C950(a1, a2, (uint64_t)&unk_26DF459D8, (uint64_t)sub_22BE181A8, (void (*)(void, uint64_t, uint64_t *, uint64_t, void *, uint64_t))UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t UIView.registerForTabSwitcherTraitChanges<A>(options:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22BDD3344(a1, a2, a3, a4, 1, 0, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t UIView.registerForTabSwitcherTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_22BE2C748(a1, a2, (uint64_t)&unk_26DF45A28, (uint64_t)sub_22BE181A8, (void (*)(uint64_t, void, uint64_t *, uint64_t, void *, uint64_t))UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t sub_22BE2C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void, uint64_t *, uint64_t, void *, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = 0;
  char v13 = 1;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  void v10[3] = a2;
  v10[4] = ObjectType;
  sub_22BE91C58();
  a5(1, 0, &v12, a4, v10, ObjectType);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t UIView.registerForUIPDocumentLandingTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_22BE2C950(a1, a2, (uint64_t)&unk_26DF45A50, (uint64_t)sub_22BE181A8, (void (*)(void, uint64_t, uint64_t *, uint64_t, void *, uint64_t))UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t sub_22BE2C950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, uint64_t, uint64_t *, uint64_t, void *, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = 0;
  char v13 = 1;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  void v10[3] = a2;
  v10[4] = ObjectType;
  sub_22BE91C58();
  a5(0, 1, &v12, a4, v10, ObjectType);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_22BE2CB24()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_22BE2CB4C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE2CB84()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE2CBBC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

BOOL static DOCAPIRateLimiterAPI.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DOCAPIRateLimiterAPI.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCAPIRateLimiterAPI.hashValue.getter()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE2CC88()
{
  type metadata accessor for DOCAPIRateLimiter();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x3FF0000000000000;
  qword_2684876D8 = result;
  return result;
}

uint64_t static DOCAPIRateLimiter.shared.getter()
{
  if (qword_268486768 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_22BE91C58();
}

uint64_t static DOCAPIRateLimiter.shared.setter(uint64_t a1)
{
  if (qword_268486768 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_2684876D8 = a1;
  return swift_release();
}

uint64_t (*static DOCAPIRateLimiter.shared.modify())()
{
  if (qword_268486768 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL sub_22BE2CE3C(char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  char v11 = *a1;
  uint64_t v23 = a2;
  unint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  char v27 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v13 = COERCE_DOUBLE(sub_22BE2D1E4((uint64_t)&v23)) > 1.0 && (v12 & 1) == 0;
  if (v13)
  {
    uint64_t v23 = a2;
    unint64_t v24 = a3;
    uint64_t v25 = a4;
    uint64_t v26 = a5;
    char v27 = v11;
    sub_22BE2DB74((uint64_t)&v23);
    swift_bridgeObjectRelease();
    uint64_t v14 = swift_bridgeObjectRelease();
    a6(v14);
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_22BE925E8();
    __swift_project_value_buffer(v15, (uint64_t)qword_2684879E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_22BE925C8();
    os_log_type_t v17 = sub_22BE93168();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = v22;
      *(_DWORD *)uint64_t v18 = 136315650;
      sub_22BDD8478(0xD00000000000004FLL, 0x800000022BEA1D40, &v23);
      sub_22BE93408();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v19 = sub_22BE92CD8();
      sub_22BDD8478(v19, v20, &v23);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_22BDD8478(a2, a3, &v23);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v16, v17, "%s call to %s by: %s was rate-limited", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v22, -1, -1);
      MEMORY[0x230F57540](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return v13;
}

uint64_t sub_22BE2D150()
{
  if (qword_26AF003B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_26AEFFAE0;
  id v1 = (id)qword_26AEFFAE0;
  return v0;
}

uint64_t DOCAPIRateLimiter.deinit()
{
  return v0;
}

uint64_t DOCAPIRateLimiter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_22BE2D1E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB20);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v60 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE92248();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v54 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v54 - v11;
  uint64_t v12 = *(void *)(a1 + 24);
  if (qword_26AF003B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  BOOL v13 = (void *)qword_26AEFFAE0;
  if (qword_26AEFFAE0)
  {
    id v14 = objc_allocWithZone(MEMORY[0x263F3AB80]);
    id v61 = v13;
    uint64_t v15 = (char *)objc_msgSend(v14, sel_init);
    uint64_t v16 = (void *)sub_22BE92C98();
    objc_msgSend(v15, sel_setHostIdentifier_, v16);

    uint64_t v59 = v5;
    if (v12) {
      os_log_type_t v17 = (void *)sub_22BE92C98();
    }
    else {
      os_log_type_t v17 = 0;
    }
    objc_msgSend(v15, sel_setRoleIdentifier_, v17);

    sub_22BE92CD8();
    unint64_t v24 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v25 = v61;
    id v26 = objc_msgSend(v61, sel_doc_roleSpecificKeyForKey_configuration_, v24, v15);

    char v27 = v26;
    if (!v26)
    {
      sub_22BE92CD8();
      char v27 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
    }
    uint64_t v58 = sub_22BE92CD8();
    unint64_t v29 = v28;
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_22BE925E8();
    uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_2684879E0);
    swift_bridgeObjectRetain();
    uint64_t v57 = v31;
    id v32 = sub_22BE925C8();
    os_log_type_t v33 = sub_22BE93148();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v56 = v13;
      uint64_t v35 = v34;
      uint64_t v36 = swift_slowAlloc();
      v65[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      unint64_t v55 = v27;
      *(void *)&v64[0] = sub_22BDD8478(0xD000000000000023, 0x800000022BEA1E10, v65);
      sub_22BE93408();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&v64[0] = sub_22BDD8478(v58, v29, v65);
      id v25 = v61;
      char v27 = v55;
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v32, v33, "%s fetching last call to renameDocumentAtURL: timetstamp for key: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v36, -1, -1);
      MEMORY[0x230F57540](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v37 = v63;
    id v38 = objc_msgSend(v25, sel_valueForKey_, v27);

    id v39 = v62;
    if (v38)
    {
      sub_22BE934B8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v64, 0, sizeof(v64));
    }
    uint64_t v41 = v59;
    id v40 = v60;
    sub_22BDD919C((uint64_t)v64, (uint64_t)v65);
    if (v65[3])
    {
      int v42 = swift_dynamicCast();
      (*(void (**)(id, void, uint64_t, uint64_t))(v41 + 56))(v40, v42 ^ 1u, 1, v4);
      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v41 + 48))(v40, 1, v4) != 1)
      {
        unint64_t v60 = v15;
        (*(void (**)(char *, id, uint64_t))(v41 + 32))(v37, v40, v4);
        sub_22BE92228();
        sub_22BE921E8();
        uint64_t v44 = v43;
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v8, v37, v4);
        uint64_t v45 = v8;
        uint64_t v46 = sub_22BE925C8();
        os_log_type_t v47 = sub_22BE93148();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          v65[0] = v58;
          *(_DWORD *)uint64_t v48 = 136315650;
          *(void *)&v64[0] = sub_22BDD8478(0xD000000000000023, 0x800000022BEA1E10, v65);
          sub_22BE93408();
          *(_WORD *)(v48 + 12) = 2080;
          sub_22BE2E754();
          uint64_t v49 = sub_22BE93878();
          *(void *)&v64[0] = sub_22BDD8478(v49, v50, v65);
          sub_22BE93408();
          swift_bridgeObjectRelease();
          unint64_t v51 = *(void (**)(char *, uint64_t))(v41 + 8);
          v51(v45, v4);
          *(_WORD *)(v48 + 22) = 2048;
          *(void *)&v64[0] = v44;
          sub_22BE93408();
          _os_log_impl(&dword_22BDC5000, v46, v47, "%s fetched date: %s time interval since now: %f", (uint8_t *)v48, 0x20u);
          uint64_t v52 = v58;
          swift_arrayDestroy();
          MEMORY[0x230F57540](v52, -1, -1);
          MEMORY[0x230F57540](v48, -1, -1);

          v51(v62, v4);
          uint64_t v53 = v63;
        }
        else
        {

          unint64_t v51 = *(void (**)(char *, uint64_t))(v41 + 8);
          v51(v45, v4);
          v51(v39, v4);
          uint64_t v53 = v37;
        }
        v51(v53, v4);
        return v44;
      }
    }
    else
    {
      sub_22BE035C8((uint64_t)v65, &qword_26AF00570);
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v41 + 56))(v40, 1, 1, v4);
    }

    sub_22BE035C8((uint64_t)v40, &qword_26AEFFB20);
    return 0x4000000000000000;
  }
  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_22BE925E8();
  __swift_project_value_buffer(v18, (uint64_t)qword_2684879E0);
  uint64_t v19 = sub_22BE925C8();
  os_log_type_t v20 = sub_22BE93158();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v65[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    *(void *)&v64[0] = sub_22BDD8478(0xD000000000000023, 0x800000022BEA1E10, v65);
    sub_22BE93408();
    _os_log_impl(&dword_22BDC5000, v19, v20, "%s unable to load user defaults", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v22, -1, -1);
    MEMORY[0x230F57540](v21, -1, -1);
  }

  return 0;
}

void sub_22BE2DB74(uint64_t a1)
{
  uint64_t v2 = sub_22BE92248();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = *(void *)(a1 + 24);
  int v46 = *(unsigned __int8 *)(a1 + 32);
  if (qword_26AF003B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v10 = (void *)qword_26AEFFAE0;
  if (qword_26AEFFAE0)
  {
    id v11 = objc_allocWithZone(MEMORY[0x263F3AB80]);
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_init);
    id v14 = (void *)sub_22BE92C98();
    objc_msgSend(v13, sel_setHostIdentifier_, v14);

    if (v9) {
      uint64_t v15 = (void *)sub_22BE92C98();
    }
    else {
      uint64_t v15 = 0;
    }
    objc_msgSend(v13, sel_setRoleIdentifier_, v15);

    sub_22BE92CD8();
    uint64_t v21 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v43 = v12;
    id v22 = objc_msgSend(v12, sel_doc_roleSpecificKeyForKey_configuration_, v21, v13);

    uint64_t v23 = sub_22BE92CD8();
    unint64_t v25 = v24;

    sub_22BE92228();
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22BE925E8();
    __swift_project_value_buffer(v26, (uint64_t)qword_2684879E0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_22BE925C8();
    uint64_t v45 = v3;
    unint64_t v28 = v27;
    os_log_type_t v29 = sub_22BE93148();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v44 = v2;
      uint64_t v31 = v30;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v48 = v42;
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v47 = sub_22BDD8478(0xD00000000000001CLL, 0x800000022BEA1DF0, &v48);
      sub_22BE93408();
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v41 = v23;
      sub_22BE2E754();
      uint64_t v32 = sub_22BE93878();
      uint64_t v47 = sub_22BDD8478(v32, v33, &v48);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v45 + 8);
      v34(v6, v44);
      *(_WORD *)(v31 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_22BDD8478(v41, v25, &v48);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v28, v29, "%s updating last call to renameDocumentAtURL: timetstamp to: %s for key: %s", (uint8_t *)v31, 0x20u);
      uint64_t v35 = v42;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v35, -1, -1);
      uint64_t v36 = v31;
      uint64_t v2 = v44;
      MEMORY[0x230F57540](v36, -1, -1);
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v45 + 8);
      v34(v6, v2);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v37 = (void *)sub_22BE921F8();
    sub_22BE92CD8();
    id v38 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v39 = v43;
    objc_msgSend(v43, sel_doc_setObject_forRoleKey_configuation_, v37, v38, v13);

    v34(v8, v2);
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_22BE925E8();
    __swift_project_value_buffer(v16, (uint64_t)qword_2684879E0);
    os_log_type_t v17 = sub_22BE925C8();
    os_log_type_t v18 = sub_22BE93158();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v48 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v47 = sub_22BDD8478(0xD00000000000001CLL, 0x800000022BEA1DF0, &v48);
      sub_22BE93408();
      _os_log_impl(&dword_22BDC5000, v17, v18, "%s unable to load docUserDefaults", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v20, -1, -1);
      MEMORY[0x230F57540](v19, -1, -1);
    }
  }
}

unint64_t sub_22BE2E1EC()
{
  unint64_t result = qword_2684876E0;
  if (!qword_2684876E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684876E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCAPIRateLimiterAPI(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE2E30CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAPIRateLimiterAPI()
{
  return &type metadata for DOCAPIRateLimiterAPI;
}

uint64_t type metadata accessor for DOCAPIRateLimiter()
{
  return self;
}

uint64_t method lookup function for DOCAPIRateLimiter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCAPIRateLimiter);
}

uint64_t dispatch thunk of DOCAPIRateLimiter.performRateLimitedCall(apiIdentifier:hostIdentifier:roleIdentifier:blockToRun:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of DOCAPIRateLimiter.defaults()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_22BE2E3C8(char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void *aBlock)
{
  char v18 = *a1;
  uint64_t v30 = a2;
  unint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  char v34 = v18;
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = COERCE_DOUBLE(sub_22BE2D1E4((uint64_t)&v30)) > 1.0 && (v19 & 1) == 0;
  if (v20 == 1)
  {
    uint64_t v30 = a2;
    unint64_t v31 = a3;
    uint64_t v32 = a4;
    uint64_t v33 = a5;
    char v34 = v18;
    sub_22BE2DB74((uint64_t)&v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _Block_copy(aBlock);
    sub_22BE15564(a6, a7, a8, a9, a10, (void (**)(void, void, void))aBlock);
    _Block_release(aBlock);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_22BE925E8();
    __swift_project_value_buffer(v21, (uint64_t)qword_2684879E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v22 = sub_22BE925C8();
    os_log_type_t v23 = sub_22BE93168();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t type = v23;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      *(_DWORD *)uint64_t v24 = 136315650;
      sub_22BDD8478(0xD00000000000004FLL, 0x800000022BEA1D40, &v30);
      sub_22BE93408();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v25 = sub_22BE92CD8();
      sub_22BDD8478(v25, v26, &v30);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_22BDD8478(a2, a3, &v30);
      uint64_t v20 = v20;
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v22, type, "%s call to %s by: %s was rate-limited", (uint8_t *)v24, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v28, -1, -1);
      MEMORY[0x230F57540](v24, -1, -1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  _Block_release(aBlock);
  return v20;
}

unint64_t sub_22BE2E754()
{
  unint64_t result = qword_2684876E8;
  if (!qword_2684876E8)
  {
    sub_22BE92248();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684876E8);
  }
  return result;
}

uint64_t sub_22BE2E7AC(char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, void), uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  char v19 = *a1;
  uint64_t v30 = a2;
  unint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  char v34 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = COERCE_DOUBLE(sub_22BE2D1E4((uint64_t)&v30)) > 1.0 && (v20 & 1) == 0;
  if (v21 == 1)
  {
    uint64_t v30 = a2;
    unint64_t v31 = a3;
    uint64_t v32 = a4;
    uint64_t v33 = a5;
    char v34 = v19;
    sub_22BE2DB74((uint64_t)&v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22BE12F18(a6, a7, a8, a9, a10, a11, a12);
  }
  else
  {
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_22BE925E8();
    __swift_project_value_buffer(v22, (uint64_t)qword_2684879E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v23 = sub_22BE925C8();
    os_log_type_t v24 = sub_22BE93168();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v30 = v26;
      *(_DWORD *)uint64_t v25 = 136315650;
      sub_22BDD8478(0xD00000000000004FLL, 0x800000022BEA1D40, &v30);
      sub_22BE93408();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v27 = sub_22BE92CD8();
      sub_22BDD8478(v27, v28, &v30);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_22BDD8478(a2, a3, &v30);
      uint64_t v21 = v21;
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v23, v24, "%s call to %s by: %s was rate-limited", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v26, -1, -1);
      MEMORY[0x230F57540](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return v21;
}

id DOCViewDecorator.embeddable.getter()
{
  return *(id *)(v0 + 16);
}

id DOCViewDecorator.content.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t DOCViewDecorator.__allocating_init(contentWithoutWrapping:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a1;
  id v3 = a1;
  return v2;
}

uint64_t DOCViewDecorator.init(contentWithoutWrapping:)(void *a1)
{
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = a1;
  id v2 = a1;
  return v1;
}

uint64_t DOCViewDecorator.__allocating_init(_:wrappedForVibrancy:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a1;
  id v3 = a1;
  return v2;
}

uint64_t DOCViewDecorator.init(_:wrappedForVibrancy:)(void *a1)
{
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = a1;
  id v2 = a1;
  return v1;
}

uint64_t DOCViewDecorator.deinit()
{
  return v0;
}

uint64_t DOCViewDecorator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall DOCViewDecorator.setNeedsDisplay()()
{
}

Swift::Void __swiftcall DOCViewDecorator.setNeedsLayout()()
{
}

Swift::Void __swiftcall DOCViewDecorator.setNeedsUpdateConstraints()()
{
}

Swift::Void __swiftcall DOCViewDecorator.layoutIfNeeded()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_layoutIfNeeded);
}

Swift::Void __swiftcall DOCViewDecorator.setContentHuggingPriority(_:for:)(UILayoutPriority _, UILayoutConstraintAxis a2)
{
}

Swift::Void __swiftcall DOCViewDecorator.setContentCompressionResistancePriority(_:for:)(UILayoutPriority _, UILayoutConstraintAxis a2)
{
}

id sub_22BE2EC80(uint64_t a1, SEL *a2, float a3)
{
  objc_msgSend(*(id *)(v3 + 16), *a2, a1);
  uint64_t v7 = *(void **)(v3 + 24);
  uint64_t v8 = *a2;
  *(float *)&double v9 = a3;

  return objc_msgSend(v7, v8, a1, v9);
}

id DOCViewDecorator.layer.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_layer);

  return v1;
}

id DOCViewDecorator.isHidden.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_isHidden);
}

id DOCViewDecorator.isHidden.setter(char a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setHidden_, a1 & 1);
}

id (*DOCViewDecorator.isHidden.modify(uint64_t a1))(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(*(id *)(v1 + 16), sel_isHidden);
  return sub_22BE2EDB0;
}

id sub_22BE2EDB0(unsigned __int8 *a1, uint64_t a2)
{
  return sub_22BE2F114(a1, a2, (SEL *)&selRef_setHidden_);
}

id DOCViewDecorator.alpha.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_alpha);
}

id DOCViewDecorator.alpha.setter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_);
}

id (*DOCViewDecorator.alpha.modify(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  objc_msgSend(*(id *)(v1 + 16), sel_alpha);
  *a1 = v3;
  return sub_22BE2EE30;
}

id sub_22BE2EE30(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)(a1 + 8) + 16), sel_setAlpha_, *(double *)a1);
}

id DOCViewDecorator.widthAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_widthAnchor);

  return v1;
}

id DOCViewDecorator.heightAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_heightAnchor);

  return v1;
}

id DOCViewDecorator.centerXAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_centerXAnchor);

  return v1;
}

id DOCViewDecorator.leadingAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_leadingAnchor);

  return v1;
}

id DOCViewDecorator.trailingAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_trailingAnchor);

  return v1;
}

id DOCViewDecorator.centerYAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_centerYAnchor);

  return v1;
}

id DOCViewDecorator.topAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_topAnchor);

  return v1;
}

id DOCViewDecorator.bottomAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_bottomAnchor);

  return v1;
}

id DOCViewDecorator.firstBaselineAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_firstBaselineAnchor);

  return v1;
}

id DOCViewDecorator.lastBaselineAnchor.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_lastBaselineAnchor);

  return v1;
}

id DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.getter()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_translatesAutoresizingMaskIntoConstraints);
}

id DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter(char a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setTranslatesAutoresizingMaskIntoConstraints_, a1 & 1);
}

id (*DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.modify(uint64_t a1))(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(*(id *)(v1 + 16), sel_translatesAutoresizingMaskIntoConstraints);
  return sub_22BE2F108;
}

id sub_22BE2F108(unsigned __int8 *a1, uint64_t a2)
{
  return sub_22BE2F114(a1, a2, (SEL *)&selRef_setTranslatesAutoresizingMaskIntoConstraints_);
}

id sub_22BE2F114(unsigned __int8 *a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend(*(id *)(*(void *)a1 + 16), *a3, a1[8]);
}

Swift::Void __swiftcall DOCViewDecorator.invalidateIntrinsicContentSize()()
{
}

id sub_22BE2F138(SEL *a1)
{
  [*(id *)(v1 + 16) *a1];
  uint64_t v3 = *(void **)(v1 + 24);
  unsigned int v4 = *a1;

  return [v3 v4];
}

id DOCViewDecorator.tintColor.getter()
{
  id result = objc_msgSend(*(id *)(v0 + 24), sel_tintColor);
  if (!result) {
    __break(1u);
  }
  return result;
}

void DOCViewDecorator.tintColor.setter(void *a1)
{
  sub_22BE304A8((uint64_t)a1);
}

void (*DOCViewDecorator.tintColor.modify(id *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = DOCViewDecorator.tintColor.getter();
  return sub_22BE2F230;
}

void sub_22BE2F230(uint64_t a1, char a2)
{
  id v2 = *(void **)(*(void *)(a1 + 8) + 24);
  id v4 = *(id *)a1;
  if (a2)
  {
    id v3 = *(id *)a1;
    objc_msgSend(v2, sel_setTintColor_, v3);
  }
  else
  {
    objc_msgSend(v2, sel_setTintColor_);
  }
}

id DOCViewDecorator<>.buttonType.getter()
{
  return objc_msgSend(*(id *)(v0 + 24), sel_buttonType);
}

uint64_t (*DOCViewDecorator<>.configurationUpdateHandler.getter())()
{
  id result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + 24), sel_configurationUpdateHandler);
  if (result)
  {
    *(void *)(swift_allocObject() + 16) = result;
    return sub_22BE304F4;
  }
  return result;
}

uint64_t sub_22BE2F338@<X0>(void *a1@<X8>)
{
  uint64_t result = (uint64_t)DOCViewDecorator<>.configurationUpdateHandler.getter();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    unsigned int v6 = sub_22BE30DFC;
  }
  else
  {
    unsigned int v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

void sub_22BE2F3A8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_22BE30DC4;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_22BE03630(v1);
  DOCViewDecorator<>.configurationUpdateHandler.setter((uint64_t)v4, v3);
}

void DOCViewDecorator<>.configurationUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (a1)
  {
    v8[4] = a1;
    v8[5] = a2;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 1107296256;
    _OWORD v8[2] = sub_22BE2A864;
    v8[3] = &block_descriptor_11;
    uint64_t v5 = _Block_copy(v8);
    id v6 = v4;
    sub_22BE03630(a1);
    swift_release();
  }
  else
  {
    id v7 = v4;
    uint64_t v5 = 0;
  }
  objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v5);
  sub_22BDE0E58(a1);
  _Block_release(v5);
}

void (*DOCViewDecorator<>.configurationUpdateHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = DOCViewDecorator<>.configurationUpdateHandler.getter();
  a1[1] = v3;
  return sub_22BE2F56C;
}

void sub_22BE2F56C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    sub_22BE03630(*a1);
    DOCViewDecorator<>.configurationUpdateHandler.setter(v2, v3);
    sub_22BDE0E58(v2);
  }
  else
  {
    DOCViewDecorator<>.configurationUpdateHandler.setter(*a1, v3);
  }
}

void DOCViewDecorator<>.configuration.getter()
{
  id v1 = *(id *)(v0 + 24);
  sub_22BE93348();
}

uint64_t sub_22BE2F63C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684876F0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE30508(a1, (uint64_t)v4);
  return DOCViewDecorator<>.configuration.setter((uint64_t)v4);
}

uint64_t DOCViewDecorator<>.configuration.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684876F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = *(void **)(v1 + 24);
  sub_22BE30508(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = v5;
  sub_22BE93358();

  return sub_22BE30570(a1);
}

void (*DOCViewDecorator<>.configuration.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2684876F0) - 8) + 64);
  a1[1] = malloc(v3);
  a1[2] = malloc(v3);
  DOCViewDecorator<>.configuration.getter();
  return sub_22BE2F7F8;
}

void sub_22BE2F7F8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  size_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_22BE30508((uint64_t)v3, (uint64_t)v2);
    DOCViewDecorator<>.configuration.setter((uint64_t)v2);
    sub_22BE30570((uint64_t)v3);
  }
  else
  {
    DOCViewDecorator<>.configuration.setter((uint64_t)v3);
  }
  free(v3);

  free(v2);
}

id DOCViewDecorator<>.setNeedsUpdateConfiguration()()
{
  return objc_msgSend(*(id *)(v0 + 24), sel_setNeedsUpdateConfiguration);
}

id DOCViewDecorator<>.menu.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_menu);

  return v1;
}

void DOCViewDecorator<>.menu.setter(void *a1)
{
  id v2 = *(id *)(v1 + 24);
  objc_msgSend(v2, sel_setMenu_, a1);
}

void (*DOCViewDecorator<>.menu.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_menu);
  return sub_22BE2F96C;
}

void sub_22BE2F96C(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    DOCViewDecorator<>.menu.setter(v2);
  }
  else
  {
    DOCViewDecorator<>.menu.setter(*a1);
  }
}

id DOCViewDecorator<>.font.getter()
{
  return sub_22BE2FDE8((SEL *)&selRef_font);
}

void DOCViewDecorator<>.font.setter(void *a1)
{
  sub_22BE305D0(a1);
}

void sub_22BE2FA18(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v21[0] = a2;
  v21[1] = a3;
  uint64_t v5 = *(void *)(*MEMORY[0x263F8DE50] + *a1 + 8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  double v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)v21 - v10;
  id v23 = *(id *)(v3 + 24);
  id v24 = v23;
  id v12 = v23;
  id v13 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  id v14 = *(void (**)(char *))(v6 + 16);
  v14(v11);
  v13(v22, 0);
  uint64_t v15 = v21[0];

  if ((sub_22BE92C68() & 1) == 0)
  {
    ((void (*)(char *, uint64_t, uint64_t))v14)(v9, v15, v5);
    swift_setAtWritableKeyPath();
    uint64_t v16 = *(void **)(v4 + 16);
    os_log_type_t v17 = *(void **)(v4 + 24);
    sub_22BDD9D50(0, &qword_26AF004C8);
    id v18 = v16;
    id v19 = v17;
    char v20 = sub_22BE93328();

    if ((v20 & 1) == 0) {
      objc_msgSend(v18, sel_invalidateIntrinsicContentSize);
    }
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

void (*DOCViewDecorator<>.font.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = DOCViewDecorator<>.font.getter();
  return sub_22BE2FC98;
}

void sub_22BE2FC98(void **a1, char a2)
{
  id v2 = *a1;
  id v4 = *a1;
  if (a2)
  {
    id v3 = v2;
    sub_22BE305D0(v3);
  }
  else
  {
    sub_22BE305D0(v2);
  }
}

id DOCViewDecorator<>.numberOfLines.getter()
{
  return objc_msgSend(*(id *)(v0 + 24), sel_numberOfLines);
}

uint64_t DOCViewDecorator<>.numberOfLines.setter(uint64_t a1)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v4 = a1;
  sub_22BE2FA18(KeyPath, (uint64_t)&v4, MEMORY[0x263F8D6E8]);
  return swift_release();
}

uint64_t (*DOCViewDecorator<>.numberOfLines.modify(void *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_numberOfLines);
  return sub_22BE2FDB8;
}

uint64_t sub_22BE2FDB8(uint64_t *a1)
{
  return DOCViewDecorator<>.numberOfLines.setter(*a1);
}

id DOCViewDecorator<>.textColor.getter()
{
  return sub_22BE2FDE8((SEL *)&selRef_textColor);
}

id sub_22BE2FDE8(SEL *a1)
{
  id result = [*(id *)(v1 + 24) *a1];
  if (!result) {
    __break(1u);
  }
  return result;
}

void DOCViewDecorator<>.textColor.setter(void *a1)
{
  id v2 = *(id *)(v1 + 24);
  objc_msgSend(v2, sel_setTextColor_, a1);
}

void (*DOCViewDecorator<>.textColor.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = DOCViewDecorator<>.textColor.getter();
  return sub_22BE2FEC0;
}

void sub_22BE2FEC0(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    DOCViewDecorator<>.textColor.setter(v3);
  }
  else
  {
    DOCViewDecorator<>.textColor.setter(v2);
  }
}

id DOCViewDecorator<>.attributedText.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_attributedText);

  return v1;
}

void DOCViewDecorator<>.attributedText.setter(void *a1)
{
  sub_22BE30694((uint64_t)a1);
}

void (*DOCViewDecorator<>.attributedText.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_attributedText);
  return sub_22BE2FFF4;
}

void sub_22BE2FFF4(uint64_t *a1, char a2)
{
  id v4 = (id)*a1;
  if (a2)
  {
    id v2 = v4;
    sub_22BE30694((uint64_t)v4);

    id v3 = v2;
  }
  else
  {
    sub_22BE30694(*a1);
    id v3 = v4;
  }
}

uint64_t DOCViewDecorator<>.text.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_text);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_22BE92CD8();

  return v3;
}

uint64_t sub_22BE300C8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_22BE306F4(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t DOCViewDecorator<>.text.setter(uint64_t a1, uint64_t a2)
{
  sub_22BE306F4(a1, a2);

  return swift_bridgeObjectRelease();
}

void sub_22BE30154(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_text);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_22BE92CD8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_22BE301BC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_22BE92C98();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setText_);
}

uint64_t (*DOCViewDecorator<>.text.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = DOCViewDecorator<>.text.getter();
  a1[1] = v3;
  return sub_22BE30274;
}

uint64_t sub_22BE30274(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_22BE306F4(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22BE306F4(*a1, v2);
  }

  return swift_bridgeObjectRelease();
}

id DOCViewDecorator<>.textAlignment.getter()
{
  return objc_msgSend(*(id *)(v0 + 24), sel_textAlignment);
}

id DOCViewDecorator<>.textAlignment.setter(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + 24), sel_setTextAlignment_, a1);
}

id (*DOCViewDecorator<>.textAlignment.modify(void *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_textAlignment);
  return sub_22BE3035C;
}

id sub_22BE3035C(void *a1)
{
  return objc_msgSend(*(id *)(a1[1] + 24), sel_setTextAlignment_, *a1);
}

id DOCViewDecorator<>.adjustsFontForContentSizeCategory.getter()
{
  return objc_msgSend(*(id *)(v0 + 24), sel_adjustsFontForContentSizeCategory);
}

uint64_t DOCViewDecorator<>.adjustsFontForContentSizeCategory.setter(char a1)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  char v4 = a1;
  sub_22BE2FA18(KeyPath, (uint64_t)&v4, MEMORY[0x263F8D510]);
  return swift_release();
}

uint64_t (*DOCViewDecorator<>.adjustsFontForContentSizeCategory.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(*(id *)(v1 + 24), sel_adjustsFontForContentSizeCategory);
  return sub_22BE30444;
}

uint64_t sub_22BE30444(uint64_t a1)
{
  return DOCViewDecorator<>.adjustsFontForContentSizeCategory.setter(*(unsigned char *)(a1 + 8));
}

id UIView.addSubview<A>(_:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_addSubview_, *(void *)(a1 + 16));
}

id UIStackView.addArrangedSubview<A>(_:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_addArrangedSubview_, *(void *)(a1 + 16));
}

id UIStackView.setCustomSpacing<A>(_:after:)(uint64_t a1)
{
  return objc_msgSend(v1, sel_setCustomSpacing_afterView_, *(void *)(a1 + 16));
}

id sub_22BE304A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + 24), sel_setTintColor_, a1);
}

uint64_t sub_22BE304BC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE304F4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_22BE30508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684876F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22BE30570(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684876F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22BE305D0(void *a1)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v6 = a1;
  unint64_t v3 = sub_22BE30FEC();
  id v4 = a1;
  sub_22BE2FA18(KeyPath, (uint64_t)&v6, v3);

  return swift_release();
}

char *keypath_get_selector_numberOfLines()
{
  return sel_numberOfLines;
}

id sub_22BE3064C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_numberOfLines);
  *a2 = result;
  return result;
}

id sub_22BE30680(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNumberOfLines_, *a1);
}

uint64_t sub_22BE30694(uint64_t a1)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  uint64_t v5 = a1;
  unint64_t v3 = sub_22BE30F04();
  sub_22BE2FA18(KeyPath, (uint64_t)&v5, v3);
  return swift_release();
}

uint64_t sub_22BE306F4(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = (void *)swift_getKeyPath();
  v7[0] = a1;
  v7[1] = a2;
  unint64_t v5 = sub_22BE30E3C();
  sub_22BE2FA18(KeyPath, (uint64_t)v7, v5);
  return swift_release();
}

char *keypath_get_selector_adjustsFontForContentSizeCategory()
{
  return sel_adjustsFontForContentSizeCategory;
}

id sub_22BE30764@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_adjustsFontForContentSizeCategory);
  *a2 = (_BYTE)result;
  return result;
}

id sub_22BE30798(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAdjustsFontForContentSizeCategory_, *a1);
}

id sub_22BE307AC@<X0>(unsigned char *a1@<X8>)
{
  id result = DOCViewDecorator.isHidden.getter();
  *a1 = result & 1;
  return result;
}

id sub_22BE307DC(char *a1)
{
  return DOCViewDecorator.isHidden.setter(*a1);
}

uint64_t sub_22BE30804()
{
  return 8;
}

void *sub_22BE30810(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

id sub_22BE3081C@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator.alpha.getter();
  *a1 = v3;
  return result;
}

id sub_22BE30848()
{
  return DOCViewDecorator.alpha.setter();
}

uint64_t sub_22BE30870()
{
  return 8;
}

id sub_22BE3087C@<X0>(unsigned char *a1@<X8>)
{
  id result = DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.getter();
  *a1 = result & 1;
  return result;
}

id sub_22BE308AC(char *a1)
{
  return DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter(*a1);
}

uint64_t sub_22BE308D4()
{
  return 8;
}

id sub_22BE308E0@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator.tintColor.getter();
  *a1 = result;
  return result;
}

void sub_22BE3090C(id *a1)
{
  id v1 = *a1;
  sub_22BE304A8((uint64_t)v1);
}

uint64_t sub_22BE30958()
{
  return 8;
}

uint64_t sub_22BE3096C()
{
  return 8;
}

void sub_22BE30978()
{
}

uint64_t sub_22BE309A0()
{
  return 8;
}

id sub_22BE309AC@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator<>.menu.getter();
  *a1 = result;
  return result;
}

void sub_22BE309D8(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  DOCViewDecorator<>.menu.setter(v1);
}

uint64_t sub_22BE30A08()
{
  return 8;
}

id sub_22BE30A14@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator<>.font.getter();
  *a1 = result;
  return result;
}

void sub_22BE30A40(id *a1)
{
  id v1 = *a1;
  sub_22BE305D0(v1);
}

uint64_t sub_22BE30A8C()
{
  return 8;
}

id sub_22BE30A98@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator<>.numberOfLines.getter();
  *a1 = result;
  return result;
}

uint64_t sub_22BE30AC4(uint64_t *a1)
{
  return DOCViewDecorator<>.numberOfLines.setter(*a1);
}

uint64_t sub_22BE30AEC()
{
  return 8;
}

id sub_22BE30AF8@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator<>.textColor.getter();
  *a1 = result;
  return result;
}

void sub_22BE30B24(id *a1)
{
}

uint64_t sub_22BE30B50()
{
  return 8;
}

id sub_22BE30B5C@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator<>.attributedText.getter();
  *a1 = result;
  return result;
}

void sub_22BE30B88(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_22BE30694((uint64_t)v1);
}

uint64_t sub_22BE30BD8()
{
  return 8;
}

uint64_t sub_22BE30BE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DOCViewDecorator<>.text.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22BE30C14()
{
  return 8;
}

id sub_22BE30C20@<X0>(void *a1@<X8>)
{
  id result = DOCViewDecorator<>.textAlignment.getter();
  *a1 = result;
  return result;
}

id sub_22BE30C4C(uint64_t *a1)
{
  return DOCViewDecorator<>.textAlignment.setter(*a1);
}

uint64_t sub_22BE30C74()
{
  return 8;
}

id sub_22BE30C80@<X0>(unsigned char *a1@<X8>)
{
  id result = DOCViewDecorator<>.adjustsFontForContentSizeCategory.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22BE30CB0(char *a1)
{
  return DOCViewDecorator<>.adjustsFontForContentSizeCategory.setter(*a1);
}

uint64_t sub_22BE30CD8()
{
  return 8;
}

uint64_t sub_22BE30CE4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DOCViewDecorator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DOCViewDecorator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCViewDecorator);
}

uint64_t dispatch thunk of DOCViewDecorator.__allocating_init(contentWithoutWrapping:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DOCViewDecorator.__allocating_init(_:wrappedForVibrancy:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_22BE30D8C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE30DC4(uint64_t a1)
{
  id v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_22BE30DFC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

char *keypath_get_selector_text()
{
  return sel_text;
}

unint64_t sub_22BE30E3C()
{
  unint64_t result = qword_26AF002C8;
  if (!qword_26AF002C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AF002C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF002C8);
  }
  return result;
}

char *keypath_get_selector_attributedText()
{
  return sel_attributedText;
}

id sub_22BE30EB4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_attributedText);
  *a2 = result;
  return result;
}

id sub_22BE30EF0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAttributedText_, *a1);
}

unint64_t sub_22BE30F04()
{
  unint64_t result = qword_2684876F8;
  if (!qword_2684876F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487700);
    sub_22BE31078(&qword_268487708, &qword_268487710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684876F8);
  }
  return result;
}

char *keypath_get_selector_font()
{
  return sel_font;
}

id sub_22BE30F9C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_font);
  *a2 = result;
  return result;
}

id sub_22BE30FD8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFont_, *a1);
}

unint64_t sub_22BE30FEC()
{
  unint64_t result = qword_26AF004B8;
  if (!qword_26AF004B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AF004B0);
    sub_22BE31078(&qword_26AF004C0, &qword_26AF004A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF004B8);
  }
  return result;
}

uint64_t sub_22BE31078(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22BDD9D50(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BE31100(unint64_t a1, void **a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (!__OFSUB__(v3--, 1))
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x230F56140](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        id v7 = objc_msgSend(v5, sel_displayName);
        uint64_t v8 = sub_22BE92CD8();
        uint64_t v10 = v9;

        id v11 = *a2;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          id v11 = sub_22BDCC94C(0, v11[2] + 1, 1, v11);
          *a2 = v11;
        }
        unint64_t v14 = v11[2];
        unint64_t v13 = v11[3];
        if (v14 >= v13 >> 1)
        {
          id v11 = sub_22BDCC94C((void *)(v13 > 1), v14 + 1, 1, v11);
          *a2 = v11;
        }
        void v11[2] = v14 + 1;
        uint64_t v15 = &v11[2 * v14];
        void v15[4] = v8;
        v15[5] = v10;

        if (!v3) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        if ((v3 & 0x8000000000000000) != 0) {
          goto LABEL_16;
        }
        if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v5 = *(id *)(a1 + 32 + 8 * v3);
          goto LABEL_9;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
        unint64_t v3 = sub_22BE937E8();
        if (!v3) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return swift_bridgeObjectRelease();
}

void sub_22BE3129C(void *a1)
{
  id v2 = objc_msgSend(self, sel_configurationWithScale_, 1);
  unint64_t v3 = (void *)sub_22BE92C98();
  id v4 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    id v5 = objc_msgSend(self, sel_textAttachmentWithImage_, v4);
    id v6 = objc_allocWithZone(MEMORY[0x263F089B8]);
    id v7 = (void *)sub_22BE92C98();
    id v8 = objc_msgSend(v6, sel_initWithString_, v7);

    id v9 = objc_msgSend(self, sel_attributedStringWithAttachment_, v5);
    objc_msgSend(v8, sel_appendAttributedString_, v9);

    id v10 = objc_allocWithZone(MEMORY[0x263F086A0]);
    id v11 = (void *)sub_22BE92C98();
    id v12 = objc_msgSend(v10, sel_initWithString_, v11);

    objc_msgSend(v8, sel_appendAttributedString_, v12);
    if (a1)
    {
      uint64_t v13 = *MEMORY[0x263F81500];
      id v14 = a1;
      objc_msgSend(v8, sel_addAttribute_value_range_, v13, v14, 0, objc_msgSend(v8, sel_length));
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22BE314BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = qword_268486720;
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  id v4 = (uint64_t *)(qword_268487248 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  uint64_t v9 = *v4;
  swift_bridgeObjectRetain();
  sub_22BE92D88();
  if (qword_268486728 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v9;
  uint64_t v6 = v1 - 1;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_22BE92D88();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_22BE92D88();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_22BE92D88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22BE92D88();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v5;
}

void FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  id v16 = (id)_DocumentManagerBundle();
  if (v16)
  {
    os_log_type_t v17 = v16;
    unint64_t v18 = sub_22BE91F78();
    uint64_t v20 = v19;

    __swift_instantiateConcreteTypeFromMangledName(&qword_268487718);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22BE99770;
    *(void *)(inited + 32) = 0x68736172542ELL;
    *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0xE600000000000000;
    *(void *)(inited + 48) = v18;
    *(void *)(inited + 56) = v20;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_22BE1A79C(inited);
    if (a2)
    {
      sub_22BE319FC(a2, a1, a4 & 1, v9, a6 & 1, v18, v20, v22, a3, a5, a7, a8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v23 = self;
      uint64_t v24 = swift_allocObject();
      *(unsigned char *)(v24 + 16) = a4 & 1;
      *(void *)(v24 + 24) = v9;
      *(unsigned char *)(v24 + 32) = a6 & 1;
      *(void *)(v24 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v18;
      *(void *)(v24 + 48) = v20;
      *(void *)(v24 + 56) = v22;
      *(void *)(v24 + 64) = a3;
      *(void *)(v24 + 72) = a5;
      *(void *)(v24 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a7;
      *(void *)(v24 + 88) = a8;
      *(void *)(v24 + 96) = a1;
      aBlock[4] = sub_22BE32024;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22BDDF1BC;
      void aBlock[3] = &block_descriptor_12;
      uint64_t v25 = _Block_copy(aBlock);
      id v26 = a5;
      sub_22BE91C58();
      swift_bridgeObjectRetain();
      id v27 = v9;
      swift_release();
      objc_msgSend(v23, sel_fetchProviderDomainForItem_cachePolicy_completionHandler_, v27, 1, v25, 0x800000022BEA1EB0);
      _Block_release(v25);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22BE319FC(id a1, uint64_t a2, char a3, void *a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  LOBYTE(v17) = a5;
  uint64_t v20 = (void *)MEMORY[0x263F8EE78];
  unint64_t v54 = a2;
  unint64_t v55 = (void *)MEMORY[0x263F8EE78];
  if (a3)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0) {
        uint64_t v24 = a2;
      }
      else {
        uint64_t v24 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      id v46 = a4;
      if (sub_22BE937E8() < 0)
      {
        __break(1u);
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      id v21 = a4;
    }
    sub_22BE3B2B4(0, 0, (uint64_t)a4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v12 = &selRef_isUploading;
  if (!objc_msgSend(a4, sel_isTrashed) || (v17 & 1) != 0) {
    goto LABEL_14;
  }
  unint64_t v22 = swift_bridgeObjectRetain();
  a1 = 0;
  sub_22BE31100(v22, &v55);
  swift_bridgeObjectRelease();
  do
  {
    if (!objc_msgSend(a4, v12[54], v51) || (v17 & 1) == 0 || !v55[2]) {
      goto LABEL_34;
    }
    uint64_t v17 = v55[4];
    a4 = (void *)v55[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v55 = v20;
    sub_22BE3B130(0, 0, v17, (uint64_t)a4);
    if (v55[2]) {
      goto LABEL_32;
    }
    __break(1u);
LABEL_14:
    if (a1)
    {
      a1 = a1;
      if ((DOCProviderDomainIsSharedServerDomain() & 1) == 0)
      {
        unint64_t v52 = a6;
        id v23 = (id)DOCLocalizedDisplayName();
        uint64_t v24 = sub_22BE92CD8();
        uint64_t v13 = v25;

        id v26 = sub_22BDCC94C(0, 1, 1, MEMORY[0x263F8EE78]);
        a6 = v26[2];
        unint64_t v27 = v26[3];
        int64_t v28 = a6 + 1;
        if (a6 >= v27 >> 1)
        {
LABEL_40:
          int64_t v51 = v28;
          uint64_t v47 = sub_22BDCC94C((void *)(v27 > 1), v28, 1, v26);
          int64_t v28 = v51;
          id v26 = v47;
        }
        _OWORD v26[2] = v28;
        os_log_type_t v29 = &v26[2 * a6];
        v29[4] = v24;
        v29[5] = v13;
        unint64_t v55 = v26;
        uint64_t v30 = v54;
        if (v54 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v48 = sub_22BE937E8();
          swift_bridgeObjectRelease();
          BOOL v49 = v48 < 1;
          a6 = v52;
          if (!v49)
          {
            swift_bridgeObjectRetain();
            uint64_t v50 = sub_22BE937E8();
            uint64_t result = swift_bridgeObjectRelease();
            if (!v50)
            {
              __break(1u);
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
            goto LABEL_19;
          }
        }
        else
        {
          a6 = v52;
          if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_19:
            uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
            if (!result || (v54 & 0x8000000000000000) != 0 || (v54 & 0x4000000000000000) != 0)
            {
              uint64_t result = sub_22BE4585C(v54);
              uint64_t v30 = result;
              unint64_t v54 = result;
            }
            uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v32) {
              goto LABEL_44;
            }
            uint64_t v33 = v32 - 1;
            char v34 = *(void **)((v30 & 0xFFFFFFFFFFFFFF8) + 8 * v33 + 0x20);
            *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v33;
            sub_22BE92ED8();
          }
        }
      }
    }
    unint64_t v35 = swift_bridgeObjectRetain();
    a1 = 0;
    sub_22BE31100(v35, &v55);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      [a4 v12[54]];
      goto LABEL_34;
    }
  }
  while (v55[2] < 3uLL
       || (v55[6] != 0x736568736172542ELL || v55[7] != 0xE800000000000000) && (sub_22BE938C8() & 1) == 0);
  sub_22BE31EE4(1uLL);
  swift_bridgeObjectRelease();
  sub_22BE31EE4(1uLL);
  uint64_t result = swift_bridgeObjectRelease();
  if (v55[2])
  {
LABEL_32:
    swift_bridgeObjectRetain();
    sub_22BE3B130(1, 1, a6, a7);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_22BE3206C(v36, a8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v37 = swift_bridgeObjectRetain();
    id v38 = sub_22BE321A0(v37, a10);
    swift_bridgeObjectRelease();
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_22BE314BC(v39);
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    id v43 = (void *)swift_allocObject();
    v43[2] = a11;
    v43[3] = a12;
    v43[4] = v38;
    v43[5] = v40;
    v43[6] = v42;
    aBlock[4] = sub_22BE32554;
    aBlock[5] = v43;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22BDD0BA8;
    void aBlock[3] = &block_descriptor_6_2;
    uint64_t v44 = _Block_copy(aBlock);
    sub_22BE91C58();
    id v45 = v38;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v44);

    return swift_bridgeObjectRelease();
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_22BE31EE4(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_22BE45848(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      _OWORD v3[2] = v5;
      void *v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BE31FC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_22BE32024(void *a1)
{
  return sub_22BE319FC(a1, *(void *)(v1 + 96), *(unsigned char *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_22BE3206C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_22BDFE2E8(0, v2, 0);
    uint64_t v3 = v18;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      if (v9)
      {
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_22BDD5734(v7, v8);
        uint64_t v11 = v8;
        if (v12)
        {
          uint64_t v13 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v10);
          uint64_t v7 = *v13;
          uint64_t v11 = v13[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = v11;
      }
      unint64_t v15 = *(void *)(v18 + 16);
      unint64_t v14 = *(void *)(v18 + 24);
      if (v15 >= v14 >> 1) {
        sub_22BDFE2E8(v14 > 1, v15 + 1, 1);
      }
      v6 += 2;
      *(void *)(v18 + 16) = v15 + 1;
      uint64_t v16 = v18 + 16 * v15;
      *(void *)(v16 + 32) = v7;
      *(void *)(v16 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v8;
      --v2;
    }
    while (v2);
  }
  return v3;
}

id sub_22BE321A0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v5 = qword_268486720;
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_22BE92D88();
    if (qword_268486728 != -1) {
      swift_once();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v6 = objc_allocWithZone(MEMORY[0x263F089B8]);
    uint64_t v7 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithString_, v7);

    uint64_t v9 = v2 - 1;
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = a1 + 56;
      do
      {
        swift_bridgeObjectRetain();
        sub_22BE3129C(a2);
        char v12 = v11;
        objc_msgSend(v8, sel_appendAttributedString_, v11);

        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_22BE92D88();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_22BE92D88();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v13 = objc_allocWithZone(MEMORY[0x263F086A0]);
        unint64_t v14 = (void *)sub_22BE92C98();
        swift_bridgeObjectRelease();
        id v15 = objc_msgSend(v13, (SEL)&selRef_minusOrderedSet_, v14);

        objc_msgSend(v8, sel_appendAttributedString_, v15);
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    return v8;
  }
  else
  {
    id v17 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v18 = (void *)sub_22BE92C98();
    id v19 = objc_msgSend(v17, sel_initWithString_, v18);

    return v19;
  }
}

uint64_t sub_22BE3250C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_22BE32554()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

id UIViewController.associatedObjectStorage.getter()
{
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_22BDD7B34(v0, (const void *)qword_26AEFFAE8, &qword_26AF00210);
}

id sub_22BE32614(void *a1, const void *a2)
{
  return sub_22BDD7B34(a1, a2, (uint64_t *)&unk_26AF00218);
}

id UIView.doc_inWindowPerformingSnapshotting.getter()
{
  id v1 = objc_msgSend(v0, sel_window);
  id v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_windowScene);

    if (v3)
    {
      id v2 = objc_msgSend(v3, sel__isPerformingSystemSnapshot);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t static UIView.doc_performAllowingAnimations(_:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1) {
    return a2();
  }
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_22BE10F20;
  *(void *)(v8 + 24) = v7;
  v10[4] = sub_22BE10F20;
  v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_22BE16ACC;
  void v10[3] = &block_descriptor_13;
  uint64_t v9 = _Block_copy(v10);
  sub_22BE91C58();
  swift_release();
  objc_msgSend((id)v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

id UIViewController.doc_inWindowPerformingSnapshotting.getter()
{
  id v1 = objc_msgSend(v0, sel_viewIfLoaded);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_doc_inWindowPerformingSnapshotting);

  return v3;
}

void sub_22BE329CC(void (*a1)(void))
{
  id v2 = v1;
  id v4 = objc_msgSend(v1, sel_parentViewController);

  if (v4)
  {
    objc_msgSend(v1, sel_willMoveToParentViewController_, 0);
    id v5 = objc_msgSend(v1, sel_viewIfLoaded);
    id v6 = objc_msgSend(v5, sel_superview);

    if (!v6)
    {
LABEL_14:
      objc_msgSend(v2, sel_removeFromParentViewController);
      return;
    }
    if (!a1)
    {
      id v13 = objc_msgSend(v1, sel_view);
      if (v13)
      {
        unint64_t v14 = v13;
        objc_msgSend(v13, sel_removeFromSuperview);

        goto LABEL_14;
      }
      goto LABEL_24;
    }
    sub_22BE91C58();
    id v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      uint64_t v8 = v7;
      a1();

      sub_22BDE0E58((uint64_t)a1);
      goto LABEL_14;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v9 = objc_msgSend(v1, sel_viewIfLoaded);
  id v10 = objc_msgSend(v9, sel_superview);

  if (!v10) {
    return;
  }
  if (a1)
  {
    sub_22BE91C58();
    id v11 = objc_msgSend(v1, sel_view);
    if (!v11) {
      goto LABEL_23;
    }
    char v12 = v11;
    a1();

    sub_22BDE0E58((uint64_t)a1);
  }
  else
  {
    id v15 = objc_msgSend(v1, sel_view);
    if (!v15)
    {
LABEL_25:
      __break(1u);
      return;
    }
    id v16 = v15;
    objc_msgSend(v15, sel_removeFromSuperview);
  }
}

id UIViewController.doc_addChildViewController(_:addSubview:)(void *a1, void (*a2)(void))
{
  id v3 = v2;
  objc_msgSend(v2, sel_addChildViewController_, a1);
  if (!a2)
  {
    id result = objc_msgSend(v2, sel_view);
    if (result)
    {
      uint64_t v8 = result;
      id result = objc_msgSend(a1, sel_view);
      if (result)
      {
        id v9 = result;
        objc_msgSend(v8, sel_addSubview_, result);

        goto LABEL_7;
      }
LABEL_12:
      __break(1u);
      return result;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_22BE91C58();
  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v7 = result;
  a2();

  sub_22BDE0E58((uint64_t)a2);
LABEL_7:

  return objc_msgSend(a1, sel_didMoveToParentViewController_, v3);
}

Swift::Void __swiftcall UIViewController.doc_addChildWithEqualAutoresizingFrame(_:)(UIViewController *a1)
{
  id v3 = [(UIViewController *)a1 view];
  if (v3)
  {
    unint64_t v14 = v3;
    id v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      id v5 = v4;
      objc_msgSend(v4, sel_bounds);
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;

      -[UIView setFrame:](v14, sel_setFrame_, v7, v9, v11, v13);
      [(UIView *)v14 setAutoresizingMask:18];
      objc_msgSend(v1, sel_doc_addChildViewController_addSubviewBlock_, a1, 0);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t UIViewController.doc_scheduleHandlerIfInLiveResize(_:)()
{
  return 0;
}

uint64_t static UIViewController.__doc_perform(deferredTransitionsAndAnimationsDisabled:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_22BE33E14;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_22BE111C8;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_22BE16ACC;
  v9[3] = &block_descriptor_13;
  double v7 = _Block_copy(v9);
  sub_22BE91C58();
  swift_release();
  objc_msgSend((id)v4, sel__performWithoutDeferringTransitions_, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_22BE34224;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_22BE111C8;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  void v11[2] = sub_22BE16ACC;
  v11[3] = &block_descriptor_24_1;
  double v9 = _Block_copy(v11);
  sub_22BE91C58();
  swift_release();
  objc_msgSend((id)v6, sel__performWithoutDeferringTransitions_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE334F8(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1) {
    return a2();
  }
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_22BE10E44;
  *(void *)(v8 + 24) = v7;
  v10[4] = sub_22BE111C8;
  v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_22BE16ACC;
  void v10[3] = &block_descriptor_76;
  double v9 = _Block_copy(v10);
  sub_22BE91C58();
  swift_release();
  objc_msgSend((id)v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE3366C()
{
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = sub_22BDD7B34(v0, (const void *)qword_26AEFFAE8, &qword_26AF00210);
  swift_getKeyPath();
  uint64_t v2 = sub_22BE0EFB4();
  swift_release();

  return v2;
}

void sub_22BE33724(void *a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, a1, *MEMORY[0x263F83E30], 0);

  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = sub_22BDD7B34(a1, (const void *)qword_26AEFFAE8, &qword_26AF00210);
  swift_getKeyPath();
  uint64_t v4 = sub_22BE0EFB4();
  swift_release();

  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  id v6 = sub_22BDD7B34(a1, (const void *)qword_26AEFFAE8, &qword_26AF00210);
  uint64_t KeyPath = swift_getKeyPath();
  swift_beginAccess();
  sub_22BDDC228(KeyPath, &v11);
  sub_22BDD473C((uint64_t)&v11);
  swift_endAccess();

  swift_release();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = a1;
  unint64_t v14 = sub_22BE33ED8;
  uint64_t v15 = v8;
  *(void *)&long long v11 = MEMORY[0x263EF8330];
  *((void *)&v11 + 1) = 1107296256;
  double v12 = sub_22BDD0BA8;
  double v13 = &block_descriptor_36_0;
  double v9 = _Block_copy(&v11);
  id v10 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v9);
}

uint64_t sub_22BE33950(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      uint64_t v6 = *(void *)(v4 + 8 * i + 32);
      objc_msgSend(a2, sel_performSelector_, v6);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_22BE33AC0(void **a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v4 = sub_22BDD7B34(v3, (const void *)qword_26AEFFAE8, &qword_26AF00210);
  swift_getKeyPath();
  uint64_t v5 = sub_22BE0EFB4();
  swift_release();

  *a2 = v5;
}

uint64_t sub_22BE33B80(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  id v3 = *a2;
  uint64_t v4 = qword_26AF003C0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = sub_22BDD7B34(v3, (const void *)qword_26AEFFAE8, &qword_26AF00210);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22BE3408C(v2, KeyPath);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22BE33C50()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE33C60()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t static UIViewController.associatedObjectStorageKey.getter@<X0>(void *a1@<X8>)
{
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a1 = qword_26AEFFAE8;
  return result;
}

uint64_t static UIViewController.associatedObjectStorageKey.setter(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  qword_26AEFFAE8 = v1;
  return result;
}

uint64_t (*static UIViewController.associatedObjectStorageKey.modify())()
{
  if (qword_26AF003C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationStyle withPreferredStyle)
{
  objc_msgSend(v1, sel_setModalPresentationStyle_, withPreferredStyle);
}

uint64_t sub_22BE33E04()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE33E14()
{
  return sub_22BE334F8(*(unsigned char *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_22BE33E20()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE33E30()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE33E40()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE33E50()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE33E88()
{
  sub_22BE33724(*(void **)(v0 + 16));
}

uint64_t sub_22BE33E98()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE33ED8()
{
  return sub_22BE33950(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_22BE33EE0(char a1, uint64_t a2)
{
  _OWORD v8[2] = a2;
  if (a1)
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(a2 + 16);
    return v2(a2);
  }
  else
  {
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_22BE2CBCC;
    *(void *)(v5 + 24) = v8;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_22BE111C8;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_22BE111C8;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_22BE16ACC;
    void aBlock[3] = &block_descriptor_66;
    uint64_t v7 = _Block_copy(aBlock);
    sub_22BE91C58();
    swift_release();
    objc_msgSend((id)v4, sel_performWithoutAnimation_, v7);
    _Block_release(v7);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v4) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22BE3408C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684870A0);
    *(void *)&long long v5 = a1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_22BE91C58();
    sub_22BDDB58C((uint64_t)&v5, a2);
  }
  else
  {
    swift_beginAccess();
    sub_22BDDC228(a2, &v5);
    sub_22BDD473C((uint64_t)&v5);
  }
  return swift_endAccess();
}

uint64_t sub_22BE34154()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE34164()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE34174()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE341AC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE341BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE341CC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE341DC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_22BE34228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void **)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_activeTouches];
  swift_beginAccess();
  long long v5 = *v4;
  swift_bridgeObjectRetain();
  unint64_t v6 = swift_bridgeObjectRetain();
  sub_22BE34378(v6, v5);
  *uint64_t v4 = v7;
  swift_bridgeObjectRelease();
  sub_22BE345F8();
  sub_22BE34638();
  uint64_t v8 = (void *)sub_22BE93038();
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v16, sel_touchesBegan_withEvent_, v8, a2);

  objc_msgSend(v2, sel_locationInView_, 0);
  double v9 = &v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  *(void *)double v9 = v10;
  *((void *)v9 + 1) = v11;
  v9[16] = 0;
  unint64_t v12 = (unint64_t)*v4;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_22BE93568();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)(v12 + 16);
  }
  if (v13 <= 1) {
    uint64_t v14 = 1;
  }
  else {
    uint64_t v14 = 4;
  }
  return objc_msgSend(v2, sel_setState_, v14);
}

void sub_22BE34378(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_22BE93528();
    sub_22BE345F8();
    sub_22BE34638();
    sub_22BE93068();
    unint64_t v2 = (unint64_t)v18[2];
    id v17 = v18[3];
    uint64_t v3 = (uint64_t)v18[4];
    id v4 = v18[5];
    unint64_t v5 = (unint64_t)v18[6];
  }
  else
  {
    id v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    id v17 = (void *)(a1 + 56);
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      unint64_t v12 = (char *)v4;
      goto LABEL_29;
    }
    uint64_t v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = v17[v14];
    unint64_t v12 = (char *)v4 + 1;
    if (!v15)
    {
      unint64_t v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = v17[(void)v12];
      if (!v15)
      {
        unint64_t v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = v17[(void)v12];
        if (!v15)
        {
          unint64_t v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = v17[(void)v12];
          if (!v15)
          {
            unint64_t v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = v17[(void)v12];
            if (!v15)
            {
              objc_super v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                unint64_t v15 = v17[(void)v16++];
                if (v15)
                {
                  unint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_22BE24EB8();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_22BE53A08(v18, v13);

      id v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_22BE935A8())
      {
        sub_22BE345F8();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v18[0];
        swift_unknownObjectRelease();
        unint64_t v12 = (char *)v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_22BE345F8()
{
  unint64_t result = qword_2684870C0;
  if (!qword_2684870C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2684870C0);
  }
  return result;
}

unint64_t sub_22BE34638()
{
  unint64_t result = qword_268487788;
  if (!qword_268487788)
  {
    sub_22BE345F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487788);
  }
  return result;
}

id sub_22BE346A8(uint64_t a1, uint64_t a2)
{
  sub_22BE345F8();
  sub_22BE34638();
  id v4 = (void *)sub_22BE93038();
  v26.receiver = v2;
  v26.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v26, sel_touchesMoved_withEvent_, v4, a2);

  id v5 = objc_msgSend(v2, sel_view);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  objc_msgSend(v5, sel_bounds);
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  objc_msgSend(v2, sel_locationInView_, v6);
  v27.CGFloat x = v15;
  v27.CGFloat y = v16;
  v28.origin.CGFloat x = v8;
  v28.origin.CGFloat y = v10;
  v28.size.CGFloat width = v12;
  v28.size.CGFloat height = v14;
  BOOL v17 = CGRectContainsPoint(v28, v27);

  if (!v17) {
    goto LABEL_7;
  }
  uint64_t v18 = (double *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  if (v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow + 16]) {
    goto LABEL_7;
  }
  double v19 = *v18;
  objc_msgSend(v2, sel_locationInView_, 0);
  double v21 = vabdd_f64(v20, v19);
  objc_msgSend(v2, sel_locationInView_, 0);
  if (v21 <= 15.0
    && ((_BYTE)v18[2] & 1) == 0
    && (double v22 = v18[1],
        objc_msgSend(v2, sel_locationInView_, 0),
        objc_msgSend(v2, sel_locationInView_, 0),
        vabdd_f64(v23, v22) <= 15.0))
  {
    uint64_t v24 = 2;
  }
  else
  {
LABEL_7:
    uint64_t v24 = 4;
  }
  return objc_msgSend(v2, sel_setState_, v24);
}

id sub_22BE34864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  sub_22BE34FAC(a1);
  swift_endAccess();
  sub_22BE345F8();
  sub_22BE34638();
  uint64_t v6 = (void *)sub_22BE93038();
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v22, sel_touchesEnded_withEvent_, v6, a2);

  id v7 = objc_msgSend(v3, sel_view);
  if (!v7) {
    goto LABEL_4;
  }
  CGFloat v8 = v7;
  objc_msgSend(v7, sel_bounds);
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  objc_msgSend(v3, sel_locationInView_, v8);
  v23.CGFloat x = v17;
  v23.CGFloat y = v18;
  v24.origin.CGFloat x = v10;
  v24.origin.CGFloat y = v12;
  v24.size.CGFloat width = v14;
  v24.size.CGFloat height = v16;
  BOOL v19 = CGRectContainsPoint(v24, v23);

  if (v19) {
    uint64_t v20 = 3;
  }
  else {
LABEL_4:
  }
    uint64_t v20 = 4;
  return objc_msgSend(v3, sel_setState_, v20);
}

uint64_t sub_22BE349D0(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  sub_22BE345F8();
  sub_22BE34638();
  uint64_t v8 = sub_22BE93048();
  id v9 = a4;
  id v10 = a1;
  a5(v8, v9);

  return swift_bridgeObjectRelease();
}

id sub_22BE34B7C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  v1[16] = 1;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_22BE937E8())
  {
    sub_22BE10108(MEMORY[0x263F8EE78]);
    uint64_t v2 = v5;
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE88];
  }
  uint64_t v3 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_activeTouches];
  swift_beginAccess();
  *(void *)uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  return objc_msgSendSuper2(&v6, sel_reset);
}

id DOCButtonGestureRecognizer.__allocating_init(target:action:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    objc_super v6 = __swift_project_boxed_opaque_existential_0(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v6);
    id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_22BE938B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone(v2), sel_initWithTarget_action_, v10, a2);
  swift_unknownObjectRelease();
  return v11;
}

id DOCButtonGestureRecognizer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE34E04(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    id v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_22BE679C0(v12, v13);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

void sub_22BE34FAC(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_22BE93568()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_22BE93528();
      sub_22BE345F8();
      sub_22BE34638();
      sub_22BE93068();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_22BE24EB8();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        CGFloat v17 = (void *)sub_22BE67B50(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_22BE935A8())
        {
          sub_22BE345F8();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

uint64_t method lookup function for DOCButtonGestureRecognizer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCButtonGestureRecognizer);
}

unint64_t sub_22BE35288()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE99770;
  *(void *)(inited + 32) = 0x6E696769726FLL;
  *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0xE600000000000000;
  *(void *)(inited + 48) = sub_22BE93078();
  return sub_22BDD4F50(inited);
}

void __swiftcall DOCAnalyticsConnectToServerShownEvent.init(bundleID:origin:)(DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent *__return_ptr retstr, Swift::String_optional bundleID, DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent::Origin origin)
{
  DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent::Origin v3 = *(unsigned char *)origin;
  retstr->name._char countAndFlagsBits = 0xD000000000000038;
  retstr->name._object = (void *)0x800000022BEA2070;
  retstr->Swift::String_optional bundleID = bundleID;
  retstr->origin = v3;
}

unint64_t (*sub_22BE35328())()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v5[0] = *(_OWORD *)v0;
  v5[1] = v1;
  char v6 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 48) = *(unsigned char *)(v0 + 32);
  sub_22BDCA53C((uint64_t)v5);
  return sub_22BE35564;
}

uint64_t DOCAnalyticsConnectToServerShownEvent.Origin.rawValue.getter()
{
  return *v0;
}

DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent::Origin_optional __swiftcall DOCAnalyticsConnectToServerShownEvent.Origin.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent::Origin_optional)rawValue;
}

unint64_t sub_22BE353C4()
{
  unint64_t result = qword_2684877A0;
  if (!qword_2684877A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684877A0);
  }
  return result;
}

DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent::Origin_optional sub_22BE35418(Swift::Int *a1)
{
  return DOCAnalyticsConnectToServerShownEvent.Origin.init(rawValue:)(*a1);
}

ValueMetadata *type metadata accessor for DOCAnalyticsConnectToServerShownEvent()
{
  return &type metadata for DOCAnalyticsConnectToServerShownEvent;
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsConnectToServerShownEvent.Origin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE354FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_22BE35524()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 49, 7);
}

unint64_t sub_22BE35564()
{
  return sub_22BE35288();
}

unint64_t DOCUSBFormattingErrorDomain.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t DOCUSBFormattingErrorCode.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t DOCUSBFormattingErrorCode.rawValue.getter()
{
  return 1;
}

uint64_t sub_22BE355A0()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE355E4()
{
  return sub_22BE93A08();
}

uint64_t sub_22BE3560C()
{
  return sub_22BE93A48();
}

void *sub_22BE3564C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_22BE35660(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_22BE3566C(void **a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *a1;
  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_22BE925E8();
  __swift_project_value_buffer(v6, (uint64_t)qword_2684879E0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = v5;
  uint64_t v8 = sub_22BE925C8();
  os_log_type_t v9 = sub_22BE93148();
  uint64_t v10 = &OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName;
  unint64_t v11 = &selRef_removeObserver_;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = v27;
    *(_DWORD *)uint64_t v12 = 136315650;
    sub_22BDD8478(0x6F6974617265706FLL, 0xEF293A726F66286ELL, &v28);
    sub_22BE93408();
    os_log_type_t type = v9;
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_22BDD8478(a2, a3, &v28);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    id v13 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
    uint64_t v14 = sub_22BE92CD8();
    uint64_t v15 = a2;
    unint64_t v17 = v16;

    uint64_t v18 = v14;
    unint64_t v11 = &selRef_removeObserver_;
    sub_22BDD8478(v18, v17, &v28);
    sub_22BE93408();

    a2 = v15;
    uint64_t v10 = &OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v8, type, "%s identifer=%s source identifier=%s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v27, -1, -1);
    MEMORY[0x230F57540](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v19 = [*(id *)&v7[v10[245]] v11[486]];
  uint64_t v20 = sub_22BE92CD8();
  uint64_t v22 = v21;

  if (v20 == a2 && v22 == a3) {
    char v24 = 1;
  }
  else {
    char v24 = sub_22BE938C8();
  }
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t sub_22BE3598C(void *a1)
{
  uint64_t v3 = sub_22BE92B08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_22BE92B58();
  uint64_t v7 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  os_log_type_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id v10 = a1;
  MEMORY[0x230F55950]();
  if (*(void *)((*(void *)(v1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_22BE92EF8();
  sub_22BE92F48();
  sub_22BE92ED8();
  swift_endAccess();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  aBlock[4] = sub_22BE3E6AC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_65;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v10;
  sub_22BE92B38();
  v15[1] = MEMORY[0x263F8EE78];
  sub_22BDD69C4((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v15[0]);
  return swift_release();
}

uint64_t sub_22BE35C9C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_22BE35CDC()
{
  id v1 = objc_msgSend(v0, sel_volumeName);
  if (v1)
  {
    char v2 = v1;
    uint64_t v3 = sub_22BE92CD8();
LABEL_5:
    uint64_t v5 = v3;

    return (id)v5;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    char v2 = result;
    uint64_t v3 = sub_22BE91F78();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_22BE35DB8()
{
  id v1 = objc_msgSend(v0, sel_filesystemType);
  if (!v1)
  {
    sub_22BE92CD8();
    goto LABEL_15;
  }
  char v2 = v1;
  uint64_t v3 = sub_22BE92CD8();
  uint64_t v5 = v4;

  uint64_t v6 = sub_22BE92CD8();
  if (!v5)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_22BE92CD8();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v6 == v3 && v5 == v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v9 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    id result = objc_msgSend(v0, sel_filesystem);
    if (result) {
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_25;
  }
  if (sub_22BE92CD8() == v3 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v12 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
LABEL_21:
  id result = objc_msgSend(v0, sel_filesystem);
  if (result)
  {
LABEL_22:
    uint64_t v15 = result;
    swift_bridgeObjectRetain();
    unint64_t v16 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(self, sel_descriptorWithName_filesystem_, v16, v15);

    return v13;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t DOCUSBEraseOperation.State.init(rawValue:)(unint64_t a1)
{
  return sub_22BE3C848(a1);
}

uint64_t sub_22BE3601C()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE36064()
{
  return sub_22BE93A08();
}

uint64_t sub_22BE36090()
{
  return sub_22BE93A48();
}

unint64_t sub_22BE360D4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_22BE3C848(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id DOCUSBEraseOperation.source.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source);
}

uint64_t sub_22BE361AC()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_22BE361F4(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_22BE36240())()
{
  return j__swift_endAccess;
}

uint64_t sub_22BE36304()
{
  uint64_t v1 = v0;
  sub_22BE93648();
  sub_22BE92D88();
  id v2 = *(id *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
  id v3 = objc_msgSend(v2, sel_description);
  sub_22BE92CD8();

  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AF002C0);
  sub_22BE92CF8();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  swift_beginAccess();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  objc_msgSend(v1, sel_operationState);
  sub_22BE93758();
  return 0;
}

uint64_t sub_22BE3650C()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source), sel_identifier);
  uint64_t v2 = sub_22BE92CD8();

  return v2;
}

id sub_22BE3656C()
{
  id result = objc_msgSend(self, sel_sharedManager);
  if (result)
  {
    id v1 = result;
    id v2 = sub_22BE3C054();

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_22BE365CC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_identifier);
  sub_22BE92CD8();

  id v2 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(self, sel_sharedManager);
  if (result)
  {
    char v4 = result;
    id v5 = sub_22BE3C054();

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22BE36674()
{
  v85[9] = *MEMORY[0x263EF8340];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_22BE92CD8();

  id v3 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  id v5 = v0;
  id v6 = objc_msgSend(v1, sel_identifier);
  sub_22BE92CD8();

  uint64_t v7 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_sharedManager);
  if (!v8) {
    __break(1u);
  }
  char v9 = v8;
  id v10 = sub_22BE3C054();

  if (v10)
  {
    uint64_t v78 = v4;
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22BE925E8();
    __swift_project_value_buffer(v11, (uint64_t)qword_268487A70);
    id v12 = v10;
    id v13 = sub_22BE925C8();
    os_log_type_t v14 = sub_22BE93148();
    uint64_t v77 = v5;
    if (os_log_type_enabled(v13, v14))
    {
      BOOL v76 = v3;
      uint64_t v15 = swift_slowAlloc();
      unint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      v85[0] = v75;
      *(_DWORD *)uint64_t v15 = 138412802;
      id v17 = v12;
      sub_22BE93408();
      void *v16 = v10;

      *(_WORD *)(v15 + 12) = 2080;
      id v18 = objc_msgSend(v17, sel_filesystem);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2684877F8);
      uint64_t v19 = sub_22BE92CF8();
      id aBlock = (id)sub_22BDD8478(v19, v20, v85);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      id v21 = objc_msgSend(v17, sel_filesystemType);
      if (v21)
      {
        uint64_t v22 = v21;
        sub_22BE92CD8();
        unint64_t v24 = v23;
      }
      else
      {
        unint64_t v24 = 0;
      }
      unint64_t v80 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AF002C0);
      uint64_t v35 = sub_22BE92CF8();
      id aBlock = (id)sub_22BDD8478(v35, v36, v85);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v13, v14, "[Erase] disk: %@ filesystem: %s filesystemType: %s", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v75, -1, -1);
      MEMORY[0x230F57540](v15, -1, -1);

      id v3 = v76;
    }
    else
    {
    }
    id v37 = (id)_DocumentManagerBundle();
    uint64_t v38 = v78;
    if (v37)
    {
      uint64_t v39 = v37;
      sub_22BE91F78();

      uint64_t v40 = *(void **)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem];
      if (v40)
      {
        id v41 = v40;
        unsigned int v42 = objc_msgSend(v41, sel_isEncrypted, 0x800000022BEA2340);
        uint64_t v43 = *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName + 8];
        if (v42)
        {
          if (v43)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRetain();
          uint64_t v44 = (void *)sub_22BE92C98();
          swift_bridgeObjectRelease();
          id v45 = (void *)sub_22BE92C98();
          swift_bridgeObjectRelease();
          id v46 = objc_msgSend(self, sel_descriptorWithName_password_filesystem_, v44, v45, v41);

          uint64_t v38 = v78;
        }
        else
        {
          if (v43)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          id v45 = (void *)sub_22BE92C98();
          swift_bridgeObjectRelease();
          id v46 = objc_msgSend(self, sel_descriptorWithName_filesystem_, v45, v41);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_22BE35CDC();
        id v46 = sub_22BE35DB8();
        swift_bridgeObjectRelease();
        if (!v46)
        {

          swift_release();
          return;
        }
      }
      id v47 = v46;
      uint64_t v48 = self;
      id aBlock = 0;
      id v49 = v12;
      id v50 = v47;
      id v51 = objc_msgSend(v48, sel_eraseVolumeWithChildDisk_descriptor_error_, v49, v50, &aBlock);
      if (v51)
      {
        unint64_t v52 = v51;
        id v53 = aBlock;

        id v54 = objc_msgSend(self, sel_forceUnmount);
        id v55 = objc_msgSend(v54, sel_isEnabled);

        uint64_t v56 = sub_22BE925C8();
        os_log_type_t v57 = sub_22BE93148();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = swift_slowAlloc();
          *(_DWORD *)uint64_t v58 = 67109376;
          LODWORD(aBlock) = v55;
          sub_22BE93408();
          *(_WORD *)(v58 + 8) = 1024;
          LODWORD(aBlock) = v55;
          sub_22BE93408();
          _os_log_impl(&dword_22BDC5000, v56, v57, "[Erase] Force unmount is enabled=%{BOOL}d, setting SKEraseVolume.forceUnmount to %{BOOL}d", (uint8_t *)v58, 0xEu);
          MEMORY[0x230F57540](v58, -1, -1);
        }

        objc_msgSend(v52, sel_setForceUnmount_, v55);
        BOOL v83 = sub_22BE3E60C;
        uint64_t v84 = v38;
        id aBlock = (id)MEMORY[0x263EF8330];
        unint64_t v80 = 1107296256;
        uint64_t v81 = sub_22BDDF1BC;
        uint64_t v82 = &block_descriptor_14;
        uint64_t v59 = _Block_copy(&aBlock);
        sub_22BE91C58();
        swift_release();
        id v60 = objc_msgSend(v52, sel_eraseProgressReportingWithCompletionBlock_, v59);

        swift_release();
        _Block_release(v59);
      }
      else
      {
        id v61 = v3;
        id v62 = aBlock;
        uint64_t v63 = (void *)sub_22BE92088();

        swift_willThrow();
        id v64 = v63;
        id v65 = v63;
        BOOL v66 = sub_22BE925C8();
        os_log_type_t v67 = sub_22BE93158();
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v68 = (uint8_t *)swift_slowAlloc();
          uint64_t v69 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v68 = 138412290;
          id v70 = v63;
          uint64_t v71 = (void *)_swift_stdlib_bridgeErrorToNSError();
          id aBlock = v71;
          sub_22BE93408();
          *uint64_t v69 = v71;

          _os_log_impl(&dword_22BDC5000, v66, v67, "[Erase] failed error: %@", v68, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
          swift_arrayDestroy();
          MEMORY[0x230F57540](v69, -1, -1);
          MEMORY[0x230F57540](v68, -1, -1);
        }
        else
        {
        }
        uint64_t v72 = &v77[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
        swift_beginAccess();
        *uint64_t v72 = 1;
        id v73 = v63;
        objc_msgSend(v77, sel_setOperationState_, 2);
        uint64_t v74 = *(void (**)(void, void *))&v77[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
        if (v74)
        {
          sub_22BE91C58();
          v74(0, v63);
          sub_22BDE0E58((uint64_t)v74);
        }

        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487718);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22BE99770;
    *(void *)(inited + 32) = sub_22BE92CD8();
    *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v26;
    id aBlock = 0;
    unint64_t v80 = 0xE000000000000000;
    sub_22BE93648();
    sub_22BE92D88();
    v85[0] = (uint64_t)v3;
    type metadata accessor for FPProviderDomainID(0);
    sub_22BE93758();
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    unint64_t v27 = sub_22BE1A79C(inited);
    sub_22BE7E378(v27);
    swift_bridgeObjectRelease();
    id v28 = objc_allocWithZone(MEMORY[0x263F087E8]);
    os_log_type_t v29 = (void *)sub_22BE92C98();
    uint64_t v30 = (void *)sub_22BE92BE8();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v28, sel_initWithDomain_code_userInfo_, v29, 1, v30);

    uint64_t v32 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *uint64_t v32 = 1;
    id v33 = v31;
    objc_msgSend(v5, sel_setOperationState_, 2);
    char v34 = *(void (**)(void, id))&v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v34)
    {
      sub_22BE91C58();
      v34(0, v33);
      sub_22BDE0E58((uint64_t)v34);
    }

    swift_release();
  }
}

void sub_22BE372D8(void *a1, void *a2, char *a3)
{
  if (a1)
  {
    id v58 = a1;
    objc_msgSend(a3, sel_setOperationState_, 1);
    uint64_t v4 = *(void **)&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem];
    if (!v4)
    {
LABEL_20:

      return;
    }
    id v5 = v4;
    if (objc_msgSend(v5, sel_isEncrypted))
    {
      id v6 = objc_msgSend(self, sel_sharedConnection);
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = a3;
        id v64 = sub_22BE3E65C;
        uint64_t v65 = v8;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v61 = 1107296256;
        id v62 = sub_22BE385F8;
        uint64_t v63 = &block_descriptor_53;
        char v9 = _Block_copy(&aBlock);
        id v10 = a3;
        swift_release();
        objc_msgSend(v7, sel_providerDomainsCompletionHandler_, v9);

        _Block_release(v9);
        return;
      }

      goto LABEL_20;
    }
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_22BE925E8();
    __swift_project_value_buffer(v22, (uint64_t)qword_268487A70);
    id v23 = v58;
    unint64_t v24 = a3;
    id v25 = v23;
    uint64_t v26 = v24;
    unint64_t v27 = sub_22BE925C8();
    os_log_type_t v28 = sub_22BE93148();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t v59 = v28;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v66 = v57;
      *(_DWORD *)uint64_t v29 = 136315906;
      id v30 = v25;
      id v31 = objc_msgSend(v30, sel_description);
      uint64_t v32 = sub_22BE92CD8();
      unint64_t v34 = v33;

      uint64_t aBlock = sub_22BDD8478(v32, v34, &v66);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      id v35 = objc_msgSend(v30, sel_mountPoint);
      if (v35)
      {
        unint64_t v36 = v35;
        sub_22BE92CD8();
        uint64_t v38 = v37;
      }
      else
      {
        uint64_t v38 = 0;
      }
      uint64_t v61 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AF002C0);
      uint64_t v41 = sub_22BE92CF8();
      uint64_t aBlock = sub_22BDD8478(v41, v42, &v66);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2080;
      id v43 = objc_msgSend(v30, sel_volumeUUID);
      if (v43)
      {
        uint64_t v44 = v43;
        sub_22BE92CD8();
        uint64_t v46 = v45;
      }
      else
      {
        uint64_t v46 = 0;
      }
      uint64_t v61 = v46;
      uint64_t v47 = sub_22BE92CF8();
      uint64_t aBlock = sub_22BDD8478(v47, v48, &v66);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 32) = 2080;
      id v49 = objc_msgSend(*(id *)&v26[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
      uint64_t v50 = sub_22BE92CD8();
      unint64_t v52 = v51;

      uint64_t aBlock = sub_22BDD8478(v50, v52, &v66);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v27, v59, "[Erase] success! New disk %s mountpoint=%s volumeUUID=%s  old source identifier=%s", (uint8_t *)v29, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v57, -1, -1);
      MEMORY[0x230F57540](v29, -1, -1);
    }
    else
    {
    }
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v26;
    *(void *)(v53 + 24) = v25;
    id v64 = sub_22BE3E654;
    uint64_t v65 = v53;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v61 = 1107296256;
    id v62 = sub_22BE0469C;
    uint64_t v63 = &block_descriptor_47_1;
    id v54 = _Block_copy(&aBlock);
    id v55 = v25;
    uint64_t v56 = v26;
    swift_release();
    objc_msgSend(v55, sel_mountWithCompletionBlock_, v54);
    _Block_release(v54);
  }
  else
  {
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_22BE925E8();
    __swift_project_value_buffer(v12, (uint64_t)qword_268487A70);
    id v13 = a2;
    id v14 = a2;
    uint64_t v15 = sub_22BE925C8();
    os_log_type_t v16 = sub_22BE93158();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t aBlock = v18;
      *(_DWORD *)id v17 = 136315138;
      uint64_t v66 = (uint64_t)a2;
      id v19 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268488470);
      uint64_t v20 = sub_22BE92CF8();
      uint64_t v66 = sub_22BDD8478(v20, v21, &aBlock);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22BDC5000, v15, v16, "[Erase] failed with error: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v18, -1, -1);
      MEMORY[0x230F57540](v17, -1, -1);
    }
    else
    {
    }
    uint64_t v39 = &a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    char *v39 = 1;
    objc_msgSend(a3, sel_setOperationState_, 2);
    uint64_t v40 = *(void (**)(void, void *))&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v40)
    {
      sub_22BE91C58();
      v40(0, a2);
      sub_22BDE0E58((uint64_t)v40);
    }
  }
}

void sub_22BE37AD4(void *a1, uint64_t a2, void *a3)
{
  if (!a2) {
    return;
  }
  uint64_t v5 = sub_22BE37F24(a2);
  if (!v5) {
    return;
  }
  uint64_t v6 = v5;
  id v7 = a3;
  uint64_t v8 = sub_22BE3CC38(v6, v7);
  swift_bridgeObjectRelease();

  char v9 = sub_22BDFCD90(v8);
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    uint64_t v13 = *(void *)(v8 + 16);
    swift_release();
    if (v13 == 1)
    {
      uint64_t v14 = qword_268486828;
      id v15 = v12;
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_22BE925E8();
      __swift_project_value_buffer(v16, (uint64_t)qword_268487A70);
      id v17 = v15;
      uint64_t v18 = sub_22BE925C8();
      os_log_type_t v19 = sub_22BE93148();
      if (os_log_type_enabled(v18, v19))
      {
        os_log_type_t typea = v19;
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        aBlock[0] = v37;
        *(_DWORD *)uint64_t v20 = 136315138;
        buf = v20;
        id v21 = v17;
        id v22 = v17;
        id v23 = objc_msgSend(v21, sel_description);
        uint64_t v24 = sub_22BE92CD8();
        unint64_t v26 = v25;

        id v17 = v22;
        sub_22BDD8478(v24, v26, aBlock);
        sub_22BE93408();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22BDC5000, v18, typea, "new encrypted volume %s", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x230F57540](v37, -1, -1);
        MEMORY[0x230F57540](buf, -1, -1);
      }
      else
      {
      }
      id v30 = self;
      id v31 = (void *)sub_22BE92C98();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = a1;
      *(void *)(v32 + 24) = v7;
      aBlock[4] = (uint64_t)sub_22BE3E6A4;
      aBlock[5] = v32;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_22BE0469C;
      void aBlock[3] = (uint64_t)&block_descriptor_59;
      unint64_t v33 = _Block_copy(aBlock);
      id v34 = v7;
      id v35 = a1;
      swift_release();
      objc_msgSend(v30, sel_unlockDomain_withPassword_saveToKeychain_completionHandler_, v17, v31, 0, v33);
      _Block_release(v33);

      return;
    }
  }
  else
  {
    swift_release();
  }
  if (qword_268486828 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_22BE925E8();
  __swift_project_value_buffer(v27, (uint64_t)qword_268487A70);
  os_log_type_t type = sub_22BE925C8();
  os_log_type_t v28 = sub_22BE93158();
  if (os_log_type_enabled(type, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_22BDC5000, type, v28, "[Erase] encrypted volume: unlock failed, unable to find an FPDomain matching our new volume)", v29, 2u);
    MEMORY[0x230F57540](v29, -1, -1);
  }
}

uint64_t sub_22BE37F24(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487800);
    uint64_t v2 = sub_22BE93828();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = sub_22BE91C58();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v11 = (v5 - 1) & v5;
      unint64_t v12 = __clz(__rbit64(v5)) | (v8 << 6);
      int64_t v13 = v8;
      goto LABEL_28;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v28) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v14);
    int64_t v13 = v8 + 1;
    if (!v15)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v28) {
        goto LABEL_42;
      }
      unint64_t v15 = *(void *)(v29 + 8 * v13);
      if (!v15)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v28) {
          goto LABEL_42;
        }
        unint64_t v15 = *(void *)(v29 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v28) {
            goto LABEL_42;
          }
          unint64_t v15 = *(void *)(v29 + 8 * v13);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_28:
    sub_22BDFFA30(*(void *)(a1 + 48) + 40 * v12, (uint64_t)v35);
    sub_22BDD854C(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v36 + 8);
    v33[0] = v36[0];
    v33[1] = v36[1];
    uint64_t v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_22BDFFA30((uint64_t)v32, (uint64_t)v30);
    type metadata accessor for FPProviderDomainID(0);
    if (!swift_dynamicCast())
    {
      id v31 = 0;
      sub_22BE035C8((uint64_t)v32, &qword_268487808);
      goto LABEL_41;
    }
    id v17 = v31;
    sub_22BDD854C((uint64_t)v33 + 8, (uint64_t)v30);
    sub_22BE035C8((uint64_t)v32, &qword_268487808);
    sub_22BDD9D50(0, &qword_268486EA8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      id v31 = 0;

LABEL_41:
      uint64_t v27 = v31;
      swift_release();

      sub_22BE24EB8();
      swift_release();
      return 0;
    }
    uint64_t v18 = v31;
    sub_22BE92CD8();
    sub_22BE939F8();
    sub_22BE92D48();
    uint64_t v19 = sub_22BE93A48();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = 8 * v9;
    *(void *)(*(void *)(v2 + 48) + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v17;
    *(void *)(*(void *)(v2 + 56) + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v18;
    ++*(void *)(v2 + 16);
    int64_t v8 = v13;
    unint64_t v5 = v11;
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_42:
    swift_release();
    sub_22BE24EB8();
    return v2;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v16);
  if (v15)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v13);
    ++v16;
    if (v15) {
      goto LABEL_27;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

id sub_22BE3837C(int a1, id a2, char *a3)
{
  if (a2)
  {
    id v5 = a2;
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22BE925E8();
    __swift_project_value_buffer(v6, (uint64_t)qword_268487A70);
    id v7 = a2;
    id v8 = a2;
    unint64_t v9 = sub_22BE925C8();
    os_log_type_t v10 = sub_22BE93158();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v20[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      id v13 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268487218);
      uint64_t v14 = sub_22BE92CF8();
      sub_22BDD8478(v14, v15, v20);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22BDC5000, v9, v10, "[Erase] encrypted volume: unlock failed with error: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v12, -1, -1);
      MEMORY[0x230F57540](v11, -1, -1);
    }
    else
    {
    }
  }
  uint64_t v16 = *(void *)&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
  id v17 = &a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
  swift_beginAccess();
  *id v17 = 1;
  id result = objc_msgSend(a3, sel_setOperationState_, 2);
  uint64_t v19 = *(void (**)(uint64_t, id))&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  if (v19)
  {
    sub_22BE91C58();
    v19(v16, a2);
    return (id)sub_22BDE0E58((uint64_t)v19);
  }
  return result;
}

uint64_t sub_22BE385F8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(void *, uint64_t))(a1 + 32);
  if (a3) {
    uint64_t v5 = sub_22BE92BF8();
  }
  else {
    uint64_t v5 = 0;
  }
  sub_22BE91C58();
  id v6 = a2;
  v4(a2, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_22BE386A4(void *a1, char *a2, void *a3)
{
  sleep(1u);
  if (a1)
  {
    id v6 = a1;
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_22BE925E8();
    __swift_project_value_buffer(v7, (uint64_t)qword_268487A70);
    id v8 = a1;
    id v9 = a1;
    os_log_type_t v10 = sub_22BE925C8();
    os_log_type_t v11 = sub_22BE93158();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v35[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      id v14 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268487218);
      uint64_t v15 = sub_22BE92CF8();
      sub_22BDD8478(v15, v16, v35);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22BDC5000, v10, v11, "[Erase] mount failed with error: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v13, -1, -1);
      MEMORY[0x230F57540](v12, -1, -1);
    }
    else
    {
    }
    uint64_t v28 = *(void *)&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
    uint64_t v29 = &a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *uint64_t v29 = 1;
    id v30 = a1;
    objc_msgSend(a2, sel_setOperationState_, 2);
    id v31 = *(void (**)(uint64_t, void *))&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v31)
    {
      sub_22BE91C58();
      v31(v28, a1);
      sub_22BDE0E58((uint64_t)v31);
    }
  }
  else
  {
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_22BE925E8();
    __swift_project_value_buffer(v17, (uint64_t)qword_268487A70);
    id v18 = a3;
    uint64_t v19 = sub_22BE925C8();
    os_log_type_t v20 = sub_22BE93148();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v35[0] = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      id v23 = v18;
      id v24 = objc_msgSend(v23, sel_description);
      uint64_t v25 = sub_22BE92CD8();
      unint64_t v27 = v26;

      sub_22BDD8478(v25, v27, v35);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v19, v20, "[Erase] mount success! Mounted new disk %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v22, -1, -1);
      MEMORY[0x230F57540](v21, -1, -1);
    }
    else
    {
    }
    uint64_t v32 = *(void *)&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
    unint64_t v33 = &a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *unint64_t v33 = 1;
    objc_msgSend(a2, sel_setOperationState_, 2);
    uint64_t v34 = *(void (**)(uint64_t, void))&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v34)
    {
      sub_22BE91C58();
      v34(v32, 0);
      sub_22BDE0E58((uint64_t)v34);
    }
  }
}

id DOCUSBEraseOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCUSBEraseOperation.init()()
{
}

id DOCUSBEraseOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUSBEraseOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE38CA4(void *a1)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  objc_super v2 = self;
  v12[0] = 0;
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_eraseVolumeWithChildDisk_error_, v3, v12);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = v12[0];

    id v7 = objc_msgSend(v5, sel_formattableFilesystems);
    sub_22BDD9D50(0, &qword_2684877C8);
    uint64_t v8 = sub_22BE92EB8();
  }
  else
  {
    id v9 = v12[0];
    os_log_type_t v10 = (void *)sub_22BE92088();

    swift_willThrow();
    return MEMORY[0x263F8EE78];
  }
  return v8;
}

id sub_22BE38DD8(void *a1)
{
  v32[4] = *(id *)MEMORY[0x263EF8340];
  id v2 = objc_msgSend(self, sel_usbRenameErase);
  unsigned int v3 = objc_msgSend(v2, sel_isEnabled);

  if (!v3) {
    return 0;
  }
  if (qword_26AEFFE28 != -1) {
    swift_once();
  }
  uint64_t v4 = *((void *)off_26AEFFA78 + 2);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v4 + 24);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v13 > 0) {
      goto LABEL_6;
    }
  }
  else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_6:
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_22BE925E8();
    __swift_project_value_buffer(v6, (uint64_t)qword_268487A70);
    id v7 = sub_22BE925C8();
    os_log_type_t v8 = sub_22BE93148();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_11;
    }
    uint64_t v9 = swift_slowAlloc();
    os_log_type_t v10 = (void *)swift_slowAlloc();
    v32[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_22BDD8478(0xD000000000000011, 0x800000022BEA2140, (uint64_t *)v32);
    sub_22BE93408();
    _os_log_impl(&dword_22BDC5000, v7, v8, "[Erase] %s erase is not supported while there is an ongoing erase operation", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    os_log_type_t v11 = v10;
LABEL_10:
    MEMORY[0x230F57540](v11, -1, -1);
    MEMORY[0x230F57540](v9, -1, -1);
LABEL_11:

    return 0;
  }
  id result = objc_msgSend(self, sel_sharedManager);
  if (result)
  {
    id v14 = result;
    id v15 = sub_22BE3C054();

    if (!v15)
    {
      if (qword_268486828 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_22BE925E8();
      __swift_project_value_buffer(v16, (uint64_t)qword_268487A70);
      id v17 = a1;
      id v7 = sub_22BE925C8();
      os_log_type_t v18 = sub_22BE93158();
      if (!os_log_type_enabled(v7, v18))
      {

        return 0;
      }
      uint64_t v9 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      v32[0] = v19;
      *(_DWORD *)uint64_t v9 = 136315394;
      sub_22BDD8478(0xD000000000000011, 0x800000022BEA2140, (uint64_t *)v32);
      sub_22BE93408();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v20 = sub_22BE92CD8();
      sub_22BDD8478(v20, v21, (uint64_t *)v32);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v7, v18, "[Erase] %s Failed to find an SKDisk for domain id: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      os_log_type_t v11 = v19;
      goto LABEL_10;
    }
    if (objc_msgSend(v15, sel_isInternal))
    {

      return 0;
    }
    uint64_t v22 = self;
    v32[0] = 0;
    id v23 = v15;
    id v24 = objc_msgSend(v22, sel_eraseVolumeWithChildDisk_error_, v23, v32);
    if (v24)
    {
      uint64_t v25 = v24;
      id v26 = v32[0];

      id v27 = objc_msgSend(v25, sel_formattableFilesystems);
      sub_22BDD9D50(0, &qword_2684877C8);
      unint64_t v28 = sub_22BE92EB8();
    }
    else
    {
      id v29 = v32[0];
      id v30 = (void *)sub_22BE92088();

      swift_willThrow();
      unint64_t v28 = MEMORY[0x263F8EE78];
    }
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_22BE937E8();

      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v31 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
    return (id)(v31 != 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22BE39370(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v14 = objc_msgSend(a1, sel_identifier);
  sub_22BE92CD8();

  id v15 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(self, sel_sharedManager);
  if (v16)
  {
    id v17 = v16;
    id v39 = sub_22BE3C054();

    if (v39)
    {
      uint64_t v37 = a2;
      uint64_t v38 = a3;
      os_log_type_t v18 = (void *)swift_allocObject();
      void v18[2] = a1;
      void v18[3] = v7;
      void v18[4] = a6;
      v18[5] = a7;
      uint64_t v19 = self;
      id v20 = a1;
      sub_22BE91C58();
      sub_22BE91C58();
      id v21 = objc_msgSend(v19, sel_usbEraseDialog);
      unsigned int v22 = objc_msgSend(v21, sel_isEnabled);

      id v23 = objc_msgSend(v20, sel_displayName);
      uint64_t v24 = sub_22BE92CD8();
      uint64_t v26 = v25;

      if (v22)
      {
        MEMORY[0x270FA5388](v27);
        _OWORD v36[2] = v7;
        v36[3] = v39;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = sub_22BE3C8C4;
        *(void *)(v28 + 24) = v18;
        objc_allocWithZone((Class)type metadata accessor for DOCEraseViewController());
        sub_22BE91C58();
        id v29 = sub_22BE4AD10(v24, v26, (void (*)(uint64_t))sub_22BE3D398, (uint64_t)v36, (uint64_t)sub_22BE39FC0, 0, (uint64_t)sub_22BDDF248, v28);
        objc_msgSend(a4, sel_setModalPresentationStyle_, 2);
        objc_msgSend(a4, sel_presentViewController_animated_completion_, v29, 1, 0);

        swift_release();
      }
      else
      {
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = a6;
        *(void *)(v30 + 24) = a7;
        uint64_t v31 = (void *)swift_allocObject();
        uint64_t v32 = v37;
        v31[2] = v20;
        v31[3] = v32;
        v31[4] = v38;
        v31[5] = v7;
        v31[6] = a6;
        v31[7] = a7;
        v31[8] = a4;
        swift_bridgeObjectRetain();
        id v33 = a4;
        swift_retain_n();
        id v34 = v20;
        sub_22BE91C58();
        id v35 = sub_22BE3CDDC(v24, v26, (uint64_t)sub_22BE3C8D0, v30, (uint64_t)sub_22BE3C954, (uint64_t)v31);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        objc_msgSend(v33, sel_presentViewController_animated_completion_, v35, 1, 0);

        swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_22BE39738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = objc_msgSend(self, sel_sharedManager);
  if (!v9)
  {
    __break(1u);
    JUMPOUT(0x22BE39E04);
  }
  os_log_type_t v10 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  uint64_t v48 = a4;
  uint64_t v50 = a3;
  switch(LOBYTE(v52[0]))
  {
    case 2:
    case 3:
      sub_22BE92CD8();
      break;
    default:
      break;
  }
  os_log_type_t v11 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  id v12 = objc_msgSend(v10, sel_filesystemWithSKType_isCaseSensitive_isEncrypted_, v11, v52[0] & 1, v52[0] & 1);

  if (qword_268486828 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_22BE925E8();
  __swift_project_value_buffer(v13, (uint64_t)qword_268487A70);
  id v14 = v12;
  id v15 = sub_22BE925C8();
  os_log_type_t v16 = sub_22BE93148();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v46 = a2;
    uint64_t v47 = a5;
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v52[0] = v18;
    *(_DWORD *)id v17 = 136315138;
    if (v14)
    {
      id v19 = objc_msgSend(v14, sel_description);
      uint64_t v20 = sub_22BE92CD8();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0xE600000000000000;
      uint64_t v20 = 0x3E656E6F6E3CLL;
    }
    sub_22BDD8478(v20, v22, v52);
    sub_22BE93408();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v15, v16, "erasing with format %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v18, -1, -1);
    MEMORY[0x230F57540](v17, -1, -1);

    a2 = v46;
    a5 = v47;
  }
  else
  {
  }
  id v23 = a2;
  uint64_t v24 = sub_22BE4D2E8();
  uint64_t v26 = v25;
  swift_getKeyPath();
  swift_getKeyPath();
  id v27 = v14;
  sub_22BE92738();
  swift_release();
  swift_release();
  uint64_t v28 = v52[0];
  uint64_t v29 = v52[1];
  uint64_t v30 = (objc_class *)type metadata accessor for DOCUSBEraseOperation();
  uint64_t v31 = objc_allocWithZone(v30);
  *(void *)&v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_operationState] = 0;
  v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished] = 0;
  uint64_t v32 = &v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  *uint64_t v32 = 0;
  v32[1] = 0;
  *(void *)&v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source] = v23;
  id v33 = (uint64_t *)&v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName];
  *id v33 = v24;
  v33[1] = v26;
  *(void *)&v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem] = v12;
  id v34 = (uint64_t *)&v31[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newPassword];
  *id v34 = v28;
  v34[1] = v29;
  v51.receiver = v31;
  v51.super_class = v30;
  id v35 = (char *)objc_msgSendSuper2(&v51, sel_init);
  unint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((void *)v36 + 2) = v50;
  *((void *)v36 + 3) = v35;
  *((void *)v36 + 4) = v48;
  *((void *)v36 + 5) = a5;
  uint64_t v37 = (uint64_t (**)(uint64_t, uint64_t))&v35[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  uint64_t v38 = *(void *)&v35[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  *uint64_t v37 = sub_22BE3EAC8;
  v37[1] = v36;
  sub_22BE91C58();
  id v39 = v35;
  sub_22BE91C58();
  sub_22BDE0E58(v38);
  uint64_t v40 = v39;
  uint64_t v41 = sub_22BE925C8();
  os_log_type_t v42 = sub_22BE93148();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = (void *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v52[0] = v49;
    *(_DWORD *)uint64_t v43 = 136315394;
    sub_22BDD8478(0xD000000000000067, 0x800000022BEA2680, v52);
    sub_22BE93408();
    *(_WORD *)(v43 + 12) = 2112;
    uint64_t v45 = v40;
    sub_22BE93408();
    *uint64_t v44 = v40;

    _os_log_impl(&dword_22BDC5000, v41, v42, "%s: [Erase] Adding USB Erase Operation %@", (uint8_t *)v43, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v44, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v49, -1, -1);
    MEMORY[0x230F57540](v43, -1, -1);
  }
  else
  {
  }
  sub_22BE3598C(v40);
}

uint64_t sub_22BE39E14(uint64_t a1, uint64_t a2, void *a3)
{
  v21[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = self;
  v21[0] = 0;
  id v5 = a3;
  id v6 = objc_msgSend(v4, sel_eraseVolumeWithChildDisk_error_, v5, v21);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = v21[0];

    id v9 = objc_msgSend(v7, sel_formattableFilesystems);
    sub_22BDD9D50(0, &qword_2684877C8);
    unint64_t v10 = sub_22BE92EB8();
  }
  else
  {
    id v11 = v21[0];
    id v12 = (void *)sub_22BE92088();

    swift_willThrow();
    unint64_t v10 = MEMORY[0x263F8EE78];
  }
  id v13 = objc_msgSend(v5, sel_filesystemType);
  if (!v13) {
    return swift_bridgeObjectRelease();
  }
  id v14 = v13;
  uint64_t v15 = sub_22BE92CD8();
  unint64_t v17 = v16;

  unsigned __int8 v18 = sub_22BE58228(v15, v17);
  sub_22BE4D510(v10);
  swift_bridgeObjectRelease();
  if (v18 == 4) {
    unsigned __int8 v19 = 1;
  }
  else {
    unsigned __int8 v19 = v18;
  }
  return sub_22BE4D948(v19, 1);
}

uint64_t sub_22BE39FC0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, void, void, uint64_t (*)(), void, void, void, uint64_t), uint64_t a3, uint64_t a4)
{
  v31[1] = *(id *)MEMORY[0x263EF8340];
  id v6 = objc_msgSend(self, sel_sharedManager);
  if (!v6) {
    __break(1u);
  }
  uint64_t v7 = v6;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  switch(LOBYTE(v31[0]))
  {
    case 2:
    case 3:
      sub_22BE92CD8();
      break;
    default:
      break;
  }
  id v8 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  id v9 = objc_msgSend(v7, sel_filesystemWithSKType_isCaseSensitive_isEncrypted_, v8, (uint64_t)v31[0] & 1, (uint64_t)v31[0] & 1);

  if (!v9) {
    return 1;
  }
  id v10 = v9;
  sub_22BE4D2E8();
  id v11 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  v31[0] = 0;
  unsigned int v12 = objc_msgSend(v10, sel_isValidName_error_, v11, v31);

  if (v12)
  {
    id v13 = v31[0];

    return 1;
  }
  id v15 = v31[0];
  unint64_t v16 = (void *)sub_22BE92088();

  swift_willThrow();
  v31[0] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487218);
  sub_22BDD9D50(0, (unint64_t *)&unk_2684880A0);
  swift_dynamicCast();
  id v17 = objc_msgSend(v30, sel_localizedDescription);
  uint64_t v18 = sub_22BE92CD8();
  uint64_t v20 = v19;

  id v21 = objc_msgSend(v30, sel_localizedFailureReason);
  if (v21 || (id v21 = objc_msgSend(v30, sel_localizedRecoverySuggestion)) != 0)
  {
    unint64_t v22 = a2;
    uint64_t v23 = sub_22BE92CD8();
    unint64_t v25 = v24;
  }
  else
  {
    unint64_t v22 = a2;
    uint64_t v23 = 0;
    unint64_t v25 = 0xE000000000000000;
  }
  id v26 = objc_msgSend(self, sel_mainBundle);
  uint64_t v27 = sub_22BE91F78();
  uint64_t v29 = v28;

  v22(v18, v20, v23, v25, v27, v29, 0, 0, sub_22BE3A460, 0, 0, 0, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return 0;
}

uint64_t sub_22BE3A460()
{
  return MEMORY[0x270EF0D20](0xD000000000000018, 0x800000022BEA2430, MEMORY[0x263F8EE78]);
}

void sub_22BE3A484(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  void v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = a5;
  v14[7] = a6;
  swift_bridgeObjectRetain();
  sub_22BE91C58();
  sub_22BE91C58();
  id v15 = objc_msgSend(a1, sel_displayName);
  uint64_t v16 = sub_22BE92CD8();
  uint64_t v18 = v17;

  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a5;
  *(void *)(v19 + 24) = a6;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_22BE3EA28;
  *(void *)(v20 + 24) = v14;
  sub_22BE91C58();
  sub_22BE91C58();
  id v21 = sub_22BE3D798(v16, v18, (uint64_t)sub_22BE3EB50, v19, (uint64_t)sub_22BE10E44, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  objc_msgSend(a7, sel_presentViewController_animated_completion_, v21, 1, 0);
  swift_release();
}

void sub_22BE3A630(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v12 = (objc_class *)type metadata accessor for DOCUSBEraseOperation();
  id v13 = objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_operationState] = 0;
  v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished] = 0;
  id v14 = &v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  void *v14 = 0;
  v14[1] = 0;
  *(void *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source] = a1;
  id v15 = &v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName];
  *id v15 = a2;
  v15[1] = a3;
  *(void *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem] = 0;
  uint64_t v16 = &v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newPassword];
  void *v16 = 0;
  v16[1] = 0xE000000000000000;
  v32.receiver = v13;
  v32.super_class = v12;
  id v17 = a1;
  swift_bridgeObjectRetain();
  uint64_t v18 = (char *)objc_msgSendSuper2(&v32, sel_init);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((void *)v19 + 2) = a4;
  *((void *)v19 + 3) = v18;
  *((void *)v19 + 4) = a5;
  *((void *)v19 + 5) = a6;
  uint64_t v20 = (uint64_t (**)(uint64_t, uint64_t))&v18[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  uint64_t v21 = *(void *)&v18[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  uint8_t *v20 = sub_22BE3EB2C;
  v20[1] = v19;
  sub_22BE91C58();
  unint64_t v22 = v18;
  sub_22BE91C58();
  sub_22BDE0E58(v21);
  if (qword_268486828 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_22BE925E8();
  __swift_project_value_buffer(v23, (uint64_t)qword_268487A70);
  unint64_t v24 = v22;
  unint64_t v25 = sub_22BE925C8();
  os_log_type_t v26 = sub_22BE93148();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v31 = v29;
    *(_DWORD *)uint64_t v27 = 136315394;
    sub_22BDD8478(0xD000000000000067, 0x800000022BEA2680, &v31);
    sub_22BE93408();
    *(_WORD *)(v27 + 12) = 2112;
    id v30 = v24;
    sub_22BE93408();
    *uint64_t v28 = v24;

    _os_log_impl(&dword_22BDC5000, v25, v26, "%s: [Erase] Adding USB Erase Operation %@", (uint8_t *)v27, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v29, -1, -1);
    MEMORY[0x230F57540](v27, -1, -1);
  }
  else
  {
  }
  sub_22BE3598C(v24);
}

uint64_t sub_22BE3A96C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  id v8 = (uint64_t *)(*(void *)(a3 + 16) + 24);
  swift_beginAccess();
  id v9 = a4;
  uint64_t v10 = sub_22BE3D3A0(v8, (uint64_t)v9);

  if ((unint64_t)*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v12 >= v10)
    {
LABEL_3:
      sub_22BE3B8CC(v10, v12, v11, (void (*)(uint64_t))type metadata accessor for DOCUSBEraseOperation);
      swift_endAccess();
      if (qword_268486828 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= v10) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  uint64_t v13 = sub_22BE925E8();
  __swift_project_value_buffer(v13, (uint64_t)qword_268487A70);
  id v14 = v9;
  swift_retain_n();
  id v15 = v14;
  uint64_t v16 = sub_22BE925C8();
  os_log_type_t v17 = sub_22BE93148();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v29[0] = v28;
    *(_DWORD *)uint64_t v18 = 138412546;
    uint64_t v19 = a2;
    id v20 = v15;
    sub_22BE93408();
    *uint64_t v27 = v15;

    a2 = v19;
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v21 = type metadata accessor for DOCUSBEraseOperation();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = MEMORY[0x230F55980](v22, v21);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    sub_22BDD8478(v23, v25, v29);
    sub_22BE93408();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v16, v17, "[Erase] Removed finished USB Erase operation %@ from queue: %s", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v28, -1, -1);
    MEMORY[0x230F57540](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return a5(a2);
}

uint64_t sub_22BE3ACD0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v1 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_22BE937E8();
    uint64_t v3 = result;
    if (!result) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v3)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x230F56140](0, v2);
    goto LABEL_6;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 32);
LABEL_6:
    uint64_t v3 = (uint64_t)v5;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

BOOL sub_22BE3AD94(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  id v5 = sub_22BE3C71C(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {

  }
  return v5 != 0;
}

uint64_t sub_22BE3AE28()
{
  return swift_bridgeObjectRetain();
}

void *sub_22BE3AE6C(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  id v5 = sub_22BE3C71C(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_22BE3AEF4(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  id v4 = a1;
  uint64_t v5 = sub_22BE3D3A0((uint64_t *)(v3 + 24), (uint64_t)v4);

  unint64_t v7 = *(void *)(v3 + 24);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v8 >= v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
    {
LABEL_3:
      sub_22BE3B8CC(v5, v8, v6, (void (*)(uint64_t))type metadata accessor for DOCUSBEraseOperation);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_22BE3AFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_22BE3DCDC((uint64_t *)(v5 + 24), a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v9 = *(void *)(v5 + 24);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22BE937E8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v10 >= v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10 >= v6)
    {
LABEL_3:
      sub_22BE3B8CC(v6, v10, v8, (void (*)(uint64_t))type metadata accessor for DOCUSBEraseOperation);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

uint64_t DOCUSBFormatting.deinit()
{
  swift_release();
  return v0;
}

uint64_t DOCUSBFormatting.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

char *sub_22BE3B130(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_22BDCC94C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      _OWORD v6[2] = v23;
LABEL_20:
      void *v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BE3B2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    unint64_t v6 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v6 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v6 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v6;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = MEMORY[0x230F56150](v10, v14, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v6;
  uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  int64_t v15 = (void *)(v13 + 32 + 8 * v7);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
  swift_arrayDestroy();
  if (v8)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_22BE93838();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v15 + 1);
        BOOL v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v6 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_22BE937E8();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *int64_t v15 = v3;

  return sub_22BE92ED8();
}

uint64_t sub_22BE3B5B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    sub_22BE91C58();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487800);
  uint64_t result = sub_22BE93828();
  uint64_t v8 = result;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v37 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v35) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v35) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v35) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v35) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v35) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v37 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = 8 * v13;
    uint64_t v19 = v4;
    uint64_t v20 = *(void **)(*(void *)(v4 + 48) + v18);
    uint64_t v21 = *(void **)(*(void *)(v4 + 56) + v18);
    sub_22BE92CD8();
    sub_22BE939F8();
    id v22 = v20;
    id v23 = v21;
    sub_22BE92D48();
    uint64_t v24 = sub_22BE93A48();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t v33 = 8 * v28;
    *(void *)(*(void *)(v8 + 48) + v33) = v22;
    *(void *)(*(void *)(v8 + 56) + v33) = v23;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v19;
    uint64_t v10 = v37;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22BE3B894(uint64_t a1, uint64_t a2)
{
  return sub_22BE3B8CC(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for DOCAssertion.DOCWeakAssertionObserver);
}

uint64_t sub_22BE3B8B0(uint64_t a1, uint64_t a2)
{
  return sub_22BE3B8CC(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for DOCAssertion);
}

uint64_t sub_22BE3B8CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = a4;
    uint64_t v7 = a3;
    uint64_t v4 = a2;
    uint64_t v6 = a1;
    unint64_t v8 = *v5;
    if (!(*v5 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v19 < v4) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v10 = v4 - v6;
  if (__OFSUB__(v4, v6))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = v6 - v4;
  if (__OFSUB__(0, v10))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    uint64_t v13 = v20 + v32;
    if (!__OFADD__(v20, v32)) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t v15 = 1;
    goto LABEL_22;
  }
  unint64_t v8 = *v5;
  uint64_t v32 = v6 - v4;
  uint64_t v33 = v6;
  if (*v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v12 - v10;
  if (__OFADD__(v12, v11)) {
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v8 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v8;
  uint64_t v15 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
      uint64_t v17 = v7;
      uint64_t v18 = v9;
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_22:
  uint64_t v17 = v7;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = v9;
  if (v21 <= v13) {
    uint64_t v21 = v13;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = MEMORY[0x230F56150](v15, v21, 1, v8);
  swift_bridgeObjectRelease();
  *uint64_t v5 = v8;
  uint64_t v16 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_27:
  id v22 = (char *)(v16 + 32 + 8 * v33);
  v18(v17);
  swift_arrayDestroy();
  uint64_t v23 = v32;
  if (v32)
  {
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      uint64_t v23 = v32;
      uint64_t v25 = v30 - v4;
      if (!__OFSUB__(v30, v4))
      {
LABEL_30:
        if (v25 < 0)
        {
LABEL_47:
          uint64_t result = sub_22BE93838();
          __break(1u);
          return result;
        }
        unint64_t v26 = (char *)(v16 + 32 + 8 * v4);
        if (v33 != v4 || v22 >= &v26[8 * v25])
        {
          memmove(v22, v26, 8 * v25);
          uint64_t v23 = v32;
        }
        if (!(v8 >> 62))
        {
          uint64_t v27 = *(void *)(v16 + 16);
          uint64_t v28 = v27 + v23;
          if (!__OFADD__(v27, v23))
          {
LABEL_36:
            *(void *)(v16 + 16) = v28;
            goto LABEL_37;
          }
          goto LABEL_46;
        }
LABEL_44:
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_22BE937E8();
        swift_bridgeObjectRelease();
        uint64_t v28 = v31 + v32;
        if (!__OFADD__(v31, v32)) {
          goto LABEL_36;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v24 = *(void *)(v16 + 16);
      uint64_t v25 = v24 - v4;
      if (!__OFSUB__(v24, v4)) {
        goto LABEL_30;
      }
    }
    __break(1u);
    goto LABEL_44;
  }
LABEL_37:

  return sub_22BE92ED8();
}

id sub_22BE3BBEC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AEFFB10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22BE92198();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_storageURLs);
  uint64_t v10 = sub_22BE92EB8();

  if (*(void *)(v10 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_22BE035C8((uint64_t)v4, (uint64_t *)&unk_26AEFFB10);
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_22BE925E8();
    __swift_project_value_buffer(v11, (uint64_t)qword_268487A70);
    id v12 = a1;
    uint64_t v13 = sub_22BE925C8();
    os_log_type_t v14 = sub_22BE93158();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v27 = v16;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v26 = sub_22BDD8478(0xD000000000000014, 0x800000022BEA2740, &v27);
      sub_22BE93408();
      *(_WORD *)(v15 + 12) = 2080;
      id v17 = v12;
      id v18 = objc_msgSend(v17, sel_description);
      uint64_t v19 = sub_22BE92CD8();
      unint64_t v21 = v20;

      uint64_t v26 = sub_22BDD8478(v19, v21, &v27);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22BDC5000, v13, v14, "%s: Provider domain %s contained no storageURLs", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v16, -1, -1);
      MEMORY[0x230F57540](v15, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id result = objc_msgSend(self, sel_sharedManager);
  if (result)
  {
    uint64_t v23 = result;
    sub_22BE92188();
    uint64_t v24 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v23, sel_diskForPath_, v24);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v25;
  }
  __break(1u);
  return result;
}

id sub_22BE3C054()
{
  v25[1] = *(id *)MEMORY[0x263EF8340];
  sub_22BE92CD8();
  uint64_t v0 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t v1 = self;
  v25[0] = 0;
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_providerDomainWithID_cachePolicy_error_, v2, 1, v25);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = v25[0];

    id v6 = v4;
    id v7 = sub_22BE3BBEC(v6);
  }
  else
  {
    id v8 = v25[0];
    id v9 = (void *)sub_22BE92088();

    swift_willThrow();
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22BE925E8();
    __swift_project_value_buffer(v10, (uint64_t)qword_268487A70);
    id v11 = v2;
    id v12 = v9;
    id v13 = v11;
    id v14 = v9;
    uint64_t v15 = sub_22BE925C8();
    os_log_type_t v16 = sub_22BE93158();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v18 = (void *)swift_slowAlloc();
      v25[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315650;
      sub_22BDD8478(0xD00000000000001ELL, 0x800000022BEA2720, (uint64_t *)v25);
      sub_22BE93408();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v19 = sub_22BE92CD8();
      sub_22BDD8478(v19, v20, (uint64_t *)v25);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      id v21 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268487218);
      uint64_t v22 = sub_22BE92CF8();
      sub_22BDD8478(v22, v23, (uint64_t *)v25);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22BDC5000, v15, v16, "%s: Couldn't create FPProviderDomain with identifier %s. Error: %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v18, -1, -1);
      MEMORY[0x230F57540](v17, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v7;
}

uint64_t sub_22BE3C3C8(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t i = 0; v4; uint64_t i = 0)
  {
    id v17 = *(id *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source);
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (char *)MEMORY[0x230F56140](i, a1);
      }
      else {
        id v6 = (char *)*(id *)(a1 + 8 * i + 32);
      }
      id v7 = v6;
      id v8 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
      id v9 = objc_msgSend(v17, sel_identifier);
      uint64_t v10 = sub_22BE92CD8();
      uint64_t v12 = v11;
      if (v10 == sub_22BE92CD8() && v12 == v13)
      {

        swift_bridgeObjectRelease_n();
        return i;
      }
      a2 = sub_22BE938C8();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a2) {
        return i;
      }
      uint64_t v15 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      ++i;
      if (v15 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  return i;
}

uint64_t sub_22BE3C594(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    for (uint64_t i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (char *)MEMORY[0x230F56140](i, a1);
      }
      else {
        id v8 = (char *)*(id *)(a1 + 8 * i + 32);
      }
      id v9 = v8;
      id v10 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
      uint64_t v11 = sub_22BE92CD8();
      uint64_t v13 = v12;

      if (v11 == a2 && v13 == a3)
      {

        swift_bridgeObjectRelease();
        return i;
      }
      char v15 = sub_22BE938C8();

      swift_bridgeObjectRelease();
      if (v15) {
        return i;
      }
      uint64_t v16 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (v16 == v6) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  return 0;
}

void *sub_22BE3C71C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_22BE937E8())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F56140](v8 - 4, a1) : *(id *)(a1 + 8 * v8);
      id v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v14 = v9;
      char v12 = sub_22BE3566C(&v14, a2, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v10;
      }
      if (v12)
      {
        swift_bridgeObjectRelease();
        return v10;
      }

      ++v8;
      if (v11 == v7) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_22BE3C848(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCUSBEraseOperation()
{
  return self;
}

uint64_t sub_22BE3C87C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22BE3C8C4(uint64_t a1)
{
  sub_22BE39738(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_22BE3C8D0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_22BE3C8FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_22BE3C954()
{
  sub_22BE3A484(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64));
}

void sub_22BE3C968(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = 0;
  int64_t v5 = 0;
  uint64_t v30 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  char v29 = (void *)(a4 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName);
  int64_t v31 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v5 << 6);
LABEL_21:
    id v14 = *(void **)(*(void *)(a3 + 48) + 8 * v10);
    char v15 = *(void **)(*(void *)(a3 + 56) + 8 * v10);
    sub_22BE92CD8();
    id v16 = v14;
    id v17 = v15;
    LOBYTE(v14) = sub_22BE92DE8();
    swift_bridgeObjectRelease();
    if (v14)
    {
      id v18 = objc_msgSend(v17, sel_domainFullDisplayName);
      uint64_t v19 = sub_22BE92CD8();
      uint64_t v21 = v20;

      uint64_t v22 = v29[1];
      if (v22)
      {
        if (v19 == *v29 && v22 == v21)
        {

          swift_bridgeObjectRelease();
LABEL_31:
          *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
          if (__OFADD__(v28++, 1))
          {
            __break(1u);
LABEL_34:
            sub_22BE3B5B0(a1, a2, v28, a3);
            return;
          }
        }
        else
        {
          char v24 = sub_22BE938C8();

          swift_bridgeObjectRelease();
          if (v24) {
            goto LABEL_31;
          }
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v11 >= v31) {
    goto LABEL_34;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v11);
  ++v5;
  if (v12) {
    goto LABEL_20;
  }
  int64_t v5 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_34;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v5);
  if (v12) {
    goto LABEL_20;
  }
  int64_t v5 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_34;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v5);
  if (v12)
  {
LABEL_20:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
    goto LABEL_21;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v31) {
    goto LABEL_34;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v13);
  if (v12)
  {
    int64_t v5 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v31) {
      goto LABEL_34;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_22BE3CC38(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  unint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    unint64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_22BE3C968((unint64_t *)v9, v6, a1, (uint64_t)v10);
    uint64_t v12 = v11;

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_22BE3C968((unint64_t *)v13, v6, a1, (uint64_t)v14);
    uint64_t v12 = v15;

    MEMORY[0x230F57540](v13, -1, -1);
  }
  return v12;
}

id sub_22BE3CDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v10 = result;
  uint64_t v31 = a6;
  sub_22BE91F78();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_22BE99770;
  uint64_t v12 = MEMORY[0x263F8D310];
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  unint64_t v13 = sub_22BDF8220();
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
  swift_bridgeObjectRetain();
  sub_22BE92CA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v14 = result;
  sub_22BE91F78();

  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22BE99770;
  *(void *)(v15 + 56) = v12;
  *(void *)(v15 + 64) = v13;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
  swift_bridgeObjectRetain();
  sub_22BE92CA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v16 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v17 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v16, v17, 1, 0x800000022BEA24E0);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = result;
  uint64_t v35 = v18;
  sub_22BE91F78();

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v20 = result;
    sub_22BE91F78();

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a3;
    *(void *)(v21 + 24) = a4;
    sub_22BE91C58();
    uint64_t v22 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_22BE181A8;
    uint64_t v41 = v21;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_22BE2A864;
    id v39 = &block_descriptor_87;
    unint64_t v23 = _Block_copy(&aBlock);
    swift_release();
    char v24 = self;
    id v25 = objc_msgSend(v24, sel_actionWithTitle_style_handler_, v22, 0, v23, 0x800000022BEA2530);
    _Block_release(v23);

    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a5;
    *(void *)(v26 + 24) = v31;
    sub_22BE91C58();
    uint64_t v27 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_22BE10E44;
    uint64_t v41 = v26;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_22BE2A864;
    id v39 = &block_descriptor_93;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_release();
    id v29 = objc_msgSend(v24, sel_actionWithTitle_style_handler_, v27, 2, v28);
    _Block_release(v28);

    objc_msgSend(v35, sel_addAction_, v25);
    objc_msgSend(v35, sel_addAction_, v29);
    id v30 = v35;
    objc_msgSend(v30, sel_setPreferredAction_, v25);

    return v30;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_22BE3D398(uint64_t a1)
{
  return sub_22BE39E14(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_22BE3D3A0(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v35 = sub_22BE3C3C8(v5, a2);
  char v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v33 = v2;
  if (v2) {
    return v35;
  }
  if ((v7 & 1) == 0)
  {
    unint64_t i = v35 + 1;
    if (__OFADD__(v35, 1)) {
      goto LABEL_60;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      if (i != v31) {
        goto LABEL_6;
      }
    }
    else if (i != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      id v34 = *(id *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source);
      for (unint64_t i = v35 + 5; ; ++i)
      {
        unint64_t v9 = i - 4;
        uint64_t v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = (char *)MEMORY[0x230F56140](i - 4);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v9 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v11 = (char *)*(id *)(v10 + 8 * i);
        }
        uint64_t v12 = v11;
        id v13 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier, v33);
        id v14 = objc_msgSend(v34, sel_identifier);
        a2 = sub_22BE92CD8();
        uint64_t v16 = v15;
        if (a2 == sub_22BE92CD8() && v16 == v17)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        a2 = sub_22BE938C8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (a2) {
          goto LABEL_38;
        }
        a2 = v35;
        if (v9 != v35) {
          break;
        }
LABEL_35:
        a2 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_53;
        }
        ++v35;
LABEL_38:
        BOOL v28 = __OFADD__(v9, 1);
        unint64_t v29 = i - 3;
        if (v28) {
          goto LABEL_52;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          a2 = sub_22BE937E8();
          swift_bridgeObjectRelease();
        }
        else
        {
          a2 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v29 == a2) {
          return v35;
        }
      }
      uint64_t v19 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v20 = (id)MEMORY[0x230F56140](v35, *a1);
        uint64_t v19 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v9 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v21 = *(id *)(v19 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v35 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v35 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        id v20 = *(id *)(v19 + 8 * v35 + 32);
        if ((v19 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
      }
      id v21 = (id)MEMORY[0x230F56140](i - 4, v19);
      uint64_t v19 = *a1;
LABEL_24:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v19;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
      {
        uint64_t v19 = sub_22BE4585C(v19);
        *a1 = v19;
      }
      unint64_t v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x20);
      *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v21;

      sub_22BE92ED8();
      uint64_t v24 = *a1;
      int v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v24;
      if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
      {
        uint64_t v24 = sub_22BE4585C(v24);
        *a1 = v24;
      }
      if ((v9 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      uint64_t v26 = v24 & 0xFFFFFFFFFFFFFF8;
      if (v9 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_59;
      }
      uint64_t v27 = *(void **)(v26 + 8 * i);
      *(void *)(v26 + 8 * i) = v20;

      sub_22BE92ED8();
      goto LABEL_35;
    }
    return v35;
  }
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  return v32;
}

id sub_22BE3D798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v13 = result;
  sub_22BE91F78();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_22BE99770;
  *(void *)(v14 + 56) = MEMORY[0x263F8D310];
  *(void *)(v14 + 64) = sub_22BDF8220();
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
  swift_bridgeObjectRetain();
  sub_22BE92CA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v15 = result;
  uint64_t v31 = a5;
  sub_22BE91F78();

  uint64_t v16 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v16, v17, 1, 0x800000022BEA2610);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = result;
  sub_22BE91F78();

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v20 = result;
    sub_22BE91F78();

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a3;
    *(void *)(v21 + 24) = a4;
    sub_22BE91C58();
    uint64_t v22 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    unint64_t v36 = sub_22BE181A8;
    uint64_t v37 = v21;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v33 = 1107296256;
    id v34 = sub_22BE2A864;
    unint64_t v35 = &block_descriptor_108;
    unint64_t v23 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v24 = self;
    id v25 = objc_msgSend(v24, sel_actionWithTitle_style_handler_, v22, 0, v23, 0x800000022BEA2530);
    _Block_release(v23);

    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v31;
    *(void *)(v26 + 24) = a6;
    sub_22BE91C58();
    uint64_t v27 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    unint64_t v36 = sub_22BE181A8;
    uint64_t v37 = v26;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v33 = 1107296256;
    id v34 = sub_22BE2A864;
    unint64_t v35 = &block_descriptor_114;
    BOOL v28 = _Block_copy(&aBlock);
    swift_release();
    id v29 = objc_msgSend(v24, sel_actionWithTitle_style_handler_, v27, 2, v28);
    _Block_release(v28);

    objc_msgSend(v18, sel_addAction_, v29);
    objc_msgSend(v18, sel_addAction_, v25);
    id v30 = v18;
    objc_msgSend(v30, sel_setPreferredAction_, v25);

    return v30;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_22BE3DCDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v37 = a2;
  unint64_t v8 = sub_22BE3C594(v7, a2, a3);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_61;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      if (v11 != v35) {
        goto LABEL_6;
      }
    }
    else if (v11 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v8 + 5; ; ++i)
      {
        unint64_t v13 = i - 4;
        uint64_t v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = (char *)MEMORY[0x230F56140](i - 4);
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_52;
          }
          uint64_t v15 = (char *)*(id *)(v14 + 8 * i);
        }
        uint64_t v16 = v15;
        id v17 = objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
        uint64_t v18 = sub_22BE92CD8();
        uint64_t v20 = v19;

        if (v18 == v37 && v20 == a3)
        {

          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
        uint64_t v11 = sub_22BE938C8();

        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_39;
        }
        if (v13 != v8) {
          break;
        }
LABEL_35:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_54;
        }
LABEL_39:
        uint64_t v11 = i - 3;
        if (__OFADD__(v13, 1)) {
          goto LABEL_53;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_22BE937E8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v32 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v11 == v32) {
          return v8;
        }
      }
      uint64_t v22 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v23 = (id)MEMORY[0x230F56140](v8, *a1);
        uint64_t v22 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_57;
          }
          if (v13 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_58;
          }
          id v24 = *(id *)(v22 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        if (v8 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        id v23 = *(id *)(v22 + 8 * v8 + 32);
        if ((v22 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
      }
      id v24 = (id)MEMORY[0x230F56140](i - 4, v22);
      uint64_t v22 = *a1;
LABEL_24:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v22;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v22 < 0 || (v22 & 0x4000000000000000) != 0)
      {
        uint64_t v22 = sub_22BE4585C(v22);
        *a1 = v22;
      }
      uint64_t v26 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v24;

      sub_22BE92ED8();
      uint64_t v27 = *a1;
      int v28 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v27;
      if (!v28 || v27 < 0 || (v27 & 0x4000000000000000) != 0)
      {
        uint64_t v27 = sub_22BE4585C(v27);
        *a1 = v27;
      }
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_59;
      }
      uint64_t v29 = v27 & 0xFFFFFFFFFFFFFF8;
      if (v13 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_60;
      }
      id v30 = *(void **)(v29 + 8 * i);
      *(void *)(v29 + 8 * i) = v23;

      sub_22BE92ED8();
      goto LABEL_35;
    }
    return v8;
  }
  unint64_t v33 = *a1;
  if (!(v33 >> 62)) {
    return *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t sub_22BE3E07C()
{
  unint64_t result = qword_2684877D0;
  if (!qword_2684877D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684877D0);
  }
  return result;
}

unint64_t sub_22BE3E0D4()
{
  unint64_t result = qword_2684877D8;
  if (!qword_2684877D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684877D8);
  }
  return result;
}

char *keypath_get_selector_operationState()
{
  return sel_operationState;
}

id sub_22BE3E134@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_operationState);
  *a2 = result;
  return result;
}

id sub_22BE3E168(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOperationState_, *a1);
}

uint64_t sub_22BE3E17C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_22BE3E1D0(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCUSBFormattingErrorCode(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DOCUSBFormattingErrorCode(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22BE3E310);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22BE3E338()
{
  return 0;
}

ValueMetadata *type metadata accessor for DOCUSBFormattingErrorCode()
{
  return &type metadata for DOCUSBFormattingErrorCode;
}

uint64_t method lookup function for DOCUSBEraseOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCUSBEraseOperation);
}

uint64_t dispatch thunk of DOCUSBEraseOperation.isFinished.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DOCUSBEraseOperation.isFinished.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DOCUSBEraseOperation.isFinished.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DOCUSBEraseOperation.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of static DOCUSBEraseOperation.disk(forDomain:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of static DOCUSBEraseOperation.disk(forSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

ValueMetadata *type metadata accessor for DOCUSBEraseOperation.State()
{
  return &type metadata for DOCUSBEraseOperation.State;
}

uint64_t method lookup function for DOCUSBFormatting(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCUSBFormatting);
}

uint64_t dispatch thunk of DOCUSBFormatting.formattableFileSystems(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of DOCUSBFormatting.canErase(domain:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DOCUSBFormatting.performErase(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DOCUSBFormatting.currentOperation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DOCUSBFormatting.hasOperation(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DOCUSBFormatting.operations.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DOCUSBFormatting.operation(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DOCUSBFormatting.removeOperation(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DOCUSBFormatting.removeOperation(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_22BE3E5D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE3E60C(void *a1, void *a2)
{
  sub_22BE372D8(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_22BE3E614()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE3E654(void *a1)
{
  sub_22BE386A4(a1, *(char **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_22BE3E65C(void *a1, uint64_t a2)
{
  sub_22BE37AD4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_22BE3E664()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_22BE3E6A4(int a1)
{
  return sub_22BE3837C(a1, *(id *)(v1 + 16), *(char **)(v1 + 24));
}

void sub_22BE3E6AC()
{
}

uint64_t sub_22BE3E6D0(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x230F56150](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *int v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_22BE93838();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_22BE937E8();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_22BE92ED8();
}

uint64_t sub_22BE3E9D8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_22BE3EA28()
{
  sub_22BE3A630(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_22BE3EA38()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t objectdestroy_116Tm()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE3EAC8(uint64_t a1, uint64_t a2)
{
  return sub_22BE3A96C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32));
}

uint64_t DOCAppIntentsGenericError.localizedStringResource.getter()
{
  return sub_22BE92098();
}

BOOL static DOCAppIntentsGenericError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DOCAppIntentsGenericError.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCAppIntentsGenericError.hashValue.getter()
{
  return sub_22BE93A48();
}

unint64_t sub_22BE3EC28()
{
  unint64_t result = qword_268487810;
  if (!qword_268487810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487810);
  }
  return result;
}

uint64_t sub_22BE3EC88()
{
  return sub_22BE92098();
}

unsigned char *storeEnumTagSinglePayload for DOCAppIntentsGenericError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE3ED98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAppIntentsGenericError()
{
  return &type metadata for DOCAppIntentsGenericError;
}

uint64_t DOCTabSwitcherStyle.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x736261546F6ELL;
    case 2:
      return 0x74616F6C46706F74;
    case 1:
      return 0x61426D6F74746F62;
  }
  type metadata accessor for DOCTabSwitcherStyle(0);
  uint64_t result = sub_22BE93908();
  __break(1u);
  return result;
}

uint64_t DOCTabSwitcherStyle.sidebarCanPresentNonBrowseTabItemContent.getter(unint64_t a1)
{
  if (a1 < 3) {
    return (a1 & 1) == 0;
  }
  type metadata accessor for DOCTabSwitcherStyle(0);
  uint64_t result = sub_22BE93908();
  __break(1u);
  return result;
}

uint64_t sub_22BE3EEC4()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0x736261546F6ELL;
  }
  if (v1 == 2) {
    return 0x74616F6C46706F74;
  }
  if (v1 == 1) {
    return 0x61426D6F74746F62;
  }
  uint64_t result = sub_22BE93908();
  __break(1u);
  return result;
}

id DOCConfiguration.neverAllowsAnyTypeOfTabs.getter()
{
  return objc_msgSend(v0, sel_forSavingDocuments);
}

void doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(void *a1)
{
}

uint64_t AttributedString.init(doc_localized:options:locale:comment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v23 = a6;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v22 = a1;
  uint64_t v24 = a7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487868);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22BE91F58();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_22BE92C88();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  id v20 = (id)_DocumentManagerBundle();
  sub_22BE3FC28(a3, (uint64_t)v12);
  sub_22BE91F68();
  sub_22BE3FC90(a3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
}

id sub_22BE3F33C()
{
  id result = DOCLogHandle();
  qword_268487818 = (uint64_t)result;
  return result;
}

id static DOCLog.DocumentManager.getter()
{
  return sub_22BDCD8A4(qword_268486770, (void **)&qword_268487818);
}

id sub_22BE3F388()
{
  id result = DOCPersonaLogHandle();
  qword_268487820 = (uint64_t)result;
  return result;
}

id static DOCLog.Persona.getter()
{
  return sub_22BDCD8A4(&qword_268486780, (void **)&qword_268487820);
}

id sub_22BE3F3D4()
{
  id result = DOCSmartFolderLogHandle();
  qword_268487828 = (uint64_t)result;
  return result;
}

id static DOCLog.SmartFolders.getter()
{
  return sub_22BDCD8A4(qword_268486788, (void **)&qword_268487828);
}

id sub_22BE3F420()
{
  id result = DOCPickerLogHandle();
  qword_268487830 = (uint64_t)result;
  return result;
}

id static DOCLog.Picker.getter()
{
  return sub_22BDCD8A4(&qword_268486798, (void **)&qword_268487830);
}

id sub_22BE3F46C()
{
  id result = DOCRenameLogHandle();
  qword_268487838 = (uint64_t)result;
  return result;
}

id static DOCLog.Rename.getter()
{
  return sub_22BDCD8A4(&qword_2684867A0, (void **)&qword_268487838);
}

id sub_22BE3F4B8()
{
  id result = DOCBrowserHistoryLogHandle();
  qword_26AEFFAB0 = (uint64_t)result;
  return result;
}

id static DOCLog.BrowserHistory.getter()
{
  return sub_22BDCD8A4(qword_26AF00268, (void **)&qword_26AEFFAB0);
}

id sub_22BE3F504()
{
  id result = DOCTestsLogHandle();
  qword_26AEFFAC8 = (uint64_t)result;
  return result;
}

id static DOCLog.Tests.getter()
{
  return sub_22BDCD8A4(qword_26AF00290, (void **)&qword_26AEFFAC8);
}

id sub_22BE3F550()
{
  id result = DOCDownloadServiceLogHandle();
  qword_268487840 = (uint64_t)result;
  return result;
}

id static DOCLog.DownloadService.getter()
{
  return sub_22BDCD8A4(qword_2684867A8, (void **)&qword_268487840);
}

id sub_22BE3F59C()
{
  id result = DOCStateStoreLogHandle();
  qword_26AEFFA98 = (uint64_t)result;
  return result;
}

id static DOCLog.StateStore.getter()
{
  return sub_22BDCD8A4(qword_26AF00240, (void **)&qword_26AEFFA98);
}

id sub_22BE3F5E8()
{
  id result = DOCAnalyticsLogHandle();
  qword_26AEFFAD8 = (uint64_t)result;
  return result;
}

id static DOCLog.Analytics.getter()
{
  return sub_22BDCD8A4(&qword_26AF002A8, (void **)&qword_26AEFFAD8);
}

id sub_22BE3F634()
{
  id result = DOCApplicationLogHandle();
  qword_26AEFFAA0 = (uint64_t)result;
  return result;
}

id static DOCLog.Application.getter()
{
  return sub_22BDCD8A4(qword_26AF00250, (void **)&qword_26AEFFAA0);
}

id sub_22BE3F680()
{
  id result = DOCProgressUILogHandle();
  qword_268487848 = (uint64_t)result;
  return result;
}

id static DOCLog.ProgressUI.getter()
{
  return sub_22BDCD8A4(qword_2684867B8, (void **)&qword_268487848);
}

id sub_22BE3F6CC()
{
  id result = DOCEnumerationLogHandle();
  qword_26AEFFAA8 = (uint64_t)result;
  return result;
}

id static DOCLog.Enumeration.getter()
{
  return sub_22BDCD8A4(&qword_26AF00260, (void **)&qword_26AEFFAA8);
}

id sub_22BE3F718()
{
  id result = DOCFileProviderSyncStateLogHandle();
  qword_26AEFFAB8 = (uint64_t)result;
  return result;
}

id static DOCLog.FileProviderSyncState.getter()
{
  return sub_22BDCD8A4(qword_26AF00278, (void **)&qword_26AEFFAB8);
}

id sub_22BE3F764()
{
  id result = DOCAppIntentsLogHandle();
  qword_26AEFFA90 = (uint64_t)result;
  return result;
}

id static DOCLog.AppIntents.getter()
{
  return sub_22BDCD8A4(qword_26AF00230, (void **)&qword_26AEFFA90);
}

id sub_22BE3F7B0()
{
  id result = DOCSidebarLogHandle();
  qword_268487850 = (uint64_t)result;
  return result;
}

id static DOCLog.Sidebar.getter()
{
  return sub_22BDCD8A4(&qword_2684867C8, (void **)&qword_268487850);
}

id sub_22BE3F7FC()
{
  id result = DOCPreviewLogHandle();
  qword_268487858 = (uint64_t)result;
  return result;
}

id static DOCLog.Preview.getter()
{
  return sub_22BDCD8A4(&qword_2684867D0, (void **)&qword_268487858);
}

void static DOCDeviceModel.current.getter(char *a1@<X8>)
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x22BE3F8E4);
  }
  int v3 = v2;
  int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  char v5 = 0;
  switch(deviceClassNumber)
  {
    case 1:
      break;
    case 2:
      char v5 = 2;
      break;
    case 3:
      char v5 = 1;
      break;
    case 11:
      char v5 = 3;
      break;
    default:
      char v5 = 4;
      break;
  }
  *a1 = v5;
}

BOOL static DOCDeviceModel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DOCDeviceModel.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCDeviceModel.hashValue.getter()
{
  return sub_22BE93A48();
}

Swift::Void __swiftcall DOCAssertUnexpectedError(errorTitle:message:)(Swift::String errorTitle, Swift::String message)
{
  id v2 = (void *)sub_22BE92C98();
  int v3 = (void *)sub_22BE92C98();
  id v4 = (id)sub_22BE92C98();
  DOCAssertWithIntenalBuildAlert();
}

Swift::Bool __swiftcall DOCIsAttachedInDebugger()()
{
  if (qword_2684867D8 != -1) {
    swift_once();
  }
  return byte_268487860;
}

Swift::Bool __swiftcall DOCIsRunningUnitTests()()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_22BE92BF8();
  if (*(void *)(v2 + 16) && (sub_22BDD5734(0xD000000000000017, 0x800000022BEA2860), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    Swift::Bool v4 = 1;
  }
  else
  {
    Swift::Bool v4 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t doc_unrecognizedEnumValueDescription(_:)(void *a1)
{
  return 0;
}

uint64_t sub_22BE3FC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22BE3FC90(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487868);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void doc_warnUnrecognizedEnumValueEncountered(_:)(void *a1)
{
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  swift_getDynamicType();
  sub_22BE93A58();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  sub_22BE93758();
  sub_22BE92D88();
  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_22BE925E8();
  __swift_project_value_buffer(v1, (uint64_t)qword_2684879E0);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_22BE925C8();
  os_log_type_t v3 = sub_22BE93158();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v6[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    sub_22BDD8478(0, 0xE000000000000000, v6);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22BDC5000, v2, v3, "Warning: Unrecognized enum value encountered => %s)", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v5, -1, -1);
    MEMORY[0x230F57540](v4, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_22BE3FF2C()
{
  uint64_t result = sub_22BE3FF50();
  byte_268487860 = result & 1;
  return result;
}

uint64_t sub_22BE3FF50()
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  uint64_t v13 = 0;
  int v14 = 0;
  uint64_t v21 = 0;
  int v22 = 0;
  uint64_t v23 = 0;
  int v24 = 0;
  uint64_t v29 = 0;
  int v30 = 0;
  uint64_t v43 = 0;
  __int16 v44 = 0;
  int v49 = 0;
  uint64_t v57 = 0;
  memset(v12, 0, sizeof(v12));
  long long v15 = 0u;
  long long v16 = 0u;
  int v17 = 0;
  int v20 = 0;
  long long v19 = 0u;
  long long v18 = 0u;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  int v28 = 0;
  uint64_t v25 = 0;
  long long v31 = 0u;
  memset(v32, 0, sizeof(v32));
  int v35 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  memset(v42, 0, sizeof(v42));
  long long v48 = 0u;
  long long v47 = 0u;
  long long v46 = 0u;
  long long v45 = 0u;
  uint64_t v51 = 0;
  uint64_t v50 = 0;
  int v53 = 0;
  uint64_t v52 = 0;
  long long v54 = 0u;
  long long v55 = 0u;
  __int16 v56 = 0;
  __int16 v61 = 0;
  uint64_t v59 = 0;
  uint64_t v58 = 0;
  uint64_t v60 = 0;
  long long v62 = 0u;
  long long v63 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487878);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22BE99D40;
  *(void *)(v0 + 32) = 0xE00000001;
  *(_DWORD *)(v0 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 1;
  *(_DWORD *)(v0 + 44) = getpid();
  size_t v10 = 648;
  int v1 = sysctl((int *)(v0 + 32), 4u, v12, &v10, 0, 0);
  swift_bridgeObjectRelease();
  if (!v1) {
    return (v12[33] >> 3) & 1;
  }
  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE925E8();
  __swift_project_value_buffer(v2, (uint64_t)qword_2684879E0);
  os_log_type_t v3 = sub_22BE925C8();
  os_log_type_t v4 = sub_22BE93158();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    MEMORY[0x230F551C0]();
    uint64_t v7 = sub_22BE93878();
    sub_22BDD8478(v7, v8, &v11);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v3, v4, "sysctl(3) failed: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v6, -1, -1);
    MEMORY[0x230F57540](v5, -1, -1);
  }

  return 0;
}

unint64_t sub_22BE4027C()
{
  unint64_t result = qword_268487870;
  if (!qword_268487870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487870);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCLog()
{
  return &type metadata for DOCLog;
}

unsigned char *storeEnumTagSinglePayload for DOCDeviceModel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE403ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDeviceModel()
{
  return &type metadata for DOCDeviceModel;
}

id DOCPreviewLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC40];
  int v1 = (void *)*MEMORY[0x263F3AC40];
  if (!*MEMORY[0x263F3AC40])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCSidebarLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC60];
  int v1 = (void *)*MEMORY[0x263F3AC60];
  if (!*MEMORY[0x263F3AC60])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCAppIntentsLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3ABF0];
  int v1 = (void *)*MEMORY[0x263F3ABF0];
  if (!*MEMORY[0x263F3ABF0])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCFileProviderSyncStateLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC20];
  int v1 = (void *)*MEMORY[0x263F3AC20];
  if (!*MEMORY[0x263F3AC20])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCEnumerationLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC18];
  int v1 = (void *)*MEMORY[0x263F3AC18];
  if (!*MEMORY[0x263F3AC18])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCProgressUILogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC48];
  int v1 = (void *)*MEMORY[0x263F3AC48];
  if (!*MEMORY[0x263F3AC48])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCApplicationLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3ABF8];
  int v1 = (void *)*MEMORY[0x263F3ABF8];
  if (!*MEMORY[0x263F3ABF8])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCAnalyticsLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3ABE8];
  int v1 = (void *)*MEMORY[0x263F3ABE8];
  if (!*MEMORY[0x263F3ABE8])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCStateStoreLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC78];
  int v1 = (void *)*MEMORY[0x263F3AC78];
  if (!*MEMORY[0x263F3AC78])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCDownloadServiceLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC10];
  int v1 = (void *)*MEMORY[0x263F3AC10];
  if (!*MEMORY[0x263F3AC10])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCTestsLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC80];
  int v1 = (void *)*MEMORY[0x263F3AC80];
  if (!*MEMORY[0x263F3AC80])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCBrowserHistoryLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC00];
  int v1 = (void *)*MEMORY[0x263F3AC00];
  if (!*MEMORY[0x263F3AC00])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCRenameLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC50];
  int v1 = (void *)*MEMORY[0x263F3AC50];
  if (!*MEMORY[0x263F3AC50])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCPickerLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC38];
  int v1 = (void *)*MEMORY[0x263F3AC38];
  if (!*MEMORY[0x263F3AC38])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

id DOCPersonaLogHandle()
{
  uint64_t v0 = (void **)MEMORY[0x263F3AC30];
  int v1 = (void *)*MEMORY[0x263F3AC30];
  if (!*MEMORY[0x263F3AC30])
  {
    DOCInitLogging();
    int v1 = *v0;
  }

  return v1;
}

uint64_t sub_22BE4081C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    size_t v10 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      uint64_t v11 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    size_t v10 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
LABEL_6:
  id v30 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v10, v11, 1);

  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_22BE937E8();
    if (!v12) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_15;
    }
  }
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((a5 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x230F56140](i, a5);
    }
    else {
      id v14 = *(id *)(a5 + 8 * i + 32);
    }
    long long v15 = v14;
    objc_msgSend(v30, sel_addAction_, v14);
  }
LABEL_15:
  swift_bridgeObjectRelease();
  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 != 1) {
    goto LABEL_27;
  }
  a5 = (unint64_t)v30;
  id v17 = objc_msgSend((id)a5, sel_actions);
  sub_22BDD9D50(0, &qword_268487898);
  uint64_t v12 = sub_22BE92EB8();

  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v18 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_21;
    }
LABEL_41:
    unint64_t v19 = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_42;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_41;
  }
LABEL_21:
  unint64_t v19 = v18 - 1;
  if (__OFSUB__(v18, 1))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_43:
    id v20 = (id)MEMORY[0x230F56140](v19, v12);
    goto LABEL_26;
  }
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v19 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_45:
    __break(1u);
    return MEMORY[0x270F9A790]();
  }
  id v20 = *(id *)(v12 + 8 * v19 + 32);
LABEL_26:
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  objc_msgSend((id)a5, sel_setPreferredAction_, v21);

LABEL_27:
  if (qword_26AF00288 != -1) {
    swift_once();
  }
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_22BE97A30;
  uint64_t v23 = MEMORY[0x263F8D310];
  *(void *)(v22 + 56) = MEMORY[0x263F8D310];
  unint64_t v24 = sub_22BDF8220();
  *(void *)(v22 + 32) = 0xD00000000000001FLL;
  *(void *)(v22 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA2A30;
  *(void *)(v22 + 96) = v23;
  *(void *)(v22 + 104) = v24;
  if (a4) {
    uint64_t v25 = a3;
  }
  else {
    uint64_t v25 = 0;
  }
  unint64_t v26 = 0xE000000000000000;
  if (a4) {
    unint64_t v26 = a4;
  }
  *(void *)(v22 + 64) = v24;
  *(void *)(v22 + 72) = v25;
  *(void *)(v22 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v26;
  swift_bridgeObjectRetain();
  sub_22BE92588();
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)MEMORY[0x230F57630](a6 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCActionUIOperation_presentingViewController);
  if (v27)
  {
    int v28 = v27;
    objc_msgSend(v27, sel_presentViewController_animated_completion_, v30, 1, 0);
  }

  return MEMORY[0x270F9A790]();
}

void sub_22BE40C34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = MEMORY[0x230F57630](a1 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCActionUIOperation_presentingViewController);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    unint64_t v8 = (void *)sub_22BE92078();
    if (a3)
    {
      v9[4] = a3;
      v9[5] = a4;
      v9[0] = MEMORY[0x263EF8330];
      v9[1] = 1107296256;
      _OWORD v9[2] = sub_22BDD0BA8;
      v9[3] = &block_descriptor_120;
      a3 = _Block_copy(v9);
      sub_22BE91C58();
      swift_release();
    }
    DOCPresentAlertForErrorWithForceHandler();
    _Block_release(a3);
  }
}

id DOCActionUIOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCActionUIOperation.init()()
{
}

uint64_t sub_22BE40DCC()
{
  return swift_unknownObjectWeakDestroy();
}

id DOCActionUIOperation.__deallocating_deinit()
{
  return sub_22BE41D94(type metadata accessor for DOCActionUIOperation);
}

uint64_t type metadata accessor for DOCActionUIOperation()
{
  return self;
}

id DOCDeletePreflightUIOperation.__allocating_init(items:alertPresenting:)(uint64_t a1, void *a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items] = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  id v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id DOCDeletePreflightUIOperation.init(items:alertPresenting:)(uint64_t a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items] = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  id v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

id sub_22BE40F28()
{
  id v1 = v0;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    int v3 = result;
    sub_22BE91F78();

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      id v4 = result;
      sub_22BE91F78();

      unint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items];
      type metadata accessor for DOCDeleteOperation();
      static DOCDeleteOperation.confirmationStrings(for:)(v5, &aBlock);
      unint64_t v24 = v28;
      uint64_t v25 = aBlock;
      uint64_t v22 = v27;
      uint64_t v23 = v29;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_22BE9B530;
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v1;
      id v8 = v1;
      uint64_t v9 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
      id v30 = (uint64_t (*)())sub_22BE41414;
      long long v31 = (void *)v7;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v27 = 1107296256;
      int v28 = sub_22BE2A864;
      uint64_t v29 = &block_descriptor_16;
      size_t v10 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v11 = self;
      id v12 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v9, 2, v10, 0x800000022BEA2510);
      _Block_release(v10);

      *(void *)(v6 + 32) = v12;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v8;
      id v14 = v8;
      long long v15 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
      id v30 = sub_22BE414D0;
      long long v31 = (void *)v13;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v27 = 1107296256;
      int v28 = sub_22BE2A864;
      uint64_t v29 = &block_descriptor_6_3;
      uint64_t v16 = _Block_copy(&aBlock);
      swift_release();
      id v17 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v15, 1, v16);
      _Block_release(v16);

      *(void *)(v6 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v17;
      uint64_t aBlock = v6;
      sub_22BE92ED8();
      uint64_t v18 = aBlock;
      unint64_t v19 = (void *)swift_allocObject();
      void v19[2] = v25;
      v19[3] = v22;
      v19[4] = v24;
      v19[5] = v23;
      v19[6] = v18;
      v19[7] = v14;
      id v30 = sub_22BE414DC;
      long long v31 = v19;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v27 = 1107296256;
      int v28 = sub_22BDD0BA8;
      uint64_t v29 = &block_descriptor_12_0;
      id v20 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v21 = v14;
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE41378(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items);
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2684878A0);
  v4[0] = v2;
  swift_bridgeObjectRetain();
  sub_22BE19D84((uint64_t)v4, 0);
  return sub_22BDD473C((uint64_t)v4);
}

uint64_t sub_22BE413DC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE41414(uint64_t a1)
{
  return sub_22BE41378(a1, *(void *)(v1 + 16));
}

uint64_t sub_22BE4141C()
{
  sub_22BE92CD8();
  id v0 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v1 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v1, 3072, 0, (unsigned __int128)0, (unsigned __int128)0);

  sub_22BE19D84((uint64_t)&v4, v2);
  return sub_22BDD473C((uint64_t)&v4);
}

uint64_t sub_22BE414D0()
{
  return sub_22BE4141C();
}

uint64_t sub_22BE414E0()
{
  return swift_bridgeObjectRelease();
}

id DOCDeletePreflightUIOperation.__deallocating_deinit()
{
  return sub_22BE41D94(type metadata accessor for DOCDeletePreflightUIOperation);
}

uint64_t type metadata accessor for DOCDeletePreflightUIOperation()
{
  return self;
}

id DOCCreateNewFolderPostflightUIOperation.__allocating_init(folderName:alertPresenting:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  id v8 = &v7[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName];
  *(void *)id v8 = a1;
  *((void *)v8 + 1) = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

id DOCCreateNewFolderPostflightUIOperation.init(folderName:alertPresenting:)(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = &v3[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName];
  *(void *)unint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  id v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id sub_22BE41648(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (id)sub_22BE92078();
    long long v4 = (void *)sub_22BE92078();
    id v5 = objc_msgSend(v4, sel_domain);
    uint64_t v6 = sub_22BE92CD8();
    uint64_t v8 = v7;

    if (v6 == sub_22BE92CD8() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v11 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {

LABEL_17:
        if (qword_26AF00288 != -1) {
          swift_once();
        }
        sub_22BE93158();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_22BE97A30;
        *(void *)(v33 + 56) = MEMORY[0x263F8D310];
        *(void *)(v33 + 64) = sub_22BDF8220();
        *(void *)(v33 + 32) = 0xD000000000000022;
        *(void *)(v33 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA2900;
        *(void *)(v33 + 96) = sub_22BDD9D50(0, (unint64_t *)&unk_2684880A0);
        *(void *)(v33 + 104) = sub_22BE29EA4();
        *(void *)(v33 + 72) = v3;
        id v34 = v3;
        sub_22BE92588();
        swift_bridgeObjectRelease();
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v2;
        *(void *)(v35 + 24) = v34;
        long long v36 = (void *)swift_allocObject();
        _OWORD v36[2] = v2;
        v36[3] = v34;
        v36[4] = sub_22BE41CC8;
        void v36[5] = v35;
        long long v46 = (uint64_t (*)())sub_22BE41D5C;
        long long v47 = v36;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v43 = 1107296256;
        __int16 v44 = sub_22BDD0BA8;
        long long v45 = &block_descriptor_21_0;
        long long v37 = _Block_copy(&aBlock);
        id v38 = v34;
        long long v39 = v2;
        id v40 = v38;
        long long v41 = v39;
        sub_22BE91C58();
        swift_release();
        DOCRunInMainThread();
        _Block_release(v37);

        return (id)swift_release();
      }
    }
    id v13 = objc_msgSend(v4, sel_code);

    if (v13 != (id)-1001) {
      goto LABEL_17;
    }
    uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName];
    uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName
                       + 8];
    if (qword_2684868C0 != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_22BE99770;
    *(void *)(v16 + 56) = MEMORY[0x263F8D310];
    *(void *)(v16 + 64) = sub_22BDF8220();
    *(void *)(v16 + 32) = v15;
    *(void *)(v16 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_22BE92CE8();
    uint64_t v19 = v18;
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      id v20 = result;
      sub_22BE91F78();

      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v2;
      *(void *)(v21 + 24) = v3;
      id v22 = v3;
      uint64_t v23 = v2;
      unint64_t v24 = (void *)sub_22BE92C98();
      swift_bridgeObjectRelease();
      long long v46 = sub_22BE41CC8;
      long long v47 = (void *)v21;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v43 = 1107296256;
      __int16 v44 = sub_22BE2A864;
      long long v45 = &block_descriptor_27_1;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_release();
      id v26 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v24, 0, v25, 0xE200000000000000);
      _Block_release(v25);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_22BE97A40;
      *(void *)(v27 + 32) = v26;
      uint64_t aBlock = v27;
      sub_22BE92ED8();
      uint64_t v28 = aBlock;
      uint64_t v29 = (void *)swift_allocObject();
      v29[2] = 0;
      uint64_t v29[3] = 0;
      v29[4] = v17;
      v29[5] = v19;
      v29[6] = v28;
      v29[7] = v23;
      long long v46 = sub_22BE414DC;
      long long v47 = v29;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v43 = 1107296256;
      __int16 v44 = sub_22BDD0BA8;
      long long v45 = &block_descriptor_34;
      id v30 = _Block_copy(&aBlock);
      long long v31 = v23;
      id v32 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v30);

      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    return (id)sub_22BE19D84(a1, 0);
  }
  return result;
}

uint64_t sub_22BE41C88()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE41CC8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  memset(v3, 0, sizeof(v3));
  sub_22BE19D84((uint64_t)v3, v1);
  return sub_22BDD473C((uint64_t)v3);
}

uint64_t sub_22BE41D0C()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_22BE41D5C()
{
  sub_22BE40C34(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_22BE41D68()
{
  return swift_bridgeObjectRelease();
}

id DOCCreateNewFolderPostflightUIOperation.__deallocating_deinit()
{
  return sub_22BE41D94(type metadata accessor for DOCCreateNewFolderPostflightUIOperation);
}

id sub_22BE41D94(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t objectdestroy_8Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_22BE41E34()
{
  return sub_22BE4081C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t type metadata accessor for DOCCreateNewFolderPostflightUIOperation()
{
  return self;
}

uint64_t method lookup function for DOCActionUIOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCActionUIOperation);
}

uint64_t method lookup function for DOCDeletePreflightUIOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCDeletePreflightUIOperation);
}

uint64_t dispatch thunk of DOCDeletePreflightUIOperation.__allocating_init(items:alertPresenting:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t method lookup function for DOCCreateNewFolderPostflightUIOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCCreateNewFolderPostflightUIOperation);
}

uint64_t dispatch thunk of DOCCreateNewFolderPostflightUIOperation.__allocating_init(folderName:alertPresenting:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t String.init(_:)(void *a1)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_22BE92E08();

  return v2;
}

uint64_t String.append(_:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t String.insert(_:at:)()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_22BE420D0()
{
  unint64_t result = qword_2684878A8;
  if (!qword_2684878A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684878A8);
  }
  return result;
}

id NSAttributedString.init(_:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_beginAccess();
  swift_bridgeObjectRetain();
  objc_super v3 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithString_, v3);

  return v4;
}

void NSMutableAttributedString.appendUnicode(_:)(void *a1)
{
  id v3 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_beginAccess();
  id v4 = a1;
  swift_bridgeObjectRetain();
  id v5 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithString_, v5);

  objc_msgSend(v1, sel_appendAttributedString_, v6);
}

void NSMutableAttributedString.append(_:)(void *a1)
{
  id v3 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_beginAccess();
  id v4 = a1;
  swift_bridgeObjectRetain();
  id v5 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithString_, v5);

  objc_msgSend(v1, sel_appendAttributedString_, v6);
}

void sub_22BE42370(void *a1, uint64_t a2, void *a3)
{
  id v5 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_beginAccess();
  id v6 = a3;
  id v7 = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v5, sel_initWithString_, v8);

  objc_msgSend(v7, sel_appendAttributedString_, v9);
}

void NSMutableAttributedString.insertUnicode(_:at:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_beginAccess();
  id v6 = a1;
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithString_, v7);

  objc_msgSend(v2, sel_insertAttributedString_atIndex_, v8, a2);
}

void NSMutableAttributedString.insert(_:at:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_beginAccess();
  id v6 = a1;
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithString_, v7);

  objc_msgSend(v2, sel_insertAttributedString_atIndex_, v8, a2);
}

void sub_22BE42600(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_beginAccess();
  id v8 = a3;
  id v9 = a1;
  swift_bridgeObjectRetain();
  size_t v10 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v7, sel_initWithString_, v10);

  objc_msgSend(v9, sel_insertAttributedString_atIndex_, v11, a4);
}

uint64_t sub_22BE426E8(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v21 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (void *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v18 = v17[1];
    uint64_t v19 = *(void *)(*(void *)(a3 + 56) + 8 * i);
    v20[0] = *v17;
    v20[1] = v18;
    v20[2] = v19;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    a1(v20);
    if (v3)
    {
      swift_release();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v21) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v21) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v21) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v21) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v21) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v21) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22BE428D8(uint64_t a1)
{
  uint64_t v2 = sub_22BE91F38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_22BE91F08();
  sub_22BE91C58();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_22BE429CC()
{
}

uint64_t NSNotification.SubscriptionsController.__allocating_init(observee:)()
{
  swift_allocObject();
  uint64_t v0 = sub_22BDD0630();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NSNotification.SubscriptionsController.deinit()
{
  sub_22BE42B84();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NSNotification.SubscriptionsController.__deallocating_deinit()
{
  NSNotification.SubscriptionsController.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_22BE42A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  size_t v10 = (void *)sub_22BE92C98();
  uint64_t v11 = sub_22BDD506C((uint64_t)v10, a3, a4, a5, a6);

  return v11;
}

uint64_t sub_22BE42AEC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = MEMORY[0x230F57630](result + 16);
    uint64_t result = swift_release();
    if (v6)
    {
      a3(v6, a1);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22BE42B84()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_22BE426E8((void (*)(void *))sub_22BE42FF4, v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE42C00()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t NSNotificationCenter.doc_observeOnce(forName:object:queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _s10ObservanceCMa();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  id v11 = objc_msgSend(self, sel_defaultCenter);
  sub_22BDD47C0(a2, (uint64_t)aBlock);
  unint64_t v12 = v28;
  if (v28)
  {
    id v13 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v28);
    uint64_t v26 = a3;
    uint64_t v14 = a5;
    uint64_t v15 = a4;
    uint64_t v16 = a1;
    uint64_t v17 = *(v12 - 1);
    MEMORY[0x270FA5388](v13);
    uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    uint64_t v20 = sub_22BE938B8();
    (*(void (**)(char *, void *))(v17 + 8))(v19, v12);
    a1 = v16;
    a4 = v15;
    a5 = v14;
    a3 = v26;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }
  else
  {
    uint64_t v20 = 0;
  }
  int64_t v21 = (void *)swift_allocObject();
  id v21[2] = v10;
  v21[3] = a4;
  v21[4] = a5;
  uint64_t v29 = sub_22BE43088;
  id v30 = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE428D8;
  uint64_t v28 = &block_descriptor_9_1;
  id v22 = _Block_copy(aBlock);
  sub_22BE91C58();
  sub_22BE91C58();
  swift_release();
  id v23 = objc_msgSend(v11, sel_addObserverForName_object_queue_usingBlock_, a1, v20, a3, v22);
  _Block_release(v22);

  swift_unknownObjectRelease();
  *(void *)(v10 + 16) = v23;
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_22BE42ED4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = self;
    swift_unknownObjectRetain();
    id v7 = objc_msgSend(v6, sel_defaultCenter);
    objc_msgSend(v7, sel_removeObserver_, v5);
    swift_unknownObjectRelease();
  }
  return a3(a1);
}

uint64_t sub_22BE42F70()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE42FA8()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE42FE8(uint64_t a1)
{
  return sub_22BE42AEC(a1, *(void *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32));
}

uint64_t sub_22BE42FF4(uint64_t *a1)
{
  return sub_22BDD53C8(*a1, a1[1]);
}

uint64_t _s10ObservanceCMa()
{
  return self;
}

uint64_t sub_22BE43048()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_22BE43088(uint64_t a1)
{
  return sub_22BE42ED4(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t method lookup function for NSNotification.SubscriptionsController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NSNotification.SubscriptionsController);
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.__allocating_init(observee:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.invalidateAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.invalidate(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_22BE43134(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  id v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  id v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_22BE930A8();
  if (!v20) {
    return sub_22BE92F18();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_22BE92BD8();
  uint64_t v35 = sub_22BE93738();
  sub_22BE936D8();
  long long v41 = v19;
  uint64_t result = sub_22BE93098();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    id v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    long long v37 = v23;
    unint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_22BE930F8();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_22BE93718();
      sub_22BE930C8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t Dictionary<>.doc_allKeys(forValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[8] = a3;
  v15[9] = a4;
  v15[10] = a5;
  v15[11] = a6;
  v15[12] = a1;
  swift_bridgeObjectRetain();
  v15[14] = sub_22BE92C08();
  void v15[2] = a3;
  v15[3] = a4;
  void v15[4] = a5;
  v15[5] = a6;
  uint64_t v10 = sub_22BE92C18();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = sub_22BE43134((void (*)(char *, char *))sub_22BE437C4, (uint64_t)v15, v10, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_22BE43648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = MEMORY[0x270FA5388](TupleTypeMetadata2 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(int *)(v9 + 56);
  uint64_t v13 = &v11[v12];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a1, a2);
  uint64_t v16 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, v14, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, a3);
}

uint64_t sub_22BE437C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22BE43648(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t Dictionary<>.inverted()()
{
  sub_22BE92BC8();
  sub_22BE92C18();
  sub_22BE92C18();
  swift_getWitnessTable();
  sub_22BE92E58();
  return v1;
}

void sub_22BE438D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22BE933B8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - v16;
  MEMORY[0x230F556E0](a1, a2, a4, a3, a6);
  LODWORD(a3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 48))(v17, 1, a3);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (a3 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a4);
    uint64_t v18 = sub_22BE92CF8();
    unint64_t v20 = v19;
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_22BE925E8();
    __swift_project_value_buffer(v21, (uint64_t)qword_2684879E0);
    swift_bridgeObjectRetain();
    id v22 = sub_22BE925C8();
    os_log_type_t v23 = sub_22BE93168();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v27 = v25;
      *(_DWORD *)unint64_t v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_22BDD8478(v18, v20, &v27);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v22, v23, "Dictionary invert encountered duplicate entry for: (%s). Dropping from results.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v25, -1, -1);
      MEMORY[0x230F57540](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_22BE43C10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  os_log_type_t v42 = a1;
  uint64_t v12 = sub_22BE933B8();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v43 = (char *)&v35 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v15 = TupleTypeMetadata2 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  __int16 v44 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = a2 + *(int *)(v15 + 56);
  uint64_t v37 = a2;
  uint64_t v38 = v20;
  sub_22BE438D0(v20, *a1, a3, a4, a5, a6);
  uint64_t v21 = *(int *)(v15 + 56);
  id v22 = v19;
  long long v41 = v19;
  os_log_type_t v23 = &v19[v21];
  uint64_t v39 = &v19[v21];
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v25 = *(void (**)(void))(v24 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v25)(v22, a2, a3);
  uint64_t v26 = a4;
  uint64_t v36 = a4;
  uint64_t v27 = *(void *)(a4 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v29 = v23;
  uint64_t v30 = v38;
  v28(v29, v38, v26);
  uint64_t v31 = &v44[*(int *)(v15 + 56)];
  v25();
  uint64_t v32 = v36;
  v28(v31, v30, v36);
  uint64_t v33 = v43;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v43, v44, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v33, 0, 1, a3);
  sub_22BE92C18();
  sub_22BE92C38();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v41, a3);
}

uint64_t sub_22BE43EF8(uint64_t *a1, uint64_t a2)
{
  return sub_22BE43C10(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

Swift::Int __swiftcall String.doc_editDistance(from:)(Swift::String from)
{
  unint64_t object = (unint64_t)from._object;
  uint64_t countAndFlagsBits = from._countAndFlagsBits;
  uint64_t v4 = sub_22BE92D58();
  uint64_t v49 = sub_22BE92D58();
  if (v49 < 1)
  {
    return sub_22BE92D58();
  }
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  uint64_t v6 = sub_22BE45188(0, v4 + 1);
  if (__OFADD__(v49, 1))
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  uint64_t v7 = sub_22BE45274(v6, v49 + 1);
  if (v49 + 1 < 1)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v1 = (void *)v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_88:
  }
    uint64_t v1 = sub_22BE45820(v1);
  unint64_t v8 = 0;
  while (1)
  {
    unint64_t v9 = v1[2];
    if (v8 >= v9)
    {
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    uint64_t v10 = v1[v8 + 4];
    if (!*(void *)(v10 + 16)) {
      goto LABEL_77;
    }
    uint64_t v11 = *(void *)(v10 + 32);
    uint64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_78;
    }
    if (v8 + 1 >= v9) {
      goto LABEL_79;
    }
    uint64_t v13 = &v1[v8];
    uint64_t v14 = (void *)v13[5];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[5] = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      break;
    }
    if (!v14[2]) {
      goto LABEL_16;
    }
LABEL_13:
    v14[4] = v12;
    if (v49 == ++v8) {
      goto LABEL_17;
    }
  }
  uint64_t v14 = sub_22BE4580C(v14);
  v13[5] = v14;
  if (v14[2]) {
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  if (v5 < 1)
  {
    __break(1u);
LABEL_90:
    uint64_t v1 = sub_22BE45820(v1);
    goto LABEL_23;
  }
  if (v5 != 1)
  {
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    if (v43) {
      goto LABEL_59;
    }
    goto LABEL_94;
  }
LABEL_20:
  uint64_t v16 = HIBYTE(object) & 0xF;
  v50[0] = countAndFlagsBits;
  v50[1] = object;
  if ((object & 0x2000000000000000) == 0) {
    uint64_t v16 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  v50[2] = 0;
  v50[3] = v16;
  swift_bridgeObjectRetain();
  unint64_t v48 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_90;
  }
LABEL_23:
  unint64_t object = (unint64_t)v50;
  uint64_t v17 = sub_22BE92DB8();
  if (v18)
  {
    uint64_t v5 = v17;
    uint64_t countAndFlagsBits = v18;
    unint64_t v19 = 0;
    uint64_t v20 = v1 + 4;
    while (1)
    {
      unint64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_22BE92DB8();
      if (v24)
      {
        unint64_t object = (unint64_t)v24;
        unint64_t v25 = 0;
        while (1)
        {
          if (v23 == v5 && object == countAndFlagsBits)
          {
            swift_bridgeObjectRelease();
            BOOL v26 = 0;
          }
          else
          {
            char v27 = sub_22BE938C8();
            swift_bridgeObjectRelease();
            BOOL v26 = (v27 & 1) == 0;
          }
          unint64_t v28 = v1[2];
          if (v19 >= v28) {
            break;
          }
          uint64_t v29 = v20[v19];
          if (v25 + 1 >= *(void *)(v29 + 16)) {
            goto LABEL_69;
          }
          uint64_t v30 = *(void *)(v29 + 8 * v25 + 40);
          BOOL v31 = __OFADD__(v30, 1);
          uint64_t v32 = v30 + 1;
          if (v31) {
            goto LABEL_70;
          }
          if (v22 >= v28) {
            goto LABEL_71;
          }
          unint64_t object = v20[v22];
          if (v25 >= *(void *)(object + 16)) {
            goto LABEL_72;
          }
          uint64_t v33 = *(void *)(object + 8 * v25 + 32);
          BOOL v31 = __OFADD__(v33, 1);
          uint64_t v34 = v33 + 1;
          if (v31) {
            goto LABEL_73;
          }
          uint64_t v35 = *(void *)(v29 + 8 * v25 + 32);
          BOOL v31 = __OFADD__(v35, v26);
          uint64_t v36 = v35 + v26;
          if (v31) {
            goto LABEL_74;
          }
          if (v34 >= v32) {
            uint64_t v37 = v32;
          }
          else {
            uint64_t v37 = v34;
          }
          if (v36 >= v37) {
            uint64_t v4 = v37;
          }
          else {
            uint64_t v4 = v36;
          }
          char v38 = swift_isUniquelyReferenced_nonNull_native();
          v20[v22] = object;
          if ((v38 & 1) == 0)
          {
            unint64_t object = (unint64_t)sub_22BE4580C((void *)object);
            v20[v22] = object;
          }
          if (v25 + 1 >= *(void *)(object + 16)) {
            goto LABEL_75;
          }
          *(void *)(object + 8 * v25 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v4;
          uint64_t v23 = sub_22BE92DB8();
          unint64_t object = (unint64_t)v39;
          ++v25;
          if (!v39) {
            goto LABEL_25;
          }
        }
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t object = (unint64_t)v50;
      uint64_t v5 = sub_22BE92DB8();
      uint64_t countAndFlagsBits = v21;
      ++v19;
      if (!v21) {
        goto LABEL_54;
      }
    }
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
LABEL_54:
  swift_bridgeObjectRelease();
  if (v49 >= v1[2])
  {
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    uint64_t v1 = sub_22BE45820(v1);
LABEL_59:
    unint64_t v44 = 0;
    while (v1[2])
    {
      uint64_t v5 = v1[4];
      if (v44 >= *(void *)(v5 + 16)) {
        goto LABEL_81;
      }
      uint64_t v45 = *(void *)(v5 + 8 * v44 + 32);
      uint64_t v46 = v45 + 1;
      if (__OFADD__(v45, 1)) {
        goto LABEL_82;
      }
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      v1[4] = v5;
      if ((v47 & 1) == 0) {
        uint64_t v5 = (uint64_t)sub_22BE4580C((void *)v5);
      }
      if (v44 + 1 >= *(void *)(v5 + 16)) {
        goto LABEL_83;
      }
      *(void *)(v5 + 8 * v44 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v46;
      v1[4] = v5;
      if (v4 == ++v44) {
        goto LABEL_20;
      }
    }
    goto LABEL_80;
  }
  if ((v48 & 0x8000000000000000) != 0) {
    goto LABEL_92;
  }
  uint64_t v41 = v1[v49 + 4];
  if (v48 >= *(void *)(v41 + 16)) {
    goto LABEL_93;
  }
  Swift::Int v42 = *(void *)(v41 + 8 * v48 + 32);
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t String.doc_localizedQuotedString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22BE922D8();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_currentLocale);
  sub_22BE922B8();

  uint64_t v8 = sub_22BE922A8();
  if (v9) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 34;
  }
  if (v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = 0xE100000000000000;
  }
  uint64_t v12 = sub_22BE92298();
  uint64_t v36 = v10;
  unint64_t v37 = v11;
  if (v13) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = 34;
  }
  v27[1] = v14;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  sub_22BE0F59C();
  uint64_t v34 = sub_22BE93488();
  uint64_t v35 = v15;
  uint64_t v32 = 10844;
  unint64_t v33 = 0xE200000000000000;
  uint64_t v30 = 42;
  unint64_t v31 = 0xE100000000000000;
  uint64_t v16 = sub_22BE93468();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v34 = v16;
  uint64_t v35 = v18;
  uint64_t v32 = 10076;
  unint64_t v33 = 0xE200000000000000;
  uint64_t v30 = 39;
  unint64_t v31 = 0xE100000000000000;
  uint64_t v19 = sub_22BE93468();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v34 = v19;
  uint64_t v35 = v21;
  uint64_t v32 = 8796;
  unint64_t v33 = 0xE200000000000000;
  uint64_t v30 = 34;
  unint64_t v31 = 0xE100000000000000;
  uint64_t v22 = sub_22BE93468();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v34 = v22;
  uint64_t v35 = v24;
  uint64_t v32 = 23644;
  unint64_t v33 = 0xE200000000000000;
  uint64_t v30 = 92;
  unint64_t v31 = 0xE100000000000000;
  sub_22BE93468();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  uint64_t v25 = v36;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  return v25;
}

uint64_t String.doc_searchEscapedString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487868);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v29 = a2;
  sub_22BE0F59C();
  uint64_t v39 = sub_22BE93488();
  uint64_t v40 = v7;
  uint64_t v37 = 92;
  unint64_t v38 = 0xE100000000000000;
  uint64_t v35 = 23644;
  unint64_t v36 = 0xE200000000000000;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v31 = v39;
  uint64_t v32 = v7;
  uint64_t v8 = sub_22BE922D8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v26 = v8;
  uint64_t v27 = v9 + 56;
  v30(v6, 1, 1, v8);
  swift_bridgeObjectRetain();
  sub_22BE93498();
  sub_22BE035C8((uint64_t)v6, &qword_268487868);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_22BE93468();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v10;
  uint64_t v40 = v12;
  unint64_t v36 = 0xE200000000000000;
  uint64_t v37 = 34;
  unint64_t v38 = 0xE100000000000000;
  uint64_t v32 = v12;
  uint64_t v33 = a1;
  uint64_t v28 = a1;
  uint64_t v13 = v29;
  uint64_t v34 = v29;
  uint64_t v35 = 8796;
  uint64_t v31 = v10;
  uint64_t v14 = v8;
  uint64_t v15 = v30;
  v30(v6, 1, 1, v14);
  swift_bridgeObjectRetain();
  sub_22BE93498();
  sub_22BE035C8((uint64_t)v6, &qword_268487868);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_22BE93468();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v16;
  uint64_t v40 = v18;
  uint64_t v37 = 39;
  unint64_t v38 = 0xE100000000000000;
  uint64_t v34 = v13;
  uint64_t v35 = 10076;
  unint64_t v36 = 0xE200000000000000;
  uint64_t v32 = v18;
  uint64_t v33 = a1;
  uint64_t v31 = v16;
  uint64_t v19 = v26;
  v15(v6, 1, 1, v26);
  swift_bridgeObjectRetain();
  sub_22BE93498();
  sub_22BE035C8((uint64_t)v6, &qword_268487868);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_22BE93468();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v20;
  uint64_t v40 = v22;
  uint64_t v37 = 42;
  unint64_t v38 = 0xE100000000000000;
  uint64_t v34 = v13;
  uint64_t v35 = 10844;
  unint64_t v36 = 0xE200000000000000;
  uint64_t v32 = v22;
  uint64_t v33 = v28;
  uint64_t v31 = v20;
  v30(v6, 1, 1, v19);
  swift_bridgeObjectRetain();
  sub_22BE93498();
  sub_22BE035C8((uint64_t)v6, &qword_268487868);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_22BE93468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t String.doc_searchQueryValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22BE91EE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 34;
  unint64_t v11 = 0xE100000000000000;
  String.doc_searchEscapedString.getter(a1, a2);
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  sub_22BE92D88();
  v9[0] = a1;
  v9[1] = a2;
  sub_22BE91ED8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE91EC8();
  sub_22BE0F59C();
  sub_22BE93438();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t String.doc_sanitizedForComparison.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487868);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = a1;
  v11[1] = a2;
  id v7 = objc_msgSend(self, sel_currentLocale);
  sub_22BE922B8();

  uint64_t v8 = sub_22BE922D8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  sub_22BE0F59C();
  uint64_t v9 = sub_22BE934A8();
  sub_22BE035C8((uint64_t)v6, &qword_268487868);
  return v9;
}

uint64_t String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487868);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v23 = 124;
  unint64_t v24 = 0xE100000000000000;
  sub_22BE0F59C();
  uint64_t v7 = sub_22BE93428();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_22BDFE2E8(0, v8, 0);
    uint64_t v9 = self;
    v22[1] = v7;
    uint64_t v10 = (uint64_t *)(v7 + 40);
    do
    {
      uint64_t v11 = *v10;
      uint64_t v25 = *(v10 - 1);
      uint64_t v26 = v11;
      swift_bridgeObjectRetain();
      id v12 = objc_msgSend(v9, sel_currentLocale);
      sub_22BE922B8();

      uint64_t v13 = sub_22BE922D8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
      uint64_t v14 = sub_22BE934A8();
      uint64_t v16 = v15;
      sub_22BE035C8((uint64_t)v6, &qword_268487868);
      swift_bridgeObjectRelease();
      uint64_t v17 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22BDFE2E8(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v23;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_22BDFE2E8(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v23;
      }
      v10 += 2;
      *(void *)(v17 + 16) = v19 + 1;
      unint64_t v20 = v17 + 16 * v19;
      *(void *)(v20 + 32) = v14;
      *(void *)(v20 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v17;
}

uint64_t sub_22BE45188(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_22BE93768();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_22BE92F28();
  *(void *)(result + 16) = a2;
  uint64_t v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  int64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *int64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_22BE45274(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_22BE93768();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2684878B0);
      uint64_t v4 = (void *)sub_22BE92F28();
      uint64_t v5 = v4;
      _OWORD v4[2] = a2;
      void v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          int64x2_t v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_22BE45368()
{
  uint64_t v0 = (void *)sub_22BE92C98();
  id v1 = objc_msgSend(v0, sel_pathExtension);

  uint64_t v2 = sub_22BE92CD8();
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    return 46;
  }
  return v2;
}

Swift::Bool __swiftcall String.isKnownExtension()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22BE92568();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v22 = v3;
  unint64_t v23 = v2;
  swift_bridgeObjectRetain();
  Swift::Bool result = sub_22BE92DE8();
  if (!result)
  {
LABEL_7:
    uint64_t v18 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0) {
      uint64_t v18 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v18)
    {
      sub_22BE92468();
      sub_22BE92408();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
        char v20 = sub_22BE923B8();
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
        BOOL v19 = (v20 & 1) != 0 || UTType.isClaimed(for:handlerRank:)(0, *MEMORY[0x263F018F0]);
        uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
        v21(v11, v7);
        v21(v14, v7);
        return v19;
      }
      sub_22BE035C8((uint64_t)v6, &qword_26AEFFB28);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  uint64_t v16 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v16 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    Swift::Bool result = sub_22BDFCE18(v3, v2);
    if (v17)
    {
      sub_22BE458DC(1);
      swift_bridgeObjectRelease();
      uint64_t v3 = v22;
      unint64_t v2 = v23;
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall String.fileSuffixChain()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  sub_22BE45368();
  if (String.isKnownExtension()())
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_22BE92DD8();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_22BE45964(v4, v3, v2, v5);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    MEMORY[0x230F557E0](v6, v8, v10, v12);
    swift_bridgeObjectRelease();
    Swift::String v13 = String.fileSuffixChain()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v13._countAndFlagsBits;
    unint64_t object = v13._object;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = 0;
    unint64_t object = (void *)0xE000000000000000;
  }
  result._unint64_t object = object;
  result._uint64_t countAndFlagsBits = countAndFlagsBits;
  return result;
}

void *sub_22BE4580C(void *a1)
{
  return sub_22BE7D6EC(0, a1[2], 0, a1);
}

void *sub_22BE45820(void *a1)
{
  return sub_22BE7D7FC(0, a1[2], 0, a1);
}

void *sub_22BE45834(void *a1)
{
  return sub_22BE7D90C(0, a1[2], 0, a1);
}

void *sub_22BE45848(void *a1)
{
  return sub_22BDCC94C(0, a1[2], 0, a1);
}

void sub_22BE45860(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_22BE937E8();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x230F56150);
}

uint64_t sub_22BE458DC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      Swift::String result = sub_22BE92D68();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        Swift::String result = 15;
        uint64_t v1 = v2;
        return MEMORY[0x270F9D650](result, v1);
      }
    }
    __break(1u);
    return MEMORY[0x270F9D650](result, v1);
  }
  return result;
}

uint64_t sub_22BE45964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = sub_22BE92D68();
    if (v7) {
      a2 = 15;
    }
    else {
      a2 = v6;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x270F9D8F0](a1, a2, a3, a4);
}

uint64_t SetFilenameExtensionVisibilityIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_22BE91E28();
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v27 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v26 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v25 = (char *)v23 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v24 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22BE920A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22BE922D8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_22BE92C88();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = sub_22BE920B8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v23[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2684878F8);
  sub_22BE92C78();
  sub_22BE922C8();
  uint64_t v17 = *MEMORY[0x263F06D18];
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v18(v12, v17, v9);
  sub_22BE920C8();
  sub_22BE92C78();
  sub_22BE922C8();
  v18(v12, v17, v9);
  BOOL v19 = v24;
  sub_22BE920C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
  char v31 = 2;
  uint64_t v20 = sub_22BE91BA8();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v25, 1, 1, v20);
  v21(v26, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263EFBDC8], v29);
  sub_22BE4625C();
  uint64_t result = sub_22BE91C08();
  *uint64_t v30 = result;
  return result;
}

uint64_t SetFilenameExtensionVisibilityIntent.operation.getter()
{
  return sub_22BE91BD8();
}

uint64_t SetFilenameExtensionVisibilityIntent.operation.setter()
{
  return sub_22BE91BE8();
}

uint64_t static ShowHideOperation.typeDisplayRepresentation.getter()
{
  return MEMORY[0x270EE1CA0](0x6F6974617265704FLL, 0xE90000000000006ELL);
}

DocumentManagerExecutables::ShowHideOperation_optional __swiftcall ShowHideOperation.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_22BE93858();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ShowHideOperation.allCases.getter()
{
  return &unk_26DF421E0;
}

uint64_t ShowHideOperation.rawValue.getter()
{
  uint64_t v1 = 2003789939;
  if (*v0 != 1) {
    uint64_t v1 = 1701079400;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C67676F74;
  }
}

uint64_t sub_22BE46050(char *a1, unsigned __int8 *a2)
{
  return sub_22BE7C79C(*a1, *a2);
}

uint64_t sub_22BE4605C()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE460EC()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE46168()
{
  return sub_22BE93A48();
}

DocumentManagerExecutables::ShowHideOperation_optional sub_22BE461F4(Swift::String *a1)
{
  return ShowHideOperation.init(rawValue:)(*a1);
}

void sub_22BE46200(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = 2003789939;
  if (v2 != 1) {
    uint64_t v4 = 1701079400;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x656C67676F74;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

void sub_22BE4624C(void *a1@<X8>)
{
  *a1 = &unk_26DF42208;
}

unint64_t sub_22BE4625C()
{
  unint64_t result = qword_268487900;
  if (!qword_268487900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487900);
  }
  return result;
}

uint64_t sub_22BE462B0()
{
  return MEMORY[0x270EE1CA0](0x6F6974617265704FLL, 0xE90000000000006ELL);
}

uint64_t sub_22BE462CC(uint64_t a1)
{
  unint64_t v2 = sub_22BE4625C();

  return MEMORY[0x270EE0C40](a1, v2);
}

uint64_t sub_22BE4631C(uint64_t a1)
{
  unint64_t v2 = sub_22BE47630();

  return MEMORY[0x270EE1C28](a1, v2);
}

uint64_t static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_2684878B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.setter(uint64_t a1, void *a2)
{
  qword_2684878B8 = a1;
  off_2684878C0 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_22BE46470()
{
  uint64_t v0 = sub_22BE920A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE922D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_22BE92C88();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_22BE920B8();
  __swift_allocate_value_buffer(v6, qword_2684878C8);
  __swift_project_value_buffer(v6, (uint64_t)qword_2684878C8);
  sub_22BE92C78();
  sub_22BE922C8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06D18], v0);
  return sub_22BE920C8();
}

uint64_t static SetFilenameExtensionVisibilityIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE2044C(&qword_2684867E0, MEMORY[0x263F06D40], (uint64_t)qword_2684878C8, a1);
}

uint64_t sub_22BE466A8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v16 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_22BE920A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE922D8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_22BE92C88();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v15 = sub_22BE920B8();
  uint64_t v8 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v9 = sub_22BE91D88();
  __swift_allocate_value_buffer(v9, qword_2684878E0);
  uint64_t v14 = __swift_project_value_buffer(v9, (uint64_t)qword_2684878E0);
  sub_22BE92C78();
  sub_22BE922C8();
  uint64_t v10 = *MEMORY[0x263F06D18];
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v11(v5, v10, v2);
  sub_22BE920C8();
  sub_22BE92C78();
  sub_22BE922C8();
  v11(v5, v10, v2);
  uint64_t v12 = v16;
  sub_22BE920C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v15);
  return sub_22BE91D98();
}

uint64_t static SetFilenameExtensionVisibilityIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE2044C(&qword_2684867E8, MEMORY[0x263EFBA28], (uint64_t)qword_2684878E0, a1);
}

void (*SetFilenameExtensionVisibilityIntent.operation.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_22BE91BC8();
  return sub_22BE20638;
}

uint64_t SetFilenameExtensionVisibilityIntent.$operation.getter()
{
  return sub_22BE91BF8();
}

uint64_t static SetFilenameExtensionVisibilityIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static SetFilenameExtensionVisibilityIntent.parameterSummary.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487908);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487910);
  MEMORY[0x270FA5388](v1);
  sub_22BDDF450();
  sub_22BE91E08();
  sub_22BE91DF8();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487918);
  sub_22BE91DE8();
  swift_release();
  sub_22BE91DF8();
  sub_22BE91E18();
  return sub_22BE91DD8();
}

uint64_t SetFilenameExtensionVisibilityIntent.perform()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_22BE20860, 0, 0);
}

uint64_t sub_22BE46CB0@<X0>(uint64_t a1@<X8>)
{
  if (qword_2684867E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE920B8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2684878C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t _s26DocumentManagerExecutables17ShowHideOperationO26caseDisplayRepresentationsSDyAC10AppIntents0H14RepresentationVGvgZ_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684874A8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v37 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2684873C8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v28 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_22BE920A8();
  uint64_t v4 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22BE922D8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_22BE92C88();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v30 = sub_22BE920B8();
  uint64_t v38 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684879B0);
  uint64_t v9 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268487310) - 8);
  uint64_t v10 = *(void *)(*(void *)v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v27 = 2 * v10;
  uint64_t v12 = swift_allocObject();
  uint64_t v29 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_22BE9A3B0;
  unint64_t v36 = v12 + v11;
  unint64_t v24 = v12 + v11 + v9[14];
  *(unsigned char *)(v12 + v11) = 0;
  sub_22BE92C78();
  sub_22BE922C8();
  unsigned int v25 = *MEMORY[0x263F06D18];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v26 = v4 + 104;
  uint64_t v33 = v13;
  ((void (*)(char *))v13)(v6);
  sub_22BE920C8();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v38 += 56;
  uint64_t v14 = v28;
  uint64_t v15 = v30;
  v23(v28, 1, 1, v30);
  uint64_t v32 = sub_22BE91DA8();
  uint64_t v16 = *(void *)(v32 - 8);
  char v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v34 = v16 + 56;
  v31(v37, 1, 1, v32);
  sub_22BE91DB8();
  unint64_t v24 = v36 + v10 + v9[14];
  *(unsigned char *)(v36 + v1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 1;
  sub_22BE92C78();
  sub_22BE922C8();
  uint64_t v17 = v25;
  v33(v6, v25, v35);
  sub_22BE920C8();
  uint64_t v18 = v15;
  BOOL v19 = v23;
  v23(v14, 1, 1, v18);
  uint64_t v20 = v37;
  v31(v37, 1, 1, v32);
  sub_22BE91DB8();
  *(unsigned char *)(v36 + v27) = 2;
  sub_22BE92C78();
  sub_22BE922C8();
  v33(v6, v17, v35);
  sub_22BE920C8();
  v19(v14, 1, 1, v30);
  v31(v20, 1, 1, v32);
  sub_22BE91DB8();
  return sub_22BE1AAD4(v29);
}

uint64_t sub_22BE47394@<X0>(uint64_t *a1@<X8>)
{
  sub_22BE91C58();
  uint64_t v2 = sub_22BE91BF8();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

unint64_t sub_22BE473E0()
{
  unint64_t result = qword_268487928;
  if (!qword_268487928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487928);
  }
  return result;
}

unint64_t sub_22BE47438()
{
  unint64_t result = qword_268487930;
  if (!qword_268487930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487930);
  }
  return result;
}

unint64_t sub_22BE47490()
{
  unint64_t result = qword_268487938;
  if (!qword_268487938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487938);
  }
  return result;
}

unint64_t sub_22BE474E8()
{
  unint64_t result = qword_268487940;
  if (!qword_268487940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487940);
  }
  return result;
}

uint64_t sub_22BE4753C()
{
  return sub_22BE21924(&qword_268487948, &qword_268487950);
}

unint64_t sub_22BE4757C()
{
  unint64_t result = qword_268487958;
  if (!qword_268487958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487958);
  }
  return result;
}

unint64_t sub_22BE475D4()
{
  unint64_t result = qword_268487960;
  if (!qword_268487960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487960);
  }
  return result;
}

unint64_t sub_22BE47630()
{
  unint64_t result = qword_268487968;
  if (!qword_268487968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487968);
  }
  return result;
}

uint64_t sub_22BE47684()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22BE476D8()
{
  unint64_t result = qword_268487970;
  if (!qword_268487970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487970);
  }
  return result;
}

unint64_t sub_22BE47730()
{
  unint64_t result = qword_268487978;
  if (!qword_268487978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487978);
  }
  return result;
}

unint64_t sub_22BE47788()
{
  unint64_t result = qword_268487980;
  if (!qword_268487980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487980);
  }
  return result;
}

uint64_t sub_22BE477DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22BE477F8()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for ShowHideOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE478E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowHideOperation()
{
  return &type metadata for ShowHideOperation;
}

uint64_t sub_22BE47920()
{
  return sub_22BE21924(&qword_2684879A0, &qword_2684879A8);
}

uint64_t UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22BE92568();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = self;
  if (objc_msgSend(v10, sel_quickLookInSeparateProcess)) {
    return 1;
  }
  id v12 = objc_msgSend(v10, sel_quickLookInWindow);
  unsigned int v13 = objc_msgSend(v12, sel_isEnabled);

  if (v13) {
    id v11 = objc_msgSend(v1, sel__enhancedWindowingEnabled);
  }
  else {
    id v11 = 0;
  }
  id v14 = objc_msgSend(v10, sel_quickLookRestrictContentTypesThatOpenInWindow);
  unsigned int v15 = objc_msgSend(v14, sel_isEnabled);

  if (v15)
  {
    sub_22BE47C2C(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_22BE29F0C((uint64_t)v5);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488460);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_22BE9A3B0;
      sub_22BE924B8();
      sub_22BE924A8();
      sub_22BE92498();
      uint64_t v16 = (void *)sub_22BE92418();
      uint64_t v17 = (void *)sub_22BE92EA8();
      unsigned int v18 = objc_msgSend(v16, sel_doc_conformsToAnyInContentTypes_, v17);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v11 & (v18 ^ 1);
    }
  }
  return (uint64_t)v11;
}

uint64_t sub_22BE47C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AEFFB28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22BE47C94(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_2684879F8);
}

uint64_t static Logger.documentCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486800, (uint64_t)qword_2684879F8, a1);
}

uint64_t sub_22BE47CDC(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487A10);
}

uint64_t static Logger.Persona.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486808, (uint64_t)qword_268487A10, a1);
}

uint64_t sub_22BE47D20(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487A28);
}

uint64_t static Logger.SmartFolders.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486810, (uint64_t)qword_268487A28, a1);
}

uint64_t sub_22BE47D6C(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487A40);
}

uint64_t static Logger.Source.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486818, (uint64_t)qword_268487A40, a1);
}

uint64_t sub_22BE47DAC(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487A58);
}

uint64_t static Logger.Picker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486820, (uint64_t)qword_268487A58, a1);
}

uint64_t sub_22BE47DEC(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487AB8);
}

uint64_t static Logger.DownloadService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486840, (uint64_t)qword_268487AB8, a1);
}

uint64_t static Logger.Analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486850, (uint64_t)qword_268487AE8, a1);
}

uint64_t sub_22BE47E60(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B18);
}

uint64_t static Logger.ProgressUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486860, (uint64_t)qword_268487B18, a1);
}

uint64_t sub_22BE47EA8(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B48);
}

uint64_t static Logger.FileProviderSyncState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486870, (uint64_t)qword_268487B48, a1);
}

uint64_t sub_22BE47EF0(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B78);
}

uint64_t static Logger.Sidebar.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486880, (uint64_t)qword_268487B78, a1);
}

uint64_t sub_22BE47F34(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487B90);
}

uint64_t static Logger.Preview.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486888, (uint64_t)qword_268487B90, a1);
}

uint64_t sub_22BE47F78(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487BA8);
}

uint64_t static Logger.AppPopover.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486890, (uint64_t)qword_268487BA8, a1);
}

uint64_t sub_22BE47FC0(uint64_t a1)
{
  return sub_22BDD2268(a1, qword_268487BC0);
}

uint64_t static Logger.Widget.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22BDD5BA8(&qword_268486898, (uint64_t)qword_268487BC0, a1);
}

Swift::Bool __swiftcall Logger.doc_isEnabled(for:)(os_log_type_t a1)
{
  sub_22BE48048();
  uint64_t v2 = sub_22BE93368();
  Swift::Bool v3 = os_log_type_enabled(v2, a1);

  return v3;
}

unint64_t sub_22BE48048()
{
  unint64_t result = qword_26AF004D0;
  if (!qword_26AF004D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AF004D0);
  }
  return result;
}

DocumentManagerExecutables::DeepLinkComponents::Scheme_optional __swiftcall DeepLinkComponents.Scheme.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_22BE93858();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t DeepLinkComponents.Scheme.rawValue.getter()
{
  uint64_t v1 = 0x6F64646572616873;
  if (*v0 != 1) {
    uint64_t v1 = 6450547;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701603686;
  }
}

uint64_t sub_22BE4813C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22BE7C688(*a1, *a2);
}

uint64_t sub_22BE48148()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE481E8()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE48274()
{
  return sub_22BE93A48();
}

DocumentManagerExecutables::DeepLinkComponents::Scheme_optional sub_22BE48310(Swift::String *a1)
{
  return DeepLinkComponents.Scheme.init(rawValue:)(*a1);
}

void sub_22BE4831C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEF73746E656D7563;
  uint64_t v5 = 0x6F64646572616873;
  if (v2 != 1)
  {
    uint64_t v5 = 6450547;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701603686;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

DocumentManagerExecutables::DeepLinkComponents::QueryName_optional __swiftcall DeepLinkComponents.QueryName.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_22BE93858();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t DeepLinkComponents.QueryName.rawValue.getter()
{
  uint64_t result = 0x6E6F697461636F6CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1851876211;
      break;
    case 2:
      uint64_t result = 0x656D616E656C6966;
      break;
    case 3:
      uint64_t result = 0x6C6165766572;
      break;
    case 4:
      uint64_t result = 1852141679;
      break;
    case 5:
      uint64_t result = 0x746E6F63776F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22BE48494(unsigned __int8 *a1, char *a2)
{
  return sub_22BE7C48C(*a1, *a2);
}

uint64_t sub_22BE484A0()
{
  return sub_22BE86F88();
}

uint64_t sub_22BE484A8()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE4859C()
{
  return sub_22BE87404();
}

DocumentManagerExecutables::DeepLinkComponents::QueryName_optional sub_22BE485A4(Swift::String *a1)
{
  return DeepLinkComponents.QueryName.init(rawValue:)(*a1);
}

void sub_22BE485B0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6E6F697461636F6CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1851876211;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656D616E656C6966;
      *(void *)(a1 + 8) = 0xE900000000000073;
      break;
    case 3:
      *(void *)a1 = 0x6C6165766572;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 1852141679;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 5:
      strcpy((char *)a1, "showcontents");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t DeepLinkComponents.DeepLinkError.localizedStringResource.getter()
{
  uint64_t v0 = sub_22BE920A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE922D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_22BE92C88();
  MEMORY[0x270FA5388](v5 - 8);
  sub_22BE92C78();
  sub_22BE922C8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F06D18], v0);
  return sub_22BE920C8();
}

BOOL static DeepLinkComponents.DeepLinkError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeepLinkComponents.DeepLinkError.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DeepLinkComponents.DeepLinkError.hashValue.getter()
{
  return sub_22BE93A48();
}

unint64_t sub_22BE48AA4()
{
  unint64_t result = qword_268487BD8;
  if (!qword_268487BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487BD8);
  }
  return result;
}

unint64_t sub_22BE48AFC()
{
  unint64_t result = qword_268487BE0;
  if (!qword_268487BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487BE0);
  }
  return result;
}

unint64_t sub_22BE48B54()
{
  unint64_t result = qword_268487BE8;
  if (!qword_268487BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487BE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents()
{
  return &type metadata for DeepLinkComponents;
}

unsigned char *storeEnumTagSinglePayload for DeepLinkComponents.Scheme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE48C88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents.Scheme()
{
  return &type metadata for DeepLinkComponents.Scheme;
}

uint64_t getEnumTagSinglePayload for DeepLinkComponents.QueryName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeepLinkComponents.QueryName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE48E1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents.QueryName()
{
  return &type metadata for DeepLinkComponents.QueryName;
}

unsigned char *storeEnumTagSinglePayload for DeepLinkComponents.DeepLinkError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE48F20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents.DeepLinkError()
{
  return &type metadata for DeepLinkComponents.DeepLinkError;
}

uint64_t DOCAssociatedObjectStorageKey.rawPointer.getter()
{
  return *(void *)v0;
}

uint64_t DOCAssociatedObjectStorageKey.description.getter()
{
  return MEMORY[0x270F9D7C0](*v0);
}

uint64_t sub_22BE48F68()
{
  return MEMORY[0x270F9D7C0](*v0);
}

uint64_t sub_22BE48F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22BDDB20C(*(void *)(*MEMORY[0x263F8EA20] + *a1 + 8), a2);
}

uint64_t sub_22BE48FAC(uint64_t a1, void *a2)
{
  sub_22BE49CA0(a1, a2);
  swift_release();
  uint64_t v3 = sub_22BE933B8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void (*sub_22BE49064(void *a1, void *a2))(void ***a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(*MEMORY[0x263F8EA20] + *a2 + 8);
  uint64_t v7 = sub_22BE933B8();
  _OWORD v5[2] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[3] = v8;
  size_t v9 = *(void *)(v8 + 64);
  v5[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v5[5] = v10;
  sub_22BDDB20C(v6, (uint64_t)v10);
  return sub_22BE4917C;
}

void sub_22BE4917C(void ***a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  unsigned int v4 = (*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    ((void (*)(void *, void *, void *))v6[2])((*a1)[4], v4, v5);
    uint64_t v8 = *(void *)(*MEMORY[0x263F8EA20] + *v7 + 8);
    sub_22BE91C58();
    sub_22BDDB31C((uint64_t)v3, (uint64_t)v7, v8);
    swift_release();
    size_t v9 = (void (*)(void *, void *))v6[1];
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    uint64_t v10 = *(void *)(*MEMORY[0x263F8EA20] + *v7 + 8);
    sub_22BE91C58();
    sub_22BDDB31C((uint64_t)v4, (uint64_t)v7, v10);
    swift_release();
    ((void (*)(void *, void *))v6[1])(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_22BE49300(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a3;
  sub_22BE91C58();
  a5(a1, v7);

  return swift_release();
}

void (*sub_22BE49360(void *a1, void *a2))(void ***a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(*MEMORY[0x263F8EA20] + *a2 + 8);
  _OWORD v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  size_t v9 = malloc(v8);
  v5[5] = v9;
  sub_22BDDB20C(*(void *)(v6 + 16), (uint64_t)v9);
  return sub_22BE49470;
}

void sub_22BE49470(void ***a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  unsigned int v4 = (*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    ((void (*)(void *, void *, void *))v6[2])((*a1)[4], v4, v5);
    uint64_t v8 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *v7 + 8) + 16);
    sub_22BE91C58();
    sub_22BDDB31C((uint64_t)v3, (uint64_t)v7, v8);
    swift_release();
    size_t v9 = (void (*)(void *, void *))v6[1];
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    uint64_t v10 = *(void *)(*(void *)(*MEMORY[0x263F8EA20] + *v7 + 8) + 16);
    sub_22BE91C58();
    sub_22BDDB31C((uint64_t)v4, (uint64_t)v7, v10);
    swift_release();
    ((void (*)(void *, void *))v6[1])(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_22BE495FC@<X0>(const void **a1@<X0>, void (*a2)(id)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_22BE933B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v20 - v11;
  unsigned int v13 = *a1;
  id v14 = objc_getAssociatedObject(v4, v13);
  if (v14)
  {
    sub_22BE934B8();
    swift_unknownObjectRelease();
    sub_22BDDBF3C(v20, v21);
    sub_22BDDBF3C(v21, v20);
    char v15 = swift_dynamicCast();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
    if (v15)
    {
      uint64_t v17 = *(void *)(a3 - 8);
      v16(v12, 0, 1, a3);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a4, v12, a3);
    }
    v16(v12, 1, 1, a3);
    id v14 = (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  a2(v14);
  BOOL v19 = (void *)sub_22BE938B8();
  objc_setAssociatedObject(v4, v13, v19, (void *)1);
  return swift_unknownObjectRelease();
}

id DOCAssociatedObjectStorage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCAssociatedObjectStorage();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE49874()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE49884(uint64_t a1)
{
  objc_super v2 = v1;
  unint64_t v3 = sub_22BDFD20C(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *objc_super v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22BE1E02C();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 16 * v5);
  sub_22BE49930(v5, v7);
  *objc_super v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_22BE49930(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_22BE934F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_22BE939E8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            id v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (_OWORD *)(v15 + 16 * v3);
            uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              _OWORD *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unsigned int v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unsigned int v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unsigned int v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22BE49AC8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_22BE934F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_22BE939F8();
        swift_bridgeObjectRetain();
        sub_22BE92D48();
        uint64_t v9 = sub_22BE93A48();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          id v12 = (_OWORD *)(v11 + 16 * v3);
          unsigned int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_22BE49CA0(uint64_t a1, void *a2)
{
  return sub_22BDDB31C(a1, (uint64_t)a2, *(void *)(*MEMORY[0x263F8EA20] + *a2 + 8));
}

uint64_t sub_22BE49CDC@<X0>(void **a1@<X1>, uint64_t a2@<X8>)
{
  return sub_22BE48F70(*a1, a2);
}

uint64_t sub_22BE49D04(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_22BE49300(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_22BE49CA0);
}

uint64_t sub_22BE49D30()
{
  return 16;
}

__n128 sub_22BE49D3C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22BE49D48@<X0>(void **a1@<X1>, uint64_t a2@<X8>)
{
  return sub_22BDDFD14(*a1, a2);
}

uint64_t sub_22BE49D70(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_22BE49300(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_22BDDAF48);
}

uint64_t sub_22BE49D9C()
{
  return 16;
}

__n128 sub_22BE49DA8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCAssociatedObjectStorageKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAssociatedObjectStorageKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)__n128 result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = 0;
    }
  }
  return result;
}

uint64_t method lookup function for DOCAssociatedObjectStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCAssociatedObjectStorage);
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.subscript.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(forPropertyStorageKey:defaultValue:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t DOCThreadSafeState.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DOCThreadSafeState.init(_:)(a1);
  return v2;
}

id *DOCThreadSafeState.deinit()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t DOCThreadSafeState.__deallocating_deinit()
{
  DOCThreadSafeState.deinit();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for DOCThreadSafeState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCThreadSafeState);
}

uint64_t dispatch thunk of DOCThreadSafeState.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

id UIView.doc_tintColorIgnoringVibrancyContainer.getter()
{
  id result = objc_msgSend(v0, sel_tintColor);
  if (!result) {
    __break(1u);
  }
  return result;
}

id FISentinelNode.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void static FISentinelNode.createSentinelNode.setter(uint64_t a1)
{
  if (qword_26AEFFE08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_26AEFFA70;
  qword_26AEFFA70 = a1;
}

uint64_t (*static FISentinelNode.createSentinelNode.modify())()
{
  if (qword_26AEFFE08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id FISentinelNode.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FISentinelNode();
  return objc_msgSendSuper2(&v2, sel_init);
}

id FISentinelNode.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FISentinelNode.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FISentinelNode();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id FISentinelNode.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FISentinelNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE4A73C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_22BE29680(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_22BE56D08(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_22BE4A7A8()
{
  uint64_t v0 = sub_22BE925E8();
  __swift_allocate_value_buffer(v0, qword_268487BF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_268487BF8);
  return sub_22BE925D8();
}

uint64_t static Logger.diskFormatting.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2684868A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE925E8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_268487BF8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_22BE4A8D4()
{
  return sub_22BE4CB04();
}

uint64_t sub_22BE4A8E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables16ObservableString__value;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_22BE4A98C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ObservableString(0);
  uint64_t result = sub_22BE92718();
  *a1 = result;
  return result;
}

void sub_22BE4A9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a9;
  *(void *)(v17 + 24) = a10;
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  char v31 = sub_22BE181A8;
  uint64_t v32 = v17;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_22BE2A864;
  uint64_t v30 = &block_descriptor_18;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 0, v19);
  _Block_release(v19);

  objc_msgSend(v16, sel_addAction_, v21);
  objc_msgSend(v16, sel_setPreferredAction_, v21);
  if (a11 && a8)
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a11;
    *(void *)(v22 + 24) = a12;
    sub_22BE03630(a11);
    sub_22BE03630(a11);
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)sub_22BE92C98();
    swift_bridgeObjectRelease();
    char v31 = sub_22BE10E44;
    uint64_t v32 = v22;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_22BE2A864;
    uint64_t v30 = &block_descriptor_125;
    unint64_t v24 = _Block_copy(&aBlock);
    swift_release();
    id v25 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v23, 2, v24);
    _Block_release(v24);

    objc_msgSend(v16, sel_addAction_, v25);
    sub_22BDE0E58(a11);
  }
  objc_msgSend(a13, sel_presentViewController_animated_completion_, v16, 1, 0, a7);
}

char *sub_22BE4AD10(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v10 = (uint64_t *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel];
  type metadata accessor for USBEraseViewModel(0);
  swift_allocObject();
  uint64_t v11 = v8;
  sub_22BE4CC84();
  sub_22BE58D68(&qword_268487D20, (void (*)(uint64_t))type metadata accessor for USBEraseViewModel);
  *unint64_t v10 = sub_22BE927A8();
  v10[1] = v12;
  unsigned int v13 = &v11[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__confirmPassword];
  type metadata accessor for ObservableString(0);
  uint64_t v14 = swift_allocObject();
  sub_22BE92728();
  uint64_t v65 = v14;
  sub_22BE92A18();
  *(void *)unsigned int v13 = 0;
  *((void *)v13 + 1) = 0xE000000000000000;
  uint64_t v15 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))&v11[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter];
  *uint64_t v15 = sub_22BE4A9CC;
  v15[1] = 0;

  v64.receiver = v11;
  v64.super_class = (Class)type metadata accessor for DOCEraseViewController();
  id v16 = (char *)objc_msgSendSuper2(&v64, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v17 = &v16[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel];
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v18 = v16;
  sub_22BE91C58();
  sub_22BE92748();
  uint64_t v19 = (void *)(*((void *)v17 + 1) + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
  *uint64_t v19 = a1;
  v19[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_22BE91C58();
  a3(v20);
  swift_release();
  sub_22BE91C58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D50);
  sub_22BE92A28();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D58);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22BE97A30;
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v22;
  uint64_t v23[3] = a5;
  v23[4] = a6;
  *(void *)(v21 + 32) = sub_22BE58D44;
  *(void *)(v21 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v23;
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v21 + 48) = sub_22BE58D50;
  *(void *)(v21 + 56) = v24;
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = v25;
  v26[3] = a7;
  v26[4] = a8;
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE927A8();
  sub_22BE58D68(&qword_268487D60, (void (*)(uint64_t))type metadata accessor for ObservableString);
  sub_22BE927A8();
  swift_release();
  swift_release();
  id v27 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_268487D68));
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  sub_22BE91C58();
  uint64_t v28 = (void *)sub_22BE928A8();
  objc_msgSend(v18, sel_addChildViewController_, v28);
  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v30 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v31 = result;
  id v32 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v31, sel_setBackgroundColor_, v32);

  uint64_t result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v33 = result;
  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v34 = result;
  objc_msgSend(v33, sel_addSubview_, result);

  objc_msgSend(v28, sel_didMoveToParentViewController_, v18);
  objc_msgSend(v18, sel_setPreferredContentSize_, 600.0, 700.0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_22BE9BDA0;
  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v36 = result;
  id v37 = objc_msgSend(result, sel_centerXAnchor);

  uint64_t result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v38 = result;
  id v39 = objc_msgSend(result, sel_centerXAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v35 + 32) = v40;
  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v41 = result;
  id v42 = objc_msgSend(result, sel_centerYAnchor);

  uint64_t result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char v43 = result;
  id v44 = objc_msgSend(result, sel_centerYAnchor);

  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v44);
  *(void *)(v35 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v45;
  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v46 = result;
  id v47 = objc_msgSend(result, sel_widthAnchor);

  uint64_t result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v48 = result;
  id v49 = objc_msgSend(result, sel_widthAnchor);

  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);
  *(void *)(v35 + 48) = v50;
  uint64_t result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v51 = result;
  id v52 = objc_msgSend(result, sel_heightAnchor);

  uint64_t result = (char *)objc_msgSend(v18, sel_view);
  if (result)
  {
    int v53 = result;
    long long v54 = self;
    id v55 = objc_msgSend(v53, sel_heightAnchor);

    id v56 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v55);
    *(void *)(v35 + 56) = v56;
    sub_22BE92ED8();
    sub_22BDD9D50(0, &qword_268487268);
    uint64_t v57 = (void *)sub_22BE92EA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v54, sel_activateConstraints_, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    return v18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_22BE4B648(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x230F57630](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_22BE4B6AC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, void *)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x230F57630](v5);
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = *(void *)(result + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel + 8);
    uint64_t v9 = *(void *)(result + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter);
    uint64_t v10 = *(void *)(result + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter + 8);
    sub_22BE91C58();
    sub_22BE91C58();
    char v11 = a2(v8, v9, v10, v7);
    swift_release();

    uint64_t result = swift_release();
    char v12 = v11 & 1;
  }
  else
  {
    char v12 = 0;
  }
  *a3 = v12;
  return result;
}

void sub_22BE4B78C(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x230F57630](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22BE91C58();
    sub_22BE92738();
    swift_release();
    swift_release();
    swift_release();
    if (*(void *)(v9 + 16) && (unint64_t v6 = sub_22BDFD5A4(1u), (v7 & 1) != 0))
    {
      char v8 = *(unsigned char *)(*(void *)(v9 + 56) + v6);
      swift_bridgeObjectRelease();
      if (v8)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_268487D50);
        sub_22BE92A28();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22BE92738();
        swift_release();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22BE91C58();
        sub_22BE92738();
        swift_release();
        swift_release();
        swift_release();

        swift_bridgeObjectRelease_n();
      }
      else
      {
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  *a2 = 1;
}

char *sub_22BE4BBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t result = (char *)MEMORY[0x230F57630](v5);
  if (result)
  {
    char v7 = result;
    uint64_t result = (char *)(id)_DocumentManagerBundle();
    if (result)
    {
      char v8 = result;
      sub_22BE91F78();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_22BE99770;
      uint64_t v10 = (uint64_t *)(*(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel
                                     + 8]
                      + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      *(void *)(v9 + 56) = MEMORY[0x263F8D310];
      *(void *)(v9 + 64) = sub_22BDF8220();
      *(void *)(v9 + 32) = v12;
      *(void *)(v9 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v11;
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_22BE92CA8();
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = (char *)(id)_DocumentManagerBundle();
      if (result)
      {
        id v16 = result;
        uint64_t v34 = sub_22BE91F78();
        uint64_t v18 = v17;

        uint64_t result = (char *)(id)_DocumentManagerBundle();
        if (result)
        {
          uint64_t v19 = result;
          uint64_t v31 = v13;
          uint64_t v32 = v15;
          uint64_t v20 = a2;
          uint64_t v33 = a3;
          uint64_t v30 = sub_22BE91F78();
          uint64_t v22 = v21;

          uint64_t result = (char *)(id)_DocumentManagerBundle();
          if (result)
          {
            uint64_t v23 = result;
            uint64_t v24 = sub_22BE91F78();
            uint64_t v26 = v25;

            id v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), void, void *(*)(), void *, char *))&v7[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter];
            uint64_t v28 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v29 = (void *)swift_allocObject();
            v29[2] = v28;
            uint64_t v29[3] = v20;
            v29[4] = v33;
            sub_22BE91C58();
            sub_22BE91C58();
            sub_22BE91C58();
            v27(v31, v32, v34, v18, v30, v22, v24, v26, nullsub_1, 0, sub_22BE58DF4, v29, v7);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            return (char *)swift_release();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

void *sub_22BE4BFEC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x230F57630](v3);
  if (result)
  {
    uint64_t v5 = result;
    objc_msgSend(result, sel_dismissViewControllerAnimated_completion_, 1, 0);
    uint64_t v6 = sub_22BE91C58();
    a2(v6);

    return (void *)swift_release();
  }
  return result;
}

id sub_22BE4C0E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCEraseViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE4C188(char a1)
{
  switch(a1)
  {
    case 1:
      id v5 = (id)_DocumentManagerBundle();
      if (!v5) {
        goto LABEL_14;
      }
      objc_super v2 = v5;
      break;
    case 2:
      id v3 = (id)_DocumentManagerBundle();
      if (!v3)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        JUMPOUT(0x22BE4C35CLL);
      }
      objc_super v2 = v3;
      break;
    case 3:
      id v4 = (id)_DocumentManagerBundle();
      if (!v4) {
        goto LABEL_12;
      }
      objc_super v2 = v4;
      break;
    default:
      id v1 = (id)_DocumentManagerBundle();
      if (!v1) {
        goto LABEL_13;
      }
      objc_super v2 = v1;
      break;
  }
  uint64_t v6 = sub_22BE91F78();

  return v6;
}

uint64_t sub_22BE4C36C(unsigned __int8 *a1, char *a2)
{
  return sub_22BE7C088(*a1, *a2);
}

uint64_t sub_22BE4C378()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE4C438()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE4C4E0()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE4C59C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22BE58A40();
  *a1 = result;
  return result;
}

void sub_22BE4C5CC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x736F64736DLL;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x7461667865;
      goto LABEL_3;
    case 2:
      *a1 = 7562856;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 1936093281;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE500000000000000;
      break;
  }
}

void sub_22BE4C64C(void *a1@<X8>)
{
  *a1 = &unk_26DF423C8;
}

uint64_t sub_22BE4C65C(char a1)
{
  if (!a1) {
    return 1701736270;
  }
  if (a1 == 1)
  {
    uint64_t result = (uint64_t)(id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v2 = (void *)result;
LABEL_8:
      uint64_t v3 = sub_22BE91F78();

      return v3;
    }
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t)(id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v2 = (void *)result;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE4C7B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22BE7C890(*a1, *a2);
}

uint64_t sub_22BE4C7C4()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE4C870()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE4C908()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE4C9B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22BE58A8C();
  *a1 = result;
  return result;
}

void sub_22BE4C9E0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE900000000000064;
  uint64_t v5 = 0x6574707972636E65;
  if (v2 != 1)
  {
    uint64_t v5 = 0x736E655365736163;
    unint64_t v4 = 0xED00006576697469;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_22BE4CA48(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_22BE4CA54()
{
  return sub_22BE4CB04();
}

uint64_t sub_22BE4CA68()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22BE4CADC()
{
  return sub_22BE4CB84();
}

uint64_t sub_22BE4CAF0()
{
  return sub_22BE4CB04();
}

uint64_t sub_22BE4CB04()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22BE4CB70()
{
  return sub_22BE4CB84();
}

uint64_t sub_22BE4CB84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22BE4CBF0()
{
  return sub_22BE4CC18();
}

uint64_t sub_22BE4CC04()
{
  return sub_22BE4CC18();
}

uint64_t sub_22BE4CC18()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22BE4CC84()
{
  *(void *)&long long v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C68);
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C58);
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v35 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C38);
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  unint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C18);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__name;
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_22BE92728();
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v32(v13, v12, v9);
  uint64_t v14 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__selectedFormat;
  LOBYTE(v41) = 3;
  sub_22BE92728();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v5);
  uint64_t v15 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__encrypted;
  LOBYTE(v41) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487CC8);
  sub_22BE92728();
  id v16 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  uint64_t v17 = v34;
  v16(v15, v4, v34);
  uint64_t v18 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__password;
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_22BE92728();
  v32(v18, v12, v9);
  uint64_t v19 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__caseSensitive;
  LOBYTE(v41) = 2;
  sub_22BE92728();
  v16(v19, v4, v17);
  uint64_t v20 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingFormats;
  uint64_t v21 = MEMORY[0x263F8EE78];
  unint64_t v41 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487CD8);
  uint64_t v22 = v35;
  sub_22BE92728();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v20, v22, v37);
  uint64_t v23 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingOptions;
  unint64_t v41 = sub_22BE1A8C0(v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487CE8);
  uint64_t v24 = v38;
  sub_22BE92728();
  (*(void (**)(uint64_t, char *, void))(v39 + 32))(v23, v24, v40);
  uint64_t v25 = (void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
  *uint64_t v25 = 0;
  v25[1] = 0xE000000000000000;
  uint64_t v26 = OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_supportedFormatsAndOptions;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D28);
  uint64_t inited = swift_initStackObject();
  long long v40 = xmmword_22BE99D40;
  *(_OWORD *)(inited + 16) = xmmword_22BE99D40;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = sub_22BE1A8C0((uint64_t)&unk_26DF42038);
  *(unsigned char *)(inited + 48) = 2;
  *(void *)(inited + 56) = sub_22BE1A8C0((uint64_t)&unk_26DF42060);
  *(unsigned char *)(inited + 64) = 1;
  *(void *)(inited + 72) = sub_22BE1A8C0(v21);
  *(unsigned char *)(inited + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0;
  *(void *)(inited + 88) = sub_22BE1A8C0(v21);
  *(void *)(v0 + v26) = sub_22BE1A9BC(inited);
  *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats) = &unk_26DF42088;
  uint64_t v28 = OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_optionsForFormat;
  *(void *)(v0 + v28) = sub_22BE1A9BC(v21);
  uint64_t v29 = OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_followOnFormats;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D30);
  uint64_t v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = v40;
  *(unsigned char *)(v30 + 32) = 3;
  *(void *)(v30 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = &unk_26DF420B0;
  *(unsigned char *)(v30 + 48) = 2;
  *(void *)(v30 + 56) = &unk_26DF420D8;
  *(unsigned char *)(v30 + 64) = 1;
  *(void *)(v30 + 72) = &unk_26DF42100;
  *(unsigned char *)(v30 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0;
  *(void *)(v30 + 88) = &unk_26DF42128;
  *(void *)(v0 + v29) = sub_22BE1A9C8(v30);
  sub_22BE4D948(3u, 1);
  return v0;
}

uint64_t sub_22BE4D2E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v1 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22BE92738();
    swift_release();
    swift_release();
    return v4;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
    swift_bridgeObjectRetain();
  }
  return v2;
}

uint64_t sub_22BE4D3E4(unsigned __int8 a1)
{
  if (*(void *)(*(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_followOnFormats)
                 + 16)
    && (sub_22BDFD4C0(a1), (v2 & 1) != 0))
  {
    sub_22BE91C58();
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_22BE57F48(v3, v1);
    swift_bridgeObjectRelease();
    swift_release();
    return v4;
  }
  else
  {
    sub_22BE93648();
    sub_22BE92D88();
    sub_22BE93758();
    uint64_t result = sub_22BE93778();
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE4D510(unint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats;
  swift_beginAccess();
  *(void *)uint64_t v3 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_22BE937E8();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1) {
    goto LABEL_13;
  }
  uint64_t v6 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x230F56140](v6, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6 + 32);
    }
    char v8 = v7;
    ++v6;
    id v11 = v7;
    sub_22BE4D690(&v11, v1);
  }
  while (v4 != v6);
LABEL_10:
  swift_bridgeObjectRelease();
  id v11 = (id)MEMORY[0x263F8EE88];
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_22BE587C4(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v3 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(*(void *)v3 + 16)) {
    return sub_22BE4D948(*(unsigned char *)(*(void *)v3 + 32), 0);
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_22BE4D690(id *a1, uint64_t a2)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_type);
  uint64_t v5 = sub_22BE92CD8();
  unint64_t v7 = v6;

  unint64_t result = sub_22BE58228(v5, v7);
  if (result == 4) {
    return result;
  }
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_supportedFormatsAndOptions);
  if (!*(void *)(v9 + 16)) {
    return result;
  }
  unsigned __int8 v10 = result;
  unint64_t result = sub_22BDFD4C0(result);
  if ((v11 & 1) == 0) {
    return result;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * result);
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_22BE1A8C0(MEMORY[0x263F8EE78]);
  if (objc_msgSend(v3, sel_isEncrypted))
  {
    if (!*(void *)(v12 + 16)) {
      goto LABEL_12;
    }
    unint64_t v14 = sub_22BDFD5A4(1u);
    if ((v15 & 1) == 0) {
      goto LABEL_12;
    }
    char v16 = *(unsigned char *)(*(void *)(v12 + 56) + v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_22BE1D9C0(v16, 1u, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v3, sel_isCaseSensitive))
  {
    if (*(void *)(v12 + 16))
    {
      unint64_t v18 = sub_22BDFD5A4(2u);
      if (v19)
      {
        char v20 = *(unsigned char *)(*(void *)(v12 + 56) + v18);
        swift_bridgeObjectRelease();
        char v21 = swift_isUniquelyReferenced_nonNull_native();
        sub_22BE1D9C0(v20, 2u, v21);
        goto LABEL_13;
      }
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v22 = (char **)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats);
  swift_beginAccess();
  uint64_t v23 = *v22;
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v22 = v23;
  if ((v24 & 1) == 0)
  {
    uint64_t v23 = sub_22BE7DA34(0, *((void *)v23 + 2) + 1, 1, v23);
    *uint64_t v22 = v23;
  }
  unint64_t v26 = *((void *)v23 + 2);
  unint64_t v25 = *((void *)v23 + 3);
  if (v26 >= v25 >> 1)
  {
    uint64_t v23 = sub_22BE7DA34((char *)(v25 > 1), v26 + 1, 1, v23);
    *uint64_t v22 = v23;
  }
  *((void *)v23 + 2) = v26 + 1;
  v23[v26 + 32] = v10;
  swift_endAccess();
  id v27 = (uint64_t *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_optionsForFormat);
  swift_beginAccess();
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *v27;
  *id v27 = 0x8000000000000000;
  sub_22BE1D888(v13, v10, v28);
  *id v27 = v29;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_22BE4D948(unsigned __int8 a1, char a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE99770;
  *(unsigned char *)(inited + 32) = a1;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_followOnFormats);
  unsigned __int8 v33 = a1;
  if (*(void *)(v6 + 16) && (sub_22BDFD4C0(a1), (v7 & 1) != 0)) {
    uint64_t v8 = swift_bridgeObjectRetain();
  }
  else {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  uint64_t v32 = v6;
  sub_22BE5328C(v8);
  uint64_t v9 = inited;
  uint64_t v10 = *(void *)(inited + 16);
  uint64_t v36 = v3;
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  uint64_t v11 = inited + 32;
  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v13 = 0;
  uint64_t v34 = v10;
  while (2)
  {
    uint64_t v14 = *v12;
    uint64_t v15 = *(void *)(*v12 + 16);
    if (!v15) {
      goto LABEL_7;
    }
    uint64_t v16 = *(unsigned __int8 *)(v11 + v13);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = 0;
LABEL_10:
    uint64_t v18 = v14 + v17++;
    unint64_t v19 = 0xE500000000000000;
    uint64_t v20 = 0x736F64736DLL;
    switch(*(unsigned char *)(v18 + 32))
    {
      case 1:
        uint64_t v20 = 0x7461667865;
        break;
      case 2:
        unint64_t v19 = 0xE300000000000000;
        uint64_t v20 = 7562856;
        break;
      case 3:
        unint64_t v19 = 0xE400000000000000;
        uint64_t v20 = 1936093281;
        break;
      default:
        break;
    }
    unint64_t v21 = 0xE500000000000000;
    uint64_t v22 = 0x736F64736DLL;
    switch(v16)
    {
      case 1:
        if (v20 != 0x7461667865) {
          goto LABEL_20;
        }
        goto LABEL_19;
      case 2:
        unint64_t v21 = 0xE300000000000000;
        uint64_t v22 = 7562856;
        goto LABEL_18;
      case 3:
        unint64_t v21 = 0xE400000000000000;
        if (v20 != 1936093281) {
          goto LABEL_20;
        }
        goto LABEL_19;
      default:
LABEL_18:
        if (v20 != v22) {
          goto LABEL_20;
        }
LABEL_19:
        if (v19 != v21)
        {
LABEL_20:
          char v23 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23) {
            goto LABEL_26;
          }
          if (v15 == v17)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v11 = v9 + 32;
            uint64_t v10 = v34;
LABEL_7:
            if (++v13 != v10) {
              continue;
            }
            swift_bridgeObjectRelease_n();
LABEL_38:
            sub_22BE93648();
            sub_22BE92D88();
            sub_22BE93758();
            sub_22BE92D88();
            if (*(void *)(v32 + 16) && (unint64_t v28 = sub_22BDFD4C0(v33), (v29 & 1) != 0))
            {
              uint64_t v30 = *(void *)(*(void *)(v32 + 56) + 8 * v28);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v30 = MEMORY[0x263F8EE78];
            }
            MEMORY[0x230F55980](v30, &type metadata for USBFormat);
            sub_22BE92D88();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22BE92D88();
            swift_beginAccess();
            uint64_t v31 = swift_bridgeObjectRetain();
            MEMORY[0x230F55980](v31, &type metadata for USBFormat);
            sub_22BE92D88();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_22BE93778();
            __break(1u);
            JUMPOUT(0x22BE4E020);
          }
          goto LABEL_10;
        }
        swift_bridgeObjectRelease_n();
LABEL_26:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22BE92738();
        swift_release();
        swift_release();
        if ((sub_22BE7C088(v16, v37) & 1) == 0)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          char v37 = v16;
          sub_22BE91C58();
          sub_22BE92748();
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22BE92738();
          swift_release();
          swift_release();
          sub_22BE4D948(v16, 0);
        }
        if (a2)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_22BE92738();
          swift_release();
          swift_release();
          char v24 = sub_22BE4D3E4(v37);
          swift_getKeyPath();
          swift_getKeyPath();
          char v37 = v24;
          sub_22BE91C58();
          sub_22BE92748();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22BE92738();
        swift_release();
        swift_release();
        uint64_t v25 = v36 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_optionsForFormat;
        swift_beginAccess();
        if (!*(void *)(*(void *)v25 + 16)) {
          goto LABEL_34;
        }
        swift_bridgeObjectRetain();
        sub_22BDFD4C0(v37);
        if ((v26 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_34:
          sub_22BE1A8C0(MEMORY[0x263F8EE78]);
          goto LABEL_35;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_35:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_22BE91C58();
        sub_22BE92748();
        sub_22BE4E040();
        return sub_22BE4E040();
    }
  }
}

uint64_t sub_22BE4E040()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  if (*(void *)(v4 + 16) && (unint64_t v0 = sub_22BDFD5A4(1u), (v1 & 1) != 0))
  {
    char v2 = *(unsigned char *)(*(void *)(v4 + 56) + v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v2 = 2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v4) = v2;
  sub_22BE91C58();
  sub_22BE92748();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  if (*(void *)(v4 + 16)) {
    sub_22BDFD5A4(2u);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  return sub_22BE92748();
}

uint64_t USBEraseViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__name;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C18);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__selectedFormat;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__encrypted;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C38);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v3(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__password, v2);
  v8(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__caseSensitive, v7);
  uint64_t v9 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingFormats;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingOptions;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487C68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t USBEraseViewModel.__deallocating_deinit()
{
  USBEraseViewModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_22BE4E474()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_22BE4E480@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for USBEraseViewModel(0);
  uint64_t result = sub_22BE92718();
  *a1 = result;
  return result;
}

uint64_t sub_22BE4E4C0()
{
  return type metadata accessor for ObservableString(0);
}

uint64_t type metadata accessor for ObservableString(uint64_t a1)
{
  return sub_22BE4E5D4(a1, (uint64_t *)&unk_268487C78);
}

void sub_22BE4E4E8()
{
  sub_22BE4E810(319, &qword_268487C88);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for DOCEraseViewController()
{
  return self;
}

uint64_t sub_22BE4E5AC()
{
  return type metadata accessor for USBEraseViewModel(0);
}

uint64_t type metadata accessor for USBEraseViewModel(uint64_t a1)
{
  return sub_22BE4E5D4(a1, (uint64_t *)&unk_268487CA8);
}

uint64_t sub_22BE4E5D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22BE4E60C()
{
  sub_22BE4E810(319, &qword_268487C88);
  if (v0 <= 0x3F)
  {
    sub_22BE4E810(319, &qword_268487CB8);
    if (v1 <= 0x3F)
    {
      sub_22BE4E858(319, &qword_268487CC0, &qword_268487CC8);
      if (v2 <= 0x3F)
      {
        sub_22BE4E858(319, &qword_268487CD0, &qword_268487CD8);
        if (v3 <= 0x3F)
        {
          sub_22BE4E858(319, &qword_268487CE0, &qword_268487CE8);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for USBEraseViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for USBEraseViewModel);
}

void sub_22BE4E810(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_22BE92758();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_22BE4E858(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_22BE92758();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for USBFormatOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE4E974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for USBFormatOption()
{
  return &type metadata for USBFormatOption;
}

unsigned char *storeEnumTagSinglePayload for USBFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE4EA78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for USBFormat()
{
  return &type metadata for USBFormat;
}

uint64_t sub_22BE4EAB0()
{
  return sub_22BE21924(&qword_268487CF0, &qword_268487CD8);
}

unint64_t sub_22BE4EAF0()
{
  unint64_t result = qword_268487CF8;
  if (!qword_268487CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487CF8);
  }
  return result;
}

unint64_t sub_22BE4EB48()
{
  unint64_t result = qword_268487D00;
  if (!qword_268487D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487D00);
  }
  return result;
}

unint64_t sub_22BE4EBA0()
{
  unint64_t result = qword_268487D08;
  if (!qword_268487D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487D08);
  }
  return result;
}

unint64_t sub_22BE4EBF8()
{
  unint64_t result = qword_268487D10;
  if (!qword_268487D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487D10);
  }
  return result;
}

uint64_t sub_22BE4EC4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487D78);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487D80);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v1;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487D88);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487D90);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487D98);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487DA0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487DA8);
  uint64_t v14 = sub_22BE21924(&qword_268487DB0, &qword_268487DA8);
  unint64_t v15 = sub_22BE0F59C();
  uint64_t v32 = v13;
  uint64_t v33 = MEMORY[0x263F8D310];
  uint64_t v34 = v14;
  unint64_t v35 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v12;
  uint64_t v33 = OpaqueTypeConformance2;
  uint64_t v17 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_22BE21924(&qword_268487DB8, &qword_268487D98);
  uint64_t v32 = v10;
  uint64_t v33 = v11;
  uint64_t v34 = v17;
  unint64_t v35 = v18;
  swift_getOpaqueTypeConformance2();
  sub_22BE927D8();
  LOBYTE(v17) = sub_22BE928E8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  unint64_t v19 = &v9[*(int *)(v7 + 44)];
  *unint64_t v19 = v17;
  *(_OWORD *)(v19 + 8) = xmmword_22BE9BDB0;
  *(_OWORD *)(v19 + 24) = xmmword_22BE9BDB0;
  v19[40] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v20 = sub_22BE92AB8();
  uint64_t v22 = v21;
  id v23 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  uint64_t v24 = MEMORY[0x230F554C0](v23);
  uint64_t v25 = sub_22BE927E8();
  LOBYTE(v7) = sub_22BE928E8();
  uint64_t v26 = v30;
  sub_22BDDC158((uint64_t)v9, v30, &qword_268487D80);
  uint64_t v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268487DC0) + 36);
  *(void *)uint64_t v27 = v24;
  *(void *)(v27 + 8) = v25;
  *(unsigned char *)(v27 + 16) = v7;
  *(void *)(v27 + 24) = v20;
  *(void *)(v27 + 32) = v22;
  return sub_22BE035C8((uint64_t)v9, &qword_268487D80);
}

id sub_22BE4EF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v46 = sub_22BE92878();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  char v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DA8);
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DA0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  uint64_t v39 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487D90);
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unint64_t v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487D88);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  long long v40 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487DC8);
  sub_22BE21924(&qword_268487DD0, &qword_268487DC8);
  sub_22BE92918();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v14 = result;
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_22BE99770;
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 8) + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
    uint64_t v35 = a1;
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = MEMORY[0x263F8D310];
    *(void *)(v15 + 56) = MEMORY[0x263F8D310];
    *(void *)(v15 + 64) = sub_22BDF8220();
    *(void *)(v15 + 32) = v18;
    *(void *)(v15 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v17;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_22BE92CA8();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v50 = v20;
    uint64_t v51 = v22;
    uint64_t v23 = sub_22BE21924(&qword_268487DB0, &qword_268487DA8);
    unint64_t v24 = sub_22BE0F59C();
    uint64_t v25 = v10;
    sub_22BE929A8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v4);
    uint64_t v26 = v44;
    uint64_t v27 = v37;
    uint64_t v28 = v46;
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v37, *MEMORY[0x263F19698], v46);
    uint64_t v50 = v4;
    uint64_t v51 = v19;
    uint64_t v52 = v23;
    unint64_t v53 = v24;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v30 = v42;
    uint64_t v31 = v38;
    sub_22BE929D8();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v25, v31);
    MEMORY[0x270FA5388](v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487D98);
    uint64_t v50 = v31;
    uint64_t v51 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_22BE21924(&qword_268487DB8, &qword_268487D98);
    uint64_t v33 = v40;
    uint64_t v34 = v47;
    sub_22BE929E8();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v34);
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v48, v33, v43);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_22BE4F608@<X0>(long long *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E50);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v99 = (uint64_t)&v88 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E58);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v97 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v100 = (uint64_t)&v88 - v12;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E60);
  uint64_t v93 = *(void *)(v96 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v96);
  uint64_t v92 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v101 = (char *)&v88 - v15;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E68);
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v91);
  uint64_t v95 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v88 - v18;
  uint64_t v102 = a1;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v21 = result;
  uint64_t v89 = a2;
  unint64_t v94 = v7;
  uint64_t v22 = sub_22BE91F78();
  uint64_t v24 = v23;

  uint64_t v103 = v22;
  uint64_t v104 = v24;
  sub_22BE0F59C();
  uint64_t v103 = sub_22BE92948();
  uint64_t v104 = v25;
  char v105 = v26 & 1;
  uint64_t v106 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487E70);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487E78);
  uint64_t v29 = sub_22BE21924(&qword_268487E80, &qword_268487E78);
  uint64_t v107 = v28;
  uint64_t v108 = v29;
  swift_getOpaqueTypeConformance2();
  id v98 = v19;
  uint64_t v30 = sub_22BE92A98();
  MEMORY[0x270FA5388](v30);
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v31 = result;
  uint64_t v32 = sub_22BE91F78();
  uint64_t v34 = v33;

  uint64_t v103 = v32;
  uint64_t v104 = v34;
  uint64_t v103 = sub_22BE92948();
  uint64_t v104 = v35;
  char v105 = v36 & 1;
  uint64_t v106 = v37;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v38 = result;
  uint64_t v39 = sub_22BE91F78();
  uint64_t v41 = v40;

  uint64_t v107 = v39;
  uint64_t v108 = v41;
  uint64_t v107 = sub_22BE92948();
  uint64_t v108 = v42;
  char v109 = v43 & 1;
  uint64_t v110 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487E88);
  sub_22BE594D8();
  sub_22BE92AA8();
  v111[0] = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)v111);
  uint64_t v45 = *(void *)(v103 + 16);
  uint64_t v46 = swift_bridgeObjectRelease();
  if (!v45)
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487ED0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v100, 1, 1, v56);
    goto LABEL_8;
  }
  MEMORY[0x270FA5388](v46);
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v47 = result;
  uint64_t v48 = sub_22BE91F78();
  uint64_t v50 = v49;

  uint64_t v103 = v48;
  uint64_t v104 = v50;
  uint64_t v103 = sub_22BE92948();
  uint64_t v104 = v51;
  char v105 = v52 & 1;
  uint64_t v106 = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487EB0);
  sub_22BE59604();
  uint64_t v54 = v100;
  sub_22BE92A98();
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487ED0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)v111);
  uint64_t v57 = v103;
  uint64_t v58 = v98;
  uint64_t v59 = v99;
  if (!*(void *)(v103 + 16) || (unint64_t v60 = sub_22BDFD5A4(1u), (v61 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  int v62 = *(unsigned __int8 *)(*(void *)(v57 + 56) + v60);
  uint64_t v63 = swift_bridgeObjectRelease();
  if (v62 != 1)
  {
LABEL_14:
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487ED8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v59, 1, 1, v72);
    goto LABEL_15;
  }
  MEMORY[0x270FA5388](v63);
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    objc_super v64 = result;
    uint64_t v65 = sub_22BE91F78();
    uint64_t v67 = v66;

    uint64_t v103 = v65;
    uint64_t v104 = v67;
    uint64_t v107 = sub_22BE92948();
    uint64_t v108 = v68;
    char v109 = v69 & 1;
    uint64_t v110 = v70;
    sub_22BE51940(a1, (uint64_t)&v103);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487EE8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268487EF0);
    sub_22BE21924(&qword_268487EF8, &qword_268487EE8);
    sub_22BE596A4();
    uint64_t v59 = v99;
    sub_22BE92AA8();
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487ED8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v59, 0, 1, v71);
    uint64_t v58 = v98;
LABEL_15:
    uint64_t v73 = v90;
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    uint64_t v75 = v95;
    uint64_t v76 = v91;
    v74(v95, v58, v91);
    uint64_t v77 = v93;
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    uint64_t v79 = v92;
    v78(v92, v101, v96);
    sub_22BDDC158(v100, v97, &qword_268487E58);
    sub_22BDDC158(v59, (uint64_t)v94, &qword_268487E50);
    unint64_t v80 = v89;
    v74(v89, v75, v76);
    uint64_t v81 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268487EE0);
    uint64_t v82 = v96;
    v78(&v80[v81[12]], v79, v96);
    uint64_t v83 = v97;
    sub_22BDDC158(v97, (uint64_t)&v80[v81[16]], &qword_268487E58);
    uint64_t v84 = (uint64_t)&v80[v81[20]];
    uint64_t v85 = (uint64_t)v94;
    sub_22BDDC158((uint64_t)v94, v84, &qword_268487E50);
    sub_22BE035C8(v99, &qword_268487E50);
    sub_22BE035C8(v100, &qword_268487E58);
    uint64_t v86 = *(void (**)(char *, uint64_t))(v77 + 8);
    v86(v101, v82);
    uint64_t v87 = *(void (**)(char *, uint64_t))(v73 + 8);
    v87(v98, v76);
    sub_22BE035C8(v85, &qword_268487E50);
    sub_22BE035C8(v83, &qword_268487E58);
    v86(v79, v82);
    return (id)((uint64_t (*)(char *, uint64_t))v87)(v95, v76);
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_22BE50250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v15[3] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22BE92888();
  v15[1] = v8;
  void v15[2] = v7;
  v15[0] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  type metadata accessor for USBEraseViewModel(0);
  sub_22BE58D68(&qword_268487D20, (void (*)(uint64_t))type metadata accessor for USBEraseViewModel);
  sub_22BE927B8();
  swift_getKeyPath();
  sub_22BE927C8();
  swift_release();
  swift_release();
  uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
  uint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName + 8);
  void v15[4] = v11;
  v15[5] = v12;
  sub_22BE0F59C();
  swift_bridgeObjectRetain();
  sub_22BE92948();
  sub_22BE92AC8();
  uint64_t v13 = sub_22BE21924(&qword_268487E80, &qword_268487E78);
  MEMORY[0x230F55470](1, v3, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_22BE50490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_22BE92868();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E98);
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487F30);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  uint64_t v20 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for USBEraseViewModel(0);
  sub_22BE58D68(&qword_268487D20, (void (*)(uint64_t))type metadata accessor for USBEraseViewModel);
  sub_22BE927B8();
  swift_getKeyPath();
  sub_22BE927C8();
  swift_release();
  swift_release();
  uint64_t v28 = v24;
  uint64_t v29 = v25;
  char v30 = v26;
  uint64_t v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487F38);
  sub_22BE4EAF0();
  sub_22BE59894();
  sub_22BE92A58();
  sub_22BE92858();
  uint64_t v13 = sub_22BE21924(&qword_268487EA0, &qword_268487E98);
  uint64_t v14 = MEMORY[0x263F19670];
  sub_22BE92988();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  uint64_t v24 = v6;
  uint64_t v25 = v3;
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  swift_getOpaqueTypeConformance2();
  uint64_t v15 = v19;
  sub_22BE929C8();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v12, v15);
}

uint64_t sub_22BE50854@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22BE508D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92748();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  swift_release();
  return sub_22BE4D948(v1, 0);
}

uint64_t sub_22BE509A0(long long *a1)
{
  long long v2 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v2);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487CD8);
  sub_22BE21924(&qword_268487F48, &qword_268487CD8);
  sub_22BE4EAF0();
  return sub_22BE92A88();
}

uint64_t sub_22BE50ACC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22BE4C188(*a1);
  sub_22BE0F59C();
  uint64_t result = sub_22BE92948();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_22BE50B28(uint64_t a1)
{
  long long v9 = *(_OWORD *)a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v9);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_22BE24DE0(v2);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3;
  sub_22BE4A73C(&v8);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(void *)(v4 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = *(void *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  sub_22BE592F4(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487F20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487EC8);
  sub_22BE21924(&qword_268487F28, &qword_268487F20);
  sub_22BE4EBA0();
  sub_22BE21924(&qword_268487EC0, &qword_268487EC8);
  return sub_22BE92A88();
}

uint64_t sub_22BE50D14(char *a1, uint64_t a2)
{
  char v3 = *a1;
  sub_22BE4C65C(*a1);
  sub_22BE92FF8();
  sub_22BE592F4(a2);
  uint64_t v4 = sub_22BE92FE8();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8F500];
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v7;
  *(void *)(v5 + 96) = *(void *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 48) = v8;
  *(unsigned char *)(v5 + 104) = v3;
  sub_22BE592F4(a2);
  uint64_t v9 = sub_22BE92FE8();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v6;
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v10 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v11;
  *(void *)(v10 + 96) = *(void *)(a2 + 64);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v10 + 48) = v12;
  *(unsigned char *)(v10 + 104) = v3;
  sub_22BE92A78();
  sub_22BE0F59C();
  return sub_22BE92A68();
}

uint64_t sub_22BE50E78@<X0>(long long *a1@<X2>, unsigned __int8 a2@<W3>, unsigned char *a3@<X8>)
{
  long long v10 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v10);
  if (*(void *)(v9 + 16) && (unint64_t v5 = sub_22BDFD5A4(a2), (v6 & 1) != 0))
  {
    char v7 = *(unsigned char *)(*(void *)(v9 + 56) + v5);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  *a3 = v7;
  return result;
}

uint64_t sub_22BE50F50(char *a1, uint64_t a2, uint64_t a3, long long *a4, unsigned __int8 a5)
{
  char v6 = *a1;
  long long v10 = *a4;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_22BE1D9C0(v6, a5, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92748();
  sub_22BE4E040();
  sub_22BE593DC((uint64_t)&v10);
  if (a5 != 1)
  {
    char v9 = sub_22BE938C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 & 1 | ((v9 & 1) == 0)) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
LABEL_5:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22BE91C58();
    return sub_22BE92748();
  }
  return result;
}

id sub_22BE51138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487F08);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  uint64_t v74 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v63 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)v58 - v7;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487F10);
  uint64_t v9 = MEMORY[0x270FA5388](v71);
  uint64_t v65 = (uint64_t)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v64 = (uint64_t)v58 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v61 = (char *)v58 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v62 = (uint64_t)v58 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v58 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v72 = (uint64_t)v58 - v20;
  sub_22BE92888();
  uint64_t v68 = v22;
  char v69 = v21;
  LODWORD(v67) = v23;
  uint64_t v70 = a1;
  type metadata accessor for USBEraseViewModel(0);
  sub_22BE58D68(&qword_268487D20, (void (*)(uint64_t))type metadata accessor for USBEraseViewModel);
  sub_22BE927B8();
  swift_getKeyPath();
  sub_22BE927C8();
  swift_release();
  swift_release();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v26 = sub_22BE91F78();
    uint64_t v28 = v27;

    uint64_t v75 = v26;
    uint64_t v76 = v28;
    sub_22BE0F59C();
    sub_22BE92948();
    sub_22BE92788();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = sub_22BE92CD8();
    uint64_t v32 = v31;
    uint64_t v33 = v73;
    uint64_t v34 = v74;
    char v69 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
    v69(v19, v8, v73);
    uint64_t v35 = (uint64_t *)&v19[*(int *)(v71 + 36)];
    *uint64_t v35 = KeyPath;
    v35[1] = v30;
    _OWORD v35[2] = v32;
    char v36 = *(void (**)(char *, uint64_t))(v34 + 8);
    uint64_t v74 = v34 + 8;
    uint64_t v68 = v36;
    v36(v8, v33);
    sub_22BDE2770((uint64_t)v19, v72, &qword_268487F10);
    uint64_t v67 = sub_22BE92888();
    uint64_t v60 = v37;
    v58[1] = v38;
    uint64_t v59 = v39;
    type metadata accessor for ObservableString(0);
    sub_22BE58D68(&qword_268487D60, (void (*)(uint64_t))type metadata accessor for ObservableString);
    sub_22BE927B8();
    swift_getKeyPath();
    sub_22BE927C8();
    swift_release();
    swift_release();
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v40 = result;
      uint64_t v41 = sub_22BE91F78();
      uint64_t v43 = v42;

      uint64_t v75 = v41;
      uint64_t v76 = v43;
      sub_22BE92948();
      uint64_t v44 = v63;
      sub_22BE92788();
      uint64_t v45 = swift_getKeyPath();
      uint64_t v46 = sub_22BE92CD8();
      uint64_t v48 = v47;
      uint64_t v49 = (uint64_t)v61;
      uint64_t v50 = v73;
      v69(v61, v44, v73);
      uint64_t v51 = (uint64_t *)(v49 + *(int *)(v71 + 36));
      *uint64_t v51 = v45;
      v51[1] = v46;
      v51[2] = v48;
      v68(v44, v50);
      uint64_t v52 = v62;
      sub_22BDE2770(v49, v62, &qword_268487F10);
      uint64_t v53 = v72;
      uint64_t v54 = v64;
      sub_22BDDC158(v72, v64, &qword_268487F10);
      uint64_t v55 = v65;
      sub_22BDDC158(v52, v65, &qword_268487F10);
      uint64_t v56 = v66;
      sub_22BDDC158(v54, v66, &qword_268487F10);
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487F18);
      sub_22BDDC158(v55, v56 + *(int *)(v57 + 48), &qword_268487F10);
      sub_22BE035C8(v52, &qword_268487F10);
      sub_22BE035C8(v53, &qword_268487F10);
      sub_22BE035C8(v55, &qword_268487F10);
      return (id)sub_22BE035C8(v54, &qword_268487F10);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE5181C@<X0>(void *a1@<X8>)
{
  return sub_22BE51844(a1);
}

uint64_t sub_22BE51830()
{
  return sub_22BE518C0();
}

uint64_t sub_22BE51844@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_22BE518C0()
{
  return sub_22BE92748();
}

id sub_22BE51940@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v4 = result;
    sub_22BE91F78();
    uint64_t v6 = v5;

    *((void *)&v27 + 1) = v6;
    sub_22BE0F59C();
    uint64_t v7 = sub_22BE92948();
    uint64_t v9 = v8;
    char v11 = v10 & 1;
    sub_22BE92908();
    uint64_t v12 = sub_22BE92938();
    uint64_t v14 = v13;
    char v16 = v15;
    swift_release();
    sub_22BE59718(v7, v9, v11);
    swift_bridgeObjectRelease();
    *(void *)&long long v27 = sub_22BE929F8();
    uint64_t v17 = sub_22BE92928();
    uint64_t v19 = v18;
    char v21 = v20;
    uint64_t v23 = v22;
    sub_22BE59718(v12, v14, v16 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    long long v27 = a1[1];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22BE91C58();
    sub_22BE92738();
    swift_release();
    swift_release();
    sub_22BE593DC((uint64_t)&v27);
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v24 = HIBYTE(*((void *)&v26 + 1)) & 0xFLL;
    if ((*((void *)&v26 + 1) & 0x2000000000000000) == 0) {
      uint64_t v24 = v26 & 0xFFFFFFFFFFFFLL;
    }
    if (v24)
    {
      long long v26 = *a1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22BE91C58();
      sub_22BE92738();
      swift_release();
      swift_release();
      sub_22BE593DC((uint64_t)&v26);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22BE91C58();
      sub_22BE92738();
      swift_release();
      swift_release();
      sub_22BE593DC((uint64_t)&v27);
      id result = (id)swift_bridgeObjectRelease_n();
    }
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v19;
    *(unsigned char *)(a2 + 16) = v21 & 1;
    *(void *)(a2 + 24) = v23;
    *(void *)(a2 + 32) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE51CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DD8);
  MEMORY[0x270FA5388](v21);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DE0);
  uint64_t v5 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22BE928D8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DE8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE928C8();
  uint64_t v24 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487DF0);
  sub_22BE21924(&qword_268487DF8, &qword_268487DF0);
  sub_22BE92798();
  sub_22BE928B8();
  uint64_t v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487E00);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487E08);
  unint64_t v14 = sub_22BE5912C();
  uint64_t v25 = v13;
  unint64_t v26 = v14;
  swift_getOpaqueTypeConformance2();
  sub_22BE92798();
  char v15 = &v4[*(int *)(v21 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  char v16 = v15;
  uint64_t v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v16, v7, v20);
  sub_22BE92898();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

id sub_22BE51FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DF0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = sub_22BE91F78();
    uint64_t v12 = v11;

    v16[0] = v10;
    v16[1] = v12;
    uint64_t v13 = swift_allocObject();
    long long v14 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v13 + 64) = v14;
    *(void *)(v13 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = *(void *)(a1 + 64);
    long long v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v13 + 32) = v15;
    sub_22BE592F4(a1);
    sub_22BE0F59C();
    sub_22BE92A48();
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE521C4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E20);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E08);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE52320((uint64_t)v2);
  uint64_t v6 = sub_22BE929F8();
  uint64_t KeyPath = swift_getKeyPath();
  sub_22BDDC158((uint64_t)v2, (uint64_t)v5, &qword_268487E20);
  uint64_t v8 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *uint64_t v8 = KeyPath;
  v8[1] = v6;
  sub_22BE035C8((uint64_t)v2, &qword_268487E20);
  sub_22BE928F8();
  sub_22BE5912C();
  sub_22BE92978();
  return sub_22BE035C8((uint64_t)v5, &qword_268487E08);
}

uint64_t sub_22BE52320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487DF0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268487E20);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22BE92768();
  uint64_t v14 = sub_22BE92778();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v15 + 64) = v16;
  *(void *)(v15 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = *(void *)(v2 + 64);
  long long v17 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v15 + 32) = v17;
  sub_22BE592F4(v2);
  sub_22BE92A38();
  long long v35 = *(_OWORD *)v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v35);
  uint64_t v18 = v34;
  if (!*(void *)(v34 + 16) || (unint64_t v19 = sub_22BDFD5A4(1u), (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v21 = *(unsigned char *)(*(void *)(v18 + 56) + v19);
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_10:
    char v25 = 0;
    goto LABEL_11;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v35);
  long long v22 = v34;
  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(*((void *)&v22 + 1)) & 0xFLL;
  if ((*((void *)&v22 + 1) & 0x2000000000000000) == 0) {
    uint64_t v23 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v23)
  {
    uint64_t v32 = a1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22BE91C58();
    sub_22BE92738();
    swift_release();
    swift_release();
    sub_22BE593DC((uint64_t)&v35);
    long long v24 = v34;
    long long v34 = *(_OWORD *)(v2 + 16);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_22BE91C58();
    sub_22BE92738();
    swift_release();
    swift_release();
    sub_22BE593DC((uint64_t)&v34);
    if (v24 == v33)
    {
      swift_bridgeObjectRelease_n();
      char v25 = 0;
    }
    else
    {
      char v30 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v25 = v30 ^ 1;
    }
    a1 = v32;
  }
  else
  {
    char v25 = 1;
  }
LABEL_11:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v25 & 1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v28 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *uint64_t v28 = KeyPath;
  v28[1] = (uint64_t)sub_22BE593C4;
  v28[2] = v27;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_22BDE2770((uint64_t)v13, a1, &qword_268487E20);
}

uint64_t sub_22BE52804(uint64_t a1)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void v24[2];
  uint64_t v25;
  uint64_t v26;
  long long v27;

  uint64_t v27 = *(_OWORD *)a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v27);
  if (LOBYTE(v24[0]) == 2)
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  else
  {
    strcpy((char *)v24, ", encrypted: ");
    HIWORD(v24[1]) = -4864;
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    uint64_t v2 = v24[0];
    unint64_t v3 = v24[1];
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE91C58();
  sub_22BE92738();
  swift_release();
  swift_release();
  sub_22BE593DC((uint64_t)&v27);
  unint64_t v4 = 0xE000000000000000;
  if (LOBYTE(v24[0]) == 2)
  {
    unint64_t v5 = 0;
  }
  else
  {
    sub_22BE93648();
    swift_bridgeObjectRelease();
    v24[0] = 0xD000000000000011;
    v24[1] = 0x800000022BEA3900;
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD000000000000011;
    unint64_t v4 = 0x800000022BEA3900;
  }
  v24[0] = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v24[0] + 16);
  if (v6)
  {
    uint64_t v7 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v7 - 8);
      uint64_t v9 = sub_22BE91C58();
      v8(&v26, v9);
      swift_release();
      if (v26 != 1) {
        break;
      }
      v7 += 16;
      if (!--v6)
      {
        sub_22BE59408((uint64_t)v24);
        goto LABEL_12;
      }
    }
    sub_22BE59408((uint64_t)v24);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    uint64_t v23 = v5;
    if (qword_2684867F8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_22BE925E8();
    __swift_project_value_buffer(v10, (uint64_t)qword_2684879E0);
    sub_22BE592F4(a1);
    sub_22BE592F4(a1);
    sub_22BE592F4(a1);
    sub_22BE592F4(a1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_22BE925C8();
    uint64_t v12 = sub_22BE93148();
    if (os_log_type_enabled(v11, v12))
    {
      char v21 = v2;
      uint64_t v13 = swift_slowAlloc();
      long long v22 = swift_slowAlloc();
      unint64_t v26 = v22;
      *(_DWORD *)uint64_t v13 = 136315906;
      sub_22BE91C58();
      uint64_t v14 = sub_22BE4D2E8();
      long long v16 = v15;
      sub_22BE593DC((uint64_t)&v27);
      char v25 = sub_22BDD8478(v14, v16, &v26);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      sub_22BE59434(a1);
      sub_22BE59434(a1);
      *(_WORD *)(v13 + 12) = 2080;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_22BE91C58();
      sub_22BE92738();
      swift_release();
      swift_release();
      sub_22BE593DC((uint64_t)&v27);
      long long v17 = sub_22BE4C188(v25);
      char v25 = sub_22BDD8478(v17, v18, &v26);
      sub_22BE93408();
      swift_bridgeObjectRelease();
      sub_22BE59434(a1);
      sub_22BE59434(a1);
      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      char v25 = sub_22BDD8478(v21, v3, &v26);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 32) = 2080;
      swift_bridgeObjectRetain();
      char v25 = sub_22BDD8478(v23, v4, &v26);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22BDC5000, v11, v12, "Erasing using name %s, format %s%s%s", (uint8_t *)v13, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v22, -1, -1);
      MEMORY[0x230F57540](v13, -1, -1);
    }
    else
    {
      sub_22BE59434(a1);
      sub_22BE59434(a1);
      sub_22BE59434(a1);
      sub_22BE59434(a1);

      swift_bridgeObjectRelease_n();
      unint64_t v19 = swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t))(a1 + 56))(v19);
  }
}

id sub_22BE52D80@<X0>(uint64_t a1@<X8>)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    unint64_t v3 = result;
    sub_22BE91F78();

    sub_22BE0F59C();
    id result = (id)sub_22BE92948();
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5 & 1;
    *(void *)(a1 + 24) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22BE52E60()
{
  return sub_22BE92998();
}

uint64_t sub_22BE52E7C@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE4EC4C(a1);
}

uint64_t sub_22BE52EC0(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_22BDCC94C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  id result = sub_22BE57BB4((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    _OWORD v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    id result = sub_22BE24EB8();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  unint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  id result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    _OWORD v4[2] = v2;
  }
  id result = (uint64_t)sub_22BDCC94C((void *)(v22 > 1), v2 + 1, 1, v4);
  uint64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    long long v24 = &v4[2 * v2 + 4];
    *long long v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              _OWORD v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      id result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    id result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_22BE5328C(uint64_t a1)
{
  size_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_22BE7DA34(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int64_t v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unsigned char *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BE533D8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x230F56150](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_22BE57980(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x1UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_22BE92ED8();
}

uint64_t sub_22BE535A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_22BE535E0(a1);
}

uint64_t sub_22BE535B8()
{
  return sub_22BE53670();
}

uint64_t sub_22BE535CC@<X0>(unsigned char *a1@<X8>)
{
  return sub_22BE535E0(a1);
}

uint64_t sub_22BE535E0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22BE5365C()
{
  return sub_22BE53670();
}

uint64_t sub_22BE53670()
{
  return sub_22BE92748();
}

uint64_t sub_22BE536E0()
{
  return sub_22BE92748();
}

uint64_t sub_22BE5375C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22BE92738();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_22BE537D8()
{
  return sub_22BE4E040();
}

uint64_t sub_22BE53858(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_22BE939F8();
  swift_bridgeObjectRetain();
  sub_22BE92D48();
  uint64_t v8 = sub_22BE93A48();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_22BE938C8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_22BE938C8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_22BE55108(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_22BE53A08(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_22BE93578();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_22BDD9D50(0, (unint64_t *)&qword_2684870C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_22BE93568();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_22BE676D4(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_22BE54E6C(v26, &qword_268488300);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_22BE67938(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_22BE93318();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_22BDD9D50(0, (unint64_t *)&qword_2684870C0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_22BE93328();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_22BE93328();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *size_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_22BE555A8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_268488300, (unint64_t *)&qword_2684870C0);
    *size_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_22BE53CC8(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_22BE939F8();
  swift_bridgeObjectRetain();
  sub_22BE92D48();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_22BE93A48();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *size_t v2 = 0x8000000000000000;
    sub_22BE552A4(a2, v7, isUniquelyReferenced_nonNull_native);
    *size_t v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_20;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE500000000000000;
    uint64_t v10 = 0x736F64736DLL;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        uint64_t v10 = 0x7461667865;
        break;
      case 2:
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 7562856;
        break;
      case 3:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1936093281;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE500000000000000;
    uint64_t v12 = 0x736F64736DLL;
    switch((char)a2)
    {
      case 1:
        if (v10 == 0x7461667865) {
          goto LABEL_14;
        }
        goto LABEL_15;
      case 2:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7562856;
        goto LABEL_11;
      case 3:
        unint64_t v11 = 0xE400000000000000;
        if (v10 == 1936093281) {
          goto LABEL_14;
        }
        goto LABEL_15;
      default:
LABEL_11:
        if (v10 != v12) {
          goto LABEL_15;
        }
LABEL_14:
        if (v9 != v11)
        {
LABEL_15:
          char v13 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_19;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_17;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_20:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_22BE53FC0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_22BE93578();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_22BE93568();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_22BE67704(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_22BE54E6C(v26, &qword_268487D38);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_22BE67938(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_22BE93318();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_22BE93328();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_22BE93328();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *size_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_22BE555A8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_268487D38, (unint64_t *)&unk_2684870B0);
    *size_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_22BE54280()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684870D0);
  uint64_t result = sub_22BE93618();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      sub_22BE939F8();
      sub_22BE93A28();
      uint64_t result = sub_22BE93A48();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_22BE5452C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D70);
  uint64_t v3 = sub_22BE93618();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    id v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = sub_22BE91C58();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_22BE92CD8();
      sub_22BE939F8();
      sub_22BE92D48();
      uint64_t v18 = sub_22BE93A48();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_22BE54840()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487130);
  uint64_t v3 = sub_22BE93618();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = sub_22BE91C58();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_22BE939F8();
      sub_22BE92D48();
      uint64_t result = sub_22BE93A48();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_22BE54B20(uint64_t a1)
{
  return sub_22BE54E6C(a1, &qword_268488300);
}

uint64_t sub_22BE54B2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D18);
  uint64_t v3 = sub_22BE93618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  sub_22BE91C58();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_22BE939F8();
    sub_22BE92D48();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_22BE93A48();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x22BE54E50);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_22BE54E60(uint64_t a1)
{
  return sub_22BE54E6C(a1, &qword_268487D38);
}

uint64_t sub_22BE54E6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_22BE93618();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = sub_22BE91C58();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_22BE93318();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_22BE55108(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_22BE54840();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_22BE55A80();
      goto LABEL_22;
    }
    sub_22BE564E0();
  }
  uint64_t v11 = *v4;
  sub_22BE939F8();
  sub_22BE92D48();
  uint64_t result = sub_22BE93A48();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_22BE938C8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_22BE93948();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_22BE938C8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_22BE552A4(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_22BE54B2C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_22BE55C40();
        goto LABEL_25;
      }
      sub_22BE56790();
    }
    uint64_t v8 = *v3;
    sub_22BE939F8();
    sub_22BE92D48();
    swift_bridgeObjectRelease();
    uint64_t result = sub_22BE93A48();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x736F64736DLL;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x7461667865;
            break;
          case 2:
            unint64_t v11 = 0xE300000000000000;
            uint64_t v12 = 7562856;
            break;
          case 3:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1936093281;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE500000000000000;
        uint64_t v14 = 0x736F64736DLL;
        switch(v5)
        {
          case 1:
            if (v12 != 0x7461667865) {
              goto LABEL_20;
            }
            goto LABEL_19;
          case 2:
            unint64_t v13 = 0xE300000000000000;
            uint64_t v14 = 7562856;
            goto LABEL_18;
          case 3:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1936093281) {
              goto LABEL_20;
            }
            goto LABEL_19;
          default:
LABEL_18:
            if (v12 != v14) {
              goto LABEL_20;
            }
LABEL_19:
            if (v11 == v13) {
              goto LABEL_28;
            }
LABEL_20:
            char v15 = sub_22BE938C8();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_29;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_25:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_28:
    swift_bridgeObjectRelease_n();
LABEL_29:
    sub_22BE93948();
    __break(1u);
    JUMPOUT(0x22BE55578);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

void sub_22BE555A8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_22BE54E6C(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_22BE55DE0(a4);
      goto LABEL_14;
    }
    sub_22BE56A90(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_22BE93318();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_22BDD9D50(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_22BE93328();

    if (v16)
    {
LABEL_13:
      sub_22BE93948();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_22BE93328();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

void *sub_22BE5573C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684870D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93608();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_22BE558D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93608();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22BE55A80()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487130);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93608();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_22BE55C34()
{
  return sub_22BE55DE0(&qword_268488300);
}

void *sub_22BE55C40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22BE93608();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_22BE55DD4()
{
  return sub_22BE55DE0(&qword_268487D38);
}

id sub_22BE55DE0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_22BE93608();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22BE55F84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684870D0);
  uint64_t result = sub_22BE93618();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    sub_22BE939F8();
    sub_22BE93A28();
    uint64_t result = sub_22BE93A48();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22BE56200()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D70);
  uint64_t v3 = sub_22BE93618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = sub_22BE91C58();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_22BE92CD8();
    sub_22BE939F8();
    id v18 = v17;
    sub_22BE92D48();
    uint64_t v19 = sub_22BE93A48();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22BE564E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487130);
  uint64_t v3 = sub_22BE93618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = sub_22BE91C58();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_22BE939F8();
    swift_bridgeObjectRetain();
    sub_22BE92D48();
    uint64_t result = sub_22BE93A48();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22BE56790()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D18);
  uint64_t v3 = sub_22BE93618();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  sub_22BE91C58();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_22BE939F8();
    sub_22BE92D48();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_22BE93A48();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x22BE56A80);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_22BE56A90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_22BE93618();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = sub_22BE91C58();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_22BE93318();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22BE56D08(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_22BE93868();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_148;
    }
    if (v4) {
      return sub_22BE574F4(0, v4, 1, v3);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_156;
  }
  uint64_t v91 = result;
  uint64_t v92 = v4;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    __dst = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v90 = MEMORY[0x263F8EE78];
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_114:
      unint64_t v80 = v9;
      if (v12 >= 2)
      {
        uint64_t v81 = *v3;
        do
        {
          unint64_t v82 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_143;
          }
          if (!v81) {
            goto LABEL_155;
          }
          uint64_t v83 = v80;
          uint64_t v84 = *(void *)&v80[16 * v82 + 32];
          uint64_t v85 = *(void *)&v80[16 * v12 + 24];
          sub_22BE57634((unsigned char *)(v81 + v84), (unsigned char *)(v81 + *(void *)&v80[16 * v12 + 16]), v81 + v85, __dst);
          if (v2) {
            break;
          }
          if (v85 < v84) {
            goto LABEL_144;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v83 = sub_22BE29374((uint64_t)v83);
          }
          if (v82 >= *((void *)v83 + 2)) {
            goto LABEL_145;
          }
          uint64_t v86 = &v83[16 * v82 + 32];
          *(void *)uint64_t v86 = v84;
          *((void *)v86 + 1) = v85;
          unint64_t v87 = *((void *)v83 + 2);
          if (v12 > v87) {
            goto LABEL_146;
          }
          memmove(&v83[16 * v12 + 16], &v83[16 * v12 + 32], 16 * (v87 - v12));
          unint64_t v80 = v83;
          *((void *)v83 + 2) = v87 - 1;
          unint64_t v12 = v87 - 1;
        }
        while (v87 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)(v90 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = v1;
  }
  else
  {
    uint64_t v96 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_22BE92F28();
    *(void *)(v8 + 16) = v7;
    uint64_t v4 = v92;
    uint64_t v90 = v8;
    __dst = (unsigned char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v89 = v3;
  uint64_t v11 = *v3;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v13 = v10++;
    if (v10 >= v4) {
      goto LABEL_43;
    }
    if (*(unsigned char *)(v11 + v10) && *(unsigned char *)(v11 + v10) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v13 + 2;
      if (v13 + 2 >= v4) {
        goto LABEL_35;
      }
      int v14 = 1;
    }
    else
    {
      int v14 = sub_22BE938C8();
      swift_bridgeObjectRelease();
      uint64_t v10 = v13 + 2;
      if (v13 + 2 >= v4)
      {
LABEL_31:
        if ((v14 & 1) == 0) {
          goto LABEL_43;
        }
LABEL_34:
        if (v10 < v13) {
          goto LABEL_149;
        }
LABEL_35:
        if (v13 < v10)
        {
          uint64_t v17 = v10 - 1;
          uint64_t v18 = v13;
          while (1)
          {
            if (v18 != v17)
            {
              if (!v11) {
                goto LABEL_154;
              }
              char v19 = *(unsigned char *)(v11 + v18);
              *(unsigned char *)(v11 + v18) = *(unsigned char *)(v11 + v17);
              *(unsigned char *)(v11 + v17) = v19;
            }
            BOOL v60 = ++v18 < v17--;
            if (!v60) {
              goto LABEL_43;
            }
          }
        }
        goto LABEL_43;
      }
    }
    if (v4 <= v10 + 1) {
      uint64_t v15 = v10 + 1;
    }
    else {
      uint64_t v15 = v4;
    }
    do
    {
      if (*(unsigned char *)(v11 + v10) && *(unsigned char *)(v11 + v10) != 1)
      {
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_43;
        }
      }
      else
      {
        int v16 = sub_22BE938C8();
        swift_bridgeObjectRelease();
        if ((v14 ^ v16)) {
          goto LABEL_31;
        }
      }
      ++v10;
    }
    while (v10 < v4);
    uint64_t v10 = v15;
    if (v14) {
      goto LABEL_34;
    }
LABEL_43:
    if (v10 < v4)
    {
      if (__OFSUB__(v10, v13)) {
        goto LABEL_147;
      }
      if (v10 - v13 < v91) {
        break;
      }
    }
LABEL_63:
    if (v10 < v13) {
      goto LABEL_142;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_22BE29104(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v29 = *((void *)v9 + 2);
    unint64_t v28 = *((void *)v9 + 3);
    unint64_t v12 = v29 + 1;
    if (v29 >= v28 >> 1) {
      uint64_t v9 = sub_22BE29104((char *)(v28 > 1), v29 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12;
    uint64_t v95 = v9 + 32;
    uint64_t v30 = &v9[16 * v29 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v10;
    if (v29)
    {
      uint64_t v31 = v9 + 32;
      while (1)
      {
        unint64_t v32 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v37 = &v31[16 * v12];
          uint64_t v38 = *((void *)v37 - 8);
          uint64_t v39 = *((void *)v37 - 7);
          BOOL v43 = __OFSUB__(v39, v38);
          uint64_t v40 = v39 - v38;
          if (v43) {
            goto LABEL_131;
          }
          uint64_t v42 = *((void *)v37 - 6);
          uint64_t v41 = *((void *)v37 - 5);
          BOOL v43 = __OFSUB__(v41, v42);
          uint64_t v35 = v41 - v42;
          char v36 = v43;
          if (v43) {
            goto LABEL_132;
          }
          unint64_t v44 = v12 - 2;
          uint64_t v45 = &v31[16 * v12 - 32];
          uint64_t v47 = *(void *)v45;
          uint64_t v46 = *((void *)v45 + 1);
          BOOL v43 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          if (v43) {
            goto LABEL_134;
          }
          BOOL v43 = __OFADD__(v35, v48);
          uint64_t v49 = v35 + v48;
          if (v43) {
            goto LABEL_137;
          }
          if (v49 >= v40)
          {
            uint64_t v67 = &v31[16 * v32];
            uint64_t v69 = *(void *)v67;
            uint64_t v68 = *((void *)v67 + 1);
            BOOL v43 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v43) {
              goto LABEL_141;
            }
            BOOL v60 = v35 < v70;
            goto LABEL_101;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v61 = *((void *)v9 + 4);
            uint64_t v62 = *((void *)v9 + 5);
            BOOL v43 = __OFSUB__(v62, v61);
            uint64_t v54 = v62 - v61;
            char v55 = v43;
            goto LABEL_95;
          }
          uint64_t v34 = *((void *)v9 + 4);
          uint64_t v33 = *((void *)v9 + 5);
          BOOL v43 = __OFSUB__(v33, v34);
          uint64_t v35 = v33 - v34;
          char v36 = v43;
        }
        if (v36) {
          goto LABEL_133;
        }
        unint64_t v44 = v12 - 2;
        uint64_t v50 = &v31[16 * v12 - 32];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v53 = __OFSUB__(v51, v52);
        uint64_t v54 = v51 - v52;
        char v55 = v53;
        if (v53) {
          goto LABEL_136;
        }
        uint64_t v56 = &v31[16 * v32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v43 = __OFSUB__(v57, v58);
        uint64_t v59 = v57 - v58;
        if (v43) {
          goto LABEL_139;
        }
        if (__OFADD__(v54, v59)) {
          goto LABEL_140;
        }
        if (v54 + v59 >= v35)
        {
          BOOL v60 = v35 < v59;
LABEL_101:
          if (v60) {
            unint64_t v32 = v44;
          }
          goto LABEL_103;
        }
LABEL_95:
        if (v55) {
          goto LABEL_135;
        }
        uint64_t v63 = &v31[16 * v32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v43 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v43) {
          goto LABEL_138;
        }
        if (v66 < v54) {
          goto LABEL_15;
        }
LABEL_103:
        unint64_t v71 = v32 - 1;
        if (v32 - 1 >= v12)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (!v11) {
          goto LABEL_153;
        }
        uint64_t v72 = v10;
        uint64_t v73 = v9;
        uint64_t v74 = v31;
        uint64_t v75 = &v31[16 * v71];
        uint64_t v76 = *(void *)v75;
        uint64_t v77 = &v74[16 * v32];
        uint64_t v78 = *((void *)v77 + 1);
        sub_22BE57634((unsigned char *)(v11 + *(void *)v75), (unsigned char *)(v11 + *(void *)v77), v11 + v78, __dst);
        if (v96) {
          goto LABEL_111;
        }
        if (v78 < v76) {
          goto LABEL_128;
        }
        if (v32 > *((void *)v73 + 2)) {
          goto LABEL_129;
        }
        *(void *)uint64_t v75 = v76;
        uint64_t v31 = v95;
        *(void *)&v95[16 * v71 + 8] = v78;
        unint64_t v79 = *((void *)v73 + 2);
        if (v32 >= v79) {
          goto LABEL_130;
        }
        uint64_t v9 = v73;
        unint64_t v12 = v79 - 1;
        memmove(v77, v77 + 16, 16 * (v79 - 1 - v32));
        *((void *)v73 + 2) = v79 - 1;
        uint64_t v10 = v72;
        if (v79 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v4 = v92;
    if (v10 >= v92)
    {
      uint64_t v2 = v96;
      uint64_t v3 = v89;
      goto LABEL_114;
    }
  }
  uint64_t v20 = v13 + v91;
  if (__OFADD__(v13, v91)) {
    goto LABEL_150;
  }
  if (v20 >= v4) {
    uint64_t v20 = v4;
  }
  if (v20 >= v13)
  {
    if (v10 != v20)
    {
      uint64_t v88 = v13;
      uint64_t v21 = v13 - v10;
      uint64_t v22 = (unsigned __int8 *)(v11 + v10);
      uint64_t v94 = v20;
      do
      {
        unsigned __int8 v23 = *(unsigned char *)(v11 + v10);
        unint64_t v24 = v22;
        uint64_t v25 = v21;
        do
        {
          if (v23 > 1u)
          {
            swift_bridgeObjectRelease();
            if (!v11) {
              goto LABEL_152;
            }
          }
          else
          {
            char v26 = sub_22BE938C8();
            swift_bridgeObjectRelease();
            if ((v26 & 1) == 0) {
              break;
            }
            if (!v11) {
              goto LABEL_152;
            }
          }
          unsigned __int8 v23 = *v24;
          *unint64_t v24 = *(v24 - 1);
          *--unint64_t v24 = v23;
        }
        while (!__CFADD__(v25++, 1));
        ++v10;
        --v21;
        ++v22;
      }
      while (v10 != v94);
      uint64_t v10 = v94;
      uint64_t v13 = v88;
    }
    goto LABEL_63;
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  uint64_t result = sub_22BE93768();
  __break(1u);
  return result;
}

uint64_t sub_22BE574F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = result - a3;
    uint64_t v8 = (unsigned __int8 *)(*a4 + a3);
LABEL_5:
    unsigned __int8 v9 = *(unsigned char *)(v6 + v4);
    uint64_t v10 = v8;
    uint64_t v11 = v7;
    while (1)
    {
      if (v9 > 1u)
      {
        uint64_t result = swift_bridgeObjectRelease();
        if (!v6)
        {
LABEL_14:
          __break(1u);
          return result;
        }
      }
      else
      {
        char v12 = sub_22BE938C8();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          goto LABEL_4;
        }
        if (!v6) {
          goto LABEL_14;
        }
      }
      unsigned __int8 v9 = *v10;
      *uint64_t v10 = *(v10 - 1);
      *--uint64_t v10 = v9;
      if (__CFADD__(v11++, 1))
      {
LABEL_4:
        ++v4;
        --v7;
        ++v8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_22BE57634(unsigned char *__src, unsigned char *a2, unint64_t a3, unsigned char *__dst)
{
  uint64_t v21 = __src;
  uint64_t v4 = __dst;
  uint64_t v5 = (unsigned char *)a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v20 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_45;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    uint64_t v13 = &v4[v9];
    char v19 = &v4[v9];
    uint64_t v21 = v6;
    if (v7 >= v6 || v5 == v6)
    {
LABEL_44:
      sub_22BE292D0((void **)&v21, &v20, &v19);
      return 1;
    }
    while (1)
    {
      int v14 = v13 - 1;
      if (*(v13 - 1) && *(v13 - 1) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v5 - 1;
      }
      else
      {
        uint64_t v15 = v5 - 1;
        char v16 = sub_22BE938C8();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          char v19 = v13 - 1;
          if (v5 < v13 || v15 >= v13 || v5 != v13) {
            *uint64_t v15 = *v14;
          }
          uint64_t v17 = v6;
          --v13;
          if (v14 <= v4) {
            goto LABEL_44;
          }
          goto LABEL_43;
        }
      }
      uint64_t v17 = v6 - 1;
      if (v5 != v6 || v15 >= v6) {
        *uint64_t v15 = *v17;
      }
      uint64_t v21 = v6 - 1;
      if (v13 <= v4) {
        goto LABEL_44;
      }
LABEL_43:
      uint64_t v6 = v17;
      uint64_t v5 = v15;
      if (v17 <= v7) {
        goto LABEL_44;
      }
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    char v19 = &v4[v8];
    if (v6 != v7 && v6 < v5)
    {
      while (!*v6 || *v6 == 1)
      {
        char v11 = sub_22BE938C8();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_16;
        }
        if (v7 != v4 || v7 >= v4 + 1) {
          *uint64_t v7 = *v4;
        }
        uint64_t v20 = v4 + 1;
        char v12 = v6;
        ++v4;
LABEL_20:
        ++v7;
        if (v4 < v10)
        {
          uint64_t v6 = v12;
          if (v12 < v5) {
            continue;
          }
        }
        uint64_t v21 = v7;
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      char v12 = v6 + 1;
      if (v7 < v6 || v7 >= v12 || v7 != v6) {
        *uint64_t v7 = *v6;
      }
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_45:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BE57980(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_22BE21924(&qword_268487D48, &qword_268487D40);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_268487D40);
          char v12 = sub_22BE69008(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_22BE93838();
  __break(1u);
  return result;
}

uint64_t sub_22BE57BB4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *char v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_22BE57DB4(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_22BE57F48(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v24 = (uint64_t *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats);
  swift_beginAccess();
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v22 = a1 + 32;
  uint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v23 = v3;
LABEL_3:
  if (v4 <= v3) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = v4;
  }
  unint64_t v7 = v4;
  unint64_t v21 = v6;
  while (1)
  {
    if (v7 == v6)
    {
      __break(1u);
      JUMPOUT(0x22BE58208);
    }
    unint64_t v4 = v7 + 1;
    uint64_t v8 = *v24;
    uint64_t v9 = *(void *)(*v24 + 16);
    if (v9) {
      break;
    }
LABEL_7:
    unint64_t v7 = v4;
    if (v4 == v3) {
      return v5;
    }
  }
  uint64_t v10 = *(unsigned __int8 *)(v22 + v7);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = 0;
  while (2)
  {
    uint64_t v12 = v8 + v11++;
    unint64_t v13 = 0xE500000000000000;
    uint64_t v14 = 0x736F64736DLL;
    switch(*(unsigned char *)(v12 + 32))
    {
      case 1:
        uint64_t v14 = 0x7461667865;
        break;
      case 2:
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 7562856;
        break;
      case 3:
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1936093281;
        break;
      default:
        break;
    }
    unint64_t v15 = 0xE500000000000000;
    uint64_t v16 = 0x736F64736DLL;
    switch(v10)
    {
      case 1:
        if (v14 != 0x7461667865) {
          goto LABEL_21;
        }
        goto LABEL_20;
      case 2:
        unint64_t v15 = 0xE300000000000000;
        uint64_t v16 = 7562856;
        goto LABEL_19;
      case 3:
        unint64_t v15 = 0xE400000000000000;
        if (v14 != 1936093281) {
          goto LABEL_21;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (v14 != v16) {
          goto LABEL_21;
        }
LABEL_20:
        if (v13 != v15)
        {
LABEL_21:
          char v17 = sub_22BE938C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_27;
          }
          if (v9 == v11)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v3 = v23;
            unint64_t v6 = v21;
            goto LABEL_7;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_27:
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_22BDFE358(0, *(void *)(v5 + 16) + 1, 1);
        }
        unint64_t v19 = *(void *)(v5 + 16);
        unint64_t v18 = *(void *)(v5 + 24);
        if (v19 >= v18 >> 1) {
          sub_22BDFE358(v18 > 1, v19 + 1, 1);
        }
        *(void *)(v5 + 16) = v19 + 1;
        *(unsigned char *)(v5 + v19 + 32) = v10;
        unint64_t v3 = v23;
        if (v4 != v23) {
          goto LABEL_3;
        }
        return v5;
    }
  }
}

uint64_t sub_22BE58228(uint64_t a1, unint64_t a2)
{
  if (sub_22BE92CD8() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v6 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (sub_22BE92CD8() == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v11 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v7 = byte_26DF42170;
  uint64_t v12 = 0xD000000000000018;
  unint64_t v13 = 0x800000022BEA2410;
  switch(byte_26DF42170)
  {
    case 1:
      unint64_t v13 = 0x800000022BEA23F0;
      uint64_t v12 = 0xD000000000000017;
      break;
    case 2:
    case 3:
      uint64_t v12 = sub_22BE92CD8();
      unint64_t v13 = v14;
      break;
    default:
      break;
  }
  if (v12 == a1 && v13 == a2)
  {
LABEL_22:
    swift_bridgeObjectRelease_n();
    return v7;
  }
  char v15 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_24;
  }
  uint64_t v7 = byte_26DF42171;
  uint64_t v16 = 0xD000000000000018;
  unint64_t v17 = 0x800000022BEA2410;
  switch(byte_26DF42171)
  {
    case 1:
      unint64_t v17 = 0x800000022BEA23F0;
      uint64_t v16 = 0xD000000000000017;
      break;
    case 2:
    case 3:
      uint64_t v16 = sub_22BE92CD8();
      unint64_t v17 = v18;
      break;
    default:
      break;
  }
  if (v16 == a1 && v17 == a2) {
    goto LABEL_22;
  }
  char v19 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_24;
  }
  uint64_t v7 = byte_26DF42172;
  uint64_t v20 = 0xD000000000000018;
  unint64_t v21 = 0x800000022BEA2410;
  switch(byte_26DF42172)
  {
    case 1:
      unint64_t v21 = 0x800000022BEA23F0;
      uint64_t v20 = 0xD000000000000017;
      break;
    case 2:
    case 3:
      uint64_t v20 = sub_22BE92CD8();
      unint64_t v21 = v22;
      break;
    default:
      break;
  }
  if (v20 == a1 && v21 == a2) {
    goto LABEL_22;
  }
  char v23 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_24;
  }
  uint64_t v7 = byte_26DF42173;
  uint64_t v24 = 0xD000000000000018;
  unint64_t v25 = 0x800000022BEA2410;
  switch(byte_26DF42173)
  {
    case 1:
      unint64_t v25 = 0x800000022BEA23F0;
      uint64_t v24 = 0xD000000000000017;
      break;
    case 2:
    case 3:
      uint64_t v24 = sub_22BE92CD8();
      unint64_t v25 = v26;
      break;
    default:
      break;
  }
  if (v24 == a1 && v25 == a2) {
    goto LABEL_22;
  }
  char v27 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return v7;
  }
  if (qword_2684867F8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_22BE925E8();
  __swift_project_value_buffer(v28, (uint64_t)qword_2684879E0);
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_22BE925C8();
  os_log_type_t v30 = sub_22BE93148();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    swift_bridgeObjectRetain();
    sub_22BDD8478(a1, a2, &v33);
    sub_22BE93408();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22BDC5000, v29, v30, "Using an unexpected file system type %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v32, -1, -1);
    MEMORY[0x230F57540](v31, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 4;
}

uint64_t sub_22BE587C4(uint64_t result)
{
  uint64_t v2 = v1;
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 32;
  uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v3 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = v3;
  }
  while (1)
  {
    if (v4 == v3) {
      return v6;
    }
    if (v7 == v3) {
      break;
    }
    uint64_t v8 = *(unsigned __int8 *)(v5 + v3++);
    uint64_t result = sub_22BE53CC8(&v12, v8);
    if (result)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = v6;
      uint64_t v11 = v2;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_22BDFE358(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v13;
      }
      unint64_t v10 = *(void *)(v6 + 16);
      unint64_t v9 = *(void *)(v6 + 24);
      if (v10 >= v9 >> 1)
      {
        uint64_t result = sub_22BDFE358(v9 > 1, v10 + 1, 1);
        uint64_t v6 = v13;
      }
      *(void *)(v6 + 16) = v10 + 1;
      *(unsigned char *)(v6 + v10 + 32) = v8;
      uint64_t v2 = v11;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_22BE588D8()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel];
  type metadata accessor for USBEraseViewModel(0);
  swift_allocObject();
  sub_22BE4CC84();
  sub_22BE58D68(&qword_268487D20, (void (*)(uint64_t))type metadata accessor for USBEraseViewModel);
  uint64_t *v1 = sub_22BE927A8();
  v1[1] = v2;
  unint64_t v3 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__confirmPassword];
  type metadata accessor for ObservableString(0);
  swift_allocObject();
  sub_22BE92728();
  sub_22BE92A18();
  *(void *)unint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  unint64_t v4 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))&v0[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter];
  *unint64_t v4 = sub_22BE4A9CC;
  v4[1] = 0;

  sub_22BE93778();
  __break(1u);
}

uint64_t sub_22BE58A40()
{
  unint64_t v0 = sub_22BE93858();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_22BE58A8C()
{
  unint64_t v0 = sub_22BE93858();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_22BE58AD8@<X0>(void *a1@<X8>)
{
  return sub_22BE5375C(a1);
}

uint64_t sub_22BE58B04@<X0>(unsigned char *a1@<X8>)
{
  return sub_22BE535E0(a1);
}

uint64_t sub_22BE58B2C()
{
  return sub_22BE53670();
}

uint64_t sub_22BE58B54@<X0>(unsigned char *a1@<X8>)
{
  return sub_22BE535E0(a1);
}

uint64_t sub_22BE58B7C()
{
  return sub_22BE53670();
}

uint64_t sub_22BE58BAC@<X0>(void *a1@<X8>)
{
  return sub_22BE5375C(a1);
}

uint64_t sub_22BE58BD8@<X0>(void *a1@<X8>)
{
  return sub_22BE51844(a1);
}

uint64_t sub_22BE58C00()
{
  return sub_22BE518C0();
}

uint64_t sub_22BE58C28@<X0>(void *a1@<X8>)
{
  return sub_22BE51844(a1);
}

uint64_t sub_22BE58C50()
{
  return sub_22BE518C0();
}

uint64_t sub_22BE58C78()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE58CB0@<X0>(void *a1@<X8>)
{
  return sub_22BE51844(a1);
}

uint64_t sub_22BE58CD8()
{
  return sub_22BE518C0();
}

uint64_t sub_22BE58D00()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE58D38()
{
  sub_22BE4B648(v0);
}

uint64_t sub_22BE58D44@<X0>(unsigned char *a1@<X8>)
{
  return sub_22BE4B6AC(*(void *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(v1 + 24), a1);
}

void sub_22BE58D50(unsigned char *a1@<X8>)
{
  sub_22BE4B78C(v1, a1);
}

char *sub_22BE58D5C()
{
  return sub_22BE4BBD0(v0[2], v0[3], v0[4]);
}

uint64_t sub_22BE58D68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_144Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void *sub_22BE58DF4()
{
  return sub_22BE4BFEC(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t destroy for EraseContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for EraseContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v5;
  sub_22BE91C58();
  sub_22BE91C58();
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  sub_22BE91C58();
  return a1;
}

void *assignWithCopy for EraseContentView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22BE91C58();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_22BE91C58();
  swift_release();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  sub_22BE91C58();
  swift_release();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  sub_22BE91C58();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for EraseContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EraseContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EraseContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EraseContentView()
{
  return &type metadata for EraseContentView;
}

uint64_t sub_22BE590E8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_22BE59104@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE4EF9C(*(void *)(v1 + 16), a1);
}

id sub_22BE5910C@<X0>(char *a1@<X8>)
{
  return sub_22BE4F608(*(long long **)(v1 + 16), a1);
}

uint64_t sub_22BE59114@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE51CA0(*(void *)(v1 + 16), a1);
}

id sub_22BE5911C@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE51FF8(*(void *)(v1 + 16), a1);
}

uint64_t sub_22BE59124()
{
  return sub_22BE521C4();
}

unint64_t sub_22BE5912C()
{
  unint64_t result = qword_268487E10;
  if (!qword_268487E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487E08);
    sub_22BE591CC();
    sub_22BE21924(&qword_268487E38, &qword_268487E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487E10);
  }
  return result;
}

unint64_t sub_22BE591CC()
{
  unint64_t result = qword_268487E18;
  if (!qword_268487E18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487E20);
    sub_22BE21924(&qword_268487DF8, &qword_268487DF0);
    sub_22BE21924(&qword_268487E28, &qword_268487E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487E18);
  }
  return result;
}

uint64_t sub_22BE59290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22BE92838();
  *a1 = result;
  return result;
}

uint64_t sub_22BE592BC()
{
  return sub_22BE92848();
}

uint64_t sub_22BE592EC()
{
  return sub_22BE52804(v0 + 16);
}

uint64_t sub_22BE592F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_22BE5935C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22BE92818();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22BE5938C()
{
  return sub_22BE92828();
}

uint64_t sub_22BE593B4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_22BE593C4(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_22BE593DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_22BE59408(uint64_t a1)
{
  return a1;
}

uint64_t sub_22BE59434(uint64_t a1)
{
  return a1;
}

uint64_t sub_22BE594A0()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_22BE594C8@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE50250(*(void *)(v1 + 16), a1);
}

uint64_t sub_22BE594D0@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE50490(*(void *)(v1 + 16), a1);
}

unint64_t sub_22BE594D8()
{
  unint64_t result = qword_268487E90;
  if (!qword_268487E90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487E88);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487E98);
    sub_22BE92868();
    sub_22BE21924(&qword_268487EA0, &qword_268487E98);
    swift_getOpaqueTypeConformance2();
    sub_22BE58D68(&qword_268487EA8, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487E90);
  }
  return result;
}

uint64_t sub_22BE595FC()
{
  return sub_22BE50B28(*(void *)(v0 + 16));
}

unint64_t sub_22BE59604()
{
  unint64_t result = qword_268487EB8;
  if (!qword_268487EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487EB0);
    sub_22BE21924(&qword_268487EC0, &qword_268487EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487EB8);
  }
  return result;
}

id sub_22BE5969C@<X0>(uint64_t a1@<X8>)
{
  return sub_22BE51138(*(void *)(v1 + 16), a1);
}

unint64_t sub_22BE596A4()
{
  unint64_t result = qword_268487F00;
  if (!qword_268487F00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487EF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F00);
  }
  return result;
}

uint64_t sub_22BE59718(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22BE59728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22BE927F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22BE59754()
{
  return sub_22BE92808();
}

unsigned char *sub_22BE59794@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t objectdestroy_164Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_22BE597FC(char *a1)
{
  return sub_22BE50D14(a1, v1 + 16);
}

uint64_t sub_22BE59808@<X0>(unsigned char *a1@<X8>)
{
  return sub_22BE50E78((long long *)(v1 + 32), *(unsigned char *)(v1 + 104), a1);
}

uint64_t objectdestroy_189Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 105, 7);
}

uint64_t sub_22BE5987C(char *a1)
{
  return sub_22BE50F50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (long long *)(v1 + 32), *(unsigned char *)(v1 + 104));
}

uint64_t sub_22BE5988C()
{
  return sub_22BE509A0(*(long long **)(v0 + 16));
}

unint64_t sub_22BE59894()
{
  unint64_t result = qword_268487F40;
  if (!qword_268487F40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F40);
  }
  return result;
}

unint64_t sub_22BE59904()
{
  unint64_t result = qword_268487F50;
  if (!qword_268487F50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487DC0);
    sub_22BE599A4();
    sub_22BE21924(&qword_268487F68, &qword_268487F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F50);
  }
  return result;
}

unint64_t sub_22BE599A4()
{
  unint64_t result = qword_268487F58;
  if (!qword_268487F58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268487D80);
    sub_22BE21924(&qword_268487F60, &qword_268487D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F58);
  }
  return result;
}

id static UIBezierPath.folder.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 116.0, 11.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 124.46, 11.58);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 127.42, 14.54, 125.8, 12.14, 126.86, 13.2);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 128.0, 20.88, 128.0, 15.94, 128.0, 17.58);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0, 23.0);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 127.42);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 124.46, 99.42, 126.86, 97.8, 125.8, 98.86);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 118.12, 100.0, 123.06, 100.0, 121.41, 100.0);
  objc_msgSend(v0, sel_addLineToPoint_, 116.0, 100.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.0, 100.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 3.54, 99.42, 6.58, 100.0, 4.94, 100.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.58, 96.46, 2.2, 98.86, 1.14, 97.8);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 90.12, 0.0, 95.06, 0.0, 93.42);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 88.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 88.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 12.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 12.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 9.88);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.58, 3.54, 0.0, 6.58, 0.0, 4.94);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 3.54, 0.58, 1.14, 2.2, 2.2, 1.14);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 9.88, 0.0, 4.94, 0.0, 6.58, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.0, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.0, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 32.22, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 36.84, 0.33, 34.58, 0.0, 35.76, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 38.35, 1.06, 37.38, 0.49, 37.89, 0.74);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 41.5, 4.46, 39.29, 1.69, 40.02, 2.61);
  objc_msgSend(v0, sel_addLineToPoint_, 41.72, 4.74);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 46.14, 9.52, 43.8, 7.33, 44.83, 8.62);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 48.26, 10.54, 46.79, 9.96, 47.51, 10.31);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 54.75, 11.0, 49.78, 11.0, 51.44, 11.0);
  objc_msgSend(v0, sel_addLineToPoint_, 116.0, 11.0);
  objc_msgSend(v0, sel_closePath);
  return v0;
}

id static UIBezierPath.document_44.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 68.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 67.6);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 65.57, 87.6, 67.22, 86.49, 66.49, 87.22);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 61.21, 88.0, 64.6, 88.0, 63.47, 88.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 2.43, 87.6);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.4, 85.57, 1.51, 87.22, 0.78, 86.49);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 81.22, 0.0, 84.61, 0.0, 83.48);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 6.78);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.4, 2.43, 0.0, 4.52, 0.0, 3.39);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 2.43, 0.4, 0.78, 1.51, 1.51, 0.78);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 6.79, 0.0, 3.4, 0.0, 4.53, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 38.87, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 47.44, 3.55, 43.89, 0.0, 43.89, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 64.45, 20.62, 48.26, 4.37, 63.63, 19.8);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 68.0, 29.2, 68.0, 24.17, 68.0, 24.17);
  objc_msgSend(v0, sel_addLineToPoint_, 68.0, 81.22);
  objc_msgSend(v0, sel_closePath);
  objc_msgSend(v0, sel_setUsesEvenOddFillRule_, 1);
  return v0;
}

id static UIBezierPath.document_84.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 128.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 127.23);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 123.36, 167.24, 126.51, 165.11, 125.11, 166.51);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 115.04, 168.0, 121.52, 168.0, 119.36, 168.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.96, 168.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 4.64, 167.24);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.77, 163.36, 2.89, 166.51, 1.49, 165.11);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 155.06, 0.0, 161.52, 0.0, 159.37);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 12.94);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.77, 4.64, 0.0, 8.63, 0.0, 6.48);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 4.64, 0.76, 1.49, 2.89, 2.89, 1.49);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 12.96, 0.0, 6.49, 0.0, 8.64, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 74.38, 0.0, 12.96, 0.0, 61.39, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 90.74, 6.78, 83.97, 0.0, 83.97, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 121.22, 37.26, 92.31, 8.34, 119.66, 35.69);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 128.0, 53.62, 128.0, 44.03, 128.0, 44.03);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0, 155.06);
  objc_msgSend(v0, sel_closePath);
  objc_msgSend(v0, sel_setUsesEvenOddFillRule_, 1);
  return v0;
}

id static UIBezierPath.document.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824C0]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 192.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 190.83);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 184.92, 254.83, 189.72, 251.6, 187.6, 253.72);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 172.25, 256.0, 182.12, 256.0, 178.83, 256.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 7.08, 254.83);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 1.17, 248.93, 4.4, 253.72, 2.28, 251.6);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 236.28, 0.0, 246.13, 0.0, 242.85);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 19.72);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 1.17, 7.07, 0.0, 13.15, 0.0, 9.87);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 7.08, 1.16, 2.28, 4.4, 4.4, 2.28);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 19.75, 0.0, 9.88, 0.0, 13.17, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 109.25, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 134.18, 10.33, 123.85, 0.0, 123.85, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 181.67, 57.82, 136.57, 12.71, 179.29, 55.43);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 192.0, 82.75, 192.0, 68.15, 192.0, 68.15);
  objc_msgSend(v0, sel_addLineToPoint_, 192.0, 236.28);
  objc_msgSend(v0, sel_closePath);
  objc_msgSend(v0, sel_setUsesEvenOddFillRule_, 1);
  return v0;
}

uint64_t static DOCVibrancy.featureEnabled.getter()
{
  return 0;
}

uint64_t static DOCVibrancy.ConfigurationTrait.name.getter()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aDocvibrancy_1;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static DOCVibrancy.ConfigurationTrait.name.setter(uint64_t a1, uint64_t a2)
{
  *(void *)aDocvibrancy_1 = a1;
  *(void *)&aDocvibrancy_1[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DOCVibrancy.ConfigurationTrait.name.modify())()
{
  return j__swift_endAccess;
}

void static DOCVibrancy.ConfigurationTrait.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void sub_22BE5AC2C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_22BE5AC38()
{
  swift_beginAccess();
  uint64_t v0 = *(void *)aDocvibrancy_1;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t UIMutableTraits.doc_vibrancyConfiguration.getter()
{
  sub_22BE5ACEC();

  return sub_22BE92638();
}

unint64_t sub_22BE5ACEC()
{
  unint64_t result = qword_268487F88;
  if (!qword_268487F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F88);
  }
  return result;
}

uint64_t UIMutableTraits.doc_vibrancyConfiguration.setter()
{
  return sub_22BE92648();
}

uint64_t (*UIMutableTraits.doc_vibrancyConfiguration.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  sub_22BE5ACEC();
  sub_22BE92638();
  return sub_22BE5AE24;
}

uint64_t sub_22BE5AE24(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = 3;
  sub_22BE5ACEC();
  return sub_22BE92648();
}

uint64_t UITraitCollection.doc_vibrancyConfiguration.getter()
{
  unint64_t v0 = sub_22BE5ACEC();

  return MEMORY[0x270F825E8](&type metadata for DOCVibrancy.ConfigurationTrait, &type metadata for DOCVibrancy.ConfigurationTrait, v0);
}

uint64_t sub_22BE5AEC8(char *a1, char *a2)
{
  return sub_22BE7CB60(*a1, *a2);
}

uint64_t sub_22BE5AED4()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE5AF4C()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE5AFB0()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE5B024@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_22BE93858();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_22BE5B084(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1819044198;
  if (!*v1) {
    uint64_t v2 = 0x656B6F727473;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

DocumentManagerExecutables::DOCVibrancy::Style::Weight_optional __swiftcall DOCVibrancy.Style.Weight.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_22BE93858();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t DOCVibrancy.Style.Weight.rawValue.getter()
{
  uint64_t v1 = 0x7261646E6F636573;
  if (*v0 != 1) {
    uint64_t v1 = 0x7972616974726574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_22BE5B174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22BE7CBFC(*a1, *a2);
}

uint64_t sub_22BE5B180()
{
  return sub_22BE93A48();
}

uint64_t sub_22BE5B228()
{
  sub_22BE92D48();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE5B2BC()
{
  return sub_22BE93A48();
}

DocumentManagerExecutables::DOCVibrancy::Style::Weight_optional sub_22BE5B360(Swift::String *a1)
{
  return DOCVibrancy.Style.Weight.init(rawValue:)(*a1);
}

void sub_22BE5B36C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE900000000000079;
  uint64_t v5 = 0x7261646E6F636573;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7972616974726574;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7972616D697270;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

char *static DOCVibrancy.Style.stroke(_:)@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  char v2 = *result;
  *a2 = 0;
  a2[1] = v2;
  return result;
}

char *static DOCVibrancy.Style.fill(_:)@<X0>(char *result@<X0>, unsigned char *a2@<X8>)
{
  char v2 = *result;
  *a2 = 1;
  a2[1] = v2;
  return result;
}

uint64_t DOCVibrancy.Style.description.getter()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *(unsigned __int8 *)(v0 + 1);
  sub_22BE93758();
  sub_22BE92D88();
  sub_22BE93758();
  return *(void *)((char *)&v2 + 1);
}

uint64_t sub_22BE5B49C()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *(unsigned __int8 *)(v0 + 1);
  sub_22BE93758();
  sub_22BE92D88();
  sub_22BE93758();
  return *(void *)((char *)&v2 + 1);
}

BOOL static DOCVibrancy.Configuration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3) {
    return v3 == 3;
  }
  if (v3 == 3) {
    return 0;
  }
  return v2 == v3;
}

BOOL static DOCVibrancy.Environment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_22BE5B58C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3) {
    return v3 == 3;
  }
  if (v3 == 3) {
    return 0;
  }
  return v2 == v3;
}

uint64_t DOCVibrancy.Environment.hash(into:)()
{
  return sub_22BE93A08();
}

uint64_t DOCVibrancy.Environment.hashValue.getter()
{
  return sub_22BE93A48();
}

uint64_t _s26DocumentManagerExecutables11DOCVibrancyV5StyleV2eeoiySbAE_AEtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = a1[1];
  int v3 = a2[1];
  BOOL v4 = *a1 == 0;
  if (*a1) {
    uint64_t v5 = 1819044198;
  }
  else {
    uint64_t v5 = 0x656B6F727473;
  }
  if (v4) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (*a2) {
    uint64_t v7 = 1819044198;
  }
  else {
    uint64_t v7 = 0x656B6F727473;
  }
  if (*a2) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xE600000000000000;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  uint64_t v12 = 0x7261646E6F636573;
  unint64_t v13 = 0xE900000000000079;
  if (v2 != 1)
  {
    uint64_t v12 = 0x7972616974726574;
    unint64_t v13 = 0xE800000000000000;
  }
  if (v2) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = 0x7972616D697270;
  }
  if (v2) {
    unint64_t v15 = v13;
  }
  else {
    unint64_t v15 = 0xE700000000000000;
  }
  if (v3)
  {
    if (v3 == 1)
    {
      unint64_t v16 = 0xE900000000000079;
      if (v14 != 0x7261646E6F636573) {
        goto LABEL_37;
      }
    }
    else
    {
      unint64_t v16 = 0xE800000000000000;
      if (v14 != 0x7972616974726574)
      {
LABEL_37:
        char v11 = sub_22BE938C8();
        goto LABEL_38;
      }
    }
  }
  else
  {
    unint64_t v16 = 0xE700000000000000;
    if (v14 != 0x7972616D697270) {
      goto LABEL_37;
    }
  }
  if (v15 != v16) {
    goto LABEL_37;
  }
  char v11 = 1;
LABEL_38:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

unint64_t sub_22BE5B7E8()
{
  unint64_t result = qword_268487F90;
  if (!qword_268487F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F90);
  }
  return result;
}

unint64_t sub_22BE5B840()
{
  unint64_t result = qword_268487F98;
  if (!qword_268487F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487F98);
  }
  return result;
}

uint64_t sub_22BE5B894@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = UIMutableTraits.doc_vibrancyConfiguration.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_22BE5B8D8()
{
  return UIMutableTraits.doc_vibrancyConfiguration.setter();
}

uint64_t sub_22BE5B904()
{
  return 16;
}

__n128 sub_22BE5B910(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy()
{
  return &type metadata for DOCVibrancy;
}

ValueMetadata *type metadata accessor for DOCVibrancy.ConfigurationTrait()
{
  return &type metadata for DOCVibrancy.ConfigurationTrait;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCVibrancy.Style(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCVibrancy.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE5BAA8);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Style()
{
  return &type metadata for DOCVibrancy.Style;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Style.Weight()
{
  return &type metadata for DOCVibrancy.Style.Weight;
}

uint64_t getEnumTagSinglePayload for DOCVibrancy.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22BE5BBA4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for DOCVibrancy.Configuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x22BE5BC8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_22BE5BCB4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_22BE5BCC8(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Configuration()
{
  return &type metadata for DOCVibrancy.Configuration;
}

unsigned char *_s26DocumentManagerExecutables11DOCVibrancyV5StyleV6WeightOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE5BDB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Environment()
{
  return &type metadata for DOCVibrancy.Environment;
}

unsigned char *storeEnumTagSinglePayload for DOCVibrancy.Style.Category(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE5BEB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Style.Category()
{
  return &type metadata for DOCVibrancy.Style.Category;
}

unint64_t sub_22BE5BEF4()
{
  unint64_t result = qword_268487FA0;
  if (!qword_268487FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487FA0);
  }
  return result;
}

uint64_t static UIView.swift_docVibrancyFeatureEnabled.getter()
{
  return 0;
}

uint64_t UIView.swift_asSecondaryStrokeViewDecoratorEmbeddable.getter()
{
  return 0;
}

uint64_t UIView.swift_asPrimaryStrokeViewDecoratorEmbeddable.getter()
{
  return 0;
}

void __swiftcall DOCAnalyticsItemTaggedEvent.init(bundleID:taggingFlow:)(DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent *__return_ptr retstr, Swift::String_optional bundleID, DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow taggingFlow)
{
  DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow v3 = *(unsigned char *)taggingFlow;
  retstr->name._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  retstr->name._unint64_t object = (void *)0x800000022BEA1C20;
  retstr->Swift::String_optional bundleID = bundleID;
  retstr->taggingFlow = v3;
}

unint64_t sub_22BE5BFAC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22BE99770;
  strcpy((char *)(inited + 32), "tagging_flow");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = sub_22BE93078();
  return sub_22BDD4F50(inited);
}

unint64_t (*sub_22BE5C02C())()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v5[0] = *(_OWORD *)v0;
  v5[1] = v1;
  char v6 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 48) = *(unsigned char *)(v0 + 32);
  sub_22BDCA53C((uint64_t)v5);
  return sub_22BE5C278;
}

uint64_t DOCAnalyticsItemTaggedEvent.TaggingFlow.rawValue.getter()
{
  return *v0;
}

DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow_optional __swiftcall DOCAnalyticsItemTaggedEvent.TaggingFlow.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow_optional)rawValue;
}

unint64_t sub_22BE5C0C8()
{
  unint64_t result = qword_268487FA8;
  if (!qword_268487FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268487FA8);
  }
  return result;
}

DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow_optional sub_22BE5C11C(Swift::Int *a1)
{
  return DOCAnalyticsItemTaggedEvent.TaggingFlow.init(rawValue:)(*a1);
}

ValueMetadata *type metadata accessor for DOCAnalyticsItemTaggedEvent()
{
  return &type metadata for DOCAnalyticsItemTaggedEvent;
}

unsigned char *storeEnumTagSinglePayload for DOCAnalyticsItemTaggedEvent.TaggingFlow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22BE5C200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsItemTaggedEvent.TaggingFlow()
{
  return &type metadata for DOCAnalyticsItemTaggedEvent.TaggingFlow;
}

uint64_t sub_22BE5C238()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 49, 7);
}

unint64_t sub_22BE5C278()
{
  return sub_22BE5BFAC();
}

id sub_22BE5C280()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCTagManager(0)), sel_init);
  qword_268487FB0 = (uint64_t)result;
  return result;
}

id DOCTagManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static DOCTagManager.shared.getter()
{
  if (qword_2684868A8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_268487FB0;

  return v0;
}

uint64_t sub_22BE5C344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v6 = sub_22BE92B08();
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_22BE92B58();
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  char v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)a1;
  char v11 = *(void **)(a1 + 8);
  uint64_t v20 = *(void *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_serialQueue];
  unsigned __int8 v13 = *(unsigned char *)(a1 + 16);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v11;
  *(unsigned char *)(v14 + 32) = v13;
  *(void *)(v14 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v3;
  *(void *)(v14 + 48) = a2;
  *(void *)(v14 + 56) = v18;
  aBlock[4] = sub_22BE5CCE0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_19;
  unint64_t v15 = _Block_copy(aBlock);
  sub_22BE5CCF4(v12, v11, v13);
  unint64_t v16 = v3;
  sub_22BE03630(a2);
  sub_22BE92B38();
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_22BDD6A0C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v10, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v21);
  return swift_release();
}

void sub_22BE5C638(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a3)
  {
    id v15 = objc_allocWithZone((Class)type metadata accessor for DOCTagCollectionObserver(0));
    id v16 = a1;
    id v17 = objc_msgSend(v15, sel_init);
    uint64_t v18 = sub_22BE5DE28(v16);

    if (a5)
    {
      uint64_t v19 = (void *)swift_allocObject();
      void v19[2] = a5;
      v19[3] = a6;
      v19[4] = 0;
      v19[5] = v18;
      uint64_t v39 = sub_22BE5FF88;
      uint64_t v40 = v19;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_22BDD0BA8;
      uint64_t v38 = &block_descriptor_86;
      uint64_t v20 = _Block_copy(&aBlock);
      sub_22BE03630(a5);
      sub_22BE03630(a5);
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v20);
      sub_22BDE0E58(a5);
      swift_bridgeObjectRelease();
      sub_22BE5CC94(a1, a2, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_22BE5CC94(a1, a2, 0);
    }
    return;
  }
  if (a3 != 1)
  {
    id v21 = objc_allocWithZone((Class)type metadata accessor for DOCTagCollectionObserver(0));
    id v22 = a1;
    id v34 = a2;
    id v23 = objc_msgSend(v21, sel_init);
    unint64_t v24 = sub_22BE5DE28(v22);

    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_22BE937E8();
      swift_bridgeObjectRelease();
      if (v31 >= 1) {
        goto LABEL_10;
      }
    }
    else if (*(uint64_t *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_10:
      sub_22BDD9D50(0, (unint64_t *)&unk_2684880B0);
      id v25 = (id)FPTagFromDOCTag();
      swift_bridgeObjectRetain();
      id v26 = (id)FPTagFromDOCTag();
      id v27 = sub_22BE5CD40(v25, v24, v26);
      sub_22BE5D018(v27, v24, a5, a6);

      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (a5)
    {
      uint64_t v32 = (void *)swift_allocObject();
      _OWORD v32[2] = a5;
      v32[3] = a6;
      v32[4] = 0;
      id v32[5] = v24;
      uint64_t v39 = sub_22BE5FF88;
      uint64_t v40 = v32;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_22BDD0BA8;
      uint64_t v38 = &block_descriptor_79;
      uint64_t v33 = _Block_copy(&aBlock);
      sub_22BE03630(a5);
      sub_22BE03630(a5);
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v33);
      sub_22BDE0E58(a5);
    }

    goto LABEL_27;
  }
  id v10 = objc_allocWithZone((Class)type metadata accessor for DOCTagCollectionObserver(0));
  id v11 = a1;
  id v12 = objc_msgSend(v10, sel_init);
  unint64_t v13 = sub_22BE5DE28(v11);

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v28 >= 1) {
      goto LABEL_5;
    }
  }
  else if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_5:
    sub_22BDD9D50(0, (unint64_t *)&unk_2684880B0);
    id v14 = (id)FPTagFromDOCTag();
    swift_bridgeObjectRetain();
    id v34 = sub_22BE5CD40(v14, v13, 0);
    sub_22BE5D018(v34, v13, a5, a6);
    swift_bridgeObjectRelease();
    sub_22BE5CC94(a1, a2, 1u);
LABEL_11:

    return;
  }
  if (a5)
  {
    unint64_t v29 = (void *)swift_allocObject();
    v29[2] = a5;
    uint64_t v29[3] = a6;
    v29[4] = 0;
    v29[5] = v13;
    uint64_t v39 = sub_22BE5FF88;
    uint64_t v40 = v29;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_22BDD0BA8;
    uint64_t v38 = &block_descriptor_72;
    os_log_type_t v30 = _Block_copy(&aBlock);
    sub_22BE03630(a5);
    sub_22BE03630(a5);
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v30);
    sub_22BDE0E58(a5);
    sub_22BE5CC94(a1, a2, 1u);
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  sub_22BE5CC94(a1, a2, 1u);

  swift_bridgeObjectRelease();
}

uint64_t sub_22BE5CC40()
{
  sub_22BE5CC94(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));

  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_22BE5CC94(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return;
    }

    a1 = a2;
  }
}

void sub_22BE5CCE0()
{
  sub_22BE5C638(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

id sub_22BE5CCF4(id result, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return result;
    }
    id v4 = result;
    id result = a2;
  }
  return result;
}

id sub_22BE5CD40(void *a1, unint64_t a2, void *a3)
{
  sub_22BE5F724(a2, a1, a3);
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22BE9A3B0;
  id v6 = objc_msgSend(a1, sel_label);
  uint64_t v7 = sub_22BE92CD8();
  uint64_t v9 = v8;

  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_22BDF8220();
  unint64_t v12 = v11;
  *(void *)(v5 + 64) = v11;
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v9;
  if (!a3)
  {
    id v17 = (uint64_t *)(v5 + 72);
    *(void *)(v5 + 96) = v10;
    *(void *)(v5 + 104) = v11;
    goto LABEL_5;
  }
  id v13 = objc_msgSend(a3, sel_label);
  uint64_t v14 = sub_22BE92CD8();
  unint64_t v16 = v15;

  id v17 = (uint64_t *)(v5 + 72);
  *(void *)(v5 + 96) = v10;
  *(void *)(v5 + 104) = v12;
  if (!v16)
  {
LABEL_5:
    *id v17 = 0x5D6574656C65445BLL;
    unint64_t v16 = 0xE800000000000000;
    goto LABEL_6;
  }
  *id v17 = v14;
LABEL_6:
  *(void *)(v5 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684878A0);
  sub_22BE93938();
  uint64_t v18 = sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
  uint64_t v19 = MEMORY[0x230F55980](v29, v18);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *(void *)(v5 + 136) = v10;
  *(void *)(v5 + 144) = v12;
  *(void *)(v5 + 112) = v19;
  *(void *)(v5 + 12UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v21;
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
  id v22 = (void *)sub_22BE93368();
  sub_22BE92588();
  swift_bridgeObjectRelease();

  id v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v24 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268486F48);
  id v25 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(self, sel_shared);
  id v27 = objc_msgSend(v23, sel_initWithItems_tagsLists_isUndoable_shouldClearUndoStack_undoManager_, v24, v25, 0, 1, v26);

  return v27;
}

void sub_22BE5D018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = sub_22BE92B78();
  uint64_t v8 = *(void *)(v32 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v32);
  unint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v31 - v12;
  uint64_t v14 = dispatch_group_create();
  dispatch_group_enter(v14);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  void v16[3] = v14;
  void v16[4] = v15;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_22BE5FF74;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE0469C;
  void aBlock[3] = &block_descriptor_59_0;
  id v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  uint64_t v18 = v14;
  sub_22BE03630(a3);
  swift_release();
  objc_msgSend(a1, sel_setActionCompletionBlock_, v17);
  _Block_release(v17);
  id v19 = objc_msgSend(self, sel_defaultManager);
  objc_msgSend(v19, sel_scheduleAction_, a1);

  sub_22BE92B68();
  MEMORY[0x230F55650](v11, v31 + OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_setTagsOperationTimeout);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v21 = v11;
  uint64_t v22 = v32;
  v20(v21, v32);
  sub_22BE93188();
  v20(v13, v22);
  if (sub_22BE92AE8())
  {
    sub_22BE93158();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_22BE97A30;
    uint64_t v24 = MEMORY[0x263F8D310];
    *(void *)(v23 + 56) = MEMORY[0x263F8D310];
    unint64_t v25 = sub_22BDF8220();
    *(void *)(v23 + 64) = v25;
    *(void *)(v23 + 32) = 0xD00000000000002BLL;
    *(void *)(v23 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA4090;
    id v26 = objc_msgSend(a1, sel_description);
    uint64_t v27 = sub_22BE92CD8();
    uint64_t v29 = v28;

    *(void *)(v23 + 96) = v24;
    *(void *)(v23 + 104) = v25;
    *(void *)(v23 + 72) = v27;
    *(void *)(v23 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v29;
    sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
    os_log_type_t v30 = (void *)sub_22BE93368();
    sub_22BE92588();
    swift_bridgeObjectRelease();
  }
}

void sub_22BE5D3A8(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v7 = a5;
  uint64_t v8 = a2;
  uint64_t v9 = a4 + 16;
  uint64_t v10 = MEMORY[0x263F8D310];
  if (a1)
  {
    if (qword_26AF00288 != -1) {
      swift_once();
    }
    sub_22BE93158();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_22BE97A30;
    *(void *)(v13 + 56) = v10;
    *(void *)(v13 + 64) = sub_22BDF8220();
    *(void *)(v13 + 32) = 0xD00000000000002BLL;
    *(void *)(v13 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA4090;
    uint64_t v14 = sub_22BE92078();
    *(void *)(v13 + 96) = sub_22BDD9D50(0, (unint64_t *)&unk_2684880A0);
    *(void *)(v13 + 104) = sub_22BE5FE98((unint64_t *)&qword_268488440, (unint64_t *)&unk_2684880A0);
    *(void *)(v13 + 72) = v14;
    sub_22BE92588();
    swift_bridgeObjectRelease();
    uint64_t v6 = a6;
    uint64_t v8 = a2;
    uint64_t v7 = a5;
  }
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22BE99770;
  void aBlock[6] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2684878A0);
  sub_22BE93938();
  uint64_t v16 = sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
  uint64_t v17 = MEMORY[0x230F55980](aBlock[0], v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  *(void *)(v15 + 56) = v10;
  *(void *)(v15 + 64) = sub_22BDF8220();
  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v19;
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
  uint64_t v20 = (void *)sub_22BE93368();
  sub_22BE92588();
  swift_bridgeObjectRelease();

  dispatch_group_leave(a3);
  swift_beginAccess();
  uint64_t v21 = MEMORY[0x230F57630](v9);
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    if (v7)
    {
      uint64_t v23 = (void *)swift_allocObject();
      void v23[2] = v7;
      uint64_t v23[3] = v6;
      v23[4] = a1;
      v23[5] = v8;
      aBlock[4] = sub_22BE5FF88;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22BDD0BA8;
      void aBlock[3] = &block_descriptor_65_0;
      uint64_t v24 = _Block_copy(aBlock);
      sub_22BE03630(v7);
      sub_22BE03630(v7);
      id v25 = a1;
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v24);
      sub_22BDE0E58(v7);
    }
  }
}

id DOCTagManager.init()()
{
  uint64_t v14 = sub_22BE931D8();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE931B8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_22BE92B58();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v13 = OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_serialQueue;
  v12[1] = sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  uint64_t v6 = v0;
  sub_22BE92B38();
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_22BDD6A0C((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v14);
  *(void *)(v12[2] + v13) = sub_22BE93228();
  uint64_t v7 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_setTagsOperationTimeout];
  *(void *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_setTagsOperationTimeout] = 30;
  uint64_t v8 = *MEMORY[0x263F8F018];
  uint64_t v9 = sub_22BE92AD8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);

  uint64_t v10 = (objc_class *)type metadata accessor for DOCTagManager(0);
  v15.receiver = v6;
  v15.super_class = v10;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for DOCTagManager(uint64_t a1)
{
  return sub_22BE4E5D4(a1, (uint64_t *)&unk_268487FD8);
}

id DOCTagManager.__deallocating_deinit()
{
  return sub_22BE5F478(type metadata accessor for DOCTagManager);
}

void destroy for DOCTagManagerAction(uint64_t a1)
{
}

uint64_t _s26DocumentManagerExecutables19DOCTagManagerActionOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22BE5CCF4(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCTagManagerAction(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_22BE5CCF4(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_22BE5CC94(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DOCTagManagerAction(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_22BE5CC94(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCTagManagerAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCTagManagerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22BE5DC38(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22BE5DC40(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DOCTagManagerAction()
{
  return &type metadata for DOCTagManagerAction;
}

uint64_t sub_22BE5DCD8()
{
  return type metadata accessor for DOCTagManager(0);
}

uint64_t sub_22BE5DCE0()
{
  uint64_t result = sub_22BE92AD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DOCTagManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCTagManager);
}

uint64_t dispatch thunk of DOCTagManager.scheduleAction(_:completionBlock:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t (*sub_22BE5DDCC())()
{
  return j__swift_endAccess;
}

uint64_t sub_22BE5DE28(void *a1)
{
  uint64_t v3 = sub_22BE92B78();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - v8;
  dispatch_group_t v27 = *(dispatch_group_t *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_group];
  dispatch_group_enter(v27);
  uint64_t v10 = *(NSObject **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_22BE5F6A0;
  *(void *)(v12 + 24) = v11;
  uint64_t v26 = v11;
  uint64_t v33 = sub_22BE10F20;
  uint64_t v34 = v12;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_22BE16ACC;
  uint64_t v32 = &block_descriptor_34_0;
  uint64_t v13 = _Block_copy(&aBlock);
  id v14 = a1;
  objc_super v15 = v1;
  sub_22BE91C58();
  swift_release();
  dispatch_queue_t v28 = v10;
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    sub_22BE92B68();
    MEMORY[0x230F55650](v7, &v15[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_spotlightQueryTimeout]);
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v3);
    sub_22BE93188();
    v17(v9, v3);
    uint64_t v18 = sub_22BE92AE8();
    if (v18)
    {
      sub_22BE93158();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_22BE99770;
      *(void *)(v19 + 56) = MEMORY[0x263F8D310];
      *(void *)(v19 + 64) = sub_22BDF8220();
      *(void *)(v19 + 32) = 0xD000000000000021;
      *(void *)(v19 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA3F80;
      sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
      uint64_t v20 = (void *)sub_22BE93368();
      sub_22BE92588();
      swift_bridgeObjectRelease();

      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v15;
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = sub_22BE5F70C;
      *(void *)(v22 + 16) = sub_22BE5F70C;
      *(void *)(v22 + 24) = v21;
      uint64_t v33 = sub_22BE111C8;
      uint64_t v34 = v22;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v30 = 1107296256;
      uint64_t v31 = sub_22BE16ACC;
      uint64_t v32 = &block_descriptor_44;
      uint64_t v24 = _Block_copy(&aBlock);
      id v25 = v15;
      sub_22BE91C58();
      swift_release();
      dispatch_sync(v28, v24);
      _Block_release(v24);
      LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
      uint64_t v18 = swift_release();
      if ((v24 & 1) == 0)
      {
LABEL_6:
        MEMORY[0x270FA5388](v18);
        *(&v26 - 2) = (uint64_t)v15;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2684878A0);
        sub_22BE93208();
        swift_release();
        sub_22BDE0E58((uint64_t)v23);
        return aBlock;
      }
      __break(1u);
    }
    uint64_t v23 = 0;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_22BE5E300(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_defaultManager);
  id v5 = objc_msgSend(a1, sel_displayName);
  if (!v5)
  {
    sub_22BE92CD8();
    id v5 = (id)sub_22BE92C98();
    swift_bridgeObjectRelease();
  }
  id v6 = objc_msgSend(v4, sel_newCollectionForTag_, v5);

  objc_msgSend(v6, sel_setWorkingQueue_, *(void *)(a2+ OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue));
  objc_msgSend(v6, sel_setDelegate_, a2);
  uint64_t v7 = *(void **)(a2
                + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection);
  *(void *)(a2
            + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection) = v6;
  id v8 = v6;

  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22BE99770;
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  *(void *)(v9 + 64) = sub_22BDF8220();
  *(void *)(v9 + 32) = 0xD000000000000021;
  *(void *)(v9 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA3F80;
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
  uint64_t v10 = (void *)sub_22BE93368();
  sub_22BE92588();
  swift_bridgeObjectRelease();

  objc_msgSend(v8, sel_doc_startObserving);
  uint64_t v11 = (void *)sub_22BE92C98();
  uint64_t v12 = a2
      + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collectionObservationContext;
  swift_beginAccess();
  objc_msgSend(v8, sel_addObserver_forKeyPath_options_context_, a2, v11, 1, v12);
  swift_endAccess();
}

void sub_22BE5E53C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection;
  objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection), sel_doc_stopObserving);
  uint64_t v3 = *(void **)(a1 + v2);
  if (v3)
  {
    id v4 = v3;
    id v5 = (id)sub_22BE92C98();
    objc_msgSend(v4, sel_removeObserver_forKeyPath_, a1, v5);
  }
}

void sub_22BE5E5F8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1
                + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection);
  if (v3)
  {
    id v4 = v3;
    sub_22BE93148();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_22BE99770;
    id v6 = objc_msgSend(v4, sel_items);
    uint64_t v7 = sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
    sub_22BE92EB8();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2684878A0);
    sub_22BE93938();
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x230F55980](v14, v7);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v5 + 56) = MEMORY[0x263F8D310];
    *(void *)(v5 + 64) = sub_22BDF8220();
    *(void *)(v5 + 32) = v8;
    *(void *)(v5 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v10;
    sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
    uint64_t v11 = (void *)sub_22BE93368();
    sub_22BE92588();
    swift_bridgeObjectRelease();

    id v12 = objc_msgSend(v4, sel_items);
    uint64_t v13 = sub_22BE92EB8();
  }
  else
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  *a2 = v13;
}

void sub_22BE5E7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a4;
  uint64_t v9 = sub_22BE92B08();
  uint64_t v32 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22BE92B58();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_22BE5DDCC();
  if (!a5)
  {
    ((void (*)(void *, void))v16)(aBlock, 0);
    if (a2) {
      goto LABEL_4;
    }
    goto LABEL_6;
  }
  uint64_t v17 = v15;
  ((void (*)(void *, void))v16)(aBlock, 0);
  if (v17 != a5)
  {
    if (a2)
    {
LABEL_4:
      uint64_t v18 = (void *)sub_22BE92C98();
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v18 = 0;
LABEL_7:
    sub_22BDD47C0(a3, (uint64_t)aBlock);
    uint64_t v19 = v36;
    if (v36)
    {
      uint64_t v20 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v36);
      uint64_t v21 = *(v19 - 1);
      MEMORY[0x270FA5388](v20);
      uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      uint64_t v24 = sub_22BE938B8();
      (*(void (**)(char *, void *))(v21 + 8))(v23, v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      if (v33)
      {
LABEL_9:
        type metadata accessor for NSKeyValueChangeKey(0);
        sub_22BDD6A0C(&qword_268486DC0, type metadata accessor for NSKeyValueChangeKey);
        id v25 = (void *)sub_22BE92BE8();
LABEL_12:
        uint64_t v26 = (objc_class *)type metadata accessor for DOCTagCollectionObserver(0);
        v39.receiver = v5;
        v39.super_class = v26;
        objc_msgSendSuper2(&v39, sel_observeValueForKeyPath_ofObject_change_context_, v18, v24, v25, a5);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v24 = 0;
      if (v33) {
        goto LABEL_9;
      }
    }
    id v25 = 0;
    goto LABEL_12;
  }
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v37 = sub_22BE5FF14;
  uint64_t v38 = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  uint64_t v36 = &block_descriptor_50_0;
  dispatch_queue_t v28 = _Block_copy(aBlock);
  sub_22BE91C58();
  sub_22BE92B38();
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_22BDD6A0C((unint64_t *)&qword_26AF002B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BDD7600((unint64_t *)&qword_26AF002E0, (uint64_t *)&unk_26AF002D0);
  sub_22BE934E8();
  MEMORY[0x230F55CD0](0, v14, v11, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v31);
  swift_release();
  swift_release();
}

void sub_22BE5ECC8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x230F57630](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_22BE5FB98();
  }
}

id sub_22BE5F0FC()
{
  uint64_t v16 = sub_22BE931D8();
  uint64_t v1 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22BE931B8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_22BE92B58();
  MEMORY[0x270FA5388](v5 - 8);
  id v6 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_gatheringKeyPath];
  *(void *)id v6 = 0x6E69726568746167;
  *((void *)v6 + 1) = 0xE900000000000067;
  uint64_t v15 = OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue;
  uint64_t v14 = sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  uint64_t v7 = v0;
  sub_22BE92B38();
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_22BDD6A0C((unint64_t *)&unk_26AF003D0, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002F0);
  sub_22BDD7600((unint64_t *)&unk_26AF00300, (uint64_t *)&unk_26AF002F0);
  sub_22BE934E8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v16);
  *(void *)&v0[v15] = sub_22BE93228();
  uint64_t v8 = OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_group;
  *(void *)&v7[v8] = dispatch_group_create();
  uint64_t v9 = &v7[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_spotlightQueryTimeout];
  *(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_spotlightQueryTimeout] = 5;
  uint64_t v10 = *MEMORY[0x263F8F018];
  uint64_t v11 = sub_22BE92AD8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  *(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection] = 0;
  v7[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_finishedGathering] = 0;
  *(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collectionObservationContext] = 0;

  uint64_t v12 = (objc_class *)type metadata accessor for DOCTagCollectionObserver(0);
  v17.receiver = v7;
  v17.super_class = v12;
  return objc_msgSendSuper2(&v17, sel_init);
}

id sub_22BE5F460()
{
  return sub_22BE5F478(type metadata accessor for DOCTagCollectionObserver);
}

id sub_22BE5F478(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_22BE5F56C()
{
  return type metadata accessor for DOCTagCollectionObserver(0);
}

uint64_t type metadata accessor for DOCTagCollectionObserver(uint64_t a1)
{
  return sub_22BE4E5D4(a1, (uint64_t *)&unk_268488088);
}

uint64_t sub_22BE5F594()
{
  uint64_t result = sub_22BE92AD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22BE5F660()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE5F6A0()
{
  sub_22BE5E300(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_22BE5F6A8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_22BE5F6B8(uint64_t *a1@<X8>)
{
  sub_22BE5E5F8(*(void *)(v1 + 16), a1);
}

uint64_t sub_22BE5F6D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE5F70C()
{
  sub_22BE5E53C(*(void *)(v0 + 16));
}

uint64_t sub_22BE5F714()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_22BE5F724(unint64_t a1, void *a2, void *a3)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_54;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    unint64_t v38 = v3;
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_22BDFE380(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
      __break(1u);
LABEL_56:
      uint64_t result = sub_22BE93838();
      __break(1u);
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t result = v46;
      uint64_t v39 = v4;
      unint64_t v40 = v3 & 0xC000000000000001;
      unint64_t v37 = v3 + 32;
      do
      {
        if (v6 == v4) {
          goto LABEL_51;
        }
        uint64_t v42 = v6;
        uint64_t v43 = result;
        if (v40) {
          id v7 = (id)MEMORY[0x230F56140](v6, v3);
        }
        else {
          id v7 = *(id *)(v37 + 8 * v6);
        }
        uint64_t v41 = v7;
        id v8 = objc_msgSend(v7, sel_tags);
        if (v8)
        {
          uint64_t v9 = v8;
          sub_22BDD9D50(0, (unint64_t *)&unk_2684880C0);
          unint64_t v3 = sub_22BE92EB8();

          unint64_t v45 = v3;
          if (v3 >> 62)
          {
            id v35 = a2;
            swift_bridgeObjectRetain();
            uint64_t v10 = sub_22BE937E8();
            if (v10)
            {
LABEL_13:
              unint64_t v12 = 0;
              while (1)
              {
                id v13 = (v3 & 0xC000000000000001) != 0
                    ? (id)MEMORY[0x230F56140](v12, v3)
                    : *(id *)(v3 + 8 * v12 + 32);
                uint64_t v14 = v13;
                id v15 = objc_msgSend(v13, sel_label);
                uint64_t v16 = sub_22BE92CD8();
                uint64_t v18 = v17;

                id v19 = objc_msgSend(a2, sel_label);
                uint64_t v20 = sub_22BE92CD8();
                uint64_t v22 = v21;

                if (v16 == v20 && v18 == v22) {
                  break;
                }
                char v24 = sub_22BE938C8();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v24)
                {
                  swift_bridgeObjectRelease();

                  dispatch_queue_t v28 = a3;
                  if (!a3) {
                    goto LABEL_34;
                  }
LABEL_27:
                  id v26 = v28;
                  if ((swift_isUniquelyReferenced_nonNull_bridgeObject() & 1) == 0
                    || (v3 & 0x8000000000000000) != 0
                    || (v3 & 0x4000000000000000) != 0)
                  {
                    unint64_t v3 = sub_22BE4585C(v3);
                    unint64_t v45 = v3;
                  }
                  if (v12 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_52;
                  }
                  uint64_t v29 = *(void **)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
                  *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v26;

                  goto LABEL_41;
                }
                unint64_t v25 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
LABEL_51:
                  __break(1u);
LABEL_52:
                  __break(1u);
LABEL_53:
                  __break(1u);
LABEL_54:
                  swift_bridgeObjectRetain();
                  uint64_t v4 = sub_22BE937E8();
                  swift_bridgeObjectRelease();
                  goto LABEL_3;
                }
                ++v12;
                if (v25 == v10) {
                  goto LABEL_24;
                }
              }
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease_n();
              dispatch_queue_t v28 = a3;
              if (a3) {
                goto LABEL_27;
              }
LABEL_34:
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (v3 & 0x8000000000000000) != 0
                || (v3 & 0x4000000000000000) != 0)
              {
                unint64_t v3 = sub_22BE4585C(v3);
                unint64_t v45 = v3;
              }
              v3 &= 0xFFFFFFFFFFFFFF8uLL;
              unint64_t v30 = *(void *)(v3 + 16);
              if (v30 <= v12) {
                goto LABEL_53;
              }
              if ((uint64_t)(~v12 + v30) < 0) {
                goto LABEL_56;
              }
              unint64_t v31 = v30 - 1;
              unint64_t v32 = v3 + 8 * v12;
              id v26 = *(id *)(v32 + 32);
              memmove((void *)(v32 + 32), (const void *)(v32 + 40), 8 * (~v12 + v30));
              *(void *)(v3 + 16) = v31;
LABEL_41:
              sub_22BE92ED8();
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
            id v11 = a2;
            swift_bridgeObjectRetain();
            if (v10) {
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          id v26 = a2;
LABEL_42:

          unint64_t v27 = v45;
          unint64_t v3 = v38;
        }
        else
        {
          unint64_t v27 = MEMORY[0x263F8EE78];
        }

        uint64_t result = v43;
        unint64_t v34 = *(void *)(v43 + 16);
        unint64_t v33 = *(void *)(v43 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_22BDFE380(v33 > 1, v34 + 1, 1);
          unint64_t v3 = v38;
          uint64_t result = v43;
        }
        uint64_t v6 = v42 + 1;
        *(void *)(result + 16) = v34 + 1;
        *(void *)(result + 8 * v34 + 32) = v27;
        uint64_t v4 = v39;
      }
      while (v42 + 1 != v39);
    }
  }
  return result;
}

void sub_22BE5FB98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22BE92B88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1
                + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_22BE92BB8();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v8 = *(void **)(v1
                  + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection);
    if (v8)
    {
      id v9 = v8;
      if ((objc_msgSend(v9, sel_isGathering) & 1) == 0
        && (*(unsigned char *)(v1
                     + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_finishedGathering) & 1) == 0)
      {
        *(unsigned char *)(v1
                 + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_finishedGathering) = 1;
        sub_22BE93148();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_22BE99770;
        id v11 = objc_msgSend(v9, sel_items);
        uint64_t v12 = sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
        uint64_t v13 = sub_22BE92EB8();

        v19[0] = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2684878A0);
        sub_22BE93938();
        swift_bridgeObjectRelease();
        uint64_t v14 = MEMORY[0x230F55980](v19[1], v12);
        uint64_t v16 = v15;
        swift_bridgeObjectRelease();
        *(void *)(v10 + 56) = MEMORY[0x263F8D310];
        *(void *)(v10 + 64) = sub_22BDF8220();
        *(void *)(v10 + 32) = v14;
        *(void *)(v10 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v16;
        sub_22BDD9D50(0, (unint64_t *)&qword_26AF004D0);
        uint64_t v17 = (void *)sub_22BE93368();
        sub_22BE92588();
        swift_bridgeObjectRelease();

        objc_msgSend(v9, sel_doc_stopObserving);
        uint64_t v18 = (void *)sub_22BE92C98();
        objc_msgSend(v9, sel_removeObserver_forKeyPath_, v1, v18);

        dispatch_group_leave(*(dispatch_group_t *)(v1
                                                 + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_group));
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22BE5FE98(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22BDD9D50(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22BE5FEDC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE5FF14()
{
  sub_22BE5ECC8(v0);
}

uint64_t sub_22BE5FF1C()
{
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_22BE5FF74(void *a1)
{
  sub_22BE5D3A8(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t objectdestroy_61Tm()
{
  swift_release();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_22BE5FFE0()
{
  return (*(uint64_t (**)(BOOL, void))(v0 + 16))(*(void *)(v0 + 32) == 0, *(void *)(v0 + 40));
}

void DOCCollectionEdit.operationType.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t DOCCollectionEdit.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t DOCCollectionEdit.destination.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 40));
}

uint64_t DOCCollectionEdit.init(_:value:destination:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a5 = *(void *)a1;
  *(unsigned char *)(a5 + 8) = v9;
  uint64_t v10 = type metadata accessor for DOCCollectionEdit();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v10 + 36), a2, a4);
  *(void *)(a5 + *(int *)(v10 + 40)) = a3;
  return result;
}

uint64_t type metadata accessor for DOCCollectionEdit()
{
  return __swift_instantiateGenericMetadata();
}

BOOL static DOCCollectionEdit.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        if (v5 != 1) {
          char v6 = 0;
        }
        if ((v6 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v5 <= 1) {
          char v6 = 0;
        }
        if ((v6 & 1) == 0) {
          return 0;
        }
      }
    }
    else
    {
      if (v5) {
        char v6 = 0;
      }
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
  }
  else
  {
    if (v4 != v5) {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  uint64_t v7 = type metadata accessor for DOCCollectionEdit();
  if (sub_22BE92C68()) {
    return *(uint64_t *)((char *)a1 + *(int *)(v7 + 40)) == *(void *)(a2 + *(int *)(v7 + 40));
  }
  return 0;
}

BOOL static DOCCollectionEditType.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v2)
    {
      if (v2 == 1)
      {
        if (v3 == 1) {
          char v4 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v4 = 0;
        }
        if (v4) {
          return 1;
        }
      }
      else
      {
        if (v3 > 1) {
          char v7 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v7 = 0;
        }
        if (v7) {
          return 1;
        }
      }
    }
    else
    {
      if (v3) {
        LOBYTE(v6) = 0;
      }
      else {
        uint64_t v6 = *(unsigned __int8 *)(a2 + 8);
      }
      if (v6) {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    return v2 == v3;
  }
  return 0;
}

BOOL sub_22BE602C8(uint64_t *a1, uint64_t a2)
{
  return static DOCCollectionEdit.== infix(_:_:)(a1, a2);
}

uint64_t DOCCollectionEdit.debugDescription.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_22BE93648();
    sub_22BE92D88();
    sub_22BE93898();
  }
  else
  {
    sub_22BE93648();
    sub_22BE92D88();
    sub_22BE93898();
    sub_22BE92D88();
    sub_22BE93878();
    sub_22BE92D88();
    swift_bridgeObjectRelease();
  }
  sub_22BE92D88();
  sub_22BE93878();
  sub_22BE92D88();
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_22BE60520(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1) {
        char v7 = *(unsigned char *)(a2 + 8);
      }
      else {
        char v7 = 0;
      }
      return (v7 & 1) != 0;
    }
    BOOL v4 = v3 == 1;
  }
  else
  {
    BOOL v4 = v3 == 0;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

uint64_t DOCCollectionDiff.edits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCCollectionDiff.init(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 16);
  v12(a6, a1);
  uint64_t v13 = type metadata accessor for DOCCollectionDiff();
  uint64_t v14 = a6 + *(int *)(v13 + 44);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v14, a2, a3);
  uint64_t v15 = sub_22BE606E8(a6, v14, a3, a4, a5);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v16(a2, a3);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v16)(a1, a3);
  *(void *)(a6 + *(int *)(v13 + 48)) = v15;
  return result;
}

uint64_t type metadata accessor for DOCCollectionDiff()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22BE606E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v186 = a2;
  char v9 = *(void (***)(char *, uint64_t))(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v179 = *(void (**)(void))(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v170 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  os_log_t v182 = (char *)&v151 - v13;
  uint64_t v171 = a5;
  uint64_t v14 = type metadata accessor for DOCCollectionEdit();
  v175 = *(char ***)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  v155 = (uint64_t *)((char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v161 = (char *)&v151 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v165 = (uint64_t *)((char *)&v151 - v19);
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  id v189 = (void (*)(char *, char *, uint64_t))sub_22BE933B8();
  int v180 = (char *)*((void *)v189 - 1);
  uint64_t v20 = MEMORY[0x270FA5388](v189);
  v188 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v185 = (char *)&v151 - v22;
  uint64_t v172 = sub_22BE937D8();
  MEMORY[0x270FA5388](v172);
  id v169 = (char *)&v151 - v23;
  v181 = v9;
  unint64_t v193 = sub_22BE937C8();
  uint64_t v168 = *(void *)(v193 - 8);
  MEMORY[0x270FA5388](v193);
  unint64_t v25 = (char *)&v151 - v24;
  uint64_t v184 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v184 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v184);
  id v173 = (char *)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  objc_super v190 = (char *)&v151 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  os_log_type_t v156 = (char *)&v151 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  long long v187 = (char *)&v151 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v151 - v35;
  uint64_t v154 = sub_22BE930A8();
  uint64_t v37 = sub_22BE930A8();
  uint64_t result = sub_22BE92F18();
  v198[0] = result;
  uint64_t v153 = v37;
  BOOL v39 = __OFADD__(v37, 1);
  uint64_t v40 = v37 + 1;
  if (v39)
  {
LABEL_43:
    __break(1u);
  }
  else
  {
    uint64_t v151 = v26;
    uint64_t v183 = AssociatedTypeWitness;
    uint64_t v41 = sub_22BE92F98();
    uint64_t v152 = v40;
    uint64_t v42 = sub_22BE63C88((uint64_t)v198, v40, v41);
    swift_bridgeObjectRelease();
    uint64_t v201 = v42;
    uint64_t v178 = v41;
    uint64_t v200 = sub_22BE92BD8();
    v176 = v36;
    uint64_t v177 = a1;
    uint64_t v192 = a4;
    sub_22BE93098();
    uint64_t v166 = v14;
    uint64_t v199 = sub_22BE92BD8();
    uint64_t v191 = a3;
    MEMORY[0x230F558F0](a3, v181);
    sub_22BE937A8();
    v181 = (void (**)(char *, uint64_t))(v180 + 32);
    uint64_t v43 = TupleTypeMetadata2;
    int v180 = TupleTypeMetadata2 - 8;
    unint64_t v44 = v179;
    v164 = (void (**)(char *, char *, uint64_t))((char *)v179 + 32);
    v163 = (void (**)(void))(v175 + 2);
    v162 = (void (**)(void *, uint64_t))(v175 + 1);
    unint64_t v45 = v25;
    uint64_t v46 = v165;
    uint64_t v47 = v166;
    while (1)
    {
      uint64_t v48 = v188;
      sub_22BE937B8();
      uint64_t v49 = (uint64_t *)v185;
      ((void (*)(char *, char *, void *))*v181)(v185, v48, v189);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, char *))(*((void *)v43 - 1) + 48))(v49, 1, v43) == 1) {
        break;
      }
      uint64_t v50 = v44;
      uint64_t v51 = *v49;
      uint64_t v52 = v43;
      BOOL v53 = (char *)v49 + *((int *)v43 + 12);
      LOBYTE(v198[0]) = 1;
      uint64_t v54 = *v164;
      char v55 = v182;
      uint64_t v56 = v183;
      (*v164)(v182, v53, v183);
      char v57 = v198[0];
      void *v46 = 0;
      *((unsigned char *)v46 + 8) = v57;
      v54((char *)v46 + *(int *)(v47 + 36), v55, v56);
      *(void *)((char *)v46 + *(int *)(v47 + 40)) = v51;
      ((void (*)(char *, void *, uint64_t))*v163)(v161, v46, v47);
      uint64_t result = sub_22BE92F68();
      BOOL v39 = __OFADD__(v51, 1);
      unint64_t v58 = v51 + 1;
      if (v39)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v59 = v199;
      sub_22BE92F98();
      swift_bridgeObjectRetain();
      sub_22BE92F08();
      uint64_t v60 = v201;
      sub_22BE62A40(v58, v201);
      *(void *)(v60 + 8 * v58 + 32) = v59;
      swift_bridgeObjectRelease();
      (*v162)(v46, v47);
      unint64_t v44 = v50;
      uint64_t v43 = v52;
    }
    (*(void (**)(char *, unint64_t))(v168 + 8))(v45, v193);
    swift_bridgeObjectRelease();
    uint64_t v61 = v166;
    uint64_t v62 = v184;
    uint64_t v63 = v176;
    if (v154 >= 1)
    {
      char v64 = 0;
      uint64_t v65 = (void (**)(char *, uint64_t))(v151 + 8);
      v175 = (char **)(v151 + 32);
      int v180 = (char *)v44 + 16;
      uint64_t v66 = (void (**)(char *, char *, uint64_t))(v151 + 16);
      id v169 = (char *)v44 + 8;
      uint64_t v168 = 1 - v153;
      uint64_t v67 = 1;
      v181 = (void (**)(char *, uint64_t))(v151 + 8);
      v167 = (void (**)(char *, char *, uint64_t))(v151 + 16);
      while (1)
      {
        uint64_t v157 = v67;
        sub_22BE93098();
        if (v64) {
          (*v65)(v187, v184);
        }
        TupleTypeMetadata2 = *v175;
        ((void (*)(char *, char *, uint64_t))TupleTypeMetadata2)(v187, v156, v184);
        v198[0] = sub_22BE92F18();
        uint64_t v68 = sub_22BE63C88((uint64_t)v198, v152, v178);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v200 = v68;
        sub_22BE92FA8();
        LOBYTE(v197) = 1;
        uint64_t v69 = (void (*)(void *, void))sub_22BE930F8();
        uint64_t v70 = v182;
        uint64_t v71 = v183;
        uint64_t v179 = *(void (**)(void))v180;
        v179(v182);
        v69(v198, 0);
        uint64_t v72 = v157 - 1;
        char v73 = v197;
        uint64_t v74 = v155;
        void *v155 = 1;
        *((unsigned char *)v74 + 8) = v73;
        uint64_t v75 = (char *)v74 + *(int *)(v61 + 36);
        uint64_t v160 = *v164;
        v160(v75, v70, v71);
        uint64_t v76 = *(int *)(v61 + 40);
        uint64_t v158 = v72;
        *(void *)((char *)v74 + v76) = v72;
        uint64_t v159 = *v163;
        v159();
        sub_22BE92F68();
        uint64_t v77 = v198[4];
        uint64_t v172 = sub_22BE92F98();
        sub_22BE92F08();
        uint64_t v78 = v200;
        uint64_t result = _swift_isClassOrObjCExistentialType();
        uint64_t v79 = v78 & 0xFFFFFFFFFFFFFF8;
        if ((result & 1) == 0) {
          uint64_t v79 = v78;
        }
        if (!*(void *)(v79 + 16)) {
          goto LABEL_42;
        }
        *(void *)(v78 + 32) = v77;
        swift_bridgeObjectRelease();
        unint64_t v80 = v181;
        uint64_t v81 = v184;
        if (v153 >= 1)
        {
          id v189 = *v66;
          uint64_t v82 = 5;
          while (1)
          {
            v185 = (char *)v82;
            unint64_t v193 = v82 - 4;
            uint64_t v83 = v190;
            v189(v190, v63, v81);
            uint64_t v84 = (void (*)(void *, void))sub_22BE930F8();
            uint64_t v85 = v182;
            uint64_t v86 = v81;
            uint64_t v87 = v183;
            uint64_t v88 = (void (*)(char *))v179;
            v179(v182);
            v84(v198, 0);
            v188 = (char *)*v80;
            ((void (*)(char *, uint64_t))v188)(v83, v86);
            uint64_t v89 = sub_22BE930F8();
            uint64_t v90 = v170;
            v88(v170);
            ((void (*)(void *, void))v89)(v198, 0);
            LOBYTE(v89) = sub_22BE92C68();
            uint64_t v91 = *(void (**)(char *, uint64_t))v169;
            (*(void (**)(char *, uint64_t))v169)(v90, v87);
            v91(v85, v87);
            if (v89)
            {
              uint64_t v92 = v185;
              sub_22BE92FA8();
              uint64_t v93 = v198[0];
              sub_22BE92F08();
              uint64_t v94 = v200;
              unint64_t v95 = v193;
              sub_22BE62A40(v193, v200);
              *(void *)(v94 + 8 * (void)v92) = v93;
              swift_bridgeObjectRelease();
              uint64_t v66 = v167;
              uint64_t v81 = v184;
              unint64_t v80 = v181;
            }
            else
            {
              sub_22BE92FA8();
              uint64_t v96 = v185;
              uint64_t v97 = v185 - 5;
              sub_22BE92FA8();
              sub_22BE92FA8();
              uint64_t v98 = swift_bridgeObjectRetain();
              uint64_t v99 = v166;
              uint64_t v100 = MEMORY[0x230F55A10](v98, v166);
              swift_bridgeObjectRelease();
              uint64_t v101 = swift_bridgeObjectRetain();
              uint64_t v102 = MEMORY[0x230F55A10](v101, v99);
              swift_bridgeObjectRelease();
              uint64_t v103 = swift_bridgeObjectRetain();
              uint64_t v104 = MEMORY[0x230F55A10](v103, v99);
              swift_bridgeObjectRelease();
              uint64_t v105 = v102 >= v100 ? v100 : v102;
              uint64_t v106 = v104 >= v105 ? v105 : v104;
              uint64_t v107 = swift_bridgeObjectRetain();
              uint64_t v108 = MEMORY[0x230F55A10](v107, v99);
              swift_bridgeObjectRelease();
              if (v108 == v106)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v194 = 1;
                char v109 = v190;
                uint64_t v110 = v184;
                uint64_t v66 = v167;
                v189(v190, v176, v184);
                uint64_t v111 = (void (*)(void *, void))sub_22BE930F8();
                uint64_t v112 = v182;
                uint64_t v113 = v96;
                uint64_t v114 = v183;
                v179(v182);
                v111(v198, 0);
                ((void (*)(char *, uint64_t))v188)(v109, v110);
                char v115 = v194;
                uint64_t v116 = v165;
                *uint64_t v165 = 1;
                *((unsigned char *)v116 + 8) = v115;
                uint64_t v117 = v114;
                uint64_t v92 = v113;
                v160((char *)v116 + *(int *)(v99 + 36), v112, v117);
                *(void *)((char *)v116 + *(int *)(v99 + 40)) = v158;
                ((void (*)(char *, void *, uint64_t))v159)(v161, v116, v99);
                sub_22BE92F68();
                uint64_t v118 = v197;
                sub_22BE92F08();
                uint64_t v119 = v200;
                sub_22BE62A40(v193, v200);
                *(void *)(v119 + 8 * (void)v113) = v118;
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v120 = swift_bridgeObjectRetain();
                uint64_t v121 = MEMORY[0x230F55A10](v120, v99);
                swift_bridgeObjectRelease();
                uint64_t v122 = 8 * (void)v96;
                swift_bridgeObjectRelease();
                char v194 = 1;
                if (v121 == v106)
                {
                  uint64_t v123 = 8 * (void)v96;
                  uint64_t v124 = v190;
                  uint64_t v125 = v184;
                  uint64_t v66 = v167;
                  v189(v190, v187, v184);
                  unint64_t v126 = (void (*)(void *, void))sub_22BE930F8();
                  v127 = v182;
                  uint64_t v128 = v183;
                  v179(v182);
                  v126(v198, 0);
                  ((void (*)(char *, uint64_t))v188)(v124, v125);
                  char v129 = v194;
                  uint64_t v116 = v165;
                  *uint64_t v165 = 0;
                  *((unsigned char *)v116 + 8) = v129;
                  v160((char *)v116 + *(int *)(v99 + 36), v127, v128);
                  *(void *)((char *)v116 + *(int *)(v99 + 40)) = v97;
                  ((void (*)(char *, void *, uint64_t))v159)(v161, v116, v99);
                  sub_22BE92F68();
                  uint64_t v130 = v196;
                  sub_22BE92F08();
                  uint64_t v131 = v200;
                  sub_22BE62A40(v193, v200);
                  *(void *)(v131 + v123) = v130;
                }
                else
                {
                  id v132 = v190;
                  uint64_t v133 = v184;
                  uint64_t v66 = v167;
                  v189(v190, v187, v184);
                  id v134 = (void (*)(void *, void))sub_22BE930F8();
                  id v135 = v182;
                  uint64_t v136 = v183;
                  v179(v182);
                  v134(v198, 0);
                  ((void (*)(char *, uint64_t))v188)(v132, v133);
                  char v137 = v194;
                  uint64_t v116 = v165;
                  *uint64_t v165 = 2;
                  *((unsigned char *)v116 + 8) = v137;
                  v160((char *)v116 + *(int *)(v99 + 36), v135, v136);
                  *(void *)((char *)v116 + *(int *)(v99 + 40)) = v158;
                  ((void (*)(char *, void *, uint64_t))v159)(v161, v116, v99);
                  sub_22BE92F68();
                  uint64_t v138 = v195;
                  sub_22BE92F08();
                  uint64_t v139 = v200;
                  sub_22BE62A40(v193, v200);
                  *(void *)(v139 + v122) = v138;
                }
                uint64_t v92 = v185;
              }
              swift_bridgeObjectRelease();
              (*v162)(v116, v99);
              uint64_t v81 = v184;
              unint64_t v80 = v181;
              unint64_t v95 = v193;
            }
            uint64_t v140 = &v92[v168];
            v141 = v173;
            v142 = v187;
            v189(v173, v187, v81);
            os_log_type_t v143 = v190;
            sub_22BE930B8();
            v144 = (void (*)(char *, uint64_t))v188;
            ((void (*)(char *, uint64_t))v188)(v141, v81);
            v144(v142, v81);
            uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))TupleTypeMetadata2)(v142, v143, v81);
            uint64_t v63 = v176;
            if (v140 == (char *)5) {
              break;
            }
            uint64_t v82 = (uint64_t)(v92 + 1);
            if (__OFADD__(v95, 1))
            {
              __break(1u);
              goto LABEL_41;
            }
          }
        }
        uint64_t v145 = v200;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v201 = v145;
        uint64_t v146 = v173;
        (*v66)(v173, v63, v81);
        unint64_t v147 = v190;
        sub_22BE930B8();
        uint64_t v148 = (char *)*v80;
        (*v80)(v146, v184);
        uint64_t v61 = v166;
        (*v162)(v155, v166);
        ((void (*)(char *, uint64_t))v148)(v63, v184);
        uint64_t v62 = v184;
        ((void (*)(char *, char *, uint64_t))TupleTypeMetadata2)(v63, v147, v184);
        if (v157 == v154) {
          break;
        }
        char v64 = 1;
        uint64_t v67 = v157 + 1;
        uint64_t v65 = v181;
        if (__OFADD__(v157, 1))
        {
          __break(1u);
          break;
        }
      }
    }
    sub_22BE92FA8();
    uint64_t v149 = sub_22BE61CB8();
    swift_bridgeObjectRelease();
    uint64_t v150 = *(void (**)(char *, uint64_t))(v151 + 8);
    v150(v63, v62);
    if (v154 >= 1) {
      v150(v187, v62);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v149;
  }
  return result;
}

uint64_t sub_22BE61CB8()
{
  type metadata accessor for DOCCollectionEdit();
  sub_22BE92BD8();
  sub_22BE92F98();
  swift_getWitnessTable();
  sub_22BE92E68();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_22BE61D9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v40 = a8;
  uint64_t v37 = a5;
  unint64_t v38 = (char *)a7;
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v11 = type metadata accessor for DOCCollectionEdit();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_22BE933B8();
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v16 = MEMORY[0x270FA5388](v32);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = *(void *)(v11 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  BOOL v39 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v32 - v22;
  uint64_t v41 = *v35;
  uint64_t v24 = v41;
  swift_bridgeObjectRetain();
  sub_22BE62170(a2, v24, v36, a4, v37, a6, (uint64_t)v38, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v15, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
  }
  else
  {
    uint64_t v37 = a2;
    unint64_t v38 = v23;
    uint64_t v25 = *(void *)&v15[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v26 = *(int *)(v32 + 48);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v27(v18, v15, v11);
    *(void *)&v18[v26] = v25;
    uint64_t v28 = (uint64_t)v38;
    v27(v38, v18, v11);
    if (*(unsigned char *)(v28 + 8) != 1)
    {
      sub_22BE92F98();
      uint64_t v30 = v39;
      sub_22BE92F78();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v19 + 8);
      v31(v30, v11);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v30, v28, v11);
      sub_22BE92F68();
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v31)(v28, v11);
      goto LABEL_7;
    }
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v28, v11);
    a2 = v37;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v39, a2, v11);
  sub_22BE92F98();
  uint64_t result = sub_22BE92F68();
LABEL_7:
  *uint64_t v40 = v41;
  return result;
}

uint64_t sub_22BE62170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v16 = type metadata accessor for DOCCollectionEdit();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  if (*(unsigned char *)(a1 + 8) != 1) {
    goto LABEL_8;
  }
  if (!*(void *)a1)
  {
    uint64_t v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v47 = v23;
    uint64_t v48 = v22;
    uint64_t v49 = a8;
    unint64_t v45 = &v44;
    uint64_t v50 = a2;
    MEMORY[0x270FA5388](v20);
    *(&v44 - 6) = a3;
    *(&v44 - 5) = a4;
    *(&v44 - 4) = a5;
    *(&v44 - 3) = a6;
    *(&v44 - 2) = a7;
    *(&v44 - 1) = a1;
    sub_22BE92F98();
    swift_getWitnessTable();
    sub_22BE930D8();
    if ((v52 & 1) == 0)
    {
      uint64_t v36 = v51;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v38 = *(int *)(TupleTypeMetadata2 + 48);
      sub_22BE92FA8();
      uint64_t v39 = *(void *)&v19[*(int *)(v16 + 40)];
      (*(void (**)(char *, uint64_t))(v47 + 8))(v19, v16);
      uint64_t v40 = v48;
      uint64_t v41 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, a1 + *(int *)(v16 + 36), a4);
      uint64_t v42 = *(void *)(a1 + *(int *)(v16 + 40));
      uint64_t v43 = v49;
      *uint64_t v49 = v39;
      *((unsigned char *)v43 + 8) = 0;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))((char *)v43 + *(int *)(v16 + 36), v41, a4);
      *(void *)((char *)v43 + *(int *)(v16 + 40)) = v42;
      *(void *)((char *)v43 + v38) = v36;
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v43, 0, 1, TupleTypeMetadata2);
    }
    goto LABEL_7;
  }
  if (*(void *)a1 == 1)
  {
    uint64_t v46 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v47 = v23;
    uint64_t v48 = v22;
    uint64_t v49 = a8;
    unint64_t v45 = &v44;
    uint64_t v50 = a2;
    MEMORY[0x270FA5388](v20);
    *(&v44 - 6) = a3;
    *(&v44 - 5) = a4;
    *(&v44 - 4) = a5;
    *(&v44 - 3) = a6;
    *(&v44 - 2) = a7;
    *(&v44 - 1) = a1;
    sub_22BE92F98();
    swift_getWitnessTable();
    sub_22BE930D8();
    if ((v52 & 1) == 0)
    {
      uint64_t v24 = v51;
      uint64_t v25 = swift_getTupleTypeMetadata2();
      uint64_t v26 = *(int *)(v16 + 36);
      uint64_t v27 = *(void *)(a1 + *(int *)(v16 + 40));
      uint64_t v28 = *(int *)(v25 + 48);
      LOBYTE(v51) = 0;
      uint64_t v29 = v48;
      uint64_t v30 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, a1 + v26, a4);
      sub_22BE92FA8();
      uint64_t v31 = *(void *)&v19[*(int *)(v16 + 40)];
      (*(void (**)(char *, uint64_t))(v47 + 8))(v19, v16);
      char v32 = v51;
      uint64_t v33 = v49;
      *uint64_t v49 = v27;
      *((unsigned char *)v33 + 8) = v32;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))((char *)v33 + *(int *)(v16 + 36), v30, a4);
      *(void *)((char *)v33 + *(int *)(v16 + 40)) = v31;
      *(void *)((char *)v33 + v28) = v24;
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v33, 0, 1, v25);
    }
LABEL_7:
    a8 = v49;
  }
LABEL_8:
  uint64_t v35 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a8, 1, 1, v35);
}

BOOL sub_22BE62694(uint64_t a1)
{
  BOOL result = 0;
  if (*(unsigned char *)(a1 + 8) == 1 && !*(void *)a1)
  {
    type metadata accessor for DOCCollectionEdit();
    if (sub_22BE92C68()) {
      return 1;
    }
  }
  return result;
}

BOOL sub_22BE62724(uint64_t a1)
{
  BOOL result = 0;
  if (*(unsigned char *)(a1 + 8) == 1 && *(void *)a1 == 1)
  {
    type metadata accessor for DOCCollectionEdit();
    if (sub_22BE92C68()) {
      return 1;
    }
  }
  return result;
}

uint64_t DOCCollectionDiff.debugDescription.getter(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = type metadata accessor for DOCCollectionEdit();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v14 - v6;
  strcpy((char *)v17, "==============");
  HIBYTE(v17[1]) = -18;
  uint64_t v8 = *(void *)(v1 + *(int *)(a1 + 48));
  uint64_t v9 = swift_bridgeObjectRetain();
  if (!MEMORY[0x230F55A40](v9, v3))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    sub_22BE92D88();
    return v17[0];
  }
  uint64_t v15 = v5;
  uint64_t v10 = 0;
  while (1)
  {
    char v11 = sub_22BE92F38();
    sub_22BE92EE8();
    if (v11)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v3);
      uint64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_10;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_22BE93678();
    if (v15 != 8) {
      break;
    }
    v16[0] = result;
    (*(void (**)(char *, void *, uint64_t))(v4 + 16))(v7, v16, v3);
    swift_unknownObjectRelease();
    uint64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_5:
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_22BE92D88();
    sub_22BE93898();
    sub_22BE92D88();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    ++v10;
    if (v12 == MEMORY[0x230F55A40](v8, v3)) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE62A40(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_22BE62A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_22BE62A9C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_22BE62B44(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 9) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    sub_22BE91C58();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v10 = (a1 + v5 + 9) & ~v5;
    uint64_t v11 = ((unint64_t)a2 + v5 + 9) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    *(void *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
  }
  return v3;
}

uint64_t sub_22BE62C6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

uint64_t sub_22BE62CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  *(void *)((*(void *)(v5 + 48) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22BE62D50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 24;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 9 + a1) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 9) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v8, v9);
  *(void *)((*(void *)(v6 + 40) + 7 + v8) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v6 + 40) + 7 + v9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22BE62DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  *(void *)((*(void *)(v5 + 32) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22BE62EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  *(void *)((*(void *)(v5 + 24) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22BE62F48(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v7 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 9) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v8 = a2 - v5;
    uint64_t v9 = v7 & 0xFFFFFFF8;
    if ((v7 & 0xFFFFFFF8) != 0) {
      unsigned int v10 = 2;
    }
    else {
      unsigned int v10 = v8 + 1;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v7);
        if (!v13) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v7);
        if (v13) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22BE6307CLL);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v7);
        if (!v13) {
          break;
        }
LABEL_18:
        int v14 = v13 - 1;
        if (v9)
        {
          int v14 = 0;
          LODWORD(v9) = *a1;
        }
        return v5 + (v9 | v14) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 9) & ~v6);
  }
  else {
    return 0;
  }
}

void sub_22BE63090(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = ((*(void *)(v6 + 64) + ((v8 + 9) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v13)
      {
        case 1:
          a1[v9] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v9] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v9] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            unint64_t v17 = (unint64_t)&a1[v8 + 9] & ~v8;
            uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
            v18(v17);
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v10 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + ((v8 + 9) & ~v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + ((v8 + 9) & ~v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + ((v8 + 9) & ~v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v16 = ~v7 + a2;
    bzero(a1, ((*(void *)(v6 + 64) + ((v8 + 9) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v16;
  }
  switch(v13)
  {
    case 1:
      a1[v9] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v9] = v15;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x22BE63258);
    case 4:
      *(_DWORD *)&a1[v9] = v15;
      break;
    default:
      return;
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCCollectionEditType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCCollectionEditType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_22BE632E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_22BE63300(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCCollectionEditType()
{
  return &type metadata for DOCCollectionEditType;
}

uint64_t sub_22BE63330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_22BE63338()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22BE633D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = v7 + 7;
  unint64_t v11 = ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    sub_22BE91C58();
  }
  else
  {
    uint64_t v15 = ~v8;
    unsigned int v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v16(a1, a2, v5);
    unint64_t v17 = ((unint64_t)a2 + v9) & v15;
    v16((uint64_t *)(((unint64_t)v4 + v9) & v15), (uint64_t *)v17, v5);
    *(void *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v10 + v17) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22BE63524(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v5((*(void *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE635CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22BE63690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22BE63760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22BE63820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22BE638E8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = v6 + 7;
  if (v7 < a2)
  {
    unint64_t v11 = ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v12 = a2 - v7;
    uint64_t v13 = v11 & 0xFFFFFFF8;
    if ((v11 & 0xFFFFFFF8) != 0) {
      unsigned int v14 = 2;
    }
    else {
      unsigned int v14 = v12 + 1;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v11);
        if (!v17) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v11);
        if (v17) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22BE63A4CLL);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v11);
        if (!v17) {
          break;
        }
LABEL_22:
        int v19 = v17 - 1;
        if (v13)
        {
          int v19 = 0;
          LODWORD(v13) = *a1;
        }
        return v7 + (v13 | v19) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v20 = *(void *)((v10 + (((unint64_t)a1 + v9) & ~v8)) & 0xFFFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = -1;
  }
  return (v20 + 1);
}

void sub_22BE63A60(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = (v9 + v10) & ~v10;
  uint64_t v13 = v9 + 7;
  size_t v14 = ((v13 + v12) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v23 = (void *)((v13 + ((unint64_t)&a1[v11] & ~v10)) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v24 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v24 = a2 - 1;
              }
              *uint64_t v23 = v24;
            }
            else
            {
              uint64_t v22 = *(void (**)(void))(v6 + 56);
              v22();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v8;
    if (((v13 + v12) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (v14) {
    int v20 = 1;
  }
  else {
    int v20 = v19;
  }
  if (v14)
  {
    int v21 = ~v8 + a2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x22BE63C60);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t sub_22BE63C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_22BE92F18();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(void *)(a3 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      uint64_t v12 = a2 - 1;
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 72);
        uint64_t v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_22BE92F98();
    return v8;
  }
  return result;
}

uint64_t sub_22BE63D8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22BE61D9C(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], a3);
}

uint64_t sub_22BE63DB0(uint64_t a1)
{
  return sub_22BE63E10(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_22BE62724) & 1;
}

uint64_t sub_22BE63DE0(uint64_t a1)
{
  return sub_22BE63E10(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_22BE62694) & 1;
}

uint64_t sub_22BE63E10(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[7], v2[2], v2[3], v2[4], v2[5], v2[6]) & 1;
}

id static NSError.userCancelledError.getter()
{
  return sub_22BE63E50(3072);
}

id static NSError.noSuchFileError.getter()
{
  return sub_22BE63E50(4);
}

id sub_22BE63E50(uint64_t a1)
{
  sub_22BE92CD8();
  id v2 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v3 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, a1, 0);

  return v4;
}

uint64_t NSError.isUserCancelledError.getter()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if (objc_msgSend(v0, sel_code) == (id)3072) {
    return 1;
  }
LABEL_10:
  id v9 = objc_msgSend(v0, sel_domain);
  uint64_t v10 = sub_22BE92CD8();
  uint64_t v12 = v11;

  if (v10 == sub_22BE92CD8() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-128;
  }
  char v15 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v15) {
    return objc_msgSend(v0, sel_code) == (id)-128;
  }
  return result;
}

uint64_t NSError.isFilenameCollisionError.getter()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if (objc_msgSend(v0, sel_code) == (id)-1001) {
    return 1;
  }
LABEL_10:
  id v9 = objc_msgSend(v0, sel_domain);
  uint64_t v10 = sub_22BE92CD8();
  uint64_t v12 = v11;

  if (v10 == sub_22BE92CD8() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-48;
  }
  char v15 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v15) {
    return objc_msgSend(v0, sel_code) == (id)-48;
  }
  return result;
}

BOOL NSError.isProviderDomainNotAuthenticated.getter()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-1000;
  }
  char v7 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v7) {
    return objc_msgSend(v0, sel_code) == (id)-1000;
  }
  return result;
}

BOOL NSError.isProviderServerUnreachable.getter()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-1004;
  }
  char v7 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v7) {
    return objc_msgSend(v0, sel_code) == (id)-1004;
  }
  return result;
}

BOOL NSError.isProviderNotFound.getter()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-2001;
  }
  char v7 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v7) {
    return objc_msgSend(v0, sel_code) == (id)-2001;
  }
  return result;
}

id sub_22BE64434()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCUSBStorageKitManager()), sel_init);
  qword_268488230 = (uint64_t)result;
  return result;
}

id DOCUSBStorageKitManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id static DOCUSBStorageKitManager.shared.getter()
{
  if (qword_2684868B0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_268488230;

  return v0;
}

void sub_22BE644F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  swift_beginAccess();
  if (*v2 == 1)
  {
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_22BE925E8();
    __swift_project_value_buffer(v3, (uint64_t)qword_268487A70);
    uint64_t v4 = sub_22BE925C8();
    os_log_type_t v5 = sub_22BE93148();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v26 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_22BDD8478(0xD000000000000022, 0x800000022BEA4190, &v26);
    sub_22BE93408();
    *(_WORD *)(v6 + 12) = 2080;
    id v8 = objc_msgSend(self, sel_sharedManager);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488248);
    uint64_t v9 = sub_22BE92CF8();
    sub_22BDD8478(v9, v10, &v26);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    uint64_t v11 = "%s: SKManager already warmed, skipping prewarm. %s";
LABEL_11:
    _os_log_impl(&dword_22BDC5000, v4, v5, v11, (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v7, -1, -1);
    MEMORY[0x230F57540](v6, -1, -1);
LABEL_12:

    return;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmStarted) == 1)
  {
    if (qword_268486828 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_22BE925E8();
    __swift_project_value_buffer(v12, (uint64_t)qword_268487A70);
    uint64_t v4 = sub_22BE925C8();
    os_log_type_t v5 = sub_22BE93148();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v26 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_22BDD8478(0xD000000000000022, 0x800000022BEA4190, &v26);
    sub_22BE93408();
    *(_WORD *)(v6 + 12) = 2080;
    id v13 = objc_msgSend(self, sel_sharedManager);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488248);
    uint64_t v14 = sub_22BE92CF8();
    sub_22BDD8478(v14, v15, &v26);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    uint64_t v11 = "%s: Prewarming started but hasn't completed, skipping prewarm initialization. %s";
    goto LABEL_11;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmStarted) = 1;
  unsigned int v16 = self;
  id v17 = objc_msgSend(v16, sel_sharedManager);
  if (qword_268486828 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_22BE925E8();
  __swift_project_value_buffer(v18, (uint64_t)qword_268487A70);
  int v19 = sub_22BE925C8();
  os_log_type_t v20 = sub_22BE93148();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    sub_22BDD8478(0xD000000000000022, 0x800000022BEA4190, &v26);
    sub_22BE93408();
    *(_WORD *)(v21 + 12) = 2080;
    id v23 = objc_msgSend(v16, sel_sharedManager);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488248);
    uint64_t v24 = sub_22BE92CF8();
    sub_22BDD8478(v24, v25, &v26);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v19, v20, "%s: Starting to pre-warm SKManager %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v22, -1, -1);
    MEMORY[0x230F57540](v21, -1, -1);
  }

  if (v17)
  {
    objc_msgSend(v17, sel_addListener_, v1);
  }
}

uint64_t sub_22BE64A84()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_22BE64ACC(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_22BE64B18())()
{
  return j__swift_endAccess;
}

id DOCUSBStorageKitManager.init()()
{
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmStarted] = 0;
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUSBStorageKitManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DOCUSBStorageKitManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUSBStorageKitManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCUSBStorageKitManager.initialPopulateComplete()()
{
  uint64_t v1 = v0;
  if (qword_268486828 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_22BE925E8();
  __swift_project_value_buffer(v2, (uint64_t)qword_268487A70);
  uint64_t v3 = sub_22BE925C8();
  os_log_type_t v4 = sub_22BE93148();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v13 = sub_22BDD8478(0xD000000000000019, 0x800000022BEA41C0, v14);
    sub_22BE93408();
    *(_WORD *)(v5 + 12) = 2080;
    id v7 = objc_msgSend(self, sel_sharedManager, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488248);
    uint64_t v8 = sub_22BE92CF8();
    sub_22BDD8478(v8, v9, v14);
    sub_22BE93408();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22BDC5000, v3, v4, "%s: SKManager %s allDisks is fully populated.", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230F57540](v6, -1, -1);
    MEMORY[0x230F57540](v5, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_sharedManager);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_msgSend(v10, sel_removeListener_, v1);

    uint64_t v12 = (unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
    swift_beginAccess();
    unsigned char *v12 = 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DOCUSBStorageKitManager()
{
  return self;
}

uint64_t sub_22BE64F14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_22BE64F68(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t method lookup function for DOCUSBStorageKitManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCUSBStorageKitManager);
}

uint64_t dispatch thunk of DOCUSBStorageKitManager.prewarmStorageKitManagerIfNeeded()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DOCUSBStorageKitManager.prewarmComplete.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DOCUSBStorageKitManager.prewarmComplete.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DOCUSBStorageKitManager.prewarmComplete.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

double UIContentConfiguration.asVibrancyCapableConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t UIContentConfiguration.isVibrantContainer.getter()
{
  return 0;
}

uint64_t sub_22BE650B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_22BE65188()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  swift_beginAccess();
  return MEMORY[0x230F57630](v1);
}

uint64_t sub_22BE65228()
{
  return swift_unknownObjectRelease();
}

void (*sub_22BE65284(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  _OWORD v3[3] = MEMORY[0x230F57630](v5);
  return sub_22BE65308;
}

void sub_22BE65308(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void *sub_22BE65388()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_22BE69490(v1);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange;
  uint64_t v8 = *(uint64_t **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  unint64_t v9 = v8 + 4;
  id v10 = v8 + 5;
  BOOL v11 = v8 == 0;
  if (v8) {
    uint64_t v12 = v8 + 3;
  }
  else {
    uint64_t v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  }
  if (v11) {
    uint64_t v13 = (uint64_t *)(v0
  }
                    + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection
                    + 8);
  else {
    uint64_t v13 = v9;
  }
  if (v11) {
    uint64_t v14 = (uint64_t *)(v0
  }
                    + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection
                    + 16);
  else {
    uint64_t v14 = v10;
  }
  uint64_t v15 = *v14;
  uint64_t v16 = *v13;
  uint64_t v17 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_22BE67030(v2, v17) & 1) != 0 && (sub_22BE6731C(v4, v16), (v18))
  {
    sub_22BE6731C(v6, v15);
    char v20 = v19;
  }
  else
  {
    char v20 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  *uint64_t v21 = v2;
  v21[1] = v4;
  _OWORD v21[2] = v6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void **)(v0 + v7);
  if (!v22)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double result = (void *)swift_bridgeObjectRelease();
    if (v20) {
      return result;
    }
    goto LABEL_22;
  }
  unint64_t v23 = v22[3];
  uint64_t v24 = v22[4];
  uint64_t v25 = v22[5];
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_22BE67030(v23, v2) & 1) == 0 || (sub_22BE6731C(v24, v4), (v26 & 1) == 0))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  sub_22BE6731C(v25, v6);
  char v32 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32)
  {
    uint64_t v28 = *(void *)(v0 + v7);
    if (v28) {
      *(unsigned char *)(v28 + 16) = 0;
    }
    *(void *)(v0 + v7) = 0;
    swift_release();
    uint64_t v31 = *(void *)(v0 + v7);
    if (v31) {
      *(unsigned char *)(v31 + 16) = 1;
    }
    swift_release();
  }
  else
  {
    double result = (void *)swift_release();
    if (v20) {
      return result;
    }
  }
LABEL_22:
  uint64_t v30 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  swift_beginAccess();
  double result = (void *)MEMORY[0x230F57630](v30);
  if (result)
  {
    objc_msgSend(result, sel_tagsCollectionDataNeedsReload_, v0);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_22BE656CC(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_22BE92B08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22BE92B58();
  uint64_t v47 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_22BE92B78();
  uint64_t v45 = *(void *)(v48 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v48);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = (unint64_t *)(a1
                           + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  uint64_t result = swift_beginAccess();
  unint64_t v19 = *v17;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_22BE937E8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v40) {
      return result;
    }
  }
  else if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v41 = v9;
  uint64_t v42 = v10;
  uint64_t v43 = v7;
  uint64_t v44 = v6;
  uint64_t v20 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange;
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange];
  if (v21) {
    uint64_t v22 = (void **)(v21 + 24);
  }
  else {
    uint64_t v22 = (void **)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection];
  }
  unint64_t v23 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_22BE65BE8(a1, v23);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DOCTagsCollectionViewData.PendingExternalChange();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v29;
  *(unsigned char *)(v29 + 16) = 0;
  *(void *)(v29 + 24) = v24;
  *(void *)(v29 + 32) = v26;
  *(void *)(v29 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v28;
  uint64_t v31 = *(void *)&v3[v20];
  if (v31) {
    *(unsigned char *)(v31 + 16) = 0;
  }
  *(void *)&v3[v20] = v29;
  sub_22BE91C58();
  swift_release();
  uint64_t v32 = *(void *)&v3[v20];
  if (v32) {
    *(unsigned char *)(v32 + 16) = 1;
  }
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
  uint64_t v33 = (void *)sub_22BE931E8();
  sub_22BE92B68();
  MEMORY[0x230F55660](v14, a2);
  uint64_t v45 = *(void *)(v45 + 8);
  ((void (*)(char *, uint64_t))v45)(v14, v48);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v30;
  *(void *)(v34 + 24) = v3;
  aBlock[4] = sub_22BE69868;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BDD0BA8;
  void aBlock[3] = &block_descriptor_20;
  uint64_t v35 = _Block_copy(aBlock);
  sub_22BE91C58();
  uint64_t v36 = v3;
  swift_release();
  uint64_t v37 = v46;
  sub_22BE92B38();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_22BE69870();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
  sub_22BE048F8();
  uint64_t v38 = v41;
  uint64_t v39 = v44;
  sub_22BE934E8();
  MEMORY[0x230F55C80](v16, v37, v38, v35);
  _Block_release(v35);
  swift_release();

  (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v42);
  return ((uint64_t (*)(char *, uint64_t))v45)(v16, v48);
}

void *sub_22BE65BE8(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  unint64_t v38 = (unint64_t)a2;
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  uint64_t v36 = *v3;
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_85;
  }
  uint64_t v4 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_86:
    swift_bridgeObjectRelease_n();
    return v2;
  }
LABEL_3:
  uint64_t v5 = 0;
  uint64_t v37 = v4;
  do
  {
    if ((v36 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x230F56140](v5, v36);
    }
    else {
      id v6 = *(id *)(v36 + 32 + 8 * v5);
    }
    uint64_t v7 = v6;
    BOOL v8 = __OFADD__(v5++, 1);
    if (v8) {
      goto LABEL_82;
    }
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = (void *)sub_22BE937E8();
      if (!v2)
      {
LABEL_57:
        swift_bridgeObjectRelease();
        unint64_t v14 = v38;
        if (v38 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_22BE937E8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v2 = *(void **)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_57;
      }
    }
    if ((v38 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x230F56140](0, v38);
    }
    else {
      id v9 = *(id *)(v38 + 32);
    }
    uint64_t v10 = v9;
    sub_22BDD9D50(0, (unint64_t *)&unk_2684882F0);
    char v11 = sub_22BE93328();

    uint64_t v12 = 0;
    if ((v11 & 1) == 0)
    {
      if (v2 == (void *)1) {
        goto LABEL_57;
      }
      uint64_t v29 = 5;
      while (1)
      {
        uint64_t v12 = v29 - 4;
        id v30 = (v38 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x230F56140](v29 - 4, v38)
            : *(id *)(v38 + 8 * v29);
        uint64_t v31 = v30;
        char v32 = sub_22BE93328();

        if (v32) {
          break;
        }
        uint64_t v33 = (void *)(v29 - 3);
        if (__OFADD__(v12, 1)) {
          goto LABEL_75;
        }
        ++v29;
        if (v33 == v2) {
          goto LABEL_57;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)(v12 + 1);
    if (__OFADD__(v12, 1)) {
      goto LABEL_84;
    }
    unint64_t v14 = v38;
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = (void *)sub_22BE937E8();
      swift_bridgeObjectRelease();
      if (v13 != v2)
      {
LABEL_16:
        uint64_t v15 = v12 + 5;
        do
        {
          unint64_t v16 = v15 - 4;
          if ((v14 & 0xC000000000000001) != 0)
          {
            id v17 = (id)MEMORY[0x230F56140](v15 - 4, v14);
          }
          else
          {
            if ((v16 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v4 = sub_22BE937E8();
              if (!v4) {
                goto LABEL_86;
              }
              goto LABEL_3;
            }
            if (v16 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_72;
            }
            id v17 = *(id *)(v14 + 8 * v15);
          }
          uint64_t v2 = v17;
          char v18 = sub_22BE93328();

          if ((v18 & 1) == 0)
          {
            if (v16 != v12)
            {
              uint64_t v19 = v38;
              if ((v38 & 0xC000000000000001) != 0)
              {
                uint64_t v2 = (void *)MEMORY[0x230F56140](v12, v38);
                id v22 = (id)MEMORY[0x230F56140](v15 - 4, v38);
              }
              else
              {
                if (v12 < 0) {
                  goto LABEL_76;
                }
                unint64_t v20 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v12 >= v20) {
                  goto LABEL_77;
                }
                id v21 = *(id *)(v38 + 8 * v12 + 32);
                if ((v16 & 0x8000000000000000) != 0) {
                  goto LABEL_78;
                }
                if (v16 >= v20) {
                  goto LABEL_79;
                }
                uint64_t v2 = v21;
                id v22 = *(id *)(v38 + 8 * v15);
              }
              id v23 = v22;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (v38 & 0x8000000000000000) != 0
                || (v38 & 0x4000000000000000) != 0)
              {
                uint64_t v19 = sub_22BE4585C(v38);
                unint64_t v38 = v19;
              }
              uint64_t v24 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
              *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x2UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v23;

              sub_22BE92ED8();
              uint64_t v25 = v38;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (v38 & 0x8000000000000000) != 0
                || (v38 & 0x4000000000000000) != 0)
              {
                uint64_t v25 = sub_22BE4585C(v38);
                unint64_t v38 = v25;
              }
              if ((v16 & 0x8000000000000000) != 0) {
                goto LABEL_80;
              }
              uint64_t v26 = v25 & 0xFFFFFFFFFFFFFF8;
              if (v16 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_81;
              }
              uint64_t v27 = *(void **)(v26 + 8 * v15);
              *(void *)(v26 + 8 * v15) = v2;

              sub_22BE92ED8();
            }
            BOOL v8 = __OFADD__(v12++, 1);
            if (v8) {
              goto LABEL_74;
            }
          }
          uint64_t v28 = (void *)(v15 - 3);
          if (__OFADD__(v16, 1)) {
            goto LABEL_73;
          }
          unint64_t v14 = v38;
          if (v38 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v2 = (void *)sub_22BE937E8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v2 = *(void **)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v15;
        }
        while (v28 != v2);
      }
    }
    else
    {
      uint64_t v2 = *(void **)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13 != v2) {
        goto LABEL_16;
      }
    }
LABEL_59:
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = (void *)sub_22BE937E8();
      swift_bridgeObjectRelease();
      if ((uint64_t)v2 < v12) {
        goto LABEL_83;
      }
    }
    else
    {
      uint64_t v2 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if ((uint64_t)v2 < v12) {
        goto LABEL_83;
      }
    }
    sub_22BE3E6D0(v12, (uint64_t)v2);

    uint64_t v34 = (void *)sub_22BE67D54(v7);
  }
  while (v5 != v37);
  swift_bridgeObjectRelease_n();
  return (void *)v38;
}

unsigned char *sub_22BE66184(unsigned char *result, uint64_t a2)
{
  if (result[16] == 1)
  {
    uint64_t v3 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange;
    uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
    if (v4) {
      *(unsigned char *)(v4 + 16) = 0;
    }
    *(void *)(a2 + v3) = 0;
    swift_release();
    uint64_t v5 = *(void *)(a2 + v3);
    if (v5) {
      *(unsigned char *)(v5 + 16) = 1;
    }
    uint64_t v6 = a2 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
    swift_beginAccess();
    uint64_t result = (unsigned char *)MEMORY[0x230F57630](v6);
    if (result)
    {
      objc_msgSend(result, sel_tagsCollectionDataNeedsReload_, a2);
      return (unsigned char *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22BE662E4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  uint64_t v2 = (void *)(v1 + 24);
  if (!v1) {
    uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  }
  if (!(*v2 >> 62)) {
    return *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_22BE937E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22BE663B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  uint64_t v4 = (unint64_t *)(v1
                          + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  if (v3) {
    uint64_t v4 = (unint64_t *)(v3 + 24);
  }
  unint64_t v5 = *v4;
  swift_bridgeObjectRetain();
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v6 > a1) {
      goto LABEL_5;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v9 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_22BE937E8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 <= a1) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x230F56140](a1, v5);
    goto LABEL_9;
  }
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    id v8 = *(id *)(v5 + 8 * a1 + 32);
LABEL_9:
    id v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_22BE66560(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  uint64_t v4 = (unint64_t *)(v1
                          + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  if (v3) {
    uint64_t v4 = (unint64_t *)(v3 + 24);
  }
  unint64_t v5 = *v4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22BE66E94(a1, v5);
  uint64_t v7 = v6;
  char v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_bridgeObjectRelease_n();
  if ((v9 & 1) == 0) {
    return v7;
  }

  return MEMORY[0x270EEDAC8](v10);
}

uint64_t sub_22BE666A0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 32);
  }
  else {
    uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection + 8);
  }
  if (v3) {
    unint64_t v5 = (uint64_t *)(v3 + 40);
  }
  else {
    unint64_t v5 = (uint64_t *)(v1
  }
                   + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection
                   + 16);
  uint64_t v6 = *v5;
  uint64_t v7 = *v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_22BE09920(a1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v9 = sub_22BE09920(a1, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
}

id DOCTagsCollectionViewData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id DOCTagsCollectionViewData.init()()
{
  id v1 = (uint64_t *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection];
  uint64_t v2 = v0;
  uint64_t *v1 = sub_22BE69490(MEMORY[0x263F8EE78]);
  v1[1] = v3;
  v1[2] = v4;
  *(void *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange] = 0;
  swift_unknownObjectWeakInit();

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCTagsCollectionViewData();
  return objc_msgSendSuper2(&v6, sel_init);
}

id DOCTagsCollectionViewData.__deallocating_deinit()
{
  return sub_22BE66E4C(type metadata accessor for DOCTagsCollectionViewData);
}

unint64_t DOCTagsCollectionViewDataPresence.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_22BE669D0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_22BE66A80()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_22BE66B4C(uint64_t a1)
{
  BOOL v3 = (void *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  *BOOL v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_22BE66BA0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  BOOL v3 = (void *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  *BOOL v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_22BE66C0C())()
{
  return j__swift_endAccess;
}

BOOL sub_22BE66D0C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 == 0;
}

id DOCTagsCollectionViewDataChanges.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions] = MEMORY[0x263F8EE78];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTagsCollectionViewDataChanges();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DOCTagsCollectionViewDataChanges.__deallocating_deinit()
{
  return sub_22BE66E4C(type metadata accessor for DOCTagsCollectionViewDataChanges);
}

id sub_22BE66E4C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_22BE66E94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x230F56140](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      unint64_t v5 = v4;
      sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
      char v6 = sub_22BE93328();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x230F56140](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          char v9 = v8;
          char v10 = sub_22BE93328();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_22BE937E8();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

id sub_22BE67030(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_22BE937E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_22BE937E8();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x230F56140](0, v3))
  {
    unint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x230F56140](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
    char v14 = sub_22BE93328();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x230F56140](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x230F56140](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        id v21 = v20;
        unint64_t v5 = sub_22BE93328();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_22BE93328();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void sub_22BE6731C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_57;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_22BE68970(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v28 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
  int64_t v12 = 0;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v29) {
        return;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v29) {
          return;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v29) {
            return;
          }
          unint64_t v17 = *(void *)(v28 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_22BE93318();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v30 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_22BE93328();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_22BE93328();

        if (v27) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v30;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v29) {
    return;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  MEMORY[0x270F9E868](v6, v5);
}

void sub_22BE67654(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if (sub_22BE67030(*a1, *a2))
  {
    sub_22BE6731C(v2, v4);
    if (v6)
    {
      sub_22BE6731C(v3, v5);
    }
  }
}

uint64_t sub_22BE676D4(uint64_t a1, uint64_t a2)
{
  return sub_22BE67734(a1, a2, &qword_268488300, (unint64_t *)&qword_2684870C0, 0x263F82D88, (void (*)(unint64_t))sub_22BE54B20);
}

uint64_t sub_22BE67704(uint64_t a1, uint64_t a2)
{
  return sub_22BE67734(a1, a2, &qword_268487D38, (unint64_t *)&unk_2684870B0, 0x263F3ABC0, (void (*)(unint64_t))sub_22BE54E60);
}

uint64_t sub_22BE67734(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v8 = sub_22BE93628();
    uint64_t v21 = v8;
    sub_22BE93528();
    if (sub_22BE935A8())
    {
      sub_22BDD9D50(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          uint64_t v8 = v21;
        }
        uint64_t result = sub_22BE93318();
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (sub_22BE935A8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v8;
}

unint64_t sub_22BE6793C(uint64_t a1, uint64_t a2)
{
  sub_22BE93318();
  unint64_t result = sub_22BE93508();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_22BE679C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_22BE939F8();
  swift_bridgeObjectRetain();
  sub_22BE92D48();
  uint64_t v6 = sub_22BE93A48();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_22BE938C8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      char v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_22BE938C8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22BE55A80();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_22BE68604(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_22BE67B50(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0) {
      uint64_t v4 = *v1;
    }
    else {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_22BE935B8();

    if (v6)
    {
      uint64_t v7 = sub_22BE68450(v4, (uint64_t)v5, &qword_268488300, (unint64_t *)&qword_2684870C0, 0x263F82D88, (void (*)(unint64_t))sub_22BE54B20);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_22BE93318();
  uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    goto LABEL_15;
  }
  sub_22BDD9D50(0, (unint64_t *)&qword_2684870C0);
  id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v10);
  char v12 = sub_22BE93328();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v13;
      if (((*(void *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_15;
      }
      id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v10);
      char v15 = sub_22BE93328();
    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v1;
  uint64_t v19 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22BE55C34();
    uint64_t v17 = v19;
  }
  uint64_t v7 = *(void *)(*(void *)(v17 + 48) + 8 * v10);
  sub_22BE687CC(v10);
  uint64_t *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_22BE67D54(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0) {
      uint64_t v4 = *v1;
    }
    else {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_22BE935B8();

    if (v6)
    {
      uint64_t v7 = sub_22BE68450(v4, (uint64_t)v5, &qword_268487D38, (unint64_t *)&unk_2684870B0, 0x263F3ABC0, (void (*)(unint64_t))sub_22BE54E60);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_22BE93318();
  uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    goto LABEL_15;
  }
  sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
  id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v10);
  char v12 = sub_22BE93328();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v13;
      if (((*(void *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_15;
      }
      id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v10);
      char v15 = sub_22BE93328();
    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v1;
  uint64_t v19 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22BE55DD4();
    uint64_t v17 = v19;
  }
  uint64_t v7 = *(void *)(*(void *)(v17 + 48) + 8 * v10);
  sub_22BE687CC(v10);
  uint64_t *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_22BE67F58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268487130);
  uint64_t result = sub_22BE93638();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_22BE939F8();
    swift_bridgeObjectRetain();
    sub_22BE92D48();
    uint64_t result = sub_22BE93A48();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22BE681F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268487D38);
  uint64_t result = sub_22BE93638();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_22BE93318();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22BE68450(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v11 = v6;
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_22BE93568();
  uint64_t v13 = swift_unknownObjectRetain();
  uint64_t v14 = sub_22BE67734(v13, v12, a3, a4, a5, a6);
  uint64_t v25 = v14;
  sub_22BE91C58();
  uint64_t v15 = sub_22BE93318();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v17 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
  {
    sub_22BDD9D50(0, a4);
    id v18 = *(id *)(*(void *)(v14 + 48) + 8 * v17);
    char v19 = sub_22BE93328();

    if (v19)
    {
LABEL_6:
      swift_release();
      uint64_t v23 = *(void *)(*(void *)(v14 + 48) + 8 * v17);
      sub_22BE687CC(v17);
      if (sub_22BE93328())
      {
        *uint64_t v11 = v25;
        return v23;
      }
      __break(1u);
    }
    else
    {
      uint64_t v20 = ~v16;
      while (1)
      {
        unint64_t v17 = (v17 + 1) & v20;
        if (((*(void *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          break;
        }
        id v21 = *(id *)(*(void *)(v14 + 48) + 8 * v17);
        char v22 = sub_22BE93328();

        if (v22) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_22BE68604(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    sub_22BE91C58();
    uint64_t v8 = sub_22BE934F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_22BE939F8();
        swift_bridgeObjectRetain();
        sub_22BE92D48();
        uint64_t v10 = sub_22BE93A48();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_22BE687CC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    sub_22BE91C58();
    uint64_t v8 = sub_22BE934F8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_22BE93318();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            BOOL v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_22BE68970(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_22BE93568()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_22BE935B8();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_22BE68AC4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_22BE68C4C((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    unint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_22BE68C4C((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x230F57540](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_22BE68C4C(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if (a3 >> 62) {
    goto LABEL_38;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v45 = v4;
  if (v5)
  {
    while (1)
    {
      uint64_t v46 = a4 + 56;
      if ((v4 & 0xC000000000000001) != 0) {
        break;
      }
      uint64_t v23 = 0;
      uint64_t v41 = v4 + 32;
      uint64_t v42 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v43 = 0;
      while (v23 != v42)
      {
        id v25 = *(id *)(v41 + 8 * v23);
        uint64_t v4 = (uint64_t)v25;
        uint64_t v26 = sub_22BE93318();
        uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v28 = v26 & ~v27;
        unint64_t v29 = v28 >> 6;
        uint64_t v30 = 1 << v28;
        if (((1 << v28) & *(void *)(v46 + 8 * (v28 >> 6))) != 0)
        {
          uint64_t v4 = sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
          id v31 = *(id *)(*(void *)(a4 + 48) + 8 * v28);
          char v32 = sub_22BE93328();

          if (v32)
          {
          }
          else
          {
            uint64_t v33 = ~v27;
            for (unint64_t i = v28 + 1; ; unint64_t i = v35 + 1)
            {
              unint64_t v35 = i & v33;
              if (((*(void *)(v46 + (((i & v33) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v33)) & 1) == 0) {
                goto LABEL_20;
              }
              id v36 = *(id *)(*(void *)(a4 + 48) + 8 * v35);
              char v37 = sub_22BE93328();

              if (v37) {
                break;
              }
            }

            unint64_t v29 = v35 >> 6;
            uint64_t v30 = 1 << v35;
          }
          unint64_t v38 = a1[v29];
          a1[v29] = v30 | v38;
          uint64_t v24 = v5;
          if ((v30 & v38) == 0)
          {
            BOOL v9 = __OFADD__(v43++, 1);
            if (v9)
            {
              __break(1u);
LABEL_35:
              __break(1u);
              break;
            }
          }
        }
        else
        {
LABEL_20:

          uint64_t v24 = v5;
        }
        if (++v23 == v24) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_22BE937E8();
      uint64_t v45 = v4;
      if (!v5) {
        goto LABEL_39;
      }
    }
    uint64_t v43 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v8 = MEMORY[0x230F56140](v6, v45);
      BOOL v9 = __OFADD__(v6++, 1);
      if (v9) {
        goto LABEL_35;
      }
      uint64_t v4 = v8;
      uint64_t v10 = sub_22BE93318();
      uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v12 = v10 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = 1 << v12;
      if (((1 << v12) & *(void *)(v46 + 8 * (v12 >> 6))) == 0) {
        goto LABEL_5;
      }
      uint64_t v4 = sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v12);
      char v16 = sub_22BE93328();

      if ((v16 & 1) == 0) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_16:
      unint64_t v22 = a1[v13];
      a1[v13] = v14 | v22;
      uint64_t v7 = v5;
      if ((v14 & v22) == 0)
      {
        if (__OFADD__(v43, 1)) {
          goto LABEL_37;
        }
        ++v43;
      }
LABEL_6:
      if (v6 == v7) {
        goto LABEL_40;
      }
    }
    uint64_t v17 = ~v11;
    for (unint64_t j = v12 + 1; ; unint64_t j = v19 + 1)
    {
      unint64_t v19 = j & v17;
      if (((*(void *)(v46 + (((j & v17) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v17)) & 1) == 0) {
        break;
      }
      id v20 = *(id *)(*(void *)(a4 + 48) + 8 * v19);
      char v21 = sub_22BE93328();

      if (v21)
      {
        swift_unknownObjectRelease();
        unint64_t v13 = v19 >> 6;
        uint64_t v14 = 1 << v19;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    uint64_t v7 = v5;
    goto LABEL_6;
  }
LABEL_39:
  uint64_t v43 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  sub_22BE91C58();
  return sub_22BE681F0(a1, a2, v43, a4);
}

void (*sub_22BE69008(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_22BE690B8(v6, a2, a3);
  return sub_22BE69070;
}

void sub_22BE69070(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_22BE690B8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x230F56140](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return sub_22BE69138;
  }
  __break(1u);
  return result;
}

void sub_22BE69138(id *a1)
{
}

uint64_t sub_22BE69140(unint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      uint64_t v22 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v26 = a2;
      uint64_t v27 = v3 + 32;
      unint64_t v24 = v3 & 0xC000000000000001;
      uint64_t v25 = v4;
      uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        id v8 = (id)MEMORY[0x230F56140](v5, v22);
LABEL_10:
        BOOL v9 = v8;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_24;
        }
        uint64_t v11 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v3 = v9;
          char v12 = sub_22BE935B8();
          swift_bridgeObjectRelease();

          if (v12)
          {

            goto LABEL_6;
          }
        }
        else if (*(void *)(v11 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_22BE93318();
          uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
          unint64_t v15 = v13 & ~v14;
          if ((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
          {
            uint64_t v3 = sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
            id v16 = *(id *)(*(void *)(v11 + 48) + 8 * v15);
            char v17 = sub_22BE93328();

            if (v17)
            {
LABEL_20:

              swift_bridgeObjectRelease();
              uint64_t v4 = v25;
              a2 = v26;
              uint64_t v7 = v23;
              unint64_t v6 = v24;
              goto LABEL_6;
            }
            uint64_t v18 = ~v14;
            while (1)
            {
              unint64_t v15 = (v15 + 1) & v18;
              if (((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
                break;
              }
              id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v15);
              char v20 = sub_22BE93328();

              if (v20) {
                goto LABEL_20;
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v4 = v25;
          a2 = v26;
          uint64_t v7 = v23;
          unint64_t v6 = v24;
        }
        sub_22BE936B8();
        sub_22BE936F8();
        sub_22BE93708();
        uint64_t v3 = (uint64_t)&v28;
        sub_22BE936C8();
LABEL_6:
        if (v5 == v4) {
          return v28;
        }
      }
      if (v5 < *(void *)(v7 + 16)) {
        break;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      uint64_t v4 = sub_22BE937E8();
      if (!v4) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v8 = *(id *)(v27 + 8 * v5);
    goto LABEL_10;
  }
  return MEMORY[0x263F8EE78];
}

void sub_22BE693C0(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = sub_22BE937E8();
    if (!v2) {
      return;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
  }
  else if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      uint64_t v4 = (void *)MEMORY[0x230F56140](i, a1);
      sub_22BE53FC0(&v7, v4);
    }
  }
  else
  {
    unint64_t v5 = (void **)(a1 + 32);
    do
    {
      unint64_t v6 = *v5++;
      sub_22BE53FC0(&v7, v6);

      --v2;
    }
    while (v2);
  }
}

uint64_t sub_22BE69490(unint64_t a1)
{
  uint64_t v21 = MEMORY[0x263F8EE88];
  uint64_t v22 = MEMORY[0x263F8EE88];
  uint64_t v20 = MEMORY[0x263F8EE78];
  unint64_t v2 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t result = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result >= 1) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_22BE937E8();
  if (result < 1) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = (void *)MEMORY[0x230F56140](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v4 = *(void **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  id v5 = objc_msgSend(v4, sel_tags);
  swift_unknownObjectRelease();
  id v6 = (id)DOCTagsFromFPTags();

  sub_22BDD9D50(0, (unint64_t *)&unk_2684870B0);
  unint64_t v7 = sub_22BE92EB8();

  sub_22BE693C0(v7);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_22BE937E8();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_8:
  if (v8 < 1)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  uint64_t v9 = 0;
  uint64_t v10 = v22;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = (void *)MEMORY[0x230F56140](v9, a1);
    }
    else
    {
      uint64_t v11 = *(void **)(a1 + 8 * v9 + 32);
      swift_unknownObjectRetain();
    }
    id v12 = objc_msgSend(v11, sel_tags);
    if (v12)
    {
      sub_22BDD9D50(0, (unint64_t *)&unk_2684880C0);
      sub_22BE92EB8();

      id v12 = (id)sub_22BE92EA8();
      swift_bridgeObjectRelease();
    }
    id v13 = (id)DOCTagsFromFPTags();

    uint64_t v14 = sub_22BE92EB8();
    unint64_t v15 = swift_bridgeObjectRetain();
    unint64_t v16 = sub_22BE69140(v15, &v21);
    swift_bridgeObjectRelease();
    if ((v10 & 0xC000000000000001) != 0)
    {
      if (v10 < 0) {
        uint64_t v17 = v10;
      }
      else {
        uint64_t v17 = v10 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_22BE93568();
      uint64_t v19 = sub_22BE67734(v17, v18, &qword_268487D38, (unint64_t *)&unk_2684870B0, 0x263F3ABC0, (void (*)(unint64_t))sub_22BE54E60);
      swift_bridgeObjectRelease();
      uint64_t v10 = v19;
    }
    ++v9;
    uint64_t v10 = sub_22BE68AC4(v14, v10);
    sub_22BE693C0(v14);
    swift_bridgeObjectRelease();
    sub_22BE533D8(v16);
    swift_unknownObjectRelease();
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t type metadata accessor for DOCTagsCollectionViewData.PendingExternalChange()
{
  return self;
}

uint64_t sub_22BE69828()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

unsigned char *sub_22BE69868()
{
  return sub_22BE66184(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_22BE69870()
{
  unint64_t result = qword_26AF002B0;
  if (!qword_26AF002B0)
  {
    sub_22BE92B08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AF002B0);
  }
  return result;
}

uint64_t type metadata accessor for DOCTagsCollectionViewData()
{
  return self;
}

uint64_t type metadata accessor for DOCTagsCollectionViewDataChanges()
{
  return self;
}

unint64_t sub_22BE69914()
{
  unint64_t result = qword_2684882E0;
  if (!qword_2684882E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2684882E0);
  }
  return result;
}

uint64_t sub_22BE69968@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x230F57630](v3);
  *a2 = result;
  return result;
}

uint64_t sub_22BE699C0()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_22BE69A18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for DOCTagsCollectionViewData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCTagsCollectionViewData);
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.applyTagsFromNodes(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.applyPendingExternalChange(_:timeout:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.countOfTags.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.tag(atIndex:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.index(ofTag:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewData.presence(of:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

ValueMetadata *type metadata accessor for DOCTagsCollectionViewDataPresence()
{
  return &type metadata for DOCTagsCollectionViewDataPresence;
}

uint64_t method lookup function for DOCTagsCollectionViewDataChanges(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCTagsCollectionViewDataChanges);
}

uint64_t dispatch thunk of DOCTagsCollectionViewDataChanges.deletions.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewDataChanges.deletions.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewDataChanges.deletions.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DOCTagsCollectionViewDataChanges.empty.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t destroy for DOCTagUnionCollection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s26DocumentManagerExecutables21DOCTagUnionCollectionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DOCTagUnionCollection(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DOCTagUnionCollection(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCTagUnionCollection(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCTagUnionCollection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTagUnionCollection()
{
  return &type metadata for DOCTagUnionCollection;
}

uint64_t sub_22BE69F64(uint64_t a1)
{
  return a1;
}

id DOCBlockOperation.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  id v6 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCBlockOperation_block];
  *(void *)id v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DOCBlockOperation.init(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCBlockOperation_block];
  *(void *)uint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for DOCBlockOperation();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for DOCBlockOperation()
{
  return self;
}

uint64_t sub_22BE6A058()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_22BE6A090(uint64_t a1, void *a2)
{
  return sub_22BE19D84(a1, a2);
}

id DOCBlockOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DOCBlockOperation.init()()
{
}

uint64_t sub_22BE6A1E0()
{
  return swift_release();
}

id DOCBlockOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBlockOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DOCBlockOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCBlockOperation);
}

uint64_t dispatch thunk of DOCBlockOperation.__allocating_init(block:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

BOOL static DOCCreateFolderOperation.isFilenameCollisionError(_:)()
{
  uint64_t v0 = (void *)sub_22BE92078();
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_22BE92CD8();
  uint64_t v4 = v3;

  if (v2 == sub_22BE92CD8() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      return 0;
    }
  }
  id v9 = objc_msgSend(v0, sel_code);

  return v9 == (id)-1001;
}

uint64_t static DOCCreateFolderOperation.renameCollisionFormattedString(folderName:)(uint64_t a1, uint64_t a2)
{
  if (qword_2684868C0 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22BE99770;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 64) = sub_22BDF8220();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = a2;
  swift_bridgeObjectRetain();

  return sub_22BE92CE8();
}

void sub_22BE6A420()
{
  id v0 = (id)_DocumentManagerBundle();
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = sub_22BE91F78();
    uint64_t v4 = v3;

    qword_268488310 = v2;
    *(void *)algn_268488318 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static DOCCreateFolderOperation.untitledFolderName.getter()
{
  if (qword_2684868B8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268488310;
  swift_bridgeObjectRetain();
  return v0;
}

id DOCCreateFolderOperation.parentItem.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_parentItem);
}

uint64_t DOCCreateFolderOperation.folderName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_22BE6A598(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

void *sub_22BE6A5FC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_22BE6A64C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_22BE6A6A0())()
{
  return j__swift_endAccess;
}

id DOCCreateFolderOperation.undoManager.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager);
}

char *DOCCreateFolderOperation.__allocating_init(parentItem:folderName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  return DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(a1, a2, a3, a4);
}

char *DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v7 = (void **)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem];
  *(void *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem] = 0;
  *(void *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_parentItem] = a1;
  objc_super v8 = &v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName];
  *(void *)objc_super v8 = a2;
  *((void *)v8 + 1) = a3;
  swift_beginAccess();
  id v9 = *v7;
  *char v7 = 0;
  uint64_t v10 = v4;
  id v11 = a1;

  *(void *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager] = a4;
  id v12 = a4;

  swift_bridgeObjectRetain();
  id v13 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for DOCCreateFolderOperation();
  uint64_t v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithParentItem_folderName_, v11, v13);

  unint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager];
  unint64_t v16 = v14;
  objc_msgSend(v15, sel_registerUndoOperationForSender_, v16);

  return v16;
}

id sub_22BE6A994()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_22BE91F78();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_22BE6AA60()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_parentItem);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName + 8);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager);
  id v5 = objc_allocWithZone((Class)type metadata accessor for DOCCreateFolderOperation());
  id v6 = v1;
  swift_bridgeObjectRetain();
  char v7 = DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(v6, v2, v3, v4);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  void v12[4] = sub_22BE6B108;
  v12[5] = v8;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  id v12[2] = sub_22BDDF270;
  void v12[3] = &block_descriptor_21;
  id v9 = _Block_copy(v12);
  uint64_t v10 = v7;
  swift_release();
  objc_msgSend(v10, sel_setCreateFolderCompletionBlock_, v9);
  _Block_release(v9);

  return v10;
}

void sub_22BE6ABAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)(a3 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  id v5 = *v4;
  *uint64_t v4 = a1;
  id v6 = a1;
}

char *sub_22BE6AC50()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem];
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!*v2) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22BE97A40;
  *(void *)(v4 + 32) = v3;
  uint64_t v19 = v4;
  sub_22BE92ED8();
  id v5 = *(void **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager];
  id v6 = (objc_class *)type metadata accessor for DOCDeleteOperation();
  char v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_items] = v19;
  *(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation] = v1;
  *(void *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager] = v5;
  sub_22BE25274();
  id v8 = v5;
  id v9 = v1;
  id v10 = v8;
  id v11 = v9;
  id v12 = v3;
  swift_bridgeObjectRetain();
  id v13 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  v18.receiver = v7;
  v18.super_class = v6;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithItems_, v13);

  unint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager];
  unint64_t v16 = v14;
  objc_msgSend(v15, sel_registerUndoOperationForSender_, v16);

  return v16;
}

id sub_22BE6AE34()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager), sel_registerUndoOperationForSender_, v0);
}

id DOCCreateFolderOperation.__allocating_init(parentItem:folderName:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  uint64_t v4 = (void *)sub_22BE92C98();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithParentItem_folderName_, a1, v4);

  return v5;
}

void DOCCreateFolderOperation.init(parentItem:folderName:)()
{
}

id DOCCreateFolderOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCreateFolderOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_22BE6AFF0()
{
  id v0 = (id)_DocumentManagerBundle();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = sub_22BE91F78();
    uint64_t v4 = v3;

    qword_268488320 = v2;
    *(void *)algn_268488328 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DOCCreateFolderOperation()
{
  return self;
}

uint64_t sub_22BE6B0D0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_22BE6B108(void *a1, uint64_t a2)
{
  sub_22BE6ABAC(a1, a2, *(void *)(v2 + 16));
}

id sub_22BE6B110@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t method lookup function for DOCCreateFolderOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCCreateFolderOperation);
}

uint64_t dispatch thunk of DOCCreateFolderOperation.folderItem.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.folderItem.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.folderItem.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.__allocating_init(parentItem:folderName:undoManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.actionNameForUndoing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.operationForRedoing()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.operationForUndoing()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.registerUndo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

void *static DOCDeleteOperation.confirmationStrings(for:)@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_22BE937E8();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x230F56140](v6 - 4, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v6);
        }
        id v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        unsigned int v10 = objc_msgSend(v7, sel_isCloudItem);

        if (v10) {
          break;
        }
        ++v6;
        if (v9 == v5) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      char v11 = 1;
      if (!v4) {
        goto LABEL_11;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
  }
LABEL_10:
  swift_bridgeObjectRelease();
  char v11 = 0;
  if (!v4)
  {
LABEL_11:
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_22BE937E8();
  swift_bridgeObjectRelease();
LABEL_14:
  id result = (id)_DocumentManagerBundle();
  uint64_t v14 = result;
  if (v12 == 1)
  {
    if (result)
    {
      sub_22BE91F78();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
      id result = (void *)swift_allocObject();
      *((_OWORD *)result + 1) = xmmword_22BE99770;
      if (v5)
      {
        uint64_t v14 = result;
        if ((a1 & 0xC000000000000001) == 0)
        {
          if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v15 = *(id *)(a1 + 32);
LABEL_20:
            id v16 = objc_msgSend(v15, sel_displayName, 0x800000022BEA47D0);

            uint64_t v17 = sub_22BE92CD8();
            uint64_t v19 = v18;

            v14[7] = MEMORY[0x263F8D310];
            v14[8] = sub_22BDF8220();
            v14[4] = v17;
            v14[5] = v19;
            uint64_t v20 = sub_22BE92CE8();
            uint64_t v22 = v21;
            swift_bridgeObjectRelease();
            id result = sub_22BE6B734(v11);
LABEL_23:
            *a2 = v20;
            a2[1] = v22;
            a2[2] = (uint64_t)result;
            a2[3] = v23;
            return result;
          }
          __break(1u);
          goto LABEL_30;
        }
      }
      else
      {
        __break(1u);
      }
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x230F56140](0, a1);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (result)
  {
    sub_22BE91F78();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v24 + 16) = xmmword_22BE99770;
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = v25;
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v12;
    uint64_t v20 = sub_22BE92CA8();
    uint64_t v22 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id result = sub_22BE6B88C(v11);
    goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t DOCDeleteOperation.RemoveOperationConfirmationStrings.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DOCDeleteOperation.RemoveOperationConfirmationStrings.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_22BE6B734(char a1)
{
  id result = (id)_DocumentManagerBundle();
  uint64_t v3 = result;
  if (a1)
  {
    if (result) {
      goto LABEL_5;
    }
    __break(1u);
  }
  else if (result)
  {
LABEL_5:
    uint64_t v4 = sub_22BE91F78();

    return (id)v4;
  }
  __break(1u);
  return result;
}

id sub_22BE6B88C(char a1)
{
  id result = (id)_DocumentManagerBundle();
  uint64_t v3 = result;
  if (a1)
  {
    if (result) {
      goto LABEL_5;
    }
    __break(1u);
  }
  else if (result)
  {
LABEL_5:
    uint64_t v4 = sub_22BE91F78();

    return (id)v4;
  }
  __break(1u);
  return result;
}

void *_s34RemoveOperationConfirmationStringsVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s34RemoveOperationConfirmationStringsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s34RemoveOperationConfirmationStringsVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s34RemoveOperationConfirmationStringsVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s34RemoveOperationConfirmationStringsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDeleteOperation.RemoveOperationConfirmationStrings()
{
  return &type metadata for DOCDeleteOperation.RemoveOperationConfirmationStrings;
}

id DOCTextFieldRoundedBackgroundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id DOCTextFieldRoundedBackgroundView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape] = 1;
  *(void *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for DOCTextFieldRoundedBackgroundView();
  id v9 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  id v10 = sub_22BE6C180();
  objc_msgSend(v9, sel_bounds);
  objc_msgSend(v10, sel_setFrame_);

  id v11 = sub_22BE6C180();
  objc_msgSend(v11, sel_setAutoresizingMask_, 18);

  id v12 = sub_22BE6C180();
  objc_msgSend(v9, sel_addSubview_, v12);

  sub_22BE6C21C();
  return v9;
}

uint64_t type metadata accessor for DOCTextFieldRoundedBackgroundView()
{
  return self;
}

uint64_t sub_22BE6BDF0()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape);
  swift_beginAccess();
  return *v1;
}

void sub_22BE6BEAC(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape);
  swift_beginAccess();
  int v5 = *v4;
  *uint64_t v4 = a1;
  if (v5 != v3) {
    sub_22BE6C21C();
  }
}

void sub_22BE6BF14(unsigned __int8 *a1, void *a2)
{
  int v2 = *a1;
  int v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape);
  swift_beginAccess();
  int v4 = *v3;
  *int v3 = v2;
  if (v2 != v4) {
    sub_22BE6C21C();
  }
}

void (*sub_22BE6BF7C(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape;
  _OWORD v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = *v5;
  return sub_22BE6BFFC;
}

void sub_22BE6BFFC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  int v4 = *(unsigned __int8 *)(*(void *)a1 + 40);
  int v5 = *(unsigned __int8 *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  if (v4 != v5) {
    sub_22BE6C21C();
  }

  free(v1);
}

id sub_22BE6C180()
{
  uint64_t v1 = OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CF0]), sel_init);
    objc_msgSend(v4, sel_setBorderStyle_, 3);
    objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
    int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_22BE6C21C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268488360);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape];
  swift_beginAccess();
  if (*v5 == 1)
  {
    sub_22BE6C4E0();
    sub_22BE926E8();
  }
  else
  {
    id v6 = sub_22BE6C180();
    objc_msgSend(v6, sel__cornerRadius);

    sub_22BE6C4E0();
    sub_22BE926D8();
  }
  uint64_t v7 = sub_22BE926F8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
  id v8 = (void *)sub_22BE93128();
  objc_msgSend(v1, sel_setHoverStyle_, v8);
}

id DOCTextFieldRoundedBackgroundView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTextFieldRoundedBackgroundView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE6C3D4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t method lookup function for DOCTextFieldRoundedBackgroundView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DOCTextFieldRoundedBackgroundView);
}

uint64_t dispatch thunk of DOCTextFieldRoundedBackgroundView.usePillShape.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DOCTextFieldRoundedBackgroundView.usePillShape.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DOCTextFieldRoundedBackgroundView.usePillShape.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

unint64_t sub_22BE6C4E0()
{
  unint64_t result = qword_268488368;
  if (!qword_268488368)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268488368);
  }
  return result;
}

void *sub_22BE6C520(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_22BE937E8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x230F56140](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_22BE6C77C(void *a1)
{
  if (qword_26AF00288 != -1) {
    swift_once();
  }
  sub_22BE93148();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_22BE97A30;
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  unint64_t v5 = sub_22BDF8220();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = 0xD000000000000024;
  *(void *)(v3 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA5240;
  if (a1)
  {
    uint64_t v9 = sub_22BDD9D50(0, (unint64_t *)&qword_268487598);
    uint64_t v10 = sub_22BE75A3C(&qword_268488450, (unint64_t *)&qword_268487598);
    *(void *)&long long v8 = a1;
    sub_22BDE1DD4(&v8, v3 + 72);
  }
  else
  {
    *(void *)(v3 + 96) = v4;
    *(void *)(v3 + 104) = v5;
    *(void *)(v3 + 72) = 7104878;
    *(void *)(v3 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0xE300000000000000;
  }
  id v6 = a1;
  sub_22BE92588();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtCV26DocumentManagerExecutables11LaunchUtilsP33_785CBA6FF492D1A84D3A93B2D10ABBAB15OpenAppDelegate_completionBlock))(1);
}

uint64_t sub_22BE6C97C(void *a1, uint64_t a2)
{
  if (qword_26AF00288 != -1) {
    swift_once();
  }
  sub_22BE93158();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22BE9A3B0;
  uint64_t v6 = MEMORY[0x263F8D310];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  unint64_t v7 = sub_22BDF8220();
  unint64_t v8 = v7;
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = 0xD00000000000002ALL;
  *(void *)(v5 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA51F0;
  if (!a1)
  {
    *(void *)(v5 + 96) = v6;
    *(void *)(v5 + 104) = v7;
    *(void *)(v5 + 72) = 7104878;
    *(void *)(v5 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0xE300000000000000;
    if (a2) {
      goto LABEL_5;
    }
LABEL_7:
    *(void *)(v5 + 136) = v6;
    *(void *)(v5 + 144) = v8;
    *(void *)(v5 + 112) = 7104878;
    *(void *)(v5 + 12UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0xE300000000000000;
    id v11 = a1;
    goto LABEL_8;
  }
  uint64_t v14 = sub_22BDD9D50(0, (unint64_t *)&qword_268487598);
  uint64_t v15 = sub_22BE75A3C(&qword_268488450, (unint64_t *)&qword_268487598);
  *(void *)&long long v13 = a1;
  sub_22BDE1DD4(&v13, v5 + 72);
  if (!a2) {
    goto LABEL_7;
  }
LABEL_5:
  id v9 = a1;
  uint64_t v10 = sub_22BE92078();
  uint64_t v14 = sub_22BDD9D50(0, (unint64_t *)&unk_2684880A0);
  uint64_t v15 = sub_22BE75A3C((unint64_t *)&qword_268488440, (unint64_t *)&unk_2684880A0);
  *(void *)&long long v13 = v10;
  sub_22BDE1DD4(&v13, v5 + 112);
LABEL_8:
  sub_22BE92588();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2
                                           + OBJC_IVAR____TtCV26DocumentManagerExecutables11LaunchUtilsP33_785CBA6FF492D1A84D3A93B2D10ABBAB15OpenAppDelegate_completionBlock))(0);
}

id sub_22BE6CC4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LaunchUtils.OpenAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_22BE6CC98()
{
  uint64_t result = sub_22BE92CD8();
  qword_268488370 = result;
  *(void *)algn_268488378 = v1;
  return result;
}

void static LaunchUtils.launchDocuments(toPreview:item:alertPresenting:)(uint64_t a1, void *a2, void *a3)
{
  id v36 = a3;
  char v37 = a2;
  uint64_t v4 = sub_22BE92198();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v29 - v8;
  LODWORD(v35) = sub_22BE92178();
  if (qword_2684868C8 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_268488370;
  uint64_t v38 = *(void *)algn_268488378;
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v29(v9, a1, v4);
  uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = (v10 + 16) & ~v10;
  uint64_t v12 = v11 + v6;
  uint64_t v32 = v10 | 7;
  uint64_t v13 = swift_allocObject();
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v30(v13 + v11, v9, v4);
  *(unsigned char *)(v13 + v12) = v35 & 1;
  uint64_t v35 = sub_22BE92138();
  uint64_t v34 = sub_22BE92C98();
  uint64_t v14 = v33;
  v29(v33, a1, v4);
  unint64_t v29 = (void (*)(char *, uint64_t, uint64_t))((v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (v12 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  v30(v18 + v11, v14, v4);
  uint64_t v19 = (char *)v29 + v18;
  *(void *)uint64_t v19 = sub_22BE6D2E4;
  *((void *)v19 + 1) = v13;
  unsigned char v19[16] = 1;
  uint64_t v20 = (uint64_t *)(v18 + v15);
  uint64_t v21 = v37;
  uint64_t v22 = v38;
  uint64_t *v20 = v31;
  v20[1] = v22;
  *(void *)(v18 + v16) = 2;
  uint64_t v23 = v36;
  *(void *)(v18 + v17) = v36;
  *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v21;
  aBlock[4] = sub_22BE6F5D0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE02F38;
  void aBlock[3] = &block_descriptor_22;
  uint64_t v24 = _Block_copy(aBlock);
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  id v25 = v23;
  id v26 = v21;
  swift_release();
  uint64_t v28 = (void *)v34;
  uint64_t v27 = (void *)v35;
  FPExtendBookmarkForDocumentURL();
  _Block_release(v24);
  swift_release();
}

uint64_t sub_22BE6D014(char a1, uint64_t a2, char a3)
{
  if (a1)
  {
    if (qword_26AF00288 != -1) {
      swift_once();
    }
  }
  else if (qword_26AF00288 != -1)
  {
    swift_once();
  }
  sub_22BE93158();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00550);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22BE97A30;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 64) = sub_22BDF8220();
  *(void *)(v4 + 32) = 0xD000000000000030;
  *(void *)(v4 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = 0x800000022BEA56D0;
  uint64_t v5 = sub_22BE92138();
  *(void *)(v4 + 96) = sub_22BDD9D50(0, &qword_268488380);
  *(void *)(v4 + 104) = sub_22BE75A3C(&qword_268488388, &qword_268488380);
  *(void *)(v4 + 72) = v5;
  sub_22BE92588();
  uint64_t result = swift_bridgeObjectRelease();
  if (a3) {
    return sub_22BE92158();
  }
  return result;
}

uint64_t sub_22BE6D250()
{
  uint64_t v1 = sub_22BE92198();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_22BE6D2E4(char a1)
{
  uint64_t v3 = *(void *)(sub_22BE92198() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));

  return sub_22BE6D014(a1, v1 + v4, v5);
}

void sub_22BE6D378(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v91 = a7;
  uint64_t v92 = a8;
  uint64_t v93 = a5;
  uint64_t v90 = sub_22BE92198();
  uint64_t v16 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  id v87 = v17;
  uint64_t v89 = (char *)&v76 - (((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x263F8D4F8];
  uint64_t v88 = a6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488478);
  uint64_t inited = swift_initStackObject();
  if (a2)
  {
    *(_OWORD *)(inited + 16) = xmmword_22BE97A30;
    *(void *)(inited + 32) = sub_22BE92CD8();
    *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v20;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = sub_22BE92CD8();
    *(void *)(inited + 88) = v21;
    *(void *)(inited + 12UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v18;
    char v22 = a3 & 1;
    *(unsigned char *)(inited + 96) = a3 & 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(inited + 16) = xmmword_22BE99770;
    *(void *)(inited + 32) = sub_22BE92CD8();
    *(void *)(inited + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v23;
    *(void *)(inited + 72) = v18;
    char v22 = a3 & 1;
    *(unsigned char *)(inited + 48) = a3 & 1;
  }
  unint64_t v85 = sub_22BE1ACF8(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268488478);
  uint64_t v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_22BE97A30;
  *(void *)(v24 + 32) = sub_22BE92CD8();
  *(void *)(v24 + 4UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v25;
  *(void *)(v24 + 72) = v18;
  *(unsigned char *)(v24 + 48) = 1;
  *(void *)(v24 + 8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = sub_22BE92CD8();
  *(void *)(v24 + 88) = v26;
  *(void *)(v24 + 12UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v18;
  *(unsigned char *)(v24 + 96) = 1;
  unint64_t v84 = sub_22BE1ACF8(v24);
  LOBYTE(v24) = sub_22BE92178();
  uint64_t v27 = *(char **)(v16 + 16);
  uint64_t v28 = v89;
  uint64_t v29 = v90;
  uint64_t v86 = a4;
  uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))v27;
  unint64_t v80 = v16 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v27)(v89, a4, v90);
  unint64_t v30 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v31 = (v30 + 17) & ~v30;
  uint64_t v78 = (void *)v30;
  unint64_t v32 = ((unint64_t)v87 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v87 + v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v82 = v30 | 7;
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = v24 & 1;
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  uint64_t v83 = v16 + 32;
  uint64_t v81 = v35;
  v35(v34 + v31, v28, v29);
  unint64_t v36 = v34 + v32;
  uint64_t v37 = v93;
  uint64_t v38 = v88;
  *(void *)unint64_t v36 = v93;
  *(void *)(v36 + 8) = v38;
  *(unsigned char *)(v36 + 16) = v22;
  uint64_t v39 = (void *)(v34 + v33);
  uint64_t v40 = v92;
  void *v39 = v91;
  v39[1] = v40;
  uint64_t v41 = (objc_class *)type metadata accessor for LaunchUtils.OpenAppDelegate();
  uint64_t v42 = (char *)objc_allocWithZone(v41);
  uint64_t v43 = (uint64_t (**)(int))&v42[OBJC_IVAR____TtCV26DocumentManagerExecutables11LaunchUtilsP33_785CBA6FF492D1A84D3A93B2D10ABBAB15OpenAppDelegate_completionBlock];
  *uint64_t v43 = sub_22BE77878;
  v43[1] = (uint64_t (*)(int))v34;
  v94.receiver = v42;
  v94.super_class = v41;
  swift_bridgeObjectRetain();
  sub_22BE91C58();
  id v44 = objc_msgSendSuper2(&v94, sel_init);
  id v45 = objc_allocWithZone(MEMORY[0x263F01878]);
  swift_bridgeObjectRetain();
  id v46 = sub_22BE74278(v37, v38, 0);
  if (sub_22BE92CD8() == v37 && v47 == v38) {
    goto LABEL_6;
  }
  char v48 = sub_22BE938C8();
  swift_bridgeObjectRelease();
  if ((v48 & 1) == 0)
  {
    if (sub_22BE92CD8() == v37 && v56 == v38) {
      goto LABEL_6;
    }
    char v57 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    if (v57) {
      goto LABEL_8;
    }
    if (sub_22BE92CD8() == v37 && v58 == v38)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    char v59 = sub_22BE938C8();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0) {
      goto LABEL_11;
    }
  }
LABEL_8:
  if (!v46) {
    goto LABEL_11;
  }
  id v49 = v46;
  id v50 = objc_msgSend(v49, sel_SDKVersion);
  id v51 = objc_msgSend(self, sel_defaultWorkspace);
  if (v51)
  {
    char v52 = v51;
    BOOL v53 = (void *)sub_22BE92C98();
    unsigned __int8 v54 = objc_msgSend(v52, sel_isVersion_greaterThanOrEqualToVersion_, v50, v53);

    uint64_t v37 = v93;
    if ((v54 & 1) == 0)
    {
      uint64_t v77 = a9;
      if (a11)
      {
        id v55 = a11;
        sub_22BE6E060(v55, v37, v38, a10, v91, v92, v86, v77, v85, v84, v44);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v60 = (unint64_t)v78;
        id v76 = objc_msgSend(self, sel_defaultManager);
        uint64_t v61 = v89;
        v79(v89, v86, v90);
        uint64_t v62 = (v60 + 16) & ~v60;
        unint64_t v63 = ((unint64_t)v87 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v80 = (v63 + 23) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v78 = a10;
        unint64_t v64 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))((v64 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v65 = ((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v87 = v44;
        unint64_t v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v67 = swift_allocObject();
        v81(v67 + v62, v61, v90);
        uint64_t v68 = (uint64_t *)(v67 + v63);
        uint64_t v69 = v92;
        uint64_t v70 = v88;
        *uint64_t v68 = v93;
        v68[1] = v70;
        uint64_t v71 = v78;
        *(void *)(v67 + v8UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0) = v78;
        uint64_t v72 = (void *)(v67 + v64);
        *uint64_t v72 = v91;
        v72[1] = v69;
        *(void *)((char *)v79 + v67) = v77;
        *(void *)(v67 + v65) = v85;
        *(void *)(v67 + v66) = v84;
        char v73 = v87;
        *(void *)(v67 + ((v66 + 15) & 0xFFFFFFFFFFFFFFF8)) = v87;
        swift_bridgeObjectRetain();
        sub_22BE91C58();
        id v74 = v71;
        id v75 = v73;
        _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v86, (uint64_t)sub_22BE77A4C, v67);
        swift_release();
      }
      goto LABEL_22;
    }
LABEL_11:
    sub_22BE6DEEC(v86, v37, v38, a9, v85, v84, (uint64_t)v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v49 = v46;
LABEL_22:

    return;
  }

  __break(1u);
}

uint64_t sub_22BE6DAA8(int a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v41 = a4;
  uint64_t v44 = a3;
  int v43 = a2;
  uint64_t v13 = sub_22BE92198();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v36[-v18];
  int v42 = a1;
  if (a1)
  {
    if (a6)
    {
      id v20 = objc_msgSend(self, sel_defaultManager);
      uint64_t v21 = v44;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v17, v44, v13);
      unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v23 = a7;
      unint64_t v24 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = 0;
      *(void *)(v25 + 24) = 0;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v14 + 32))(v25 + v22, v17, v13);
      *(void *)(v25 + v24) = 0x3FF0000000000000;
      a7 = v23;
      _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v21, (uint64_t)sub_22BE0588C, v25);
      swift_release();
    }
  }
  else
  {
    uint64_t v40 = a8;
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_22BE925E8();
    __swift_project_value_buffer(v26, (uint64_t)qword_268487A58);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v19, v44, v13);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_22BE925C8();
    os_log_type_t v28 = sub_22BE93158();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v46 = v39;
      *(_DWORD *)uint64_t v30 = 138412546;
      os_log_t v38 = v27;
      int v37 = v29;
      uint64_t v32 = sub_22BE92138();
      uint64_t v45 = v32;
      sub_22BE93408();
      void *v31 = v32;
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v19, v13);
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_22BDD8478(v41, a5, &v46);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      os_log_t v33 = v38;
      _os_log_impl(&dword_22BDC5000, v38, (os_log_type_t)v37, "Failed to open %@ in %s", (uint8_t *)v30, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v31, -1, -1);
      uint64_t v34 = v39;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v34, -1, -1);
      MEMORY[0x230F57540](v30, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v19, v13);

      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t result = a7(v42 & 1);
  if (v43) {
    return sub_22BE92158();
  }
  return result;
}

void sub_22BE6DEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9 = objc_msgSend(self, sel_defaultWorkspace);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  uint64_t v11 = (void *)sub_22BE92138();
  uint64_t v12 = (void *)sub_22BE92C98();
  uint64_t v13 = (void *)sub_22BE92BE8();
  uint64_t v14 = (void *)sub_22BE92BE8();
  id v15 = objc_msgSend(v10, sel_operationToOpenResource_usingApplication_uniqueDocumentIdentifier_isContentManaged_sourceAuditToken_userInfo_options_delegate_, v11, v12, 0, a4 == 1, 0, v13, v14, a7);

  if (!v15)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v15, sel_start);
}

void sub_22BE6E060(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v43 = a8;
  uint64_t v44 = a3;
  uint64_t v38 = a7;
  uint64_t v39 = a2;
  id v45 = a4;
  uint64_t v46 = a6;
  int v42 = a11;
  uint64_t v40 = a5;
  uint64_t v41 = a10;
  uint64_t v37 = a9;
  uint64_t v12 = sub_22BE92198();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF00560);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_22BE97A40;
  *(void *)(v16 + 32) = a1;
  aBlock[0] = v16;
  sub_22BE92ED8();
  id v17 = objc_allocWithZone(MEMORY[0x263F05458]);
  sub_22BDD9D50(0, (unint64_t *)&qword_26AF00490);
  swift_bridgeObjectRetain();
  id v18 = a1;
  uint64_t v19 = (void *)sub_22BE92EA8();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithItems_, v19);
  id v36 = v20;

  objc_msgSend(v20, sel_setQualityOfService_, 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v38, v12);
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (char *)swift_allocObject();
  uint64_t v26 = v39;
  *((void *)v25 + 2) = v18;
  *((void *)v25 + 3) = v26;
  id v27 = v45;
  *((void *)v25 + 4) = v44;
  *((void *)v25 + 5) = v27;
  uint64_t v28 = v46;
  *((void *)v25 + 6) = v40;
  *((void *)v25 + 7) = v28;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v21], v15, v12);
  *(void *)&v25[v22] = v43;
  *(void *)&v25[v23] = v37;
  int v29 = v42;
  *(void *)&v25[v24] = v41;
  *(void *)&v25[(v24 + 15) & 0xFFFFFFFFFFFFFFF8] = v29;
  aBlock[4] = sub_22BE77C7C;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22BE0469C;
  void aBlock[3] = &block_descriptor_76_0;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v18;
  id v32 = v36;
  swift_bridgeObjectRetain();
  id v33 = v45;
  sub_22BE91C58();
  swift_bridgeObjectRetain();
  id v34 = v29;
  swift_release();
  objc_msgSend(v32, sel_setActionCompletionBlock_, v30);
  _Block_release(v30);

  id v35 = objc_msgSend(self, sel_defaultManager);
  objc_msgSend(v35, sel_scheduleAction_, v32);
}

void sub_22BE6E3C0(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a1)
  {
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_22BE925E8();
    __swift_project_value_buffer(v18, (uint64_t)qword_268487A58);
    id v19 = a2;
    swift_bridgeObjectRetain();
    id v20 = a1;
    id v21 = v19;
    swift_bridgeObjectRetain();
    id v22 = a1;
    unint64_t v23 = sub_22BE925C8();
    os_log_type_t v24 = sub_22BE93158();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v38 = a3;
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)uint64_t v25 = 138412802;
      os_log_type_t type = v24;
      id v27 = v21;
      sub_22BE93408();
      *uint64_t v26 = v21;

      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_22BDD8478(v38, a4, aBlock);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      uint64_t v28 = (void *)sub_22BE92078();
      id v29 = objc_msgSend(v28, sel_localizedDescription);

      uint64_t v30 = sub_22BE92CD8();
      unint64_t v32 = v31;

      sub_22BDD8478(v30, v32, aBlock);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22BDC5000, v23, type, "Failed to download item %@ for opening %s. %s", (uint8_t *)v25, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v26, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v40, -1, -1);
      MEMORY[0x230F57540](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a1;
    *(void *)(v33 + 24) = a5;
    aBlock[4] = (uint64_t)sub_22BE77DAC;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_22BDD0BA8;
    void aBlock[3] = (uint64_t)&block_descriptor_82;
    id v34 = _Block_copy(aBlock);
    id v35 = a1;
    id v36 = a1;
    id v37 = a5;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v34);

    a6(0);
  }
  else
  {
    sub_22BE6DEEC(a8, a3, a4, a9, a10, a11, a12);
  }
}

void sub_22BE6E7E0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, NSObject *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  os_log_t v48 = a7;
  uint64_t v49 = a8;
  uint64_t v18 = sub_22BE92198();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  id v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v47 = a1;
    sub_22BE6E060(v47, a4, a5, a6, (uint64_t)v48, v49, a3, a9, a10, a11, a12);
    unint64_t v23 = v47;
  }
  else
  {
    uint64_t v24 = a3;
    uint64_t v25 = v22;
    uint64_t v26 = v20;
    uint64_t v27 = v19;
    uint64_t v28 = a4;
    id v29 = a2;
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_22BE925E8();
    __swift_project_value_buffer(v30, (uint64_t)qword_268487A58);
    uint64_t v31 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v25, v24, v27);
    unint64_t v32 = a5;
    swift_bridgeObjectRetain();
    id v33 = v29;
    swift_bridgeObjectRetain();
    id v34 = v29;
    id v35 = sub_22BE925C8();
    int v36 = sub_22BE93158();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      LODWORD(v47) = v36;
      os_log_t v48 = v35;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v51 = v49;
      *(_DWORD *)uint64_t v37 = 138412802;
      uint64_t v46 = v28;
      uint64_t v39 = sub_22BE92138();
      uint64_t v50 = v39;
      sub_22BE93408();
      void *v38 = v39;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v27);
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_22BDD8478(v46, v32, &v51);
      sub_22BE93408();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 22) = 2080;
      if (v29)
      {
        uint64_t v40 = (void *)sub_22BE92078();
        id v41 = objc_msgSend(v40, sel_localizedDescription);

        unint64_t v42 = sub_22BE92CD8();
        unint64_t v44 = v43;
      }
      else
      {
        unint64_t v44 = 0x800000022BEA5680;
        unint64_t v42 = 0xD000000000000013;
      }
      uint64_t v50 = sub_22BDD8478(v42, v44, &v51);
      sub_22BE93408();
      swift_bridgeObjectRelease();

      id v35 = v48;
      _os_log_impl(&dword_22BDC5000, v48, (os_log_type_t)v47, "Failed to fetch item for url %@ in %s. %s", (uint8_t *)v37, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v38, -1, -1);
      uint64_t v45 = v49;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v45, -1, -1);
      MEMORY[0x230F57540](v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v27);
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_22BE6EC48(NSObject *a1, void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v91 = a7;
  uint64_t v92 = a8;
  int v90 = a6;
  uint64_t v100 = a4;
  uint64_t v101 = a5;
  os_log_t v96 = a1;
  uint64_t v97 = a3;
  uint64_t v12 = sub_22BE92B08();
  uint64_t v94 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22BE92B58();
  uint64_t v93 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_22BE92B18();
  uint64_t v95 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_22BE92198();
  uint64_t v98 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  uint64_t v22 = *(void *)(v98 + 64);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v25);
  if (a2)
  {
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_22BE925E8();
    __swift_project_value_buffer(v28, (uint64_t)qword_268487A58);
    uint64_t v29 = v98;
    uint64_t v30 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v24, v97, v99);
    id v31 = a2;
    unint64_t v32 = sub_22BE925C8();
    os_log_type_t v33 = sub_22BE93158();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      os_log_t v96 = v32;
      id v35 = (void *)v95;
      uint64_t v97 = swift_slowAlloc();
      aBlock[0] = v97;
      *(_DWORD *)uint64_t v34 = 138412546;
      uint64_t v36 = sub_22BE92138();
      uint64_t v102 = v36;
      sub_22BE93408();
      *id v35 = v36;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v102 = (uint64_t)a2;
      id v37 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268488488);
      uint64_t v38 = sub_22BE92CF8();
      uint64_t v102 = sub_22BDD8478(v38, v39, aBlock);
      sub_22BE93408();

      swift_bridgeObjectRelease();
      os_log_t v40 = v96;
      _os_log_impl(&dword_22BDC5000, v96, v33, "Error while extending bookmark for %@ with error %s", (uint8_t *)v34, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      uint64_t v41 = v95;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v41, -1, -1);
      uint64_t v42 = v97;
      swift_arrayDestroy();
      MEMORY[0x230F57540](v42, -1, -1);
      MEMORY[0x230F57540](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
    }
  }
  else
  {
    uint64_t v43 = v95;
    uint64_t v86 = v17;
    id v87 = v14;
    uint64_t v88 = v15;
    uint64_t v89 = v12;
    if (v96)
    {
      unint64_t v85 = a11;
      uint64_t v83 = a10;
      uint64_t v84 = a9;
      uint64_t v44 = v27;
      uint64_t v80 = v27;
      uint64_t v82 = sub_22BE92CD8();
      uint64_t v81 = v45;
      sub_22BDD9D50(0, (unint64_t *)&qword_26AF003E0);
      (*(void (**)(char *, void, uint64_t))(v43 + 104))(v20, *MEMORY[0x263F8F080], v18);
      os_log_t v96 = (os_log_t)sub_22BE93238();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v18);
      uint64_t v46 = v98;
      uint64_t v47 = v99;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v44, v97, v99);
      unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      unint64_t v49 = (v22 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v50 = (v49 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v54 = swift_allocObject();
      *(unsigned char *)(v54 + 16) = v90 & 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 32))(v54 + v48, v80, v47);
      id v55 = (void *)(v54 + v49);
      uint64_t v56 = v92;
      *id v55 = v91;
      v55[1] = v56;
      char v57 = (void *)(v54 + v50);
      uint64_t v58 = v101;
      *char v57 = v100;
      v57[1] = v58;
      *(void *)(v54 + v51) = v84;
      char v59 = v83;
      *(void *)(v54 + v52) = v83;
      unint64_t v60 = v85;
      *(void *)(v54 + v53) = v85;
      uint64_t v61 = (uint64_t *)(v54 + ((v53 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v62 = v81;
      *uint64_t v61 = v82;
      v61[1] = v62;
      aBlock[4] = (uint64_t)sub_22BE77FE0;
      aBlock[5] = v54;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_22BDD0BA8;
      void aBlock[3] = (uint64_t)&block_descriptor_91;
      unint64_t v63 = _Block_copy(aBlock);
      id v64 = v60;
      swift_bridgeObjectRetain();
      sub_22BE91C58();
      id v65 = v59;
      unint64_t v66 = v86;
      sub_22BE92B38();
      uint64_t v102 = MEMORY[0x263F8EE78];
      sub_22BE69870();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AF002D0);
      sub_22BE048F8();
      uint64_t v67 = v87;
      uint64_t v68 = v89;
      sub_22BE934E8();
      os_log_t v69 = v96;
      MEMORY[0x230F55CD0](0, v66, v67, v63);
      _Block_release(v63);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v67, v68);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v66, v88);
      return swift_release();
    }
    uint64_t v71 = (char *)&v80 - v26;
    uint64_t v72 = v98;
    if (qword_268486820 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_22BE925E8();
    __swift_project_value_buffer(v73, (uint64_t)qword_268487A58);
    uint64_t v74 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v97, v99);
    id v75 = sub_22BE925C8();
    os_log_type_t v76 = sub_22BE93158();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 138412290;
      uint64_t v79 = sub_22BE92138();
      aBlock[0] = v79;
      sub_22BE93408();
      *uint64_t v78 = v79;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v74);
      _os_log_impl(&dword_22BDC5000, v75, v76, "bookmark for %@ is nil", v77, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268486ED0);
      swift_arrayDestroy();
      MEMORY[0x230F57540](v78, -1, -1);
      MEMORY[0x230F57540](v77, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v74);
    }
  }
  return v100(0);
}