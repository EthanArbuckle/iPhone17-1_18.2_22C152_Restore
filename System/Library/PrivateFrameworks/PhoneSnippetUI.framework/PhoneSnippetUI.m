uint64_t property wrapper backing initializer of SearchCallHistoryBinaryButtonModel.primaryText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryText.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.primaryText : SearchCallHistoryBinaryButtonModel@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.primaryText : SearchCallHistoryBinaryButtonModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.primaryText.modify(void *a1))()
{
  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryBinaryButtonModel.primaryAction()
{
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SABaseClientBoundCommand);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SearchCallHistoryBinaryButtonModel()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryBinaryButtonModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryBinaryButtonModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.primaryAction : SearchCallHistoryBinaryButtonModel@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.primaryAction : SearchCallHistoryBinaryButtonModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.primaryAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.primaryAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryText.getter()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.secondaryText : SearchCallHistoryBinaryButtonModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.secondaryText : SearchCallHistoryBinaryButtonModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.secondaryText.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path getter for SearchCallHistoryBinaryButtonModel.secondaryAction : SearchCallHistoryBinaryButtonModel@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonModel.secondaryAction : SearchCallHistoryBinaryButtonModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SearchCallHistoryBinaryButtonModel.secondaryAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryBinaryButtonModel.secondaryAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void SearchCallHistoryBinaryButtonModel.primaryText.modify(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t variable initialization expression of SearchCallHistoryBinaryButtonModel.responseViewId()
{
  return 0xD000000000000021;
}

uint64_t SearchCallHistoryBinaryButtonModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SearchCallHistoryBinaryButtonModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchCallHistoryBinaryButtonModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  v5 = (void *)(v2 + *(int *)(type metadata accessor for SearchCallHistoryBinaryButtonModel() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchCallHistoryBinaryButtonModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

void SearchCallHistoryBinaryButtonModel.init(primaryText:primaryAction:secondaryText:secondaryAction:)(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(a2 + *(int *)(type metadata accessor for SearchCallHistoryBinaryButtonModel() + 32));
  *uint64_t v3 = 0xD000000000000021;
  v3[1] = 0x8000000259204F00;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SABaseClientBoundCommand);
  id v4 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();
}

uint64_t SearchCallHistoryBinaryButtonModel.CodingKeys.stringValue.getter(char a1)
{
  return *(void *)&aPrimarytprimar[8 * a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return SearchCallHistoryBinaryButtonModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized SearchCallHistoryBinaryButtonModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return 0;
}

void protocol witness for CodingKey.init(intValue:) in conformance SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryBinaryButtonModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchCallHistoryBinaryButtonModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryBinaryButtonModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    v13[2] = v3;
    v13[3] = v9;
    char v17 = 1;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v11 = lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v13[0] = v11;
    v13[1] = v10;
    char v16 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v15 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v14 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t SearchCallHistoryBinaryButtonModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v50 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v54 = (char *)v42 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v55 = (char *)v42 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryBinaryButtonModel.CodingKeys>);
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v18[*(int *)(v16 + 32)];
  *(void *)v19 = 0xD000000000000021;
  *((void *)v19 + 1) = 0x8000000259204F00;
  v59 = v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel.CodingKeys and conformance SearchCallHistoryBinaryButtonModel.CodingKeys();
  v58 = v14;
  uint64_t v20 = (uint64_t)v60;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v21 = v54;
    v47 = v10;
    uint64_t v48 = v15;
    v60 = a1;
    v22 = v18;
    char v65 = 0;
    uint64_t v23 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    v24 = v55;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v44 = v23;
    v25 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    uint64_t v46 = (uint64_t)v22;
    v25(v22, v24, v7);
    char v64 = 1;
    v26 = v21;
    uint64_t v27 = lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>);
    uint64_t v28 = v52;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v45 = v7;
    v42[1] = v27;
    v43 = (void (*)(uint64_t, char *, uint64_t))v25;
    uint64_t v29 = v48;
    v30 = v26;
    v31 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v31(v46 + *(int *)(v48 + 20), v30, v28);
    char v63 = 2;
    v32 = v47;
    v55 = 0;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v43(v46 + *(int *)(v29 + 24), v32, v7);
    char v62 = 3;
    v33 = v50;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v34 = v46;
    v31(v46 + *(int *)(v29 + 28), v33, v28);
    char v61 = 4;
    uint64_t v35 = v57;
    uint64_t v36 = KeyedDecodingContainer.decode(_:forKey:)();
    v37 = v59;
    uint64_t v38 = v36;
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v35);
    swift_bridgeObjectRelease();
    void *v37 = v38;
    v37[1] = v40;
    outlined init with copy of SearchCallHistoryBinaryButtonModel(v34, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    return outlined destroy of SearchCallHistoryBinaryButtonModel(v34);
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type CodableAceObject<SABaseClientBoundCommand> and conformance CodableAceObject<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SearchCallHistoryBinaryButtonModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchCallHistoryBinaryButtonModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryBinaryButtonModel(void *a1)
{
  return SearchCallHistoryBinaryButtonModel.encode(to:)(a1);
}

unint64_t variable initialization expression of SingleResultCallHistoryModel.responseViewId()
{
  return 0xD000000000000017;
}

uint64_t default argument 3 of SingleResultCallHistoryModel.init(displayName:displayCallDetail:displayDateTime:contactIds:searchCallHistoryBinaryButtonModel:)()
{
  return MEMORY[0x263F8EE78];
}

unint64_t variable initialization expression of SingleResultVoicemailModel.responseViewId()
{
  return 0xD000000000000015;
}

uint64_t default argument 9 of SingleResultVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:callDurationInterval:transcript:transcriptTitle:callbackDirectInvocation:repeatDirectInvocation:contactIds:searchCallHistoryBinaryButtonModel:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t variable initialization expression of SingleVoicemailModel.responseViewId()
{
  return 0x6F56656C676E6953;
}

uint64_t variable initialization expression of PlayVoicemailModel.responseViewId()
{
  return 0x63696F5679616C50;
}

unint64_t variable initialization expression of SingleCallRecordModel.responseViewId()
{
  return 0xD000000000000010;
}

uint64_t variable initialization expression of SingleCallRecordModel.currentCallType()
{
  return 0;
}

unint64_t variable initialization expression of SearchCallHistoryModel.responseViewId()
{
  return 0xD000000000000011;
}

unint64_t variable initialization expression of ContactConfirmationModel.responseViewId()
{
  return 0xD000000000000013;
}

uint64_t variable initialization expression of ContactConfirmationModel.appId()
{
  return 0;
}

double variable initialization expression of ContactConfirmationModel.phoneContactHeader@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of ContactConfirmationModel.title()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownSash._context()
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  return EnvironmentObject.init()();
}

unint64_t variable initialization expression of YesNoConfirmationModel.responseViewId()
{
  return 0xD000000000000011;
}

double variable initialization expression of CountdownButtonStyle._buttonHeight()
{
  return 46.0;
}

uint64_t variable initialization expression of CountdownButtonStyle.animation()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t variable initialization expression of CountdownButtonStyle.fastAnimation()
{
  return static Animation.easeInOut(duration:)();
}

double variable initialization expression of CountdownButtonStyle.sosTrailingMaxPadding()
{
  return 8.0;
}

uint64_t variable initialization expression of CountdownButtonStyle._isAnimating()
{
  return 0;
}

uint64_t variable initialization expression of CountdownButtonStyle._isSliding()
{
  return 0;
}

double variable initialization expression of ContactHeaderView.padding()
{
  return 10.0;
}

uint64_t default argument 0 of View.disambiguationListItem(isFirstElement:)()
{
  return 0;
}

double variable initialization expression of ShowCallHistorySingleItemView._circleWidth()
{
  return 35.0;
}

double variable initialization expression of ShowCallHistorySingleItemView._circleHeight()
{
  return 35.0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.model@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for EmergencyCountdownModel();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._counter()
{
  return 3;
}

double variable initialization expression of EmergencyCountdownViewModel._animationStep()
{
  return 0.0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._timer()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  id v3 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v4 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  uint64_t v5 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of NSRunLoop.SchedulerOptions?((uint64_t)v2);
  v8[1] = v5;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, MEMORY[0x263F07CE8]);
  uint64_t v6 = ConnectablePublisher.autoconnect()();
  swift_release();
  return v6;
}

uint64_t type metadata accessor for SABaseClientBoundCommand(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t outlined destroy of NSRunLoop.SchedulerOptions?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._sashTitle()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._cancelButtonText()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._cancelledText()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._callButtonText()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._dialog()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._localeIdentifier()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._callingLabel()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._emergencyServicesLabel()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._sos()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._isCounterOnLastStep()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel._timerCancelledByUser()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.sliderIsAtMax()
{
  return 0;
}

double variable initialization expression of EmergencyCountdownViewModel.startLocation()
{
  return 0.0;
}

double variable initialization expression of EmergencyCountdownViewModel._currentTranslation()
{
  return 0.0;
}

double variable initialization expression of EmergencyCountdownViewModel.currentOffset()
{
  return 0.0;
}

id variable initialization expression of EmergencyCountdownViewModel.notificationCenter()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F08A00]);
  return objc_msgSend(v0, sel_init);
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.$__lazy_storage_$_numberFormatter()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.initialized()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownViewModel.timerCancelled()
{
  return 0;
}

uint64_t variable initialization expression of EmergencyCountdownView._viewModel()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

unint64_t variable initialization expression of EmergencyCountdownModel.responseViewId()
{
  return 0xD000000000000017;
}

uint64_t variable initialization expression of DisambiguationItemWithDirectInvocationModel._personHandle()
{
  return 0;
}

uint64_t variable initialization expression of DisambiguationItemWithDirectInvocationModel._label()
{
  return 0;
}

unint64_t variable initialization expression of ForeignEmergencyCallDisambiguationModel.responseViewId()
{
  return 0xD00000000000001ELL;
}

unint64_t variable initialization expression of LocalEmergencyCallDisambiguationModel.responseViewId()
{
  return 0xD00000000000001CLL;
}

uint64_t default argument 1 of static PhoneCallAppNameConstants.isPhoneOrFaceTime(appId:isInsensitive:)()
{
  return 1;
}

double variable initialization expression of CarPlayEmergencyCountdown.vStackSpacing()
{
  return 10.0;
}

double variable initialization expression of CarPlayEmergencyCountdown.countdownFontSize()
{
  return 72.0;
}

double variable initialization expression of CarPlayEmergencyCountdown.countdownMinWidth()
{
  return 96.0;
}

double variable initialization expression of SingleResultVoicemailView._circleWidth()
{
  return 35.0;
}

double variable initialization expression of SingleResultVoicemailView._circleHeight()
{
  return 35.0;
}

double variable initialization expression of SingleResultVoicemailView._progress()
{
  return 0.0;
}

uint64_t variable initialization expression of SingleResultVoicemailView._shouldStartTimer()
{
  return 0;
}

uint64_t instantiation function for generic protocol witness table for SearchCallHistoryBinaryButtonModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SearchCallHistoryBinaryButtonModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t base witness table accessor for Encodable in SearchCallHistoryBinaryButtonModel()
{
  return lazy protocol witness table accessor for type Context and conformance Context(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t lazy protocol witness table accessor for type Context and conformance Context(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryBinaryButtonModel(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v19(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v19(&a1[a3[6]], &a2[a3[6]], v7);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[8];
    char v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)char v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryBinaryButtonModel(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v5(a1 + a2[6], v4);
  v8(a1 + a2[7], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v17(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v17(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v16(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v16(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v13(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v13(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  char v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v18(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v18(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25916223C);
}

uint64_t sub_25916223C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259162370);
}

uint64_t sub_259162370(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for SearchCallHistoryBinaryButtonModel()
{
  type metadata accessor for Loggable<String>(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>, MEMORY[0x263F8D310], MEMORY[0x263F77230]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SABaseClientBoundCommand>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for CodableAceObject<SABaseClientBoundCommand>()
{
  if (!lazy cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>)
  {
    type metadata accessor for SABaseClientBoundCommand(255, &lazy cache variable for type metadata for SABaseClientBoundCommand);
    unint64_t v0 = type metadata accessor for CodableAceObject();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    }
  }
}

void type metadata accessor for VRXVisualResponseLocation(uint64_t a1)
{
}

void type metadata accessor for Loggable<String>(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591627CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *destructiveInjectEnumTag for SearchCallHistoryBinaryButtonModel.CodingKeys(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

void *type metadata accessor for SearchCallHistoryBinaryButtonModel.CodingKeys()
{
  return &unk_270723178;
}

uint64_t specialized SearchCallHistoryBinaryButtonModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x547972616D697270 && a2 == 0xEB00000000747865;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x417972616D697270 && a2 == 0xED00006E6F697463 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xED00007478655479 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xEF6E6F6974634179 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void EmergencyCountdownViewModel.__allocating_init()()
{
}

uint64_t SingleResultCallHistoryModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.displayCallDetail.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.displayDateTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultCallHistoryModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.contactIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleResultCallHistoryModel.contactIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*SingleResultCallHistoryModel.contactIds.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultCallHistoryModel.searchCallHistoryBinaryButtonModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v3, a1);
}

uint64_t type metadata accessor for SingleResultCallHistoryModel()
{
  uint64_t result = type metadata singleton initialization cache for SingleResultCallHistoryModel;
  if (!type metadata singleton initialization cache for SingleResultCallHistoryModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SingleResultCallHistoryModel.init(displayName:displayCallDetail:displayDateTime:contactIds:searchCallHistoryBinaryButtonModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = 0xD000000000000017;
  a9[1] = 0x8000000259204F30;
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  uint64_t v10 = (uint64_t)a9 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  return outlined init with take of SearchCallHistoryBinaryButtonModel?(a8, v10);
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t SingleResultCallHistoryModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x4479616C70736964;
      break;
    case 4:
      unint64_t result = 0x49746361746E6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      unint64_t result = 0x65736E6F70736572;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleResultCallHistoryModel.CodingKeys()
{
  return SingleResultCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleResultCallHistoryModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized SingleResultCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleResultCallHistoryModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleResultCallHistoryModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleResultCallHistoryModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SingleResultCallHistoryModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleResultCallHistoryModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = *(void *)(v3 + 64);
    v10[15] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for SingleResultCallHistoryModel();
    v10[14] = 5;
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys);
  }
  return result;
}

uint64_t SingleResultCallHistoryModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleResultCallHistoryModel.CodingKeys>);
  uint64_t v7 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SingleResultCallHistoryModel();
  MEMORY[0x270FA5388](v10);
  char v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12[1] = 0x8000000259204F30;
  uint64_t v13 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  lazy protocol witness table accessor for type SingleResultCallHistoryModel.CodingKeys and conformance SingleResultCallHistoryModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v10;
    uint64_t v14 = (uint64_t)v6;
    uint64_t v15 = v24;
    uint64_t v16 = v25;
    char v33 = 0;
    *char v12 = KeyedDecodingContainer.decode(_:forKey:)();
    v12[1] = v17;
    char v32 = 1;
    v12[2] = KeyedDecodingContainer.decode(_:forKey:)();
    v12[3] = v18;
    char v31 = 2;
    v12[4] = KeyedDecodingContainer.decode(_:forKey:)();
    v12[5] = v19;
    char v30 = 3;
    v12[6] = KeyedDecodingContainer.decode(_:forKey:)();
    v12[7] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v29 = 4;
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v12[8] = v27;
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    char v28 = 5;
    lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
    outlined init with take of SearchCallHistoryBinaryButtonModel?(v14, (uint64_t)v12 + *(int *)(v23 + 36));
    outlined init with copy of SingleResultCallHistoryModel((uint64_t)v12, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return outlined destroy of SingleResultCallHistoryModel((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryModel);
  }
}

uint64_t lazy protocol witness table accessor for type [String] and conformance <A> [A](unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleResultCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance SingleResultCallHistoryModel()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t instantiation function for generic protocol witness table for SingleResultCallHistoryModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleResultCallHistoryModel()
{
  return lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
}

uint64_t base witness table accessor for Encodable in SingleResultCallHistoryModel()
{
  return lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
}

uint64_t lazy protocol witness table accessor for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleResultCallHistoryModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleResultCallHistoryModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleResultCallHistoryModel(void *a1)
{
  return SingleResultCallHistoryModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SingleResultCallHistoryModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = *(int *)(a3 + 36);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[8] = a2[8];
    uint64_t v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v28 = *((void *)v11 - 1);
    char v12 = *(unsigned int (**)(char *, uint64_t, int *))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
      memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v27(__dst, v10, v15);
      uint64_t v16 = v11[5];
      uint64_t v17 = &__dst[v16];
      uint64_t v18 = &v10[v16];
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      v20(v17, v18, v19);
      v27(&__dst[v11[6]], &v10[v11[6]], v15);
      v20(&__dst[v11[7]], &v10[v11[7]], v19);
      uint64_t v21 = v11[8];
      uint64_t v22 = &__dst[v21];
      uint64_t v23 = &v10[v21];
      uint64_t v24 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      uint64_t v25 = *(void (**)(char *, void, uint64_t, int *))(v28 + 56);
      swift_bridgeObjectRetain();
      v25(__dst, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v4, v7);
    uint64_t v9 = v4 + v5[5];
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v11(v9, v10);
    v8(v4 + v5[6], v7);
    v11(v4 + v5[7], v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SingleResultCallHistoryModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[8] = a2[8];
  uint64_t v10 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v26 = *((void *)v10 - 1);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, int *))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    v25(__dst, v9, v13);
    uint64_t v14 = v10[5];
    uint64_t v15 = &__dst[v14];
    uint64_t v16 = &v9[v14];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v25(&__dst[v10[6]], &v9[v10[6]], v13);
    v18(&__dst[v10[7]], &v9[v10[7]], v17);
    uint64_t v19 = v10[8];
    uint64_t v20 = &__dst[v19];
    uint64_t v21 = &v9[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = *(void (**)(char *, void, uint64_t, int *))(v26 + 56);
    swift_bridgeObjectRetain();
    v23(__dst, 0, 1, v10);
  }
  return a1;
}

void *assignWithCopy for SingleResultCallHistoryModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24);
      v36(v7, v8, v25);
      uint64_t v26 = v9[5];
      uint64_t v27 = &v7[v26];
      uint64_t v28 = &v8[v26];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      char v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24);
      v30(v27, v28, v29);
      v36(&v7[v9[6]], &v8[v9[6]], v25);
      v30(&v7[v9[7]], &v8[v9[7]], v29);
      uint64_t v31 = v9[8];
      char v32 = &v7[v31];
      char v33 = &v8[v31];
      *(void *)char v32 = *(void *)v33;
      *((void *)v32 + 1) = *((void *)v33 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v35(v7, v8, v14);
  uint64_t v15 = v9[5];
  uint64_t v34 = &v7[v15];
  uint64_t v16 = &v8[v15];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v34, v16, v17);
  v35(&v7[v9[6]], &v8[v9[6]], v14);
  v18(&v7[v9[7]], &v8[v9[7]], v17);
  uint64_t v19 = v9[8];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  uint64_t v22 = *(void (**)(char *, void, uint64_t, int *))(v10 + 56);
  swift_bridgeObjectRetain();
  v22(v7, 0, 1, v9);
  return a1;
}

uint64_t outlined destroy of SingleResultCallHistoryModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v19(v7, v8, v12);
    uint64_t v13 = v9[5];
    uint64_t v18 = &v7[v13];
    uint64_t v14 = &v8[v13];
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v18, v14, v15);
    v19(&v7[v9[6]], &v8[v9[6]], v12);
    v16(&v7[v9[7]], &v8[v9[7]], v15);
    *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithTake for SingleResultCallHistoryModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40);
      v38(v11, v12, v25);
      uint64_t v26 = v13[5];
      uint64_t v27 = &v11[v26];
      uint64_t v28 = &v12[v26];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      char v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40);
      v30(v27, v28, v29);
      v38(&v11[v13[6]], &v12[v13[6]], v25);
      v30(&v11[v13[7]], &v12[v13[7]], v29);
      uint64_t v31 = v13[8];
      char v32 = &v11[v31];
      char v33 = &v12[v31];
      uint64_t v35 = *(void *)v33;
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)char v32 = v35;
      *((void *)v32 + 1) = v34;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SingleResultCallHistoryModel((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v37(v11, v12, v18);
  uint64_t v19 = v13[5];
  uint64_t v36 = &v11[v19];
  uint64_t v20 = &v12[v19];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v36, v20, v21);
  v37(&v11[v13[6]], &v12[v13[6]], v18);
  v22(&v11[v13[7]], &v12[v13[7]], v21);
  *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259164C0C);
}

uint64_t sub_259164C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259164CD4);
}

uint64_t sub_259164CD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for SingleResultCallHistoryModel()
{
  type metadata accessor for SearchCallHistoryBinaryButtonModel?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for SearchCallHistoryBinaryButtonModel?()
{
  if (!lazy cache variable for type metadata for SearchCallHistoryBinaryButtonModel?)
  {
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    }
  }
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SingleResultCallHistoryModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259164FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SingleResultCallHistoryModel.CodingKeys()
{
  return &unk_270723220;
}

uint64_t specialized SingleResultCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEA00000000007364 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000259205070)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t property wrapper backing initializer of EmergencyCountdownSash.viewModel()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t EmergencyCountdownSash.init(model:)()
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v0 = EnvironmentObject.init()();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  ObservedObject.init(wrappedValue:)();
  return v0;
}

uint64_t lazy protocol witness table accessor for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EmergencyCountdownSash.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v59 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v67[0] = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 440))(v7);
  *((void *)&v67[0] + 1) = v9;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Color.white.getter();
  uint64_t v15 = Text.foregroundColor(_:)();
  uint64_t v17 = v16;
  int v55 = v18;
  swift_release();
  outlined consume of Text.Storage(v10, v12, v14);
  swift_bridgeObjectRelease();
  if (a1)
  {
    id v19 = a1;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter()) {
      static Font.Weight.bold.getter();
    }
    else {
      static Font.Weight.semibold.getter();
    }
    char v20 = v55 & 1;
    uint64_t v21 = Text.fontWeight(_:)();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    char v27 = v26 & 1;
    outlined consume of Text.Storage(v15, v17, v20);
    swift_bridgeObjectRelease();
    uint64_t v28 = static Alignment.leading.getter();
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v68, 0.0, 1, 0.0, 1, v28, v29, v21, v23, v27, v25);
    outlined consume of Text.Storage(v21, v23, v27);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    char v31 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    char v61 = 0;
    char v40 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    char v49 = v61;
    char v64 = 0;
    if (one-time initialization token for emergencyRed != -1) {
      swift_once();
    }
    uint64_t v50 = static Color.emergencyRed;
    swift_retain();
    char v51 = static Edge.Set.all.getter();
    v67[6] = v68[6];
    v67[7] = v68[7];
    v67[8] = v68[8];
    v67[2] = v68[2];
    v67[3] = v68[3];
    v67[4] = v68[4];
    v67[5] = v68[5];
    v67[0] = v68[0];
    v67[1] = v68[1];
    *(void *)&v67[9] = KeyPath;
    BYTE8(v67[9]) = 0;
    *(_DWORD *)((char *)&v67[9] + 9) = *(_DWORD *)v63;
    HIDWORD(v67[9]) = *(_DWORD *)&v63[3];
    LOBYTE(v67[10]) = v31;
    *(_DWORD *)((char *)&v67[10] + 1) = *(_DWORD *)v62;
    DWORD1(v67[10]) = *(_DWORD *)&v62[3];
    *((void *)&v67[10] + 1) = v33;
    *(void *)&v67[11] = v35;
    *((void *)&v67[11] + 1) = v37;
    *(void *)&v67[12] = v39;
    BYTE8(v67[12]) = v49;
    *(_DWORD *)((char *)&v67[12] + 9) = *(_DWORD *)v66;
    HIDWORD(v67[12]) = *(_DWORD *)&v66[3];
    LOBYTE(v67[13]) = v40;
    DWORD1(v67[13]) = *(_DWORD *)&v65[3];
    *(_DWORD *)((char *)&v67[13] + 1) = *(_DWORD *)v65;
    *((void *)&v67[13] + 1) = v42;
    *(void *)&v67[14] = v44;
    *((void *)&v67[14] + 1) = v46;
    *(void *)&v67[15] = v48;
    BYTE8(v67[15]) = v64;
    *(void *)&v67[16] = v50;
    BYTE8(v67[16]) = v51;
    memcpy(v60, v67, sizeof(v60));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    uint64_t v52 = v56;
    View.privacySensitive(_:)();
    outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>((uint64_t)v67);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v59, v52, v58);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    char v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  outlined copy of Text.Storage(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[7];
  a9[6] = v13[6];
  a9[7] = v24;
  *(_OWORD *)((char *)a9 + 121) = *(_OWORD *)((char *)v13 + 121);
  long long v25 = v13[3];
  a9[2] = v13[2];
  a9[3] = v25;
  long long v26 = v13[5];
  a9[4] = v13[4];
  a9[5] = v26;
  long long v27 = v13[1];
  *a9 = *v13;
  a9[1] = v27;
  a9[13] = v33;
  a9[14] = v34;
  a9[15] = v35;
  a9[9] = v29;
  a9[10] = v30;
  a9[11] = v31;
  a9[12] = v32;
  return outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v13);
}

__n128 specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = type metadata accessor for ButtonStyleConfiguration.Label();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  long long v25 = (_OWORD *)(a9
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>)
                          + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *long long v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(unsigned char *)(a9 + 96) = *(unsigned char *)(v13 + 96);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 104) = v28;
  *(_OWORD *)(a9 + 120) = v29;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 200) = v34;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 152) = v31;
  return outlined retain of ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>(v13);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance EmergencyCountdownSash()
{
  return MEMORY[0x270F032C8]();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance EmergencyCountdownSash()
{
  return MEMORY[0x270F032D8]();
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance EmergencyCountdownSash()
{
  return static View._viewListCount(inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance EmergencyCountdownSash@<X0>(uint64_t a1@<X8>)
{
  return EmergencyCountdownSash.body.getter(*(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 24), a1);
}

uint64_t key path getter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_259166240@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_259166294()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>(uint64_t a1)
{
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in EmergencyCountdownSash()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for EmergencyCountdownSash(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EmergencyCountdownSash(id *a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for EmergencyCountdownSash(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v4 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownSash(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for EmergencyCountdownSash(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownSash(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownSash(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownSash()
{
  return &type metadata for EmergencyCountdownSash;
}

uint64_t sub_259166814()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined retain of ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  outlined copy of Text.Storage(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined copy of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

uint64_t *SingleResultVoicemailModel.resultViewID.unsafeMutableAddressor()
{
  return &static SingleResultVoicemailModel.resultViewID;
}

uint64_t static SingleResultVoicemailModel.resultViewID.getter()
{
  swift_beginAccess();
  uint64_t v0 = static SingleResultVoicemailModel.resultViewID;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SingleResultVoicemailModel.resultViewID.setter(uint64_t a1, char *a2)
{
  static SingleResultVoicemailModel.resultViewID = a1;
  off_26A36FE98 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SingleResultVoicemailModel.resultViewID.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

uint64_t SingleResultVoicemailModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.displayCallDetail.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.displayDateTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.callDuration.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.callDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.callDuration.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

double SingleResultVoicemailModel.callDurationInterval.getter()
{
  return *(double *)(v0 + 80);
}

void SingleResultVoicemailModel.callDurationInterval.setter(double a1)
{
  *(double *)(v1 + 80) = a1;
}

uint64_t (*SingleResultVoicemailModel.callDurationInterval.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.contactIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleResultVoicemailModel.contactIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*SingleResultVoicemailModel.contactIds.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.transcript.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.transcript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.transcript.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleResultVoicemailModel.transcriptTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleResultVoicemailModel.transcriptTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*SingleResultVoicemailModel.transcriptTitle.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

unint64_t type metadata accessor for SAIntentGroupRunSiriKitExecutor()
{
  unint64_t result = lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor;
  if (!lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  }
  return result;
}

uint64_t SingleResultVoicemailModel.callbackDirectInvocation.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SingleResultVoicemailModel()
{
  uint64_t result = type metadata singleton initialization cache for SingleResultVoicemailModel;
  if (!type metadata singleton initialization cache for SingleResultVoicemailModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for SingleResultVoicemailModel.callbackDirectInvocation : SingleResultVoicemailModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SingleResultVoicemailModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleResultVoicemailModel.callbackDirectInvocation.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleResultVoicemailModel.callbackDirectInvocation.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SingleResultVoicemailModel.repeatDirectInvocation()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SingleResultVoicemailModel.repeatDirectInvocation.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SingleResultVoicemailModel.repeatDirectInvocation : SingleResultVoicemailModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SingleResultVoicemailModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleResultVoicemailModel.repeatDirectInvocation.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleResultVoicemailModel.repeatDirectInvocation.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SingleResultVoicemailModel.searchCallHistoryBinaryButtonModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SingleResultVoicemailModel();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t SingleResultVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:callDurationInterval:transcript:transcriptTitle:callbackDirectInvocation:repeatDirectInvocation:contactIds:searchCallHistoryBinaryButtonModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17)
{
  *(void *)a9 = 0xD000000000000015;
  *(void *)(a9 + 8) = 0x8000000259204F50;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(double *)(a9 + 80) = a10;
  *(_OWORD *)(a9 + 96) = a11;
  *(void *)(a9 + 112) = a12;
  *(void *)(a9 + 120) = a13;
  uint64_t v18 = type metadata accessor for SingleResultVoicemailModel();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v19 = a15;
  CodableAceObject.init(wrappedValue:)();
  *(void *)(a9 + 88) = a16;
  CodableAceObject.init(wrappedValue:)();

  uint64_t v20 = a9 + *(int *)(v18 + 60);
  return outlined init with take of SearchCallHistoryBinaryButtonModel(a17, v20);
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t SingleResultVoicemailModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x4479616C70736964;
      break;
    case 4:
      unint64_t result = 0x617275446C6C6163;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x49746361746E6F63;
      break;
    case 7:
      unint64_t result = 0x697263736E617274;
      break;
    case 8:
      unint64_t result = 0x697263736E617274;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 11:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      unint64_t result = 0x65736E6F70736572;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleResultVoicemailModel.CodingKeys()
{
  return SingleResultVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleResultVoicemailModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized SingleResultVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleResultVoicemailModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleResultVoicemailModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleResultVoicemailModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SingleResultVoicemailModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleResultVoicemailModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v13) = 1;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 3;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 4;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 5;
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v13 = *(void *)(v3 + 88);
  char v12 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 7;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 8;
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v11 = v6;
  type metadata accessor for SingleResultVoicemailModel();
  LOBYTE(v13) = 9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 10;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 11;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys);
  }
  return result;
}

uint64_t SingleResultVoicemailModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v55 = *(void *)(v57 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v57);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleResultVoicemailModel.CodingKeys>);
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  char v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = (int *)type metadata accessor for SingleResultVoicemailModel();
  MEMORY[0x270FA5388](v56);
  char v14 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *char v14 = 0xD000000000000015;
  v14[1] = 0x8000000259204F50;
  uint64_t v59 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleResultVoicemailModel.CodingKeys and conformance SingleResultVoicemailModel.CodingKeys();
  uint64_t v52 = v12;
  uint64_t v15 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v54 = a1;
  if (v15)
  {
    uint64_t v58 = v15;
    int v21 = 0;
    int v22 = 0;
    int v23 = 0;
    int v24 = 0;
    int v25 = 0;
    int v26 = 0;
    int v27 = 0;
    int v28 = 0;
    LODWORD(v53) = 0;
  }
  else
  {
    uint64_t v16 = v10;
    uint64_t v48 = v5;
    char v49 = v8;
    uint64_t v17 = v51;
    LOBYTE(v61) = 0;
    uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
    id v19 = v59;
    uint64_t *v59 = v18;
    v19[1] = v20;
    LOBYTE(v61) = 1;
    v19[2] = KeyedDecodingContainer.decode(_:forKey:)();
    v19[3] = v31;
    LOBYTE(v61) = 2;
    v19[4] = KeyedDecodingContainer.decode(_:forKey:)();
    v19[5] = v32;
    LOBYTE(v61) = 3;
    v19[6] = KeyedDecodingContainer.decode(_:forKey:)();
    v19[7] = v33;
    LOBYTE(v61) = 4;
    v19[8] = KeyedDecodingContainer.decode(_:forKey:)();
    v19[9] = v34;
    LOBYTE(v61) = 5;
    KeyedDecodingContainer.decode(_:forKey:)();
    v19[10] = v35;
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v60 = 6;
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v19[11] = v61;
    LOBYTE(v61) = 7;
    uint64_t v36 = KeyedDecodingContainer.decode(_:forKey:)();
    long long v37 = v59;
    v59[12] = v36;
    v37[13] = v38;
    LOBYTE(v61) = 8;
    uint64_t v39 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v58 = 0;
    uint64_t v41 = v59;
    v59[14] = v39;
    v41[15] = v40;
    LOBYTE(v61) = 9;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v42 = v58;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v58 = v42;
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v52, v53);
      int v28 = 0;
      LODWORD(v53) = 0;
      int v21 = 1;
      int v22 = 1;
      int v23 = 1;
      int v24 = 1;
      int v25 = 1;
      int v26 = 1;
      int v27 = 1;
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
      v43((char *)v59 + v56[13], v16, v57);
      LOBYTE(v61) = 10;
      uint64_t v44 = v58;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v58 = v44;
      if (v44)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v52, v53);
        LODWORD(v53) = 0;
        int v21 = 1;
        int v22 = 1;
        int v23 = 1;
        int v24 = 1;
        int v25 = 1;
        int v26 = 1;
        int v27 = 1;
        int v28 = 1;
      }
      else
      {
        v43((char *)v59 + v56[14], v49, v57);
        LOBYTE(v61) = 11;
        _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SearchCallHistoryBinaryButtonModel and conformance SearchCallHistoryBinaryButtonModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryBinaryButtonModel);
        uint64_t v45 = v58;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        uint64_t v58 = v45;
        if (!v45)
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v52, v53);
          uint64_t v46 = (uint64_t)v59;
          outlined init with take of SearchCallHistoryBinaryButtonModel((uint64_t)v48, (uint64_t)v59 + v56[15]);
          outlined init with copy of SearchCallHistoryBinaryButtonModel(v46, v50, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailModel);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
          return outlined destroy of SingleResultVoicemailModel(v46);
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v52, v53);
        int v21 = 1;
        int v22 = 1;
        int v23 = 1;
        int v24 = 1;
        int v25 = 1;
        int v26 = 1;
        int v27 = 1;
        int v28 = 1;
        LODWORD(v53) = 1;
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  long long v29 = v59;
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (!v22)
    {
LABEL_6:
      if (!v23) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if (!v22)
  {
    goto LABEL_6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_7:
    if (!v24) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  if (!v24)
  {
LABEL_8:
    if (!v25) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_9:
    if (!v26) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_10:
    if (!v27) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_11:
    if (!v28) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_22:
  uint64_t result = swift_bridgeObjectRelease();
  if (v28) {
LABEL_12:
  }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))((char *)v29 + v56[13], v57);
LABEL_13:
  if (v53) {
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))((char *)v29 + v56[14], v57);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of SingleResultVoicemailModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SingleResultVoicemailModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for static ResultViewIDProviding.resultViewID.getter in conformance SingleResultVoicemailModel()
{
  swift_beginAccess();
  uint64_t v0 = static SingleResultVoicemailModel.resultViewID;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleResultVoicemailModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleResultVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleResultVoicemailModel(void *a1)
{
  return SingleResultVoicemailModel.encode(to:)(a1);
}

PhoneSnippetUI::VoicemailUpdateAction_optional __swiftcall VoicemailUpdateAction.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoicemailUpdateAction.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneSnippetUI_VoicemailUpdateAction_repeatVoicemail;
  }
  else {
    v4.value = PhoneSnippetUI_VoicemailUpdateAction_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t VoicemailUpdateAction.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6F56746165706572;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t instantiation function for generic protocol witness table for SingleResultVoicemailModel(uint64_t a1)
{
  uint64_t result = _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleResultVoicemailModel()
{
  return _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
}

uint64_t base witness table accessor for Encodable in SingleResultVoicemailModel()
{
  return _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVACSEAAWlTm_0(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
}

uint64_t _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVACSEAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VoicemailUpdateAction(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

unint64_t lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction()
{
  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction;
  if (!lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailUpdateAction and conformance VoicemailUpdateAction);
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance VoicemailUpdateAction()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance VoicemailUpdateAction@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoicemailUpdateAction.init(rawValue:), *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance VoicemailUpdateAction@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = VoicemailUpdateAction.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance VoicemailUpdateAction()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance VoicemailUpdateAction()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance VoicemailUpdateAction()
{
  return UpdateResponseCommand<>.init(_:)();
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance VoicemailUpdateAction()
{
  return UpdateResponseCommand<>.serializeData()();
}

uint64_t sub_25916895C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2591689B0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SingleResultVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for SingleResultVoicemailModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a2[3];
    *((void *)a1 + 2) = a2[2];
    *((void *)a1 + 3) = v8;
    uint64_t v9 = a2[5];
    *((void *)a1 + 4) = a2[4];
    *((void *)a1 + 5) = v9;
    uint64_t v10 = a2[7];
    *((void *)a1 + 6) = a2[6];
    *((void *)a1 + 7) = v10;
    uint64_t v11 = a2[9];
    *((void *)a1 + 8) = a2[8];
    *((void *)a1 + 9) = v11;
    uint64_t v12 = a2[11];
    *((void *)a1 + 10) = a2[10];
    *((void *)a1 + 11) = v12;
    uint64_t v13 = a2[13];
    *((void *)a1 + 12) = a2[12];
    *((void *)a1 + 13) = v13;
    uint64_t v14 = a2[15];
    uint64_t v15 = a3[13];
    uint64_t v34 = (char *)a2 + v15;
    uint64_t v36 = &a1[v15];
    *((void *)a1 + 14) = a2[14];
    *((void *)a1 + 15) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v36, v34, v16);
    v17(&a1[a3[14]], (char *)a2 + a3[14], v16);
    uint64_t v18 = a3[15];
    id v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    v35(v19, v20, v21);
    int v22 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v23 = v22[5];
    int v24 = &v19[v23];
    int v25 = &v20[v23];
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    int v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    v27(v24, v25, v26);
    v35(&v19[v22[6]], &v20[v22[6]], v21);
    v27(&v19[v22[7]], &v20[v22[7]], v26);
    uint64_t v28 = v22[8];
    long long v29 = &v19[v28];
    long long v30 = &v20[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)long long v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SingleResultVoicemailModel(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[13];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[14], v5);
  uint64_t v7 = a1 + a2[15];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v11 = v7 + v10[5];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v9(v7 + v10[6], v8);
  v13(v7 + v10[7], v12);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  uint64_t v9 = *((void *)a2 + 7);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = v9;
  uint64_t v10 = *((void *)a2 + 9);
  *((void *)a1 + 8) = *((void *)a2 + 8);
  *((void *)a1 + 9) = v10;
  uint64_t v11 = *((void *)a2 + 11);
  *((void *)a1 + 10) = *((void *)a2 + 10);
  *((void *)a1 + 11) = v11;
  uint64_t v12 = *((void *)a2 + 13);
  *((void *)a1 + 12) = *((void *)a2 + 12);
  *((void *)a1 + 13) = v12;
  uint64_t v13 = *((void *)a2 + 15);
  uint64_t v14 = a3[13];
  uint64_t v32 = &a2[v14];
  uint64_t v34 = &a1[v14];
  *((void *)a1 + 14) = *((void *)a2 + 14);
  *((void *)a1 + 15) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v34, v32, v15);
  v16(&a1[a3[14]], &a2[a3[14]], v15);
  uint64_t v17 = a3[15];
  uint64_t v18 = &a1[v17];
  id v19 = &a2[v17];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  v33(v18, v19, v20);
  uint64_t v21 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v22 = v21[5];
  uint64_t v23 = &v18[v22];
  int v24 = &v19[v22];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  v26(v23, v24, v25);
  v33(&v18[v21[6]], &v19[v21[6]], v20);
  v26(&v18[v21[7]], &v19[v21[7]], v25);
  uint64_t v27 = v21[8];
  uint64_t v28 = &v18[v27];
  long long v29 = &v19[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = *((void *)a2 + 8);
  *((void *)a1 + 9) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = *((void *)a2 + 10);
  *((void *)a1 + 11) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 12) = *((void *)a2 + 12);
  *((void *)a1 + 13) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 14) = *((void *)a2 + 14);
  *((void *)a1 + 15) = *((void *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[13];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[14]], &a2[a3[14]], v9);
  uint64_t v11 = a3[15];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24);
  v25(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v25(&v12[v15[6]], &v13[v15[6]], v14);
  v20(&v12[v15[7]], &v13[v15[7]], v19);
  uint64_t v21 = v15[8];
  uint64_t v22 = &v12[v21];
  uint64_t v23 = &v13[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v7;
  long long v8 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v8;
  long long v9 = *((_OWORD *)a2 + 7);
  uint64_t v10 = a3[13];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 7) = v9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[14]], &a2[a3[14]], v13);
  uint64_t v15 = a3[15];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v26(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v20 = v19[5];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  int v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v26(&v16[v19[6]], &v17[v19[6]], v18);
  v24(&v16[v19[7]], &v17[v19[7]], v23);
  *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
  return a1;
}

char *assignWithTake for SingleResultVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *((void *)a2 + 7);
  *((void *)a1 + 6) = *((void *)a2 + 6);
  *((void *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *((void *)a2 + 9);
  *((void *)a1 + 8) = *((void *)a2 + 8);
  *((void *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  *((void *)a1 + 10) = *((void *)a2 + 10);
  *((void *)a1 + 11) = *((void *)a2 + 11);
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)a2 + 13);
  *((void *)a1 + 12) = *((void *)a2 + 12);
  *((void *)a1 + 13) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)a2 + 15);
  *((void *)a1 + 14) = *((void *)a2 + 14);
  *((void *)a1 + 15) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[13];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(&a1[a3[14]], &a2[a3[14]], v16);
  uint64_t v18 = a3[15];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40);
  v34(v19, v20, v21);
  uint64_t v22 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v23 = v22[5];
  int v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40);
  v27(v24, v25, v26);
  v34(&v19[v22[6]], &v20[v22[6]], v21);
  v27(&v19[v22[7]], &v20[v22[7]], v26);
  uint64_t v28 = v22[8];
  long long v29 = &v19[v28];
  uint64_t v30 = &v20[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)long long v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591697B4);
}

uint64_t sub_2591697B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 52);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591698F8);
}

uint64_t sub_2591698F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 52);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void type metadata completion function for SingleResultVoicemailModel()
{
  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SearchCallHistoryBinaryButtonModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>()
{
  if (!lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>)
  {
    type metadata accessor for SAIntentGroupRunSiriKitExecutor();
    unint64_t v0 = type metadata accessor for CodableAceObject();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    }
  }
}

uint64_t getEnumTagSinglePayload for VoicemailUpdateAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VoicemailUpdateAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259169CD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *destructiveInjectEnumTag for VoicemailUpdateAction(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VoicemailUpdateAction()
{
  return &type metadata for VoicemailUpdateAction;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SingleResultVoicemailModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259169E78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SingleResultVoicemailModel.CodingKeys()
{
  return &unk_2707233E8;
}

uint64_t specialized SingleResultVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617275446C6C6163 && a2 == 0xEC0000006E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002592050D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEA00000000007364 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x697263736E617274 && a2 == -1196430878757850000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002592050F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000259205110 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000259205070)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t SingleVoicemailModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.displayCallDetail.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.displayDateTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.callDuration.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleVoicemailModel.callDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SingleVoicemailModel.callDuration.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleVoicemailModel.unseen.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t SingleVoicemailModel.unseen.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*SingleVoicemailModel.unseen.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of SingleVoicemailModel.openVoicemailRSKE()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SingleVoicemailModel.openVoicemailRSKE.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SingleVoicemailModel()
{
  uint64_t result = type metadata singleton initialization cache for SingleVoicemailModel;
  if (!type metadata singleton initialization cache for SingleVoicemailModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for SingleVoicemailModel.openVoicemailRSKE : SingleVoicemailModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SingleVoicemailModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleVoicemailModel.openVoicemailRSKE.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleVoicemailModel.openVoicemailRSKE.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SingleVoicemailModel.openContactRSKE.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SingleVoicemailModel.openContactRSKE : SingleVoicemailModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SingleVoicemailModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleVoicemailModel.openContactRSKE.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleVoicemailModel.openContactRSKE.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void SingleVoicemailModel.init(displayName:displayCallDetail:displayDateTime:callDuration:unseen:openVoicemailRSKE:openContactRSKE:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, void *a11)
{
  *(void *)a9 = 0x6F56656C676E6953;
  *(void *)(a9 + 8) = 0xEF6C69616D656369;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  type metadata accessor for SingleVoicemailModel();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v14 = a11;
  CodableAceObject.init(wrappedValue:)();
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(unsigned char *)(a9 + 80) = a10;
  CodableAceObject.init(wrappedValue:)();
}

unint64_t SingleVoicemailModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
    case 6:
      return result;
    case 3:
      unint64_t result = 0x4479616C70736964;
      break;
    case 4:
      unint64_t result = 0x617275446C6C6163;
      break;
    case 5:
      unint64_t result = 0x6E6565736E75;
      break;
    case 7:
      unint64_t result = 0x746E6F436E65706FLL;
      break;
    default:
      unint64_t result = 0x65736E6F70736572;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleVoicemailModel.CodingKeys()
{
  return SingleVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleVoicemailModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized SingleVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleVoicemailModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleVoicemailModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleVoicemailModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SingleVoicemailModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleVoicemailModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v16 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v14 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v11 = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for SingleVoicemailModel();
    char v10 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v9 = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys);
  }
  return result;
}

uint64_t SingleVoicemailModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)v27 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleVoicemailModel.CodingKeys>);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = type metadata accessor for SingleVoicemailModel();
  MEMORY[0x270FA5388](v33);
  char v10 = (void *)((char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *char v10 = 0x6F56656C676E6953;
  v10[1] = 0xEF6C69616D656369;
  uint64_t v11 = (uint64_t)v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleVoicemailModel.CodingKeys and conformance SingleVoicemailModel.CodingKeys();
  char v12 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = (void (*)(void, void, void))v7;
    uint64_t v28 = v5;
    uint64_t v13 = v30;
    uint64_t v14 = v31;
    char v43 = 0;
    *(void *)uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v11 + 8) = v15;
    char v42 = 1;
    *(void *)(v11 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v11 + 24) = v16;
    char v41 = 2;
    *(void *)(v11 + 32) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v11 + 40) = v17;
    char v40 = 3;
    *(void *)(v11 + 48) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v11 + 56) = v18;
    char v39 = 4;
    *(void *)(v11 + 64) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v11 + 72) = v19;
    char v38 = 5;
    *(unsigned char *)(v11 + 80) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    char v37 = 6;
    uint64_t v20 = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v21 = v35;
    v27[1] = v20;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v22 = v11 + *(int *)(v33 + 40);
    uint64_t v23 = v21;
    uint64_t v24 = v34;
    uint64_t v35 = *(void (**)(void, void, void))(v32 + 32);
    v35(v22, v23, v34);
    char v36 = 7;
    uint64_t v25 = v28;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(void, uint64_t))(v13 + 8))(0, v14);
    v35(v11 + *(int *)(v33 + 44), v25, v24);
    outlined init with copy of SingleVoicemailModel(v11, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return outlined destroy of SingleVoicemailModel(v11);
  }
}

uint64_t outlined init with copy of SingleVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleVoicemailModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SingleVoicemailModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SingleVoicemailModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for SingleVoicemailModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleVoicemailModel()
{
  return lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel);
}

uint64_t base witness table accessor for Encodable in SingleVoicemailModel()
{
  return lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel);
}

uint64_t lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SingleVoicemailModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleVoicemailModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleVoicemailModel(void *a1)
{
  return SingleVoicemailModel.encode(to:)(a1);
}

uint64_t sub_25916B95C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25916B9B0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SingleVoicemailModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[8];
    uint64_t v12 = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v13 = *(int *)(a3 + 40);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(a1 + *(int *)(a3 + 44), (uint64_t)a2 + *(int *)(a3 + 44), v16);
  }
  return a1;
}

uint64_t destroy for SingleVoicemailModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  return v8(v6, v5);
}

uint64_t initializeWithCopy for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v15);
  return a1;
}

uint64_t assignWithCopy for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v9);
  return a1;
}

uint64_t initializeWithTake for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v12);
  return a1;
}

uint64_t assignWithTake for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25916C084);
}

uint64_t sub_25916C084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25916C14C);
}

uint64_t sub_25916C14C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for SingleVoicemailModel()
{
  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for SingleVoicemailModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SingleVoicemailModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25916C3FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SingleVoicemailModel.CodingKeys()
{
  return &unk_270723490;
}

uint64_t specialized SingleVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617275446C6C6163 && a2 == 0xEC0000006E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6565736E75 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205130 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E6F436E65706FLL && a2 == 0xEF454B5352746361)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t PlayVoicemailModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlayVoicemailModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PlayVoicemailModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.callRecords()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t PlayVoicemailModel.callRecords.getter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for PlayVoicemailModel()
{
  uint64_t result = type metadata singleton initialization cache for PlayVoicemailModel;
  if (!type metadata singleton initialization cache for PlayVoicemailModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path getter for PlayVoicemailModel.callRecords : PlayVoicemailModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for PlayVoicemailModel.callRecords : PlayVoicemailModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.callRecords.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.callRecords.modify(void *a1))()
{
  int v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t PlayVoicemailModel.voicemailTitle.getter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for PlayVoicemailModel.voicemailTitle : PlayVoicemailModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for PlayVoicemailModel.voicemailTitle : PlayVoicemailModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.voicemailTitle.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.voicemailTitle.modify(void *a1))()
{
  int v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.openPhoneText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t PlayVoicemailModel.openPhoneText.getter()
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for PlayVoicemailModel.openPhoneText : PlayVoicemailModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for PlayVoicemailModel.openPhoneText : PlayVoicemailModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.openPhoneText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.openPhoneText.modify(void *a1))()
{
  int v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of PlayVoicemailModel.openPhoneAction()
{
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

unint64_t type metadata accessor for SABaseCommand()
{
  unint64_t result = lazy cache variable for type metadata for SABaseCommand;
  if (!lazy cache variable for type metadata for SABaseCommand)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  }
  return result;
}

uint64_t PlayVoicemailModel.openPhoneAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for PlayVoicemailModel.openPhoneAction : PlayVoicemailModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for PlayVoicemailModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t PlayVoicemailModel.openPhoneAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*PlayVoicemailModel.openPhoneAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t PlayVoicemailModel.CodingKeys.stringValue.getter(char a1)
{
  return *(void *)&aResponsecallre[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PlayVoicemailModel.CodingKeys()
{
  return PlayVoicemailModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PlayVoicemailModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized PlayVoicemailModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PlayVoicemailModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PlayVoicemailModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PlayVoicemailModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PlayVoicemailModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for PlayVoicemailModel();
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v10 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v9 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleVoicemailModel]);
    lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(a2, (void (*)(uint64_t))type metadata accessor for SingleVoicemailModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PlayVoicemailModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  uint64_t v42 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v30 - v9;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PlayVoicemailModel.CodingKeys>);
  uint64_t v13 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v43 = (int *)type metadata accessor for PlayVoicemailModel();
  MEMORY[0x270FA5388](v43);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy(v17, "PlayVoicemail");
  *((_WORD *)v17 + 7) = -4864;
  uint64_t v18 = a1[3];
  char v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  lazy protocol witness table accessor for type PlayVoicemailModel.CodingKeys and conformance PlayVoicemailModel.CodingKeys();
  char v38 = v15;
  uint64_t v19 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v40 = v8;
    char v48 = 0;
    *(void *)uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v17 + 1) = v20;
    char v47 = 1;
    lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>);
    uint64_t v21 = v37;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v22 = v41;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v17[v43[5]], v12, v21);
    char v46 = 2;
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    uint64_t v23 = v10;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v25 = v43;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    v26(&v17[v43[6]], v23, v22);
    char v45 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v26(&v17[v25[7]], v40, v22);
    char v44 = 4;
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    uint64_t v27 = v33;
    uint64_t v28 = v34;
    uint64_t v29 = v36;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v29);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v17[v43[8]], v28, v27);
    outlined init with copy of PlayVoicemailModel((uint64_t)v17, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    return outlined destroy of PlayVoicemailModel((uint64_t)v17);
  }
}

uint64_t lazy protocol witness table accessor for type Loggable<[SingleVoicemailModel]> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleVoicemailModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel);
    lazy protocol witness table accessor for type [SingleVoicemailModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleVoicemailModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleVoicemailModel and conformance SingleVoicemailModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of PlayVoicemailModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlayVoicemailModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PlayVoicemailModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlayVoicemailModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t default argument 0 of PlayVoicemailModel.init(responseViewId:callRecords:voicemailTitle:openPhoneText:openPhoneAction:)()
{
  return 0x63696F5679616C50;
}

uint64_t PlayVoicemailModel.init(responseViewId:callRecords:voicemailTitle:openPhoneText:openPhoneAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleVoicemailModel]);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t instantiation function for generic protocol witness table for PlayVoicemailModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in PlayVoicemailModel()
{
  return lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
}

uint64_t base witness table accessor for Encodable in PlayVoicemailModel()
{
  return lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
}

uint64_t lazy protocol witness table accessor for type SingleVoicemailModel and conformance SingleVoicemailModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance PlayVoicemailModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PlayVoicemailModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PlayVoicemailModel(void *a1)
{
  return PlayVoicemailModel.encode(to:)(a1);
}

uint64_t sub_25916E12C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for PlayVoicemailModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    char v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[a3[7]], (char *)a2 + a3[7], v15);
    uint64_t v17 = a3[8];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for PlayVoicemailModel(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[7], v7);
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

char *initializeWithCopy for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

char *assignWithCopy for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *initializeWithTake for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

char *assignWithTake for PlayVoicemailModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25916E9CC);
}

uint64_t sub_25916E9CC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for PlayVoicemailModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25916EB64);
}

uint64_t sub_25916EB64(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];
  return v15(v17, a2, a2, v16);
}

void type metadata completion function for PlayVoicemailModel()
{
  type metadata accessor for Loggable<[SingleVoicemailModel]>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CodableAceObject<SABaseCommand>();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void type metadata accessor for Loggable<[SingleVoicemailModel]>()
{
  if (!lazy cache variable for type metadata for Loggable<[SingleVoicemailModel]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleVoicemailModel]);
    unint64_t v0 = type metadata accessor for Loggable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    }
  }
}

void type metadata accessor for Loggable<String>()
{
  if (!lazy cache variable for type metadata for Loggable<String>)
  {
    unint64_t v0 = type metadata accessor for Loggable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
    }
  }
}

void type metadata accessor for CodableAceObject<SABaseCommand>()
{
  if (!lazy cache variable for type metadata for CodableAceObject<SABaseCommand>)
  {
    type metadata accessor for SABaseCommand();
    unint64_t v0 = type metadata accessor for CodableAceObject();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PlayVoicemailModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25916EFD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for PlayVoicemailModel.CodingKeys()
{
  return &unk_270723538;
}

uint64_t specialized PlayVoicemailModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6365526C6C6163 && a2 == 0xEB00000000736472 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69616D6563696F76 && a2 == 0xEE00656C7469546CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SingleCallRecordModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.displayName.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.displayCallDetail.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.displayCallDetail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.displayCallDetail.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.displayDateTime.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.displayDateTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.displayDateTime.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.currentCallType.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleCallRecordModel.currentCallType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*SingleCallRecordModel.currentCallType.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.contactIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleCallRecordModel.contactIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*SingleCallRecordModel.contactIds.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SingleCallRecordModel.isVideoCall.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SingleCallRecordModel.isVideoCall.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

uint64_t (*SingleCallRecordModel.isVideoCall.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of SingleCallRecordModel.directInvocation()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SingleCallRecordModel.directInvocation.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for SingleCallRecordModel()
{
  uint64_t result = type metadata singleton initialization cache for SingleCallRecordModel;
  if (!type metadata singleton initialization cache for SingleCallRecordModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for SingleCallRecordModel.directInvocation : SingleCallRecordModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SingleCallRecordModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleCallRecordModel.directInvocation.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleCallRecordModel.directInvocation.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SingleCallRecordModel.openContactDirectInvocation.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SingleCallRecordModel.openContactDirectInvocation : SingleCallRecordModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SingleCallRecordModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SingleCallRecordModel.openContactDirectInvocation.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SingleCallRecordModel.openContactDirectInvocation.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void SingleCallRecordModel.init(displayName:displayCallDetail:displayDateTime:currentCallType:contactIds:directInvocation:openContactDirectInvocation:isVideoCall:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  *(void *)a9 = 0xD000000000000010;
  *(void *)(a9 + 8) = 0x8000000259204F70;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  type metadata accessor for SingleCallRecordModel();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v16 = a11;
  CodableAceObject.init(wrappedValue:)();
  *(void *)(a9 + 72) = a8;
  *(void *)(a9 + 80) = a10;
  *(void *)(a9 + 64) = a7;
  CodableAceObject.init(wrappedValue:)();

  *(unsigned char *)(a9 + 88) = a13;
}

unint64_t SingleCallRecordModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x4479616C70736964;
      break;
    case 4:
      unint64_t result = 0x43746E6572727563;
      break;
    case 5:
      unint64_t result = 0x49746361746E6F63;
      break;
    case 6:
      unint64_t result = 0x436F656469567369;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      unint64_t result = 0x65736E6F70736572;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance SingleCallRecordModel.CodingKeys()
{
  return SingleCallRecordModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SingleCallRecordModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized SingleCallRecordModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance SingleCallRecordModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SingleCallRecordModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SingleCallRecordModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SingleCallRecordModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SingleCallRecordModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v11) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v11 = *(void *)(v3 + 80);
    v10[15] = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for SingleCallRecordModel();
    LOBYTE(v11) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 8;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys);
  }
  return result;
}

uint64_t SingleCallRecordModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SingleCallRecordModel.CodingKeys>);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for SingleCallRecordModel();
  MEMORY[0x270FA5388](v33);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = 0xD000000000000010;
  *((void *)v12 + 1) = 0x8000000259204F70;
  *((void *)v12 + 8) = 0;
  *((void *)v12 + 9) = 0;
  uint64_t v13 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SingleCallRecordModel.CodingKeys and conformance SingleCallRecordModel.CodingKeys();
  uint64_t v14 = v10;
  uint64_t v15 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = (void (*)(void, void, void))v7;
    uint64_t v28 = v5;
    uint64_t v17 = v30;
    uint64_t v16 = v31;
    LOBYTE(v37) = 0;
    uint64_t v18 = v14;
    *(void *)uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v12 + 1) = v19;
    LOBYTE(v37) = 1;
    *((void *)v12 + 2) = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v12 + 3) = v20;
    LOBYTE(v37) = 2;
    *((void *)v12 + 4) = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v12 + 5) = v21;
    LOBYTE(v37) = 3;
    *((void *)v12 + 6) = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v12 + 7) = v22;
    LOBYTE(v37) = 4;
    *((void *)v12 + 8) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v12 + 9) = v23;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    char v36 = 5;
    lazy protocol witness table accessor for type [String] and conformance <A> [A](&lazy protocol witness table cache variable for type [String] and conformance <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((void *)v12 + 10) = v37;
    LOBYTE(v37) = 6;
    v12[88] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v37) = 7;
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v24 = v35;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v25 = &v12[*(int *)(v33 + 44)];
    uint64_t v35 = *(void (**)(void, void, void))(v32 + 32);
    v35(v25, v24, v34);
    LOBYTE(v37) = 8;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
    v35(&v12[*(int *)(v33 + 48)], v28, v34);
    outlined init with copy of SingleCallRecordModel((uint64_t)v12, v29);
    __swift_destroy_boxed_opaque_existential_1(v13);
    return outlined destroy of SingleCallRecordModel((uint64_t)v12);
  }
}

uint64_t outlined init with copy of SingleCallRecordModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleCallRecordModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SingleCallRecordModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SingleCallRecordModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for SingleCallRecordModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SingleCallRecordModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel);
}

uint64_t base witness table accessor for Encodable in SingleCallRecordModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel);
}

uint64_t lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SingleCallRecordModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SingleCallRecordModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SingleCallRecordModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SingleCallRecordModel(void *a1)
{
  return SingleCallRecordModel.encode(to:)(a1);
}

uint64_t sub_259170880@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2591708D4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SingleCallRecordModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v13 = *(int *)(a3 + 44);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)(a1 + 80) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(a1 + *(int *)(a3 + 48), (uint64_t)a2 + *(int *)(a3 + 48), v16);
  }
  return a1;
}

uint64_t destroy for SingleCallRecordModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  return v8(v6, v5);
}

uint64_t initializeWithCopy for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v15);
  return a1;
}

uint64_t assignWithCopy for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v9);
  return a1;
}

uint64_t initializeWithTake for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v12);
  return a1;
}

uint64_t assignWithTake for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v11 = *(int *)(a3 + 44);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 48), a2 + *(int *)(a3 + 48), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259171000);
}

uint64_t sub_259171000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591710C8);
}

uint64_t sub_2591710C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for SingleCallRecordModel()
{
  type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for SingleCallRecordModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SingleCallRecordModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259171390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SingleCallRecordModel.CodingKeys()
{
  return &unk_2707235E0;
}

uint64_t specialized SingleCallRecordModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205050 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4479616C70736964 && a2 == 0xEF656D6954657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x43746E6572727563 && a2 == 0xEF657079546C6C61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xEA00000000007364 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x436F656469567369 && a2 == 0xEB000000006C6C61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259205150 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000259205170)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t PhoneSnippetUIError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000010;
  uint64_t v2 = type metadata accessor for AppIntentSpecification();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of PhoneSnippetUIError(v0, (uint64_t)v15);
  if (v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {

    outlined init with take of AppIntentRepresentation(v15, (uint64_t)v14);
    unint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000010;
    unint64_t v13 = 0x80000002592051B0;
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    dispatch thunk of AppIntentRepresentation.exportToSpecification()();
    uint64_t v6 = AppIntentSpecification.actionIdentifier.getter();
    int v8 = v7;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9._countAndFlagsBits = v6;
    v9._object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 41;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    unint64_t v1 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v1;
}

uint64_t outlined init with copy of PhoneSnippetUIError(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined init with take of AppIntentRepresentation(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t PhoneSnippetUIError.subTypeContext.getter()
{
  outlined init with copy of PhoneSnippetUIError(v0, (uint64_t)v6);
  if (v7) {
    return v6[0];
  }
  long long v2 = (void *)v6[5];
  long long v3 = (void *)_convertErrorToNSError(_:)();
  objc_msgSend(v3, sel_code);

  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();

  uint64_t v1 = 0x646F43726F727265;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v1;
}

uint64_t PhoneSnippetUIError.additionalContext.getter()
{
  outlined init with copy of PhoneSnippetUIError(v0, (uint64_t)v6);
  if (v8)
  {
    outlined destroy of PhoneSnippetUIError((uint64_t)v6);
  }
  else
  {
    uint64_t v1 = v7;
    outlined init with take of AppIntentRepresentation(v6, (uint64_t)v5);
    _StringGuts.grow(_:)(36);
    v2._object = (void *)0x80000002592051D0;
    v2._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v2);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AppIntentRepresentation);
    _print_unlocked<A, B>(_:_:)();
    v3._countAndFlagsBits = 0x3D726F7272650A2CLL;
    v3._object = (void *)0xE800000000000000;
    String.append(_:)(v3);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    _print_unlocked<A, B>(_:_:)();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return 0;
}

uint64_t outlined destroy of PhoneSnippetUIError(uint64_t a1)
{
  return a1;
}

uint64_t PhoneSnippetUIError.logged()@<X0>(uint64_t a1@<X8>)
{
  return specialized LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)(1, 1, a1);
}

uint64_t PhoneSnippetUIError.shouldLogToAbc.getter()
{
  return 1;
}

uint64_t PhoneSnippetUIError.shouldCreateTTR.getter()
{
  return 1;
}

uint64_t specialized LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v41 = 0;
  uint64_t v42 = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)();
  if (a1)
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)static Logger.phoneSnippetUI);
    swift_bridgeObjectRetain_n();
    Swift::String v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = a3;
      uint64_t v13 = swift_slowAlloc();
      unint64_t v41 = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25915D000, v10, v11, "#LoggableError Trying ABC for %s", v12, 0xCu);
      swift_arrayDestroy();
      uint64_t v14 = v13;
      a3 = v40;
      MEMORY[0x25A2D96D0](v14, -1, -1);
      MEMORY[0x25A2D96D0](v12, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v15 = specialized LoggableError.caseName.getter();
    unint64_t v17 = v16;
    unint64_t v41 = PhoneSnippetUIError.errorDescription.getter();
    uint64_t v42 = v18;
    v19._countAndFlagsBits = 657930;
    v19._object = (void *)0xE300000000000000;
    String.append(_:)(v19);
    v20._countAndFlagsBits = PhoneSnippetUIError.subTypeContext.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    specialized static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(0x4C41544146, 0xE500000000000000, v15, v17, v41, v42, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)static Logger.phoneSnippetUI);
    swift_bridgeObjectRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      unint64_t v41 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0, 0xE000000000000000, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25915D000, v23, v24, "#LoggableError Trying TTR for %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v26, -1, -1);
      MEMORY[0x25A2D96D0](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v41 = 0;
    uint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    unint64_t v41 = 0xD00000000000001ALL;
    uint64_t v42 = 0x80000002592051F0;
    v27._countAndFlagsBits = specialized LoggableError.caseName.getter();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    uint64_t v29 = v41;
    unint64_t v28 = v42;
    unint64_t v41 = PhoneSnippetUIError.errorDescription.getter();
    uint64_t v42 = v30;
    v31._countAndFlagsBits = 657930;
    v31._object = (void *)0xE300000000000000;
    String.append(_:)(v31);
    v32._countAndFlagsBits = PhoneSnippetUIError.subTypeContext.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33._countAndFlagsBits = 657930;
    v33._object = (void *)0xE300000000000000;
    String.append(_:)(v33);
    v34._countAndFlagsBits = PhoneSnippetUIError.additionalContext.getter();
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = v41;
    uint64_t v36 = v42;
    unint64_t v41 = 0;
    uint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v37._countAndFlagsBits = 0x45656E6F68502061;
    v37._object = (void *)0xEE002820726F7272;
    String.append(_:)(v37);
    _print_unlocked<A, B>(_:_:)();
    v38._countAndFlagsBits = 0x6564207361772029;
    v38._object = (void *)0xEF2E646574636574;
    String.append(_:)(v38);
    specialized static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(v29, v28, v35, v36, v41, v42, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return outlined init with copy of PhoneSnippetUIError(v4, a3);
}

uint64_t PhoneSnippetUIError.logger.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t protocol witness for LocalizedError.errorDescription.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270EEE940]();
}

uint64_t protocol witness for LocalizedError.failureReason.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270EEE930]();
}

uint64_t protocol witness for LocalizedError.recoverySuggestion.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270EEE950]();
}

uint64_t protocol witness for LocalizedError.helpAnchor.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270EEE920]();
}

uint64_t protocol witness for LoggableError.logger.getter in conformance PhoneSnippetUIError@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t protocol witness for Error._domain.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t protocol witness for Error._code.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t protocol witness for Error._userInfo.getter in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance PhoneSnippetUIError()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetUIError and conformance PhoneSnippetUIError()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetUIError and conformance PhoneSnippetUIError;
  if (!lazy protocol witness table cache variable for type PhoneSnippetUIError and conformance PhoneSnippetUIError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetUIError and conformance PhoneSnippetUIError);
  }
  return result;
}

void destroy for PhoneSnippetUIError(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)a1 + 2;
  }
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v3 = *(void **)(a1 + 40);
  }
}

uint64_t initializeWithCopy for PhoneSnippetUIError(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    char v6 = 1;
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    uint64_t v8 = *(void **)(a2 + 40);
    id v9 = v8;
    char v6 = 0;
    *(void *)(a1 + 40) = v8;
  }
  *(unsigned char *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for PhoneSnippetUIError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 48) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      long long v7 = *(void **)(a2 + 40);
      id v8 = v7;
      *(void *)(a1 + 40) = v7;
      *(unsigned char *)(a1 + 48) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PhoneSnippetUIError(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneSnippetUIError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PhoneSnippetUIError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for PhoneSnippetUIError(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t destructiveInjectEnumTag for PhoneSnippetUIError(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PhoneSnippetUIError()
{
  return &type metadata for PhoneSnippetUIError;
}

uint64_t specialized LoggableError.caseName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Mirror();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = &type metadata for PhoneSnippetUIError;
  uint64_t v15 = swift_allocObject();
  outlined init with copy of PhoneSnippetUIError(v1, v15 + 16);
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  specialized Collection.first.getter(&v13);
  swift_release();
  if (!v14[3])
  {
    outlined destroy of (label: String?, value: Any)?((uint64_t)&v13);
    outlined init with copy of PhoneSnippetUIError(v1, (uint64_t)&v13);
LABEL_5:
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v7 = v15;
    long long v6 = (void *)v16;
    goto LABEL_6;
  }
  long long v6 = (void *)*((void *)&v13 + 1);
  uint64_t v7 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  outlined init with copy of PhoneSnippetUIError(v1, (uint64_t)&v13);
  if (!v6) {
    goto LABEL_5;
  }
LABEL_6:
  outlined destroy of PhoneSnippetUIError((uint64_t)&v13);
  *(void *)&long long v13 = _typeName(_:qualified:)();
  *((void *)&v13 + 1) = v8;
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = v7;
  v10._object = v6;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_259172A10()
{
  if (*(unsigned char *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  return swift_deallocObject();
}

uint64_t outlined destroy of (label: String?, value: Any)?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (label: String?, value: Any)?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SearchCallHistoryModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchCallHistoryModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchCallHistoryModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t SearchCallHistoryModel.appId.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for SearchCallHistoryModel()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryModel;
  if (!type metadata singleton initialization cache for SearchCallHistoryModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path getter for SearchCallHistoryModel.appId : SearchCallHistoryModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.appId : SearchCallHistoryModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.appId.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.appId.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.callRecords()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.callRecords.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.callRecords : SearchCallHistoryModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.callRecords : SearchCallHistoryModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.callRecords.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.callRecords.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.recentsText.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.recentsText : SearchCallHistoryModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.recentsText : SearchCallHistoryModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.recentsText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.recentsText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.openPhoneText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.openPhoneText.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.openPhoneText : SearchCallHistoryModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.openPhoneText : SearchCallHistoryModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.openPhoneText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.openPhoneText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.shouldShowBottomView()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.shouldShowBottomView.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.shouldShowBottomView : SearchCallHistoryModel@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.shouldShowBottomView : SearchCallHistoryModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.shouldShowBottomView.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.shouldShowBottomView.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryModel.shouldReactOpenContact.getter()
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SearchCallHistoryModel.shouldReactOpenContact : SearchCallHistoryModel@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SearchCallHistoryModel.shouldReactOpenContact : SearchCallHistoryModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.shouldReactOpenContact.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.shouldReactOpenContact.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of SearchCallHistoryModel.openPhoneAction()
{
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t SearchCallHistoryModel.openPhoneAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for SearchCallHistoryModel.openPhoneAction : SearchCallHistoryModel(void **a1)
{
  unsigned __int8 v1 = *a1;
  type metadata accessor for SearchCallHistoryModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t SearchCallHistoryModel.openPhoneAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*SearchCallHistoryModel.openPhoneAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

unint64_t SearchCallHistoryModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6449707061;
      break;
    case 2:
      unint64_t result = 0x6F6365526C6C6163;
      break;
    case 3:
      unint64_t result = 0x5473746E65636572;
      break;
    case 4:
    case 7:
      unint64_t result = 0x6E6F68506E65706FLL;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      unint64_t result = 0x65736E6F70736572;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance SearchCallHistoryModel.CodingKeys()
{
  return SearchCallHistoryModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance SearchCallHistoryModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized SearchCallHistoryModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance SearchCallHistoryModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SearchCallHistoryModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchCallHistoryModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<SearchCallHistoryModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v17 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    uint64_t v7 = type metadata accessor for SearchCallHistoryModel();
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9[1] = v7;
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v14 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v13 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v12 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v11 = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v10 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(a2, (void (*)(uint64_t))type metadata accessor for SingleCallRecordModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<Bool>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SearchCallHistoryModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (char *)&v45 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v45 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<SearchCallHistoryModel.CodingKeys>);
  uint64_t v55 = *(void *)(v17 - 8);
  uint64_t v56 = v17;
  MEMORY[0x270FA5388](v17);
  Swift::String v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v63 = (int *)type metadata accessor for SearchCallHistoryModel();
  MEMORY[0x270FA5388](v63);
  uint64_t v21 = (uint64_t *)((char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v21 = 0xD000000000000011;
  v21[1] = 0x8000000259204F90;
  uint64_t v22 = v21;
  uint64_t v23 = a1[3];
  char v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  lazy protocol witness table accessor for type SearchCallHistoryModel.CodingKeys and conformance SearchCallHistoryModel.CodingKeys();
  os_log_type_t v24 = v19;
  uint64_t v25 = v59;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v25)
  {
    uint64_t v59 = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = v54;
    uint64_t v59 = v13;
    char v73 = 0;
    Swift::String v27 = v24;
    uint64_t v28 = (uint64_t)v22;
    uint64_t *v22 = KeyedDecodingContainer.decode(_:forKey:)();
    v22[1] = v29;
    char v72 = 1;
    uint64_t v30 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    Swift::String v31 = v16;
    uint64_t v32 = v65;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v47 = v30;
    uint64_t v33 = v28 + v63[5];
    uint64_t v34 = v64 + 32;
    char v46 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
    v46(v33, v31, v32);
    char v71 = 2;
    lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>);
    uint64_t v35 = v58;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v45 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v28 + v63[6], v26, v35);
    char v70 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v36 = v46;
    v46(v28 + v63[7], 0, v32);
    char v69 = 4;
    Swift::String v37 = v59;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v36(v28 + v63[8], v37, v32);
    char v68 = 5;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    Swift::String v38 = v53;
    uint64_t v39 = v62;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    unint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 32);
    v41(v28 + v63[9], v38, v39);
    char v67 = 6;
    uint64_t v42 = v52;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v41(v28 + v63[10], v42, v39);
    char v66 = 7;
    lazy protocol witness table accessor for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>);
    uint64_t v44 = v50;
    char v43 = v51;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v56);
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v28 + v63[11], v43, v44);
    outlined init with copy of SearchCallHistoryModel(v28, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    return outlined destroy of SearchCallHistoryModel(v28);
  }
}

uint64_t lazy protocol witness table accessor for type Loggable<[SingleCallRecordModel]> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel);
    lazy protocol witness table accessor for type [SingleCallRecordModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [SingleCallRecordModel] and conformance <A> [A], &lazy protocol witness table cache variable for type SingleCallRecordModel and conformance SingleCallRecordModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchCallHistoryModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t default argument 0 of SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:shouldReactOpenContact:openPhoneAction:)()
{
  return 0xD000000000000011;
}

uint64_t SearchCallHistoryModel.init(responseViewId:appId:callRecords:recentsText:openPhoneText:shouldShowBottomView:shouldReactOpenContact:openPhoneAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for SearchCallHistoryModel();
  Loggable.init(wrappedValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SingleCallRecordModel]);
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseCommand();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t instantiation function for generic protocol witness table for SearchCallHistoryModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in SearchCallHistoryModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
}

uint64_t base witness table accessor for Encodable in SearchCallHistoryModel()
{
  return lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
}

uint64_t lazy protocol witness table accessor for type SingleCallRecordModel and conformance SingleCallRecordModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance SearchCallHistoryModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchCallHistoryModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance SearchCallHistoryModel(void *a1)
{
  return SearchCallHistoryModel.encode(to:)(a1);
}

uint64_t sub_259174EC8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for SearchCallHistoryModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    v12(&a1[a3[7]], (char *)a2 + a3[7], v11);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    uint64_t v17 = a3[9];
    uint64_t v18 = &a1[v17];
    Swift::String v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v21(&a1[a3[10]], (char *)a2 + a3[10], v20);
    uint64_t v22 = a3[11];
    uint64_t v23 = &a1[v22];
    os_log_type_t v24 = (char *)a2 + v22;
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryModel(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v6(a1 + a2[7], v5);
  v6(a1 + a2[8], v5);
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(a1 + a2[10], v10);
  uint64_t v12 = a1 + a2[11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  return v14(v12, v13);
}

char *initializeWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

char *assignWithCopy for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(&a1[a3[10]], &a2[a3[10]], v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

char *initializeWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(&a1[a3[10]], &a2[a3[10]], v18);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

char *assignWithTake for SearchCallHistoryModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(&a1[a3[10]], &a2[a3[10]], v19);
  uint64_t v21 = a3[11];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259175A88);
}

uint64_t sub_259175A88(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[11];
  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259175C70);
}

uint64_t sub_259175C70(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[11];
  return v16(v18, a2, a2, v17);
}

void type metadata completion function for SearchCallHistoryModel()
{
  _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<[SingleCallRecordModel]>();
    if (v1 <= 0x3F)
    {
      _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<Bool>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CodableAceObject<SABaseCommand>();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void type metadata accessor for Loggable<[SingleCallRecordModel]>()
{
  if (!lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SingleCallRecordModel]);
    unint64_t v0 = type metadata accessor for Loggable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    }
  }
}

void _s10SnippetKit8LoggableVySSGMaTm_0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Loggable();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SearchCallHistoryModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259176124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SearchCallHistoryModel.CodingKeys()
{
  return &unk_270723770;
}

uint64_t specialized SearchCallHistoryModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6365526C6C6163 && a2 == 0xEB00000000736472 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5473746E65636572 && a2 == 0xEB00000000747865 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xED00007478655465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000259205210 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000259205230 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F68506E65706FLL && a2 == 0xEF6E6F6974634165)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t ContactConfirmationModel.responseViewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContactConfirmationModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.appId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationModel.appId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContactConfirmationModel.appId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContactConfirmationModel();
  return outlined init with copy of YesNoConfirmationModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
}

uint64_t type metadata accessor for ContactConfirmationModel()
{
  uint64_t result = type metadata singleton initialization cache for ContactConfirmationModel;
  if (!type metadata singleton initialization cache for ContactConfirmationModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ContactConfirmationModel.yesNoConfirmationModel.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 24);
  return outlined assign with take of YesNoConfirmationModel(a1, v3);
}

uint64_t outlined assign with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ContactConfirmationModel.yesNoConfirmationModel.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.phoneContactHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 28);
  return outlined init with copy of PhoneContactHeader?(v3, a1);
}

uint64_t outlined init with copy of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactConfirmationModel.phoneContactHeader.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactConfirmationModel() + 28);
  return outlined assign with take of PhoneContactHeader?(a1, v3);
}

uint64_t outlined assign with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ContactConfirmationModel.phoneContactHeader.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactConfirmationModel.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ContactConfirmationModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationModel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ContactConfirmationModel() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ContactConfirmationModel.title.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

unint64_t ContactConfirmationModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6449707061;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x656C746974;
      break;
    default:
      unint64_t result = 0x65736E6F70736572;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance ContactConfirmationModel.CodingKeys()
{
  return ContactConfirmationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ContactConfirmationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ContactConfirmationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ContactConfirmationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ContactConfirmationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ContactConfirmationModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ContactConfirmationModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v16) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v9 = type metadata accessor for ContactConfirmationModel();
    LOBYTE(v16) = 2;
    type metadata accessor for YesNoConfirmationModel();
    lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 28));
    char v11 = *((unsigned char *)v10 + 64);
    long long v12 = v10[1];
    long long v16 = *v10;
    long long v17 = v12;
    long long v13 = v10[3];
    long long v18 = v10[2];
    long long v19 = v13;
    char v20 = v11;
    v15[15] = 3;
    lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v16) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader and conformance PhoneContactHeader);
  }
  return result;
}

uint64_t ContactConfirmationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ContactConfirmationModel.CodingKeys>);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ContactConfirmationModel();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  long long v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *long long v12 = 0xD000000000000013;
  v12[1] = 0x8000000259204FB0;
  v12[2] = 0;
  v12[3] = 0;
  long long v13 = (char *)v12 + *(int *)(v10 + 28);
  *((_OWORD *)v13 + 2) = 0u;
  *((_OWORD *)v13 + 3) = 0u;
  *(_OWORD *)long long v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[64] = 0;
  uint64_t v29 = v10;
  uint64_t v14 = (uint64_t *)((char *)v12 + *(int *)(v10 + 32));
  *uint64_t v14 = 0;
  v14[1] = 0;
  Swift::String v31 = a1;
  uint64_t v32 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ContactConfirmationModel.CodingKeys and conformance ContactConfirmationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined consume of PhoneContactHeader?(*(void *)v13, *((void *)v13 + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v28;
    LOBYTE(v33) = 0;
    *long long v12 = KeyedDecodingContainer.decode(_:forKey:)();
    v12[1] = v16;
    LOBYTE(v33) = 1;
    v12[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v12[3] = v17;
    LOBYTE(v33) = 2;
    lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    outlined init with take of YesNoConfirmationModel((uint64_t)v6, (uint64_t)v12 + *(int *)(v29 + 24));
    char v38 = 3;
    lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v18 = v37;
    long long v19 = v34;
    *(_OWORD *)long long v13 = v33;
    *((_OWORD *)v13 + 1) = v19;
    long long v20 = v36;
    *((_OWORD *)v13 + 2) = v35;
    *((_OWORD *)v13 + 3) = v20;
    v13[64] = v18;
    LOBYTE(v33) = 4;
    uint64_t v21 = v30;
    uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v21);
    uint64_t v25 = v32;
    swift_bridgeObjectRelease();
    *uint64_t v25 = v22;
    v25[1] = v24;
    outlined init with copy of YesNoConfirmationModel((uint64_t)v12, v27, (uint64_t (*)(void))type metadata accessor for ContactConfirmationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    return outlined destroy of YesNoConfirmationModel((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ContactConfirmationModel);
  }
}

uint64_t outlined consume of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined init with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of YesNoConfirmationModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of YesNoConfirmationModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t default argument 0 of ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)()
{
  return 0xD000000000000013;
}

uint64_t ContactConfirmationModel.init(responseViewId:appId:yesNoConfirmationModel:phoneContactHeader:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v14 = (int *)type metadata accessor for ContactConfirmationModel();
  outlined init with take of YesNoConfirmationModel(a5, (uint64_t)a9 + v14[6]);
  uint64_t result = outlined init with take of PhoneContactHeader?(a6, (uint64_t)a9 + v14[7]);
  uint64_t v16 = (void *)((char *)a9 + v14[8]);
  *uint64_t v16 = a7;
  v16[1] = a8;
  return result;
}

uint64_t outlined init with take of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PhoneContactHeader?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t instantiation function for generic protocol witness table for ContactConfirmationModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in ContactConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
}

uint64_t base witness table accessor for Encodable in ContactConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
}

uint64_t lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ContactConfirmationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ContactConfirmationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ContactConfirmationModel(void *a1)
{
  return ContactConfirmationModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactConfirmationModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    char v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v38(v10, v11, v12);
    long long v13 = (int *)type metadata accessor for YesNoConfirmationModel();
    uint64_t v14 = v13[5];
    char v37 = &v10[v14];
    uint64_t v15 = &v11[v14];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v39 = a3;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v37, v15, v16);
    v38(&v10[v13[6]], &v11[v13[6]], v12);
    v17(&v10[v13[7]], &v11[v13[7]], v16);
    uint64_t v18 = v13[8];
    long long v19 = &v10[v18];
    long long v20 = &v11[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)long long v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *(int *)(v39 + 28);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v25;
      uint64_t v26 = *((void *)v24 + 3);
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *((void *)v23 + 3) = v26;
      uint64_t v27 = *((void *)v24 + 5);
      *((void *)v23 + 4) = *((void *)v24 + 4);
      *((void *)v23 + 5) = v27;
      uint64_t v28 = *((void *)v24 + 7);
      *((void *)v23 + 6) = *((void *)v24 + 6);
      *((void *)v23 + 7) = v28;
      v23[64] = v24[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v30 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v30;
      v23[64] = v24[64];
      long long v31 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v31;
    }
    uint64_t v32 = *(int *)(v39 + 32);
    long long v33 = (uint64_t *)((char *)a1 + v32);
    long long v34 = (uint64_t *)((char *)a2 + v32);
    uint64_t v35 = v34[1];
    void *v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContactConfirmationModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v8 = v4 + v7[5];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v6(v4 + v7[6], v5);
  v10(v4 + v7[7], v9);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v35(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v12 = v11[5];
  long long v34 = &v8[v12];
  long long v13 = &v9[v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v34, v13, v14);
  v35(&v8[v11[6]], &v9[v11[6]], v10);
  v15(&v8[v11[7]], &v9[v11[7]], v14);
  uint64_t v16 = v11[8];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v25;
    uint64_t v26 = *((void *)v22 + 7);
    *((void *)v21 + 6) = *((void *)v22 + 6);
    *((void *)v21 + 7) = v26;
    v21[64] = v22[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 3) = v27;
    v21[64] = v22[64];
    long long v28 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v28;
  }
  uint64_t v29 = a3[8];
  long long v30 = (void *)((char *)a1 + v29);
  long long v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v35(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v11 = v10[5];
  long long v34 = &v7[v11];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v34, v12, v13);
  v35(&v7[v10[6]], &v8[v10[6]], v9);
  v14(&v7[v10[7]], &v8[v10[7]], v13);
  uint64_t v15 = a2;
  uint64_t v16 = v10[8];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)((char *)a1 + v19 + 8);
  uint64_t v23 = *((void *)v21 + 1);
  if (v22)
  {
    if (v23)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      *(void *)(v20 + 8) = *((void *)v21 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 16) = *((void *)v21 + 2);
      *(void *)(v20 + 24) = *((void *)v21 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 32) = *((void *)v21 + 4);
      *(void *)(v20 + 40) = *((void *)v21 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v20 + 48) = *((void *)v21 + 6);
      *(void *)(v20 + 56) = *((void *)v21 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v20 + 64) = v21[64];
    }
    else
    {
      outlined destroy of PhoneContactHeader(v20);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      long long v25 = *((_OWORD *)v21 + 2);
      long long v24 = *((_OWORD *)v21 + 3);
      long long v26 = *((_OWORD *)v21 + 1);
      *(unsigned char *)(v20 + 64) = v21[64];
      *(_OWORD *)(v20 + 32) = v25;
      *(_OWORD *)(v20 + 48) = v24;
      *(_OWORD *)(v20 + 16) = v26;
    }
  }
  else if (v23)
  {
    *(void *)uint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = *((void *)v21 + 1);
    *(void *)(v20 + 16) = *((void *)v21 + 2);
    *(void *)(v20 + 24) = *((void *)v21 + 3);
    *(void *)(v20 + 32) = *((void *)v21 + 4);
    *(void *)(v20 + 40) = *((void *)v21 + 5);
    *(void *)(v20 + 48) = *((void *)v21 + 6);
    *(void *)(v20 + 56) = *((void *)v21 + 7);
    *(unsigned char *)(v20 + 64) = v21[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    long long v27 = *((_OWORD *)v21 + 1);
    long long v28 = *((_OWORD *)v21 + 2);
    long long v29 = *((_OWORD *)v21 + 3);
    *(unsigned char *)(v20 + 64) = v21[64];
    *(_OWORD *)(v20 + 32) = v28;
    *(_OWORD *)(v20 + 48) = v29;
    *(_OWORD *)(v20 + 16) = v27;
  }
  uint64_t v30 = a3[8];
  long long v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)v15 + v30);
  *long long v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined destroy of PhoneContactHeader(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for ContactConfirmationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a3[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v22(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v22(&v6[v9[6]], &v7[v9[6]], v8);
  v14(&v6[v9[7]], &v7[v9[7]], v13);
  *(_OWORD *)&v6[v9[8]] = *(_OWORD *)&v7[v9[8]];
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  v17[64] = v18[64];
  long long v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  long long v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

void *assignWithTake for ContactConfirmationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  char v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v38(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v13 = v12[5];
  char v37 = &v9[v13];
  uint64_t v14 = &v10[v13];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v37, v14, v15);
  v38(&v9[v12[6]], &v10[v12[6]], v11);
  v16(&v9[v12[7]], &v10[v12[7]], v15);
  uint64_t v17 = v12[8];
  uint64_t v18 = &v9[v17];
  long long v19 = &v10[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[7];
  uint64_t v23 = (uint64_t)a1 + v22;
  long long v24 = (char *)a2 + v22;
  if (!*(void *)((char *)a1 + v22 + 8)) {
    goto LABEL_5;
  }
  uint64_t v25 = *((void *)v24 + 1);
  if (!v25)
  {
    outlined destroy of PhoneContactHeader(v23);
LABEL_5:
    long long v29 = *((_OWORD *)v24 + 3);
    *(_OWORD *)(v23 + 32) = *((_OWORD *)v24 + 2);
    *(_OWORD *)(v23 + 48) = v29;
    *(unsigned char *)(v23 + 64) = v24[64];
    long long v30 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v30;
    goto LABEL_6;
  }
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v24 + 3);
  *(void *)(v23 + 16) = *((void *)v24 + 2);
  *(void *)(v23 + 24) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v24 + 5);
  *(void *)(v23 + 32) = *((void *)v24 + 4);
  *(void *)(v23 + 40) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v24 + 7);
  *(void *)(v23 + 48) = *((void *)v24 + 6);
  *(void *)(v23 + 56) = v28;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v23 + 64) = v24[64];
LABEL_6:
  uint64_t v31 = a3[8];
  uint64_t v32 = (void *)((char *)a1 + v31);
  long long v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259178578);
}

uint64_t sub_259178578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for YesNoConfirmationModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25917863C);
}

uint64_t sub_25917863C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for YesNoConfirmationModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata completion function for ContactConfirmationModel()
{
  uint64_t result = type metadata accessor for YesNoConfirmationModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactConfirmationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25917885CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ContactConfirmationModel.CodingKeys()
{
  return &unk_270723818;
}

uint64_t specialized ContactConfirmationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000259205250 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000259205270 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SingleResultCallHistoryView.singleResultCallHistoryModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SingleResultCallHistoryView();
  return outlined init with copy of SingleResultCallHistoryModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryModel);
}

uint64_t type metadata accessor for SingleResultCallHistoryView()
{
  uint64_t result = type metadata singleton initialization cache for SingleResultCallHistoryView;
  if (!type metadata singleton initialization cache for SingleResultCallHistoryView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SingleResultCallHistoryView.init(singleResultCallHistoryModel:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for SingleResultCallHistoryView();
  ActionHandler.init()();
  return outlined init with take of SingleResultCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryModel);
}

uint64_t SingleResultCallHistoryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SingleResultCallHistoryView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SingleResultCallHistoryModel(v2, (uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>);
  ComponentStack.init(content:)();
  LOBYTE(v2) = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a1, v10, v7);
  *(unsigned char *)(a1
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>>)
                    + 36)) = v2;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t closure #1 in SingleResultCallHistoryView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v66 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v61 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v77 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v60 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v64 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (uint64_t)&v60 - v10;
  uint64_t v73 = type metadata accessor for SeparatorStyle();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for SummaryItemStandardView();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v15 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  uint64_t v18 = MEMORY[0x270FA5388](v68);
  uint64_t v62 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v60 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v74 = (uint64_t)&v60 - v23;
  long long v24 = (void *)(a1 + *(int *)(type metadata accessor for SingleResultCallHistoryView() + 24));
  uint64_t v26 = v24[2];
  uint64_t v25 = v24[3];
  uint64_t v94 = MEMORY[0x263F8D310];
  uint64_t v95 = MEMORY[0x263F779A0];
  uint64_t v92 = v26;
  uint64_t v93 = v25;
  uint64_t v27 = v24[4];
  uint64_t v28 = v24[5];
  uint64_t v90 = MEMORY[0x263F8D310];
  uint64_t v91 = MEMORY[0x263F779A0];
  uint64_t v88 = v27;
  uint64_t v89 = v28;
  uint64_t v29 = v24[6];
  uint64_t v30 = v24[7];
  uint64_t v86 = MEMORY[0x263F8D310];
  uint64_t v87 = MEMORY[0x263F779A0];
  uint64_t v84 = v29;
  uint64_t v85 = v30;
  uint64_t v83 = 0;
  long long v82 = 0u;
  long long v81 = 0u;
  uint64_t v31 = v24[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = SingleResultCallHistoryView.getAvatarView(contactIds:)(v31);
  if (v32)
  {
    uint64_t v80 = MEMORY[0x263F774A8];
    *((void *)&v79 + 1) = MEMORY[0x263F1B728];
    *(void *)&long long v78 = v32;
  }
  else
  {
    uint64_t v80 = 0;
    long long v79 = 0u;
    long long v78 = 0u;
  }
  SummaryItemStandardView.init(text1:text2:text3:text4:thumbnail:)();
  uint64_t v33 = v72;
  uint64_t v34 = v73;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v12, *MEMORY[0x263F76990], v73);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type SummaryItemStandardView and conformance SummaryItemStandardView, MEMORY[0x263F778A8]);
  uint64_t v35 = v70;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v14, v35);
  LOBYTE(v34) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = v71;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v22, v17, v71);
  uint64_t v45 = &v22[*(int *)(v68 + 36)];
  *uint64_t v45 = v34;
  *((void *)v45 + 1) = v37;
  *((void *)v45 + 2) = v39;
  *((void *)v45 + 3) = v41;
  *((void *)v45 + 4) = v43;
  v45[40] = 0;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v44);
  uint64_t v46 = v74;
  outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>((uint64_t)v22, v74);
  uint64_t v47 = type metadata accessor for SingleResultCallHistoryModel();
  uint64_t v48 = v77;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v24 + *(int *)(v47 + 36), v77, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v48, 1, v76) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v48, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    uint64_t v49 = 1;
    uint64_t v50 = v67;
    uint64_t v51 = v66;
    uint64_t v52 = v65;
    uint64_t v53 = (uint64_t)v64;
    uint64_t v54 = v63;
  }
  else
  {
    uint64_t v55 = v60;
    outlined init with take of SingleResultCallHistoryModel(v48, v60, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    uint64_t v51 = v66;
    uint64_t v56 = (uint64_t)v61;
    outlined init with copy of SingleResultCallHistoryModel(v55, (uint64_t)&v61[*(int *)(v66 + 20)], (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
    ActionHandler.init()();
    outlined destroy of SearchCallHistoryBinaryButtonModel(v55);
    uint64_t v54 = v63;
    outlined init with take of SingleResultCallHistoryModel(v56, v63, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
    uint64_t v49 = 0;
    uint64_t v50 = v67;
    uint64_t v52 = v65;
    uint64_t v53 = (uint64_t)v64;
  }
  uint64_t v57 = (uint64_t)v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v54, v49, 1, v51);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v46, v57, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v54, v53, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v57, v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v53, v50 + *(int *)(v58 + 48), &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v54, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v46, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v53, &demangling cache variable for type metadata for SearchCallHistoryBinaryButtonView?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v57, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
}

uint64_t associated type witness table accessor for View.Body : View in SingleResultCallHistoryView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t SingleResultCallHistoryView.getAvatarView(contactIds:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = type metadata accessor for ImageElementView();
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  uint64_t v11 = *MEMORY[0x263F764E8];
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v20 = v8;
  v12(v5, v11, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  uint64_t v19 = a1;
  uint64_t v13 = type metadata accessor for _ProtoIdiom();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2591FFD20;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x263F76468], v13);
  specialized Set.init(_nonEmptyArrayLiteral:)(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  ImageElementView.init(_:)();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
  uint64_t v17 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  return v17;
}

uint64_t protocol witness for View.body.getter in conformance SingleResultCallHistoryView@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SingleResultCallHistoryModel(v3, (uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  outlined init with take of SingleResultCallHistoryModel((uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>);
  ComponentStack.init(content:)();
  LOBYTE(v3) = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v10, v7);
  *(unsigned char *)(a2
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>>)
                    + 36)) = v3;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

char *initializeBufferWithCopyOfBuffer for SingleResultCallHistoryView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    unint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *(void *)unint64_t v15 = *(char **)((char *)a2 + v14);
    *((void *)v15 + 1) = v17;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v14 + 24);
    *((void *)v15 + 2) = *(char **)((char *)a2 + v14 + 16);
    *((void *)v15 + 3) = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v14 + 40);
    *((void *)v15 + 4) = *(char **)((char *)a2 + v14 + 32);
    *((void *)v15 + 5) = v19;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v14 + 56);
    *((void *)v15 + 6) = *(char **)((char *)a2 + v14 + 48);
    *((void *)v15 + 7) = v20;
    *((void *)v15 + 8) = *(char **)((char *)a2 + v14 + 64);
    uint64_t v21 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
    __dst = &v15[v21];
    uint64_t v22 = (char *)(v16 + v21);
    uint64_t v23 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v39 = *((void *)v23 - 1);
    long long v24 = *(unsigned int (**)(char *, uint64_t, int *))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
      memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      v38(__dst, v22, v26);
      uint64_t v27 = v23[5];
      uint64_t v28 = &__dst[v27];
      uint64_t v29 = &v22[v27];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
      v31(v28, v29, v30);
      v38(&__dst[v23[6]], &v22[v23[6]], v26);
      v31(&__dst[v23[7]], &v22[v23[7]], v30);
      uint64_t v32 = v23[8];
      uint64_t v33 = &__dst[v32];
      uint64_t v34 = &v22[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      uint64_t v36 = *(void (**)(char *, void, uint64_t, int *))(v39 + 56);
      swift_bridgeObjectRetain();
      v36(__dst, 0, 1, v23);
    }
  }
  return v7;
}

uint64_t destroy for SingleResultCallHistoryView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = &v6[*(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36)];
  uint64_t v8 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
    v11(v7, v10);
    uint64_t v12 = &v7[v8[5]];
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
    v14(v12, v13);
    v11(&v7[v8[6]], v10);
    v14(&v7[v8[7]], v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SingleResultCallHistoryView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  unint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *unint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v16[3];
  long long v15[2] = v16[2];
  v15[3] = v18;
  uint64_t v19 = v16[5];
  v15[4] = v16[4];
  v15[5] = v19;
  uint64_t v20 = v16[7];
  v15[6] = v16[6];
  v15[7] = v20;
  v15[8] = v16[8];
  uint64_t v21 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  __dst = (char *)v15 + v21;
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v39 = *((void *)v23 - 1);
  long long v24 = *(unsigned int (**)(char *, uint64_t, int *))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    v38(__dst, v22, v26);
    uint64_t v27 = v23[5];
    uint64_t v28 = &__dst[v27];
    uint64_t v29 = &v22[v27];
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    v38(&__dst[v23[6]], &v22[v23[6]], v26);
    v31(&__dst[v23[7]], &v22[v23[7]], v30);
    uint64_t v32 = v23[8];
    uint64_t v33 = &__dst[v32];
    uint64_t v34 = &v22[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = *(void (**)(char *, void, uint64_t, int *))(v39 + 56);
    swift_bridgeObjectRetain();
    v36(__dst, 0, 1, v23);
  }
  return a1;
}

uint64_t assignWithCopy for SingleResultCallHistoryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = v15[2];
  v14[3] = v15[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v14[4] = v15[4];
  void v14[5] = v15[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[6] = v15[6];
  v14[7] = v15[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[8] = v15[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  uint64_t v17 = (char *)v14 + v16;
  uint64_t v18 = (char *)v15 + v16;
  uint64_t v19 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  LODWORD(v11) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (!v11)
  {
    if (!v22)
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24);
      v45(v17, v18, v34);
      uint64_t v35 = v19[5];
      uint64_t v36 = &v17[v35];
      uint64_t v37 = &v18[v35];
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24);
      v39(v36, v37, v38);
      v45(&v17[v19[6]], &v18[v19[6]], v34);
      v39(&v17[v19[7]], &v18[v19[7]], v38);
      uint64_t v40 = v19[8];
      uint64_t v41 = &v17[v40];
      uint64_t v42 = &v18[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      *((void *)v41 + 1) = *((void *)v42 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SearchCallHistoryBinaryButtonModel((uint64_t)v17);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v17, v18, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  v44(v17, v18, v23);
  uint64_t v24 = v19[5];
  uint64_t v43 = &v17[v24];
  uint64_t v25 = &v18[v24];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  v27(v43, v25, v26);
  v44(&v17[v19[6]], &v18[v19[6]], v23);
  v27(&v17[v19[7]], &v18[v19[7]], v26);
  uint64_t v28 = v19[8];
  uint64_t v29 = &v17[v28];
  uint64_t v30 = &v18[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  uint64_t v31 = *(void (**)(char *, void, uint64_t, int *))(v20 + 56);
  swift_bridgeObjectRetain();
  v31(v17, 0, 1, v19);
  return a1;
}

_OWORD *initializeWithTake for SingleResultCallHistoryView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  long long v14 = *((_OWORD *)v12 + 3);
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *((_OWORD *)v11 + 3) = v14;
  *((void *)v11 + 8) = *((void *)v12 + 8);
  uint64_t v15 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    v28(v16, v17, v21);
    uint64_t v22 = v18[5];
    uint64_t v27 = &v16[v22];
    uint64_t v23 = &v17[v22];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
    v25(v27, v23, v24);
    v28(&v16[v18[6]], &v17[v18[6]], v21);
    v25(&v16[v18[7]], &v17[v18[7]], v24);
    *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t assignWithTake for SingleResultCallHistoryView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  long long v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = v13[7];
  v12[6] = v13[6];
  v12[7] = v17;
  swift_bridgeObjectRelease();
  v12[8] = v13[8];
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
  uint64_t v19 = (char *)v12 + v18;
  uint64_t v20 = (char *)v13 + v18;
  uint64_t v21 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, int *))(v22 + 48);
  LODWORD(v9) = v23(v19, 1, v21);
  int v24 = v23(v20, 1, v21);
  if (!v9)
  {
    if (!v24)
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40);
      v45(v19, v20, v32);
      uint64_t v33 = v21[5];
      uint64_t v34 = &v19[v33];
      uint64_t v35 = &v20[v33];
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40);
      v37(v34, v35, v36);
      v45(&v19[v21[6]], &v20[v21[6]], v32);
      v37(&v19[v21[7]], &v20[v21[7]], v36);
      uint64_t v38 = v21[8];
      uint64_t v39 = &v19[v38];
      uint64_t v40 = &v20[v38];
      uint64_t v42 = *(void *)v40;
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = v42;
      *((void *)v39 + 1) = v41;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of SearchCallHistoryBinaryButtonModel((uint64_t)v19);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
    memcpy(v19, v20, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
  v44(v19, v20, v25);
  uint64_t v26 = v21[5];
  uint64_t v43 = &v19[v26];
  uint64_t v27 = &v20[v26];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
  v29(v43, v27, v28);
  v44(&v19[v21[6]], &v20[v21[6]], v25);
  v29(&v19[v21[7]], &v20[v21[7]], v28);
  *(_OWORD *)&v19[v21[8]] = *(_OWORD *)&v20[v21[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultCallHistoryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25917AFEC);
}

uint64_t sub_25917AFEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      long long v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for SingleResultCallHistoryModel();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SingleResultCallHistoryView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25917B138);
}

void *sub_25917B138(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SingleResultCallHistoryModel();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for SingleResultCallHistoryView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SingleResultCallHistoryModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, SearchCallHistoryBinaryButtonView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  unint64_t v1 = (int *)(type metadata accessor for SingleResultCallHistoryView() - 8);
  unint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  int v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  int v5 = (char *)v2 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = &v5[*(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36)];
  uint64_t v7 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v6, v8);
    uint64_t v10 = &v6[v7[5]];
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
    v12(v10, v11);
    v9(&v6[v7[6]], v8);
    v12(&v6[v7[7]], v11);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SingleResultCallHistoryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SingleResultCallHistoryView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in SingleResultCallHistoryView.body.getter(v4, a1);
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of SearchCallHistoryBinaryButtonModel?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined init with copy of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of SingleResultCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t YesNoConfirmationModel.yesText.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t YesNoConfirmationModel.yesText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.yesText.modify(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t YesNoConfirmationModel.yesAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for YesNoConfirmationModel()
{
  uint64_t result = type metadata singleton initialization cache for YesNoConfirmationModel;
  if (!type metadata singleton initialization cache for YesNoConfirmationModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for YesNoConfirmationModel.yesAction : YesNoConfirmationModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for YesNoConfirmationModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t YesNoConfirmationModel.yesAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.yesAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of YesNoConfirmationModel.noText()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t YesNoConfirmationModel.noText.getter()
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for YesNoConfirmationModel.noText : YesNoConfirmationModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for YesNoConfirmationModel.noText : YesNoConfirmationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t YesNoConfirmationModel.noText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.noText.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of YesNoConfirmationModel.noAction()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t YesNoConfirmationModel.noAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for YesNoConfirmationModel.noAction : YesNoConfirmationModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for YesNoConfirmationModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t YesNoConfirmationModel.noAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*YesNoConfirmationModel.noAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t YesNoConfirmationModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for YesNoConfirmationModel() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t YesNoConfirmationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for YesNoConfirmationModel() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*YesNoConfirmationModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

void YesNoConfirmationModel.init(yesText:yesAction:noText:noAction:)(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(a2 + *(int *)(type metadata accessor for YesNoConfirmationModel() + 32));
  *uint64_t v3 = 0xD000000000000011;
  v3[1] = 0x8000000259204FD0;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v4 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  CodableAceObject.init(wrappedValue:)();
}

uint64_t YesNoConfirmationModel.CodingKeys.stringValue.getter(char a1)
{
  return *(void *)&aYestext_1[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance YesNoConfirmationModel.CodingKeys()
{
  return YesNoConfirmationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance YesNoConfirmationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized YesNoConfirmationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance YesNoConfirmationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance YesNoConfirmationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t YesNoConfirmationModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<YesNoConfirmationModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for YesNoConfirmationModel();
    v13[2] = v3;
    v13[3] = v9;
    char v17 = 1;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v11 = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v13[0] = v11;
    v13[1] = v10;
    char v16 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v15 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v14 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys);
  }
  return result;
}

uint64_t YesNoConfirmationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v50 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)v42 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)v42 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<YesNoConfirmationModel.CodingKeys>);
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for YesNoConfirmationModel();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &v18[*(int *)(v16 + 32)];
  *(void *)uint64_t v19 = 0xD000000000000011;
  *((void *)v19 + 1) = 0x8000000259204FD0;
  uint64_t v59 = v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type YesNoConfirmationModel.CodingKeys and conformance YesNoConfirmationModel.CodingKeys();
  uint64_t v58 = v14;
  uint64_t v20 = (uint64_t)v60;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v54;
    uint64_t v47 = v10;
    uint64_t v48 = v15;
    uint64_t v60 = a1;
    uint64_t v22 = v18;
    char v65 = 0;
    uint64_t v23 = lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    int v24 = v55;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v44 = v23;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    uint64_t v46 = (uint64_t)v22;
    v25(v22, v24, v7);
    char v64 = 1;
    uint64_t v26 = v21;
    uint64_t v27 = lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t v28 = v52;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v45 = v7;
    v42[1] = v27;
    uint64_t v43 = (void (*)(uint64_t, char *, uint64_t))v25;
    uint64_t v29 = v48;
    uint64_t v30 = v26;
    uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v31(v46 + *(int *)(v48 + 20), v30, v28);
    char v63 = 2;
    uint64_t v32 = v47;
    uint64_t v55 = 0;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v43(v46 + *(int *)(v29 + 24), v32, v7);
    char v62 = 3;
    uint64_t v33 = v50;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v34 = v46;
    v31(v46 + *(int *)(v29 + 28), v33, v28);
    char v61 = 4;
    uint64_t v35 = v57;
    uint64_t v36 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v37 = v59;
    uint64_t v38 = v36;
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v35);
    swift_bridgeObjectRelease();
    void *v37 = v38;
    v37[1] = v40;
    outlined init with copy of YesNoConfirmationModel(v34, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    return outlined destroy of YesNoConfirmationModel(v34);
  }
}

uint64_t outlined init with copy of YesNoConfirmationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of YesNoConfirmationModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for YesNoConfirmationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t instantiation function for generic protocol witness table for YesNoConfirmationModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in YesNoConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel);
}

uint64_t base witness table accessor for Encodable in YesNoConfirmationModel()
{
  return lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel);
}

uint64_t lazy protocol witness table accessor for type YesNoConfirmationModel and conformance YesNoConfirmationModel(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for YesNoConfirmationModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance YesNoConfirmationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return YesNoConfirmationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance YesNoConfirmationModel(void *a1)
{
  return YesNoConfirmationModel.encode(to:)(a1);
}

uint64_t sub_25917CD6C@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_25917CDB8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25917CE14@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for YesNoConfirmationModel(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v19(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v19(&a1[a3[6]], &a2[a3[6]], v7);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[8];
    char v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)char v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for YesNoConfirmationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v5(a1 + a2[6], v4);
  v8(a1 + a2[7], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v17(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v17(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v16(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v16(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v13(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v13(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for YesNoConfirmationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  char v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v18(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v18(a1 + a3[6], a2 + a3[6], v6);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YesNoConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25917D630);
}

uint64_t sub_25917D630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for YesNoConfirmationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25917D764);
}

uint64_t sub_25917D764(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for YesNoConfirmationModel()
{
  type metadata accessor for Loggable<String>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for YesNoConfirmationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25917DA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for YesNoConfirmationModel.CodingKeys()
{
  return &unk_270723910;
}

uint64_t specialized YesNoConfirmationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x74786554736579 && a2 == 0xE700000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746341736579 && a2 == 0xE90000000000006ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x747865546F6ELL && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697463416F6ELL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t property wrapper backing initializer of AmbientEmergencyCountdown.viewModel()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t AmbientEmergencyCountdown.viewModel.getter()
{
  return swift_retain();
}

uint64_t AmbientEmergencyCountdown.viewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*AmbientEmergencyCountdown.viewModel.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t AmbientEmergencyCountdown.$viewModel.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = type metadata accessor for EmergencyCountdownViewModel(0);
  uint64_t v4 = _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return MEMORY[0x270EFFB90](v1, v2, v3, v4);
}

uint64_t AmbientEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = type metadata accessor for AmbientEmergencyCountdown();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
  uint64_t v7 = MEMORY[0x270FA5388](v46);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v38 - v10;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>>.Storage);
  MEMORY[0x270FA5388](v45);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
  uint64_t v16 = MEMORY[0x270FA5388](v44);
  char v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v21 = v1;
  uint64_t v22 = *(void **)(v1 + 16);
  if (v22)
  {
    id v23 = v22;
    char v24 = dispatch thunk of Context.isInAmbient.getter();

    if (v24)
    {
      *(void *)uint64_t v15 = static VerticalAlignment.top.getter();
      *((void *)v15 + 1) = 0;
      unsigned char v15[16] = 0;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
      closure #1 in AmbientEmergencyCountdown.body.getter(v21, &v15[*(int *)(v25 + 44)]);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
      uint64_t v26 = (void (**)())&v18[*(int *)(v44 + 36)];
      char *v26 = closure #2 in AmbientEmergencyCountdown.body.getter;
      v26[1] = 0;
      v26[2] = 0;
      v26[3] = 0;
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
      outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v18, (uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v20, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      _ConditionalContent<>.init(storage:)();
      uint64_t v27 = (uint64_t)v20;
      uint64_t v28 = &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>;
    }
    else
    {
      uint64_t v29 = v21;
      uint64_t v30 = v40;
      outlined init with copy of AmbientEmergencyCountdown(v29, v40);
      unint64_t v31 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      uint64_t v32 = swift_allocObject();
      outlined init with take of AmbientEmergencyCountdown(v30, v32 + v31);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>);
      ComponentStack.init(content:)();
      uint64_t v34 = v41;
      uint64_t v33 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v9, v6, v42);
      uint64_t v35 = (void (**)())&v9[*(int *)(v46 + 36)];
      *uint64_t v35 = closure #4 in AmbientEmergencyCountdown.body.getter;
      v35[1] = 0;
      v35[2] = 0;
      v35[3] = 0;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v33);
      uint64_t v36 = v43;
      outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v9, v43, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v36, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      _ConditionalContent<>.init(storage:)();
      uint64_t v27 = v36;
      uint64_t v28 = &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>;
    }
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v27, v28);
  }
  else
  {
    type metadata accessor for Context();
    _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for AmbientEmergencyCountdown()
{
  uint64_t result = type metadata singleton initialization cache for AmbientEmergencyCountdown;
  if (!type metadata singleton initialization cache for AmbientEmergencyCountdown) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t closure #1 in AmbientEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  AmbientEmergencyCountdown.countdownLabel.getter((uint64_t)v28);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  closure #1 in closure #1 in AmbientEmergencyCountdown.body.getter(a1, (uint64_t *)&v9[*(int *)(v10 + 44)]);
  long long v26 = v28[6];
  v27[0] = v29[0];
  *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v29 + 9);
  long long v22 = v28[2];
  long long v23 = v28[3];
  long long v24 = v28[4];
  long long v25 = v28[5];
  long long v20 = v28[0];
  long long v21 = v28[1];
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  long long v11 = v27[0];
  v30[6] = v26;
  v31[0] = v27[0];
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v27 + 9);
  long long v12 = v22;
  long long v13 = v23;
  v30[2] = v22;
  v30[3] = v23;
  long long v15 = v24;
  long long v14 = v25;
  v30[4] = v24;
  v30[5] = v25;
  long long v17 = v20;
  long long v16 = v21;
  v30[0] = v20;
  v30[1] = v21;
  a2[6] = v26;
  a2[7] = v11;
  *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v27 + 9);
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v15;
  a2[5] = v14;
  *a2 = v17;
  a2[1] = v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, (uint64_t)a2 + *(int *)(v18 + 48), &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v30);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>);
  v32[6] = v26;
  v33[0] = v27[0];
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)v27 + 9);
  v32[2] = v22;
  v32[3] = v23;
  v32[4] = v24;
  v32[5] = v25;
  v32[0] = v20;
  v32[1] = v21;
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v32);
}

uint64_t AmbientEmergencyCountdown.countdownLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + 8) + 1240);
  uint64_t v7 = swift_retain();
  uint64_t v8 = v6(v7);
  uint64_t v10 = v9;
  swift_release();
  uint64_t v52 = v8;
  uint64_t v53 = v10;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v51 = v1;
  long long v14 = *(void **)(v1 + 16);
  if (!v14) {
    goto LABEL_6;
  }
  uint64_t v15 = v11;
  uint64_t v16 = v12;
  char v17 = v13 & 1;
  id v18 = v14;
  dispatch thunk of Context.isInAmbient.getter();

  uint64_t v19 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  static Font.system(size:weight:design:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for Font.Design?);
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  LOBYTE(v18) = v24 & 1;
  outlined consume of Text.Storage(v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v52 = static Color.white.getter();
  uint64_t v25 = Text.foregroundStyle<A>(_:)();
  uint64_t v27 = v26;
  LOBYTE(v16) = v28 & 1;
  outlined consume of Text.Storage(v20, v22, (char)v18);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v29 = Text.fontWeight(_:)();
  uint64_t v48 = v30;
  uint64_t v49 = v29;
  char v32 = v31;
  uint64_t v50 = v33;
  outlined consume of Text.Storage(v25, v27, v16);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void **)(v51 + 16);
  if (v34)
  {
    id v35 = v34;
    dispatch thunk of Context.isInAmbient.getter();

    id v36 = v35;
    dispatch thunk of Context.isInAmbient.getter();

    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v37 = v52;
    char v38 = v53;
    uint64_t v39 = v54;
    char v40 = v55;
    uint64_t v41 = v56;
    uint64_t v42 = v57;
    if (one-time initialization token for emergencyRed != -1) {
      swift_once();
    }
    uint64_t v43 = static Color.emergencyRed;
    swift_retain();
    char v44 = static Edge.Set.all.getter();
    uint64_t result = static Edge.Set.all.getter();
    uint64_t v46 = v48;
    *(void *)a1 = v49;
    *(void *)(a1 + 8) = v46;
    *(unsigned char *)(a1 + 16) = v32 & 1;
    *(void *)(a1 + 24) = v50;
    *(void *)(a1 + 32) = v37;
    *(unsigned char *)(a1 + 40) = v38;
    *(void *)(a1 + 48) = v39;
    *(unsigned char *)(a1 + 56) = v40;
    *(void *)(a1 + 64) = v41;
    *(void *)(a1 + 72) = v42;
    *(void *)(a1 + 80) = v43;
    *(unsigned char *)(a1 + 88) = v44;
    *(_WORD *)(a1 + 89) = 256;
    *(unsigned char *)(a1 + 96) = result;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(unsigned char *)(a1 + 136) = 1;
  }
  else
  {
LABEL_6:
    type metadata accessor for Context();
    _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in AmbientEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v62 = a2;
  uint64_t v3 = type metadata accessor for AmbientEmergencyCountdown();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v64 = *(void *)(v65 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v63 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>);
  uint64_t v74 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BinaryButtonView();
  uint64_t v79 = *(void *)(v6 - 8);
  uint64_t v80 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v76 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)
      - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v78);
  uint64_t v75 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v77 = (uint64_t)&v61 - v10;
  uint64_t v11 = a1;
  uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 8) + 632);
  uint64_t v13 = swift_retain();
  uint64_t v14 = v12(v13);
  uint64_t v16 = v15;
  swift_release();
  uint64_t v86 = v14;
  uint64_t v87 = v16;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  static Font.largeTitle.getter();
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  LOBYTE(v12) = v25;
  swift_release();
  outlined consume of Text.Storage(v17, v19, v21);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v70 = Text.fontWeight(_:)();
  uint64_t v69 = v26;
  uint64_t v71 = v27;
  int v68 = v28 & 1;
  outlined consume of Text.Storage(v22, v24, v12 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = swift_getKeyPath();
  uint64_t v29 = v11;
  uint64_t v30 = v63;
  outlined init with copy of AmbientEmergencyCountdown(v11, v63);
  uint64_t v31 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v65 = ((v31 + 16) & ~v31) + v64;
  uint64_t v61 = (v31 + 16) & ~v31;
  uint64_t v64 = v31 | 7;
  uint64_t v32 = swift_allocObject() + v61;
  uint64_t v33 = v30;
  outlined init with take of AmbientEmergencyCountdown(v30, v32);
  uint64_t v82 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  uint64_t v36 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v37 = type metadata accessor for TitleOnlyLabelStyle();
  uint64_t v38 = _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, MEMORY[0x263F19AB8]);
  uint64_t v86 = v34;
  uint64_t v87 = v37;
  uint64_t v88 = v36;
  uint64_t v89 = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = v34;
  uint64_t v87 = v35;
  uint64_t v88 = v36;
  uint64_t v89 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  char v40 = v72;
  Button.init(action:label:)();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.if<A>(_:transform:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>);
  uint64_t v41 = v73;
  uint64_t v42 = View.eraseToAnyView()();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v74 + 8);
  v43(v40, v41);
  uint64_t v89 = MEMORY[0x263F1B728];
  uint64_t v90 = MEMORY[0x263F774A8];
  uint64_t v86 = v42;
  outlined init with copy of AmbientEmergencyCountdown(v29, v33);
  uint64_t v44 = swift_allocObject();
  outlined init with take of AmbientEmergencyCountdown(v33, v44 + v61);
  uint64_t v81 = v29;
  Button.init(action:label:)();
  uint64_t v45 = View.eraseToAnyView()();
  v43(v40, v41);
  uint64_t v85 = MEMORY[0x263F774A8];
  uint64_t v84 = MEMORY[0x263F1B728];
  uint64_t v83 = v45;
  uint64_t v46 = v76;
  BinaryButtonView.init(primaryButton:secondaryButton:)();
  uint64_t v47 = swift_getKeyPath();
  uint64_t v49 = v79;
  uint64_t v48 = v80;
  uint64_t v50 = (uint64_t)v75;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v46, v80);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(v78 + 44));
  *uint64_t v51 = v47;
  v51[1] = 2;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v48);
  uint64_t v52 = v77;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v50, v77, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v52, v50, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  uint64_t v53 = v70;
  uint64_t v54 = v62;
  uint64_t v55 = v69;
  *char v62 = v70;
  v54[1] = v55;
  char v56 = v68;
  *((unsigned char *)v54 + 16) = v68;
  uint64_t v57 = KeyPath;
  v54[3] = v71;
  v54[4] = v57;
  v54[5] = 1;
  *((unsigned char *)v54 + 48) = 0;
  v54[7] = v66;
  *((unsigned char *)v54 + 64) = 1;
  uint64_t v58 = v54;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v50, (uint64_t)v58 + *(int *)(v59 + 48), &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined copy of Text.Storage(v53, v55, v56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v52, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v50, &demangling cache variable for type metadata for ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>);
  outlined consume of Text.Storage(v53, v55, v56);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void closure #2 in AmbientEmergencyCountdown.body.getter()
{
}

void closure #3 in AmbientEmergencyCountdown.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AmbientEmergencyCountdown();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v75 = (void (*)(void, void, void))v7;
  uint64_t v76 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v73 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for BinaryButtonView();
  uint64_t v88 = *(void *)(v82 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v82);
  uint64_t v79 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v83 = (char *)v69 - v12;
  uint64_t v13 = type metadata accessor for Divider();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v86 = v13;
  uint64_t v87 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v85 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v84 = (char *)v69 - v17;
  type metadata accessor for Context();
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  swift_retain();
  uint64_t v18 = EnvironmentObject.init()();
  uint64_t v80 = v19;
  uint64_t v81 = (void *)v18;
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  uint64_t v20 = ObservedObject.init(wrappedValue:)();
  uint64_t v77 = v21;
  uint64_t v78 = v20;
  AmbientEmergencyCountdown.countdownLabel.getter((uint64_t)&v125);
  v107[6] = v131;
  v108[0] = v132[0];
  *(_OWORD *)((char *)v108 + 9) = *(_OWORD *)((char *)v132 + 9);
  v107[2] = v127;
  v107[3] = v128;
  v107[4] = v129;
  v107[5] = v130;
  v107[0] = v125;
  v107[1] = v126;
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v133, 0.0, 1, 0.0, 1);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)v107);
  long long v121 = v145;
  long long v122 = v146;
  long long v123 = v147;
  long long v124 = v148;
  long long v117 = v141;
  long long v118 = v142;
  long long v119 = v143;
  long long v120 = v144;
  long long v113 = v137;
  long long v114 = v138;
  long long v115 = v139;
  long long v116 = v140;
  long long v109 = v133;
  long long v110 = v134;
  long long v111 = v135;
  long long v112 = v136;
  Divider.init()();
  uint64_t v22 = a1;
  uint64_t v70 = v6;
  outlined init with copy of AmbientEmergencyCountdown(a1, (uint64_t)v6);
  uint64_t v23 = *(unsigned __int8 *)(v74 + 80);
  uint64_t v24 = ((v23 + 16) & ~v23) + v5;
  uint64_t v25 = (v23 + 16) & ~v23;
  uint64_t v74 = v25;
  uint64_t v71 = v23 | 7;
  uint64_t v72 = v24;
  uint64_t v26 = swift_allocObject();
  outlined init with take of AmbientEmergencyCountdown((uint64_t)v6, v26 + v25);
  uint64_t v90 = a1;
  v69[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  uint64_t v29 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v30 = type metadata accessor for TitleOnlyLabelStyle();
  uint64_t v31 = _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, MEMORY[0x263F19AB8]);
  *(void *)&long long v133 = v27;
  *((void *)&v133 + 1) = v30;
  *(void *)&long long v134 = v29;
  *((void *)&v134 + 1) = v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v133 = v27;
  *((void *)&v133 + 1) = v28;
  *(void *)&long long v134 = v29;
  *((void *)&v134 + 1) = OpaqueTypeConformance2;
  v69[1] = swift_getOpaqueTypeConformance2();
  uint64_t v33 = v73;
  Button.init(action:label:)();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.if<A>(_:transform:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.if<A>(_:transform:)>>.0>);
  uint64_t v34 = v75;
  uint64_t v35 = View.eraseToAnyView()();
  uint64_t v36 = *(void (**)(void, void))(v76 + 8);
  v36(v33, v34);
  *(void *)&long long v135 = MEMORY[0x263F774A8];
  *((void *)&v134 + 1) = MEMORY[0x263F1B728];
  *(void *)&long long v133 = v35;
  uint64_t v37 = (uint64_t)v70;
  outlined init with copy of AmbientEmergencyCountdown(v22, (uint64_t)v70);
  uint64_t v38 = swift_allocObject();
  outlined init with take of AmbientEmergencyCountdown(v37, v38 + v74);
  uint64_t v89 = v22;
  Button.init(action:label:)();
  uint64_t v39 = View.eraseToAnyView()();
  v36(v33, v34);
  *(void *)&long long v127 = MEMORY[0x263F774A8];
  *((void *)&v126 + 1) = MEMORY[0x263F1B728];
  *(void *)&long long v125 = v39;
  char v40 = v83;
  BinaryButtonView.init(primaryButton:secondaryButton:)();
  long long v103 = v121;
  long long v104 = v122;
  long long v105 = v123;
  long long v106 = v124;
  long long v99 = v117;
  long long v100 = v118;
  long long v101 = v119;
  long long v102 = v120;
  long long v95 = v113;
  long long v96 = v114;
  long long v97 = v115;
  long long v98 = v116;
  long long v91 = v109;
  long long v92 = v110;
  long long v93 = v111;
  long long v94 = v112;
  uint64_t v76 = *(void *)(v87 + 16);
  uint64_t v41 = v85;
  ((void (*)(char *, char *, uint64_t))v76)(v85, v84, v86);
  uint64_t v75 = *(void (**)(void, void, void))(v88 + 16);
  uint64_t v42 = v79;
  uint64_t v43 = v82;
  v75(v79, v40, v82);
  long long v44 = v104;
  v132[5] = v103;
  v132[6] = v104;
  long long v45 = v105;
  long long v46 = v106;
  v132[7] = v105;
  v132[8] = v106;
  long long v47 = v99;
  long long v48 = v100;
  v132[1] = v99;
  v132[2] = v100;
  long long v49 = v101;
  long long v50 = v102;
  v132[3] = v101;
  v132[4] = v102;
  long long v51 = v95;
  long long v52 = v96;
  long long v129 = v95;
  long long v130 = v96;
  long long v53 = v97;
  long long v54 = v98;
  long long v131 = v97;
  v132[0] = v98;
  long long v55 = v91;
  long long v56 = v92;
  long long v125 = v91;
  long long v126 = v92;
  long long v57 = v93;
  long long v58 = v94;
  long long v127 = v93;
  long long v128 = v94;
  *(_OWORD *)(a2 + 224) = v103;
  *(_OWORD *)(a2 + 240) = v44;
  *(_OWORD *)(a2 + 256) = v45;
  *(_OWORD *)(a2 + 272) = v46;
  *(_OWORD *)(a2 + 160) = v47;
  *(_OWORD *)(a2 + 176) = v48;
  *(_OWORD *)(a2 + 192) = v49;
  *(_OWORD *)(a2 + 208) = v50;
  *(_OWORD *)(a2 + 96) = v51;
  *(_OWORD *)(a2 + 112) = v52;
  *(_OWORD *)(a2 + 128) = v53;
  *(_OWORD *)(a2 + 144) = v54;
  *(_OWORD *)(a2 + 32) = v55;
  *(_OWORD *)(a2 + 48) = v56;
  uint64_t v59 = v80;
  uint64_t v60 = v81;
  *(void *)a2 = v81;
  *(void *)(a2 + 8) = v59;
  uint64_t v61 = v77;
  *(void *)(a2 + 16) = v78;
  *(void *)(a2 + 24) = v61;
  *(_OWORD *)(a2 + 64) = v57;
  *(_OWORD *)(a2 + 80) = v58;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView));
  uint64_t v63 = v41;
  uint64_t v64 = v86;
  ((void (*)(uint64_t, char *, uint64_t))v76)(a2 + *(int *)(v62 + 64), v63, v86);
  v75(a2 + *(int *)(v62 + 80), v42, v43);
  id v65 = v60;
  swift_retain();
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v125);
  id v66 = v65;
  swift_retain();
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v109);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v88 + 8);
  v67(v83, v43);
  int v68 = *(void (**)(char *, uint64_t))(v87 + 8);
  v68(v84, v64);
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v109);
  swift_release();

  v67(v42, v43);
  v68(v85, v64);
  long long v145 = v103;
  long long v146 = v104;
  long long v147 = v105;
  long long v148 = v106;
  long long v141 = v99;
  long long v142 = v100;
  long long v143 = v101;
  long long v144 = v102;
  long long v137 = v95;
  long long v138 = v96;
  long long v139 = v97;
  long long v140 = v98;
  long long v133 = v91;
  long long v134 = v92;
  long long v135 = v93;
  long long v136 = v94;
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>((uint64_t)&v133);
  swift_release();
}

uint64_t outlined init with copy of AmbientEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AmbientEmergencyCountdown();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of AmbientEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AmbientEmergencyCountdown();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #3 in AmbientEmergencyCountdown.body.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AmbientEmergencyCountdown() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  closure #3 in AmbientEmergencyCountdown.body.getter(v4, a1);
}

void closure #4 in AmbientEmergencyCountdown.body.getter()
{
}

void closure #2 in AmbientEmergencyCountdown.body.getter(const char *a1)
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_25915D000, oslog, v3, a1, v4, 2u);
    MEMORY[0x25A2D96D0](v4, -1, -1);
  }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #1 in AmbientEmergencyCountdown.cancelButton.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 8);
  type metadata accessor for AmbientEmergencyCountdown();
  swift_retain();
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(void *)v5 + 1264))(v4);
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in AmbientEmergencyCountdown.cancelButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 8) + 488);
  uint64_t v12 = swift_retain();
  uint64_t v13 = v11(v12);
  uint64_t v15 = v14;
  swift_release();
  uint64_t v24 = v13;
  uint64_t v25 = v15;
  lazy protocol witness table accessor for type String and conformance String();
  Label<>.init<A>(_:systemImage:)();
  uint64_t v16 = *(void **)(a1 + 16);
  if (v16)
  {
    id v17 = v16;
    dispatch thunk of Context.isInAmbient.getter();

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
    uint64_t v18 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
    uint64_t v19 = type metadata accessor for TitleOnlyLabelStyle();
    uint64_t v20 = _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, MEMORY[0x263F19AB8]);
    uint64_t v24 = v3;
    uint64_t v25 = v19;
    uint64_t v26 = v18;
    uint64_t v27 = v20;
    swift_getOpaqueTypeConformance2();
    View.if<A>(_:transform:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v10, v7);
  }
  else
  {
    type metadata accessor for Context();
    _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in AmbientEmergencyCountdown.callButton.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 8);
  type metadata accessor for AmbientEmergencyCountdown();
  swift_retain();
  ActionHandler.wrappedValue.getter();
  uint64_t v6 = *(void **)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = *(void (**)(char *, id))(*(void *)v5 + 1256);
    id v8 = v6;
    v7(v4, v8);
    swift_release();

    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    type metadata accessor for Context();
    _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #2 in AmbientEmergencyCountdown.callButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 8) + 584);
  uint64_t v12 = swift_retain();
  uint64_t v13 = v11(v12);
  uint64_t v15 = v14;
  swift_release();
  uint64_t v24 = v13;
  uint64_t v25 = v15;
  lazy protocol witness table accessor for type String and conformance String();
  Label<>.init<A>(_:systemImage:)();
  uint64_t v16 = *(void **)(a1 + 16);
  if (v16)
  {
    id v17 = v16;
    dispatch thunk of Context.isInAmbient.getter();

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
    uint64_t v18 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
    uint64_t v19 = type metadata accessor for TitleOnlyLabelStyle();
    uint64_t v20 = _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, MEMORY[0x263F19AB8]);
    uint64_t v24 = v3;
    uint64_t v25 = v19;
    uint64_t v26 = v18;
    uint64_t v27 = v20;
    swift_getOpaqueTypeConformance2();
    View.if<A>(_:transform:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v10, v7);
  }
  else
  {
    type metadata accessor for Context();
    _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #2 in AmbientEmergencyCountdown.cancelButton.getter()
{
  uint64_t v0 = type metadata accessor for TitleOnlyLabelStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  TitleOnlyLabelStyle.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, MEMORY[0x263F19AB8]);
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t AmbientEmergencyCountdown.init(viewModel:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  *a1 = ObservedObject.init(wrappedValue:)();
  a1[1] = v2;
  type metadata accessor for Context();
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  a1[2] = EnvironmentObject.init()();
  a1[3] = v3;
  type metadata accessor for AmbientEmergencyCountdown();
  return ActionHandler.init()();
}

uint64_t associated type witness table accessor for View.Body : View in AmbientEmergencyCountdown()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_259180BC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_259180BCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AmbientEmergencyCountdown(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v7 = (void *)a2[2];
    uint64_t v6 = a2[3];
    a1[2] = (uint64_t)v7;
    a1[3] = v6;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    id v13 = v7;
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for AmbientEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ActionHandler();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for AmbientEmergencyCountdown(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = (void *)a2[2];
  uint64_t v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  id v12 = v6;
  v11(v8, v9, v10);
  return a1;
}

void *assignWithCopy for AmbientEmergencyCountdown(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a1[2];
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  id v8 = v7;

  a1[3] = a2[3];
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for AmbientEmergencyCountdown(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for AmbientEmergencyCountdown(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  a1[3] = a2[3];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmbientEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259181014);
}

uint64_t sub_259181014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AmbientEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591810D8);
}

uint64_t sub_2591810D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActionHandler();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata completion function for AmbientEmergencyCountdown()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>>);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, ModifiedContent<BinaryButtonView, _EnvironmentKeyWritingModifier<VRXVisualResponseLocation>>)>>)>>, _AppearanceActionModifier>, ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_2591812A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2591812D4()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t partial apply for closure #1 in AmbientEmergencyCountdown.callButton.getter()
{
  return partial apply for closure #1 in AmbientEmergencyCountdown.callButton.getter(closure #1 in AmbientEmergencyCountdown.callButton.getter);
}

uint64_t partial apply for closure #2 in AmbientEmergencyCountdown.callButton.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in AmbientEmergencyCountdown.callButton.getter(*(void *)(v1 + 16), a1);
}

uint64_t _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in AmbientEmergencyCountdown.cancelButton.getter()
{
  return partial apply for closure #1 in AmbientEmergencyCountdown.callButton.getter(closure #1 in AmbientEmergencyCountdown.cancelButton.getter);
}

uint64_t partial apply for closure #2 in AmbientEmergencyCountdown.cancelButton.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in AmbientEmergencyCountdown.cancelButton.getter(*(void *)(v1 + 16), a1);
}

uint64_t sub_25918139C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.visualResponseLocation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2591813C8()
{
  return EnvironmentValues.visualResponseLocation.setter();
}

uint64_t outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for AmbientEmergencyCountdown() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();

  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AmbientEmergencyCountdown.callButton.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AmbientEmergencyCountdown() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

uint64_t ShowCallHistoryListView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowCallHistoryListView();
  return outlined init with copy of SearchCallHistoryModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryModel);
}

uint64_t type metadata accessor for ShowCallHistoryListView()
{
  uint64_t result = type metadata singleton initialization cache for ShowCallHistoryListView;
  if (!type metadata singleton initialization cache for ShowCallHistoryListView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void one-time initialization function for bottomCornerRadius()
{
  static ShowCallHistoryListView.bottomCornerRadius = 0x4034000000000000;
}

{
  static ShowPlayVoicemailListView.bottomCornerRadius = 0x4034000000000000;
}

uint64_t ShowCallHistoryListView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for ShowCallHistoryListView();
  ActionHandler.init()();
  return outlined init with take of SearchCallHistoryModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(void))type metadata accessor for SearchCallHistoryModel);
}

uint64_t ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for RoundedCornerStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UnevenRoundedRectangle();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  closure #1 in ShowCallHistoryListView.body.getter(v2, &v12[*(int *)(v17 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v16, &demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  v16[*(int *)(v14 + 44)] = v2;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
  if (one-time initialization token for bottomCornerRadius != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F19858], v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  *(void *)uint64_t v9 = v18;
  *((void *)v9 + 1) = v19;
  *((void *)v9 + 2) = v20;
  *((void *)v9 + 3) = v21;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
  uint64_t v23 = v26;
  outlined init with copy of SearchCallHistoryModel((uint64_t)v9, v26 + *(int *)(v22 + 36), MEMORY[0x263F19EF0]);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, v23, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  outlined destroy of UnevenRoundedRectangle((uint64_t)v9, MEMORY[0x263F19EF0]);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
}

uint64_t closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v49 = a1;
  long long v55 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListBottomView?);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v56 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v54 = (uint64_t *)((char *)&v47 - v6);
  uint64_t v7 = type metadata accessor for ComponentStackBottomSpacing();
  uint64_t v52 = *(void *)(v7 - 8);
  long long v53 = (char *)v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ShowCallHistoryListView();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>>);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  uint64_t v51 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0);
  long long v48 = *(void **)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v47 - v21;
  outlined init with copy of SearchCallHistoryModel(a1, (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowCallHistoryListView);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = swift_allocObject();
  outlined init with take of SearchCallHistoryModel((uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, (uint64_t (*)(void))type metadata accessor for ShowCallHistoryListView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>);
  uint64_t v25 = v17;
  uint64_t v26 = v48;
  ComponentStack.init(content:)();
  uint64_t v28 = v52;
  uint64_t v27 = v53;
  (*(void (**)(char *, void, char *))(v52 + 104))(v9, *MEMORY[0x263F778E8], v53);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>)>>);
  uint64_t v29 = v50;
  View.lastComponentBottomSpacing(_:)();
  (*(void (**)(char *, char *))(v28 + 8))(v9, v27);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v29);
  uint64_t v30 = (void (*)(char *, char *, uint64_t))v26[4];
  long long v53 = v22;
  v30(v22, v20, v25);
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  if (v57 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    Loggable.wrappedValue.getter();
    uint64_t v31 = v57;
    uint64_t v32 = v58;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    uint64_t v33 = CodableAceObject.wrappedValue.getter();
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t v34 = EnvironmentObject.init()();
    uint64_t v35 = (uint64_t)v54;
    uint64_t *v54 = v34;
    *(void *)(v35 + 8) = v36;
    uint64_t v37 = type metadata accessor for ListBottomView();
    ActionHandler.init()();
    uint64_t v38 = (void *)(v35 + *(int *)(v37 + 24));
    *uint64_t v38 = v31;
    v38[1] = v32;
    *(void *)(v35 + *(int *)(v37 + 28)) = v33;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 0, 1, v37);
  }
  else
  {
    uint64_t v39 = type metadata accessor for ListBottomView();
    uint64_t v35 = (uint64_t)v54;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v54, 1, 1, v39);
  }
  char v40 = (void (*)(char *, char *, uint64_t))v26[2];
  uint64_t v41 = v53;
  v40(v20, v53, v25);
  uint64_t v42 = v56;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v35, v56, &demangling cache variable for type metadata for ListBottomView?);
  uint64_t v43 = v55;
  v40(v55, v20, v25);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v42, (uint64_t)&v43[*(int *)(v44 + 48)], &demangling cache variable for type metadata for ListBottomView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for ListBottomView?);
  long long v45 = (void (*)(char *, uint64_t))v26[1];
  v45(v41, v25);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v42, &demangling cache variable for type metadata for ListBottomView?);
  return ((uint64_t (*)(char *, uint64_t))v45)(v20, v25);
}

uint64_t associated type witness table accessor for View.Body : View in ShowCallHistoryListView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for ShowCallHistoryListView();
  uint64_t v4 = v3 - 8;
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (uint64_t)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>);
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  long long v54 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)v46 - v9;
  uint64_t v47 = type metadata accessor for SeparatorStyle();
  uint64_t v10 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v59 = *(void *)(v48 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v48);
  v46[0] = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v58 = (char *)v46 - v19;
  v46[1] = a1 + *(int *)(v4 + 32);
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  unint64_t v20 = lazy protocol witness table accessor for type ListHeaderView and conformance ListHeaderView();
  View.componentSpacing(top:bottom:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = v47;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F76970], v47);
  uint64_t v62 = &type metadata for ListHeaderView;
  unint64_t v63 = v20;
  uint64_t v50 = MEMORY[0x263F773F0];
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = (char *)v46[0];
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v24 = v58;
  uint64_t v23 = v59;
  uint64_t v25 = v22;
  uint64_t v26 = v48;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, v22, v48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  Loggable.wrappedValue.getter();
  size_t v27 = specialized _copySequenceToContiguousArray<A>(_:)((uint64_t)v62);
  swift_bridgeObjectRelease();
  size_t v61 = v27;
  swift_getKeyPath();
  uint64_t v28 = v51;
  outlined init with copy of SearchCallHistoryModel(v49, v51, (uint64_t (*)(void))type metadata accessor for ShowCallHistoryListView);
  unint64_t v29 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v30 = swift_allocObject();
  outlined init with take of SearchCallHistoryModel(v28, v30 + v29, (uint64_t (*)(void))type metadata accessor for ShowCallHistoryListView);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = partial apply for closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter;
  *(void *)(v31 + 24) = v30;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SingleCallRecordModel)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type [(offset: Int, element: SingleCallRecordModel)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: SingleCallRecordModel)]);
  uint64_t v32 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  unint64_t v33 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  uint64_t v62 = v32;
  unint64_t v63 = v33;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v60;
  ForEach<>.init(_:id:content:)();
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 16);
  v35((uint64_t)v25, v24, v26);
  uint64_t v36 = v54;
  uint64_t v37 = v55;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v39 = v34;
  uint64_t v40 = v56;
  v38(v54, v39, v56);
  uint64_t v41 = v57;
  v35(v57, v25, v26);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0, ForEach<[(offset: Int, element: SingleCallRecordModel)], Int, <<opaque return type of View.componentSpacing(top:bottom:)>>.0>));
  v38((char *)(v41 + *(int *)(v42 + 48)), v36, v40);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v60, v40);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v59 + 8);
  v44(v58, v26);
  v43(v36, v40);
  return ((uint64_t (*)(char *, uint64_t))v44)(v25, v26);
}

uint64_t closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v56 = a1;
  uint64_t v57 = a4;
  uint64_t v5 = type metadata accessor for SeparatorStyle();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for ShowCallHistorySingleItemView();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)&v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v48 = &v40[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x270FA5388](v50);
  uint64_t v47 = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  uint64_t v46 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  long long v45 = &v40[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  outlined init with copy of SearchCallHistoryModel(a2, (uint64_t)v13 + *(int *)(v11 + 32), (uint64_t (*)(void))type metadata accessor for SingleCallRecordModel);
  type metadata accessor for ShowCallHistoryListView();
  type metadata accessor for SearchCallHistoryModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  int v41 = v58;
  uint64_t v18 = type metadata accessor for Context();
  uint64_t v43 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v44 = v18;
  *uint64_t v13 = EnvironmentObject.init()();
  v13[1] = v19;
  ActionHandler.init()();
  uint64_t v58 = 0x4041800000000000;
  uint64_t v20 = *MEMORY[0x263F1A6D0];
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 104);
  v21(v10, v20, v7);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v58 = 0x4041800000000000;
  v21(v10, v20, v7);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v22 = v42;
  *((unsigned char *)v13 + *(int *)(v11 + 36)) = v41;
  if (*v22)
  {
    id v23 = *v22;
    dispatch thunk of Context.currentIdiom.getter();
    char v24 = VRXIdiom.isCarPlay.getter();
    uint64_t v26 = v53;
    uint64_t v25 = v54;
    size_t v27 = (unsigned int *)MEMORY[0x263F76980];
    if ((v24 & 1) == 0) {
      size_t v27 = (unsigned int *)MEMORY[0x263F76970];
    }
    uint64_t v28 = v55;
    (*(void (**)(unsigned char *, void, uint64_t))(v54 + 104))(v53, *v27, v55);

    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type ShowCallHistorySingleItemView and conformance ShowCallHistorySingleItemView, (void (*)(uint64_t))type metadata accessor for ShowCallHistorySingleItemView);
    unint64_t v29 = v48;
    View.separators(_:isOverride:)();
    (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v26, v28);
    outlined destroy of UnevenRoundedRectangle((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
    uint64_t v30 = EnvironmentObject.init()();
    uint64_t v32 = v31;
    uint64_t v34 = v51;
    uint64_t v33 = v52;
    uint64_t v35 = (uint64_t)v47;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 16))(v47, v29, v52);
    BOOL v36 = v56 == 0;
    uint64_t v37 = v35 + *(int *)(v50 + 36);
    *(void *)uint64_t v37 = v30;
    *(void *)(v37 + 8) = v32;
    *(unsigned char *)(v37 + 16) = v36;
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v29, v33);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
    uint64_t v38 = v45;
    View.componentSpacing(top:bottom:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v46 + 32))(v57, v38, v49);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ShowCallHistoryListView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *(void *)uint64_t v15 = *(char **)((char *)a2 + v14);
    *((void *)v15 + 1) = v17;
    uint64_t v18 = (int *)type metadata accessor for SearchCallHistoryModel();
    uint64_t v19 = v18[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = v16 + v19;
    swift_bridgeObjectRetain();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    id v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    uint64_t v24 = v18[6];
    uint64_t v25 = &v15[v24];
    uint64_t v26 = v16 + v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    v23(&v15[v18[7]], v16 + v18[7], v22);
    v23(&v15[v18[8]], v16 + v18[8], v22);
    uint64_t v28 = v18[9];
    unint64_t v29 = &v15[v28];
    uint64_t v30 = v16 + v28;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    v32(v29, v30, v31);
    v32(&v15[v18[10]], v16 + v18[10], v31);
    uint64_t v33 = v18[11];
    uint64_t v34 = &v15[v33];
    uint64_t v35 = v16 + v33;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return v7;
}

uint64_t destroy for ShowCallHistoryListView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for SearchCallHistoryModel();
  uint64_t v8 = &v6[v7[5]];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v10 = *(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = &v6[v7[6]];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v10(&v6[v7[7]], v9);
  v10(&v6[v7[8]], v9);
  uint64_t v13 = &v6[v7[9]];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v15 = *(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(&v6[v7[10]], v14);
  uint64_t v16 = &v6[v7[11]];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8);
  return v18(v16, v17);
}

void *initializeWithCopy for ShowCallHistoryListView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14);
  uint64_t v18 = *(void *)(v16 + 8);
  *(void *)uint64_t v15 = v17;
  *((void *)v15 + 1) = v18;
  uint64_t v19 = (int *)type metadata accessor for SearchCallHistoryModel();
  uint64_t v20 = v19[5];
  uint64_t v21 = &v15[v20];
  uint64_t v22 = v16 + v20;
  swift_bridgeObjectRetain();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  uint64_t v25 = v19[6];
  uint64_t v26 = &v15[v25];
  uint64_t v27 = v16 + v25;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  v24(&v15[v19[7]], v16 + v19[7], v23);
  v24(&v15[v19[8]], v16 + v19[8], v23);
  uint64_t v29 = v19[9];
  uint64_t v30 = &v15[v29];
  uint64_t v31 = v16 + v29;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  v33(v30, v31, v32);
  v33(&v15[v19[10]], v16 + v19[10], v32);
  uint64_t v34 = v19[11];
  uint64_t v35 = &v15[v34];
  uint64_t v36 = v16 + v34;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

uint64_t assignWithCopy for ShowCallHistoryListView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *((void *)v14 + 1) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for SearchCallHistoryModel();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v14[v17];
  uint64_t v19 = v15 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  uint64_t v22 = v16[6];
  uint64_t v23 = &v14[v22];
  uint64_t v24 = v15 + v22;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  v21(&v14[v16[7]], v15 + v16[7], v20);
  v21(&v14[v16[8]], v15 + v16[8], v20);
  uint64_t v26 = v16[9];
  uint64_t v27 = &v14[v26];
  uint64_t v28 = v15 + v26;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24);
  v30(v27, v28, v29);
  v30(&v14[v16[10]], v15 + v16[10], v29);
  uint64_t v31 = v16[11];
  uint64_t v32 = &v14[v31];
  uint64_t v33 = v15 + v31;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_OWORD *initializeWithTake for ShowCallHistoryListView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for SearchCallHistoryModel();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  uint64_t v19 = v13[6];
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  v18(&v11[v13[7]], &v12[v13[7]], v17);
  v18(&v11[v13[8]], &v12[v13[8]], v17);
  uint64_t v23 = v13[9];
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v27(&v11[v13[10]], &v12[v13[10]], v26);
  uint64_t v28 = v13[11];
  uint64_t v29 = &v11[v28];
  uint64_t v30 = &v12[v28];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

uint64_t assignWithTake for ShowCallHistoryListView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)((char *)a2 + v11);
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for SearchCallHistoryModel();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  uint64_t v21 = v15[6];
  uint64_t v22 = &v12[v21];
  uint64_t v23 = &v13[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  v20(&v12[v15[7]], &v13[v15[7]], v19);
  v20(&v12[v15[8]], &v13[v15[8]], v19);
  uint64_t v25 = v15[9];
  uint64_t v26 = &v12[v25];
  uint64_t v27 = &v13[v25];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(&v12[v15[10]], &v13[v15[10]], v28);
  uint64_t v30 = v15[11];
  uint64_t v31 = &v12[v30];
  uint64_t v32 = &v13[v30];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowCallHistoryListView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259183C94);
}

uint64_t sub_259183C94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for SearchCallHistoryModel();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShowCallHistoryListView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259183DE0);
}

void *sub_259183DE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SearchCallHistoryModel();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for ShowCallHistoryListView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SearchCallHistoryModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _ContainerShapeModifier<UnevenRoundedRectangle> and conformance _ContainerShapeModifier<A>, &demangling cache variable for type metadata for _ContainerShapeModifier<UnevenRoundedRectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(<<opaque return type of View.lastComponentBottomSpacing(_:)>>.0, ListBottomView?)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShowCallHistoryListView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in closure #1 in ShowCallHistoryListView.body.getter(v4, a1);
}

unint64_t lazy protocol witness table accessor for type ListHeaderView and conformance ListHeaderView()
{
  unint64_t result = lazy protocol witness table cache variable for type ListHeaderView and conformance ListHeaderView;
  if (!lazy protocol witness table cache variable for type ListHeaderView and conformance ListHeaderView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ListHeaderView and conformance ListHeaderView);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = (int *)(type metadata accessor for ShowCallHistoryListView() - 8);
  unint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)v2 + v1[8];
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for SearchCallHistoryModel();
  uint64_t v7 = &v5[v6[5]];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = &v5[v6[6]];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  v9(&v5[v6[7]], v8);
  v9(&v5[v6[8]], v8);
  uint64_t v12 = &v5[v6[9]];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(&v5[v6[10]], v13);
  uint64_t v15 = &v5[v6[11]];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for ShowCallHistoryListView() - 8);
  uint64_t v8 = (id *)(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  return closure #1 in closure #1 in closure #1 in ShowCallHistoryListView.body.getter(a1, a2, v8, a3);
}

uint64_t sub_259184584()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed SingleCallRecordModel) -> (@out <<opaque return type of View.componentSpacing(top:bottom:)>>.0)(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SingleCallRecordModel));
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
    type metadata accessor for ShowCallHistorySingleItemView();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type ShowCallHistorySingleItemView and conformance ShowCallHistorySingleItemView, (void (*)(uint64_t))type metadata accessor for ShowCallHistorySingleItemView);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
    type metadata accessor for ShowPlayVoicemailSingleItemView();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_6(&lazy protocol witness table cache variable for type ShowPlayVoicemailSingleItemView and conformance ShowPlayVoicemailSingleItemView, (void (*)(uint64_t))type metadata accessor for ShowPlayVoicemailSingleItemView);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem()
{
  unint64_t result = lazy protocol witness table cache variable for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem;
  if (!lazy protocol witness table cache variable for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem);
  }
  return result;
}

uint64_t outlined init with copy of SearchCallHistoryModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t lazy protocol witness table accessor for type CGFloat and conformance CGFloat()
{
  unint64_t result = lazy protocol witness table cache variable for type CGFloat and conformance CGFloat;
  if (!lazy protocol witness table cache variable for type CGFloat and conformance CGFloat)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CGFloat and conformance CGFloat);
  }
  return result;
}

uint64_t outlined destroy of UnevenRoundedRectangle(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t property wrapper backing initializer of CountdownButtonStyle.model()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t CountdownButtonStyle.model.getter()
{
  return swift_retain();
}

uint64_t CountdownButtonStyle.model.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CountdownButtonStyle.model.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t CountdownButtonStyle.$model.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for EmergencyCountdownViewModel(0);
  uint64_t v4 = _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return MEMORY[0x270EFFB90](v1, v2, v3, v4);
}

uint64_t CountdownButtonStyle.actionHandler.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CountdownButtonStyle();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v1 + *(int *)(v3 + 24), a1, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t type metadata accessor for CountdownButtonStyle()
{
  uint64_t result = type metadata singleton initialization cache for CountdownButtonStyle;
  if (!type metadata singleton initialization cache for CountdownButtonStyle) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CountdownButtonStyle.showCountdown.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CountdownButtonStyle() + 28));
}

uint64_t CountdownButtonStyle.showCountdown.setter(char a1)
{
  uint64_t result = type metadata accessor for CountdownButtonStyle();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*CountdownButtonStyle.showCountdown.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t property wrapper backing initializer of CountdownButtonStyle.buttonHeight(double a1)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  MEMORY[0x270FA5388](v2);
  *(double *)&v6[1] = a1;
  (*(void (**)(char *, void))(v4 + 104))((char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F1A700]);
  lazy protocol witness table accessor for type Double and conformance Double();
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

unint64_t lazy protocol witness table accessor for type Double and conformance Double()
{
  unint64_t result = lazy protocol witness table cache variable for type Double and conformance Double;
  if (!lazy protocol witness table cache variable for type Double and conformance Double)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Double and conformance Double);
  }
  return result;
}

double CountdownButtonStyle.buttonHeight.getter()
{
  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t property wrapper backing initializer of CountdownButtonStyle.isAnimating()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t CountdownButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v39 = a1;
  uint64_t v47 = a2;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<Capsule>)
      - 8;
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Capsule();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CountdownButtonStyle();
  uint64_t v9 = v8 - 8;
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v40 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ButtonStyleConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>)
      - 8;
  MEMORY[0x270FA5388](v43);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = static Alignment.leading.getter();
  uint64_t v41 = v19;
  uint64_t v42 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  outlined init with copy of CountdownButtonStyle(v3, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CountdownButtonStyle);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + *(unsigned __int8 *)(v40 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v20, v15, v12);
  outlined init with take of CountdownButtonStyle((uint64_t)v11, v22 + v21);
  uint64_t v23 = *(void *)(v3 + *(int *)(v9 + 44));
  uint64_t v24 = *(double (**)(uint64_t))(**(void **)(v3 + 24) + 344);
  uint64_t v25 = swift_retain();
  double v26 = v24(v25);
  swift_release();
  swift_retain();
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v27 = 0.6;
  }
  else {
    double v27 = 1.0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v40 = v48;
  LODWORD(v39) = v49;
  uint64_t v28 = v50;
  char v29 = v51;
  uint64_t v31 = v52;
  uint64_t v30 = v53;
  uint64_t v32 = *MEMORY[0x263F19858];
  uint64_t v33 = type metadata accessor for RoundedCornerStyle();
  uint64_t v34 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v44, v32, v33);
  uint64_t v35 = v45;
  outlined init with copy of CountdownButtonStyle(v34, v45, MEMORY[0x263F1B7A8]);
  *(_WORD *)(v35 + *(int *)(v46 + 44)) = 256;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v35, (uint64_t)&v17[*(int *)(v43 + 44)], &demangling cache variable for type metadata for _ClipEffect<Capsule>);
  uint64_t v36 = v41;
  *(void *)uint64_t v17 = v42;
  *((void *)v17 + 1) = v36;
  *((void *)v17 + 2) = partial apply for closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:);
  *((void *)v17 + 3) = v22;
  *((void *)v17 + 4) = v23;
  *((double *)v17 + 5) = v26;
  *((double *)v17 + 6) = v27;
  *((void *)v17 + 7) = v40;
  v17[64] = v39;
  *((void *)v17 + 9) = v28;
  v17[80] = v29;
  *((void *)v17 + 11) = v31;
  *((void *)v17 + 12) = v30;
  swift_retain();
  swift_retain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for _ClipEffect<Capsule>);
  outlined destroy of Capsule(v34);
  swift_release();
  swift_release();
  return outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v17, v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>);
}

uint64_t closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v206 = a2;
  v199 = a1;
  uint64_t v204 = a3;
  uint64_t v198 = type metadata accessor for CountdownButtonStyle();
  uint64_t v192 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198);
  uint64_t v193 = v3;
  v197 = &v158[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v196 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v195 = *(void *)(v196 - 8);
  MEMORY[0x270FA5388](v196);
  v194 = &v158[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
  uint64_t v190 = *(void *)(v191 - 8);
  MEMORY[0x270FA5388](v191);
  v189 = &v158[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Capsule();
  MEMORY[0x270FA5388](v6 - 8);
  v185 = &v158[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Width?);
  MEMORY[0x270FA5388](v8 - 8);
  v164 = &v158[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWidth(_:)>>.0);
  uint64_t v168 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  v165 = &v158[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
  MEMORY[0x270FA5388](v167);
  v166 = &v158[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  v171 = &v158[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
  MEMORY[0x270FA5388](v169);
  v175 = &v158[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x270FA5388](v174);
  v177 = &v158[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x270FA5388](v176);
  v178 = &v158[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
  MEMORY[0x270FA5388](v179);
  v180 = &v158[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.gesture<A>(_:including:)>>.0);
  uint64_t v186 = *(void *)(v187 - 8);
  MEMORY[0x270FA5388](v187);
  v182 = &v158[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>);
  MEMORY[0x270FA5388](v181);
  v188 = &v158[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>);
  uint64_t v202 = *(void *)(v205 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v205);
  v184 = &v158[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v19);
  v183 = &v158[-v21];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  v203 = &v158[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v23);
  double v26 = &v158[-v25];
  v201 = (unsigned char *)type metadata accessor for Material();
  v200 = (unsigned char *)*((void *)v201 - 1);
  MEMORY[0x270FA5388](v201);
  uint64_t v28 = &v158[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = &v158[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = &v158[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  uint64_t v37 = v36 - 8;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = &v158[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = &v158[-v41];
  ButtonStyleConfiguration.label.getter();
  static Alignment.center.getter();
  __n128 v43 = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v35, 0.0, 1, INFINITY, 0);
  uint64_t v44 = v32;
  uint64_t v45 = (uint64_t)v26;
  (*(void (**)(unsigned char *, uint64_t, __n128))(v30 + 8))(v44, v29, v43);
  uint64_t v46 = v206;
  static Material.ultraThin.getter();
  LOBYTE(v30) = static Edge.Set.all.getter();
  uint64_t v47 = &v40[*(int *)(v37 + 44)];
  uint64_t v48 = (uint64_t)v200;
  uint64_t v49 = (uint64_t)v201;
  (*((void (**)(unsigned char *, unsigned char *, unsigned char *))v200 + 2))(v47, v28, v201);
  v47[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v30;
  uint64_t v50 = v198;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v35, (uint64_t)v40, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>);
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v28, v49);
  uint64_t v51 = (uint64_t)v35;
  uint64_t v52 = v205;
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v51, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>);
  v201 = v40;
  v200 = v42;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v40, (uint64_t)v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  uint64_t v53 = 1;
  if (*(unsigned char *)(v46 + *(int *)(v50 + 28)) == 1)
  {
    uint64_t v163 = v45;
    uint64_t v210 = CountdownButtonStyle.countdownLabel.getter();
    uint64_t v211 = v54;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v161 = Text.init<A>(_:)();
    uint64_t v160 = v55;
    int v159 = v56;
    uint64_t v162 = v57;
    uint64_t v58 = v50;
    uint64_t v59 = *(uint64_t (**)(uint64_t))(**(void **)(v46 + 24) + 296);
    uint64_t v60 = swift_retain();
    uint64_t v61 = v59(v60);
    swift_release();
    GeometryProxy.size.getter();
    GeometryProxy.size.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v62 = v225;
    char v63 = v226;
    uint64_t v64 = v227;
    char v65 = v228;
    uint64_t v66 = v229;
    uint64_t v67 = v230;
    int v68 = static HierarchicalShapeStyle.primary.getter();
    uint64_t v69 = static Font.title3.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v210 = v161;
    uint64_t v211 = v160;
    char v212 = v159 & 1;
    uint64_t v213 = v162;
    uint64_t v214 = 0;
    uint64_t v215 = v61;
    uint64_t v71 = v58;
    uint64_t v216 = v62;
    char v217 = v63;
    uint64_t v218 = v64;
    uint64_t v72 = v206;
    char v219 = v65;
    uint64_t v220 = v66;
    uint64_t v221 = v67;
    int v222 = v68;
    uint64_t v223 = KeyPath;
    uint64_t v224 = v69;
    uint64_t v73 = (char *)(v206 + *(int *)(v58 + 52));
    uint64_t v74 = *((void *)v73 + 1);
    char v207 = *v73;
    uint64_t v208 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    uint64_t v75 = (uint64_t)v164;
    if (v209 == 1) {
      static Font.Width.condensed.getter();
    }
    else {
      static Font.Width.standard.getter();
    }
    uint64_t v76 = v165;
    uint64_t v77 = type metadata accessor for Font.Width();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 0, 1, v77);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    View.fontWidth(_:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v75, &demangling cache variable for type metadata for Font.Width?);
    outlined consume of Text.Storage(v210, v211, v212);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v78 = *(uint64_t (**)(uint64_t))(**(void **)(v72 + 24) + 872);
    uint64_t v79 = swift_retain();
    char v80 = v78(v79);
    swift_release();
    double v81 = 0.0;
    if ((v80 & 1) == 0)
    {
      uint64_t v82 = v72 + *(int *)(v71 + 48);
      char v83 = *(unsigned char *)v82;
      uint64_t v84 = *(void *)(v82 + 8);
      LOBYTE(v210) = v83;
      uint64_t v211 = v84;
      State.wrappedValue.getter();
      if (v207) {
        double v81 = 0.25;
      }
      else {
        double v81 = 1.0;
      }
    }
    uint64_t v85 = v168;
    uint64_t v86 = (uint64_t)v166;
    uint64_t v87 = v170;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v168 + 16))(v166, v76, v170);
    *(double *)(v86 + *(int *)(v167 + 36)) = v81;
    (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v76, v87);
    static Font.Weight.heavy.getter();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    uint64_t v88 = v171;
    View.fontWeight(_:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v86, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
    LOBYTE(v87) = static Edge.Set.leading.getter();
    GeometryProxy.size.getter();
    CountdownButtonStyle.emergencyLeadingSliderOffset(for:)(v89, v90);
    EdgeInsets.init(_all:)();
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    uint64_t v99 = v172;
    uint64_t v100 = (uint64_t)v175;
    uint64_t v101 = v173;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v172 + 16))(v175, v88, v173);
    uint64_t v102 = v100 + *(int *)(v169 + 36);
    *(unsigned char *)uint64_t v102 = v87;
    *(void *)(v102 + 8) = v92;
    *(void *)(v102 + 16) = v94;
    *(void *)(v102 + 24) = v96;
    *(void *)(v102 + 32) = v98;
    *(unsigned char *)(v102 + 40) = 0;
    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v88, v101);
    char v103 = static Edge.Set.trailing.getter();
    GeometryProxy.size.getter();
    double v105 = v104;
    double v107 = v106;
    uint64_t v108 = *((void *)v73 + 1);
    LOBYTE(v210) = *v73;
    uint64_t v211 = v108;
    State.wrappedValue.getter();
    if (v207 == 1) {
      CountdownButtonStyle.emergencyLeadingSliderOffset(for:)(v105, v107);
    }
    EdgeInsets.init(_all:)();
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    uint64_t v114 = v113;
    uint64_t v116 = v115;
    long long v117 = v177;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v100, (uint64_t)v177, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
    long long v118 = &v117[*(int *)(v174 + 36)];
    *long long v118 = v103;
    *((void *)v118 + 1) = v110;
    *((void *)v118 + 2) = v112;
    *((void *)v118 + 3) = v114;
    *((void *)v118 + 4) = v116;
    v118[40] = 0;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v100, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
    long long v119 = v182;
    if (one-time initialization token for emergencyRed != -1) {
      swift_once();
    }
    uint64_t v120 = static Color.emergencyRed;
    swift_retain();
    char v121 = static Edge.Set.all.getter();
    long long v122 = v178;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v117, (uint64_t)v178, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>);
    long long v123 = &v122[*(int *)(v176 + 36)];
    *(void *)long long v123 = v120;
    v123[8] = v121;
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v117, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>);
    uint64_t v124 = *MEMORY[0x263F19858];
    uint64_t v125 = type metadata accessor for RoundedCornerStyle();
    uint64_t v126 = (uint64_t)v185;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v125 - 8) + 104))(v185, v124, v125);
    uint64_t v127 = (uint64_t)v180;
    uint64_t v128 = (uint64_t)&v180[*(int *)(v179 + 36)];
    outlined init with copy of CountdownButtonStyle(v126, v128, MEMORY[0x263F1B7A8]);
    *(_WORD *)(v128
             + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<Capsule>)
                      + 36)) = 256;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v122, v127, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    outlined destroy of Capsule(v126);
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    long long v129 = v189;
    CountdownButtonStyle.dragGesture.getter((uint64_t)v189);
    static GestureMask.all.getter();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EndedGesture<_ChangedGesture<DragGesture>> and conformance _EndedGesture<A>, &demangling cache variable for type metadata for _EndedGesture<_ChangedGesture<DragGesture>>);
    uint64_t v130 = v191;
    View.gesture<A>(_:including:)();
    (*(void (**)(unsigned char *, uint64_t))(v190 + 8))(v129, v130);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v127, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
    long long v131 = *(uint64_t (**)(uint64_t))(**(void **)(v72 + 24) + 1088);
    uint64_t v132 = swift_retain();
    long long v133 = (void *)v131(v132);
    swift_release();
    uint64_t v134 = v72;
    if (one-time initialization token for counterPosition != -1) {
      swift_once();
    }
    long long v135 = v194;
    NSNotificationCenter.publisher(for:object:)();

    v199 = type metadata accessor for CountdownButtonStyle;
    long long v136 = v197;
    outlined init with copy of CountdownButtonStyle(v134, (uint64_t)v197, (uint64_t (*)(void))type metadata accessor for CountdownButtonStyle);
    uint64_t v137 = *(unsigned __int8 *)(v192 + 80);
    v193 += (v137 + 16) & ~v137;
    uint64_t v138 = (v137 + 16) & ~v137;
    uint64_t v198 = v138;
    uint64_t v192 = v137 | 7;
    uint64_t v139 = swift_allocObject();
    outlined init with take of CountdownButtonStyle((uint64_t)v136, v139 + v138);
    uint64_t v140 = v186;
    uint64_t v141 = (uint64_t)v188;
    uint64_t v142 = v187;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v186 + 16))(v188, v119, v187);
    uint64_t v143 = v181;
    uint64_t v144 = v195;
    long long v145 = v119;
    uint64_t v146 = v196;
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v195 + 16))(v141 + *(int *)(v181 + 52), v135, v196);
    long long v147 = (uint64_t (**)(uint64_t))(v141 + *(int *)(v143 + 56));
    *long long v147 = partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:);
    v147[1] = (uint64_t (*)(uint64_t))v139;
    (*(void (**)(unsigned char *, uint64_t))(v144 + 8))(v135, v146);
    (*(void (**)(unsigned char *, uint64_t))(v140 + 8))(v145, v142);
    outlined init with copy of CountdownButtonStyle(v206, (uint64_t)v136, (uint64_t (*)(void))v199);
    uint64_t v148 = swift_allocObject();
    outlined init with take of CountdownButtonStyle((uint64_t)v136, v148 + v198);
    v149 = v184;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v141, (uint64_t)v184, &demangling cache variable for type metadata for SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>);
    uint64_t v52 = v205;
    v150 = &v149[*(int *)(v205 + 36)];
    void *v150 = 0;
    v150[1] = 0;
    v150[2] = partial apply for closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:);
    v150[3] = v148;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v141, &demangling cache variable for type metadata for SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>);
    v151 = v183;
    outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v149, (uint64_t)v183, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>);
    uint64_t v45 = v163;
    outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v151, v163, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>);
    uint64_t v53 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v202 + 56))(v45, v53, 1, v52);
  uint64_t v152 = (uint64_t)v200;
  uint64_t v153 = (uint64_t)v201;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v200, (uint64_t)v201, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  v154 = v203;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v45, (uint64_t)v203, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  uint64_t v155 = v204;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v153, v204, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v154, v155 + *(int *)(v156 + 48), &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v45, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v152, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v154, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v153, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
}

uint64_t sub_259186810()
{
  uint64_t v1 = type metadata accessor for ButtonStyleConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for CountdownButtonStyle();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v7 = (id *)(v0 + ((v3 + v4 + v6) & ~v6));

  swift_release();
  uint64_t v8 = (char *)v7 + *(int *)(v5 + 24);
  uint64_t v9 = type metadata accessor for StandardActionHandler();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = (char *)v7 + *(int *)(v5 + 32);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of CountdownButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CountdownButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)@<X0>(uint64_t (*a1)()@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ButtonStyleConfiguration() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for CountdownButtonStyle() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, v9, a2);
}

uint64_t outlined init with copy of CountdownButtonStyle(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of Capsule(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CountdownButtonStyle.countdownLabel.getter()
{
  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  uint64_t v1 = **(void **)(v0 + 24);
  if (v6 == 1) {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 824);
  }
  else {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 1240);
  }
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  return v4;
}

uint64_t CountdownButtonStyle.emergencyLeadingSliderOffset(for:)(double a1, double a2)
{
  uint64_t v5 = type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  double v6 = 0.0;
  if (v25 == 1) {
    double v6 = *(double *)(v2 + *(int *)(v5 + 44));
  }
  double v7 = a1 - a2 - v6;
  State.wrappedValue.getter();
  uint64_t v8 = *(uint64_t **)(v2 + 24);
  uint64_t v9 = *v8;
  if ((v25 & 1) == 0)
  {
    uint64_t v20 = *(double (**)(uint64_t))(v9 + 344);
    uint64_t v21 = swift_retain();
    double v22 = v20(v21);
    swift_release();
    uint64_t v23 = *(void (**)(uint64_t, double))(*v8 + 1072);
    uint64_t v24 = swift_retain();
    v23(v24, v7 * v22 / 3.0);
    return swift_release();
  }
  uint64_t v10 = *(double (**)(uint64_t))(v9 + 1064);
  uint64_t v11 = swift_retain();
  double v12 = v10(v11);
  swift_release();
  uint64_t v13 = *(double (**)(uint64_t))(*v8 + 1016);
  uint64_t v14 = swift_retain();
  double v15 = v13(v14);
  uint64_t result = swift_release();
  if (v7 >= 0.0)
  {
    double v17 = v12 + v15;
    if (v12 + v15 <= 0.0) {
      double v17 = 0.0;
    }
    if (v7 >= v17) {
      double v18 = v17;
    }
    else {
      double v18 = v7;
    }
    uint64_t v19 = *(void (**)(BOOL))(*v8 + 976);
    swift_retain();
    v19(v7 + -3.0 <= v18);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t CountdownButtonStyle.dragGesture.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v3 = type metadata accessor for CountdownButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  double v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalCoordinateSpace();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = type metadata accessor for DragGesture();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v22 = v11;
  uint64_t v23 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  outlined init with copy of CountdownButtonStyle(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CountdownButtonStyle);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  outlined init with take of CountdownButtonStyle((uint64_t)v6, v16 + v15);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type DragGesture and conformance DragGesture, MEMORY[0x263F185B0]);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type DragGesture.Value and conformance DragGesture.Value, MEMORY[0x263F18580]);
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  outlined init with copy of CountdownButtonStyle(v20[1], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CountdownButtonStyle);
  uint64_t v17 = swift_allocObject();
  outlined init with take of CountdownButtonStyle((uint64_t)v6, v17 + v15);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _ChangedGesture<DragGesture> and conformance _ChangedGesture<A>, &demangling cache variable for type metadata for _ChangedGesture<DragGesture>);
  uint64_t v18 = v22;
  Gesture.onEnded(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v18);
}

void closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AnimationCompletionCriteria();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  double v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CountdownButtonStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = Notification.userInfo.getter();
  if (!v11)
  {
    long long v26 = 0u;
    long long v27 = 0u;
LABEL_12:
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)&v26, &demangling cache variable for type metadata for Any?);
    goto LABEL_13;
  }
  uint64_t v12 = v11;
  if (one-time initialization token for animationStepKey != -1) {
    swift_once();
  }
  v24[1] = static EmergencyCountdownConfiguration.animationStepKey;
  v24[2] = unk_26A37C400;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v12 + 16) && (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v25), (v14 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)v25);
  if (!*((void *)&v27 + 1)) {
    goto LABEL_12;
  }
  uint64_t v15 = swift_dynamicCast();
  if (v15)
  {
    uint64_t v16 = v25[0];
    MEMORY[0x270FA5388](v15);
    v24[-2] = a2;
    v24[-1] = v16;
    outlined init with copy of CountdownButtonStyle(a2, (uint64_t)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CountdownButtonStyle);
    unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    outlined init with take of CountdownButtonStyle((uint64_t)v10, v19 + v17);
    *(void *)(v19 + v18) = v16;
    static AnimationCompletionCriteria.logicallyComplete.getter();
    withAnimation<A>(_:completionCriteria:_:completion:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return;
  }
LABEL_13:
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_25915D000, v21, v22, "#CountdownButtonStyle did not receive a CGFloat for currentAnimationStep. Not updating animation", v23, 2u);
    MEMORY[0x25A2D96D0](v23, -1, -1);
  }
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, double a2)
{
  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v4 = *(void (**)(uint64_t, double))(**(void **)(a1 + 24) + 1216);
  uint64_t v5 = swift_retain();
  v4(v5, a2);
  return swift_release();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  return withAnimation<A>(_:_:)();
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v5 = a1 + *(int *)(type metadata accessor for CountdownButtonStyle() + 24);
    double v6 = *(void (**)(uint64_t, void, void, id))(*(void *)v2 + 1224);
    swift_retain();
    id v7 = v3;
    v6(v5, *(void *)&a2, 0, v7);
    swift_release();

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    return State.wrappedValue.setter();
  }
  else
  {
    type metadata accessor for Context();
    _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    swift_retain();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CountdownButtonStyle();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
  double v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_25915D000, v6, v7, "#CountdownButtonStyle view disappeared. Removing self from NotificationCenter", v8, 2u);
    MEMORY[0x25A2D96D0](v8, -1, -1);
  }

  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(uint64_t (**)(uint64_t))(*(void *)v9 + 1088);
  uint64_t v11 = swift_retain();
  uint64_t v12 = (void *)v10(v11);
  swift_release();
  outlined init with copy of CountdownButtonStyle(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CountdownButtonStyle);
  objc_msgSend(v12, sel_removeObserver_, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)());

  swift_unknownObjectRelease();
  unint64_t v13 = *(void (**)(uint64_t))(*(void *)v9 + 1200);
  uint64_t v14 = swift_retain();
  v13(v14);
  return swift_release();
}

uint64_t closure #1 in CountdownButtonStyle.dragGesture.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  swift_retain();
  uint64_t v3 = DragGesture.Value.startLocation.getter();
  (*(void (**)(uint64_t))(*(void *)v2 + 1000))(v3);
  swift_release();
  swift_retain();
  uint64_t v4 = DragGesture.Value.translation.getter();
  (*(void (**)(uint64_t))(*(void *)v2 + 1024))(v4);
  swift_release();
  type metadata accessor for CountdownButtonStyle();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 1160);
  uint64_t v6 = swift_retain();
  char v7 = v5(v6);
  uint64_t result = swift_release();
  if ((v7 & 1) == 0)
  {
    uint64_t v9 = *(void (**)(uint64_t))(*(void *)v2 + 1272);
    uint64_t v10 = swift_retain();
    v9(v10);
    return swift_release();
  }
  return result;
}

void closure #2 in CountdownButtonStyle.dragGesture.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)(a2 + 24) + 968);
  uint64_t v4 = swift_retain();
  LOBYTE(v3) = v3(v4);
  swift_release();
  if (v3)
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_25915D000, v6, v7, "#CountdownButtonStyle sliding ended at max. Calling emergency services", v8, 2u);
      MEMORY[0x25A2D96D0](v8, -1, -1);
    }

    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void **)a2;
    if (*(void *)a2)
    {
      uint64_t v11 = a2 + *(int *)(type metadata accessor for CountdownButtonStyle() + 24);
      uint64_t v12 = *(void (**)(uint64_t, id))(*(void *)v9 + 1256);
      swift_retain();
      id v19 = v10;
      v12(v11, v19);
      swift_release();
    }
    else
    {
      type metadata accessor for Context();
      _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
      swift_retain();
      EnvironmentObject.error()();
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CountdownButtonStyle();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_25915D000, v14, v15, "#CountdownButtonStyle sliding ended but not at the end. Resuming timer", v16, 2u);
      MEMORY[0x25A2D96D0](v16, -1, -1);
    }

    unint64_t v17 = *(void (**)(uint64_t))(**(void **)(a2 + 24) + 1280);
    uint64_t v18 = swift_retain();
    v17(v18);
    swift_release();
  }
}

uint64_t Comparable.clamped(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  max<A>(_:_:)();
  type metadata accessor for ClosedRange();
  min<A>(_:_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
}

double default argument 3 of CountdownButtonStyle.init(model:actionHandler:showCountdown:buttonHeight:)()
{
  return 46.0;
}

uint64_t CountdownButtonStyle.init(model:actionHandler:showCountdown:buttonHeight:)@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = type metadata accessor for Font.TextStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Context();
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a3 = EnvironmentObject.init()();
  a3[1] = v12;
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  a3[2] = ObservedObject.init(wrappedValue:)();
  a3[3] = v13;
  uint64_t v14 = (int *)type metadata accessor for CountdownButtonStyle();
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(a1, (uint64_t)a3 + v14[6], &demangling cache variable for type metadata for StandardActionHandler?);
  *((unsigned char *)a3 + v14[7]) = a2;
  double v24 = a4;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F1A700], v8);
  lazy protocol witness table accessor for type Double and conformance Double();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v15 = v14[9];
  *(uint64_t *)((char *)a3 + v15) = static Animation.easeInOut(duration:)();
  uint64_t v16 = v14[10];
  *(uint64_t *)((char *)a3 + v16) = static Animation.easeInOut(duration:)();
  *(uint64_t *)((char *)a3 + v14[11]) = 0x4020000000000000;
  unint64_t v17 = (char *)a3 + v14[12];
  char v23 = 0;
  State.init(wrappedValue:)();
  uint64_t v18 = v25;
  *unint64_t v17 = LOBYTE(v24);
  *((void *)v17 + 1) = v18;
  id v19 = (char *)a3 + v14[13];
  char v23 = 0;
  uint64_t result = State.init(wrappedValue:)();
  uint64_t v21 = v25;
  char *v19 = LOBYTE(v24);
  *((void *)v19 + 1) = v21;
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in CountdownButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_259188554@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_retain();
}

uint64_t sub_259188560(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 24) = v3;
  return result;
}

char *initializeBufferWithCopyOfBuffer for CountdownButtonStyle(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *((void *)a1 + 3) = a2[3];
    uint64_t v8 = a3[6];
    __dst = &a1[v8];
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = type metadata accessor for StandardActionHandler();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    swift_retain();
    if (v12(v9, 1, v10))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
      memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    uint64_t v15 = a3[8];
    v7[a3[7]] = *((unsigned char *)a2 + a3[7]);
    uint64_t v16 = &v7[v15];
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[10];
    *(void *)&v7[a3[9]] = *(char **)((char *)a2 + a3[9]);
    *(void *)&v7[v19] = *(char **)((char *)a2 + v19);
    uint64_t v20 = a3[12];
    *(void *)&v7[a3[11]] = *(char **)((char *)a2 + a3[11]);
    uint64_t v21 = &v7[v20];
    uint64_t v22 = (uint64_t)a2 + v20;
    char *v21 = *(unsigned char *)v22;
    *((void *)v21 + 1) = *(void *)(v22 + 8);
    uint64_t v23 = a3[13];
    double v24 = &v7[v23];
    uint64_t v25 = (uint64_t)a2 + v23;
    char *v24 = *(unsigned char *)v25;
    *((void *)v24 + 1) = *(void *)(v25 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for CountdownButtonStyle(id *a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for StandardActionHandler();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CountdownButtonStyle(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[6];
  __dst = (void *)(a1 + v7);
  uint64_t v8 = (const void *)(a2 + v7);
  uint64_t v9 = type metadata accessor for StandardActionHandler();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v6;
  swift_retain();
  if (v11(v8, 1, v9))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(__dst, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  uint64_t v14 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  uint64_t v22 = a3[13];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CountdownButtonStyle(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for StandardActionHandler();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v22 = a3[12];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_retain();
  swift_release();
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for CountdownButtonStyle(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for StandardActionHandler();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v14 = (char *)a1 + v13;
  int v15 = (char *)a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for CountdownButtonStyle(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = a3[6];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for StandardActionHandler();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v20 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_release();
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25918924C);
}

uint64_t sub_25918924C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for CountdownButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259189394);
}

uint64_t sub_259189394(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void type metadata completion function for CountdownButtonStyle()
{
  type metadata accessor for StandardActionHandler?();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<Double>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for StandardActionHandler?()
{
  if (!lazy cache variable for type metadata for StandardActionHandler?)
  {
    type metadata accessor for StandardActionHandler();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for StandardActionHandler?);
    }
  }
}

void type metadata accessor for ScaledMetric<Double>()
{
  if (!lazy cache variable for type metadata for ScaledMetric<Double>)
  {
    lazy protocol witness table accessor for type Double and conformance Double();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ScaledMetric<Double>);
    }
  }
}

uint64_t sub_259189680()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _AnimationModifier<CGFloat> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<CGFloat>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_25918985C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_259189888()
{
  return EnvironmentValues.font.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<HierarchicalShapeStyle> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<HierarchicalShapeStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _AnimationModifier<Int>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _AnimationModifier<Int> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Int>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _AnimationModifier<Int>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _AnimationModifier<Int>>, _FrameLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _ClipEffect<Capsule> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Capsule>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<GeometryReader<TupleView<(ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, ModifiedContent<SubscriptionView<NSNotificationCenter.Publisher, <<opaque return type of View.gesture<A>(_:including:)>>.0>, _AppearanceActionModifier>?)>>>, _AnimationModifier<CGFloat>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWidth(_:)>>.0, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, (uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:));
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for CountdownButtonStyle() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return closure #2 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(v2);
}

uint64_t outlined destroy of AnyHashable(uint64_t a1)
{
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  return closure #1 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_259189E84()
{
  uint64_t v1 = type metadata accessor for CountdownButtonStyle();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  int v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  swift_release();
  unint64_t v4 = (char *)v3 + *(int *)(v1 + 24);
  uint64_t v5 = type metadata accessor for StandardActionHandler();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)v3 + *(int *)(v1 + 32);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  type metadata accessor for CountdownButtonStyle();
  return closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)();
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)()
{
  return closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t partial apply for closure #1 in CountdownButtonStyle.dragGesture.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, closure #1 in CountdownButtonStyle.dragGesture.getter);
}

uint64_t _s14PhoneSnippetUI27EmergencyCountdownViewModelCAC7Combine16ObservableObjectAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = type metadata accessor for CountdownButtonStyle();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  swift_release();
  unint64_t v4 = (char *)v3 + *(int *)(v1 + 24);
  uint64_t v5 = type metadata accessor for StandardActionHandler();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)v3 + *(int *)(v1 + 32);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in CountdownButtonStyle.dragGesture.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(a1, (uint64_t (*)(uint64_t, uint64_t))closure #2 in CountdownButtonStyle.dragGesture.getter);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CountdownButtonStyle.makeBody(configuration:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for CountdownButtonStyle() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t ContactHeaderView.model.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of PhoneContactHeader(v1 + 24, a1);
}

uint64_t outlined init with copy of PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ContactHeaderView.model.setter(uint64_t a1)
{
  return outlined assign with take of PhoneContactHeader(a1, v1 + 24);
}

uint64_t outlined assign with take of PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*ContactHeaderView.model.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t ContactHeaderView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v61 = a1;
  uint64_t v53 = type metadata accessor for ImageElementView();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for SimpleItemRichView();
  uint64_t v55 = *(void *)(v60 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v60);
  uint64_t v52 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v51 - v7;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView>.Storage);
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
  MEMORY[0x270FA5388](v56);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  uint64_t v14 = *(void *)(v58 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v58);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  if (*v1)
  {
    id v20 = *v1;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter())
    {
      uint64_t v21 = *(void *)(v2 + 16);
      *(void *)uint64_t v11 = static VerticalAlignment.center.getter();
      *((void *)v11 + 1) = v21;
      v11[16] = 0;
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
      closure #1 in ContactHeaderView.body.getter(v2, (uint64_t)&v11[*(int *)(v22 + 44)]);
      char v23 = static Edge.Set.horizontal.getter();
      EdgeInsets.init(_all:)();
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
      uint64_t v32 = v56;
      uint64_t v33 = &v13[*(int *)(v56 + 36)];
      char *v33 = v23;
      *((void *)v33 + 1) = v25;
      *((void *)v33 + 2) = v27;
      *((void *)v33 + 3) = v29;
      *((void *)v33 + 4) = v31;
      v33[40] = 0;
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
      unint64_t v34 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
      View.componentSpacing(top:bottom:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
      uint64_t v35 = v17;
      uint64_t v36 = v58;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v35, v58);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v59, v19, v36);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v89 = v32;
      *((void *)&v89 + 1) = v34;
      swift_getOpaqueTypeConformance2();
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v36);
    }
    else
    {
      long long v38 = *(_OWORD *)(v2 + 40);
      long long v89 = *(_OWORD *)(v2 + 24);
      long long v90 = v38;
      uint64_t v40 = *(void *)(v2 + 72);
      uint64_t v39 = *(void *)(v2 + 80);
      uint64_t v41 = MEMORY[0x263F8D310];
      long long v91 = *(_OWORD *)(v2 + 56);
      long long v92 = v91;
      uint64_t v42 = MEMORY[0x263F779A0];
      uint64_t v87 = MEMORY[0x263F8D310];
      uint64_t v88 = MEMORY[0x263F779A0];
      long long v86 = v91;
      id v43 = v20;
      outlined retain of String((uint64_t)&v92);
      dispatch thunk of Context.currentIdiom.getter();

      if (VRXIdiom.isCarPlay.getter())
      {
        uint64_t v85 = 0;
        long long v83 = 0u;
        long long v84 = 0u;
      }
      else
      {
        *((void *)&v84 + 1) = v41;
        uint64_t v85 = v42;
        *(void *)&long long v83 = v40;
        *((void *)&v83 + 1) = v39;
        swift_bridgeObjectRetain();
      }
      uint64_t v44 = v60;
      uint64_t v82 = 0;
      long long v80 = 0u;
      long long v81 = 0u;
      uint64_t v79 = 0;
      long long v77 = 0u;
      long long v78 = 0u;
      uint64_t v76 = 0;
      long long v74 = 0u;
      long long v75 = 0u;
      uint64_t v73 = 0;
      long long v71 = 0u;
      long long v72 = 0u;
      uint64_t v70 = 0;
      long long v68 = 0u;
      long long v69 = 0u;
      uint64_t v67 = 0;
      long long v65 = 0u;
      long long v66 = 0u;
      ContactHeaderView.thumbnail.getter((uint64_t)v4);
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
      uint64_t v45 = v53;
      uint64_t v46 = View.eraseToAnyView()();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v4, v45);
      uint64_t v63 = MEMORY[0x263F1B728];
      uint64_t v64 = MEMORY[0x263F774A8];
      uint64_t v62 = v46;
      uint64_t v47 = v52;
      SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
      uint64_t v49 = v54;
      uint64_t v48 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v47, v44);
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v59, v49, v44);
      swift_storeEnumTagMultiPayload();
      unint64_t v50 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
      *(void *)&long long v86 = v56;
      *((void *)&v86 + 1) = v50;
      swift_getOpaqueTypeConformance2();
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v44);
    }
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t outlined retain of String(uint64_t a1)
{
  return a1;
}

uint64_t closure #1 in ContactHeaderView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>.Storage);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x270FA5388](v6 - 8);
  long long v83 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v81 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v11 - 8);
  long long v80 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ImageElementView();
  uint64_t v84 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v82 = (uint64_t)v73 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v86 = (uint64_t)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v88 = (uint64_t)v73 - v24;
  uint64_t v25 = *(void *)(a1 + 64);
  *(void *)&long long v85 = *(void *)(a1 + 56);
  *((void *)&v85 + 1) = v25;
  if (*(unsigned char *)(a1 + 88))
  {
    ContactHeaderView.thumbnail.getter((uint64_t)v15);
    uint64_t v44 = v84;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v5, v15, v13);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
  }
  else
  {
    uint64_t v26 = *(void *)(a1 + 32);
    v73[0] = *(void *)(a1 + 24);
    v73[1] = v26;
    uint64_t v27 = *MEMORY[0x263F765B8];
    uint64_t v76 = v16;
    long long v77 = v19;
    uint64_t v28 = v81;
    long long v74 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 104);
    v74(v10, v27, v8);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
    uint64_t v29 = type metadata accessor for _ProtoIdiom();
    uint64_t v79 = v3;
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 - 8);
    uint64_t v75 = v13;
    uint64_t v32 = v31;
    uint64_t v33 = *(unsigned __int8 *)(v31 + 80);
    long long v78 = v5;
    uint64_t v34 = (v33 + 32) & ~v33;
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_2591FFD20;
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v35 + v34, *MEMORY[0x263F76468], v30);
    specialized Set.init(_nonEmptyArrayLiteral:)(v35);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    static ImageElement.appIcon(_:imageStyle:idioms:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
    ImageElementView.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v37 = (uint64_t)v83;
    v74(v83, *MEMORY[0x263F76620], v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v37, 0, 1, v8);
    uint64_t v38 = (uint64_t)v77;
    uint64_t v39 = (uint64_t *)&v77[*(int *)(v76 + 36)];
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v37, (uint64_t)v39 + *(int *)(v40 + 28), &demangling cache variable for type metadata for ImageElement.ImageStyle?);
    *uint64_t v39 = KeyPath;
    uint64_t v41 = v84;
    uint64_t v42 = v75;
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v38, v15, v75);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v37, &demangling cache variable for type metadata for ImageElement.ImageStyle?);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
    uint64_t v43 = v82;
    outlined init with take of ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>(v38, v82);
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v43, (uint64_t)v78, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v43, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  }
  long long v99 = v85;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v45 = Text.init<A>(_:)();
  uint64_t v47 = v46;
  char v49 = v48 & 1;
  static Font.headline.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v50 = Text.font(_:)();
  uint64_t v52 = v51;
  char v54 = v53;
  uint64_t v56 = v55;
  swift_release();
  outlined consume of Text.Storage(v45, v47, v49);
  swift_bridgeObjectRelease();
  uint64_t v57 = static Alignment.leading.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v99, 0.0, 1, 0.0, 1, v57, v58, v50, v52, v54 & 1, v56);
  outlined consume of Text.Storage(v50, v52, v54 & 1);
  swift_bridgeObjectRelease();
  long long v95 = v105;
  long long v96 = v106;
  long long v97 = v107;
  long long v91 = v101;
  long long v92 = v102;
  long long v93 = v103;
  long long v94 = v104;
  long long v89 = v99;
  long long v90 = v100;
  uint64_t v59 = v88;
  uint64_t v60 = v86;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v88, v86, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  uint64_t v61 = v87;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v60, v87, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  uint64_t v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>))
               + 48);
  long long v63 = v96;
  v98[6] = v95;
  v98[7] = v96;
  long long v64 = v97;
  v98[8] = v97;
  long long v66 = v93;
  long long v65 = v94;
  v98[4] = v93;
  v98[5] = v94;
  long long v67 = v91;
  long long v68 = v92;
  v98[2] = v91;
  v98[3] = v92;
  long long v70 = v89;
  long long v69 = v90;
  v98[0] = v89;
  v98[1] = v90;
  long long v71 = (_OWORD *)(v61 + v62);
  v71[6] = v95;
  v71[7] = v63;
  v71[8] = v64;
  v71[2] = v67;
  v71[3] = v68;
  v71[4] = v66;
  v71[5] = v65;
  *long long v71 = v70;
  v71[1] = v69;
  outlined retain of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)v98);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v59, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
  long long v105 = v95;
  long long v106 = v96;
  long long v107 = v97;
  long long v101 = v91;
  long long v102 = v92;
  long long v103 = v93;
  long long v104 = v94;
  long long v99 = v89;
  long long v100 = v90;
  outlined release of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)&v99);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v60, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>);
}

uint64_t ContactHeaderView.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v41 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v3 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ImageElement.Contact.Content();
  uint64_t v6 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImageElement.SourceType();
  *(void *)&long long v39 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v37 - v13;
  uint64_t v15 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v40 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    id v17 = *v1;
    dispatch thunk of Context.currentIdiom.getter();

    char v18 = VRXIdiom.isCarPlay.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = v19;
    *(_OWORD *)(v19 + 16) = xmmword_2591FFD20;
    if (v18)
    {
      v37[2] = v2[3];
      v37[1] = v2[4];
      id v21 = v2[6];
      *(void *)(v20 + 32) = v2[5];
      *(void *)(v20 + 40) = v21;
      swift_bridgeObjectRetain();
      ImageElement.Contact.Avatar.init(contactIds:)();
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F767C0], v38);
      uint64_t v22 = *(void (**)(char *, void, uint64_t))(v3 + 104);
      uint64_t v23 = v41;
      v22(v5, *MEMORY[0x263F764C8], v41);
      ImageElement.Contact.init(_:imageStyle:)();
      uint64_t v24 = v39;
      uint64_t v25 = *(void (**)(char *, void, uint64_t))(v39 + 104);
      v25(v14, *MEMORY[0x263F766D0], v9);
      v22(v5, *MEMORY[0x263F76610], v23);
      swift_bridgeObjectRetain();
      ImageElement.AppIcon.init(_:imageStyle:)();
      v25(v12, *MEMORY[0x263F766C0], v9);
      static ImageElement.badgedImage(image:badge:)();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v24 + 8);
      v26(v12, v9);
      v26(v14, v9);
    }
    else
    {
      long long v39 = xmmword_2591FFD20;
      long long v27 = *(_OWORD *)(v2 + 9);
      long long v45 = *(_OWORD *)(v2 + 7);
      long long v46 = v27;
      char v47 = *((unsigned char *)v2 + 88);
      long long v28 = *(_OWORD *)(v2 + 5);
      long long v43 = *(_OWORD *)(v2 + 3);
      long long v44 = v28;
      long long v48 = v28;
      *(_OWORD *)(v19 + 32) = v28;
      uint64_t v29 = v3;
      uint64_t v30 = v41;
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F764D8], v41);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
      uint64_t v31 = type metadata accessor for _ProtoIdiom();
      uint64_t v32 = v5;
      uint64_t v33 = *(void *)(v31 - 8);
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v39;
      (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x263F76468], v31);
      outlined retain of String((uint64_t)&v48);
      specialized Set.init(_nonEmptyArrayLiteral:)(v35);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v30);
    }
    return ImageElementView.init(_:)();
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 ContactHeaderView.init(model:)@<Q0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  __n128 v8 = (__n128)a1[2];
  uint64_t v3 = *((void *)a1 + 6);
  uint64_t v4 = *((void *)a1 + 7);
  char v5 = a1[4] & 1;
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *(void *)a2 = EnvironmentObject.init()();
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = 0x4024000000000000;
  *(_OWORD *)(a2 + 24) = v10;
  *(_OWORD *)(a2 + 40) = v9;
  __n128 result = v8;
  *(__n128 *)(a2 + 56) = v8;
  *(void *)(a2 + 72) = v3;
  *(void *)(a2 + 80) = v4;
  *(unsigned char *)(a2 + 88) = v5;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance ContactHeaderView@<X0>(uint64_t a1@<X8>)
{
  return ContactHeaderView.body.getter(a1);
}

__n128 PhoneContactHeader.view.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v9 = *(_OWORD *)(v1 + 16);
  long long v10 = *(_OWORD *)v1;
  __n128 v8 = *(__n128 *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  char v5 = *(unsigned char *)(v1 + 64) & 1;
  outlined retain of PhoneContactHeader(v1);
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *(void *)a1 = EnvironmentObject.init()();
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = 0x4024000000000000;
  *(_OWORD *)(a1 + 24) = v10;
  *(_OWORD *)(a1 + 40) = v9;
  __n128 result = v8;
  *(__n128 *)(a1 + 56) = v8;
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 88) = v5;
  return result;
}

uint64_t outlined retain of PhoneContactHeader(uint64_t a1)
{
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in ContactHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ContactHeaderView and conformance ContactHeaderView()
{
  unint64_t result = lazy protocol witness table cache variable for type ContactHeaderView and conformance ContactHeaderView;
  if (!lazy protocol witness table cache variable for type ContactHeaderView and conformance ContactHeaderView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContactHeaderView and conformance ContactHeaderView);
  }
  return result;
}

uint64_t protocol witness for CustomCanvasComponent.view.getter in conformance PhoneContactHeader@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[7];
  uint64_t v13 = v1[6];
  char v12 = *((unsigned char *)v1 + 64);
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = EnvironmentObject.init()();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = 0x4024000000000000;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = v12;
  return result;
}

uint64_t destroy for ContactHeaderView(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  id v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ContactHeaderView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactHeaderView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactHeaderView()
{
  return &type metadata for ContactHeaderView;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>, ImageElementView>, ModifiedContent<Text, _FlexFrameLayout>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_2(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<Text, _FlexFrameLayout>(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of ModifiedContent<Text, _FlexFrameLayout>(uint64_t a1)
{
  return a1;
}

uint64_t ForEachWithIndex.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ForEachWithIndex.content.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 68));
  swift_retain();
  return v2;
}

uint64_t ForEachWithIndex.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  char v47 = a2;
  uint64_t v45 = *(a1 - 1);
  uint64_t v46 = *(void *)(v45 + 64);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v39 = *(void *)(v4 + 32);
  uint64_t v7 = *(void *)(*(void *)(*(void *)(v39 + 8) + 8) + 8);
  uint64_t v8 = type metadata accessor for EnumeratedSequence();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = v6;
  swift_getAssociatedTypeWitness();
  uint64_t v10 = MEMORY[0x263F8D6C8];
  swift_getTupleTypeMetadata2();
  uint64_t v11 = type metadata accessor for Array();
  uint64_t v44 = v11;
  uint64_t v12 = a1[3];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v55 = v11;
  uint64_t v56 = v10;
  uint64_t v57 = v12;
  uint64_t v58 = WitnessTable;
  uint64_t v59 = MEMORY[0x263F8D6D8];
  uint64_t v36 = type metadata accessor for ForEach();
  uint64_t v43 = *(void *)(v36 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v40 = (char *)&v34 - v15;
  uint64_t v16 = v9;
  MEMORY[0x25A2D8BD0](v9, v7);
  swift_getWitnessTable();
  uint64_t v55 = Array.init<A>(_:)();
  uint64_t v48 = v9;
  uint64_t v49 = v12;
  uint64_t v17 = v12;
  uint64_t v18 = a1[5];
  uint64_t v19 = a1[6];
  uint64_t v20 = v39;
  uint64_t v50 = v39;
  uint64_t v51 = v18;
  uint64_t v35 = a1[7];
  unint64_t v34 = a1;
  uint64_t v52 = v19;
  uint64_t v53 = v35;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v45;
  uint64_t v22 = v42;
  (*(void (**)(char *, uint64_t, void *))(v45 + 16))(v42, v2, a1);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v16;
  *((void *)v24 + 3) = v17;
  *((void *)v24 + 4) = v20;
  *((void *)v24 + 5) = v18;
  uint64_t v25 = v35;
  *((void *)v24 + 6) = v19;
  *((void *)v24 + 7) = v25;
  (*(void (**)(char *, char *, void *))(v21 + 32))(&v24[v23], v22, v34);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = v16;
  v26[3] = v17;
  v26[4] = v20;
  v26[5] = v18;
  v26[6] = v19;
  v26[7] = v25;
  v26[8] = partial apply for closure #1 in ForEachWithIndex.body.getter;
  v26[9] = v24;
  long long v27 = v38;
  ForEach<>.init(_:id:content:)();
  uint64_t v54 = v18;
  uint64_t v28 = v36;
  swift_getWitnessTable();
  uint64_t v29 = v43;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v31 = v40;
  v30(v40, v27, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v27, v28);
  v30(v47, v31, v28);
  return ((uint64_t (*)(char *, uint64_t))v32)(v31, v28);
}

uint64_t closure #1 in ForEachWithIndex.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v26 - v14;
  v26[0] = v16;
  v26[1] = v17;
  v26[2] = v18;
  v26[3] = v19;
  v26[4] = v20;
  v26[5] = v21;
  uint64_t v22 = type metadata accessor for ForEachWithIndex(0, (uint64_t)v26);
  (*(void (**)(uint64_t, uint64_t))(a3 + *(int *)(v22 + 68)))(a1, a2);
  unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v23(v15, v13, a4);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, a4);
  v23(a5, v15, a4);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, a4);
}

uint64_t sub_25918CC80()
{
  long long v1 = v0[2];
  v6[0] = v0[1];
  uint64_t v5 = *(void *)&v6[0];
  long long v2 = v0[3];
  v6[1] = v1;
  void v6[2] = v2;
  uint64_t v3 = *(void *)(type metadata accessor for ForEachWithIndex(0, (uint64_t)v6) - 8);
  (*(void (**)(unint64_t))(*(void *)(v5 - 8) + 8))((unint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80)
                                                                                                + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for ForEachWithIndex(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA03B0](a1, a2, &nominal type descriptor for ForEachWithIndex);
}

uint64_t partial apply for closure #1 in ForEachWithIndex.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  v14[0] = v3[2];
  v14[1] = v7;
  v14[2] = v8;
  v14[3] = v9;
  void v14[4] = v10;
  void v14[5] = v11;
  uint64_t v12 = *(void *)(type metadata accessor for ForEachWithIndex(0, (uint64_t)v14) - 8);
  return closure #1 in ForEachWithIndex.body.getter(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v7, a3);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A.Sequence.Element) -> (@out B)(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_25918CF0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A.Sequence.Element) -> (@out B)(char *a1)
{
  return thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A.Sequence.Element) -> (@out B)(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 64));
}

uint64_t ForEachWithIndex.init(data:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a9, a1, a4);
  v20[0] = a4;
  v20[1] = a5;
  uint64_t v20[2] = a6;
  v20[3] = a7;
  v20[4] = a8;
  v20[5] = a10;
  uint64_t result = type metadata accessor for ForEachWithIndex(0, (uint64_t)v20);
  uint64_t v19 = (void *)(a9 + *(int *)(result + 68));
  void *v19 = a2;
  v19[1] = a3;
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ForEachWithIndex<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata instantiation function for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t type metadata completion function for ForEachWithIndex()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ForEachWithIndex(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ForEachWithIndex(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t initializeWithCopy for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for ForEachWithIndex(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForEachWithIndex(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25918D5ECLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void storeEnumTagSinglePayload for ForEachWithIndex(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x25918D7E0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_25918D808()
{
  return swift_getWitnessTable();
}

uint64_t ForeignEmergencyCallDisambiguationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  ActionHandler.init()();
  return outlined init with take of ForeignEmergencyCallDisambiguationModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), type metadata accessor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t type metadata accessor for ForeignEmergencyCallDisambiguationView()
{
  uint64_t result = type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationView;
  if (!type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ForeignEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  MEMORY[0x270FA5388](v60);
  uint64_t v57 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v4 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for BinaryButtonView();
  uint64_t v63 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v62 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v7 = *(void *)(v69 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v69);
  uint64_t v59 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v64 = (uint64_t (*)())((char *)&v52 - v10);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0>.Storage);
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v53 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
  uint64_t v16 = MEMORY[0x270FA5388](v65);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v56 = (uint64_t)&v52 - v19;
  uint64_t v20 = (uint64_t)v1;
  uint64_t v21 = *v1;
  if (*v1)
  {
    uint64_t v70 = a1;
    id v22 = v21;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter())
    {
      long long v64 = type metadata accessor for ForeignEmergencyCallDisambiguationView;
      outlined init with copy of ForeignEmergencyCallDisambiguationView(v20, (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      unint64_t v23 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      uint64_t v24 = swift_allocObject();
      outlined init with take of ForeignEmergencyCallDisambiguationModel((uint64_t)v14, v24 + v23, (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>);
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>);
      uint64_t v25 = v53;
      ComponentStack.init(content:)();
      outlined init with copy of ForeignEmergencyCallDisambiguationView(v20, (uint64_t)v14, (uint64_t (*)(void))v64);
      uint64_t v26 = swift_allocObject();
      outlined init with take of ForeignEmergencyCallDisambiguationModel((uint64_t)v14, v26 + v23, (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      uint64_t v27 = v54;
      uint64_t v28 = v55;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v18, v25, v55);
      uint64_t v29 = (void (**)())&v18[*(int *)(v65 + 36)];
      *uint64_t v29 = partial apply for closure #2 in ForeignEmergencyCallDisambiguationView.body.getter;
      v29[1] = (void (*)())v26;
      _OWORD v29[2] = 0;
      v29[3] = 0;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v28);
      uint64_t v30 = v56;
      outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v18, v56, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v30, v67, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      uint64_t v31 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, MEMORY[0x263F77658]);
      uint64_t v75 = v68;
      uint64_t v76 = v31;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return outlined destroy of SearchCallHistoryBinaryButtonModel?(v30, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
    }
    else
    {
      uint64_t v33 = v20;
      uint64_t v34 = ForeignEmergencyCallDisambiguationView.emergencyServicesButton.getter();
      uint64_t v35 = MEMORY[0x263F1B728];
      uint64_t v36 = MEMORY[0x263F774A8];
      uint64_t v77 = MEMORY[0x263F1B728];
      uint64_t v78 = MEMORY[0x263F774A8];
      uint64_t v75 = v34;
      uint64_t v37 = v33 + *(int *)(v12 + 24);
      uint64_t v38 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v39 = v57;
      ForeignEmergencyCallDisambiguationView.button(for:)(v37 + *(int *)(v38 + 20), v57);
      unint64_t v40 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?();
      uint64_t v41 = v58;
      uint64_t v42 = v60;
      View.privacySensitive(_:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
      uint64_t v71 = v42;
      unint64_t v72 = v40;
      swift_getOpaqueTypeConformance2();
      uint64_t v43 = v61;
      uint64_t v44 = View.eraseToAnyView()();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v41, v43);
      uint64_t v73 = v35;
      uint64_t v74 = v36;
      uint64_t v71 = v44;
      uint64_t v45 = v62;
      BinaryButtonView.init(primaryButton:secondaryButton:)();
      uint64_t v46 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, MEMORY[0x263F77658]);
      char v47 = v59;
      uint64_t v48 = v68;
      View.privacySensitive(_:)();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v48);
      uint64_t v49 = v64;
      uint64_t v50 = v47;
      uint64_t v51 = v69;
      (*(void (**)(uint64_t (*)(), char *, uint64_t))(v7 + 32))(v64, v50, v69);
      (*(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v7 + 16))(v67, v49, v51);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
      uint64_t v75 = v48;
      uint64_t v76 = v46;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(uint64_t (*)(), uint64_t))(v7 + 8))(v49, v51);
    }
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in ForeignEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)
      - 8;
  uint64_t v3 = MEMORY[0x270FA5388](v49);
  char v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (uint64_t)&v44 - v5;
  uint64_t v6 = type metadata accessor for SeparatorStyle();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v53 = *(void *)(v51 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v51);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)&v44 - v19;
  uint64_t v20 = *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() + 24);
  uint64_t v44 = a1;
  uint64_t v21 = a1 + v20;
  uint64_t v22 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  ForeignEmergencyCallDisambiguationView.button(for:)(v21 + *(int *)(v22 + 20), (uint64_t)v11);
  unint64_t v23 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?();
  View.privacySensitive(_:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  uint64_t v54 = v9;
  unint64_t v55 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v54 = v24;
  uint64_t v25 = *MEMORY[0x263F76980];
  uint64_t v26 = v45;
  uint64_t v27 = v46;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 104);
  v28(v8, v25, v46);
  View.separators(_:isOverride:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v8, v27);
  swift_release();
  uint64_t v30 = v53;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v18, v51);
  uint64_t v54 = ForeignEmergencyCallDisambiguationView.emergencyServicesButton.getter();
  v28(v8, v25, v27);
  View.separators(_:isOverride:)();
  v29(v8, v27);
  swift_release();
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v31 = EnvironmentObject.init()();
  uint64_t v33 = v32;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v35 = (uint64_t)v47;
  uint64_t v36 = v51;
  v34(v47, v18, v51);
  uint64_t v37 = v35 + *(int *)(v49 + 44);
  *(void *)uint64_t v37 = v31;
  *(void *)(v37 + 8) = v33;
  *(unsigned char *)(v37 + 16) = 0;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v53 = v30 + 8;
  v38(v18, v36);
  uint64_t v39 = v48;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v35, v48, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  unint64_t v40 = v52;
  v34(v18, v52, v36);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v39, v35, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  uint64_t v41 = v50;
  v34(v50, v18, v36);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v35, (uint64_t)&v41[*(int *)(v42 + 48)], &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  v38(v40, v36);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  return ((uint64_t (*)(char *, uint64_t))v38)(v18, v36);
}

uint64_t ForeignEmergencyCallDisambiguationView.emergencyServicesButton.getter()
{
  uint64_t v1 = type metadata accessor for ButtonItemButtonStyle.Role();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonRole(_:foreground:background:)>>.0);
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  ForeignEmergencyCallDisambiguationView.button(for:)(v0 + *(int *)(v14 + 24), (uint64_t)v7);
  uint64_t v15 = *MEMORY[0x263F774C8];
  uint64_t v23 = v2;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v27 = v1;
  v16(v4, v15, v1);
  uint64_t v28 = static Color.white.getter();
  AnyShapeStyle.init<A>(_:)();
  if (one-time initialization token for emergencyRed != -1) {
    swift_once();
  }
  uint64_t v28 = static Color.emergencyRed;
  swift_retain();
  AnyShapeStyle.init<A>(_:)();
  unint64_t v17 = lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?();
  View.buttonRole(_:foreground:background:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v27);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
  uint64_t v28 = v5;
  unint64_t v29 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.privacySensitive(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  uint64_t v28 = v8;
  unint64_t v29 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v26;
  uint64_t v20 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v19);
  return v20;
}

void closure #2 in ForeignEmergencyCallDisambiguationView.body.getter(id *a1)
{
  if (*a1)
  {
    id v1 = *a1;
    dispatch thunk of Context.hideBackgroundBehindSiri()();
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t ForeignEmergencyCallDisambiguationView.button(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>);
  uint64_t v77 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v75 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>.Storage);
  MEMORY[0x270FA5388](v87);
  uint64_t v88 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SeparatorStyle();
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v78 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v81 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v82 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for SimpleItemRichView();
  uint64_t v71 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v69 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  uint64_t v73 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  unint64_t v72 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v76 = *(void *)(v86 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v86);
  uint64_t v70 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)&v68 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>);
  uint64_t v91 = *(void *)(v14 - 8);
  uint64_t v92 = v14;
  MEMORY[0x270FA5388](v14);
  long long v85 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v68 - v24;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, (uint64_t)v18, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
LABEL_8:
    uint64_t v55 = 1;
    uint64_t v56 = v93;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v56, v55, 1, v92);
  }
  outlined init with take of ForeignEmergencyCallDisambiguationModel((uint64_t)v18, (uint64_t)v25, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  uint64_t v26 = v119;
  if (!v119)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v25);
    goto LABEL_8;
  }
  uint64_t v68 = v25;
  if (*v90)
  {
    uint64_t v27 = v118;
    id v28 = *v90;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter())
    {
      uint64_t v118 = v27;
      uint64_t v119 = v26;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v29 = Text.init<A>(_:)();
      uint64_t v31 = v30;
      char v33 = v32;
      uint64_t v35 = v34;
      uint64_t v120 = MEMORY[0x263F1A838];
      uint64_t v121 = MEMORY[0x263F77350];
      uint64_t v36 = swift_allocObject();
      uint64_t v118 = v36;
      *(void *)(v36 + 16) = v29;
      *(void *)(v36 + 24) = v31;
      *(unsigned char *)(v36 + 32) = v33 & 1;
      *(void *)(v36 + 40) = v35;
      uint64_t v117 = 0;
      long long v115 = 0u;
      long long v116 = 0u;
      uint64_t v114 = 0;
      long long v112 = 0u;
      long long v113 = 0u;
      uint64_t v111 = 0;
      long long v109 = 0u;
      long long v110 = 0u;
      uint64_t v108 = 0;
      long long v106 = 0u;
      long long v107 = 0u;
      uint64_t v105 = 0;
      long long v103 = 0u;
      long long v104 = 0u;
      uint64_t v102 = 0;
      long long v100 = 0u;
      long long v101 = 0u;
      uint64_t v99 = 0;
      long long v97 = 0u;
      long long v98 = 0u;
      uint64_t v96 = 0;
      long long v94 = 0u;
      long long v95 = 0u;
      uint64_t v37 = v69;
      SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
      uint64_t v38 = v82;
      outlined init with copy of ForeignEmergencyCallDisambiguationView((uint64_t)v90, v82, (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      outlined init with copy of ForeignEmergencyCallDisambiguationView((uint64_t)v68, (uint64_t)v23, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      unint64_t v39 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
      unint64_t v40 = (v8 + *(unsigned __int8 *)(v20 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v41 = swift_allocObject();
      outlined init with take of ForeignEmergencyCallDisambiguationModel(v38, v41 + v39, (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      outlined init with take of ForeignEmergencyCallDisambiguationModel((uint64_t)v23, v41 + v40, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      uint64_t v42 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
      uint64_t v43 = v72;
      uint64_t v44 = v83;
      View.componentTapped(isNavigation:perform:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v44);
      uint64_t v46 = v78;
      uint64_t v45 = v79;
      uint64_t v47 = v80;
      (*(void (**)(char *, void, uint64_t))(v79 + 104))(v78, *MEMORY[0x263F76980], v80);
      uint64_t v118 = v44;
      uint64_t v119 = v42;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v49 = v70;
      uint64_t v50 = v84;
      View.separators(_:isOverride:)();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v50);
      uint64_t v51 = v76;
      uint64_t v52 = v74;
      uint64_t v53 = v86;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v74, v49, v86);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v88, v52, v53);
      swift_storeEnumTagMultiPayload();
      uint64_t v118 = v50;
      uint64_t v119 = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>);
      uint64_t v54 = (uint64_t)v85;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    }
    else
    {
      uint64_t v57 = v82;
      outlined init with copy of ForeignEmergencyCallDisambiguationView((uint64_t)v90, v82, (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      outlined init with copy of ForeignEmergencyCallDisambiguationView((uint64_t)v68, (uint64_t)v23, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      unint64_t v58 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
      unint64_t v59 = (v8 + *(unsigned __int8 *)(v20 + 80) + v58) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v60 = swift_allocObject();
      outlined init with take of ForeignEmergencyCallDisambiguationModel(v57, v60 + v58, (uint64_t (*)(void))type metadata accessor for ForeignEmergencyCallDisambiguationView);
      uint64_t v61 = outlined init with take of ForeignEmergencyCallDisambiguationModel((uint64_t)v23, v60 + v59, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
      MEMORY[0x270FA5388](v61);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>);
      lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
      uint64_t v62 = v75;
      Button.init(action:label:)();
      swift_bridgeObjectRelease();
      uint64_t v63 = v77;
      uint64_t v64 = v89;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v88, v62, v89);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
      uint64_t v118 = v83;
      uint64_t v119 = v65;
      uint64_t v66 = swift_getOpaqueTypeConformance2();
      uint64_t v118 = v84;
      uint64_t v119 = v66;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>);
      uint64_t v54 = (uint64_t)v85;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v68);
    uint64_t v56 = v93;
    outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v54, v93, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>);
    uint64_t v55 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v56, v55, 1, v92);
  }
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>?);
    lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
    type metadata accessor for SimpleItemRichView();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, Button<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in ForeignEmergencyCallDisambiguationView.body.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in ForeignEmergencyCallDisambiguationView.body.getter(v4, a1);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = (int *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  unint64_t v5 = v0 + v2 + v1[8];
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v7 = *(unsigned int (**)(unint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48);
  if (!v7(v5, 1, v6))
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
    unint64_t v9 = v5 + v6[5];
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v11 = *(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v11(v9, v10);
    unint64_t v12 = v5 + v6[6];
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    unint64_t v14 = v5 + v6[7];
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    v11(v5 + v6[8], v10);
    unint64_t v16 = v5 + v6[9];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    unint64_t v18 = v5 + v6[10];
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  unint64_t v20 = v5 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
  if (!v7(v20, 1, v6))
  {
    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    unint64_t v22 = v20 + v6[5];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v24 = *(void (**)(unint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
    v24(v22, v23);
    unint64_t v25 = v20 + v6[6];
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    unint64_t v27 = v20 + v6[7];
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    v24(v20 + v6[8], v23);
    unint64_t v29 = v20 + v6[9];
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    unint64_t v31 = v20 + v6[10];
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #2 in ForeignEmergencyCallDisambiguationView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8);
  unint64_t v2 = (id *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  closure #2 in ForeignEmergencyCallDisambiguationView.body.getter(v2);
}

uint64_t ForeignEmergencyCallDisambiguationView.performAction(for:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for ActionProperty();
  uint64_t v13 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2591FFD20;
  uint64_t v17 = type metadata accessor for Command();
  uint64_t v18 = MEMORY[0x263F771C8];
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v16 + 32));
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  uint64_t v20 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t *boxed_opaque_existential_1 = v20;
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v17);
  ActionProperty.init(_:)();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v30, (uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v21 = type metadata accessor for StandardActionHandler();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v24 = (uint64_t)v28;
    uint64_t v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v28, v15, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v25);
    uint64_t v26 = type metadata accessor for InteractionType();
    uint64_t v27 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v29, 1, 1, v26);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v27, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v24, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  }
}

uint64_t closure #1 in ForeignEmergencyCallDisambiguationView.button(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  ActionHandler.wrappedValue.getter();
  ForeignEmergencyCallDisambiguationView.performAction(for:with:)(a2, (uint64_t)v5);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #3 in ForeignEmergencyCallDisambiguationView.button(for:)@<X0>(uint64_t a1@<X8>)
{
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 1;
  return result;
}

uint64_t one-time initialization function for emergencyServicesItem(uint64_t a1)
{
  return one-time initialization function for emergencyServicesItem(a1, static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem, 0xD000000000000012, 0x80000002592052A0);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for emergencyServicesItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for emergencyServicesItem, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem, a1);
}

uint64_t one-time initialization function for foreignEmergencyNumberItem(uint64_t a1)
{
  return one-time initialization function for emergencyServicesItem(a1, static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem, 14129, 0xE200000000000000);
}

uint64_t one-time initialization function for emergencyServicesItem(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_allocate_value_buffer(v10, a2);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)a2);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F64A18]), sel_init);
  UUID.init()();
  return DisambiguationItemWithDirectInvocationModel.init(id:personHandle:spokenHandle:shouldPrintHandleBlue:label:rskeCommand:type:)((uint64_t)v9, 0, 0xE000000000000000, 0, 0xE000000000000000, 1, a3, a4, v11, v12, 0, 0);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for foreignEmergencyNumberItem, type metadata accessor for DisambiguationItemWithDirectInvocationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem.getter@<X0>(uint64_t a1@<X8>)
{
  return static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter(&one-time initialization token for foreignEmergencyNumberItem, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem, a1);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return outlined init with copy of ForeignEmergencyCallDisambiguationView(v6, a3, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t one-time initialization function for sampleModel()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v15 - v4;
  uint64_t v6 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  __swift_allocate_value_buffer((uint64_t)v6, static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  uint64_t v7 = __swift_project_value_buffer((uint64_t)v6, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  if (one-time initialization token for emergencyServicesItem != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem);
  outlined init with copy of ForeignEmergencyCallDisambiguationView(v9, (uint64_t)v5, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  uint64_t v10 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v10(v5, 0, 1, v8);
  if (one-time initialization token for foreignEmergencyNumberItem != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v8, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.foreignEmergencyNumberItem);
  outlined init with copy of ForeignEmergencyCallDisambiguationView(v11, (uint64_t)v3, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  v10(v3, 0, 1, v8);
  id v12 = (void *)(v7 + v6[7]);
  *id v12 = 0xD00000000000001ELL;
  v12[1] = 0x8000000259205010;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v5, v7, &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t result = outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v3, v7 + v6[5], &demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t v14 = (void *)(v7 + v6[6]);
  *uint64_t v14 = 0;
  v14[1] = 0xE000000000000000;
  return result;
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.sampleModel.unsafeMutableAddressor()
{
  return ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(&one-time initialization token for sampleModel, type metadata accessor for ForeignEmergencyCallDisambiguationModel, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
}

uint64_t ForeignEmergencyCallDisambiguationView_Previews.emergencyServicesItem.unsafeMutableAddressor(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);
  return __swift_project_value_buffer(v5, a3);
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.sampleModel.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  return outlined init with copy of ForeignEmergencyCallDisambiguationView(v3, a1, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t outlined init with copy of ForeignEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t static ForeignEmergencyCallDisambiguationView_Previews.previews.getter()
{
  uint64_t v0 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  outlined init with copy of ForeignEmergencyCallDisambiguationView(v3, (uint64_t)v2, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView and conformance ForeignEmergencyCallDisambiguationView, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t implicit closure #1 in static ForeignEmergencyCallDisambiguationView_Previews.previews.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForeignEmergencyCallDisambiguationView();
  outlined init with copy of ForeignEmergencyCallDisambiguationView(a1, (uint64_t)a2 + *(int *)(v4 + 24), type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v5;
  return ActionHandler.init()();
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ForeignEmergencyCallDisambiguationView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in ForeignEmergencyCallDisambiguationView_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for static PreviewProvider.previews.getter in conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  uint64_t v0 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)static ForeignEmergencyCallDisambiguationView_Previews.sampleModel);
  outlined init with copy of ForeignEmergencyCallDisambiguationView(v3, (uint64_t)v2, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  type metadata accessor for ForeignEmergencyCallDisambiguationView();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationView and conformance ForeignEmergencyCallDisambiguationView, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t protocol witness for static PreviewProvider.platform.getter in conformance ForeignEmergencyCallDisambiguationView_Previews()
{
  return MEMORY[0x270F001E8]();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance ForeignEmergencyCallDisambiguationView_Previews(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews();
  return MEMORY[0x270F00210](a1, v2);
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance ForeignEmergencyCallDisambiguationView_Previews(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationView_Previews and conformance ForeignEmergencyCallDisambiguationView_Previews();
  return MEMORY[0x270F00200](a1, v2);
}

char *initializeBufferWithCopyOfBuffer for ForeignEmergencyCallDisambiguationView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    uint64_t v18 = *((void *)v17 - 1);
    uint64_t v19 = *(unsigned int (**)(void, void, void))(v18 + 48);
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
      uint64_t v22 = v17[5];
      uint64_t v23 = &v15[v22];
      uint64_t v24 = &v16[v22];
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v79 = v19;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      v26(v23, v24, v25);
      uint64_t v27 = v17[6];
      uint64_t v28 = &v15[v27];
      unint64_t v29 = &v16[v27];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = v17[7];
      uint64_t v32 = &v15[v31];
      char v33 = &v16[v31];
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      v26(&v15[v17[8]], &v16[v17[8]], v25);
      uint64_t v19 = v79;
      uint64_t v35 = v17[9];
      uint64_t v36 = &v15[v35];
      uint64_t v37 = &v16[v35];
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v17[10];
      unint64_t v40 = &v15[v39];
      uint64_t v41 = &v16[v39];
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v43 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
    uint64_t v44 = v43[5];
    uint64_t v45 = &v15[v44];
    uint64_t v46 = &v16[v44];
    if (v19(&v16[v44], 1, v17))
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
      uint64_t v49 = v17[5];
      uint64_t v50 = &v45[v49];
      uint64_t v80 = v18;
      uint64_t v51 = &v46[v49];
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
      v52(v50, v51, v78);
      uint64_t v53 = v17[6];
      uint64_t v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = v17[7];
      unint64_t v58 = &v45[v57];
      unint64_t v59 = &v46[v57];
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      v52(&v45[v17[8]], &v46[v17[8]], v78);
      uint64_t v61 = v17[9];
      uint64_t v62 = &v45[v61];
      uint64_t v63 = &v46[v61];
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      uint64_t v65 = v17[10];
      uint64_t v66 = &v45[v65];
      uint64_t v67 = &v46[v65];
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
      (*(void (**)(char *, void, uint64_t, int *))(v80 + 56))(v45, 0, 1, v17);
    }
    uint64_t v69 = v43[6];
    uint64_t v70 = &v15[v69];
    uint64_t v71 = &v16[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = v43[7];
    uint64_t v74 = &v15[v73];
    uint64_t v75 = &v16[v73];
    uint64_t v76 = *((void *)v75 + 1);
    *(void *)uint64_t v74 = *(void *)v75;
    *((void *)v74 + 1) = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ForeignEmergencyCallDisambiguationView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v7 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
    uint64_t v10 = &v6[v7[5]];
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    id v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
    v12(v10, v11);
    uint64_t v13 = &v6[v7[6]];
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = &v6[v7[7]];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    v12(&v6[v7[8]], v11);
    uint64_t v17 = &v6[v7[9]];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v19 = &v6[v7[10]];
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  uint64_t v21 = &v6[*(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20)];
  if (!v8(v21, 1, v7))
  {
    uint64_t v22 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    uint64_t v23 = &v21[v7[5]];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v25 = *(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8);
    v25(v23, v24);
    uint64_t v26 = &v21[v7[6]];
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    uint64_t v28 = &v21[v7[7]];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    v25(&v21[v7[8]], v24);
    uint64_t v30 = &v21[v7[9]];
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
    uint64_t v32 = &v21[v7[10]];
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ForeignEmergencyCallDisambiguationView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  id v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)v5 + v14;
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v81 = *((void *)v17 - 1);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, int *))(v81 + 48);
  if (v18(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
    uint64_t v21 = v17[5];
    uint64_t v22 = &v15[v21];
    uint64_t v23 = &v16[v21];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v79 = v5;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    uint64_t v26 = v17[6];
    uint64_t v27 = &v15[v26];
    uint64_t v28 = &v16[v26];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v17[7];
    uint64_t v31 = &v15[v30];
    uint64_t v32 = &v16[v30];
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    v25(&v15[v17[8]], &v16[v17[8]], v24);
    uint64_t v5 = v79;
    uint64_t v34 = v17[9];
    uint64_t v35 = &v15[v34];
    uint64_t v36 = &v16[v34];
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    uint64_t v38 = v17[10];
    uint64_t v39 = &v15[v38];
    unint64_t v40 = &v16[v38];
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    (*(void (**)(char *, void, uint64_t, int *))(v81 + 56))(v15, 0, 1, v17);
  }
  uint64_t v42 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v43 = v42[5];
  uint64_t v44 = &v15[v43];
  uint64_t v45 = &v16[v43];
  if (v18(&v16[v43], 1, v17))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v47 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v44, v45, v47);
    uint64_t v48 = v17[5];
    uint64_t v49 = &v44[v48];
    uint64_t v50 = &v45[v48];
    uint64_t v80 = v5;
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
    v52(v49, v50, v51);
    uint64_t v53 = v17[6];
    uint64_t v54 = &v44[v53];
    uint64_t v55 = &v45[v53];
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    uint64_t v57 = v17[7];
    unint64_t v58 = &v44[v57];
    unint64_t v59 = &v45[v57];
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
    uint64_t v61 = v51;
    uint64_t v5 = v80;
    v52(&v44[v17[8]], &v45[v17[8]], v61);
    uint64_t v62 = v17[9];
    uint64_t v63 = &v44[v62];
    uint64_t v64 = &v45[v62];
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    uint64_t v66 = v17[10];
    uint64_t v67 = &v44[v66];
    uint64_t v68 = &v45[v66];
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
    (*(void (**)(char *, void, uint64_t, int *))(v81 + 56))(v44, 0, 1, v17);
  }
  uint64_t v70 = v42[6];
  uint64_t v71 = &v15[v70];
  uint64_t v72 = &v16[v70];
  uint64_t v73 = *((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = v42[7];
  uint64_t v75 = &v15[v74];
  uint64_t v76 = &v16[v74];
  uint64_t v77 = *((void *)v76 + 1);
  *(void *)uint64_t v75 = *(void *)v76;
  *((void *)v75 + 1) = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t assignWithCopy for ForeignEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v124 = a1;
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v122 = *((void *)v16 - 1);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v122 + 48);
  LODWORD(v11) = v17(v14, 1, v16);
  int v18 = v17(v15, 1, v16);
  if (v11)
  {
    if (!v18)
    {
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      uint64_t v20 = v16[5];
      uint64_t v21 = &v14[v20];
      uint64_t v22 = &v15[v20];
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      v24(v21, v22, v23);
      uint64_t v25 = v16[6];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      uint64_t v29 = v16[7];
      uint64_t v30 = &v14[v29];
      uint64_t v31 = &v15[v29];
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      v24(&v14[v16[8]], &v15[v16[8]], v23);
      uint64_t v33 = v16[9];
      uint64_t v34 = &v14[v33];
      uint64_t v35 = &v15[v33];
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      uint64_t v37 = v16[10];
      uint64_t v38 = &v14[v37];
      uint64_t v39 = &v15[v37];
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      (*(void (**)(char *, void, uint64_t, int *))(v122 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v14);
LABEL_6:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v14, v15, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v78 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 24))(v14, v15, v78);
  uint64_t v79 = v16[5];
  uint64_t v80 = &v14[v79];
  uint64_t v81 = &v15[v79];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24);
  v83(v80, v81, v82);
  uint64_t v84 = v16[6];
  long long v85 = &v14[v84];
  uint64_t v86 = &v15[v84];
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 24))(v85, v86, v87);
  uint64_t v88 = v16[7];
  uint64_t v89 = &v14[v88];
  long long v90 = &v15[v88];
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
  v83(&v14[v16[8]], &v15[v16[8]], v82);
  uint64_t v92 = v16[9];
  uint64_t v93 = &v14[v92];
  long long v94 = &v15[v92];
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 24))(v93, v94, v95);
  uint64_t v96 = v16[10];
  long long v97 = &v14[v96];
  long long v98 = &v15[v96];
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 24))(v97, v98, v99);
LABEL_7:
  uint64_t v42 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v43 = v42[5];
  uint64_t v44 = &v14[v43];
  uint64_t v45 = &v15[v43];
  int v46 = v17(&v14[v43], 1, v16);
  int v47 = v17(v45, 1, v16);
  if (!v46)
  {
    if (!v47)
    {
      uint64_t v100 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 24))(v44, v45, v100);
      uint64_t v101 = v16[5];
      uint64_t v102 = &v44[v101];
      long long v103 = &v45[v101];
      uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      long long v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 24);
      v104(v102, v103, v123);
      uint64_t v105 = v16[6];
      long long v106 = &v44[v105];
      long long v107 = &v45[v105];
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 24))(v106, v107, v108);
      uint64_t v109 = v16[7];
      long long v110 = &v44[v109];
      uint64_t v111 = &v45[v109];
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 24))(v110, v111, v112);
      v104(&v44[v16[8]], &v45[v16[8]], v123);
      uint64_t v113 = v16[9];
      uint64_t v114 = &v44[v113];
      long long v115 = &v45[v113];
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 24))(v114, v115, v116);
      uint64_t v117 = v16[10];
      uint64_t v118 = &v44[v117];
      uint64_t v119 = &v45[v117];
      uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 24))(v118, v119, v120);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v44);
    goto LABEL_12;
  }
  if (v47)
  {
LABEL_12:
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v44, v45, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v44, v45, v48);
  uint64_t v49 = v16[5];
  uint64_t v50 = &v44[v49];
  uint64_t v51 = &v45[v49];
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v121 = v42;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
  v53(v50, v51, v52);
  uint64_t v54 = v16[6];
  uint64_t v55 = &v44[v54];
  uint64_t v56 = &v45[v54];
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
  uint64_t v58 = v16[7];
  unint64_t v59 = &v44[v58];
  uint64_t v60 = &v45[v58];
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  v53(&v44[v16[8]], &v45[v16[8]], v52);
  uint64_t v42 = v121;
  uint64_t v62 = v16[9];
  uint64_t v63 = &v44[v62];
  uint64_t v64 = &v45[v62];
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
  uint64_t v66 = v16[10];
  uint64_t v67 = &v44[v66];
  uint64_t v68 = &v45[v66];
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
  (*(void (**)(char *, void, uint64_t, int *))(v122 + 56))(v44, 0, 1, v16);
LABEL_13:
  uint64_t v71 = v42[6];
  uint64_t v72 = &v14[v71];
  uint64_t v73 = &v15[v71];
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = *((void *)v73 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = v42[7];
  uint64_t v75 = &v14[v74];
  uint64_t v76 = &v15[v74];
  *(void *)uint64_t v75 = *(void *)v76;
  *((void *)v75 + 1) = *((void *)v76 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v124;
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for ForeignEmergencyCallDisambiguationView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, int *))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v11, v12, v17);
    uint64_t v18 = v13[5];
    uint64_t v19 = &v11[v18];
    uint64_t v20 = &v12[v18];
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v67 = v14;
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    v22(v19, v20, v21);
    uint64_t v23 = v13[6];
    uint64_t v24 = &v11[v23];
    uint64_t v25 = &v12[v23];
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    uint64_t v27 = v13[7];
    uint64_t v28 = &v11[v27];
    uint64_t v29 = &v12[v27];
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    v22(&v11[v13[8]], &v12[v13[8]], v21);
    uint64_t v14 = v67;
    uint64_t v31 = v13[9];
    uint64_t v32 = &v11[v31];
    uint64_t v33 = &v12[v31];
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    uint64_t v35 = v13[10];
    uint64_t v36 = &v11[v35];
    uint64_t v37 = &v12[v35];
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    (*(void (**)(char *, void, uint64_t, int *))(v67 + 56))(v11, 0, 1, v13);
  }
  uint64_t v39 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v40 = v39[5];
  uint64_t v41 = &v11[v40];
  uint64_t v42 = &v12[v40];
  if (v15(&v12[v40], 1, v13))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v44 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v41, v42, v44);
    uint64_t v45 = v13[5];
    int v46 = &v41[v45];
    int v47 = &v42[v45];
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v68 = v14;
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32);
    v48(v46, v47, v66);
    uint64_t v49 = v13[6];
    uint64_t v50 = &v41[v49];
    uint64_t v51 = &v42[v49];
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
    uint64_t v53 = v13[7];
    uint64_t v54 = &v41[v53];
    uint64_t v55 = &v42[v53];
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
    v48(&v41[v13[8]], &v42[v13[8]], v66);
    uint64_t v57 = v13[9];
    uint64_t v58 = &v41[v57];
    unint64_t v59 = &v42[v57];
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
    uint64_t v61 = v13[10];
    uint64_t v62 = &v41[v61];
    uint64_t v63 = &v42[v61];
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
    (*(void (**)(char *, void, uint64_t, int *))(v68 + 56))(v41, 0, 1, v13);
  }
  *(_OWORD *)&v11[v39[6]] = *(_OWORD *)&v12[v39[6]];
  *(_OWORD *)&v11[v39[7]] = *(_OWORD *)&v12[v39[7]];
  return a1;
}

uint64_t assignWithTake for ForeignEmergencyCallDisambiguationView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v126 = a1;
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v124 = *((void *)v14 - 1);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, int *))(v124 + 48);
  LODWORD(v9) = v15(v12, 1, v14);
  int v16 = v15(v13, 1, v14);
  if (v9)
  {
    if (!v16)
    {
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
      uint64_t v18 = v14[5];
      uint64_t v19 = &v12[v18];
      uint64_t v20 = &v13[v18];
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v22(v19, v20, v21);
      uint64_t v23 = v14[6];
      uint64_t v24 = &v12[v23];
      uint64_t v25 = &v13[v23];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      uint64_t v27 = v14[7];
      uint64_t v28 = &v12[v27];
      uint64_t v29 = &v13[v27];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      v22(&v12[v14[8]], &v13[v14[8]], v21);
      uint64_t v31 = v14[9];
      uint64_t v32 = &v12[v31];
      uint64_t v33 = &v13[v31];
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      uint64_t v35 = v14[10];
      uint64_t v36 = &v12[v35];
      uint64_t v37 = &v13[v35];
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, int *))(v124 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v12);
LABEL_6:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v12, v13, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v80 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 40))(v12, v13, v80);
  uint64_t v81 = v14[5];
  uint64_t v82 = &v12[v81];
  uint64_t v83 = &v13[v81];
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  long long v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 40);
  v85(v82, v83, v84);
  uint64_t v86 = v14[6];
  uint64_t v87 = &v12[v86];
  uint64_t v88 = &v13[v86];
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 40))(v87, v88, v89);
  uint64_t v90 = v14[7];
  uint64_t v91 = &v12[v90];
  uint64_t v92 = &v13[v90];
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 40))(v91, v92, v93);
  v85(&v12[v14[8]], &v13[v14[8]], v84);
  uint64_t v94 = v14[9];
  uint64_t v95 = &v12[v94];
  uint64_t v96 = &v13[v94];
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 40))(v95, v96, v97);
  uint64_t v98 = v14[10];
  uint64_t v99 = &v12[v98];
  uint64_t v100 = &v13[v98];
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 40))(v99, v100, v101);
LABEL_7:
  uint64_t v40 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v41 = v40[5];
  uint64_t v42 = &v12[v41];
  uint64_t v43 = &v13[v41];
  int v44 = v15(&v12[v41], 1, v14);
  int v45 = v15(v43, 1, v14);
  if (!v44)
  {
    if (!v45)
    {
      uint64_t v102 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 40))(v42, v43, v102);
      uint64_t v103 = v14[5];
      long long v104 = &v42[v103];
      uint64_t v105 = &v43[v103];
      uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      long long v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 40);
      v106(v104, v105, v125);
      uint64_t v107 = v14[6];
      uint64_t v108 = &v42[v107];
      uint64_t v109 = &v43[v107];
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 40))(v108, v109, v110);
      uint64_t v111 = v14[7];
      uint64_t v112 = &v42[v111];
      uint64_t v113 = &v43[v111];
      uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 40))(v112, v113, v114);
      v106(&v42[v14[8]], &v43[v14[8]], v125);
      uint64_t v115 = v14[9];
      uint64_t v116 = &v42[v115];
      uint64_t v117 = &v43[v115];
      uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 40))(v116, v117, v118);
      uint64_t v119 = v14[10];
      uint64_t v120 = &v42[v119];
      uint64_t v121 = &v43[v119];
      uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 40))(v120, v121, v122);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v42);
    goto LABEL_12;
  }
  if (v45)
  {
LABEL_12:
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v42, v43, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v46 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v42, v43, v46);
  uint64_t v47 = v14[5];
  uint64_t v48 = &v42[v47];
  uint64_t v49 = &v43[v47];
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v123 = v40;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32);
  v51(v48, v49, v50);
  uint64_t v52 = v14[6];
  uint64_t v53 = &v42[v52];
  uint64_t v54 = &v43[v52];
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  uint64_t v56 = v14[7];
  uint64_t v57 = &v42[v56];
  uint64_t v58 = &v43[v56];
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
  v51(&v42[v14[8]], &v43[v14[8]], v50);
  uint64_t v40 = v123;
  uint64_t v60 = v14[9];
  uint64_t v61 = &v42[v60];
  uint64_t v62 = &v43[v60];
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
  uint64_t v64 = v14[10];
  uint64_t v65 = &v42[v64];
  uint64_t v66 = &v43[v64];
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
  (*(void (**)(char *, void, uint64_t, int *))(v124 + 56))(v42, 0, 1, v14);
LABEL_13:
  uint64_t v69 = v40[6];
  uint64_t v70 = &v12[v69];
  uint64_t v71 = &v13[v69];
  uint64_t v73 = *(void *)v71;
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = v73;
  *((void *)v70 + 1) = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = v40[7];
  uint64_t v75 = &v12[v74];
  uint64_t v76 = &v13[v74];
  uint64_t v78 = *(void *)v76;
  uint64_t v77 = *((void *)v76 + 1);
  *(void *)uint64_t v75 = v78;
  *((void *)v75 + 1) = v77;
  swift_bridgeObjectRelease();
  return v126;
}

uint64_t getEnumTagSinglePayload for ForeignEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259193EA8);
}

uint64_t sub_259193EA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259193FF4);
}

void *sub_259193FF4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for ForeignEmergencyCallDisambiguationView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ForeignEmergencyCallDisambiguationModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForeignEmergencyCallDisambiguationView_Previews()
{
  return &type metadata for ForeignEmergencyCallDisambiguationView_Previews;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0>);
    lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    type metadata accessor for BinaryButtonView();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, MEMORY[0x263F77658]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)>>, _AppearanceActionModifier>, <<opaque return type of View.privacySensitive(_:)>>.0> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_2591942EC()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type SnippetPreview<ForeignEmergencyCallDisambiguationModel, ForeignEmergencyCallDisambiguationView> and conformance SnippetPreview<A, B>, &demangling cache variable for type metadata for SnippetPreview<ForeignEmergencyCallDisambiguationModel, ForeignEmergencyCallDisambiguationView>);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t outlined init with take of ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #3 in ForeignEmergencyCallDisambiguationView.button(for:)@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in ForeignEmergencyCallDisambiguationView.button(for:)(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_2591944F8()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = v0;
  unint64_t v2 = (int *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v52 = *(void *)(*(void *)v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);

  uint64_t v8 = v1 + v4 + v2[7];
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v1 + v4 + v2[8];
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v6 + 48);
  if (!v11(v10, 1, v5))
  {
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
    uint64_t v13 = v10 + v5[5];
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    v15(v13, v14);
    uint64_t v16 = v10 + v5[6];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v10 + v5[7];
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    v15(v10 + v5[8], v14);
    uint64_t v4 = (v3 + 16) & ~v3;
    uint64_t v20 = v10 + v5[9];
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    uint64_t v22 = v10 + v5[10];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  uint64_t v24 = v10 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
  if (!v11(v24, 1, v5))
  {
    uint64_t v25 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    uint64_t v26 = v24 + v5[5];
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v51 = v4;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
    v28(v26, v27);
    uint64_t v29 = v24 + v5[6];
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
    uint64_t v31 = v24 + v5[7];
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    v28(v24 + v5[8], v27);
    uint64_t v4 = v51;
    uint64_t v33 = v24 + v5[9];
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
    uint64_t v35 = v24 + v5[10];
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v1 + ((v4 + v52 + v7) & ~v7);
  uint64_t v38 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  uint64_t v39 = v37 + v5[5];
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8);
  v41(v39, v40);
  uint64_t v42 = v37 + v5[6];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  uint64_t v44 = v37 + v5[7];
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
  v41(v37 + v5[8], v40);
  uint64_t v46 = v37 + v5[9];
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
  uint64_t v48 = v37 + v5[10];
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ForeignEmergencyCallDisambiguationView.button(for:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for ForeignEmergencyCallDisambiguationView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for DisambiguationItemWithDirectInvocationModel(0) - 8);
  return closure #1 in ForeignEmergencyCallDisambiguationView.button(for:)(v0 + v2, v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t Symbols.rawValue.getter(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x70752E776F727261;
      break;
    case 2:
      uint64_t result = 0x7269632E6F666E69;
      break;
    case 3:
      uint64_t result = 0x662E656C63726963;
      break;
    case 4:
      uint64_t result = 0xD000000000000019;
      break;
    case 5:
      uint64_t v3 = 0x2E656E6F6870;
      goto LABEL_8;
    case 6:
      uint64_t v3 = 0x2E6F65646976;
LABEL_8:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6966000000000000;
      break;
    case 7:
      uint64_t result = 0x6B72616D78;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static RFImage.sfSymbol(_:)()
{
  static RFImage.symbol(_:dark:)();
  return swift_bridgeObjectRelease();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Symbols(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = Symbols.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == Symbols.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Symbols()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  Symbols.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Symbols()
{
  Symbols.rawValue.getter(*v0);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Symbols()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  Symbols.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Symbols@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized Symbols.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance Symbols@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Symbols.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t specialized Symbols.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of Symbols.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

unint64_t lazy protocol witness table accessor for type Symbols and conformance Symbols()
{
  unint64_t result = lazy protocol witness table cache variable for type Symbols and conformance Symbols;
  if (!lazy protocol witness table cache variable for type Symbols and conformance Symbols)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Symbols and conformance Symbols);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Symbols(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259195364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Symbols()
{
  return &type metadata for Symbols;
}

uint64_t AppDescriptionView.app.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AppDescriptionView();
  return outlined init with copy of AppDescription(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for AppDescription);
}

uint64_t type metadata accessor for AppDescriptionView()
{
  uint64_t result = type metadata singleton initialization cache for AppDescriptionView;
  if (!type metadata singleton initialization cache for AppDescriptionView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppDescriptionView.imageStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppDescriptionView() + 28);
  uint64_t v4 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AppDescriptionView.fontWeight.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AppDescriptionView() + 32));
}

uint64_t AppDescriptionView.init(for:imageStyle:fontWeight:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a5 = EnvironmentObject.init()();
  a5[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for AppDescriptionView();
  ActionHandler.init()();
  outlined init with take of AppDescription(a1, (uint64_t)a5 + v11[6], (uint64_t (*)(void))type metadata accessor for AppDescription);
  uint64_t v12 = (char *)a5 + v11[7];
  uint64_t v13 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
  uint64_t v15 = (char *)a5 + v11[8];
  *(void *)uint64_t v15 = a3;
  v15[8] = a4 & 1;
  return result;
}

uint64_t AppDescriptionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = type metadata accessor for AppDescriptionView();
  uint64_t v3 = v2 - 8;
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v25 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v24 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SimpleItemRichView();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(int *)(v3 + 32);
  uint64_t v14 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AppDescription() + 20) + v13);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v55 = MEMORY[0x263F8D310];
  uint64_t v56 = MEMORY[0x263F779A0];
  uint64_t v53 = v16;
  uint64_t v54 = v15;
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v49 = 0;
  long long v47 = 0u;
  long long v48 = 0u;
  uint64_t v46 = 0;
  long long v44 = 0u;
  long long v45 = 0u;
  uint64_t v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  uint64_t v40 = 0;
  long long v38 = 0u;
  long long v39 = 0u;
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  swift_bridgeObjectRetain();
  uint64_t v17 = AppDescriptionView.appIconView.getter();
  uint64_t v30 = MEMORY[0x263F1B728];
  uint64_t v31 = MEMORY[0x263F774A8];
  uint64_t v29 = v17;
  SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
  uint64_t v18 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = v24;
  outlined init with copy of AppDescription(v1, v24, (uint64_t (*)(void))type metadata accessor for AppDescriptionView);
  unint64_t v20 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v21 = swift_allocObject();
  outlined init with take of AppDescription(v19, v21 + v20, (uint64_t (*)(void))type metadata accessor for AppDescriptionView);
  uint64_t v53 = v5;
  uint64_t v54 = v18;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, v22);
}

uint64_t AppDescriptionView.appIconView.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v34 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for ImageElementView();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  MEMORY[0x270FA5388](v31);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for AppDescriptionView();
  uint64_t v13 = v0 + *(int *)(v29 + 24);
  uint64_t v14 = (uint64_t *)(v13 + *(int *)(type metadata accessor for AppDescription() + 24));
  uint64_t v15 = *v14;
  v28[0] = v14[1];
  v28[1] = v15;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F765B8], v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  uint64_t v16 = type metadata accessor for _ProtoIdiom();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2591FFD20;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x263F76468], v16);
  specialized Set.init(_nonEmptyArrayLiteral:)(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.appIcon(_:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  ImageElementView.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v34, v30 + *(int *)(v29 + 28), v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v21, 0, 1, v3);
  uint64_t v22 = (uint64_t *)&v12[*(int *)(v31 + 36)];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
  outlined init with copy of ImageElement.ImageStyle?(v21, (uint64_t)v22 + *(int *)(v23 + 28));
  uint64_t *v22 = KeyPath;
  uint64_t v25 = v32;
  uint64_t v24 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v12, v10, v33);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v21, &demangling cache variable for type metadata for ImageElement.ImageStyle?);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v26 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  return v26;
}

uint64_t closure #1 in AppDescriptionView.body.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  long long v39 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  long long v38 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AppDescriptionView();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActionProperty();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2591FFD20;
  uint64_t v16 = type metadata accessor for Command();
  uint64_t v17 = MEMORY[0x263F771C8];
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  uint64_t v40 = v9;
  uint64_t v19 = type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v16);
  long long v41 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of AppDescription(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AppDescriptionView);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v24;
    v37[0] = v8;
    v37[1] = a1;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v25 = (uint64_t *)&v11[*(int *)(v40 + 24) + (uint64_t)*(int *)(v19 + 24)];
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    uint64_t v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v26, &v45);
    uint64_t v8 = (char *)v37[0];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AppDescriptionView((uint64_t)v11);
    _os_log_impl(&dword_25915D000, v21, v22, "#AppDescriptionView tapped, performing direct action for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2D96D0](v24, -1, -1);
    MEMORY[0x25A2D96D0](v23, -1, -1);
  }
  else
  {
    outlined destroy of AppDescriptionView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  uint64_t v28 = type metadata accessor for StandardActionHandler();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v32 = v41;
    uint64_t v31 = v42;
    uint64_t v33 = (uint64_t)v38;
    uint64_t v34 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v38, v41, v43);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v34);
    uint64_t v35 = type metadata accessor for InteractionType();
    uint64_t v36 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v39, 1, 1, v35);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v33, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v8, v28);
  }
}

uint64_t outlined init with copy of AppDescription(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2591964C4()
{
  uint64_t v1 = (int *)(type metadata accessor for AppDescriptionView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)v2 + v1[8];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for AppDescription();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = &v5[*(int *)(v7 + 32)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = (char *)v2 + v1[9];
  uint64_t v11 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject();
}

uint64_t outlined init with take of AppDescription(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in AppDescriptionView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppDescriptionView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return closure #1 in AppDescriptionView.body.getter(v2);
}

uint64_t associated type witness table accessor for View.Body : View in AppDescriptionView()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for AppDescriptionView(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    unint64_t v18 = (int *)type metadata accessor for AppDescription();
    uint64_t v19 = v18[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = (uint64_t *)(v16 + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v22;
    uint64_t v24 = v18[6];
    uint64_t v25 = &v15[v24];
    unint64_t v26 = (void *)(v16 + v24);
    uint64_t v27 = v26[1];
    *(void *)uint64_t v25 = *v26;
    *((void *)v25 + 1) = v27;
    v15[v18[7]] = *(unsigned char *)(v16 + v18[7]);
    uint64_t v28 = v18[8];
    uint64_t v29 = &v15[v28];
    uint64_t v30 = v16 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[7];
    uint64_t v33 = &v7[v32];
    uint64_t v34 = (uint64_t)a2 + v32;
    uint64_t v35 = type metadata accessor for ImageElement.ImageStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[8];
    uint64_t v37 = &v7[v36];
    uint64_t v38 = (uint64_t)a2 + v36;
    *(void *)uint64_t v37 = *(void *)v38;
    v37[8] = *(unsigned char *)(v38 + 8);
  }
  return v7;
}

uint64_t destroy for AppDescriptionView(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + a2[6];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = type metadata accessor for AppDescription();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = &v6[*(int *)(v8 + 32)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (char *)a1 + a2[7];
  uint64_t v12 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

void *initializeWithCopy for AppDescriptionView(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  unint64_t v18 = (int *)type metadata accessor for AppDescription();
  uint64_t v19 = v18[5];
  uint64_t v20 = &v15[v19];
  uint64_t v21 = (uint64_t *)(v16 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  uint64_t v24 = v18[6];
  uint64_t v25 = &v15[v24];
  unint64_t v26 = (void *)(v16 + v24);
  uint64_t v27 = v26[1];
  *(void *)uint64_t v25 = *v26;
  *((void *)v25 + 1) = v27;
  v15[v18[7]] = *(unsigned char *)(v16 + v18[7]);
  uint64_t v28 = v18[8];
  uint64_t v29 = &v15[v28];
  uint64_t v30 = v16 + v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = a3[7];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = a3[8];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = *(unsigned char *)(v38 + 8);
  return a1;
}

uint64_t assignWithCopy for AppDescriptionView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for AppDescription();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(v14 + v18);
  uint64_t v20 = (void *)(v15 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v17[6];
  uint64_t v22 = (void *)(v14 + v21);
  uint64_t v23 = (void *)(v15 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v17[7]) = *(unsigned char *)(v15 + v17[7]);
  uint64_t v24 = v17[8];
  uint64_t v25 = v14 + v24;
  uint64_t v26 = v15 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  uint64_t v28 = a3[7];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  char v35 = *(unsigned char *)(v34 + 8);
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = v35;
  return a1;
}

_OWORD *initializeWithTake for AppDescriptionView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for AppDescription();
  *(_OWORD *)&v11[v14[5]] = *(_OWORD *)&v12[v14[5]];
  *(_OWORD *)&v11[v14[6]] = *(_OWORD *)&v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  uint64_t v15 = v14[8];
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  return a1;
}

uint64_t assignWithTake for AppDescriptionView(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for AppDescription();
  uint64_t v16 = v15[5];
  uint64_t v17 = (void *)(v12 + v16);
  uint64_t v18 = &v13[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v15[6];
  uint64_t v22 = (void *)(v12 + v21);
  uint64_t v23 = &v13[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + v15[7]) = v13[v15[7]];
  uint64_t v26 = v15[8];
  uint64_t v27 = v12 + v26;
  uint64_t v28 = &v13[v26];
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = a3[7];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = a3[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = v36[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDescriptionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591972E4);
}

uint64_t sub_2591972E4(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = type metadata accessor for ActionHandler();
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    return v14(&a1[v12], a2, v10);
  }
  uint64_t v13 = type metadata accessor for AppDescription();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = &a1[a3[7]];
  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for AppDescriptionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25919747C);
}

char *sub_25919747C(char *result, uint64_t a2, int a3, int *a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)uint64_t result = a2;
    return result;
  }
  uint64_t v8 = type metadata accessor for ActionHandler();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for AppDescription();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[7]];
  return (char *)v15(v17, a2, a2, v16);
}

uint64_t type metadata completion function for AppDescriptionView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AppDescription();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ImageElement.ImageStyle();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_25919770C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  type metadata accessor for SimpleItemRichView();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined destroy of AppDescriptionView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppDescriptionView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of ImageElement.ImageStyle?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SearchCallHistoryBinaryButtonView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ActionHandler.init()();
  uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  return outlined init with take of SearchCallHistoryBinaryButtonModel(a1, a2 + *(int *)(v4 + 20), (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t type metadata accessor for SearchCallHistoryBinaryButtonView()
{
  uint64_t result = type metadata singleton initialization cache for SearchCallHistoryBinaryButtonView;
  if (!type metadata singleton initialization cache for SearchCallHistoryBinaryButtonView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for SearchCallHistoryBinaryButtonView.actionHandler : SearchCallHistoryBinaryButtonView(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  int v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v9 - v6);
  outlined init with copy of StandardActionHandler?((uint64_t)v7, (uint64_t)v5);
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t SearchCallHistoryBinaryButtonView.actionHandler.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(a1, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t outlined init with copy of StandardActionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*SearchCallHistoryBinaryButtonView.actionHandler.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ActionHandler.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t SearchCallHistoryBinaryButtonView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  return _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVWOcTm_0(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
}

uint64_t SearchCallHistoryBinaryButtonView.body.getter@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  uint64_t v2 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = SearchCallHistoryBinaryButtonView.primaryButton.getter();
  uint64_t v10 = MEMORY[0x263F774A8];
  v15[10] = MEMORY[0x263F1B728];
  v15[11] = MEMORY[0x263F774A8];
  v15[7] = v9;
  type metadata accessor for SearchCallHistoryBinaryButtonModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVWOcTm_0(v1, (uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  outlined init with take of SearchCallHistoryBinaryButtonModel((uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  lazy protocol witness table accessor for type Button<Text> and conformance Button<A>();
  uint64_t v13 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15[6] = v10;
  v15[5] = MEMORY[0x263F1B728];
  long long v15[2] = v13;
  return BinaryButtonView.init(primaryButton:secondaryButton:)();
}

uint64_t SearchCallHistoryBinaryButtonView.primaryButton.getter()
{
  uint64_t v24 = type metadata accessor for ButtonItemButtonStyle.Role();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonRole(_:)>>.0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVWOcTm_0(v0, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  outlined init with take of SearchCallHistoryBinaryButtonModel((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  uint64_t v16 = v24;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F774E8], v24);
  unint64_t v17 = lazy protocol witness table accessor for type Button<Text> and conformance Button<A>();
  View.buttonRole(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  uint64_t v25 = v7;
  unint64_t v26 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v22;
  uint64_t v19 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v18);
  return v19;
}

void SearchCallHistoryBinaryButtonView.command(for:)(uint64_t a1@<X8>)
{
  type metadata accessor for SearchCallHistoryBinaryButtonView();
  swift_getAtKeyPath();
  id v2 = objc_msgSend(v23, sel_dictionary);

  if (v2)
  {
    type metadata accessor for NSObject();
    lazy protocol witness table accessor for type NSObject and conformance NSObject(&lazy protocol witness table cache variable for type NSObject and conformance NSObject, (void (*)(uint64_t))type metadata accessor for NSObject);
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v4 = self;
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v3);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_aceObjectWithDictionary_, isa);

    if (v6 && (self, (uint64_t v7 = swift_dynamicCastObjCClass()) != 0))
    {
      uint64_t v8 = v7;
      uint64_t v9 = one-time initialization token for phoneSnippetUI;
      uint64_t v10 = v6;
      if (v9 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.phoneSnippetUI);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        unint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v14 = 0;
        _os_log_impl(&dword_25915D000, v12, v13, "#SearchCallHistoryBinaryButtonView tap button is SAIntentGroupRunSiriKitExecutor", v14, 2u);
        MEMORY[0x25A2D96D0](v14, -1, -1);
        uint64_t v15 = v10;
      }
      else
      {
        uint64_t v15 = v12;
        uint64_t v12 = v10;
      }

      *(void *)a1 = v8;
      *(unsigned char *)(a1 + 8) = 0;
      uint64_t v20 = (unsigned int *)MEMORY[0x263F771A0];
    }
    else
    {
      if (one-time initialization token for phoneSnippetUI != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
      unint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_25915D000, v17, v18, "#SearchCallHistoryBinaryButtonView tap button is aceCommand", v19, 2u);
        MEMORY[0x25A2D96D0](v19, -1, -1);
      }

      swift_getAtKeyPath();
      *(void *)a1 = v23;
      *(unsigned char *)(a1 + 8) = 0;
      uint64_t v20 = (unsigned int *)MEMORY[0x263F77168];
    }
    uint64_t v21 = *v20;
    uint64_t v22 = type metadata accessor for Command();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(a1, v21, v22);
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in SearchCallHistoryBinaryButtonView.primaryButton.getter(uint64_t a1, const char *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Logger.phoneSnippetUI);
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_25915D000, v13, v14, a2, v15, 2u);
    MEMORY[0x25A2D96D0](v15, -1, -1);
  }

  ActionHandler.wrappedValue.getter();
  uint64_t v16 = type metadata accessor for StandardActionHandler();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1) {
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2591FFD20;
  swift_getKeyPath();
  uint64_t v20 = type metadata accessor for Command();
  uint64_t v21 = MEMORY[0x263F771C8];
  *(void *)(v19 + 56) = v20;
  *(void *)(v19 + 64) = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 32));
  SearchCallHistoryBinaryButtonView.command(for:)((uint64_t)boxed_opaque_existential_1);
  swift_release();
  ActionProperty.init(_:)();
  uint64_t v23 = type metadata accessor for ActionProperty();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 0, 1, v23);
  uint64_t v24 = type metadata accessor for InteractionType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
  StandardActionHandler.perform(_:interactionType:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for InteractionType?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ActionProperty?);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v16);
}

uint64_t _s14PhoneSnippetUI34SearchCallHistoryBinaryButtonModelVWOcTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of SearchCallHistoryBinaryButtonModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter()
{
  return partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter("#SearchCallHistoryBinaryButtonView secondaryButton tapped");
}

unint64_t lazy protocol witness table accessor for type Button<Text> and conformance Button<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>;
  if (!lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>);
  }
  return result;
}

unint64_t type metadata accessor for NSObject()
{
  unint64_t result = lazy cache variable for type metadata for NSObject;
  if (!lazy cache variable for type metadata for NSObject)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  }
  return result;
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v3 = MEMORY[0x263F8EE80];
    if (v2) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v5 = ~v8;
    unint64_t v35 = v1 + 64;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(v1 + 64);
    unint64_t v7 = v1;
    goto LABEL_13;
  }
  if (a1 >= 0) {
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  if (!MEMORY[0x25A2D8E70](a1)) {
    goto LABEL_8;
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)();
  if (!v2) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v4 = __CocoaDictionary.makeIterator()();
  unint64_t v35 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = v4 | 0x8000000000000000;
LABEL_13:
  int64_t v34 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v36 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    uint64_t v17 = __CocoaDictionary.Iterator.next()();
    if (!v17) {
      goto LABEL_47;
    }
    uint64_t v19 = v18;
    *(void *)&long long v41 = v17;
    type metadata accessor for NSObject();
    swift_dynamicCast();
    uint64_t v47 = v19;
    uint64_t v20 = v46;
LABEL_38:
    *(void *)&v45[0] = v20;
    type metadata accessor for NSObject();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v41 = v37;
    long long v42 = v38;
    uint64_t v43 = v39;
    outlined init with take of Any(&v40, v44);
    long long v37 = v41;
    long long v38 = v42;
    uint64_t v39 = v43;
    outlined init with take of Any(v44, v45);
    outlined init with take of Any(v45, &v41);
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v3 + 40));
    uint64_t v27 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v3 + 48) + 40 * v13;
    *(_OWORD *)uint64_t v14 = v37;
    *(_OWORD *)(v14 + 16) = v38;
    *(void *)(v14 + 32) = v39;
    uint64_t result = (uint64_t)outlined init with take of Any(&v41, (_OWORD *)(*(void *)(v3 + 56) + 32 * v13));
    ++*(void *)(v3 + 16);
  }
  if (v6)
  {
    unint64_t v15 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v16 = v15 | (v36 << 6);
LABEL_37:
    uint64_t v20 = *(void **)(*(void *)(v7 + 48) + 8 * v16);
    uint64_t v25 = *(void *)(*(void *)(v7 + 56) + 8 * v16);
    uint64_t v46 = v20;
    uint64_t v47 = v25;
    id v26 = v20;
    swift_unknownObjectRetain();
    goto LABEL_38;
  }
  int64_t v21 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v21 >= v34) {
    goto LABEL_47;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v21);
  int64_t v23 = v36 + 1;
  if (v22) {
    goto LABEL_36;
  }
  int64_t v23 = v36 + 2;
  if (v36 + 2 >= v34) {
    goto LABEL_47;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_36;
  }
  int64_t v23 = v36 + 3;
  if (v36 + 3 >= v34) {
    goto LABEL_47;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_36;
  }
  int64_t v23 = v36 + 4;
  if (v36 + 4 >= v34) {
    goto LABEL_47;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_36:
    unint64_t v6 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v23 << 6);
    int64_t v36 = v23;
    goto LABEL_37;
  }
  int64_t v24 = v36 + 5;
  if (v36 + 5 >= v34)
  {
LABEL_47:
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    swift_release();
    outlined consume of [NSObject : Swift.AnyObject].Iterator._Variant();
    return v3;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v36 + 5;
    goto LABEL_36;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v34) {
      goto LABEL_47;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_36;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in SearchCallHistoryBinaryButtonView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_259198F44()
{
  return ActionHandler.wrappedValue.getter();
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchCallHistoryBinaryButtonView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActionHandler();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    int64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v24(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v9[v13];
    unint64_t v15 = &v10[v13];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v24(&v9[v12[6]], &v10[v12[6]], v11);
    v17(&v9[v12[7]], &v10[v12[7]], v16);
    uint64_t v18 = v12[8];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v9 = v5 + v8[5];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v7(v5 + v8[6], v6);
  v11(v5 + v8[7], v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v22(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v22(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v21(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v21(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v18(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v18(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  *(_OWORD *)(v8 + v11[8]) = *(_OWORD *)(v9 + v11[8]);
  return a1;
}

uint64_t assignWithTake for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v23(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v23(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (uint64_t *)(v9 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259199934);
}

uint64_t sub_259199934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SearchCallHistoryBinaryButtonView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259199A40);
}

uint64_t sub_259199A40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata completion function for SearchCallHistoryBinaryButtonView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SearchCallHistoryBinaryButtonModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_259199C0C()
{
  return lazy protocol witness table accessor for type NSObject and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, MEMORY[0x263F77658]);
}

uint64_t lazy protocol witness table accessor for type NSObject and conformance NSObject(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t objectdestroyTm_3()
{
  unint64_t v1 = (int *)(type metadata accessor for SearchCallHistoryBinaryButtonView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[7];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v8 = v4 + v7[5];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v6(v4 + v7[6], v5);
  v10(v4 + v7[7], v9);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SearchCallHistoryBinaryButtonView.primaryButton.getter()
{
  return partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter("#SearchCallHistoryBinaryButtonView primaryButton tapped");
}

uint64_t partial apply for closure #1 in SearchCallHistoryBinaryButtonView.secondaryButton.getter(const char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SearchCallHistoryBinaryButtonView() - 8);
  return closure #1 in SearchCallHistoryBinaryButtonView.primaryButton.getter(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t ButtonConfigurationModel.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.action()
{
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t ButtonConfigurationModel.action.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for ButtonConfigurationModel()
{
  uint64_t result = type metadata singleton initialization cache for ButtonConfigurationModel;
  if (!type metadata singleton initialization cache for ButtonConfigurationModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path setter for ButtonConfigurationModel.action : ButtonConfigurationModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for ButtonConfigurationModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t ButtonConfigurationModel.action.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*ButtonConfigurationModel.action.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of ButtonConfigurationModel.directInvocation()
{
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t ButtonConfigurationModel.directInvocation.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t key path setter for ButtonConfigurationModel.directInvocation : ButtonConfigurationModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for ButtonConfigurationModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t ButtonConfigurationModel.directInvocation.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*ButtonConfigurationModel.directInvocation.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t ButtonConfigurationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ButtonConfigurationModel() + 28);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ButtonConfigurationModel.isDirectInvocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ButtonConfigurationModel() + 32));
}

uint64_t ButtonConfigurationModel.init(label:action:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v8 = type metadata accessor for ButtonConfigurationModel();
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  id v9 = a3;
  CodableAceObject.init(wrappedValue:)();
  uint64_t v10 = (char *)a5 + *(int *)(v8 + 28);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a4, v11);
  *((unsigned char *)a5 + *(int *)(v8 + 32)) = 0;
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F64A18]), sel_init);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();

  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  return v12(a4, v11);
}

void ButtonConfigurationModel.init(label:url:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v3 = type metadata accessor for ButtonConfigurationModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F64EE0]), sel_init);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
  {
    URL._bridgeToObjectiveC()(v15);
    uint64_t v16 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  objc_msgSend(v12, sel_setPunchOutUri_, v16);

  id v18 = v12;
  UUID.init()();
  uint64_t v19 = UUID.uuidString.getter();
  uint64_t v21 = v20;
  unint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v29;
  v28(v8, v29);
  int64_t v23 = (void *)MEMORY[0x25A2D8AF0](v19, v21);
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAceId_, v23);

  id v24 = v18;
  UUID.init()();
  uint64_t v25 = v31;
  *(void *)uint64_t v5 = v30;
  *((void *)v5 + 1) = v25;
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  id v26 = v24;
  CodableAceObject.init(wrappedValue:)();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v5[*(int *)(v3 + 28)], v8, v22);
  v5[*(int *)(v3 + 32)] = 0;
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F64A18]), sel_init);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();

  v28(v8, v22);
  outlined init with take of ButtonConfigurationModel((uint64_t)v5, v32);
}

uint64_t outlined init with take of ButtonConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ButtonConfigurationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ButtonConfigurationModel.init(label:directInvocation:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F647D8]), sel_init);
  uint64_t v6 = type metadata accessor for ButtonConfigurationModel();
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  CodableAceObject.init(wrappedValue:)();
  *((unsigned char *)a4 + *(int *)(v6 + 32)) = 1;
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  CodableAceObject.init(wrappedValue:)();
  uint64_t v7 = (char *)a4 + *(int *)(v6 + 28);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a3, v8);
}

unint64_t ButtonConfigurationModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F69746361;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 25705;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 0x6C6562616CLL;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance ButtonConfigurationModel.CodingKeys()
{
  return ButtonConfigurationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ButtonConfigurationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ButtonConfigurationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ButtonConfigurationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ButtonConfigurationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ButtonConfigurationModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ButtonConfigurationModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ButtonConfigurationModel();
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v10 = 3;
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v9 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys);
  }
  return result;
}

uint64_t ButtonConfigurationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v33 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v30 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ButtonConfigurationModel.CodingKeys>);
  uint64_t v34 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (int *)type metadata accessor for ButtonConfigurationModel();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ButtonConfigurationModel.CodingKeys and conformance ButtonConfigurationModel.CodingKeys();
  long long v38 = v11;
  uint64_t v15 = (uint64_t)v39;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v35;
  uint64_t v17 = v36;
  uint64_t v39 = a1;
  uint64_t v27 = v7;
  char v44 = 0;
  *uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  v14[1] = v18;
  id v26 = v14;
  char v43 = 1;
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SABaseCommand> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v19 = v27;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))((char *)v26 + v12[5], v9, v19);
  char v42 = 2;
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v20 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v21 = (uint64_t)v26;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v26 + v12[6], v20, v17);
  char v41 = 3;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
  uint64_t v22 = v29;
  uint64_t v23 = v31;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v21 + v12[7], v22, v23);
  char v40 = 4;
  char v24 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v37);
  *(unsigned char *)(v21 + v12[8]) = v24 & 1;
  outlined init with copy of ButtonConfigurationModel(v21, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return outlined destroy of ButtonConfigurationModel(v21);
}

uint64_t outlined init with copy of ButtonConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ButtonConfigurationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ButtonConfigurationModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ButtonConfigurationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for Identifiable.id.getter in conformance ButtonConfigurationModel@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ButtonConfigurationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ButtonConfigurationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ButtonConfigurationModel(void *a1)
{
  return ButtonConfigurationModel.encode(to:)(a1);
}

uint64_t StackedButtonsModel.UseCase.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6C6143724F646461;
  }
  if (a1 == 1) {
    return 0x747465536E65706FLL;
  }
  return 0xD000000000000011;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance StackedButtonsModel.UseCase(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance StackedButtonsModel.UseCase()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance StackedButtonsModel.UseCase@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized StackedButtonsModel.UseCase.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance StackedButtonsModel.UseCase@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StackedButtonsModel.UseCase.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel.UseCase()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel.UseCase()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t StackedButtonsModel.useCase.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t StackedButtonsModel.init(buttonConfiguration:useCase:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ButtonConfigurationModel>);
  uint64_t v2 = *(void *)(type metadata accessor for ButtonConfigurationModel() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2591FFD20;
  outlined init with take of ButtonConfigurationModel(a1, v4 + v3);
  return v4;
}

unint64_t StackedButtonsModel.responseViewId.getter(uint64_t a1, char a2)
{
  return specialized StackedButtonsModel.responseViewId.getter(a2);
}

uint64_t StackedButtonsModel.shouldHideSnippet(on:)(uint64_t a1, uint64_t a2, int a3)
{
  return specialized StackedButtonsModel.shouldHideSnippet(on:)(a1, a3);
}

uint64_t StackedButtonsModel.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x65736143657375;
  }
  else {
    return 0xD000000000000014;
  }
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance StackedButtonsModel.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance StackedButtonsModel.CodingKeys()
{
  return StackedButtonsModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance StackedButtonsModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized StackedButtonsModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance StackedButtonsModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance StackedButtonsModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance StackedButtonsModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StackedButtonsModel.encode(to:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<StackedButtonsModel.CodingKeys>);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = a2;
  v12[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
  lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v3)
  {
    v12[14] = a3;
    v12[13] = 1;
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t StackedButtonsModel.init(from:)(void *a1)
{
  return specialized StackedButtonsModel.init(from:)(a1);
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance StackedButtonsModel()
{
  return specialized StackedButtonsModel.responseViewId.getter(*(unsigned char *)(v0 + 8));
}

uint64_t protocol witness for Decodable.init(from:) in conformance StackedButtonsModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized StackedButtonsModel.init(from:)(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance StackedButtonsModel(void *a1)
{
  return StackedButtonsModel.encode(to:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t specialized ButtonConfigurationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259205150 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002592052C0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t specialized StackedButtonsModel.UseCase.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of StackedButtonsModel.UseCase.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t specialized StackedButtonsModel.responseViewId.getter(char a1)
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v2 = 0x747465536E65706FLL;
    }
    else {
      unint64_t v2 = 0xD000000000000011;
    }
    if (a1 == 1) {
      unint64_t v3 = 0xEC00000073676E69;
    }
    else {
      unint64_t v3 = 0x8000000259204CE0;
    }
  }
  else
  {
    unint64_t v3 = 0xEF74706D6F72506CLL;
    unint64_t v2 = 0x6C6143724F646461;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t specialized StackedButtonsModel.shouldHideSnippet(on:)(uint64_t a1, int a2)
{
  int v17 = a2;
  uint64_t v3 = type metadata accessor for DeviceIdiom();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v16[-v8];
  uint64_t v10 = *(void (**)(unsigned char *, void, uint64_t))(v4 + 104);
  v10(&v16[-v8], *MEMORY[0x263F75620], v3);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DeviceIdiom and conformance DeviceIdiom, MEMORY[0x263F75668]);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v12 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v12(v9, v3);
  if (v11)
  {
    char v13 = 1;
  }
  else if (v17 == 1)
  {
    v10(v9, *MEMORY[0x263F75648], v3);
    char v14 = static DeviceIdiom.== infix(_:_:)();
    v12(v9, v3);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    if (v14)
    {
      char v13 = 1;
    }
    else
    {
      v10(v9, *MEMORY[0x263F75628], v3);
      char v13 = static DeviceIdiom.== infix(_:_:)();
      v12(v9, v3);
    }
    v12(v7, v3);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase);
  }
  return result;
}

uint64_t specialized StackedButtonsModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002592052E0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736143657375 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized StackedButtonsModel.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<StackedButtonsModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  lazy protocol witness table accessor for type StackedButtonsModel.CodingKeys and conformance StackedButtonsModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    v9[7] = 0;
    lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    v9[5] = 1;
    lazy protocol witness table accessor for type StackedButtonsModel.UseCase and conformance StackedButtonsModel.UseCase();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t base witness table accessor for Decodable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (void (*)(uint64_t))type metadata accessor for ButtonConfigurationModel);
}

uint64_t base witness table accessor for Encodable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel, (void (*)(uint64_t))type metadata accessor for ButtonConfigurationModel);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in ButtonConfigurationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
}

unint64_t instantiation function for generic protocol witness table for StackedButtonsModel(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel()
{
  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel;
  if (!lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StackedButtonsModel and conformance StackedButtonsModel);
  }
  return result;
}

uint64_t sub_25919C7EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25919C840@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ButtonConfigurationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    char v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    int v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t destroy for ButtonConfigurationModel(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

void *initializeWithCopy for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  int v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *assignWithCopy for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for ButtonConfigurationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ButtonConfigurationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25919D018);
}

uint64_t sub_25919D018(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ButtonConfigurationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25919D1AC);
}

uint64_t sub_25919D1AC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];
  return v15(v17, a2, a2, v16);
}

void type metadata completion function for ButtonConfigurationModel()
{
  type metadata accessor for CodableAceObject<SABaseCommand>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SABaseCommand>, (unint64_t *)&lazy cache variable for type metadata for SABaseCommand);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SABaseCommand>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void type metadata accessor for CodableAceObject<SABaseCommand>(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    type metadata accessor for SABaseClientBoundCommand(255, a3);
    unint64_t v4 = type metadata accessor for CodableAceObject();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StackedButtonsModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for StackedButtonsModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StackedButtonsModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StackedButtonsModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackedButtonsModel()
{
  return &type metadata for StackedButtonsModel;
}

uint64_t getEnumTagSinglePayload for StackedButtonsModel.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StackedButtonsModel.UseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25919D7A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackedButtonsModel.UseCase()
{
  return &type metadata for StackedButtonsModel.UseCase;
}

unsigned char *storeEnumTagSinglePayload for StackedButtonsModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25919D8A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for StackedButtonsModel.CodingKeys()
{
  return &unk_270724018;
}

unsigned char *storeEnumTagSinglePayload for ButtonConfigurationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25919D9ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ButtonConfigurationModel.CodingKeys()
{
  return &unk_2707240A8;
}

uint64_t lazy protocol witness table accessor for type [ButtonConfigurationModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
    lazy protocol witness table accessor for type UUID and conformance UUID(a2, (void (*)(uint64_t))type metadata accessor for ButtonConfigurationModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type UUID and conformance UUID(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

{
  uint64_t result;

  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Logger.phoneSnippetUI.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
}

uint64_t one-time initialization function for phoneSnippetUI()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.phoneSnippetUI);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)();
}

void *LogConst.subsystem.unsafeMutableAddressor()
{
  return &static LogConst.subsystem;
}

uint64_t *LogConst.Category.phoneSnippetUI.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  return &static LogConst.Category.phoneSnippetUI;
}

uint64_t static Logger.phoneSnippetUI.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

unint64_t static LogConst.subsystem.getter()
{
  return 0xD000000000000014;
}

void one-time initialization function for phoneSnippetUI()
{
  algn_26A37C3C8[7] = -18;
}

uint64_t static LogConst.Category.phoneSnippetUI.getter()
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v0 = static LogConst.Category.phoneSnippetUI;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for Logger()
{
  return &type metadata for Logger;
}

ValueMetadata *type metadata accessor for LogConst()
{
  return &type metadata for LogConst;
}

ValueMetadata *type metadata accessor for LogConst.Category()
{
  return &type metadata for LogConst.Category;
}

uint64_t OpenFaceTimeIntent.Target.description.getter(char a1)
{
  BOOL v1 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v2 = 0x6143657461657263;
  }
  else {
    uint64_t v2 = 0x73746E65636572;
  }
  if (v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  else {
    unint64_t v3 = 0xEA00000000006C6CLL;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 46;
}

uint64_t OpenFaceTimeIntent.Target.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6143657461657263;
  }
  else {
    return 0x73746E65636572;
  }
}

PhoneSnippetUI::OpenFaceTimeIntent::Target_optional __swiftcall OpenFaceTimeIntent.Target.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of OpenFaceTimeIntent.Target.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneSnippetUI_OpenFaceTimeIntent_Target_createCall;
  }
  else {
    v4.value = PhoneSnippetUI_OpenFaceTimeIntent_Target_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

void *static OpenFaceTimeIntent.Target.allCases.getter()
{
  return &outlined read-only object #0 of static OpenFaceTimeIntent.Target.allCases.getter;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance OpenFaceTimeIntent.Target(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = OpenFaceTimeIntent.Target.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == OpenFaceTimeIntent.Target.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance OpenFaceTimeIntent.Target()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  OpenFaceTimeIntent.Target.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance OpenFaceTimeIntent.Target()
{
  OpenFaceTimeIntent.Target.rawValue.getter(*v0);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance OpenFaceTimeIntent.Target()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  OpenFaceTimeIntent.Target.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance OpenFaceTimeIntent.Target@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of OpenFaceTimeIntent.Target.init(rawValue:), *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance OpenFaceTimeIntent.Target@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OpenFaceTimeIntent.Target.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance OpenFaceTimeIntent.Target()
{
  return OpenFaceTimeIntent.Target.description.getter(*v0);
}

void protocol witness for static CaseIterable.allCases.getter in conformance OpenFaceTimeIntent.Target(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance OpenFaceTimeIntent.Target;
}

uint64_t protocol witness for static IntentValueTypeIdentifiable.lnValueType.getter in conformance OpenFaceTimeIntent.Target(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();
  return MEMORY[0x270F0C958](a1, v2);
}

uint64_t protocol witness for IntentValue.lnValue.getter in conformance OpenFaceTimeIntent.Target(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();
  return MEMORY[0x270F0C970](a1, v2);
}

uint64_t protocol witness for static IntentValue.canConvert(_:) in conformance OpenFaceTimeIntent.Target(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();
  return MEMORY[0x270F0CBA8](a1, a2, v4);
}

uint64_t protocol witness for static IntentValue.from(_:context:) in conformance OpenFaceTimeIntent.Target(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();
  return MEMORY[0x270F0C968](a1, a2, a3, v6);
}

uint64_t protocol witness for static IntentValueSequenceElement.canConvertFrom(_:) in conformance OpenFaceTimeIntent.Target(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target();
  return MEMORY[0x270F0CBC0](a1, a2, v4);
}

void *OpenFaceTimeIntent.bundleIdentifier.unsafeMutableAddressor()
{
  return &static OpenFaceTimeIntent.bundleIdentifier;
}

unint64_t static OpenFaceTimeIntent.bundleIdentifier.getter()
{
  return 0xD000000000000012;
}

void *OpenFaceTimeIntent.actionIdentifier.unsafeMutableAddressor()
{
  return &static OpenFaceTimeIntent.actionIdentifier;
}

unint64_t static OpenFaceTimeIntent.actionIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t OpenFaceTimeIntent.target.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t OpenFaceTimeIntent.target.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void (*OpenFaceTimeIntent.target.modify(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t OpenFaceTimeIntent.$target.getter()
{
  return IntentParameter.projectedValue.getter();
}

unint64_t OpenFaceTimeIntent.description.getter()
{
  IntentParameter.wrappedValue.getter();
  if (v6) {
    uint64_t v0 = 0x6143657461657263;
  }
  else {
    uint64_t v0 = 0x73746E65636572;
  }
  if (v6) {
    unint64_t v1 = 0xEA00000000006C6CLL;
  }
  else {
    unint64_t v1 = 0xE700000000000000;
  }
  unint64_t v2 = v1;
  String.append(_:)(*(Swift::String *)&v0);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 46;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD00000000000001ALL;
}

uint64_t property wrapper backing initializer of OpenFaceTimeIntent.target()
{
  return IntentParameter.init(wrappedValue:)();
}

unint64_t protocol witness for static AppIntentRepresentation.bundleIdentifier.getter in conformance OpenFaceTimeIntent()
{
  return 0xD000000000000012;
}

unint64_t protocol witness for static AppIntentRepresentation.actionIdentifier.getter in conformance OpenFaceTimeIntent()
{
  return 0xD000000000000012;
}

uint64_t protocol witness for AppIntentRepresentation.exportToSpecification() in conformance OpenFaceTimeIntent()
{
  return MEMORY[0x270F0CA30]();
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance OpenFaceTimeIntent()
{
  return OpenFaceTimeIntent.description.getter();
}

uint64_t specialized static OpenFaceTimeIntent.Target.enumIdentifier.getter()
{
  return 0x746567726154;
}

unint64_t lazy protocol witness table accessor for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target()
{
  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target;
  if (!lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type OpenFaceTimeIntent.Target and conformance OpenFaceTimeIntent.Target);
  }
  return result;
}

uint64_t associated type witness table accessor for RawRepresentable.RawValue : LosslessStringConvertible in OpenFaceTimeIntent.Target()
{
  return MEMORY[0x263F8D380];
}

unint64_t lazy protocol witness table accessor for type [OpenFaceTimeIntent.Target] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [OpenFaceTimeIntent.Target] and conformance [A];
  if (!lazy protocol witness table cache variable for type [OpenFaceTimeIntent.Target] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [OpenFaceTimeIntent.Target]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [OpenFaceTimeIntent.Target] and conformance [A]);
  }
  return result;
}

uint64_t sub_25919EB54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_25919EB90()
{
  return IntentParameter.wrappedValue.setter();
}

ValueMetadata *type metadata accessor for OpenFaceTimeIntent()
{
  return &type metadata for OpenFaceTimeIntent;
}

unsigned char *storeEnumTagSinglePayload for OpenFaceTimeIntent.Target(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25919ECA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenFaceTimeIntent.Target()
{
  return &type metadata for OpenFaceTimeIntent.Target;
}

uint64_t CustomCanvasModel<>.init(serializedData:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t CustomCanvasModel<>.serializedData()()
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  uint64_t v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

uint64_t static CustomCanvasModel<>.name.getter()
{
  return String.init<A>(describing:)();
}

double protocol witness for CustomCanvasModel.init(serializedData:) in conformance PhoneContactHeader@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  outlined consume of Data._Representation(a1, a2);
  swift_release();
  if (!v3)
  {
    double result = *(double *)&v8;
    *(_OWORD *)a3 = v8;
    *(_OWORD *)(a3 + 16) = v9;
    *(_OWORD *)(a3 + 32) = v10;
    *(void *)(a3 + 48) = v11;
    *(void *)(a3 + 56) = v12;
    *(unsigned char *)(a3 + 64) = v13;
  }
  return result;
}

uint64_t protocol witness for static CustomCanvasModel.name.getter in conformance PhoneContactHeader()
{
  return String.init<A>(describing:)();
}

uint64_t protocol witness for CATSerializable.serializedData() in conformance PhoneContactHeader()
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  lazy protocol witness table accessor for type PhoneContactHeader and conformance PhoneContactHeader();
  uint64_t v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

void one-time initialization function for bundleName()
{
  *(_WORD *)&algn_26A37C3D8[6] = -4864;
}

uint64_t *PhoneSnippetDataModels.bundleName.unsafeMutableAddressor()
{
  if (one-time initialization token for bundleName != -1) {
    swift_once();
  }
  return &static PhoneSnippetDataModels.bundleName;
}

uint64_t static PhoneSnippetDataModels.bundleName.getter()
{
  if (one-time initialization token for bundleName != -1) {
    swift_once();
  }
  uint64_t v0 = static PhoneSnippetDataModels.bundleName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t PhoneSnippetDataModels.snippetHidden(for:idiom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DeviceIdiom();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PhoneSnippetDataModels();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of PhoneSnippetDataModels(v3, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 6)
    {
      char v13 = specialized StackedButtonsModel.shouldHideSnippet(on:)(a2, v11[8]);
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
    if (EnumCaseMultiPayload)
    {
      outlined destroy of PhoneSnippetDataModels((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
      char v13 = 0;
      return v13 & 1;
    }
  }
  outlined destroy of PhoneSnippetDataModels((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F75620], v5);
  char v13 = static DeviceIdiom.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13 & 1;
}

uint64_t type metadata accessor for PhoneSnippetDataModels()
{
  uint64_t result = type metadata singleton initialization cache for PhoneSnippetDataModels;
  if (!type metadata singleton initialization cache for PhoneSnippetDataModels) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined init with copy of PhoneSnippetDataModels(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoneSnippetDataModels();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t PhoneSnippetDataModels.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
    case 7:
    case 9:
      return result;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0x4264656B63617473;
      break;
    case 8:
      unint64_t result = 0x747369486C6C6163;
      break;
    case 10:
      unint64_t result = 0x6F56656C676E6973;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      unint64_t result = 0x69666E6F43707061;
      break;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return 1;
}

void protocol witness for CodingKey.init(intValue:) in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.CallHistoryListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.CallHistoryListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneSnippetDataModels.CodingKeys()
{
  return PhoneSnippetDataModels.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneSnippetDataModels.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized PhoneSnippetDataModels.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

void protocol witness for Hashable.hash(into:) in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized PhoneSnippetDataModels.AppConfirmationCodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.StackedButtonsCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PhoneSnippetDataModels.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys>);
  uint64_t v122 = *(void *)(v2 - 8);
  uint64_t v123 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v121 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for SingleResultCallHistoryModel();
  MEMORY[0x270FA5388](v118);
  uint64_t v120 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.SingleVoicemailCodingKeys>);
  uint64_t v117 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v116 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for SingleResultVoicemailModel();
  MEMORY[0x270FA5388](v113);
  uint64_t v115 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.PlayVoicemailListCodingKeys>);
  uint64_t v112 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v111 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for PlayVoicemailModel();
  MEMORY[0x270FA5388](v108);
  uint64_t v110 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.CallHistoryListCodingKeys>);
  uint64_t v73 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v107 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for SearchCallHistoryModel();
  MEMORY[0x270FA5388](v104);
  uint64_t v106 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.YesNoConfirmationCodingKeys>);
  uint64_t v103 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v102 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.StackedButtonsCodingKeys>);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v98 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys>);
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v96 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  MEMORY[0x270FA5388](v93);
  uint64_t v95 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys>);
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  MEMORY[0x270FA5388](v88);
  uint64_t v90 = (uint64_t)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.EmergencyCountdownCodingKeys>);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v86 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for EmergencyCountdownModel();
  MEMORY[0x270FA5388](v83);
  uint64_t v85 = (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.ContactConfirmationCodingKeys>);
  uint64_t v82 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v81 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for ContactConfirmationModel();
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.AppDisambiguationCodingKeys>);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v76 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.AppConfirmationCodingKeys>);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for YesNoConfirmationModel();
  uint64_t v24 = MEMORY[0x270FA5388](v124);
  id v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v29 = type metadata accessor for PhoneSnippetDataModels();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (uint64_t *)((char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneSnippetDataModels.CodingKeys>);
  uint64_t v125 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v33 = (char *)&v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  uint64_t v126 = v33;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  outlined init with copy of PhoneSnippetDataModels(v131, (uint64_t)v31);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v39 = *v31;
      uint64_t v40 = v31[1];
      uint64_t v41 = v31[2];
      LOBYTE(v128) = 1;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
      char v42 = v76;
      char v43 = v126;
      uint64_t v44 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v128 = v39;
      uint64_t v129 = v40;
      uint64_t v130 = v41;
      lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
      uint64_t v45 = v78;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v45);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v43, v44);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 2u:
      uint64_t v46 = v80;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v80, (uint64_t (*)(void))type metadata accessor for ContactConfirmationModel);
      LOBYTE(v128) = 2;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
      uint64_t v47 = v81;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
      uint64_t v48 = v84;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v48);
      uint64_t v49 = type metadata accessor for ContactConfirmationModel;
      goto LABEL_15;
    case 3u:
      uint64_t v46 = v85;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v85, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
      LOBYTE(v128) = 3;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
      long long v50 = v86;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownModel);
      uint64_t v51 = v89;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v50, v51);
      uint64_t v49 = type metadata accessor for EmergencyCountdownModel;
      goto LABEL_15;
    case 4u:
      uint64_t v46 = v90;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v90, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
      LOBYTE(v128) = 4;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
      uint64_t v52 = v91;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
      uint64_t v53 = v94;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v53);
      uint64_t v49 = (uint64_t (*)())type metadata accessor for ForeignEmergencyCallDisambiguationModel;
      goto LABEL_15;
    case 5u:
      uint64_t v46 = v95;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v95, type metadata accessor for LocalEmergencyCallDisambiguationModel);
      LOBYTE(v128) = 5;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
      uint64_t v54 = v96;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
      uint64_t v55 = v99;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v54, v55);
      uint64_t v49 = (uint64_t (*)())type metadata accessor for LocalEmergencyCallDisambiguationModel;
      goto LABEL_15;
    case 6u:
      uint64_t v56 = *v31;
      char v57 = *((unsigned char *)v31 + 8);
      LOBYTE(v128) = 6;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
      uint64_t v58 = v98;
      uint64_t v60 = v126;
      uint64_t v59 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v128 = v56;
      LOBYTE(v129) = v57;
      lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
      uint64_t v61 = v101;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v61);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v60, v59);
      return swift_bridgeObjectRelease();
    case 7u:
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
      LOBYTE(v128) = 7;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
      uint64_t v63 = v102;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      uint64_t v64 = v105;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v64);
      uint64_t v37 = type metadata accessor for YesNoConfirmationModel;
      uint64_t v38 = (uint64_t)v26;
      break;
    case 8u:
      uint64_t v46 = v106;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v106, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryModel);
      LOBYTE(v128) = 8;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
      uint64_t v65 = v107;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
      uint64_t v66 = v109;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v65, v66);
      uint64_t v49 = type metadata accessor for SearchCallHistoryModel;
      goto LABEL_15;
    case 9u:
      uint64_t v46 = v110;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v110, (uint64_t (*)(void))type metadata accessor for PlayVoicemailModel);
      LOBYTE(v128) = 9;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
      uint64_t v67 = v111;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
      uint64_t v68 = v114;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v67, v68);
      uint64_t v49 = type metadata accessor for PlayVoicemailModel;
      goto LABEL_15;
    case 0xAu:
      uint64_t v46 = v115;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v115, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailModel);
      LOBYTE(v128) = 10;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
      uint64_t v69 = v116;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
      uint64_t v70 = v119;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v69, v70);
      uint64_t v49 = type metadata accessor for SingleResultVoicemailModel;
      goto LABEL_15;
    case 0xBu:
      uint64_t v46 = v120;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, v120, (uint64_t (*)(void))type metadata accessor for SingleResultCallHistoryModel);
      LOBYTE(v128) = 11;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
      uint64_t v71 = v121;
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
      uint64_t v72 = v123;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v71, v72);
      uint64_t v49 = type metadata accessor for SingleResultCallHistoryModel;
LABEL_15:
      uint64_t v37 = v49;
      uint64_t v38 = v46;
      break;
    default:
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
      LOBYTE(v128) = 0;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
      uint64_t v35 = v126;
      uint64_t v34 = v127;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      uint64_t v36 = v75;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v23, v36);
      uint64_t v37 = type metadata accessor for YesNoConfirmationModel;
      uint64_t v38 = (uint64_t)v28;
      break;
  }
  outlined destroy of PhoneSnippetDataModels(v38, (uint64_t (*)(void))v37);
  return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v35, v34);
}

uint64_t PhoneSnippetDataModels.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v162 = a2;
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys>);
  uint64_t v146 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v155 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.SingleVoicemailCodingKeys>);
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  v154 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.PlayVoicemailListCodingKeys>);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v153 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.CallHistoryListCodingKeys>);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v152 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.YesNoConfirmationCodingKeys>);
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  v151 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.StackedButtonsCodingKeys>);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  uint64_t v160 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys>);
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  v150 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys>);
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  v149 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.EmergencyCountdownCodingKeys>);
  uint64_t v130 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  long long v147 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.ContactConfirmationCodingKeys>);
  uint64_t v128 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  int v159 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.AppDisambiguationCodingKeys>);
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v148 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.AppConfirmationCodingKeys>);
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  v157 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneSnippetDataModels.CodingKeys>);
  uint64_t v156 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for PhoneSnippetDataModels();
  uint64_t v17 = MEMORY[0x270FA5388](v161);
  uint64_t v122 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v121 = (char *)&v109 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v120 = (char *)&v109 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v119 = (char *)&v109 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v118 = (char *)&v109 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v115 = (uint64_t *)((char *)&v109 - v28);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v117 = (char *)&v109 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v116 = (char *)&v109 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v109 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v109 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v41 = (char *)&v109 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v109 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v109 - v45;
  uint64_t v47 = a1[3];
  v164 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v47);
  lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys();
  v158 = v16;
  uint64_t v48 = v167;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v48)
  {
LABEL_27:
    uint64_t v97 = (uint64_t)v164;
    return __swift_destroy_boxed_opaque_existential_1(v97);
  }
  uint64_t v110 = v41;
  uint64_t v111 = v44;
  uint64_t v112 = v38;
  uint64_t v113 = v35;
  uint64_t v49 = v157;
  uint64_t v51 = v159;
  long long v50 = v160;
  uint64_t v167 = 0;
  uint64_t v52 = v161;
  uint64_t v114 = v46;
  uint64_t v54 = v162;
  uint64_t v53 = v163;
  uint64_t v55 = v158;
  uint64_t v56 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v57 = v53;
  if (*(void *)(v56 + 16) != 1)
  {
    uint64_t v65 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v67 = v66;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *uint64_t v67 = v52;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v65 - 8) + 104))(v67, *MEMORY[0x263F8DCB0], v65);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v57);
    goto LABEL_27;
  }
  switch(*(unsigned char *)(v56 + 32))
  {
    case 1:
      LOBYTE(v165) = 1;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys();
      uint64_t v68 = v148;
      uint64_t v59 = v53;
      uint64_t v69 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v69) {
        goto LABEL_26;
      }
      lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
      uint64_t v70 = v126;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v68, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v59);
      uint64_t v107 = v110;
      *uint64_t v110 = v165;
      *(_OWORD *)(v107 + 1) = v166;
      goto LABEL_35;
    case 2:
      LOBYTE(v165) = 2;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys();
      uint64_t v71 = v51;
      uint64_t v72 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v72) {
        goto LABEL_16;
      }
      type metadata accessor for ContactConfirmationModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ContactConfirmationModel and conformance ContactConfirmationModel, (void (*)(uint64_t))type metadata accessor for ContactConfirmationModel);
      uint64_t v73 = v112;
      uint64_t v74 = v127;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v128 + 8))(v71, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v163);
      goto LABEL_36;
    case 3:
      LOBYTE(v165) = 3;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys();
      uint64_t v75 = v147;
      uint64_t v76 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v76) {
        goto LABEL_16;
      }
      type metadata accessor for EmergencyCountdownModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownModel);
      uint64_t v73 = v113;
      uint64_t v77 = v129;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v130 + 8))(v75, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v163);
      goto LABEL_36;
    case 4:
      LOBYTE(v165) = 4;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys();
      uint64_t v78 = v149;
      uint64_t v79 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v79) {
        goto LABEL_16;
      }
      type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
      uint64_t v73 = v116;
      uint64_t v80 = v132;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v131 + 8))(v78, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v163);
      goto LABEL_36;
    case 5:
      LOBYTE(v165) = 5;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys();
      uint64_t v81 = v150;
      uint64_t v82 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v82)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
        goto LABEL_27;
      }
      type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
      uint64_t v73 = v117;
      uint64_t v100 = v135;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v134 + 8))(v81, v100);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v163);
LABEL_36:
      swift_storeEnumTagMultiPayload();
      uint64_t v103 = (uint64_t)v73;
LABEL_37:
      uint64_t v64 = (uint64_t)v114;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0(v103, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
      uint64_t v63 = (uint64_t)v164;
      goto LABEL_38;
    case 6:
      LOBYTE(v165) = 6;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys();
      uint64_t v59 = v53;
      uint64_t v83 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v83) {
        goto LABEL_26;
      }
      lazy protocol witness table accessor for type StackedButtonsModel and conformance StackedButtonsModel();
      uint64_t v84 = v137;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v85 = v156;
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v136 + 8))(v50, v84);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v55, v59);
      char v108 = v166;
      uint64_t v107 = v115;
      *uint64_t v115 = v165;
      *((unsigned char *)v107 + 8) = v108;
LABEL_35:
      swift_storeEnumTagMultiPayload();
      uint64_t v103 = (uint64_t)v107;
      goto LABEL_37;
    case 7:
      LOBYTE(v165) = 7;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys();
      uint64_t v59 = v53;
      uint64_t v86 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v86) {
        goto LABEL_26;
      }
      type metadata accessor for YesNoConfirmationModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      uint64_t v87 = v118;
      uint64_t v88 = v139;
      uint64_t v89 = v151;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v89, v88);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
      goto LABEL_33;
    case 8:
      LOBYTE(v165) = 8;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys();
      uint64_t v59 = v53;
      uint64_t v90 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v90) {
        goto LABEL_26;
      }
      type metadata accessor for SearchCallHistoryModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SearchCallHistoryModel and conformance SearchCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SearchCallHistoryModel);
      uint64_t v87 = v119;
      uint64_t v91 = v141;
      uint64_t v92 = v152;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v92, v91);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
      goto LABEL_33;
    case 9:
      LOBYTE(v165) = 9;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys();
      uint64_t v59 = v53;
      uint64_t v93 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v93) {
        goto LABEL_26;
      }
      type metadata accessor for PlayVoicemailModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PlayVoicemailModel and conformance PlayVoicemailModel, (void (*)(uint64_t))type metadata accessor for PlayVoicemailModel);
      uint64_t v87 = v120;
      uint64_t v94 = v143;
      uint64_t v95 = v153;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v142 + 8))(v95, v94);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
      goto LABEL_33;
    case 0xA:
      LOBYTE(v165) = 10;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys();
      uint64_t v59 = v53;
      uint64_t v96 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v96) {
        goto LABEL_26;
      }
      type metadata accessor for SingleResultVoicemailModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultVoicemailModel and conformance SingleResultVoicemailModel, (void (*)(uint64_t))type metadata accessor for SingleResultVoicemailModel);
      uint64_t v87 = v121;
      uint64_t v101 = v145;
      uint64_t v102 = v154;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v144 + 8))(v102, v101);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
LABEL_33:
      swift_storeEnumTagMultiPayload();
      uint64_t v103 = (uint64_t)v87;
      goto LABEL_37;
    case 0xB:
      LOBYTE(v165) = 11;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys();
      uint64_t v99 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v99)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
        uint64_t v97 = (uint64_t)v164;
        return __swift_destroy_boxed_opaque_existential_1(v97);
      }
      type metadata accessor for SingleResultCallHistoryModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel, (void (*)(uint64_t))type metadata accessor for SingleResultCallHistoryModel);
      uint64_t v104 = (uint64_t)v122;
      uint64_t v105 = v133;
      uint64_t v106 = v155;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v167 = 0;
      (*(void (**)(char *, uint64_t))(v146 + 8))(v106, v105);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (uint64_t)v114;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0(v104, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
      uint64_t v63 = (uint64_t)v164;
      uint64_t v54 = v162;
      goto LABEL_38;
    default:
      LOBYTE(v165) = 0;
      lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys();
      uint64_t v58 = v49;
      uint64_t v59 = v53;
      uint64_t v60 = v167;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v60)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v59);
        goto LABEL_27;
      }
      type metadata accessor for YesNoConfirmationModel();
      lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type YesNoConfirmationModel and conformance YesNoConfirmationModel, (void (*)(uint64_t))type metadata accessor for YesNoConfirmationModel);
      uint64_t v61 = (uint64_t)v111;
      uint64_t v62 = v124;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v58, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v55, v53);
      uint64_t v63 = (uint64_t)v164;
      uint64_t v167 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (uint64_t)v114;
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0(v61, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
LABEL_38:
      _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0(v64, v54, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v63);
      break;
  }
  return result;
}

uint64_t protocol witness for static SnippetPluginModel.bundleName.getter in conformance PhoneSnippetDataModels()
{
  if (one-time initialization token for bundleName != -1) {
    swift_once();
  }
  uint64_t v0 = static PhoneSnippetDataModels.bundleName;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t protocol witness for Decodable.init(from:) in conformance PhoneSnippetDataModels@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PhoneSnippetDataModels.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneSnippetDataModels(void *a1)
{
  return PhoneSnippetDataModels.encode(to:)(a1);
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CodingKeys and conformance PhoneSnippetDataModels.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys and conformance PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.SingleVoicemailCodingKeys and conformance PhoneSnippetDataModels.SingleVoicemailCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.PlayVoicemailListCodingKeys and conformance PhoneSnippetDataModels.PlayVoicemailListCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.CallHistoryListCodingKeys and conformance PhoneSnippetDataModels.CallHistoryListCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.YesNoConfirmationCodingKeys and conformance PhoneSnippetDataModels.YesNoConfirmationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.StackedButtonsCodingKeys and conformance PhoneSnippetDataModels.StackedButtonsCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys and conformance PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.EmergencyCountdownCodingKeys and conformance PhoneSnippetDataModels.EmergencyCountdownCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.ContactConfirmationCodingKeys and conformance PhoneSnippetDataModels.ContactConfirmationCodingKeys);
  }
  return result;
}

uint64_t outlined destroy of PhoneSnippetDataModels(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppDisambiguationCodingKeys and conformance PhoneSnippetDataModels.AppDisambiguationCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel and conformance AppDisambiguationModel);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneSnippetDataModels.AppConfirmationCodingKeys and conformance PhoneSnippetDataModels.AppConfirmationCodingKeys);
  }
  return result;
}

uint64_t _s14PhoneSnippetUI28SingleResultCallHistoryModelVWObTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t base witness table accessor for Decodable in PhoneSnippetDataModels()
{
  return lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
}

uint64_t base witness table accessor for Encodable in PhoneSnippetDataModels()
{
  return lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(&lazy protocol witness table cache variable for type PhoneSnippetDataModels and conformance PhoneSnippetDataModels, (void (*)(uint64_t))type metadata accessor for PhoneSnippetDataModels);
}

uint64_t lazy protocol witness table accessor for type SingleResultCallHistoryModel and conformance SingleResultCallHistoryModel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhoneSnippetDataModels(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        uint64_t v20 = a2[3];
        a1[2] = a2[2];
        a1[3] = v20;
        __dst = (int *)type metadata accessor for ContactConfirmationModel();
        uint64_t v21 = __dst[6];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        v225(v22, v23, v24);
        uint64_t v25 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v26 = v25[5];
        uint64_t v223 = &v22[v26];
        uint64_t v27 = &v23[v26];
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        v29(v223, v27, v28);
        v225(&v22[v25[6]], &v23[v25[6]], v24);
        v29(&v22[v25[7]], &v23[v25[7]], v28);
        uint64_t v30 = v25[8];
        uint64_t v31 = &v22[v30];
        uint64_t v32 = &v23[v30];
        uint64_t v33 = *((void *)v32 + 1);
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = v33;
        uint64_t v34 = __dst[7];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = *(uint64_t *)((char *)a2 + v34 + 8);
        swift_bridgeObjectRetain();
        if (v37)
        {
          *(void *)uint64_t v35 = *(void *)v36;
          *((void *)v35 + 1) = v37;
          uint64_t v38 = *((void *)v36 + 3);
          *((void *)v35 + 2) = *((void *)v36 + 2);
          *((void *)v35 + 3) = v38;
          uint64_t v39 = *((void *)v36 + 5);
          *((void *)v35 + 4) = *((void *)v36 + 4);
          *((void *)v35 + 5) = v39;
          uint64_t v40 = *((void *)v36 + 7);
          *((void *)v35 + 6) = *((void *)v36 + 6);
          *((void *)v35 + 7) = v40;
          v35[64] = v36[64];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v148 = *((_OWORD *)v36 + 3);
          *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
          *((_OWORD *)v35 + 3) = v148;
          v35[64] = v36[64];
          long long v149 = *((_OWORD *)v36 + 1);
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          *((_OWORD *)v35 + 1) = v149;
        }
        uint64_t v150 = __dst[8];
        v151 = (uint64_t *)((char *)a1 + v150);
        uint64_t v152 = (uint64_t *)((char *)a2 + v150);
        uint64_t v153 = v152[1];
        void *v151 = *v152;
        v151[1] = v153;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v42 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v41 - 8) + 16);
        v42(a1, a2, v41);
        uint64_t v43 = (int *)type metadata accessor for EmergencyCountdownModel();
        v42((uint64_t *)((char *)a1 + v43[5]), (uint64_t *)((char *)a2 + v43[5]), v41);
        v42((uint64_t *)((char *)a1 + v43[6]), (uint64_t *)((char *)a2 + v43[6]), v41);
        v42((uint64_t *)((char *)a1 + v43[7]), (uint64_t *)((char *)a2 + v43[7]), v41);
        v42((uint64_t *)((char *)a1 + v43[8]), (uint64_t *)((char *)a2 + v43[8]), v41);
        v42((uint64_t *)((char *)a1 + v43[9]), (uint64_t *)((char *)a2 + v43[9]), v41);
        v42((uint64_t *)((char *)a1 + v43[10]), (uint64_t *)((char *)a2 + v43[10]), v41);
        v42((uint64_t *)((char *)a1 + v43[11]), (uint64_t *)((char *)a2 + v43[11]), v41);
        v42((uint64_t *)((char *)a1 + v43[12]), (uint64_t *)((char *)a2 + v43[12]), v41);
        uint64_t v44 = v43[13];
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        uint64_t v48 = v43[14];
        uint64_t v49 = (char *)a1 + v48;
        long long v50 = (char *)a2 + v48;
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
        uint64_t v52 = v43[15];
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        uint64_t v56 = v43[16];
        uint64_t v57 = (uint64_t *)((char *)a1 + v56);
        uint64_t v58 = (uint64_t *)((char *)a2 + v56);
        uint64_t v59 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v59;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v60 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        __dsta = (void *)*((void *)v60 - 1);
        uint64_t v61 = (unsigned int (*)(uint64_t *, uint64_t, int *))__dsta[6];
        if (v61(a2, 1, v60))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          uint64_t v154 = type metadata accessor for UUID();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v154 - 8) + 16))(a1, a2, v154);
          uint64_t v155 = v60[5];
          uint64_t v156 = (char *)a1 + v155;
          v157 = (char *)a2 + v155;
          uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          int v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
          v159(v156, v157, v158);
          uint64_t v160 = v60[6];
          uint64_t v161 = (char *)a1 + v160;
          uint64_t v162 = (char *)a2 + v160;
          uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16))(v161, v162, v163);
          uint64_t v164 = v60[7];
          uint64_t v165 = (char *)a1 + v164;
          long long v166 = (char *)a2 + v164;
          uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
          v159((char *)a1 + v60[8], (char *)a2 + v60[8], v158);
          uint64_t v168 = v60[9];
          uint64_t v169 = (char *)a1 + v168;
          uint64_t v170 = (char *)a2 + v168;
          uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          uint64_t v172 = v60[10];
          uint64_t v173 = (char *)a1 + v172;
          uint64_t v174 = (char *)a2 + v172;
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
          ((void (*)(uint64_t *, void, uint64_t, int *))__dsta[7])(a1, 0, 1, v60);
        }
        uint64_t v176 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        uint64_t v177 = v176[5];
        v178 = (char *)a1 + v177;
        uint64_t v179 = (char *)a2 + v177;
        if (v61((uint64_t *)((char *)a2 + v177), 1, v60))
        {
          uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          uint64_t v192 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v178, v179, v192);
          uint64_t v193 = v60[5];
          v194 = &v178[v193];
          uint64_t v195 = &v179[v193];
          uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16);
          v197(v194, v195, v196);
          uint64_t v198 = v60[6];
          v199 = &v178[v198];
          v200 = &v179[v198];
          uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v199, v200, v201);
          uint64_t v202 = v60[7];
          v203 = &v178[v202];
          uint64_t v204 = &v179[v202];
          uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16))(v203, v204, v205);
          v197(&v178[v60[8]], &v179[v60[8]], v196);
          uint64_t v206 = v60[9];
          char v207 = &v178[v206];
          uint64_t v208 = &v179[v206];
          uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v207, v208, v209);
          uint64_t v210 = v60[10];
          uint64_t v211 = &v178[v210];
          char v212 = &v179[v210];
          uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16))(v211, v212, v213);
          ((void (*)(char *, void, uint64_t, int *))__dsta[7])(v178, 0, 1, v60);
        }
        uint64_t v214 = v176[6];
        uint64_t v215 = (uint64_t *)((char *)a1 + v214);
        uint64_t v216 = (uint64_t *)((char *)a2 + v214);
        uint64_t v217 = v216[1];
        *uint64_t v215 = *v216;
        v215[1] = v217;
        uint64_t v218 = v176[7];
        char v219 = (uint64_t *)((char *)a1 + v218);
        uint64_t v220 = (uint64_t *)((char *)a2 + v218);
        uint64_t v221 = v220[1];
        *char v219 = *v220;
        v219[1] = v221;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v63 = a2[1];
        *a1 = *a2;
        a1[1] = v63;
        a1[2] = a2[2];
        uint64_t v64 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        uint64_t v65 = v64[6];
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        uint64_t v68 = type metadata accessor for UUID();
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v69(v66, v67, v68);
        uint64_t v70 = v64[7];
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        *((unsigned char *)a1 + v64[8]) = *((unsigned char *)a2 + v64[8]);
        uint64_t v74 = v64[9];
        uint64_t v75 = (uint64_t *)((char *)a1 + v74);
        uint64_t v76 = (uint64_t *)((char *)a2 + v74);
        uint64_t v77 = v76[1];
        *uint64_t v75 = *v76;
        v75[1] = v77;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v78 = a2[1];
        *a1 = *a2;
        a1[1] = v78;
        uint64_t v79 = (int *)type metadata accessor for SearchCallHistoryModel();
        uint64_t v80 = v79[5];
        uint64_t v81 = (char *)a1 + v80;
        uint64_t v82 = (char *)a2 + v80;
        swift_bridgeObjectRetain();
        uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
        v84(v81, v82, v83);
        uint64_t v85 = v79[6];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
        v84((char *)a1 + v79[7], (char *)a2 + v79[7], v83);
        v84((char *)a1 + v79[8], (char *)a2 + v79[8], v83);
        uint64_t v89 = v79[9];
        uint64_t v90 = (char *)a1 + v89;
        uint64_t v91 = (char *)a2 + v89;
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
        v93(v90, v91, v92);
        v93((char *)a1 + v79[10], (char *)a2 + v79[10], v92);
        uint64_t v94 = v79[11];
        uint64_t v95 = (char *)a1 + v94;
        uint64_t v96 = (char *)a2 + v94;
        uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
        break;
      case 9u:
        uint64_t v98 = a2[1];
        *a1 = *a2;
        a1[1] = v98;
        uint64_t v99 = (int *)type metadata accessor for PlayVoicemailModel();
        uint64_t v100 = v99[5];
        uint64_t v101 = (char *)a1 + v100;
        uint64_t v102 = (char *)a2 + v100;
        swift_bridgeObjectRetain();
        uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
        uint64_t v104 = v99[6];
        uint64_t v105 = (char *)a1 + v104;
        uint64_t v106 = (char *)a2 + v104;
        uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        char v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
        v108(v105, v106, v107);
        v108((char *)a1 + v99[7], (char *)a2 + v99[7], v107);
        uint64_t v109 = v99[8];
        uint64_t v110 = (char *)a1 + v109;
        uint64_t v111 = (char *)a2 + v109;
        uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
        break;
      case 0xAu:
        uint64_t v113 = a2[1];
        *a1 = *a2;
        a1[1] = v113;
        uint64_t v114 = a2[3];
        a1[2] = a2[2];
        a1[3] = v114;
        uint64_t v115 = a2[5];
        a1[4] = a2[4];
        a1[5] = v115;
        uint64_t v116 = a2[7];
        a1[6] = a2[6];
        a1[7] = v116;
        uint64_t v117 = a2[9];
        a1[8] = a2[8];
        a1[9] = v117;
        uint64_t v118 = a2[11];
        a1[10] = a2[10];
        a1[11] = v118;
        uint64_t v119 = a2[13];
        a1[12] = a2[12];
        a1[13] = v119;
        uint64_t v120 = a2[15];
        a1[14] = a2[14];
        a1[15] = v120;
        uint64_t v121 = type metadata accessor for SingleResultVoicemailModel();
        uint64_t v122 = *(int *)(v121 + 52);
        uint64_t v227 = (char *)a1 + v122;
        __dstd = (int *)v121;
        char v226 = (char *)a2 + v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
        v124(v227, v226, v123);
        v124((char *)a1 + __dstd[14], (char *)a2 + __dstd[14], v123);
        uint64_t v125 = __dstd[15];
        uint64_t v126 = (char *)a1 + v125;
        uint64_t v127 = (char *)a2 + v125;
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        char v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
        v228(v126, v127, v128);
        uint64_t v129 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v130 = v129[5];
        uint64_t v131 = &v126[v130];
        uint64_t v132 = &v127[v130];
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
        v134(v131, v132, v133);
        v228(&v126[v129[6]], &v127[v129[6]], v128);
        v134(&v126[v129[7]], &v127[v129[7]], v133);
        uint64_t v135 = v129[8];
        uint64_t v136 = &v126[v135];
        uint64_t v137 = &v127[v135];
        uint64_t v138 = *((void *)v137 + 1);
        *(void *)uint64_t v136 = *(void *)v137;
        *((void *)v136 + 1) = v138;
        swift_bridgeObjectRetain();
        break;
      case 0xBu:
        uint64_t v139 = a2[1];
        *a1 = *a2;
        a1[1] = v139;
        uint64_t v140 = a2[3];
        a1[2] = a2[2];
        a1[3] = v140;
        uint64_t v141 = a2[5];
        a1[4] = a2[4];
        a1[5] = v141;
        uint64_t v142 = a2[7];
        a1[6] = a2[6];
        a1[7] = v142;
        a1[8] = a2[8];
        uint64_t v143 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        __dstb = (char *)a1 + v143;
        uint64_t v144 = (char *)a2 + v143;
        uint64_t v145 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v229 = *((void *)v145 - 1);
        uint64_t v146 = *(unsigned int (**)(char *, uint64_t, int *))(v229 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v146(v144, 1, v145))
        {
          uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(__dstb, v144, *(void *)(*(void *)(v147 - 8) + 64));
        }
        else
        {
          uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          uint64_t v224 = *(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16);
          v224(__dstb, v144, v181);
          uint64_t v182 = v145[5];
          v183 = &__dstb[v182];
          v184 = &v144[v182];
          uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16);
          v186(v183, v184, v185);
          v224(&__dstb[v145[6]], &v144[v145[6]], v181);
          v186(&__dstb[v145[7]], &v144[v145[7]], v185);
          uint64_t v187 = v145[8];
          v188 = &__dstb[v187];
          v189 = &v144[v187];
          uint64_t v190 = *((void *)v189 + 1);
          *(void *)v188 = *(void *)v189;
          *((void *)v188 + 1) = v190;
          uint64_t v191 = *(void (**)(char *, void, uint64_t, int *))(v229 + 56);
          swift_bridgeObjectRetain();
          v191(__dstb, 0, 1, v145);
        }
        break;
      default:
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        __dstc = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
        __dstc(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        v12(v9, v10, v11);
        __dstc((uint64_t *)((char *)a1 + v7[6]), (uint64_t *)((char *)a2 + v7[6]), v6);
        v12((char *)a1 + v7[7], (char *)a2 + v7[7], v11);
        uint64_t v13 = v7[8];
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PhoneSnippetDataModels(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 7:
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      int v5 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v6 = a1 + v5[5];
      uint64_t v7 = &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>;
      goto LABEL_18;
    case 1:
      goto LABEL_10;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v88 = type metadata accessor for ContactConfirmationModel();
      uint64_t v8 = a1 + *(int *)(v88 + 24);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v12 = v8 + v11[5];
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v12, v13);
      v10(v8 + v11[6], v9);
      v14(v8 + v11[7], v13);
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + *(int *)(v88 + 28) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_21;
    case 3:
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(a1, v15);
      uint64_t v17 = (int *)type metadata accessor for EmergencyCountdownModel();
      v16(a1 + v17[5], v15);
      v16(a1 + v17[6], v15);
      v16(a1 + v17[7], v15);
      v16(a1 + v17[8], v15);
      v16(a1 + v17[9], v15);
      v16(a1 + v17[10], v15);
      v16(a1 + v17[11], v15);
      v16(a1 + v17[12], v15);
      uint64_t v18 = a1 + v17[13];
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      uint64_t v20 = a1 + v17[14];
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      uint64_t v22 = a1 + v17[15];
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      goto LABEL_21;
    case 4:
      uint64_t v24 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v24 - 1) + 48);
      if (!v25(a1, 1, v24))
      {
        uint64_t v26 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
        uint64_t v27 = a1 + v24[5];
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v29 = *(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);
        v29(v27, v28);
        uint64_t v30 = a1 + v24[6];
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
        uint64_t v32 = a1 + v24[7];
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        v29(a1 + v24[8], v28);
        uint64_t v34 = a1 + v24[9];
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
        uint64_t v36 = a1 + v24[10];
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      }
      uint64_t v38 = a1 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
      if (!v25(v38, 1, v24))
      {
        uint64_t v39 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
        uint64_t v40 = v38 + v24[5];
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8);
        v42(v40, v41);
        uint64_t v43 = v38 + v24[6];
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
        uint64_t v45 = v38 + v24[7];
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
        v42(v38 + v24[8], v41);
        uint64_t v47 = v38 + v24[9];
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
        uint64_t v49 = v38 + v24[10];
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
      }
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v51 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v52 = a1 + *(int *)(v51 + 24);
      uint64_t v53 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
      uint64_t v54 = a1 + *(int *)(v51 + 28);
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
      goto LABEL_21;
    case 6:
      goto LABEL_21;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v56 = (int *)type metadata accessor for SearchCallHistoryModel();
      uint64_t v57 = a1 + v56[5];
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8);
      v59(v57, v58);
      uint64_t v60 = a1 + v56[6];
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
      v59(a1 + v56[7], v58);
      v59(a1 + v56[8], v58);
      uint64_t v62 = a1 + v56[9];
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
      v64(v62, v63);
      v64(a1 + v56[10], v63);
      uint64_t v65 = v56[11];
      goto LABEL_14;
    case 9:
      swift_bridgeObjectRelease();
      uint64_t v66 = (int *)type metadata accessor for PlayVoicemailModel();
      uint64_t v67 = a1 + v66[5];
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
      uint64_t v69 = a1 + v66[6];
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8);
      v71(v69, v70);
      v71(a1 + v66[7], v70);
      uint64_t v65 = v66[8];
LABEL_14:
      uint64_t v72 = a1 + v65;
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8);
      return v74(v72, v73);
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = (int *)type metadata accessor for SingleResultVoicemailModel();
      uint64_t v76 = a1 + v75[13];
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v78 = *(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8);
      v78(v76, v77);
      v78(a1 + v75[14], v77);
      a1 += v75[15];
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      int v5 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v6 = a1 + v5[5];
      uint64_t v7 = &demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>;
LABEL_18:
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(v7);
      uint64_t v80 = *(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8);
      v80(v6, v79);
      v4(a1 + v5[6], v3);
      v80(a1 + v5[7], v79);
      goto LABEL_21;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v81 = a1 + *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      uint64_t v82 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v82 - 1) + 48))(v81, 1, v82);
      if (result) {
        return result;
      }
      uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8);
      v84(v81, v83);
      uint64_t v85 = v81 + v82[5];
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v87 = *(void (**)(uint64_t, uint64_t))(*(void *)(v86 - 8) + 8);
      v87(v85, v86);
      v84(v81 + v82[6], v83);
      v87(v81 + v82[7], v86);
LABEL_21:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void *initializeWithCopy for PhoneSnippetDataModels(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      __dst = (int *)type metadata accessor for ContactConfirmationModel();
      uint64_t v18 = __dst[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v234 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v234(v19, v20, v21);
      uint64_t v22 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v23 = v22[5];
      v232 = &v19[v23];
      uint64_t v24 = &v20[v23];
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      v26(v232, v24, v25);
      v234(&v19[v22[6]], &v20[v22[6]], v21);
      v26(&v19[v22[7]], &v20[v22[7]], v25);
      uint64_t v27 = v22[8];
      uint64_t v28 = &v19[v27];
      uint64_t v29 = &v20[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = __dst[7];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
      swift_bridgeObjectRetain();
      if (v34)
      {
        *(void *)uint64_t v32 = *(void *)v33;
        *((void *)v32 + 1) = v34;
        uint64_t v35 = *((void *)v33 + 3);
        *((void *)v32 + 2) = *((void *)v33 + 2);
        *((void *)v32 + 3) = v35;
        uint64_t v36 = *((void *)v33 + 5);
        *((void *)v32 + 4) = *((void *)v33 + 4);
        *((void *)v32 + 5) = v36;
        uint64_t v37 = *((void *)v33 + 7);
        *((void *)v32 + 6) = *((void *)v33 + 6);
        *((void *)v32 + 7) = v37;
        v32[64] = v33[64];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v157 = *((_OWORD *)v33 + 3);
        *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
        *((_OWORD *)v32 + 3) = v157;
        v32[64] = v33[64];
        long long v158 = *((_OWORD *)v33 + 1);
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v158;
      }
      uint64_t v159 = __dst[8];
      uint64_t v160 = (void *)((char *)a1 + v159);
      uint64_t v161 = (void *)((char *)a2 + v159);
      uint64_t v162 = v161[1];
      *uint64_t v160 = *v161;
      v160[1] = v162;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v39 = *(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16);
      v39(a1, a2, v38);
      uint64_t v40 = (int *)type metadata accessor for EmergencyCountdownModel();
      v39((void *)((char *)a1 + v40[5]), (void *)((char *)a2 + v40[5]), v38);
      v39((void *)((char *)a1 + v40[6]), (void *)((char *)a2 + v40[6]), v38);
      v39((void *)((char *)a1 + v40[7]), (void *)((char *)a2 + v40[7]), v38);
      v39((void *)((char *)a1 + v40[8]), (void *)((char *)a2 + v40[8]), v38);
      v39((void *)((char *)a1 + v40[9]), (void *)((char *)a2 + v40[9]), v38);
      v39((void *)((char *)a1 + v40[10]), (void *)((char *)a2 + v40[10]), v38);
      v39((void *)((char *)a1 + v40[11]), (void *)((char *)a2 + v40[11]), v38);
      v39((void *)((char *)a1 + v40[12]), (void *)((char *)a2 + v40[12]), v38);
      uint64_t v41 = v40[13];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      uint64_t v45 = v40[14];
      uint64_t v46 = (char *)a1 + v45;
      uint64_t v47 = (char *)a2 + v45;
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      uint64_t v49 = v40[15];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v53 = v40[16];
      uint64_t v54 = (void *)((char *)a1 + v53);
      uint64_t v55 = (void *)((char *)a2 + v53);
      uint64_t v56 = v55[1];
      void *v54 = *v55;
      v54[1] = v56;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v57 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      uint64_t v58 = (void *)*((void *)v57 - 1);
      uint64_t v59 = (unsigned int (*)(void *, uint64_t, int *))v58[6];
      if (v59(a2, 1, v57))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(a1, a2, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        uint64_t v163 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v163 - 8) + 16))(a1, a2, v163);
        uint64_t v164 = v57[5];
        __dste = v58;
        uint64_t v165 = (char *)a1 + v164;
        long long v166 = (char *)a2 + v164;
        uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
        v168(v165, v166, v167);
        uint64_t v169 = v57[6];
        uint64_t v170 = (char *)a1 + v169;
        uint64_t v171 = (char *)a2 + v169;
        uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
        uint64_t v173 = v57[7];
        uint64_t v174 = (char *)a1 + v173;
        uint64_t v175 = (char *)a2 + v173;
        uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
        v168((char *)a1 + v57[8], (char *)a2 + v57[8], v167);
        uint64_t v177 = v57[9];
        v178 = (char *)a1 + v177;
        uint64_t v179 = (char *)a2 + v177;
        uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v178, v179, v180);
        uint64_t v181 = v57[10];
        uint64_t v182 = (char *)a1 + v181;
        v183 = (char *)a2 + v181;
        uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        uint64_t v185 = v182;
        uint64_t v58 = __dste;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v185, v183, v184);
        ((void (*)(void *, void, uint64_t, int *))__dste[7])(a1, 0, 1, v57);
      }
      uint64_t v186 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v187 = v186[5];
      v188 = (char *)a1 + v187;
      v189 = (char *)a2 + v187;
      if (v59((void *)((char *)a2 + v187), 1, v57))
      {
        uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
      }
      else
      {
        uint64_t v202 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v188, v189, v202);
        uint64_t v203 = v57[5];
        __dstf = (void (**)(void *, void, uint64_t, int *))v58;
        uint64_t v204 = &v188[v203];
        uint64_t v205 = &v189[v203];
        uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16);
        v206(v204, v205, v239);
        uint64_t v207 = v57[6];
        uint64_t v208 = &v188[v207];
        uint64_t v209 = &v189[v207];
        uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
        uint64_t v211 = v57[7];
        char v212 = &v188[v211];
        uint64_t v213 = &v189[v211];
        uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v212, v213, v214);
        v206(&v188[v57[8]], &v189[v57[8]], v239);
        uint64_t v215 = v57[9];
        uint64_t v216 = &v188[v215];
        uint64_t v217 = &v189[v215];
        uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16))(v216, v217, v218);
        uint64_t v219 = v57[10];
        uint64_t v220 = &v188[v219];
        uint64_t v221 = &v189[v219];
        uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
        __dstf[7](v188, 0, 1, v57);
      }
      uint64_t v223 = v186[6];
      uint64_t v224 = (void *)((char *)a1 + v223);
      uint64_t v225 = (void *)((char *)a2 + v223);
      uint64_t v226 = v225[1];
      *uint64_t v224 = *v225;
      v224[1] = v226;
      uint64_t v227 = v186[7];
      char v228 = (void *)((char *)a1 + v227);
      uint64_t v229 = (void *)((char *)a2 + v227);
      uint64_t v230 = v229[1];
      *char v228 = *v229;
      v228[1] = v230;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v61 = a2[1];
      *a1 = *a2;
      a1[1] = v61;
      a1[2] = a2[2];
      uint64_t v62 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v63 = v62[6];
      uint64_t v64 = (char *)a1 + v63;
      uint64_t v65 = (char *)a2 + v63;
      uint64_t v66 = type metadata accessor for UUID();
      uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67(v64, v65, v66);
      uint64_t v68 = v62[7];
      uint64_t v69 = (char *)a1 + v68;
      uint64_t v70 = (char *)a2 + v68;
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      *((unsigned char *)a1 + v62[8]) = *((unsigned char *)a2 + v62[8]);
      uint64_t v72 = v62[9];
      uint64_t v73 = (void *)((char *)a1 + v72);
      uint64_t v74 = (void *)((char *)a2 + v72);
      uint64_t v75 = v74[1];
      *uint64_t v73 = *v74;
      v73[1] = v75;
      swift_bridgeObjectRetain();
      break;
    case 6u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      swift_bridgeObjectRetain();
      break;
    case 7u:
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      __dstc = *(void **)(*(void *)(v76 - 8) + 16);
      ((void (*)(void *, void *, uint64_t))__dstc)(a1, a2, v76);
      uint64_t v77 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v78 = v77[5];
      uint64_t v79 = (char *)a1 + v78;
      uint64_t v80 = (char *)a2 + v78;
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      v82(v79, v80, v81);
      ((void (*)(char *, char *, uint64_t))__dstc)((char *)a1 + v77[6], (char *)a2 + v77[6], v76);
      v82((char *)a1 + v77[7], (char *)a2 + v77[7], v81);
      uint64_t v83 = v77[8];
      uint64_t v84 = (void *)((char *)a1 + v83);
      uint64_t v85 = (void *)((char *)a2 + v83);
      uint64_t v86 = v85[1];
      *uint64_t v84 = *v85;
      v84[1] = v86;
      swift_bridgeObjectRetain();
      break;
    case 8u:
      uint64_t v87 = a2[1];
      *a1 = *a2;
      a1[1] = v87;
      uint64_t v88 = (int *)type metadata accessor for SearchCallHistoryModel();
      uint64_t v89 = v88[5];
      uint64_t v90 = (char *)a1 + v89;
      uint64_t v91 = (char *)a2 + v89;
      swift_bridgeObjectRetain();
      uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
      v93(v90, v91, v92);
      uint64_t v94 = v88[6];
      uint64_t v95 = (char *)a1 + v94;
      uint64_t v96 = (char *)a2 + v94;
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      v93((char *)a1 + v88[7], (char *)a2 + v88[7], v92);
      v93((char *)a1 + v88[8], (char *)a2 + v88[8], v92);
      uint64_t v98 = v88[9];
      uint64_t v99 = (char *)a1 + v98;
      uint64_t v100 = (char *)a2 + v98;
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
      v102(v99, v100, v101);
      v102((char *)a1 + v88[10], (char *)a2 + v88[10], v101);
      uint64_t v103 = v88[11];
      uint64_t v104 = (char *)a1 + v103;
      uint64_t v105 = (char *)a2 + v103;
      uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
      break;
    case 9u:
      uint64_t v107 = a2[1];
      *a1 = *a2;
      a1[1] = v107;
      char v108 = (int *)type metadata accessor for PlayVoicemailModel();
      uint64_t v109 = v108[5];
      uint64_t v110 = (char *)a1 + v109;
      uint64_t v111 = (char *)a2 + v109;
      swift_bridgeObjectRetain();
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
      uint64_t v113 = v108[6];
      uint64_t v114 = (char *)a1 + v113;
      uint64_t v115 = (char *)a2 + v113;
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
      v117(v114, v115, v116);
      v117((char *)a1 + v108[7], (char *)a2 + v108[7], v116);
      uint64_t v118 = v108[8];
      uint64_t v119 = (char *)a1 + v118;
      uint64_t v120 = (char *)a2 + v118;
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
      break;
    case 0xAu:
      uint64_t v122 = a2[1];
      *a1 = *a2;
      a1[1] = v122;
      uint64_t v123 = a2[3];
      a1[2] = a2[2];
      a1[3] = v123;
      uint64_t v124 = a2[5];
      a1[4] = a2[4];
      a1[5] = v124;
      uint64_t v125 = a2[7];
      a1[6] = a2[6];
      a1[7] = v125;
      uint64_t v126 = a2[9];
      a1[8] = a2[8];
      a1[9] = v126;
      uint64_t v127 = a2[11];
      a1[10] = a2[10];
      a1[11] = v127;
      uint64_t v128 = a2[13];
      a1[12] = a2[12];
      a1[13] = v128;
      uint64_t v129 = a2[15];
      a1[14] = a2[14];
      a1[15] = v129;
      uint64_t v130 = type metadata accessor for SingleResultVoicemailModel();
      uint64_t v131 = *(int *)(v130 + 52);
      v236 = (char *)a1 + v131;
      __dstd = (int *)v130;
      v235 = (char *)a2 + v131;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16);
      v133(v236, v235, v132);
      v133((char *)a1 + __dstd[14], (char *)a2 + __dstd[14], v132);
      uint64_t v134 = __dstd[15];
      uint64_t v135 = (char *)a1 + v134;
      uint64_t v136 = (char *)a2 + v134;
      uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      v237 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
      v237(v135, v136, v137);
      uint64_t v138 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v139 = v138[5];
      uint64_t v140 = &v135[v139];
      uint64_t v141 = &v136[v139];
      uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v143 = *(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16);
      v143(v140, v141, v142);
      v237(&v135[v138[6]], &v136[v138[6]], v137);
      v143(&v135[v138[7]], &v136[v138[7]], v142);
      uint64_t v144 = v138[8];
      uint64_t v145 = &v135[v144];
      uint64_t v146 = &v136[v144];
      uint64_t v147 = *((void *)v146 + 1);
      *(void *)uint64_t v145 = *(void *)v146;
      *((void *)v145 + 1) = v147;
      swift_bridgeObjectRetain();
      break;
    case 0xBu:
      uint64_t v148 = a2[1];
      *a1 = *a2;
      a1[1] = v148;
      uint64_t v149 = a2[3];
      a1[2] = a2[2];
      a1[3] = v149;
      uint64_t v150 = a2[5];
      a1[4] = a2[4];
      a1[5] = v150;
      uint64_t v151 = a2[7];
      a1[6] = a2[6];
      a1[7] = v151;
      a1[8] = a2[8];
      uint64_t v152 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      __dsta = (char *)a1 + v152;
      uint64_t v153 = (char *)a2 + v152;
      uint64_t v154 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v238 = *((void *)v154 - 1);
      uint64_t v155 = *(unsigned int (**)(char *, uint64_t, int *))(v238 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v155(v153, 1, v154))
      {
        uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
        memcpy(__dsta, v153, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        v233 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
        v233(__dsta, v153, v191);
        uint64_t v192 = v154[5];
        uint64_t v193 = &__dsta[v192];
        v194 = &v153[v192];
        uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16);
        v196(v193, v194, v195);
        v233(&__dsta[v154[6]], &v153[v154[6]], v191);
        v196(&__dsta[v154[7]], &v153[v154[7]], v195);
        uint64_t v197 = v154[8];
        uint64_t v198 = &__dsta[v197];
        v199 = &v153[v197];
        uint64_t v200 = *((void *)v199 + 1);
        *(void *)uint64_t v198 = *(void *)v199;
        *((void *)v198 + 1) = v200;
        uint64_t v201 = *(void (**)(char *, void, uint64_t, int *))(v238 + 56);
        swift_bridgeObjectRetain();
        v201(__dsta, 0, 1, v154);
      }
      break;
    default:
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      __dstb = *(void **)(*(void *)(v4 - 8) + 16);
      ((void (*)(void *, void *, uint64_t))__dstb)(a1, a2, v4);
      int v5 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      ((void (*)(char *, char *, uint64_t))__dstb)((char *)a1 + v5[6], (char *)a2 + v5[6], v4);
      v10((char *)a1 + v5[7], (char *)a2 + v5[7], v9);
      uint64_t v11 = v5[8];
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PhoneSnippetDataModels(void *a1, void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneSnippetDataModels((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        __dst = (int *)type metadata accessor for ContactConfirmationModel();
        uint64_t v14 = __dst[6];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v193 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        v193(v15, v16, v17);
        uint64_t v18 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v19 = v18[5];
        uint64_t v191 = &v15[v19];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        v22(v191, v20, v21);
        v193(&v15[v18[6]], &v16[v18[6]], v17);
        v22(&v15[v18[7]], &v16[v18[7]], v21);
        uint64_t v23 = v18[8];
        uint64_t v24 = &v15[v23];
        uint64_t v25 = &v16[v23];
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v26 = __dst[7];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = *(void *)((char *)a2 + v26 + 8);
        swift_bridgeObjectRetain();
        if (v29)
        {
          *(void *)uint64_t v27 = *(void *)v28;
          *((void *)v27 + 1) = *((void *)v28 + 1);
          *((void *)v27 + 2) = *((void *)v28 + 2);
          *((void *)v27 + 3) = *((void *)v28 + 3);
          *((void *)v27 + 4) = *((void *)v28 + 4);
          *((void *)v27 + 5) = *((void *)v28 + 5);
          *((void *)v27 + 6) = *((void *)v28 + 6);
          *((void *)v27 + 7) = *((void *)v28 + 7);
          v27[64] = v28[64];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
          long long v119 = *((_OWORD *)v28 + 1);
          long long v120 = *((_OWORD *)v28 + 2);
          long long v121 = *((_OWORD *)v28 + 3);
          v27[64] = v28[64];
          *((_OWORD *)v27 + 2) = v120;
          *((_OWORD *)v27 + 3) = v121;
          *((_OWORD *)v27 + 1) = v119;
        }
        uint64_t v122 = __dst[8];
        uint64_t v123 = (void *)((char *)a1 + v122);
        uint64_t v124 = (void *)((char *)a2 + v122);
        *uint64_t v123 = *v124;
        v123[1] = v124[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v31 = *(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16);
        v31(a1, a2, v30);
        uint64_t v32 = (int *)type metadata accessor for EmergencyCountdownModel();
        v31((void *)((char *)a1 + v32[5]), (void *)((char *)a2 + v32[5]), v30);
        v31((void *)((char *)a1 + v32[6]), (void *)((char *)a2 + v32[6]), v30);
        v31((void *)((char *)a1 + v32[7]), (void *)((char *)a2 + v32[7]), v30);
        v31((void *)((char *)a1 + v32[8]), (void *)((char *)a2 + v32[8]), v30);
        v31((void *)((char *)a1 + v32[9]), (void *)((char *)a2 + v32[9]), v30);
        v31((void *)((char *)a1 + v32[10]), (void *)((char *)a2 + v32[10]), v30);
        v31((void *)((char *)a1 + v32[11]), (void *)((char *)a2 + v32[11]), v30);
        v31((void *)((char *)a1 + v32[12]), (void *)((char *)a2 + v32[12]), v30);
        uint64_t v33 = v32[13];
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        uint64_t v37 = v32[14];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        uint64_t v41 = v32[15];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        uint64_t v45 = v32[16];
        uint64_t v46 = (void *)((char *)a1 + v45);
        uint64_t v47 = (void *)((char *)a2 + v45);
        *uint64_t v46 = *v47;
        v46[1] = v47[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v48 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        __dsta = (void *)*((void *)v48 - 1);
        uint64_t v49 = (unsigned int (*)(void *, uint64_t, int *))__dsta[6];
        if (v49(a2, 1, v48))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v125 = type metadata accessor for UUID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(a1, a2, v125);
          uint64_t v126 = v48[5];
          uint64_t v127 = (char *)a1 + v126;
          uint64_t v128 = (char *)a2 + v126;
          uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
          v130(v127, v128, v129);
          uint64_t v131 = v48[6];
          uint64_t v132 = (char *)a1 + v131;
          uint64_t v133 = (char *)a2 + v131;
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          uint64_t v135 = v48[7];
          uint64_t v136 = (char *)a1 + v135;
          uint64_t v137 = (char *)a2 + v135;
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
          v130((char *)a1 + v48[8], (char *)a2 + v48[8], v129);
          uint64_t v139 = v48[9];
          uint64_t v140 = (char *)a1 + v139;
          uint64_t v141 = (char *)a2 + v139;
          uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
          uint64_t v143 = v48[10];
          uint64_t v144 = (char *)a1 + v143;
          uint64_t v145 = (char *)a2 + v143;
          uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
          ((void (*)(void *, void, uint64_t, int *))__dsta[7])(a1, 0, 1, v48);
        }
        uint64_t v147 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        uint64_t v148 = v147[5];
        uint64_t v149 = (char *)a1 + v148;
        uint64_t v150 = (char *)a2 + v148;
        if (v49((void *)((char *)a2 + v148), 1, v48))
        {
          uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          uint64_t v162 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v149, v150, v162);
          uint64_t v163 = v48[5];
          uint64_t v164 = &v149[v163];
          uint64_t v165 = &v150[v163];
          uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
          v167(v164, v165, v166);
          uint64_t v168 = v48[6];
          uint64_t v169 = &v149[v168];
          uint64_t v170 = &v150[v168];
          uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          uint64_t v172 = v48[7];
          uint64_t v173 = &v149[v172];
          uint64_t v174 = &v150[v172];
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
          v167(&v149[v48[8]], &v150[v48[8]], v166);
          uint64_t v176 = v48[9];
          uint64_t v177 = &v149[v176];
          v178 = &v150[v176];
          uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
          uint64_t v180 = v48[10];
          uint64_t v181 = &v149[v180];
          uint64_t v182 = &v150[v180];
          uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v181, v182, v183);
          ((void (*)(char *, void, uint64_t, int *))__dsta[7])(v149, 0, 1, v48);
        }
        uint64_t v184 = v147[6];
        uint64_t v185 = (void *)((char *)a1 + v184);
        uint64_t v186 = (void *)((char *)a2 + v184);
        void *v185 = *v186;
        v185[1] = v186[1];
        uint64_t v187 = v147[7];
        v188 = (void *)((char *)a1 + v187);
        v189 = (void *)((char *)a2 + v187);
        void *v188 = *v189;
        v188[1] = v189[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v51 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        uint64_t v52 = v51[6];
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = type metadata accessor for UUID();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56(v53, v54, v55);
        uint64_t v57 = v51[7];
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        *((unsigned char *)a1 + v51[8]) = *((unsigned char *)a2 + v51[8]);
        uint64_t v61 = v51[9];
        uint64_t v62 = (void *)((char *)a1 + v61);
        uint64_t v63 = (void *)((char *)a2 + v61);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        swift_bridgeObjectRetain();
        break;
      case 6u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        swift_bridgeObjectRetain();
        break;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v64 = (int *)type metadata accessor for SearchCallHistoryModel();
        uint64_t v65 = v64[5];
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        swift_bridgeObjectRetain();
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
        v69(v66, v67, v68);
        uint64_t v70 = v64[6];
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        v69((char *)a1 + v64[7], (char *)a2 + v64[7], v68);
        v69((char *)a1 + v64[8], (char *)a2 + v64[8], v68);
        uint64_t v74 = v64[9];
        uint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        v78(v75, v76, v77);
        v78((char *)a1 + v64[10], (char *)a2 + v64[10], v77);
        uint64_t v79 = v64[11];
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
        break;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v83 = (int *)type metadata accessor for PlayVoicemailModel();
        uint64_t v84 = v83[5];
        uint64_t v85 = (char *)a1 + v84;
        uint64_t v86 = (char *)a2 + v84;
        swift_bridgeObjectRetain();
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        uint64_t v88 = v83[6];
        uint64_t v89 = (char *)a1 + v88;
        uint64_t v90 = (char *)a2 + v88;
        uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
        v92(v89, v90, v91);
        v92((char *)a1 + v83[7], (char *)a2 + v83[7], v91);
        uint64_t v93 = v83[8];
        uint64_t v94 = (char *)a1 + v93;
        uint64_t v95 = (char *)a2 + v93;
        uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
        break;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        uint64_t v97 = type metadata accessor for SingleResultVoicemailModel();
        uint64_t v98 = *(int *)(v97 + 52);
        uint64_t v195 = (char *)a1 + v98;
        __dstd = (int *)v97;
        v194 = (char *)a2 + v98;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
        v100(v195, v194, v99);
        v100((char *)a1 + __dstd[14], (char *)a2 + __dstd[14], v99);
        uint64_t v101 = __dstd[15];
        uint64_t v102 = (char *)a1 + v101;
        uint64_t v103 = (char *)a2 + v101;
        uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
        v196(v102, v103, v104);
        uint64_t v105 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v106 = v105[5];
        uint64_t v107 = &v102[v106];
        char v108 = &v103[v106];
        uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
        v110(v107, v108, v109);
        v196(&v102[v105[6]], &v103[v105[6]], v104);
        v110(&v102[v105[7]], &v103[v105[7]], v109);
        uint64_t v111 = v105[8];
        uint64_t v112 = &v102[v111];
        uint64_t v113 = &v103[v111];
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = *((void *)v113 + 1);
        swift_bridgeObjectRetain();
        break;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v114 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        __dstb = (char *)a1 + v114;
        uint64_t v115 = (char *)a2 + v114;
        uint64_t v116 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v197 = *((void *)v116 - 1);
        uint64_t v117 = *(unsigned int (**)(char *, uint64_t, int *))(v197 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v117(v115, 1, v116))
        {
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(__dstb, v115, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
          v192(__dstb, v115, v152);
          uint64_t v153 = v116[5];
          uint64_t v154 = &__dstb[v153];
          uint64_t v155 = &v115[v153];
          uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          long long v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
          v157(v154, v155, v156);
          v192(&__dstb[v116[6]], &v115[v116[6]], v152);
          v157(&__dstb[v116[7]], &v115[v116[7]], v156);
          uint64_t v158 = v116[8];
          uint64_t v159 = &__dstb[v158];
          uint64_t v160 = &v115[v158];
          *(void *)uint64_t v159 = *(void *)v160;
          *((void *)v159 + 1) = *((void *)v160 + 1);
          uint64_t v161 = *(void (**)(char *, void, uint64_t, int *))(v197 + 56);
          swift_bridgeObjectRetain();
          v161(__dstb, 0, 1, v116);
        }
        break;
      default:
        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        __dstc = *(void **)(*(void *)(v4 - 8) + 16);
        ((void (*)(void *, void *, uint64_t))__dstc)(a1, a2, v4);
        int v5 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v6 = v5[5];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(v7, v8, v9);
        ((void (*)(char *, char *, uint64_t))__dstc)((char *)a1 + v5[6], (char *)a2 + v5[6], v4);
        v10((char *)a1 + v5[7], (char *)a2 + v5[7], v9);
        uint64_t v11 = v5[8];
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        *uint64_t v12 = *v13;
        v12[1] = v13[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for PhoneSnippetDataModels(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v185(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(v9, v10, v11);
      v185(&a1[v7[6]], &a2[v7[6]], v6);
      v12(&a1[v7[7]], &a2[v7[7]], v11);
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      goto LABEL_22;
    case 2u:
      long long v13 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v13;
      uint64_t v186 = (int *)type metadata accessor for ContactConfirmationModel();
      uint64_t v14 = v186[6];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
      v180(v15, v16, v17);
      uint64_t v18 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v19 = v18[5];
      uint64_t v179 = &v15[v19];
      uint64_t v20 = &v16[v19];
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v22(v179, v20, v21);
      v180(&v15[v18[6]], &v16[v18[6]], v17);
      v22(&v15[v18[7]], &v16[v18[7]], v21);
      *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
      uint64_t v23 = v186[7];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      long long v26 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v26;
      v24[64] = v25[64];
      long long v27 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v27;
      *(_OWORD *)&a1[v186[8]] = *(_OWORD *)&a2[v186[8]];
      goto LABEL_22;
    case 3u:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
      v29(a1, a2, v28);
      uint64_t v30 = (int *)type metadata accessor for EmergencyCountdownModel();
      v29(&a1[v30[5]], &a2[v30[5]], v28);
      v29(&a1[v30[6]], &a2[v30[6]], v28);
      v29(&a1[v30[7]], &a2[v30[7]], v28);
      v29(&a1[v30[8]], &a2[v30[8]], v28);
      v29(&a1[v30[9]], &a2[v30[9]], v28);
      v29(&a1[v30[10]], &a2[v30[10]], v28);
      v29(&a1[v30[11]], &a2[v30[11]], v28);
      v29(&a1[v30[12]], &a2[v30[12]], v28);
      uint64_t v31 = v30[13];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      uint64_t v35 = v30[14];
      uint64_t v36 = &a1[v35];
      uint64_t v37 = &a2[v35];
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      uint64_t v39 = v30[15];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      *(_OWORD *)&a1[v30[16]] = *(_OWORD *)&a2[v30[16]];
      goto LABEL_22;
    case 4u:
      uint64_t v43 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      uint64_t v44 = *((void *)v43 - 1);
      uint64_t v45 = *(unsigned int (**)(char *, uint64_t, int *))(v44 + 48);
      if (v45(a2, 1, v43))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v124 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(a1, a2, v124);
        uint64_t v125 = v43[5];
        uint64_t v188 = v44;
        uint64_t v126 = &a1[v125];
        uint64_t v127 = &a2[v125];
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32);
        v129(v126, v127, v128);
        uint64_t v130 = v43[6];
        uint64_t v131 = &a1[v130];
        uint64_t v132 = &a2[v130];
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
        uint64_t v134 = v43[7];
        uint64_t v135 = &a1[v134];
        uint64_t v136 = &a2[v134];
        uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
        v129(&a1[v43[8]], &a2[v43[8]], v128);
        uint64_t v138 = v43[9];
        uint64_t v139 = &a1[v138];
        uint64_t v140 = &a2[v138];
        uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
        uint64_t v142 = v43[10];
        uint64_t v143 = &a1[v142];
        uint64_t v144 = &a2[v142];
        uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        uint64_t v146 = v143;
        uint64_t v44 = v188;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v146, v144, v145);
        (*(void (**)(char *, void, uint64_t, int *))(v188 + 56))(a1, 0, 1, v43);
      }
      uint64_t v147 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
      uint64_t v148 = v147[5];
      uint64_t v149 = &a1[v148];
      uint64_t v150 = &a2[v148];
      if (v45(&a2[v148], 1, v43))
      {
        uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
        memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
      }
      else
      {
        uint64_t v157 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v149, v150, v157);
        uint64_t v158 = v43[5];
        uint64_t v189 = v44;
        uint64_t v159 = &v149[v158];
        uint64_t v160 = &v150[v158];
        uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
        uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32);
        v161(v159, v160, v184);
        uint64_t v162 = v43[6];
        uint64_t v163 = &v149[v162];
        uint64_t v164 = &v150[v162];
        uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
        uint64_t v166 = v43[7];
        uint64_t v167 = &v149[v166];
        uint64_t v168 = &v150[v166];
        uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 32))(v167, v168, v169);
        v161(&v149[v43[8]], &v150[v43[8]], v184);
        uint64_t v170 = v43[9];
        uint64_t v171 = &v149[v170];
        uint64_t v172 = &v150[v170];
        uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v171, v172, v173);
        uint64_t v174 = v43[10];
        uint64_t v175 = &v149[v174];
        uint64_t v176 = &v150[v174];
        uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
        (*(void (**)(char *, void, uint64_t, int *))(v189 + 56))(v149, 0, 1, v43);
      }
      *(_OWORD *)&a1[v147[6]] = *(_OWORD *)&a2[v147[6]];
      *(_OWORD *)&a1[v147[7]] = *(_OWORD *)&a2[v147[7]];
      goto LABEL_22;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v47 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v48 = v47[6];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = &a2[v48];
      uint64_t v51 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      uint64_t v52 = v47[7];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      a1[v47[8]] = a2[v47[8]];
      *(_OWORD *)&a1[v47[9]] = *(_OWORD *)&a2[v47[9]];
      goto LABEL_22;
    case 7u:
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
      v187(a1, a2, v56);
      uint64_t v57 = (int *)type metadata accessor for YesNoConfirmationModel();
      uint64_t v58 = v57[5];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32);
      v62(v59, v60, v61);
      v187(&a1[v57[6]], &a2[v57[6]], v56);
      v62(&a1[v57[7]], &a2[v57[7]], v61);
      *(_OWORD *)&a1[v57[8]] = *(_OWORD *)&a2[v57[8]];
      goto LABEL_22;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v63 = (int *)type metadata accessor for SearchCallHistoryModel();
      uint64_t v64 = v63[5];
      uint64_t v65 = &a1[v64];
      uint64_t v66 = &a2[v64];
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32);
      v68(v65, v66, v67);
      uint64_t v69 = v63[6];
      uint64_t v70 = &a1[v69];
      uint64_t v71 = &a2[v69];
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      v68(&a1[v63[7]], &a2[v63[7]], v67);
      v68(&a1[v63[8]], &a2[v63[8]], v67);
      uint64_t v73 = v63[9];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = &a2[v73];
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32);
      v77(v74, v75, v76);
      v77(&a1[v63[10]], &a2[v63[10]], v76);
      uint64_t v78 = v63[11];
      uint64_t v79 = &a1[v78];
      uint64_t v80 = &a2[v78];
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
      goto LABEL_22;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v82 = (int *)type metadata accessor for PlayVoicemailModel();
      uint64_t v83 = v82[5];
      uint64_t v84 = &a1[v83];
      uint64_t v85 = &a2[v83];
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
      uint64_t v87 = v82[6];
      uint64_t v88 = &a1[v87];
      uint64_t v89 = &a2[v87];
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32);
      v91(v88, v89, v90);
      v91(&a1[v82[7]], &a2[v82[7]], v90);
      uint64_t v92 = v82[8];
      uint64_t v93 = &a1[v92];
      uint64_t v94 = &a2[v92];
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
      goto LABEL_22;
    case 0xAu:
      long long v96 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v96;
      long long v97 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v97;
      long long v98 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v98;
      long long v99 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v99;
      uint64_t v100 = (int *)type metadata accessor for SingleResultVoicemailModel();
      uint64_t v101 = v100[13];
      uint64_t v102 = &a1[v101];
      uint64_t v103 = &a2[v101];
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32);
      v105(v102, v103, v104);
      v105(&a1[v100[14]], &a2[v100[14]], v104);
      uint64_t v106 = v100[15];
      uint64_t v107 = &a1[v106];
      char v108 = &a2[v106];
      uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32);
      v182(v107, v108, v109);
      uint64_t v110 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v111 = v110[5];
      uint64_t v112 = &v107[v111];
      uint64_t v113 = &v108[v111];
      uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
      uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32);
      v115(v112, v113, v114);
      v182(&v107[v110[6]], &v108[v110[6]], v109);
      v115(&v107[v110[7]], &v108[v110[7]], v114);
      *(_OWORD *)&v107[v110[8]] = *(_OWORD *)&v108[v110[8]];
      goto LABEL_22;
    case 0xBu:
      long long v116 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v116;
      long long v117 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v117;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v118 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
      long long v119 = &a1[v118];
      long long v120 = &a2[v118];
      long long v121 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
      uint64_t v122 = *((void *)v121 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
      {
        uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
        memcpy(v119, v120, *(void *)(*(void *)(v123 - 8) + 64));
      }
      else
      {
        uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32);
        v183(v119, v120, v152);
        uint64_t v153 = v121[5];
        uint64_t v181 = &v119[v153];
        uint64_t v154 = &v120[v153];
        uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32);
        v156(v181, v154, v155);
        v183(&v119[v121[6]], &v120[v121[6]], v152);
        v156(&v119[v121[7]], &v120[v121[7]], v155);
        *(_OWORD *)&v119[v121[8]] = *(_OWORD *)&v120[v121[8]];
        (*(void (**)(char *, void, uint64_t, int *))(v122 + 56))(v119, 0, 1, v121);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for PhoneSnippetDataModels(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of PhoneSnippetDataModels((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PhoneSnippetDataModels);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
        v185(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
        v12(v9, v10, v11);
        v185(&a1[v7[6]], &a2[v7[6]], v6);
        v12(&a1[v7[7]], &a2[v7[7]], v11);
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_23;
      case 2u:
        long long v13 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v13;
        uint64_t v186 = (int *)type metadata accessor for ContactConfirmationModel();
        uint64_t v14 = v186[6];
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v180(v15, v16, v17);
        uint64_t v18 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v19 = v18[5];
        uint64_t v179 = &v15[v19];
        uint64_t v20 = &v16[v19];
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
        v22(v179, v20, v21);
        v180(&v15[v18[6]], &v16[v18[6]], v17);
        v22(&v15[v18[7]], &v16[v18[7]], v21);
        *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
        uint64_t v23 = v186[7];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        long long v26 = *((_OWORD *)v25 + 3);
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        *((_OWORD *)v24 + 3) = v26;
        v24[64] = v25[64];
        long long v27 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v27;
        *(_OWORD *)&a1[v186[8]] = *(_OWORD *)&a2[v186[8]];
        goto LABEL_23;
      case 3u:
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
        v29(a1, a2, v28);
        uint64_t v30 = (int *)type metadata accessor for EmergencyCountdownModel();
        v29(&a1[v30[5]], &a2[v30[5]], v28);
        v29(&a1[v30[6]], &a2[v30[6]], v28);
        v29(&a1[v30[7]], &a2[v30[7]], v28);
        v29(&a1[v30[8]], &a2[v30[8]], v28);
        v29(&a1[v30[9]], &a2[v30[9]], v28);
        v29(&a1[v30[10]], &a2[v30[10]], v28);
        v29(&a1[v30[11]], &a2[v30[11]], v28);
        v29(&a1[v30[12]], &a2[v30[12]], v28);
        uint64_t v31 = v30[13];
        uint64_t v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        uint64_t v35 = v30[14];
        uint64_t v36 = &a1[v35];
        uint64_t v37 = &a2[v35];
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
        uint64_t v39 = v30[15];
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        *(_OWORD *)&a1[v30[16]] = *(_OWORD *)&a2[v30[16]];
        goto LABEL_23;
      case 4u:
        uint64_t v43 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
        uint64_t v44 = *((void *)v43 - 1);
        uint64_t v45 = *(unsigned int (**)(char *, uint64_t, int *))(v44 + 48);
        if (v45(a2, 1, v43))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          uint64_t v124 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(a1, a2, v124);
          uint64_t v125 = v43[5];
          uint64_t v188 = v44;
          uint64_t v126 = &a1[v125];
          uint64_t v127 = &a2[v125];
          uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32);
          v129(v126, v127, v128);
          uint64_t v130 = v43[6];
          uint64_t v131 = &a1[v130];
          uint64_t v132 = &a2[v130];
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v132, v133);
          uint64_t v134 = v43[7];
          uint64_t v135 = &a1[v134];
          uint64_t v136 = &a2[v134];
          uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
          v129(&a1[v43[8]], &a2[v43[8]], v128);
          uint64_t v138 = v43[9];
          uint64_t v139 = &a1[v138];
          uint64_t v140 = &a2[v138];
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
          uint64_t v142 = v43[10];
          uint64_t v143 = &a1[v142];
          uint64_t v144 = &a2[v142];
          uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          uint64_t v146 = v143;
          uint64_t v44 = v188;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v146, v144, v145);
          (*(void (**)(char *, void, uint64_t, int *))(v188 + 56))(a1, 0, 1, v43);
        }
        uint64_t v147 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
        uint64_t v148 = v147[5];
        uint64_t v149 = &a1[v148];
        uint64_t v150 = &a2[v148];
        if (v45(&a2[v148], 1, v43))
        {
          uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          uint64_t v157 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v149, v150, v157);
          uint64_t v158 = v43[5];
          uint64_t v189 = v44;
          uint64_t v159 = &v149[v158];
          uint64_t v160 = &v150[v158];
          uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
          uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32);
          v161(v159, v160, v184);
          uint64_t v162 = v43[6];
          uint64_t v163 = &v149[v162];
          uint64_t v164 = &v150[v162];
          uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
          uint64_t v166 = v43[7];
          uint64_t v167 = &v149[v166];
          uint64_t v168 = &v150[v166];
          uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 32))(v167, v168, v169);
          v161(&v149[v43[8]], &v150[v43[8]], v184);
          uint64_t v170 = v43[9];
          uint64_t v171 = &v149[v170];
          uint64_t v172 = &v150[v170];
          uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v171, v172, v173);
          uint64_t v174 = v43[10];
          uint64_t v175 = &v149[v174];
          uint64_t v176 = &v150[v174];
          uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
          (*(void (**)(char *, void, uint64_t, int *))(v189 + 56))(v149, 0, 1, v43);
        }
        *(_OWORD *)&a1[v147[6]] = *(_OWORD *)&a2[v147[6]];
        *(_OWORD *)&a1[v147[7]] = *(_OWORD *)&a2[v147[7]];
        goto LABEL_23;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v47 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
        uint64_t v48 = v47[6];
        uint64_t v49 = &a1[v48];
        uint64_t v50 = &a2[v48];
        uint64_t v51 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
        uint64_t v52 = v47[7];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        a1[v47[8]] = a2[v47[8]];
        *(_OWORD *)&a1[v47[9]] = *(_OWORD *)&a2[v47[9]];
        goto LABEL_23;
      case 7u:
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v187 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
        v187(a1, a2, v56);
        uint64_t v57 = (int *)type metadata accessor for YesNoConfirmationModel();
        uint64_t v58 = v57[5];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = &a2[v58];
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32);
        v62(v59, v60, v61);
        v187(&a1[v57[6]], &a2[v57[6]], v56);
        v62(&a1[v57[7]], &a2[v57[7]], v61);
        *(_OWORD *)&a1[v57[8]] = *(_OWORD *)&a2[v57[8]];
        goto LABEL_23;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v63 = (int *)type metadata accessor for SearchCallHistoryModel();
        uint64_t v64 = v63[5];
        uint64_t v65 = &a1[v64];
        uint64_t v66 = &a2[v64];
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32);
        v68(v65, v66, v67);
        uint64_t v69 = v63[6];
        uint64_t v70 = &a1[v69];
        uint64_t v71 = &a2[v69];
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleCallRecordModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
        v68(&a1[v63[7]], &a2[v63[7]], v67);
        v68(&a1[v63[8]], &a2[v63[8]], v67);
        uint64_t v73 = v63[9];
        uint64_t v74 = &a1[v73];
        uint64_t v75 = &a2[v73];
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32);
        v77(v74, v75, v76);
        v77(&a1[v63[10]], &a2[v63[10]], v76);
        uint64_t v78 = v63[11];
        uint64_t v79 = &a1[v78];
        uint64_t v80 = &a2[v78];
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
        goto LABEL_23;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v82 = (int *)type metadata accessor for PlayVoicemailModel();
        uint64_t v83 = v82[5];
        uint64_t v84 = &a1[v83];
        uint64_t v85 = &a2[v83];
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
        uint64_t v87 = v82[6];
        uint64_t v88 = &a1[v87];
        uint64_t v89 = &a2[v87];
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32);
        v91(v88, v89, v90);
        v91(&a1[v82[7]], &a2[v82[7]], v90);
        uint64_t v92 = v82[8];
        uint64_t v93 = &a1[v92];
        uint64_t v94 = &a2[v92];
        uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
        goto LABEL_23;
      case 0xAu:
        long long v96 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v96;
        long long v97 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v97;
        long long v98 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v98;
        long long v99 = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 7) = v99;
        uint64_t v100 = (int *)type metadata accessor for SingleResultVoicemailModel();
        uint64_t v101 = v100[13];
        uint64_t v102 = &a1[v101];
        uint64_t v103 = &a2[v101];
        uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32);
        v105(v102, v103, v104);
        v105(&a1[v100[14]], &a2[v100[14]], v104);
        uint64_t v106 = v100[15];
        uint64_t v107 = &a1[v106];
        char v108 = &a2[v106];
        uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
        uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32);
        v182(v107, v108, v109);
        uint64_t v110 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v111 = v110[5];
        uint64_t v112 = &v107[v111];
        uint64_t v113 = &v108[v111];
        uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
        uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32);
        v115(v112, v113, v114);
        v182(&v107[v110[6]], &v108[v110[6]], v109);
        v115(&v107[v110[7]], &v108[v110[7]], v114);
        *(_OWORD *)&v107[v110[8]] = *(_OWORD *)&v108[v110[8]];
        goto LABEL_23;
      case 0xBu:
        long long v116 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v116;
        long long v117 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v117;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        uint64_t v118 = *(int *)(type metadata accessor for SingleResultCallHistoryModel() + 36);
        long long v119 = &a1[v118];
        long long v120 = &a2[v118];
        long long v121 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
        uint64_t v122 = *((void *)v121 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v122 + 48))(v120, 1, v121))
        {
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SearchCallHistoryBinaryButtonModel?);
          memcpy(v119, v120, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
          uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32);
          v183(v119, v120, v152);
          uint64_t v153 = v121[5];
          uint64_t v181 = &v119[v153];
          uint64_t v154 = &v120[v153];
          uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
          uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32);
          v156(v181, v154, v155);
          v183(&v119[v121[6]], &v120[v121[6]], v152);
          v156(&v119[v121[7]], &v120[v121[7]], v155);
          *(_OWORD *)&v119[v121[8]] = *(_OWORD *)&v120[v121[8]];
          (*(void (**)(char *, void, uint64_t, int *))(v122 + 56))(v119, 0, 1, v121);
        }
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneSnippetDataModels(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PhoneSnippetDataModels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t destructiveInjectEnumTag for PhoneSnippetDataModels()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for PhoneSnippetDataModels()
{
  uint64_t result = type metadata accessor for YesNoConfirmationModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ContactConfirmationModel();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for EmergencyCountdownModel();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ForeignEmergencyCallDisambiguationModel(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for LocalEmergencyCallDisambiguationModel(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for SearchCallHistoryModel();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for PlayVoicemailModel();
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for SingleResultVoicemailModel();
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for SingleResultCallHistoryModel();
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PhoneSnippetDataModels.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591AAB2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void *type metadata accessor for PhoneSnippetDataModels.CodingKeys()
{
  return &unk_270724250;
}

uint64_t getEnumTag for PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return 0;
}

void *type metadata accessor for PhoneSnippetDataModels.AppConfirmationCodingKeys()
{
  return &unk_2707242E0;
}

void *type metadata accessor for PhoneSnippetDataModels.AppDisambiguationCodingKeys()
{
  return &unk_270724370;
}

void *type metadata accessor for PhoneSnippetDataModels.ContactConfirmationCodingKeys()
{
  return &unk_270724400;
}

void *type metadata accessor for PhoneSnippetDataModels.EmergencyCountdownCodingKeys()
{
  return &unk_270724490;
}

void *type metadata accessor for PhoneSnippetDataModels.ForeignEmergencyCallDisambiguationCodingKeys()
{
  return &unk_270724520;
}

void *type metadata accessor for PhoneSnippetDataModels.LocalEmergencyCallDisambiguationCodingKeys()
{
  return &unk_2707245B0;
}

void *type metadata accessor for PhoneSnippetDataModels.StackedButtonsCodingKeys()
{
  return &unk_270724640;
}

void *type metadata accessor for PhoneSnippetDataModels.YesNoConfirmationCodingKeys()
{
  return &unk_2707246D0;
}

void *type metadata accessor for PhoneSnippetDataModels.CallHistoryListCodingKeys()
{
  return &unk_270724760;
}

void *type metadata accessor for PhoneSnippetDataModels.PlayVoicemailListCodingKeys()
{
  return &unk_2707247F0;
}

void *type metadata accessor for PhoneSnippetDataModels.SingleVoicemailCodingKeys()
{
  return &unk_270724880;
}

uint64_t getEnumTagSinglePayload for PhoneSnippetDataModels.AppConfirmationCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for PhoneSnippetDataModels.AppConfirmationCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2591AAD14);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for PhoneSnippetDataModels.SingleCallHistoryRecordCodingKeys()
{
  return &unk_270724910;
}

uint64_t specialized PhoneSnippetDataModels.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x69666E6F43707061 && a2 == 0xEF6E6F6974616D72;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002592053B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002592053D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002592053F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000259205410 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000259205440 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4264656B63617473 && a2 == 0xEE00736E6F747475 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205470 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747369486C6C6163 && a2 == 0xEF7473694C79726FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000259205490 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F56656C676E6973 && a2 == 0xEF6C69616D656369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002592054B0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t specialized PhoneSnippetDataModels.StackedButtonsCodingKeys.stringValue.getter()
{
  return 12383;
}

uint64_t specialized PhoneSnippetDataModels.AppConfirmationCodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t AppDisambiguationView.model.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppDisambiguationView() + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AppDisambiguationView()
{
  uint64_t result = type metadata singleton initialization cache for AppDisambiguationView;
  if (!type metadata singleton initialization cache for AppDisambiguationView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppDisambiguationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a4 = EnvironmentObject.init()();
  a4[1] = v8;
  uint64_t v9 = type metadata accessor for AppDisambiguationView();
  uint64_t result = ActionHandler.init()();
  uint64_t v11 = (uint64_t *)((char *)a4 + *(int *)(v9 + 24));
  *uint64_t v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  return result;
}

uint64_t AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v2 = type metadata accessor for AppDisambiguationView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AppDisambiguationView(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppDisambiguationView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v5, v10 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>);
  ComponentStack.init(content:)();
  outlined init with copy of AppDisambiguationView(v16[1], (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppDisambiguationView);
  uint64_t v11 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v5, v11 + v9);
  uint64_t v13 = v17;
  uint64_t v12 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v18, v8, v17);
  uint64_t v14 = (void *)(v12
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier>)
                          + 36));
  *uint64_t v14 = partial apply for closure #2 in AppDisambiguationView.body.getter;
  v14[1] = v11;
  v14[2] = 0;
  v14[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v13);
}

uint64_t closure #1 in AppDisambiguationView.body.getter@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AppDisambiguationView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - v11;
  if (*a1)
  {
    id v13 = *a1;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter())
    {
      uint64_t v14 = type metadata accessor for SashStandardView();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
    }
    else
    {
      if (one-time initialization token for siriAppBundleId != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      SashStandardView.init(_:titleColor:showOnWatch:)();
      uint64_t v15 = type metadata accessor for SashStandardView();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
    }
    uint64_t v16 = *(uint64_t *)((char *)a1 + *(int *)(v4 + 24));
    outlined init with copy of AppDisambiguationView((uint64_t)a1, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppDisambiguationView);
    unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v18 = swift_allocObject();
    outlined init with take of AppDisambiguationView((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
    outlined init with copy of SashStandardView?((uint64_t)v12, (uint64_t)v10);
    outlined init with copy of SashStandardView?((uint64_t)v10, a2);
    uint64_t v19 = (void *)(a2
                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>))
                            + 48));
    void *v19 = v16;
    v19[1] = partial apply for closure #1 in closure #1 in AppDisambiguationView.body.getter;
    v19[2] = v18;
    swift_bridgeObjectRetain_n();
    swift_retain();
    outlined destroy of SashStandardView?((uint64_t)v12);
    swift_release();
    swift_bridgeObjectRelease();
    return outlined destroy of SashStandardView?((uint64_t)v10);
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t outlined init with take of AppDisambiguationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppDisambiguationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in closure #1 in AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a4;
  uint64_t v39 = type metadata accessor for SeparatorStyle();
  uint64_t v6 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for AppDescriptionView();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v12 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x270FA5388](v37);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AppDisambiguationView(a2, (uint64_t)v11 + v9[6], (uint64_t (*)(void))type metadata accessor for AppDescription);
  static Font.Weight.regular.getter();
  uint64_t v18 = v17;
  uint64_t v19 = (char *)v11 + v9[7];
  uint64_t v20 = *MEMORY[0x263F76620];
  uint64_t v21 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  uint64_t v22 = type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v36 = v22;
  *uint64_t v11 = EnvironmentObject.init()();
  v11[1] = v23;
  ActionHandler.init()();
  uint64_t v24 = (char *)v11 + v9[8];
  *(void *)uint64_t v24 = v18;
  v24[8] = 0;
  if (*a3)
  {
    id v25 = *a3;
    dispatch thunk of Context.currentIdiom.getter();
    char v26 = VRXIdiom.isCarPlay.getter();
    long long v27 = (unsigned int *)MEMORY[0x263F76980];
    if ((v26 & 1) == 0) {
      long long v27 = (unsigned int *)MEMORY[0x263F76970];
    }
    uint64_t v28 = v39;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v27, v39);

    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5(&lazy protocol witness table cache variable for type AppDescriptionView and conformance AppDescriptionView, (void (*)(uint64_t))type metadata accessor for AppDescriptionView);
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
    outlined destroy of AppDescriptionView((uint64_t)v11);
    BOOL v29 = v40 == 0;
    uint64_t v30 = EnvironmentObject.init()();
    uint64_t v32 = v31;
    uint64_t v33 = v38;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v38);
    uint64_t v34 = &v16[*(int *)(v37 + 36)];
    *(void *)uint64_t v34 = v30;
    *((void *)v34 + 1) = v32;
    v34[16] = v29;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
    return outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>((uint64_t)v16, v41);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void closure #2 in AppDisambiguationView.body.getter(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    type metadata accessor for AppDisambiguationView();
    id v2 = v1;
    dispatch thunk of Context.informHostListItemCount(_:)();
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t associated type witness table accessor for View.Body : View in AppDisambiguationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance AppDisambiguationView@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AppDisambiguationView(v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppDisambiguationView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v5, v10 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>);
  ComponentStack.init(content:)();
  outlined init with copy of AppDisambiguationView(v16[1], (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AppDisambiguationView);
  uint64_t v11 = swift_allocObject();
  outlined init with take of AppDisambiguationView((uint64_t)v5, v11 + v9);
  uint64_t v13 = v17;
  uint64_t v12 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v18, v8, v17);
  uint64_t v14 = (void *)(v12
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier>)
                          + 36));
  *uint64_t v14 = partial apply for closure #2 in AppDisambiguationView.body.getter;
  v14[1] = v11;
  v14[2] = 0;
  v14[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v13);
}

char *initializeBufferWithCopyOfBuffer for AppDisambiguationView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (char **)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *(void *)uint64_t v15 = *v16;
    *((void *)v15 + 1) = v17;
    *((void *)v15 + 2) = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for AppDisambiguationView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppDisambiguationView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  long long v15[2] = v16[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (void *)(a2 + v13);
  *(void *)(a1 + v13) = *v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 8) = v15[1];
  *(void *)(v14 + 16) = v15[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AppDisambiguationView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((void *)v11 + 2) = *((void *)v12 + 2);
  return a1;
}

uint64_t assignWithTake for AppDisambiguationView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (void *)((char *)a2 + v11);
  *(void *)(a1 + v11) = *v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = v13[2];
  *(void *)(v12 + 8) = v13[1];
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591AD430);
}

uint64_t sub_2591AD430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591AD508);
}

uint64_t sub_2591AD508(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for AppDisambiguationView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<TupleView<(SashStandardView?, ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppDisambiguationView() - 8);
  uint64_t v4 = (id *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  return closure #1 in AppDisambiguationView.body.getter(v4, a1);
}

void partial apply for closure #2 in AppDisambiguationView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppDisambiguationView() - 8);
  uint64_t v2 = (void **)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  closure #2 in AppDisambiguationView.body.getter(v2);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = (int *)(type metadata accessor for AppDisambiguationView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AppDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for AppDisambiguationView() - 8);
  uint64_t v8 = (id *)(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  return closure #1 in closure #1 in AppDisambiguationView.body.getter(a1, a2, v8, a3);
}

uint64_t outlined init with copy of SashStandardView?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SashStandardView?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of AppDisambiguationView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t key path setter for YesNoConfirmationView.actionHandler : YesNoConfirmationView(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v9 - v6);
  outlined init with copy of StandardActionHandler?((uint64_t)v7, (uint64_t)v5);
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t YesNoConfirmationView.actionHandler.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  outlined init with copy of StandardActionHandler?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  ActionHandler.wrappedValue.setter();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(a1, &demangling cache variable for type metadata for StandardActionHandler?);
}

void (*YesNoConfirmationView.actionHandler.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ActionHandler.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t YesNoConfirmationView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for YesNoConfirmationView();
  return _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_0(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
}

uint64_t type metadata accessor for YesNoConfirmationView()
{
  uint64_t result = type metadata singleton initialization cache for YesNoConfirmationView;
  if (!type metadata singleton initialization cache for YesNoConfirmationView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t YesNoConfirmationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ActionHandler.init()();
  uint64_t v4 = type metadata accessor for YesNoConfirmationView();
  return outlined init with take of YesNoConfirmationModel(a1, a2 + *(int *)(v4 + 20), (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
}

uint64_t YesNoConfirmationView.body.getter()
{
  uint64_t v1 = type metadata accessor for YesNoConfirmationView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_0(v0, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of YesNoConfirmationModel((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  type metadata accessor for BinaryButtonView();
  lazy protocol witness table accessor for type BinaryButtonView and conformance BinaryButtonView();
  return ComponentStack.init(content:)();
}

uint64_t closure #1 in YesNoConfirmationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = type metadata accessor for YesNoConfirmationView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = YesNoConfirmationView.yesButton.getter();
  uint64_t v11 = MEMORY[0x263F774A8];
  v16[10] = MEMORY[0x263F1B728];
  v16[11] = MEMORY[0x263F774A8];
  v16[7] = v10;
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_0(a1, (uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  outlined init with take of YesNoConfirmationModel((uint64_t)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  uint64_t v14 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16[6] = v11;
  v16[5] = MEMORY[0x263F1B728];
  uint64_t v16[2] = v14;
  return BinaryButtonView.init(primaryButton:secondaryButton:)();
}

uint64_t _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of YesNoConfirmationModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t lazy protocol witness table accessor for type BinaryButtonView and conformance BinaryButtonView()
{
  unint64_t result = lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView;
  if (!lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView)
  {
    type metadata accessor for BinaryButtonView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in YesNoConfirmationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t YesNoConfirmationView.yesButton.getter()
{
  uint64_t v24 = type metadata accessor for ButtonItemButtonStyle.Role();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for YesNoConfirmationView();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonRole(_:)>>.0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_0(v0, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  unint64_t v14 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v15 = swift_allocObject();
  outlined init with take of YesNoConfirmationModel((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  uint64_t v16 = v24;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F774E8], v24);
  uint64_t v17 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  View.buttonRole(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v25 = v6;
  uint64_t v26 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v22;
  uint64_t v19 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v18);
  return v19;
}

uint64_t closure #1 in YesNoConfirmationView.yesButton.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionHandler.wrappedValue.getter();
  uint64_t v9 = type metadata accessor for StandardActionHandler();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2591FFD20;
  uint64_t v13 = type metadata accessor for Command();
  uint64_t v14 = MEMORY[0x263F771C8];
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
  type metadata accessor for YesNoConfirmationView();
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v13);
  ActionProperty.init(_:)();
  uint64_t v16 = type metadata accessor for ActionProperty();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 0, 1, v16);
  uint64_t v17 = type metadata accessor for InteractionType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  StandardActionHandler.perform(_:interactionType:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v2, &demangling cache variable for type metadata for InteractionType?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for ActionProperty?);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
}

uint64_t closure #1 in YesNoConfirmationView.noButton.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ActionHandler.wrappedValue.getter();
  uint64_t v9 = type metadata accessor for StandardActionHandler();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2591FFD20;
  uint64_t v13 = type metadata accessor for Command();
  uint64_t v14 = MEMORY[0x263F771C8];
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
  type metadata accessor for YesNoConfirmationView();
  type metadata accessor for YesNoConfirmationModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v13);
  ActionProperty.init(_:)();
  uint64_t v16 = type metadata accessor for ActionProperty();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 0, 1, v16);
  uint64_t v17 = type metadata accessor for InteractionType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  StandardActionHandler.perform(_:interactionType:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v2, &demangling cache variable for type metadata for InteractionType?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for ActionProperty?);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
}

uint64_t protocol witness for View.body.getter in conformance YesNoConfirmationView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_0(v1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of YesNoConfirmationModel((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  type metadata accessor for BinaryButtonView();
  lazy protocol witness table accessor for type BinaryButtonView and conformance BinaryButtonView();
  return ComponentStack.init(content:)();
}

uint64_t sub_2591AEE84()
{
  return ActionHandler.wrappedValue.getter();
}

uint64_t *initializeBufferWithCopyOfBuffer for YesNoConfirmationView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActionHandler();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v24(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for YesNoConfirmationModel();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v24(&v9[v12[6]], &v10[v12[6]], v11);
    v17(&v9[v12[7]], &v10[v12[7]], v16);
    uint64_t v18 = v12[8];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for YesNoConfirmationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v9 = v5 + v8[5];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v7(v5 + v8[6], v6);
  v11(v5 + v8[7], v10);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v22(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v22(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v21(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v21(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v18(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v18(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  *(_OWORD *)(v8 + v11[8]) = *(_OWORD *)(v9 + v11[8]);
  return a1;
}

uint64_t assignWithTake for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v23(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v23(v8 + v11[6], v9 + v11[6], v10);
  v16(v8 + v11[7], v9 + v11[7], v15);
  uint64_t v17 = v11[8];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (uint64_t *)(v9 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591AF874);
}

uint64_t sub_2591AF874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for YesNoConfirmationModel();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for YesNoConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591AF980);
}

uint64_t sub_2591AF980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for YesNoConfirmationModel();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata completion function for YesNoConfirmationView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for YesNoConfirmationModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2591AFB4C()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<BinaryButtonView> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<BinaryButtonView>);
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for YesNoConfirmationView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in YesNoConfirmationView.body.getter(v4, a1);
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.noButton.getter()
{
  return partial apply for closure #1 in YesNoConfirmationView.noButton.getter((uint64_t (*)(uint64_t))closure #1 in YesNoConfirmationView.noButton.getter);
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = (int *)(type metadata accessor for YesNoConfirmationView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = v2 + v1[7];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v8 = v4 + v7[5];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v6(v4 + v7[6], v5);
  v10(v4 + v7[7], v9);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.yesButton.getter()
{
  return partial apply for closure #1 in YesNoConfirmationView.noButton.getter((uint64_t (*)(uint64_t))closure #1 in YesNoConfirmationView.yesButton.getter);
}

uint64_t partial apply for closure #1 in YesNoConfirmationView.noButton.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for YesNoConfirmationView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t StackedButtonsView.model.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StackedButtonsView()
{
  uint64_t result = type metadata singleton initialization cache for StackedButtonsView;
  if (!type metadata singleton initialization cache for StackedButtonsView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StackedButtonsView.init(model:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  ActionHandler.init()();
  uint64_t result = type metadata accessor for StackedButtonsView();
  uint64_t v7 = a3 + *(int *)(result + 20);
  *(void *)uint64_t v7 = a1;
  *(unsigned char *)(v7 + 8) = a2;
  return result;
}

uint64_t StackedButtonsView.body.getter()
{
  uint64_t v1 = type metadata accessor for StackedButtonsView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  outlined init with copy of StackedButtonsView(v0, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of StackedButtonsView((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ButtonConfigurationModel], UUID, Button<Text>>);
  lazy protocol witness table accessor for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>();
  return ComponentStack.init(content:)();
}

uint64_t closure #1 in StackedButtonsView.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StackedButtonsView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  v8[1] = *(void *)(a1 + *(int *)(MEMORY[0x270FA5388](v2 - 8) + 28));
  outlined init with copy of StackedButtonsView(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  outlined init with take of StackedButtonsView((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ButtonConfigurationModel]);
  type metadata accessor for UUID();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type [ButtonConfigurationModel] and conformance [A], &demangling cache variable for type metadata for [ButtonConfigurationModel]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  lazy protocol witness table accessor for type ButtonConfigurationModel and conformance ButtonConfigurationModel();
  return ForEach<>.init(_:content:)();
}

unint64_t lazy protocol witness table accessor for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[ButtonConfigurationModel], UUID, Button<Text>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in StackedButtonsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in StackedButtonsView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v16[1] = a3;
  uint64_t v5 = type metadata accessor for StackedButtonsView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = type metadata accessor for ButtonConfigurationModel();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = a1[1];
  uint64_t v16[2] = *a1;
  v16[3] = v11;
  outlined init with copy of StackedButtonsView((uint64_t)a1, (uint64_t)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ButtonConfigurationModel);
  outlined init with copy of StackedButtonsView(a2, (uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + *(unsigned __int8 *)(v6 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  outlined init with take of StackedButtonsView((uint64_t)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v12, (uint64_t (*)(void))type metadata accessor for ButtonConfigurationModel);
  outlined init with take of StackedButtonsView((uint64_t)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  return Button<>.init<A>(_:action:)();
}

uint64_t closure #1 in closure #1 in closure #1 in StackedButtonsView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v62 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActionProperty();
  uint64_t v61 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ButtonConfigurationModel();
  MEMORY[0x270FA5388](v59);
  uint64_t v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of StackedButtonsView(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ButtonConfigurationModel);
  uint64_t v58 = v17;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v60 = v13;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v54 = a1;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v55 = a2;
    uint64_t v24 = v23;
    uint64_t v64 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v56 = v11;
    uint64_t v25 = *v15;
    unint64_t v26 = v15[1];
    swift_bridgeObjectRetain();
    uint64_t v63 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v11 = v56;
    swift_bridgeObjectRelease();
    outlined destroy of ButtonConfigurationModel((uint64_t)v15);
    _os_log_impl(&dword_25915D000, v18, v19, "#StackedButtonsView Tapped button %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2D96D0](v24, -1, -1);
    long long v27 = v22;
    a1 = v54;
    MEMORY[0x25A2D96D0](v27, -1, -1);
  }
  else
  {
    outlined destroy of ButtonConfigurationModel((uint64_t)v15);
  }

  int v28 = *(unsigned __int8 *)(a1 + *(int *)(v59 + 32));
  BOOL v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  if (v28 == 1)
  {
    if (v31)
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_25915D000, v29, v30, "#StackedButtonsView running direct invocation", v32, 2u);
      MEMORY[0x25A2D96D0](v32, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_2591FFD20;
    uint64_t v34 = type metadata accessor for Command();
    uint64_t v35 = MEMORY[0x263F771C8];
    *(void *)(v33 + 56) = v34;
    *(void *)(v33 + 64) = v35;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v33 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
    *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
    uint64_t v37 = (unsigned int *)MEMORY[0x263F771A0];
  }
  else
  {
    if (v31)
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_25915D000, v29, v30, "#StackedButtonsView running ace command", v38, 2u);
      MEMORY[0x25A2D96D0](v38, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_2591FFD20;
    uint64_t v34 = type metadata accessor for Command();
    uint64_t v40 = MEMORY[0x263F771C8];
    *(void *)(v39 + 56) = v34;
    *(void *)(v39 + 64) = v40;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v39 + 32));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
    *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
    uint64_t v37 = (unsigned int *)MEMORY[0x263F77168];
  }
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v34 - 8) + 104))(boxed_opaque_existential_1, *v37, v34);
  uint64_t v41 = v60;
  ActionProperty.init(_:)();
  uint64_t v42 = v62;
  ActionHandler.wrappedValue.getter();
  uint64_t v43 = type metadata accessor for StandardActionHandler();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v41, v11);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v62, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v46 = v61;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v8, v41, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v8, 0, 1, v11);
    uint64_t v47 = v41;
    uint64_t v48 = *MEMORY[0x263F77618];
    uint64_t v49 = type metadata accessor for InteractionType();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v57, v48, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
    uint64_t v52 = v62;
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v51, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v52, v43);
  }
}

uint64_t protocol witness for View.body.getter in conformance StackedButtonsView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  outlined init with copy of StackedButtonsView(v1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of StackedButtonsView((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, (uint64_t (*)(void))type metadata accessor for StackedButtonsView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ButtonConfigurationModel], UUID, Button<Text>>);
  lazy protocol witness table accessor for type ForEach<[ButtonConfigurationModel], UUID, Button<Text>> and conformance <> ForEach<A, B, C>();
  return ComponentStack.init(content:)();
}

uint64_t *initializeBufferWithCopyOfBuffer for StackedButtonsView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActionHandler();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    unsigned char v9[8] = v10[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StackedButtonsView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t initializeWithTake for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591B119C);
}

uint64_t sub_2591B119C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591B1270);
}

uint64_t sub_2591B1270(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for StackedButtonsView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2591B13C0()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<ForEach<[ButtonConfigurationModel], UUID, Button<Text>>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<ForEach<[ButtonConfigurationModel], UUID, Button<Text>>>);
}

uint64_t partial apply for closure #1 in StackedButtonsView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for StackedButtonsView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return closure #1 in StackedButtonsView.body.getter(v2);
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in StackedButtonsView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StackedButtonsView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return closure #1 in closure #1 in StackedButtonsView.body.getter(a1, v6, a2);
}

unint64_t lazy protocol witness table accessor for type ButtonConfigurationModel and conformance ButtonConfigurationModel()
{
  unint64_t result = lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel;
  if (!lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel)
  {
    type metadata accessor for ButtonConfigurationModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ButtonConfigurationModel and conformance ButtonConfigurationModel);
  }
  return result;
}

uint64_t outlined init with copy of StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2591B16A4()
{
  uint64_t v1 = (int *)(type metadata accessor for ButtonConfigurationModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StackedButtonsView() - 8) + 80);
  unint64_t v5 = (v2 + v3 + v4) & ~v4;
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[7];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v6 + v1[9];
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = type metadata accessor for ActionHandler();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v0 + v5, v13);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t outlined init with take of StackedButtonsView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in StackedButtonsView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for ButtonConfigurationModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for StackedButtonsView() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return closure #1 in closure #1 in closure #1 in StackedButtonsView.body.getter(v0 + v2, v5);
}

uint64_t ShowPlayVoicemailListView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowPlayVoicemailListView();
  return outlined init with copy of PlayVoicemailModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for PlayVoicemailModel);
}

uint64_t type metadata accessor for ShowPlayVoicemailListView()
{
  uint64_t result = type metadata singleton initialization cache for ShowPlayVoicemailListView;
  if (!type metadata singleton initialization cache for ShowPlayVoicemailListView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShowPlayVoicemailListView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_6((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for ShowPlayVoicemailListView();
  ActionHandler.init()();
  return outlined init with take of PlayVoicemailModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(void))type metadata accessor for PlayVoicemailModel);
}

uint64_t ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for RoundedCornerStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UnevenRoundedRectangle();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  unsigned char v12[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  closure #1 in ShowPlayVoicemailListView.body.getter(v2, (uint64_t)&v12[*(int *)(v17 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, (uint64_t)v16, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  v16[*(int *)(v14 + 44)] = v2;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
  if (one-time initialization token for bottomCornerRadius != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F19858], v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  *(void *)uint64_t v9 = v18;
  *((void *)v9 + 1) = v19;
  *((void *)v9 + 2) = v20;
  *((void *)v9 + 3) = v21;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
  uint64_t v23 = v26;
  outlined init with copy of PlayVoicemailModel((uint64_t)v9, v26 + *(int *)(v22 + 36), MEMORY[0x263F19EF0]);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, v23, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  _s7SwiftUI22UnevenRoundedRectangleVWOhTm_0((uint64_t)v9, MEMORY[0x263F19EF0]);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
}

uint64_t closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v37 = a2;
  uint64_t v35 = type metadata accessor for ListBottomView() - 8;
  uint64_t v3 = MEMORY[0x270FA5388](v35);
  uint64_t v36 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v32 - v5);
  uint64_t v7 = type metadata accessor for ShowPlayVoicemailListView();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v32 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v33 = (uint64_t)&v32 - v18;
  outlined init with copy of PlayVoicemailModel(a1, (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailListView);
  unint64_t v19 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v20 = swift_allocObject();
  outlined init with take of PlayVoicemailModel((uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailListView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>);
  ComponentStack.init(content:)();
  LOBYTE(v8) = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v12, v9);
  v17[*(int *)(v14 + 44)] = v8;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v21 = v33;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v17, v33, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  uint64_t v22 = v38;
  uint64_t v23 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v24 = CodableAceObject.wrappedValue.getter();
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_6((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *uint64_t v6 = EnvironmentObject.init()();
  v6[1] = v25;
  uint64_t v26 = v35;
  ActionHandler.init()();
  long long v27 = (uint64_t *)((char *)v6 + *(int *)(v26 + 32));
  *long long v27 = v22;
  v27[1] = v23;
  *(uint64_t *)((char *)v6 + *(int *)(v26 + 36)) = v24;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v21, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v28 = v36;
  outlined init with copy of PlayVoicemailModel((uint64_t)v6, v36, (uint64_t (*)(void))type metadata accessor for ListBottomView);
  uint64_t v29 = v37;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v17, v37, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView));
  outlined init with copy of PlayVoicemailModel(v28, v29 + *(int *)(v30 + 48), (uint64_t (*)(void))type metadata accessor for ListBottomView);
  _s7SwiftUI22UnevenRoundedRectangleVWOhTm_0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ListBottomView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v21, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  _s7SwiftUI22UnevenRoundedRectangleVWOhTm_0(v28, (uint64_t (*)(void))type metadata accessor for ListBottomView);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>);
}

uint64_t associated type witness table accessor for View.Body : View in ShowPlayVoicemailListView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for ComponentStackBottomSpacing();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v64 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ShowPlayVoicemailListView();
  uint64_t v6 = v5 - 8;
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[(offset: Int, element: SingleVoicemailModel)], Int, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>);
  uint64_t v63 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0);
  uint64_t v72 = *(void *)(v62 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v62);
  uint64_t v59 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v60 = (char *)&v52 - v11;
  uint64_t v12 = type metadata accessor for SeparatorStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  uint64_t v16 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v68 = (char *)&v52 - v21;
  uint64_t v52 = a1 + *(int *)(v6 + 32);
  type metadata accessor for PlayVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  unint64_t v22 = lazy protocol witness table accessor for type ListHeaderView and conformance ListHeaderView();
  View.componentSpacing(top:bottom:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F76970], v12);
  uint64_t v73 = &type metadata for ListHeaderView;
  unint64_t v74 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v70;
  uint64_t v24 = v53;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v24);
  uint64_t v26 = v68;
  uint64_t v25 = v69;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v23, v71);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  Loggable.wrappedValue.getter();
  long long v27 = (ValueMetadata *)specialized _copySequenceToContiguousArray<A>(_:)((uint64_t)v73);
  swift_bridgeObjectRelease();
  uint64_t v73 = v27;
  swift_getKeyPath();
  uint64_t v28 = v55;
  outlined init with copy of PlayVoicemailModel(v54, v55, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailListView);
  unint64_t v29 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v30 = swift_allocObject();
  outlined init with take of PlayVoicemailModel(v28, v30 + v29, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailListView);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = partial apply for closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter;
  *(void *)(v31 + 24) = v30;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: SingleVoicemailModel)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type [(offset: Int, element: SingleVoicemailModel)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: SingleVoicemailModel)]);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  uint64_t v32 = v58;
  ForEach<>.init(_:id:content:)();
  uint64_t v34 = v64;
  uint64_t v33 = v65;
  uint64_t v35 = v66;
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, *MEMORY[0x263F778E8], v66);
  lazy protocol witness table accessor for type ForEach<[(offset: Int, element: SingleVoicemailModel)], Int, ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>> and conformance <> ForEach<A, B, C>();
  uint64_t v36 = v59;
  uint64_t v37 = v61;
  View.lastComponentBottomSpacing(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v37);
  uint64_t v38 = v72;
  uint64_t v39 = v60;
  uint64_t v40 = v36;
  uint64_t v41 = v62;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v60, v36, v62);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v43 = v70;
  uint64_t v44 = v26;
  uint64_t v45 = v71;
  v42(v70, v44, v71);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v46(v40, v39, v41);
  uint64_t v47 = v67;
  v42(v67, v43, v45);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0));
  v46(&v47[*(int *)(v48 + 48)], v40, v41);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v72 + 8);
  v49(v39, v41);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v69 + 8);
  v50(v68, v45);
  v49(v40, v41);
  return ((uint64_t (*)(char *, uint64_t))v50)(v43, v45);
}

uint64_t closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v34 = a4;
  v30[0] = type metadata accessor for SeparatorStyle();
  uint64_t v6 = *(void *)(v30[0] - 8);
  MEMORY[0x270FA5388](v30[0]);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x270FA5388](v31);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of PlayVoicemailModel(a2, (uint64_t)v11 + *(int *)(v9 + 24), (uint64_t (*)(void))type metadata accessor for SingleVoicemailModel);
  uint64_t v17 = type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_6((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  v30[1] = v17;
  *uint64_t v11 = EnvironmentObject.init()();
  v11[1] = v18;
  ActionHandler.init()();
  if (*a3)
  {
    id v19 = *a3;
    dispatch thunk of Context.currentIdiom.getter();
    char v20 = VRXIdiom.isCarPlay.getter();
    uint64_t v21 = (unsigned int *)MEMORY[0x263F76980];
    if ((v20 & 1) == 0) {
      uint64_t v21 = (unsigned int *)MEMORY[0x263F76970];
    }
    uint64_t v22 = v30[0];
    (*(void (**)(char *, void, void))(v6 + 104))(v8, *v21, v30[0]);

    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_6(&lazy protocol witness table cache variable for type ShowPlayVoicemailSingleItemView and conformance ShowPlayVoicemailSingleItemView, (void (*)(uint64_t))type metadata accessor for ShowPlayVoicemailSingleItemView);
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
    _s7SwiftUI22UnevenRoundedRectangleVWOhTm_0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailSingleItemView);
    BOOL v23 = v33 == 0;
    uint64_t v24 = EnvironmentObject.init()();
    uint64_t v26 = v25;
    uint64_t v27 = v32;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v32);
    uint64_t v28 = &v16[*(int *)(v31 + 36)];
    *(void *)uint64_t v28 = v24;
    *((void *)v28 + 1) = v26;
    v28[16] = v23;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
    return outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v16, v34, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ShowPlayVoicemailListView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14);
    uint64_t v18 = *(void *)(v16 + 8);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    id v19 = (int *)type metadata accessor for PlayVoicemailModel();
    uint64_t v20 = v19[5];
    uint64_t v21 = &v15[v20];
    uint64_t v22 = v16 + v20;
    swift_bridgeObjectRetain();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = v19[6];
    uint64_t v25 = &v15[v24];
    uint64_t v26 = v16 + v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
    v28(v25, v26, v27);
    v28(&v15[v19[7]], v16 + v19[7], v27);
    uint64_t v29 = v19[8];
    uint64_t v30 = &v15[v29];
    uint64_t v31 = v16 + v29;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v7;
}

uint64_t destroy for ShowPlayVoicemailListView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for PlayVoicemailModel();
  uint64_t v8 = &v6[v7[5]];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = &v6[v7[6]];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(&v6[v7[7]], v11);
  uint64_t v13 = &v6[v7[8]];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8);
  return v15(v13, v14);
}

void *initializeWithCopy for ShowPlayVoicemailListView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *((void *)v15 + 1) = v17;
  uint64_t v18 = (int *)type metadata accessor for PlayVoicemailModel();
  uint64_t v19 = v18[5];
  uint64_t v20 = &v15[v19];
  uint64_t v21 = v16 + v19;
  swift_bridgeObjectRetain();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = v18[6];
  uint64_t v24 = &v15[v23];
  uint64_t v25 = v16 + v23;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v27(v24, v25, v26);
  v27(&v15[v18[7]], v16 + v18[7], v26);
  uint64_t v28 = v18[8];
  uint64_t v29 = &v15[v28];
  uint64_t v30 = v16 + v28;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t assignWithCopy for ShowPlayVoicemailListView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *((void *)v14 + 1) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for PlayVoicemailModel();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v14[v17];
  uint64_t v19 = v15 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = v16[6];
  uint64_t v22 = &v14[v21];
  uint64_t v23 = v15 + v21;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(&v14[v16[7]], v15 + v16[7], v24);
  uint64_t v26 = v16[8];
  uint64_t v27 = &v14[v26];
  uint64_t v28 = v15 + v26;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_OWORD *initializeWithTake for ShowPlayVoicemailListView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for PlayVoicemailModel();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = v13[6];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v19, v20, v21);
  v22(&v11[v13[7]], &v12[v13[7]], v21);
  uint64_t v23 = v13[8];
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for ShowPlayVoicemailListView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)((char *)a2 + v11);
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for PlayVoicemailModel();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = v15[6];
  uint64_t v21 = &v12[v20];
  uint64_t v22 = &v13[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v24(&v12[v15[7]], &v13[v15[7]], v23);
  uint64_t v25 = v15[8];
  uint64_t v26 = &v12[v25];
  uint64_t v27 = &v13[v25];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowPlayVoicemailListView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591B3AD4);
}

uint64_t sub_2591B3AD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for PlayVoicemailModel();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShowPlayVoicemailListView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591B3C20);
}

void *sub_2591B3C20(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for PlayVoicemailModel();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for ShowPlayVoicemailListView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PlayVoicemailModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _ContainerShapeModifier<UnevenRoundedRectangle> and conformance _ContainerShapeModifier<A>, &demangling cache variable for type metadata for _ContainerShapeModifier<UnevenRoundedRectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>, _ContainerShapeModifier<UnevenRoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<ComponentStack<TupleView<(<<opaque return type of View.separators(_:isOverride:)>>.0, <<opaque return type of View.lastComponentBottomSpacing(_:)>>.0)>>, _BackgroundStyleModifier<BackgroundStyle>>, ListBottomView)>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShowPlayVoicemailListView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter(v4, a1);
}

size_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SingleCallRecordModel));
  uint64_t v2 = MEMORY[0x270FA5388](v43);
  uint64_t v48 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v47 = (void *)((char *)v41 - v5);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v49 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v46 = v10;
  v41[0] = a1;
  if (v10)
  {
    uint64_t v42 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v42;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for SingleCallRecordModel() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v44 = v7;
    uint64_t v45 = v17;
    v41[1] = v9 | 7;
    uint64_t v18 = v11;
    uint64_t v19 = v43;
    while (1)
    {
      uint64_t v21 = (uint64_t)&v48[*(int *)(v19 + 48)];
      outlined init with copy of PlayVoicemailModel(v16, v21, (uint64_t (*)(void))type metadata accessor for SingleCallRecordModel);
      uint64_t v22 = (uint64_t)v47;
      uint64_t v23 = (uint64_t)v47 + *(int *)(v19 + 48);
      void *v47 = v13;
      outlined init with take of PlayVoicemailModel(v21, v23, (uint64_t (*)(void))type metadata accessor for SingleCallRecordModel);
      size_t result = outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v22, (uint64_t)v7, &demangling cache variable for type metadata for (offset: Int, element: SingleCallRecordModel));
      if (v14)
      {
        uint64_t v11 = v18;
        BOOL v20 = __OFSUB__(v14--, 1);
        if (v20) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v18[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SingleCallRecordModel)>);
        uint64_t v28 = *(void *)(v49 + 72);
        uint64_t v29 = v42;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        v11[2] = v27;
        v11[3] = 2 * (v30 / v28);
        uint64_t v33 = (char *)v11 + v29;
        uint64_t v34 = v18[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v18[2])
        {
          if (v11 < v18 || v33 >= (char *)v18 + v42 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v18[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        uint64_t v19 = v43;
        BOOL v20 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v20)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      uint64_t v7 = v44;
      outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v44, v12, &demangling cache variable for type metadata for (offset: Int, element: SingleCallRecordModel));
      v12 += *(void *)(v49 + 72);
      v16 += v45;
      uint64_t v18 = v11;
      if (v46 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v20 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v20) {
      goto LABEL_36;
    }
    v11[2] = v40;
  }
  return (size_t)v11;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t result;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;

  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SingleVoicemailModel));
  uint64_t v2 = MEMORY[0x270FA5388](v43);
  uint64_t v48 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v47 = (void *)((char *)v41 - v5);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v49 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v46 = v10;
  v41[0] = a1;
  if (v10)
  {
    uint64_t v42 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v42;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for SingleVoicemailModel() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v44 = v7;
    uint64_t v45 = v17;
    v41[1] = v9 | 7;
    uint64_t v18 = v11;
    uint64_t v19 = v43;
    while (1)
    {
      uint64_t v21 = (uint64_t)&v48[*(int *)(v19 + 48)];
      outlined init with copy of PlayVoicemailModel(v16, v21, (uint64_t (*)(void))type metadata accessor for SingleVoicemailModel);
      uint64_t v22 = (uint64_t)v47;
      uint64_t v23 = (uint64_t)v47 + *(int *)(v19 + 48);
      void *v47 = v13;
      outlined init with take of PlayVoicemailModel(v21, v23, (uint64_t (*)(void))type metadata accessor for SingleVoicemailModel);
      size_t result = outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v22, (uint64_t)v7, &demangling cache variable for type metadata for (offset: Int, element: SingleVoicemailModel));
      if (v14)
      {
        uint64_t v11 = v18;
        BOOL v20 = __OFSUB__(v14--, 1);
        if (v20) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v18[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: SingleVoicemailModel)>);
        uint64_t v28 = *(void *)(v49 + 72);
        uint64_t v29 = v42;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        v11[2] = v27;
        v11[3] = 2 * (v30 / v28);
        uint64_t v33 = (char *)v11 + v29;
        uint64_t v34 = v18[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v18[2])
        {
          if (v11 < v18 || v33 >= (char *)v18 + v42 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v18[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        uint64_t v19 = v43;
        BOOL v20 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v20)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      uint64_t v7 = v44;
      outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v44, v12, &demangling cache variable for type metadata for (offset: Int, element: SingleVoicemailModel));
      v12 += *(void *)(v49 + 72);
      v16 += v45;
      uint64_t v18 = v11;
      if (v46 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v20 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v20) {
      goto LABEL_36;
    }
    v11[2] = v40;
  }
  return (size_t)v11;
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = (int *)(type metadata accessor for ShowPlayVoicemailListView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)v2 + v1[8];
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for PlayVoicemailModel();
  uint64_t v7 = &v5[v6[5]];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<[SingleVoicemailModel]>);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = &v5[v6[6]];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(&v5[v6[7]], v10);
  uint64_t v12 = &v5[v6[8]];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseCommand>);
  (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for ShowPlayVoicemailListView() - 8);
  uint64_t v8 = (id *)(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  return closure #1 in closure #1 in closure #1 in ShowPlayVoicemailListView.body.getter(a1, a2, v8, a3);
}

uint64_t sub_2591B49D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed SingleVoicemailModel) -> (@out ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>)(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: SingleVoicemailModel));
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_6(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s7SwiftUI22UnevenRoundedRectangleVWOhTm_0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined init with copy of PlayVoicemailModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of PlayVoicemailModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *PhoneComponentInfo.name.unsafeMutableAddressor()
{
  return &static PhoneComponentInfo.name;
}

unint64_t static PhoneComponentInfo.name.getter()
{
  return 0xD000000000000011;
}

void one-time initialization function for version()
{
  static PhoneComponentInfo.version = 0x656E6F6850;
  *(void *)algn_26A37C3E8 = 0xE500000000000000;
}

uint64_t *PhoneComponentInfo.version.unsafeMutableAddressor()
{
  if (one-time initialization token for version != -1) {
    swift_once();
  }
  return &static PhoneComponentInfo.version;
}

uint64_t static PhoneComponentInfo.version.getter()
{
  if (one-time initialization token for version != -1) {
    swift_once();
  }
  uint64_t v0 = static PhoneComponentInfo.version;
  swift_bridgeObjectRetain();
  return v0;
}

void *PhoneComponentInfo.id.unsafeMutableAddressor()
{
  return &static PhoneComponentInfo.id;
}

uint64_t static PhoneComponentInfo.id.getter()
{
  return 1071806;
}

void closure #1 in static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), const char *a4)
{
  oslog = Logger.logObject.getter();
  os_log_type_t v6 = a3();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_25915D000, oslog, v6, a4, v7, 8u);
    MEMORY[0x25A2D96D0](v7, -1, -1);
  }
  else
  {
  }
}

void specialized static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  if (AFIsInternalInstall() && AFProcessIsAssistantService())
  {
    type metadata accessor for AutoBugCaptureManager();
    swift_allocObject();
    AutoBugCaptureManager.init(domain:sessionDuration:)();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v10);
    unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v14 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    dispatch thunk of AutoBugCaptureManager.generateSnapshot(errorType:errorSubType:subTypeContext:completion:)();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_t v26 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v28 = v17;
      *(_DWORD *)uint64_t v16 = 136315650;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, a2, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2080;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, a4, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 22) = 2080;
      id v18 = objc_msgSend(self, sel_processInfo);
      id v19 = objc_msgSend(v18, sel_processName);

      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      uint64_t v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25915D000, v26, v15, "#FileRadarUtils autoBugCapture: not an internal build. Skipping filing radar for \"%s\"/\"%s\", process=%s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v17, -1, -1);
      MEMORY[0x25A2D96D0](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

void specialized static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  unint64_t v45 = a2;
  os_log_t v46 = a7;
  uint64_t v39 = a5;
  uint64_t v44 = a4;
  uint64_t v40 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v40);
  uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RadarFilingExtras?);
  MEMORY[0x270FA5388](v13 - 8);
  os_log_type_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RadarFilingExtras();
  uint64_t v43 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTRComponentInfo();
  uint64_t v41 = *(void *)(v19 - 8);
  uint64_t v42 = v19;
  MEMORY[0x270FA5388](v19);
  unint64_t v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AFIsInternalInstall() && AFProcessIsAssistantService())
  {
    v38[2] = a3;
    v38[3] = a1;
    type metadata accessor for TapToRadarManager();
    swift_allocObject();
    v38[1] = TapToRadarManager.init()();
    if (one-time initialization token for version != -1) {
      swift_once();
    }
    uint64_t v22 = static PhoneComponentInfo.version;
    uint64_t v23 = *(void *)algn_26A37C3E8;
    swift_bridgeObjectRetain();
    MEMORY[0x25A2D7BB0](0xD000000000000011, 0x80000002592054D0, v22, v23, 1071806);
    swift_bridgeObjectRetain();
    MEMORY[0x25A2D7BD0](MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], 0, v39, a6);
    uint64_t v24 = v43;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v15, v18, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v16);
    uint64_t v25 = v40;
    (*(void (**)(char *, os_log_t, uint64_t))(v10 + 16))((char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v40);
    unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v27 + v26, v12, v25);
    dispatch thunk of TapToRadarManager.createProblem(errStatus:userDefaultSuiteName:radarComponentInfo:title:description:radarFilingExtras:completion:)();
    swift_release();
    swift_release();
    outlined destroy of RadarFilingExtras?((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v16);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v42);
  }
  else
  {
    unint64_t v28 = v45;
    swift_bridgeObjectRetain_n();
    os_log_t v46 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v48 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v28, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      id v32 = objc_msgSend(self, sel_processInfo);
      id v33 = objc_msgSend(v32, sel_processName);

      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v35;

      uint64_t v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25915D000, v46, v29, "#FileRadarUtils tapToRadar: not an internal build. Skipping filing radar for \"%s\", process=%s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v31, -1, -1);
      MEMORY[0x25A2D96D0](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      os_log_t v37 = v46;
    }
  }
}

ValueMetadata *type metadata accessor for PhoneComponentInfo()
{
  return &type metadata for PhoneComponentInfo;
}

ValueMetadata *type metadata accessor for FileRadarUtils()
{
  return &type metadata for FileRadarUtils;
}

void partial apply for closure #1 in static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(uint64_t a1)
{
}

uint64_t objectdestroyTm_8()
{
  uint64_t v1 = type metadata accessor for Logger();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void partial apply for closure #1 in static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(uint64_t a1)
{
}

void partial apply for closure #1 in static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(uint64_t a1, uint64_t (*a2)(void), const char *a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for Logger() - 8);
  closure #1 in static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t outlined destroy of RadarFilingExtras?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RadarFilingExtras?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ShowCallHistorySingleItemView.init(model:shouldReactOpenContact:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  int v15 = a2;
  uint64_t v14 = a1;
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a3 = EnvironmentObject.init()();
  a3[1] = v8;
  uint64_t v9 = type metadata accessor for ShowCallHistorySingleItemView();
  ActionHandler.init()();
  uint64_t v16 = 0x4041800000000000;
  uint64_t v10 = *MEMORY[0x263F1A6D0];
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v11(v7, v10, v4);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v16 = 0x4041800000000000;
  v11(v7, v10, v4);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t result = outlined init with take of SingleCallRecordModel(v14, (uint64_t)a3 + *(int *)(v9 + 32), (uint64_t (*)(void))type metadata accessor for SingleCallRecordModel);
  *((unsigned char *)a3 + *(int *)(v9 + 36)) = v15;
  return result;
}

void one-time initialization function for missedCallType()
{
  static ShowCallHistorySingleItemView.missedCallType = 0x44455353494DLL;
  *(void *)algn_26A370F98 = 0xE600000000000000;
}

void one-time initialization function for outgoingCallType()
{
  static ShowCallHistorySingleItemView.outgoingCallType = 0x474E494F4754554FLL;
  *(void *)algn_26A370FA8 = 0xE800000000000000;
}

uint64_t type metadata accessor for ShowCallHistorySingleItemView()
{
  uint64_t result = type metadata singleton initialization cache for ShowCallHistorySingleItemView;
  if (!type metadata singleton initialization cache for ShowCallHistorySingleItemView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double ShowCallHistorySingleItemView.circleWidth.getter()
{
  type metadata accessor for ShowCallHistorySingleItemView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t property wrapper backing initializer of ShowCallHistorySingleItemView.circleWidth(double a1)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  MEMORY[0x270FA5388](v2);
  *(double *)&v6[1] = a1;
  (*(void (**)(char *, void))(v4 + 104))((char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F1A6D0]);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

double ShowCallHistorySingleItemView.circleHeight.getter()
{
  type metadata accessor for ShowCallHistorySingleItemView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t ShowCallHistorySingleItemView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowCallHistorySingleItemView();
  return outlined init with copy of SingleCallRecordModel(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for SingleCallRecordModel);
}

uint64_t ShowCallHistorySingleItemView.shouldReactOpenContact.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ShowCallHistorySingleItemView() + 36));
}

uint64_t ShowCallHistorySingleItemView.body.getter()
{
  uint64_t v1 = type metadata accessor for ShowCallHistorySingleItemView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = type metadata accessor for SimpleItemRichView();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowCallHistorySingleItemView.getSimpleItemRichView()((uint64_t)v7);
  outlined init with copy of SingleCallRecordModel(v0, (uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of SingleCallRecordModel((uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ShowCallHistorySingleItemView.getSimpleItemRichView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  MEMORY[0x270FA5388](v24);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShowCallHistorySingleItemView();
  uint64_t v5 = v1;
  uint64_t v6 = ShowCallHistorySingleItemView.getAvatarView(contactIds:)(*(void *)(v1 + *(int *)(v4 + 32) + 80));
  uint64_t v22 = v1;
  uint64_t v23 = v6;
  uint64_t v7 = ShowCallHistorySingleItemView.displayText.getter();
  uint64_t v58 = MEMORY[0x263F1B728];
  uint64_t v59 = MEMORY[0x263F774A8];
  uint64_t v57 = v7;
  uint64_t v56 = 0;
  long long v54 = 0u;
  long long v55 = 0u;
  uint64_t v8 = static VerticalAlignment.center.getter();
  closure #1 in ShowCallHistorySingleItemView.callDetailView.getter(v5, (uint64_t)&v44);
  uint64_t v10 = v44;
  uint64_t v9 = v45;
  uint64_t v11 = v46;
  uint64_t v12 = v47;
  uint64_t v13 = v48;
  char v14 = v49;
  v21[0] = v50;
  uint64_t v44 = v8;
  uint64_t v45 = 0x4010000000000000;
  LOBYTE(v46) = 0;
  uint64_t v47 = v10;
  uint64_t v48 = v9;
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  uint64_t v51 = v13;
  char v52 = v14;
  uint64_t v53 = v21[0];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?, Text)>>);
  v21[1] = MEMORY[0x263F1B648];
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?, Text)>>);
  uint64_t v15 = View.eraseToAnyView()();
  outlined consume of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(v10);
  outlined consume of Text.Storage(v12, v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x263F774A8];
  uint64_t v48 = MEMORY[0x263F774A8];
  uint64_t v17 = MEMORY[0x263F1B728];
  uint64_t v47 = MEMORY[0x263F1B728];
  uint64_t v44 = v15;
  *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
  *((void *)v3 + 1) = 0x4000000000000000;
  v3[16] = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter(v22, (uint64_t *)&v3[*(int *)(v18 + 44)]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  uint64_t v19 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for HStack<TupleView<(Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)>>);
  uint64_t v42 = v17;
  uint64_t v43 = v16;
  uint64_t v40 = 0;
  uint64_t v41 = v19;
  long long v38 = 0u;
  long long v39 = 0u;
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  if (v23)
  {
    *((void *)&v27 + 1) = v17;
    uint64_t v28 = v16;
    *(void *)&long long v26 = v23;
  }
  else
  {
    uint64_t v28 = 0;
    long long v26 = 0uLL;
    long long v27 = 0uLL;
  }
  return SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
}

uint64_t closure #1 in ShowCallHistorySingleItemView.body.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v65 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v64 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v63 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v62 = (char *)&v60 - v9;
  uint64_t v10 = type metadata accessor for ShowCallHistorySingleItemView();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v61 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for ActionProperty();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v60 - v19;
  int v21 = *(unsigned __int8 *)(a1 + *(int *)(v10 + 36));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2591FFD20;
  uint64_t v23 = type metadata accessor for Command();
  uint64_t v24 = MEMORY[0x263F771C8];
  *(void *)(v22 + 56) = v23;
  *(void *)(v22 + 64) = v24;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 32));
  uint64_t v68 = v10;
  uint64_t v69 = a1;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  if (v21 == 1)
  {
    uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
    long long v26 = (unsigned int *)MEMORY[0x263F771A0];
    *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(boxed_opaque_existential_1, *v26, v23);
    ActionProperty.init(_:)();
    long long v27 = v20;
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.phoneSnippetUI);
    outlined init with copy of SingleCallRecordModel(v69, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
    long long v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = v68;
    if (v31)
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)long long v33 = 136315138;
      uint64_t v71 = v34;
      long long v35 = &v14[*(int *)(v32 + 32)];
      uint64_t v36 = *((void *)v35 + 2);
      unint64_t v37 = *((void *)v35 + 3);
      swift_bridgeObjectRetain();
      uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ShowCallHistorySingleItemView((uint64_t)v14);
      _os_log_impl(&dword_25915D000, v29, v30, "#ShowCallHistorySingleItemView tapped, performing open call record direct action for %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v34, -1, -1);
      MEMORY[0x25A2D96D0](v33, -1, -1);
    }
    else
    {
      outlined destroy of ShowCallHistorySingleItemView((uint64_t)v14);
    }

    uint64_t v51 = (uint64_t)v62;
  }
  else
  {
    uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
    long long v38 = (unsigned int *)MEMORY[0x263F771A0];
    *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(boxed_opaque_existential_1, *v38, v23);
    ActionProperty.init(_:)();
    long long v27 = v18;
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    __swift_project_value_buffer(v39, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v40 = v61;
    outlined init with copy of SingleCallRecordModel(v69, v61, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = v68;
    if (v43)
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v71 = v46;
      uint64_t v47 = v40 + *(int *)(v44 + 32);
      uint64_t v48 = v27;
      uint64_t v50 = *(void *)(v47 + 16);
      unint64_t v49 = *(void *)(v47 + 24);
      swift_bridgeObjectRetain();
      uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v49, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      long long v27 = v48;
      swift_bridgeObjectRelease();
      outlined destroy of ShowCallHistorySingleItemView(v40);
      _os_log_impl(&dword_25915D000, v41, v42, "#ShowCallHistorySingleItemView tapped, performing call direct action for %s on current device", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v46, -1, -1);
      MEMORY[0x25A2D96D0](v45, -1, -1);
    }
    else
    {
      outlined destroy of ShowCallHistorySingleItemView(v40);
    }

    uint64_t v51 = (uint64_t)v63;
  }
  ActionHandler.wrappedValue.getter();
  uint64_t v52 = type metadata accessor for StandardActionHandler();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) == 1)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v67);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?(v51, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v56 = v66;
    uint64_t v55 = v67;
    uint64_t v57 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v27, v67);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v55);
    uint64_t v58 = type metadata accessor for InteractionType();
    uint64_t v59 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v65, 1, 1, v58);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v59, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v57, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v55);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
  }
}

uint64_t outlined init with copy of SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of SingleCallRecordModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter()
{
  return partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter(closure #1 in ShowCallHistorySingleItemView.body.getter);
}

uint64_t associated type witness table accessor for View.Body : View in ShowCallHistorySingleItemView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ShowCallHistorySingleItemView.getAvatarView(contactIds:)(uint64_t a1)
{
  v16[1] = a1;
  uint64_t v1 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v5 - 8);
  v16[0] = type metadata accessor for ImageElementView();
  uint64_t v6 = *(void *)(v16[0] - 8);
  MEMORY[0x270FA5388](v16[0]);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F764D8], v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  uint64_t v9 = type metadata accessor for _ProtoIdiom();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2591FFD20;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x263F76468], v9);
  specialized Set.init(_nonEmptyArrayLiteral:)(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  ImageElementView.init(_:)();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
  uint64_t v13 = v16[0];
  uint64_t v14 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
  return v14;
}

uint64_t ShowCallHistorySingleItemView.displayText.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ShowCallHistorySingleItemView() + 32);
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v9 = one-time initialization token for missedCallType;
  swift_bridgeObjectRetain();
  if (v9 == -1)
  {
    if (!v7) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_once();
    if (!v7) {
      goto LABEL_11;
    }
  }
  if (v8 == static ShowCallHistorySingleItemView.missedCallType && v7 == *(void *)algn_26A370F98)
  {
    swift_bridgeObjectRelease();
    static Color.red.getter();
    goto LABEL_12;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_11:
    static Color.primary.getter();
    goto LABEL_12;
  }
  static Color.red.getter();
LABEL_12:
  uint64_t v12 = Text.foregroundStyle<A>(_:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  outlined consume of Text.Storage(v2, v4, v6 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  uint64_t v17 = View.eraseToAnyView()();
  outlined consume of Text.Storage(v12, v14, v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v80 = a2;
  uint64_t v3 = type metadata accessor for ShowCallHistorySingleItemView();
  uint64_t v4 = v3 - 8;
  uint64_t v74 = *(void *)(v3 - 8);
  uint64_t v73 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v72 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v75 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>)
      - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v76);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v77 = (uint64_t)&v70 - v10;
  uint64_t v11 = a1 + *(int *)(v4 + 40);
  uint64_t v12 = *(void *)(v11 + 56);
  uint64_t v81 = *(void *)(v11 + 48);
  uint64_t v82 = v12;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.subheadline.getter();
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  swift_release();
  char v23 = v22 & 1;
  outlined consume of Text.Storage(v13, v15, v17);
  swift_bridgeObjectRelease();
  static Font.Weight.regular.getter();
  uint64_t v24 = Text.fontWeight(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  outlined consume of Text.Storage(v18, v20, v23);
  swift_bridgeObjectRelease();
  uint64_t v81 = static Color.secondary.getter();
  uint64_t v29 = Text.foregroundStyle<A>(_:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  outlined consume of Text.Storage(v24, v26, v28);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v36 = static Alignment.center.getter();
  uint64_t v38 = v37;
  uint64_t v39 = v71;
  closure #1 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter((uint64_t)&v81);
  int v40 = v81;
  char v41 = BYTE4(v81);
  char v42 = BYTE5(v81);
  uint64_t v43 = v82;
  char v44 = v83;
  uint64_t v45 = v86;
  char v46 = v87;
  uint64_t v47 = v90;
  long long v49 = v88;
  long long v48 = v89;
  uint64_t v81 = v36;
  uint64_t v82 = v38;
  int v83 = v40;
  char v84 = v41;
  char v85 = v42;
  uint64_t v86 = v43;
  char v87 = v44;
  *(void *)&long long v88 = v45;
  BYTE8(v88) = v46;
  long long v89 = v49;
  long long v90 = v48;
  uint64_t v91 = v47;
  uint64_t v92 = 0x3FF0000000000000;
  uint64_t v50 = v72;
  outlined init with copy of SingleCallRecordModel(v39, v72, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  unint64_t v51 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v52 = swift_allocObject();
  outlined init with take of SingleCallRecordModel(v50, v52 + v51, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>>);
  lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>();
  uint64_t v53 = v75;
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v36) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = v78;
  uint64_t v63 = v79;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v9, v53, v79);
  uint64_t v64 = &v9[*(int *)(v76 + 44)];
  *uint64_t v64 = v36;
  *((void *)v64 + 1) = v55;
  *((void *)v64 + 2) = v57;
  *((void *)v64 + 3) = v59;
  *((void *)v64 + 4) = v61;
  v64[40] = 0;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v63);
  uint64_t v65 = v77;
  outlined init with take of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>((uint64_t)v9, v77);
  outlined init with copy of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>(v65, (uint64_t)v9);
  uint64_t v66 = v80;
  *uint64_t v80 = v29;
  v66[1] = v31;
  *((unsigned char *)v66 + 16) = v35;
  v66[3] = v33;
  uint64_t v67 = v66;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text, ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>));
  outlined init with copy of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>((uint64_t)v9, (uint64_t)v67 + *(int *)(v68 + 48));
  outlined copy of Text.Storage(v29, v31, v35);
  swift_bridgeObjectRetain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v65, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  outlined consume of Text.Storage(v29, v31, v35);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter@<X0>(uint64_t a1@<X8>)
{
  int v5 = static HierarchicalShapeStyle.quaternary.getter();
  type metadata accessor for ShowCallHistorySingleItemView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v2 = Image.init(systemName:)();
  uint64_t v3 = static Color.blue.getter();
  uint64_t result = swift_getKeyPath();
  *(_DWORD *)a1 = v5;
  *(_WORD *)(a1 + 4) = 256;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v2;
  *(void *)(a1 + 64) = result;
  *(void *)(a1 + 72) = v3;
  return result;
}

uint64_t closure #2 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  char v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShowCallHistorySingleItemView();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActionProperty();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2591FFD20;
  uint64_t v16 = type metadata accessor for Command();
  uint64_t v17 = MEMORY[0x263F771C8];
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  uint64_t v46 = v9;
  type metadata accessor for SingleCallRecordModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v16);
  uint64_t v47 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SingleCallRecordModel(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    char v41 = v8;
    char v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v25 = v24;
    *(_DWORD *)char v23 = 136315138;
    uint64_t v49 = v24;
    uint64_t v26 = &v11[*(int *)(v46 + 32)];
    uint64_t v27 = (uint64_t)v11;
    uint64_t v29 = *((void *)v26 + 2);
    unint64_t v28 = *((void *)v26 + 3);
    swift_bridgeObjectRetain();
    uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ShowCallHistorySingleItemView(v27);
    _os_log_impl(&dword_25915D000, v20, v21, "#ShowCallHistorySingleItemView tapped, performing call direct action for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2D96D0](v25, -1, -1);
    uint64_t v30 = v23;
    uint64_t v8 = v41;
    MEMORY[0x25A2D96D0](v30, -1, -1);
  }
  else
  {
    outlined destroy of ShowCallHistorySingleItemView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  uint64_t v31 = type metadata accessor for StandardActionHandler();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v45);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v34 = v44;
    uint64_t v35 = v45;
    uint64_t v36 = (uint64_t)v42;
    uint64_t v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v47, v45);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
    uint64_t v38 = type metadata accessor for InteractionType();
    uint64_t v39 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v43, 1, 1, v38);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v31);
  }
}

uint64_t closure #1 in ShowCallHistorySingleItemView.callDetailView.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for ShowCallHistorySingleItemView() + 32);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v6 = one-time initialization token for outgoingCallType;
  swift_bridgeObjectRetain();
  if (v6 != -1)
  {
    swift_once();
    if (!v4) {
      goto LABEL_8;
    }
LABEL_3:
    if (v5 == static ShowCallHistorySingleItemView.outgoingCallType && v4 == *(void *)algn_26A370FA8)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t v24 = Image.init(systemName:)();
    uint64_t v23 = static Color.gray.getter();
    uint64_t KeyPath = swift_getKeyPath();
    goto LABEL_11;
  }
  if (v4) {
    goto LABEL_3;
  }
LABEL_8:
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t KeyPath = 0;
LABEL_11:
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  static Color.gray.getter();
  uint64_t v14 = Text.foregroundStyle<A>(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  outlined consume of Text.Storage(v9, v11, v13);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v18;
  outlined copy of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(v24);
  outlined copy of Text.Storage(v14, v16, v20);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v14, v16, v20);
  swift_bridgeObjectRelease();
  return outlined consume of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(v24);
}

uint64_t protocol witness for View.body.getter in conformance ShowCallHistorySingleItemView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v4 = type metadata accessor for SimpleItemRichView();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowCallHistorySingleItemView.getSimpleItemRichView()((uint64_t)v7);
  outlined init with copy of SingleCallRecordModel(v1, (uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of SingleCallRecordModel((uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for ShowCallHistorySingleItemView);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

char *initializeBufferWithCopyOfBuffer for ShowCallHistorySingleItemView(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v7 = a3[5];
    unint64_t v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v11 = type metadata accessor for ActionHandler();
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    char v13 = v4;
    v12(v8, v9, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = &v6[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&v6[a3[7]], (uint64_t)a2 + a3[7], v17);
    uint64_t v19 = a3[8];
    char v20 = &v6[v19];
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 8);
    *(void *)char v20 = *(char **)((char *)a2 + v19);
    *((void *)v20 + 1) = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v19 + 24);
    *((void *)v20 + 2) = *(char **)((char *)a2 + v19 + 16);
    *((void *)v20 + 3) = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v19 + 40);
    *((void *)v20 + 4) = *(char **)((char *)a2 + v19 + 32);
    *((void *)v20 + 5) = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v19 + 56);
    *((void *)v20 + 6) = *(char **)((char *)a2 + v19 + 48);
    *((void *)v20 + 7) = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v19 + 72);
    *((void *)v20 + 8) = *(char **)((char *)a2 + v19 + 64);
    *((void *)v20 + 9) = v26;
    *((void *)v20 + 10) = *(char **)((char *)a2 + v19 + 80);
    v20[88] = *((unsigned char *)a2 + v19 + 88);
    uint64_t v27 = type metadata accessor for SingleCallRecordModel();
    uint64_t v28 = *(int *)(v27 + 44);
    uint64_t v33 = &v20[v28];
    uint64_t v34 = v27;
    uint64_t v32 = v21 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
    v30(v33, v32, v29);
    v30(&v20[*(int *)(v34 + 48)], v21 + *(int *)(v34 + 48), v29);
    v6[a3[9]] = *((unsigned char *)a2 + a3[9]);
  }
  return v6;
}

uint64_t destroy for ShowCallHistorySingleItemView(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  unint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8((char *)a1 + a2[7], v7);
  uint64_t v9 = (char *)a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for SingleCallRecordModel();
  uint64_t v11 = &v9[*(int *)(v10 + 44)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
  ((void (*)(void *__return_ptr, char *, uint64_t))v15)((void *)(v12 - 8), v11, v12);
  char v13 = &v9[*(int *)(v10 + 48)];
  return v15(v13, v12);
}

char *initializeWithCopy for ShowCallHistorySingleItemView(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v5;
  uint64_t v7 = a3[5];
  uint64_t v9 = &a1[v7];
  uint64_t v10 = a2 + v7;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v6;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = a2 + v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(&a1[a3[7]], a2 + a3[7], v17);
  uint64_t v19 = a3[8];
  char v20 = &a1[v19];
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  *(void *)char v20 = *(void *)(a2 + v19);
  *((void *)v20 + 1) = v22;
  uint64_t v23 = *(void *)(a2 + v19 + 24);
  *((void *)v20 + 2) = *(void *)(a2 + v19 + 16);
  *((void *)v20 + 3) = v23;
  uint64_t v24 = *(void *)(a2 + v19 + 40);
  *((void *)v20 + 4) = *(void *)(a2 + v19 + 32);
  *((void *)v20 + 5) = v24;
  uint64_t v25 = *(void *)(a2 + v19 + 56);
  *((void *)v20 + 6) = *(void *)(a2 + v19 + 48);
  *((void *)v20 + 7) = v25;
  uint64_t v26 = *(void *)(a2 + v19 + 72);
  *((void *)v20 + 8) = *(void *)(a2 + v19 + 64);
  *((void *)v20 + 9) = v26;
  *((void *)v20 + 10) = *(void *)(a2 + v19 + 80);
  v20[88] = *(unsigned char *)(a2 + v19 + 88);
  uint64_t v27 = type metadata accessor for SingleCallRecordModel();
  uint64_t v28 = *(int *)(v27 + 44);
  uint64_t v33 = &v20[v28];
  uint64_t v34 = v27;
  uint64_t v32 = v21 + v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  v30(v33, v32, v29);
  v30(&v20[*(int *)(v34 + 48)], v21 + *(int *)(v34 + 48), v29);
  a1[a3[9]] = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for ShowCallHistorySingleItemView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(void *)(v19 + 40) = *(void *)(v20 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  *(void *)(v19 + 56) = *(void *)(v20 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 64) = *(void *)(v20 + 64);
  *(void *)(v19 + 72) = *(void *)(v20 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 80) = *(void *)(v20 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 88) = *(unsigned char *)(v20 + 88);
  uint64_t v21 = type metadata accessor for SingleCallRecordModel();
  uint64_t v22 = *(int *)(v21 + 44);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(v19 + *(int *)(v21 + 48), v20 + *(int *)(v21 + 48), v25);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

char *initializeWithTake for ShowCallHistorySingleItemView(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = a3[5];
  uint64_t v7 = &a1[v5];
  id v8 = &a2[v5];
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  long long v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = *(_OWORD *)&a2[v15 + 48];
  *((_OWORD *)v16 + 2) = *(_OWORD *)&a2[v15 + 32];
  *((_OWORD *)v16 + 3) = v19;
  *((_OWORD *)v16 + 4) = *(_OWORD *)&a2[v15 + 64];
  *((void *)v16 + 10) = *(void *)&a2[v15 + 80];
  v16[88] = a2[v15 + 88];
  uint64_t v20 = type metadata accessor for SingleCallRecordModel();
  uint64_t v21 = *(int *)(v20 + 44);
  uint64_t v22 = &v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(&v16[*(int *)(v20 + 48)], &v17[*(int *)(v20 + 48)], v24);
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t assignWithTake for ShowCallHistorySingleItemView(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v15 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], &a2[a3[7]], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  long long v18 = &a2[v16];
  uint64_t v19 = *(void *)&a2[v16 + 8];
  *(void *)uint64_t v17 = *(void *)&a2[v16];
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 3);
  *(void *)(v17 + 16) = *((void *)v18 + 2);
  *(void *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v18 + 5);
  *(void *)(v17 + 32) = *((void *)v18 + 4);
  *(void *)(v17 + 40) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v18 + 7);
  *(void *)(v17 + 48) = *((void *)v18 + 6);
  *(void *)(v17 + 56) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v18 + 9);
  *(void *)(v17 + 64) = *((void *)v18 + 8);
  *(void *)(v17 + 72) = v23;
  swift_bridgeObjectRelease();
  *(void *)(v17 + 80) = *((void *)v18 + 10);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 88) = v18[88];
  uint64_t v24 = type metadata accessor for SingleCallRecordModel();
  uint64_t v25 = *(int *)(v24 + 44);
  uint64_t v26 = v17 + v25;
  uint64_t v27 = &v18[v25];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(v17 + *(int *)(v24 + 48), &v18[*(int *)(v24 + 48)], v28);
  *(unsigned char *)(a1 + a3[9]) = a2[a3[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowCallHistorySingleItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591B9100);
}

uint64_t sub_2591B9100(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = type metadata accessor for ActionHandler();
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    return v14(&a1[v12], a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for SingleCallRecordModel();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  long long v18 = &a1[a3[8]];
  return v16(v18, a2, v17);
}

uint64_t storeEnumTagSinglePayload for ShowCallHistorySingleItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591B929C);
}

char *sub_2591B929C(char *result, uint64_t a2, int a3, int *a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)uint64_t result = a2;
    return result;
  }
  uint64_t v8 = type metadata accessor for ActionHandler();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for SingleCallRecordModel();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[8]];
  return (char *)v15(v17, a2, a2, v16);
}

void type metadata completion function for ShowCallHistorySingleItemView()
{
  type metadata accessor for ActionHandler();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<CGFloat>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SingleCallRecordModel();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void type metadata accessor for ScaledMetric<CGFloat>()
{
  if (!lazy cache variable for type metadata for ScaledMetric<CGFloat>)
  {
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ScaledMetric<CGFloat>);
    }
  }
}

uint64_t sub_2591B958C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined destroy of ShowCallHistorySingleItemView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowCallHistorySingleItemView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined consume of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroyTm_9()
{
  uint64_t v1 = (int *)(type metadata accessor for ShowCallHistorySingleItemView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  int v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  int v5 = (char *)v2 + v1[8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v7 = *(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7((char *)v2 + v1[9], v6);
  uint64_t v8 = (char *)v2 + v1[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for SingleCallRecordModel();
  uint64_t v10 = &v8[*(int *)(v9 + 44)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(&v8[*(int *)(v9 + 48)], v11);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter()
{
  return partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter(closure #2 in closure #1 in ShowCallHistorySingleItemView.dateAndInformationView.getter);
}

uint64_t partial apply for closure #1 in ShowCallHistorySingleItemView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ShowCallHistorySingleItemView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ZIndexTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ZIndexTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _PaddingLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined copy of ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>?(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _PaddingLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t PhoneCallNLConstants.canonicalName.getter(char a1)
{
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  unint64_t v2 = PhoneCallNLConstants.rawValue.getter(a1);
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  specialized Collection.prefix(_:)(1, v2, v4, v5);
  swift_bridgeObjectRelease();
  Swift::String v6 = Substring.uppercased()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1uLL, v2, v4, v7);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

unint64_t PhoneCallNLConstants.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
    case 7:
    case 15:
      unint64_t result = 0x6C6143656E6F6870;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 9:
      unint64_t result = 0x6464416C69616D65;
      break;
    case 10:
      unint64_t result = 0x75466E6F73726570;
      break;
    case 11:
      unint64_t result = 0x69466E6F73726570;
      break;
    case 12:
      unint64_t result = 0x614C6E6F73726570;
      break;
    case 13:
      unint64_t result = 0x54746361746E6F63;
      break;
    case 14:
      unint64_t result = 0x69614D6563696F76;
      break;
    default:
      unint64_t result = 0x6E69616D6F64;
      break;
  }
  return result;
}

Swift::String __swiftcall PhoneCallNLConstants.boundValue(_:)(Swift::String a1)
{
  unint64_t v8 = PhoneCallNLConstants.canonicalName.getter(v1);
  uint64_t v9 = v2;
  v3._countAndFlagsBits = 0x2E65756C61562ELL;
  v3._object = (void *)0xE700000000000000;
  String.append(_:)(v3);
  Swift::String v4 = String.uppercased()();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v8;
  Swift::String v6 = v9;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(void))PhoneCallNLConstants.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))PhoneCallNLConstants.rawValue.getter);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallNLConstants@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized PhoneCallNLConstants.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallNLConstants@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PhoneCallNLConstants.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallConfirmationSemantics.associatedSemantic.getter()
{
  return 6;
}

uint64_t PhoneCallConfirmationSemantics.canonicalName.getter()
{
  String.uppercased()();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = v0;
  v3._object = v2;
  uint64_t countAndFlagsBits = PhoneCallNLConstants.boundValue(_:)(v3)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t PhoneCallConfirmationSemantics.rawValue.getter(char a1)
{
  return *(void *)&aYes_1[8 * a1];
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallConfirmationSemantics(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))PhoneCallConfirmationSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallConfirmationSemantics(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))PhoneCallConfirmationSemantics.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallConfirmationSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(void))PhoneCallConfirmationSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallConfirmationSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))PhoneCallConfirmationSemantics.rawValue.getter);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallConfirmationSemantics@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized PhoneCallConfirmationSemantics.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallConfirmationSemantics@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhoneCallConfirmationSemantics.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t VoicemailVerbSemantics.associatedSemantic.getter()
{
  return 14;
}

uint64_t VoicemailVerbSemantics.canonicalName.getter()
{
  String.uppercased()();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = v0;
  v3._object = v2;
  uint64_t countAndFlagsBits = PhoneCallNLConstants.boundValue(_:)(v3)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t VoicemailVerbSemantics.rawValue.getter(char a1)
{
  return *(void *)&aPlay_1[8 * a1];
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VoicemailVerbSemantics(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance VoicemailVerbSemantics(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VoicemailVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(void))VoicemailVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance VoicemailVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))VoicemailVerbSemantics.rawValue.getter);
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance VoicemailVerbSemantics@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized VoicemailVerbSemantics.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance VoicemailVerbSemantics@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = VoicemailVerbSemantics.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PhoneCallVerbSemantics.associatedSemantic.getter()
{
  return 15;
}

uint64_t PhoneCallVerbSemantics.canonicalName.getter(char a1)
{
  PhoneCallVerbSemantics.rawValue.getter(a1);
  String.uppercased()();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v1 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  Swift::String v3 = v2;
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = v1;
  v4._object = v3;
  uint64_t countAndFlagsBits = PhoneCallNLConstants.boundValue(_:)(v4)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t PhoneCallVerbSemantics.rawValue.getter(char a1)
{
  return *(void *)&aCall_1[8 * a1];
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallVerbSemantics(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(a1, a2, a3, a4, (uint64_t (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallNLConstants(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallVerbSemantics(uint64_t a1, uint64_t a2)
{
  return protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(a1, a2, (void (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  Hasher.init(_seed:)();
  a3(v5);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(void))PhoneCallVerbSemantics.rawValue.getter);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallVerbSemantics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(a1, a2, a3, (void (*)(uint64_t))PhoneCallVerbSemantics.rawValue.getter);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallNLConstants(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  Hasher.init(_seed:)();
  a4(v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallVerbSemantics@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized PhoneCallVerbSemantics.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallVerbSemantics@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhoneCallVerbSemantics.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

PhoneSnippetUI::PhoneCallHandleType_optional __swiftcall PhoneCallHandleType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallHandleType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = PhoneSnippetUI_PhoneCallHandleType_email;
  }
  else {
    v4.value = PhoneSnippetUI_PhoneCallHandleType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t PhoneCallHandleType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6C69616D65;
  }
  else {
    return 0x656E6F6870;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PhoneCallHandleType(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = PhoneCallHandleType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == PhoneCallHandleType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PhoneCallHandleType()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  PhoneCallHandleType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance PhoneCallHandleType()
{
  PhoneCallHandleType.rawValue.getter(*v0);
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PhoneCallHandleType()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  PhoneCallHandleType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PhoneCallHandleType@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallHandleType.init(rawValue:), *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance PhoneCallHandleType@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PhoneCallHandleType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t specialized Collection.prefix(_:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = String.index(_:offsetBy:limitedBy:)();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x270F9D8F0](a1, a2, a3, a4);
}

uint64_t specialized Collection.dropFirst(_:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return MEMORY[0x270F9D8F0](a1, a2, a3, a4);
  }
  unint64_t v4 = a3;
  unint64_t v5 = a2;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v7 = 11;
  }
  unint64_t v8 = v7 | (v6 << 16);
  a1 = String.index(_:offsetBy:limitedBy:)();
  if (a2) {
    a1 = v8;
  }
  if (4 * v6 < a1 >> 14) {
    goto LABEL_14;
  }
  a2 = v8;
  a3 = v5;
  a4 = v4;
  return MEMORY[0x270F9D8F0](a1, a2, a3, a4);
}

unint64_t lazy protocol witness table accessor for type Substring and conformance Substring()
{
  unint64_t result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

unint64_t specialized PhoneCallNLConstants.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallNLConstants.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0x10) {
    return 16;
  }
  else {
    return v3;
  }
}

unint64_t specialized PhoneCallConfirmationSemantics.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallConfirmationSemantics.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t specialized VoicemailVerbSemantics.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VoicemailVerbSemantics.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t specialized PhoneCallVerbSemantics.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of PhoneCallVerbSemantics.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xE) {
    return 14;
  }
  else {
    return v3;
  }
}

unint64_t lazy protocol witness table accessor for type PhoneCallNLConstants and conformance PhoneCallNLConstants()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants;
  if (!lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallNLConstants and conformance PhoneCallNLConstants);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics;
  if (!lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallConfirmationSemantics and conformance PhoneCallConfirmationSemantics);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics()
{
  unint64_t result = lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics;
  if (!lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VoicemailVerbSemantics and conformance VoicemailVerbSemantics);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics;
  if (!lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallVerbSemantics and conformance PhoneCallVerbSemantics);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PhoneCallHandleType and conformance PhoneCallHandleType()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType;
  if (!lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneCallHandleType and conformance PhoneCallHandleType);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneCallNLConstants(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhoneCallNLConstants(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591BB038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallNLConstants()
{
  return &type metadata for PhoneCallNLConstants;
}

uint64_t getEnumTagSinglePayload for PhoneCallConfirmationSemantics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhoneCallConfirmationSemantics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591BB1CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallConfirmationSemantics()
{
  return &type metadata for PhoneCallConfirmationSemantics;
}

unsigned char *storeEnumTagSinglePayload for VoicemailVerbSemantics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591BB2D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoicemailVerbSemantics()
{
  return &type metadata for VoicemailVerbSemantics;
}

uint64_t getEnumTagSinglePayload for PhoneCallVerbSemantics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhoneCallVerbSemantics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591BB464);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallVerbSemantics()
{
  return &type metadata for PhoneCallVerbSemantics;
}

unsigned char *storeEnumTagSinglePayload for PhoneCallHandleType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591BB568);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneCallHandleType()
{
  return &type metadata for PhoneCallHandleType;
}

uint64_t *Color.emergencyRed.unsafeMutableAddressor()
{
  if (one-time initialization token for emergencyRed != -1) {
    swift_once();
  }
  return &static Color.emergencyRed;
}

uint64_t one-time initialization function for emergencyRed()
{
  uint64_t v0 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v4 = (void *)static ColorFactory.emergencyRed.getter();
  uint64_t v5 = (uint64_t)objc_msgSend(v4, sel_redValue);

  double v6 = (double)(v5 / 255);
  BOOL v7 = (void *)static ColorFactory.emergencyRed.getter();
  uint64_t v8 = (uint64_t)objc_msgSend(v7, sel_greenValue);

  double v9 = (double)(v8 / 255);
  char v10 = (void *)static ColorFactory.emergencyRed.getter();
  uint64_t v11 = (uint64_t)objc_msgSend(v10, sel_blueValue);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B380], v0);
  uint64_t result = MEMORY[0x25A2D8500](v3, v6, v9, (double)(v11 / 255), 1.0);
  static Color.emergencyRed = result;
  return result;
}

uint64_t static Color.emergencyRed.getter()
{
  if (one-time initialization token for emergencyRed != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t ShowPlayVoicemailSingleItemView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_7((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  ActionHandler.init()();
  return outlined init with take of SingleVoicemailModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), (uint64_t (*)(void))type metadata accessor for SingleVoicemailModel);
}

uint64_t type metadata accessor for ShowPlayVoicemailSingleItemView()
{
  uint64_t result = type metadata singleton initialization cache for ShowPlayVoicemailSingleItemView;
  if (!type metadata singleton initialization cache for ShowPlayVoicemailSingleItemView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void one-time initialization function for iconHeight()
{
  static ShowPlayVoicemailSingleItemView.iconHeight = 0x402E000000000000;
}

void one-time initialization function for iconWidth()
{
  static ShowPlayVoicemailSingleItemView.iconWidth = 0x402E000000000000;
}

uint64_t ShowPlayVoicemailSingleItemView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  return outlined init with copy of SingleVoicemailModel(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for SingleVoicemailModel);
}

uint64_t ShowPlayVoicemailSingleItemView.body.getter()
{
  uint64_t v1 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = type metadata accessor for SimpleItemRichView();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowPlayVoicemailSingleItemView.getSimpleItemRichView()((uint64_t)v7);
  outlined init with copy of SingleVoicemailModel(v0, (uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailSingleItemView);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of SingleVoicemailModel((uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailSingleItemView);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_7(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ShowPlayVoicemailSingleItemView.getSimpleItemRichView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  MEMORY[0x270FA5388](v29);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)(v1 + *(int *)(type metadata accessor for ShowPlayVoicemailSingleItemView() + 24));
  uint64_t v5 = v4[3];
  uint64_t v56 = v4[2];
  uint64_t v57 = v5;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  LODWORD(v56) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v11 = Text.foregroundStyle<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v28 = v16;
  outlined consume of Text.Storage(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v58 = MEMORY[0x263F1A838];
  uint64_t v59 = MEMORY[0x263F77350];
  uint64_t v17 = swift_allocObject();
  uint64_t v56 = v17;
  *(void *)(v17 + 16) = v11;
  *(void *)(v17 + 24) = v13;
  *(unsigned char *)(v17 + 32) = v15 & 1;
  *(void *)(v17 + 40) = v28;
  uint64_t v55 = 0;
  long long v53 = 0u;
  long long v54 = 0u;
  uint64_t v19 = v4[4];
  uint64_t v18 = v4[5];
  uint64_t v20 = v4;
  uint64_t v51 = MEMORY[0x263F8D310];
  uint64_t v52 = MEMORY[0x263F779A0];
  uint64_t v49 = v19;
  uint64_t v50 = v18;
  swift_bridgeObjectRetain();
  *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
  *((void *)v3 + 1) = 0x4000000000000000;
  v3[16] = 0;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter((uint64_t)&v3[*(int *)(v21 + 44)]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  uint64_t v22 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for HStack<TupleView<(VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0)>>);
  uint64_t v23 = MEMORY[0x263F1B728];
  uint64_t v24 = MEMORY[0x263F774A8];
  uint64_t v47 = MEMORY[0x263F1B728];
  uint64_t v48 = MEMORY[0x263F774A8];
  uint64_t v46 = v22;
  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  uint64_t v42 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  uint64_t v39 = 0;
  long long v37 = 0u;
  long long v38 = 0u;
  uint64_t v36 = 0;
  long long v34 = 0u;
  long long v35 = 0u;
  if (*((unsigned char *)v20 + 80) == 1) {
    uint64_t v25 = ShowPlayVoicemailSingleItemView.readStatusIcon.getter();
  }
  else {
    uint64_t v25 = ShowPlayVoicemailSingleItemView.emptyImageView.getter();
  }
  uint64_t v32 = v23;
  uint64_t v33 = v24;
  uint64_t v31 = v25;
  return SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
}

uint64_t closure #1 in ShowPlayVoicemailSingleItemView.body.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  long long v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActionProperty();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2591FFD20;
  uint64_t v16 = type metadata accessor for Command();
  uint64_t v17 = MEMORY[0x263F771C8];
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  uint64_t v46 = v9;
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v16);
  uint64_t v47 = v14;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  outlined init with copy of SingleVoicemailModel(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailSingleItemView);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    long long v41 = v8;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v25 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v49 = v24;
    uint64_t v26 = &v11[*(int *)(v46 + 24)];
    uint64_t v27 = (uint64_t)v11;
    uint64_t v29 = *((void *)v26 + 2);
    unint64_t v28 = *((void *)v26 + 3);
    swift_bridgeObjectRetain();
    uint64_t v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v28, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ShowPlayVoicemailSingleItemView(v27);
    _os_log_impl(&dword_25915D000, v20, v21, "#ShowPlayVoicemailSingleItemView tapped, performing direct action for %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2D96D0](v25, -1, -1);
    uint64_t v30 = v23;
    uint64_t v8 = v41;
    MEMORY[0x25A2D96D0](v30, -1, -1);
  }
  else
  {
    outlined destroy of ShowPlayVoicemailSingleItemView((uint64_t)v11);
  }

  ActionHandler.wrappedValue.getter();
  uint64_t v31 = type metadata accessor for StandardActionHandler();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v45);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v34 = v44;
    uint64_t v35 = v45;
    uint64_t v36 = (uint64_t)v42;
    long long v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v47, v45);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
    uint64_t v38 = type metadata accessor for InteractionType();
    uint64_t v39 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v43, 1, 1, v38);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v39, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v8, v31);
  }
}

uint64_t outlined init with copy of SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of SingleVoicemailModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_7(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ShowPlayVoicemailSingleItemView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ShowPlayVoicemailSingleItemView.readStatusIcon.getter()
{
  uint64_t v0 = type metadata accessor for Image.ResizingMode();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B4C0], v0);
  uint64_t v4 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = static Color.blue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  if (one-time initialization token for iconWidth != -1) {
    swift_once();
  }
  if (one-time initialization token for iconHeight != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v9[1] = v4;
  void v9[2] = KeyPath;
  v9[3] = v5;
  v9[4] = v14;
  char v10 = v15;
  uint64_t v11 = v16;
  char v12 = v17;
  long long v13 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  uint64_t v7 = View.eraseToAnyView()();
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t ShowPlayVoicemailSingleItemView.emptyImageView.getter()
{
  uint64_t v0 = type metadata accessor for Image.ResizingMode();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F1B4C0], v0);
  uint64_t v4 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (one-time initialization token for iconWidth != -1) {
    swift_once();
  }
  if (one-time initialization token for iconHeight != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v7[1] = v4;
  v7[2] = v12;
  char v8 = v13;
  uint64_t v9 = v14;
  char v10 = v15;
  long long v11 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  uint64_t v5 = View.eraseToAnyView()();
  swift_release();
  return v5;
}

uint64_t closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v25 - v9;
  uint64_t v35 = static HorizontalAlignment.trailing.getter();
  closure #1 in closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter((uint64_t)v40);
  uint64_t v39 = v40[1];
  int v30 = v41;
  uint64_t v37 = v42;
  uint64_t v31 = v40[0];
  uint64_t v32 = v44;
  int v38 = v45;
  uint64_t v33 = v43;
  uint64_t v34 = v46;
  type metadata accessor for ShowPlayVoicemailSingleItemView();
  type metadata accessor for SingleVoicemailModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  long long v11 = (void *)CodableAceObject.wrappedValue.getter();
  ActionHandler.wrappedValue.getter();
  static ContactInformationImage.getImage(directInvocation:actionHandler:)(v11, (uint64_t)v4, (uint64_t)v8);

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v12 = v36;
  char v13 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  uint64_t v29 = v10;
  uint64_t v26 = v5;
  v13(v10, v8, v5);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  unint64_t v28 = v8;
  v27(v8, v10, v5);
  uint64_t v14 = v34;
  *(void *)a1 = v35;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  uint64_t v17 = v39;
  *(void *)(a1 + 24) = v31;
  *(void *)(a1 + 32) = v17;
  char v18 = v30;
  *(unsigned char *)(a1 + 40) = v30;
  uint64_t v19 = v33;
  *(void *)(a1 + 48) = v37;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v16;
  *(unsigned char *)(a1 + 72) = v38;
  *(void *)(a1 + 80) = v14;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<TupleView<(Text, Text)>>, <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0));
  os_log_type_t v21 = v8;
  uint64_t v22 = v26;
  v27((char *)(a1 + *(int *)(v20 + 48)), v21, v26);
  outlined copy of Text.Storage(v15, v17, v18);
  swift_bridgeObjectRetain();
  LOBYTE(a1) = v38;
  outlined copy of Text.Storage(v19, v16, v38);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  v23(v29, v22);
  v23(v28, v22);
  outlined consume of Text.Storage(v15, v39, v18);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v19, v16, a1);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ShowPlayVoicemailSingleItemView.getDateAndInformationView.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ShowPlayVoicemailSingleItemView();
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v20 = v3;
  uint64_t v21 = v2;
  uint64_t v22 = v4;
  char v19 = v5 & 1;
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Color.gray.getter();
  uint64_t v11 = Text.foregroundStyle<A>(_:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  outlined consume of Text.Storage(v6, v8, v10);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v13;
  *(unsigned char *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v15;
  outlined copy of Text.Storage(v21, v20, v19);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v11, v13, v17);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v11, v13, v17);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v21, v20, v19);
  return swift_bridgeObjectRelease();
}

uint64_t protocol witness for View.body.getter in conformance ShowPlayVoicemailSingleItemView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v4 = type metadata accessor for SimpleItemRichView();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShowPlayVoicemailSingleItemView.getSimpleItemRichView()((uint64_t)v7);
  outlined init with copy of SingleVoicemailModel(v1, (uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailSingleItemView);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of SingleVoicemailModel((uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for ShowPlayVoicemailSingleItemView);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_7(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

char *initializeBufferWithCopyOfBuffer for ShowPlayVoicemailSingleItemView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14);
    uint64_t v18 = *(void *)(v16 + 8);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    uint64_t v19 = *(void *)(v16 + 24);
    *((void *)v15 + 2) = *(void *)(v16 + 16);
    *((void *)v15 + 3) = v19;
    uint64_t v20 = *(void *)(v16 + 40);
    *((void *)v15 + 4) = *(void *)(v16 + 32);
    *((void *)v15 + 5) = v20;
    uint64_t v21 = *(void *)(v16 + 56);
    *((void *)v15 + 6) = *(void *)(v16 + 48);
    *((void *)v15 + 7) = v21;
    uint64_t v22 = *(void *)(v16 + 72);
    *((void *)v15 + 8) = *(void *)(v16 + 64);
    *((void *)v15 + 9) = v22;
    v15[80] = *(unsigned char *)(v16 + 80);
    uint64_t v23 = type metadata accessor for SingleVoicemailModel();
    uint64_t v24 = *(int *)(v23 + 40);
    uint64_t v29 = &v15[v24];
    uint64_t v25 = v16 + v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    v27(v29, v25, v26);
    v27(&v15[*(int *)(v23 + 44)], v16 + *(int *)(v23 + 44), v26);
  }
  return v7;
}

uint64_t destroy for ShowPlayVoicemailSingleItemView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for SingleVoicemailModel();
  uint64_t v8 = &v6[*(int *)(v7 + 40)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
  ((void (*)(void *__return_ptr, char *, uint64_t))v12)((void *)(v9 - 8), v8, v9);
  uint64_t v10 = &v6[*(int *)(v7 + 44)];
  return v12(v10, v9);
}

void *initializeWithCopy for ShowPlayVoicemailSingleItemView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *((void *)v15 + 1) = v17;
  uint64_t v18 = *(void *)(a2 + v14 + 16);
  uint64_t v19 = *(void *)(v16 + 24);
  *((void *)v15 + 2) = v18;
  *((void *)v15 + 3) = v19;
  uint64_t v20 = *(void *)(v16 + 40);
  *((void *)v15 + 4) = *(void *)(v16 + 32);
  *((void *)v15 + 5) = v20;
  uint64_t v21 = *(void *)(v16 + 56);
  *((void *)v15 + 6) = *(void *)(v16 + 48);
  *((void *)v15 + 7) = v21;
  uint64_t v22 = *(void *)(v16 + 72);
  *((void *)v15 + 8) = *(void *)(v16 + 64);
  *((void *)v15 + 9) = v22;
  v15[80] = *(unsigned char *)(v16 + 80);
  uint64_t v23 = type metadata accessor for SingleVoicemailModel();
  uint64_t v24 = *(int *)(v23 + 40);
  uint64_t v29 = &v15[v24];
  uint64_t v25 = v16 + v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v27(v29, v25, v26);
  v27(&v15[*(int *)(v23 + 44)], v16 + *(int *)(v23 + 44), v26);
  return a1;
}

uint64_t assignWithCopy for ShowPlayVoicemailSingleItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *(void *)(v14 + 8) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 48) = *(void *)(v15 + 48);
  *(void *)(v14 + 56) = *(void *)(v15 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 64) = *(void *)(v15 + 64);
  *(void *)(v14 + 72) = *(void *)(v15 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 80) = *(unsigned char *)(v15 + 80);
  uint64_t v16 = type metadata accessor for SingleVoicemailModel();
  uint64_t v17 = *(int *)(v16 + 40);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = v15 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(v14 + *(int *)(v16 + 44), v15 + *(int *)(v16 + 44), v20);
  return a1;
}

_OWORD *initializeWithTake for ShowPlayVoicemailSingleItemView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  long long v13 = *(_OWORD *)((char *)a2 + v10 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)((char *)a2 + v10);
  *((_OWORD *)v11 + 1) = v13;
  long long v14 = *(_OWORD *)((char *)a2 + v10 + 48);
  *((_OWORD *)v11 + 2) = *(_OWORD *)((char *)a2 + v10 + 32);
  *((_OWORD *)v11 + 3) = v14;
  *((_OWORD *)v11 + 4) = *(_OWORD *)((char *)a2 + v10 + 64);
  v11[80] = *((unsigned char *)a2 + v10 + 80);
  uint64_t v15 = type metadata accessor for SingleVoicemailModel();
  uint64_t v16 = *(int *)(v15 + 40);
  uint64_t v17 = &v11[v16];
  uint64_t v18 = &v12[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(&v11[*(int *)(v15 + 44)], &v12[*(int *)(v15 + 44)], v19);
  return a1;
}

uint64_t assignWithTake for ShowPlayVoicemailSingleItemView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  long long v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)((char *)a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v13 + 3);
  *(void *)(v12 + 16) = *((void *)v13 + 2);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v13 + 5);
  *(void *)(v12 + 32) = *((void *)v13 + 4);
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v13 + 7);
  *(void *)(v12 + 48) = *((void *)v13 + 6);
  *(void *)(v12 + 56) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v13 + 9);
  *(void *)(v12 + 64) = *((void *)v13 + 8);
  *(void *)(v12 + 72) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 80) = v13[80];
  uint64_t v19 = type metadata accessor for SingleVoicemailModel();
  uint64_t v20 = *(int *)(v19 + 40);
  uint64_t v21 = v12 + v20;
  uint64_t v22 = &v13[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v24(v12 + *(int *)(v19 + 44), &v13[*(int *)(v19 + 44)], v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowPlayVoicemailSingleItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591BDA04);
}

uint64_t sub_2591BDA04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      long long v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for SingleVoicemailModel();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShowPlayVoicemailSingleItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591BDB50);
}

void *sub_2591BDB50(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SingleVoicemailModel();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for ShowPlayVoicemailSingleItemView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SingleVoicemailModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t objectdestroyTm_10()
{
  unint64_t v1 = (int *)(type metadata accessor for ShowPlayVoicemailSingleItemView() - 8);
  unint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  int v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  int v5 = (char *)v2 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SingleVoicemailModel();
  uint64_t v7 = &v5[*(int *)(v6 + 40)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(&v5[*(int *)(v6 + 44)], v8);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShowPlayVoicemailSingleItemView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for ShowPlayVoicemailSingleItemView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return closure #1 in ShowPlayVoicemailSingleItemView.body.getter(v2);
}

uint64_t outlined destroy of ShowPlayVoicemailSingleItemView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShowPlayVoicemailSingleItemView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2591BDFB0()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void UpdateResponseCommand<>.submitUpdate(to:aceServiceInvoker:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v28 = a5;
  uint64_t v25 = a3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F65040]), sel_init);
  UUID.init()();
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = (void *)MEMORY[0x25A2D8AF0](v12, v14);
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAceId_, v15);

  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v17 = (void *)MEMORY[0x25A2D8AF0](v16);
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setViewId_, v17);

  uint64_t v18 = v27;
  uint64_t updated = dispatch thunk of UpdateResponseCommand.serializeData()();
  if (!v18)
  {
    uint64_t v21 = updated;
    unint64_t v22 = v20;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data._Representation(v21, v22);
    objc_msgSend(v11, sel_setStateData_, isa);

    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    AceServiceInvokerAsync.submitAndForget(_:)();
  }
}

void *EmergencyCountdownConfiguration.countdownUpdateFrequency.unsafeMutableAddressor()
{
  return &static EmergencyCountdownConfiguration.countdownUpdateFrequency;
}

uint64_t *NSNotificationName.counterPosition.unsafeMutableAddressor()
{
  if (one-time initialization token for counterPosition != -1) {
    swift_once();
  }
  return &static NSNotificationName.counterPosition;
}

uint64_t *EmergencyCountdownConfiguration.animationStepKey.unsafeMutableAddressor()
{
  if (one-time initialization token for animationStepKey != -1) {
    swift_once();
  }
  return &static EmergencyCountdownConfiguration.animationStepKey;
}

void *EmergencyCountdownConfiguration.countdownNumberOfSteps.unsafeMutableAddressor()
{
  return &static EmergencyCountdownConfiguration.countdownNumberOfSteps;
}

uint64_t static EmergencyCountdownConfiguration.countdownNumberOfSteps.getter()
{
  return 3;
}

uint64_t static EmergencyCountdownConfiguration.countdownUpdateFrequency.getter()
{
  return 2;
}

void one-time initialization function for animationStepKey()
{
  unk_26A37C406 = -4864;
}

uint64_t static EmergencyCountdownConfiguration.animationStepKey.getter()
{
  if (one-time initialization token for animationStepKey != -1) {
    swift_once();
  }
  uint64_t v0 = static EmergencyCountdownConfiguration.animationStepKey;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t one-time initialization function for counterPosition()
{
  uint64_t result = MEMORY[0x25A2D8AF0](0x507265746E756F63, 0xEF6E6F697469736FLL);
  static NSNotificationName.counterPosition = result;
  return result;
}

id static NSNotificationName.counterPosition.getter()
{
  if (one-time initialization token for counterPosition != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.counterPosition;
  return v0;
}

uint64_t one-time initialization function for shared()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  swift_allocObject();
  uint64_t result = EmergencyCountdownViewModel.().init()();
  static EmergencyCountdownViewModel.shared = result;
  return result;
}

uint64_t *EmergencyCountdownViewModel.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static EmergencyCountdownViewModel.shared;
}

uint64_t static EmergencyCountdownViewModel.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static EmergencyCountdownViewModel.shared.setter(uint64_t a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  static EmergencyCountdownViewModel.shared = a1;
  return swift_release();
}

uint64_t (*static EmergencyCountdownViewModel.shared.modify())()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_beginAccess();
  return static EmergencyCountdownViewModel.shared.modify;
}

uint64_t EmergencyCountdownViewModel.().init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v57 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  uint64_t v4 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  uint64_t v56 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  uint64_t v21 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter;
  uint64_t v60 = 3;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v22, v19, v16);
  uint64_t v23 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep;
  uint64_t v60 = 0;
  long long v54 = v15;
  Published.init(initialValue:)();
  uint64_t v56 = *(void *)(v56 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v56)(v23, v15, v12);
  uint64_t v24 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer;
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  id v25 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v26 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
  uint64_t v27 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  uint64_t v60 = v27;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, MEMORY[0x263F07CE8]);
  uint64_t v28 = ConnectablePublisher.autoconnect()();
  swift_release();
  uint64_t v60 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  uint64_t v29 = v50;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v24, v29, v52);
  uint64_t v30 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  uint64_t v32 = v53;
  v31(v30, v6, v53);
  uint64_t v33 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v33, v6, v32);
  uint64_t v34 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v34, v6, v32);
  uint64_t v35 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v35, v6, v32);
  uint64_t v36 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v36, v6, v32);
  uint64_t v37 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v37, v6, v32);
  uint64_t v38 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v38, v6, v32);
  uint64_t v39 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v39, v6, v32);
  uint64_t v40 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  Published.init(initialValue:)();
  v31(v40, v6, v32);
  uint64_t v41 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep;
  LOBYTE(v60) = 0;
  uint64_t v42 = v57;
  Published.init(initialValue:)();
  uint64_t v43 = v59;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v58 + 32);
  v44(v41, v42, v59);
  uint64_t v45 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser;
  LOBYTE(v60) = 0;
  Published.init(initialValue:)();
  v44(v45, v42, v43);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_sliderIsAtMax) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_startLocation) = 0;
  uint64_t v46 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation;
  uint64_t v60 = 0;
  uint64_t v47 = v54;
  Published.init(initialValue:)();
  ((void (*)(uint64_t, char *, uint64_t))v56)(v46, v47, v55);
  *(void *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_currentOffset) = 0;
  uint64_t v48 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_notificationCenter;
  *(void *)(v1 + v48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A00]), sel_init);
  *(void *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_initialized) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_timerCancelled) = 0;
  return v1;
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.counter()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.animationStep()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.timer()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.callingLabel()
{
  return Published.init(initialValue:)();
}

uint64_t property wrapper backing initializer of EmergencyCountdownViewModel.isCounterOnLastStep()
{
  return Published.init(initialValue:)();
}

uint64_t key path getter for EmergencyCountdownViewModel.counter : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 296))();
  *a2 = result;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.counter : EmergencyCountdownViewModel(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 304))(*a1);
}

uint64_t EmergencyCountdownViewModel.counter.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2591BF250@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 296))();
  *a2 = result;
  return result;
}

uint64_t sub_2591BF2A4(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 304))(*a1);
}

uint64_t EmergencyCountdownViewModel.counter.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.counter.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$counter : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>.Publisher);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 328))(v6);
}

uint64_t EmergencyCountdownViewModel.$counter.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter, &demangling cache variable for type metadata for Published<Int>);
}

uint64_t EmergencyCountdownViewModel.$counter.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Int>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter, &demangling cache variable for type metadata for Published<Int>);
}

uint64_t (*EmergencyCountdownViewModel.$counter.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

void key path getter for EmergencyCountdownViewModel.animationStep : EmergencyCountdownViewModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 344))();
}

uint64_t key path setter for EmergencyCountdownViewModel.animationStep : EmergencyCountdownViewModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 352))(*a1);
}

double EmergencyCountdownViewModel.animationStep.getter()
{
  return EmergencyCountdownViewModel.animationStep.getter();
}

{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_2591BF6F4(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 344))();
}

uint64_t sub_2591BF748(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 352))(*a1);
}

uint64_t EmergencyCountdownViewModel.animationStep.setter()
{
  return EmergencyCountdownViewModel.animationStep.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.animationStep.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$animationStep : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 376))(v6);
}

uint64_t EmergencyCountdownViewModel.$animationStep.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t EmergencyCountdownViewModel.$animationStep.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t (*EmergencyCountdownViewModel.$animationStep.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.timer : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 392))();
  *a2 = result;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.timer : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 400);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t EmergencyCountdownViewModel.timer.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2591BFBA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 392))();
  *a2 = result;
  return result;
}

uint64_t sub_2591BFBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 400);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t EmergencyCountdownViewModel.timer.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.timer.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$timer : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 424))(v6);
}

uint64_t EmergencyCountdownViewModel.$timer.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer, &demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
}

uint64_t EmergencyCountdownViewModel.$timer.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer, &demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
}

uint64_t (*EmergencyCountdownViewModel.$timer.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.sashTitle : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 440))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.sashTitle : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 448);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.sashTitle.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2591C0068@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 440))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C00BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 448);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.sashTitle.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.sashTitle.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$sashTitle : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 472))(v6);
}

uint64_t EmergencyCountdownViewModel.$sashTitle.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$sashTitle.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$sashTitle.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.cancelButtonText : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 488))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.cancelButtonText : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 496);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.cancelButtonText.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C04E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 488))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C053C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 496);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.cancelButtonText.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.cancelButtonText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$cancelButtonText : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 520))(v6);
}

uint64_t EmergencyCountdownViewModel.$cancelButtonText.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$cancelButtonText.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$cancelButtonText.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.cancelledText : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 536))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.cancelledText : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 544);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.cancelledText.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C0968@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 536))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C09BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 544);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.cancelledText.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.cancelledText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$cancelledText : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 568))(v6);
}

uint64_t EmergencyCountdownViewModel.$cancelledText.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$cancelledText.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$cancelledText.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.callButtonText : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 584))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.callButtonText : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 592);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.callButtonText.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C0DE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 584))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C0E3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 592);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.callButtonText.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.callButtonText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$callButtonText : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 616))(v6);
}

uint64_t EmergencyCountdownViewModel.$callButtonText.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$callButtonText.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$callButtonText.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.dialog : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 632))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.dialog : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 640);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.dialog.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C1268@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 632))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C12BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 640);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.dialog.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.dialog.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$dialog : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 664))(v6);
}

uint64_t EmergencyCountdownViewModel.$dialog.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$dialog.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$dialog.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.localeIdentifier : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 680))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.localeIdentifier : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 688);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.localeIdentifier.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C16E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 680))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C173C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 688);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.localeIdentifier.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.localeIdentifier.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$localeIdentifier : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 712))(v6);
}

uint64_t EmergencyCountdownViewModel.$localeIdentifier.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$localeIdentifier.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$localeIdentifier.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.callingLabel : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 728))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.callingLabel : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 736);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.callingLabel.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C1B68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 728))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C1BBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 736);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.callingLabel.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.callingLabel.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$callingLabel : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 760))(v6);
}

uint64_t EmergencyCountdownViewModel.$callingLabel.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$callingLabel.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$callingLabel.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.emergencyServicesLabel : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 776))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.emergencyServicesLabel : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 784);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.emergencyServicesLabel.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C1FE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 776))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C203C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 784);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.emergencyServicesLabel.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.emergencyServicesLabel.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$emergencyServicesLabel : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 808))(v6);
}

uint64_t EmergencyCountdownViewModel.$emergencyServicesLabel.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$emergencyServicesLabel.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$emergencyServicesLabel.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.sos : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 824))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.sos : EmergencyCountdownViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 832);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.sos.getter()
{
  return EmergencyCountdownViewModel.sashTitle.getter();
}

uint64_t sub_2591C24D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 824))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2591C2528(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 832);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t EmergencyCountdownViewModel.sos.setter()
{
  return EmergencyCountdownViewModel.sashTitle.setter();
}

uint64_t (*EmergencyCountdownViewModel.sos.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$sos : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 856))(v6);
}

uint64_t EmergencyCountdownViewModel.$sos.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos, &demangling cache variable for type metadata for Published<String>);
}

uint64_t EmergencyCountdownViewModel.$sos.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos, &demangling cache variable for type metadata for Published<String>);
}

uint64_t (*EmergencyCountdownViewModel.$sos.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.isCounterOnLastStep : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 872))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.isCounterOnLastStep : EmergencyCountdownViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 880))(*a1);
}

uint64_t EmergencyCountdownViewModel.isCounterOnLastStep.getter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2591C29B0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 872))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2591C2A08(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 880))(*a1);
}

uint64_t EmergencyCountdownViewModel.isCounterOnLastStep.setter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*EmergencyCountdownViewModel.isCounterOnLastStep.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$isCounterOnLastStep : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 904))(v6);
}

uint64_t EmergencyCountdownViewModel.$isCounterOnLastStep.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t EmergencyCountdownViewModel.$isCounterOnLastStep.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t (*EmergencyCountdownViewModel.$isCounterOnLastStep.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t key path getter for EmergencyCountdownViewModel.timerCancelledByUser : EmergencyCountdownViewModel@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 920))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for EmergencyCountdownViewModel.timerCancelledByUser : EmergencyCountdownViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 928))(*a1);
}

uint64_t EmergencyCountdownViewModel.timerCancelledByUser.getter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.getter();
}

uint64_t sub_2591C2E64@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 920))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2591C2EBC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 928))(*a1);
}

uint64_t EmergencyCountdownViewModel.timerCancelledByUser.setter()
{
  return EmergencyCountdownViewModel.isCounterOnLastStep.setter();
}

uint64_t (*EmergencyCountdownViewModel.timerCancelledByUser.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

uint64_t key path setter for EmergencyCountdownViewModel.$timerCancelledByUser : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 952))(v6);
}

uint64_t EmergencyCountdownViewModel.$timerCancelledByUser.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t EmergencyCountdownViewModel.$timerCancelledByUser.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t (*EmergencyCountdownViewModel.$timerCancelledByUser.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

uint64_t EmergencyCountdownViewModel.sliderIsAtMax.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_sliderIsAtMax);
  swift_beginAccess();
  return *v1;
}

uint64_t EmergencyCountdownViewModel.sliderIsAtMax.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_sliderIsAtMax);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.sliderIsAtMax.modify())()
{
  return static EmergencyCountdownViewModel.shared.modify;
}

double EmergencyCountdownViewModel.startLocation.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_startLocation;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t EmergencyCountdownViewModel.startLocation.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_startLocation);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.startLocation.modify())()
{
  return static EmergencyCountdownViewModel.shared.modify;
}

void key path getter for EmergencyCountdownViewModel.currentTranslation : EmergencyCountdownViewModel(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 1016))();
}

uint64_t key path setter for EmergencyCountdownViewModel.currentTranslation : EmergencyCountdownViewModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 1024))(*a1);
}

double EmergencyCountdownViewModel.currentTranslation.getter()
{
  return EmergencyCountdownViewModel.animationStep.getter();
}

void sub_2591C3568(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 1016))();
}

uint64_t sub_2591C35BC(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 1024))(*a1);
}

uint64_t EmergencyCountdownViewModel.currentTranslation.setter()
{
  return EmergencyCountdownViewModel.animationStep.setter();
}

uint64_t (*EmergencyCountdownViewModel.currentTranslation.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return EmergencyCountdownViewModel.counter.modify;
}

void EmergencyCountdownViewModel.counter.modify(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t key path setter for EmergencyCountdownViewModel.$currentTranslation : EmergencyCountdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  MEMORY[0x270FA5388](v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 1048))(v6);
}

uint64_t EmergencyCountdownViewModel.$currentTranslation.getter()
{
  return EmergencyCountdownViewModel.$counter.getter((uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t EmergencyCountdownViewModel.$counter.getter(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t EmergencyCountdownViewModel.$currentTranslation.setter(uint64_t a1)
{
  return EmergencyCountdownViewModel.$counter.setter(a1, &demangling cache variable for type metadata for Published<CGFloat>.Publisher, (uint64_t)&OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation, &demangling cache variable for type metadata for Published<CGFloat>);
}

uint64_t EmergencyCountdownViewModel.$counter.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*EmergencyCountdownViewModel.$currentTranslation.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  Published.projectedValue.getter();
  swift_endAccess();
  return EmergencyCountdownViewModel.$counter.modify;
}

void EmergencyCountdownViewModel.$counter.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

double EmergencyCountdownViewModel.currentOffset.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_currentOffset;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t EmergencyCountdownViewModel.currentOffset.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_currentOffset);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.currentOffset.modify())()
{
  return static SingleResultVoicemailModel.resultViewID.modify;
}

id EmergencyCountdownViewModel.notificationCenter.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_notificationCenter);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void EmergencyCountdownViewModel.notificationCenter.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_notificationCenter);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*EmergencyCountdownViewModel.notificationCenter.modify())()
{
  return static EmergencyCountdownViewModel.shared.modify;
}

id EmergencyCountdownViewModel.numberFormatter.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  if (v7)
  {
    id v8 = *(id *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    (*(void (**)(void))(*(void *)v0 + 680))();
    Locale.init(identifier:)();
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setLocale_, isa);

    objc_msgSend(v9, sel_setNumberStyle_, 0);
    id v11 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v9;
    id v8 = v9;

    uint64_t v7 = 0;
  }
  id v12 = v7;
  return v8;
}

uint64_t EmergencyCountdownViewModel.numberFormatter.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter) = a1;
  return MEMORY[0x270F9A758]();
}

void (*EmergencyCountdownViewModel.numberFormatter.modify(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = EmergencyCountdownViewModel.numberFormatter.getter();
  return EmergencyCountdownViewModel.numberFormatter.modify;
}

void EmergencyCountdownViewModel.numberFormatter.modify(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter);
  *(void *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter) = v2;
}

uint64_t EmergencyCountdownViewModel.timerCancelled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_timerCancelled);
  swift_beginAccess();
  return *v1;
}

uint64_t EmergencyCountdownViewModel.timerCancelled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_timerCancelled);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*EmergencyCountdownViewModel.timerCancelled.modify())()
{
  return static EmergencyCountdownViewModel.shared.modify;
}

uint64_t EmergencyCountdownViewModel.isSmartEnabled.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v4, (uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  uint64_t v5 = type metadata accessor for EmergencyCountdownModel();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5))
  {
    uint64_t v6 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    Loggable.wrappedValue.getter();
    uint64_t v6 = v8[7];
  }
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  return v6;
}

uint64_t EmergencyCountdownViewModel.configure(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v27 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  outlined init with copy of EmergencyCountdownModel(a1, (uint64_t)&v27 - v14, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
  uint64_t v16 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v15, (uint64_t)v13, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  uint64_t v17 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined assign with take of EmergencyCountdownModel?((uint64_t)v13, v17);
  swift_endAccess();
  (*(void (**)(uint64_t))(*(void *)v2 + 304))(3);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  id v18 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v19 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  uint64_t v20 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v9, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  uint64_t v28 = v20;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, MEMORY[0x263F07CE8]);
  uint64_t v21 = ConnectablePublisher.autoconnect()();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v2 + 400))(v21);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 448))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 496))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 544))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 592))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 640))(v28, v29);
  (*(void (**)(void))(*(void *)v2 + 1168))(0);
  (*(void (**)(void))(*(void *)v2 + 928))(0);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 688))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 736))(v28, v29);
  Loggable.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 784))(v28, v29);
  Loggable.wrappedValue.getter();
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v2 + 832))(v28, v29);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, double))(*(void *)v2 + 352))(v22, 0.0);
  uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v2 + 1112))(v23);
  (*(void (**)(void))(*(void *)v2 + 680))();
  Locale.init(identifier:)();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v27);
  objc_msgSend(v24, sel_setLocale_, isa);

  (*(void (**)(id))(*(void *)v2 + 1096))(objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A00]), sel_init));
  return (*(uint64_t (**)(void))(*(void *)v2 + 880))(0);
}

uint64_t outlined assign with take of EmergencyCountdownModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall EmergencyCountdownViewModel.resetCounter()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25915D000, v3, v4, "#EmergencyCountdownView resetting counter", v5, 2u);
    MEMORY[0x25A2D96D0](v5, -1, -1);
  }

  (*(void (**)(uint64_t))(*(void *)v1 + 304))(3);
  uint64_t v6 = *(void (**)(__n128))(*(void *)v1 + 352);
  v7.n128_u64[0] = 0;
  v6(v7);
}

uint64_t EmergencyCountdownViewModel.snippetHasAnimatedCounter(context:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v4, (uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  uint64_t v5 = type metadata accessor for EmergencyCountdownModel();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5))
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    char v6 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    Loggable.wrappedValue.getter();
    int v7 = v9[7];
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v3, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    if (v7 == 1 && (dispatch thunk of Context.currentIdiom.getter(), (VRXIdiom.isCarPlay.getter() & 1) == 0)) {
      char v6 = dispatch thunk of Context.isInAmbient.getter() ^ 1;
    }
    else {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

void EmergencyCountdownViewModel.updateAnimationStep(currentStep:)(__n128 a1)
{
  a1.n128_f64[0] = a1.n128_f64[0] + 1.0;
  if (a1.n128_f64[0] > 3.0) {
    a1.n128_f64[0] = 3.0;
  }
  (*(void (**)(__n128))(*(void *)v1 + 352))(a1);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  swift_retain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    (*(void (**)(void))(*(void *)v1 + 344))();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl(&dword_25915D000, v3, v4, "#EmergencyCountdownView updated animation step to %f", v5, 0xCu);
    MEMORY[0x25A2D96D0](v5, -1, -1);
  }
  else
  {

    swift_release();
  }
}

uint64_t EmergencyCountdownViewModel.updateCounter(actionHandler:currentAnimationStep:context:)(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v48 = a1;
  uint64_t v49 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v53 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v51 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v54 = type metadata accessor for DispatchTime();
  uint64_t v50 = *(void *)(v54 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v54);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v43 - v19;
  if (a3)
  {
LABEL_9:
    uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 296))(v18);
    a2 = v22 - 1;
    if (!__OFSUB__(v22, 1)) {
      goto LABEL_10;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_12;
  }
  if ((~a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (*(double *)&a2 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(double *)&a2 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v21 = 3 - (uint64_t)*(double *)&a2;
  if (__OFSUB__(3, (uint64_t)*(double *)&a2))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  a2 = 2 - (uint64_t)*(double *)&a2;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  if (*(double *)&a2 != 0.0)
  {
LABEL_15:
    uint64_t v28 = *(uint64_t (**)(uint64_t))(*(void *)v5 + 304);
    return v28(a2);
  }
  uint64_t v44 = v11;
  uint64_t v45 = v9;
  uint64_t v46 = v8;
  if (one-time initialization token for phoneSnippetUI != -1) {
    goto LABEL_26;
  }
LABEL_12:
  uint64_t v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_25915D000, v24, v25, "#EmergencyCountdownView setting isCounterOnLastStep = true", v26, 2u);
    MEMORY[0x25A2D96D0](v26, -1, -1);
  }

  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 880))(1);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v5 + 1160))(v27)) {
    goto LABEL_15;
  }
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_25915D000, v30, v31, "#EmergencyCountdownView counter reached 0 -- executing confirm action", v32, 2u);
    MEMORY[0x25A2D96D0](v32, -1, -1);
  }

  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v43 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  MEMORY[0x25A2D86F0](v17, 0.25);
  uint64_t v50 = *(void *)(v50 + 8);
  ((void (*)(char *, uint64_t))v50)(v17, v54);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v48, (uint64_t)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for StandardActionHandler?);
  unint64_t v33 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v34 = (v14 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v5;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v33, &demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v36 = v49;
  *(void *)(v35 + v34) = v49;
  aBlock[4] = partial apply for closure #1 in EmergencyCountdownViewModel.updateCounter(actionHandler:currentAnimationStep:context:);
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor;
  uint64_t v37 = _Block_copy(aBlock);
  swift_retain();
  id v38 = v36;
  uint64_t v39 = v51;
  static DispatchQoS.unspecified.getter();
  uint64_t v55 = MEMORY[0x263F8EE78];
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], &demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v40 = v53;
  uint64_t v41 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v42 = (void *)v43;
  MEMORY[0x25A2D8C60](v20, v39, v40, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v44);
  ((void (*)(char *, uint64_t))v50)(v20, v54);
  return swift_release();
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable () -> ()(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void EmergencyCountdownViewModel.triggerCounterUpdate(actionHandler:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((*(uint64_t (**)(uint64_t))(*(void *)v2 + 1208))(a2))
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.phoneSnippetUI);
    int v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_25915D000, v7, v8, "#EmergencyCountdownView sending notification to update counter position", v9, 2u);
      MEMORY[0x25A2D96D0](v9, -1, -1);
    }

    uint64_t v10 = (void *)(*(uint64_t (**)(void))(*(void *)v3 + 1088))();
    if (one-time initialization token for counterPosition != -1) {
      swift_once();
    }
    uint64_t v11 = static NSNotificationName.counterPosition;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2591FFD20;
    if (one-time initialization token for animationStepKey != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = AnyHashable.init<A>(_:)();
    double v14 = (*(double (**)(uint64_t))(*(void *)v3 + 344))(v13);
    *(void *)(inited + 96) = MEMORY[0x263F8EF38];
    *(double *)(inited + 72) = v14;
    specialized Dictionary.init(dictionaryLiteral:)(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_postNotificationName_object_userInfo_, v11, 0, isa);
  }
  else
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_25915D000, v17, v18, "#EmergencyCountdownView updating counter without animation", v19, 2u);
      MEMORY[0x25A2D96D0](v19, -1, -1);
    }

    uint64_t v20 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)v3 + 1224);
    v20(a1, 0, 1, a2);
  }
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v6, (uint64_t)v15, &demangling cache variable for type metadata for (AnyHashable, Any));
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t EmergencyCountdownViewModel.localizedCounter.getter()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 1112))();
  uint64_t v2 = (void (**)(void))(*(void *)v0 + 296);
  uint64_t v3 = *v2;
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, ((uint64_t (*)(void))*v2)());
  id v5 = objc_msgSend(v1, sel_stringFromNumber_, v4);

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v6;
  }
  else
  {
    v3();
    return dispatch thunk of CustomStringConvertible.description.getter();
  }
}

Swift::Void __swiftcall EmergencyCountdownViewModel.onSiriDismissed()()
{
  uint64_t v1 = v0;
  if (((*(uint64_t (**)(void))(*(void *)v0 + 1160))() & 1) == 0)
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_25915D000, v3, v4, "#EmergencyCountdownView Cancelling Timer because Siri was dismissed", v5, 2u);
      MEMORY[0x25A2D96D0](v5, -1, -1);
    }

    uint64_t v6 = *(void (**)(void))(*(void *)v1 + 1272);
    v6();
  }
}

void EmergencyCountdownViewModel.callAction(actionHandler:context:)(uint64_t a1)
{
  uint64_t v60 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  os_log_type_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v5 - 8);
  int v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for EmergencyCountdownModel();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v20, (uint64_t)v15, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_25915D000, v22, v23, "#EmergencyCountdownViewModel model was not set. Cannot keep executing", v24, 2u);
      MEMORY[0x25A2D96D0](v24, -1, -1);
    }
  }
  else
  {
    uint64_t v25 = outlined init with take of EmergencyCountdownModel((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
    (*(void (**)(uint64_t))(*(void *)v1 + 1272))(v25);
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v57 = v4;
    uint64_t v58 = v19;
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_25915D000, v27, v28, "#EmergencyCountdownViewModel performing call action and dismissing Siri", v29, 2u);
      MEMORY[0x25A2D96D0](v29, -1, -1);
    }

    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v60, (uint64_t)v12, &demangling cache variable for type metadata for StandardActionHandler?);
    uint64_t v30 = type metadata accessor for StandardActionHandler();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
    int v33 = v32(v12, 1, v30);
    uint64_t v34 = MEMORY[0x263F771C8];
    uint64_t v35 = (unsigned int *)MEMORY[0x263F77168];
    if (v33 == 1)
    {
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      uint64_t v36 = swift_allocObject();
      uint64_t v56 = v32;
      uint64_t v37 = v36;
      *(_OWORD *)(v36 + 16) = xmmword_2591FFD20;
      id v38 = (uint64_t *)(v36 + 32);
      uint64_t v39 = v30;
      uint64_t v40 = v7;
      uint64_t v41 = v31;
      uint64_t v42 = type metadata accessor for Command();
      *(void *)(v37 + 56) = v42;
      *(void *)(v37 + 64) = v34;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
      *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
      uint64_t v44 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104);
      uint64_t v45 = v42;
      uint64_t v31 = v41;
      int v7 = v40;
      uint64_t v30 = v39;
      v44(boxed_opaque_existential_1, *MEMORY[0x263F77168], v45);
      uint64_t v32 = v56;
      ActionProperty.init(_:)();
      uint64_t v46 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v7, 0, 1, v46);
      uint64_t v47 = type metadata accessor for InteractionType();
      uint64_t v48 = (uint64_t)v57;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v57, 1, 1, v47);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v48, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ActionProperty?);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v39);
      uint64_t v35 = (unsigned int *)MEMORY[0x263F77168];
    }
    uint64_t v49 = v59;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v60, v59, &demangling cache variable for type metadata for StandardActionHandler?);
    if (v32((char *)v49, 1, v30) == 1)
    {
      outlined destroy of EmergencyCountdownModel((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v49, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_2591FFD20;
      uint64_t v51 = type metadata accessor for Command();
      *(void *)(v50 + 56) = v51;
      *(void *)(v50 + 64) = MEMORY[0x263F771C8];
      uint64_t v52 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v50 + 32));
      *uint64_t v52 = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F64F10]), sel_init);
      *((unsigned char *)v52 + 8) = 0;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v52, *v35, v51);
      ActionProperty.init(_:)();
      uint64_t v53 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v7, 0, 1, v53);
      uint64_t v54 = type metadata accessor for InteractionType();
      uint64_t v55 = (uint64_t)v57;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v57, 1, 1, v54);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v55, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ActionProperty?);
      outlined destroy of EmergencyCountdownModel((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v49, v30);
    }
  }
}

void EmergencyCountdownViewModel.cancelAction(actionHandler:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v5 - 8);
  int v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EmergencyCountdownModel?);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EmergencyCountdownModel();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v1 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model;
  swift_beginAccess();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v18, (uint64_t)v13, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v13, &demangling cache variable for type metadata for EmergencyCountdownModel?);
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_25915D000, v20, v21, "#EmergencyCountdownViewModel model was not set. Cannot keep executing", v22, 2u);
      MEMORY[0x25A2D96D0](v22, -1, -1);
    }
  }
  else
  {
    uint64_t v23 = outlined init with take of EmergencyCountdownModel((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
    (*(void (**)(uint64_t))(*(void *)v1 + 1272))(v23);
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_25915D000, v25, v26, "#EmergencyCountdownViewModel performing cancel action (Direct invocation)", v27, 2u);
      MEMORY[0x25A2D96D0](v27, -1, -1);
    }

    outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, (uint64_t)v10, &demangling cache variable for type metadata for StandardActionHandler?);
    uint64_t v28 = type metadata accessor for StandardActionHandler();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 1, v28) == 1)
    {
      outlined destroy of EmergencyCountdownModel((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_2591FFD20;
      uint64_t v31 = type metadata accessor for Command();
      uint64_t v32 = MEMORY[0x263F771C8];
      *(void *)(v30 + 56) = v31;
      *(void *)(v30 + 64) = v32;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v30 + 32));
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
      *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v31);
      ActionProperty.init(_:)();
      uint64_t v34 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v7, 0, 1, v34);
      uint64_t v35 = type metadata accessor for InteractionType();
      uint64_t v36 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v37, 1, 1, v35);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ActionProperty?);
      outlined destroy of EmergencyCountdownModel((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v28);
    }
  }
}

Swift::Void __swiftcall EmergencyCountdownViewModel.cancelTimerAndReset()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25915D000, v3, v4, "#EmergencyCountdownViewModel Cancelling Timer", v5, 2u);
    MEMORY[0x25A2D96D0](v5, -1, -1);
  }

  (*(void (**)(void))(*(void *)v1 + 392))();
  Publishers.Autoconnect.upstream.getter();
  swift_release();
  NSTimer.TimerPublisher.connect()();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  dispatch thunk of Cancellable.cancel()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  uint64_t v6 = *(void (**)(uint64_t))(*(void *)v1 + 1168);
  v6(1);
  v6(0);
  (*(void (**)(void))(*(void *)v1 + 928))(0);
}

Swift::Void __swiftcall EmergencyCountdownViewModel.restartTimer()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x270FA5388](v2 - 8);
  os_log_type_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_25915D000, v6, v7, "#EmergencyCountdownViewModel restarting timer", v8, 2u);
    MEMORY[0x25A2D96D0](v8, -1, -1);
  }

  (*(void (**)(void))(*(void *)v1 + 1168))(0);
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  id v9 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v10 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v13[1] = v11;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, MEMORY[0x263F07CE8]);
  uint64_t v12 = ConnectablePublisher.autoconnect()();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v1 + 400))(v12);
}

uint64_t EmergencyCountdownViewModel.deinit()
{
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel_model, &demangling cache variable for type metadata for EmergencyCountdownModel?);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__counter;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Int>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__animationStep;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGFloat>);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timer;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sashTitle;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelButtonText, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__cancelledText, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callButtonText, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__dialog, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__localeIdentifier, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__callingLabel, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__emergencyServicesLabel, v9);
  v10(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__sos, v9);
  uint64_t v11 = v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__isCounterOnLastStep;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__timerCancelledByUser, v12);
  v5(v0 + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel__currentTranslation, v4);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14PhoneSnippetUI27EmergencyCountdownViewModel____lazy_storage___numberFormatter));
  return v0;
}

uint64_t EmergencyCountdownViewModel.__deallocating_deinit()
{
  EmergencyCountdownViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance EmergencyCountdownViewModel@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of EmergencyCountdownView.viewModel()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t EmergencyCountdownView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for EmergencyCountdownView(0);
  ActionHandler.init()();
  uint64_t v6 = *(int *)(v5 + 24);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v7 = (uint64_t *)((char *)a2 + v6);
  swift_beginAccess();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  swift_retain();
  *uint64_t v7 = ObservedObject.init(wrappedValue:)();
  v7[1] = v8;
  return outlined init with take of EmergencyCountdownModel(a1, (uint64_t)a2 + *(int *)(v5 + 28), (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
}

uint64_t EmergencyCountdownView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[AnyHashable : Any]>.Publisher);
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v60 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EmergencyCountdownView(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v64 = v5 - 8;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>>);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v11 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>)
      - 8;
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>)
      - 8;
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>);
  MEMORY[0x270FA5388](v56);
  uint64_t v59 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>>);
  MEMORY[0x270FA5388](v57);
  uint64_t v58 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in EmergencyCountdownView.body.getter(v2, (uint64_t)v10);
  lazy protocol witness table accessor for type Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>> and conformance <A> Group<A>();
  View.privacySensitive(_:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, &demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>>);
  uint64_t v49 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for EmergencyCountdownView;
  outlined init with copy of EmergencyCountdownModel((uint64_t)v2, v49, type metadata accessor for EmergencyCountdownView);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v20 = v18 | 7;
  uint64_t v21 = swift_allocObject();
  outlined init with take of EmergencyCountdownModel((uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v19, type metadata accessor for EmergencyCountdownView);
  uint64_t v22 = (uint64_t)v51;
  uint64_t v23 = v55;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v51, v13, v55);
  uint64_t v24 = (void (**)())(v22 + *(int *)(v54 + 44));
  uint8_t *v24 = partial apply for closure #2 in EmergencyCountdownView.body.getter;
  v24[1] = (void (*)())v21;
  v24[2] = 0;
  void v24[3] = 0;
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(**(void **)((char *)v2 + *(int *)(v64 + 32) + 8) + 392))(v25);
  uint64_t v27 = v2;
  uint64_t v28 = v49;
  outlined init with copy of EmergencyCountdownModel((uint64_t)v27, v49, v50);
  uint64_t v55 = v19 + v7;
  uint64_t v64 = v20;
  uint64_t v29 = swift_allocObject();
  uint64_t v54 = v19;
  uint64_t v30 = (uint64_t)v52;
  outlined init with take of EmergencyCountdownModel(v28, v29 + v19, type metadata accessor for EmergencyCountdownView);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v22, v30, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>);
  uint64_t v31 = v53;
  *(void *)(v30 + *(int *)(v53 + 60)) = v26;
  uint64_t v32 = (uint64_t (**)(uint64_t))(v30 + *(int *)(v31 + 64));
  uint8_t *v32 = partial apply for closure #3 in EmergencyCountdownView.body.getter;
  v32[1] = (uint64_t (*)(uint64_t))v29;
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v22, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>);
  if (!*v27) {
    goto LABEL_4;
  }
  id v33 = *v27;
  uint64_t updated = dispatch thunk of Context.siriEventUpdatePublisher.getter();

  outlined init with copy of EmergencyCountdownModel((uint64_t)v27, v28, type metadata accessor for EmergencyCountdownView);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v54;
  outlined init with take of EmergencyCountdownModel(v28, v35 + v54, type metadata accessor for EmergencyCountdownView);
  uint64_t v37 = v59;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v30, v59, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>);
  uint64_t v38 = v56;
  *(void *)(v37 + *(int *)(v56 + 52)) = updated;
  uint64_t v39 = (uint64_t (**)(uint64_t))(v37 + *(int *)(v38 + 56));
  *uint64_t v39 = partial apply for closure #4 in EmergencyCountdownView.body.getter;
  v39[1] = (uint64_t (*)(uint64_t))v35;
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v30, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>);
  if (*v27)
  {
    id v40 = *v27;
    uint64_t v41 = v60;
    dispatch thunk of Context.$sharedState.getter();

    outlined init with copy of EmergencyCountdownModel((uint64_t)v27, v28, type metadata accessor for EmergencyCountdownView);
    uint64_t v42 = swift_allocObject();
    outlined init with take of EmergencyCountdownModel(v28, v42 + v36, type metadata accessor for EmergencyCountdownView);
    uint64_t v43 = v58;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v37, v58, &demangling cache variable for type metadata for SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>);
    uint64_t v44 = v57;
    uint64_t v46 = v61;
    uint64_t v45 = v62;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v43 + *(int *)(v57 + 52), v41, v62);
    uint64_t v47 = (uint64_t (**)(uint64_t))(v43 + *(int *)(v44 + 56));
    char *v47 = partial apply for closure #5 in EmergencyCountdownView.body.getter;
    v47[1] = (uint64_t (*)(uint64_t))v42;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v45);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v37, &demangling cache variable for type metadata for SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>);
    return outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v43, v63, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>>);
  }
  else
  {
LABEL_4:
    type metadata accessor for Context();
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in EmergencyCountdownView.body.getter@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v43 = type metadata accessor for AmbientEmergencyCountdown();
  MEMORY[0x270FA5388](v43);
  uint64_t v4 = (uint64_t *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = type metadata accessor for SmartEmergencyCountdown();
  MEMORY[0x270FA5388](v38);
  uint64_t v36 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for EmergencyCountdownView(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (id *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>.Storage);
  MEMORY[0x270FA5388](v40);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>.Storage);
  MEMORY[0x270FA5388](v37);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>);
  MEMORY[0x270FA5388](v41);
  uint64_t v39 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for CarPlayEmergencyCountdown();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t *)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*a1)
  {
    id v17 = *a1;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter())
    {
      type metadata accessor for Context();
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
      swift_retain();
      *uint64_t v16 = EnvironmentObject.init()();
      v16[1] = v18;
      type metadata accessor for EmergencyCountdownViewModel(0);
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
      void v16[2] = ObservedObject.init(wrappedValue:)();
      v16[3] = v19;
      ActionHandler.init()();
      *(uint64_t *)((char *)v16 + v14[7]) = 0x4024000000000000;
      *(uint64_t *)((char *)v16 + v14[8]) = 0x4052000000000000;
      *(uint64_t *)((char *)v16 + v14[9]) = 0x4058000000000000;
      outlined init with copy of EmergencyCountdownModel((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CarPlayEmergencyCountdown);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type CarPlayEmergencyCountdown and conformance CarPlayEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for CarPlayEmergencyCountdown);
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type SmartEmergencyCountdown and conformance SmartEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for SmartEmergencyCountdown);
      uint64_t v20 = (uint64_t)v39;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v20, (uint64_t)v10, &demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type AmbientEmergencyCountdown and conformance AmbientEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for AmbientEmergencyCountdown);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v20, &demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>);
      uint64_t v21 = (uint64_t)v16;
      uint64_t v22 = type metadata accessor for CarPlayEmergencyCountdown;
      return outlined destroy of EmergencyCountdownModel(v21, (uint64_t (*)(void))v22);
    }
    char v23 = (*(uint64_t (**)(void))(**(void **)((char *)a1 + *(int *)(v6 + 24) + 8) + 1184))();
    outlined init with copy of EmergencyCountdownModel((uint64_t)a1, (uint64_t)v8, type metadata accessor for EmergencyCountdownView);
    if ((v23 & 1) == 0)
    {
      outlined destroy of EmergencyCountdownModel((uint64_t)v8, type metadata accessor for EmergencyCountdownView);
      goto LABEL_9;
    }
    if (*v8)
    {
      id v24 = *v8;
      char v25 = dispatch thunk of Context.isInAmbient.getter();

      outlined destroy of EmergencyCountdownModel((uint64_t)v8, type metadata accessor for EmergencyCountdownView);
      if ((v25 & 1) == 0)
      {
        type metadata accessor for Context();
        lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
        swift_retain();
        uint64_t v26 = EnvironmentObject.init()();
        uint64_t v27 = (uint64_t)v36;
        *uint64_t v36 = v26;
        *(void *)(v27 + 8) = v28;
        uint64_t v29 = v38;
        ActionHandler.init()();
        uint64_t v30 = (uint64_t *)(v27 + *(int *)(v29 + 24));
        type metadata accessor for EmergencyCountdownViewModel(0);
        lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
        uint64_t *v30 = ObservedObject.init(wrappedValue:)();
        v30[1] = v31;
        outlined init with copy of EmergencyCountdownModel(v27, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SmartEmergencyCountdown);
        swift_storeEnumTagMultiPayload();
        lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type CarPlayEmergencyCountdown and conformance CarPlayEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for CarPlayEmergencyCountdown);
        lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type SmartEmergencyCountdown and conformance SmartEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for SmartEmergencyCountdown);
        uint64_t v32 = (uint64_t)v39;
        _ConditionalContent<>.init(storage:)();
        outlined init with copy of SearchCallHistoryBinaryButtonModel?(v32, (uint64_t)v10, &demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>);
        swift_storeEnumTagMultiPayload();
        lazy protocol witness table accessor for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>();
        lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type AmbientEmergencyCountdown and conformance AmbientEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for AmbientEmergencyCountdown);
        _ConditionalContent<>.init(storage:)();
        outlined destroy of SearchCallHistoryBinaryButtonModel?(v32, &demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>);
        uint64_t v21 = v27;
        uint64_t v22 = type metadata accessor for SmartEmergencyCountdown;
        return outlined destroy of EmergencyCountdownModel(v21, (uint64_t (*)(void))v22);
      }
LABEL_9:
      type metadata accessor for EmergencyCountdownViewModel(0);
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
      swift_retain();
      *uint64_t v4 = ObservedObject.init(wrappedValue:)();
      v4[1] = v33;
      type metadata accessor for Context();
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
      v4[2] = EnvironmentObject.init()();
      v4[3] = v34;
      ActionHandler.init()();
      outlined init with copy of EmergencyCountdownModel((uint64_t)v4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AmbientEmergencyCountdown);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type AmbientEmergencyCountdown and conformance AmbientEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for AmbientEmergencyCountdown);
      _ConditionalContent<>.init(storage:)();
      uint64_t v21 = (uint64_t)v4;
      uint64_t v22 = type metadata accessor for AmbientEmergencyCountdown;
      return outlined destroy of EmergencyCountdownModel(v21, (uint64_t (*)(void))v22);
    }
  }
  type metadata accessor for Context();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void closure #2 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyCountdownView(0);
  (*(void (**)(uint64_t))(**(void **)(a1 + *(int *)(v2 + 24) + 8) + 1192))(a1 + *(int *)(v2 + 28));
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.phoneSnippetUI);
  oslog = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_25915D000, oslog, v4, "#EmergencyCountdownView countdown appeared", v5, 2u);
    MEMORY[0x25A2D96D0](v5, -1, -1);
  }
}

uint64_t closure #3 in EmergencyCountdownView.body.getter(uint64_t a1, id *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_25915D000, v7, v8, "#EmergencyCountdownView triggering timer update", v9, 2u);
    MEMORY[0x25A2D96D0](v9, -1, -1);
  }

  uint64_t v10 = *(uint64_t *)((char *)a2 + *(int *)(type metadata accessor for EmergencyCountdownView(0) + 24) + 8);
  ActionHandler.wrappedValue.getter();
  if (*a2)
  {
    uint64_t v11 = *(void (**)(char *, id))(*(void *)v10 + 1232);
    id v12 = *a2;
    v11(v5, v12);

    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v5, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void closure #4 in EmergencyCountdownView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Context.Event();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v23 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint8_t **)((char *)&v23 - v12);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14((char *)&v23 - v12, a1, v4);
  if ((*(unsigned int (**)(void *, uint64_t))(v5 + 88))(v13, v4) == *MEMORY[0x263F77950])
  {
    (*(void (**)(void *, uint64_t))(v5 + 96))(v13, v4);
    if (*v13 == 3)
    {
      uint64_t v15 = type metadata accessor for EmergencyCountdownView(0);
      (*(void (**)(void))(**(void **)(a2 + *(int *)(v15 + 24) + 8) + 1248))();
      return;
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v5 + 8))(v13, v4);
  }
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
  v14(v11, a1, v4);
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v26 = v24;
    *(_DWORD *)uint64_t v19 = 136315138;
    char v23 = v19 + 4;
    v14(v8, (uint64_t)v11, v4);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    _os_log_impl(&dword_25915D000, v17, v18, "#EmergencyCountdownView received event from context=%s", v19, 0xCu);
    uint64_t v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x25A2D96D0](v22, -1, -1);
    MEMORY[0x25A2D96D0](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
}

uint64_t closure #5 in EmergencyCountdownView.body.getter(uint64_t a1, uint64_t a2)
{
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction();
  swift_bridgeObjectRetain();
  UpdateResponseCommand<>.init(_:)();
  uint64_t v3 = a2 + *(int *)(type metadata accessor for EmergencyCountdownView(0) + 24);
  (*(void (**)(uint64_t))(**(void **)(v3 + 8) + 928))(1);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_25915D000, v5, v6, "#EmergencyCountdownView received action to cancel timer", v7, 2u);
    MEMORY[0x25A2D96D0](v7, -1, -1);
  }

  return (*(uint64_t (**)(void))(**(void **)(v3 + 8) + 1272))();
}

void one-time initialization function for sampleModel()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for EmergencyCountdownModel();
  __swift_allocate_value_buffer(v4, static EmergencyCountdownView_Previews.sampleModel);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F649D0]), sel_init);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F64A18]), sel_init);
  static Locale.current.getter();
  Locale.identifier.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:)(v5, 0x2E676E696C6C6143, 0xEA00000000002E2ELL, 0xD000000000000012, 0x80000002592052A0, 5459795, 0xE300000000000000, 0xD00000000000001DLL, 0x8000000259205700, v6, v7);
}

uint64_t EmergencyCountdownView_Previews.sampleModel.unsafeMutableAddressor()
{
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for EmergencyCountdownModel();
  return __swift_project_value_buffer(v0, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
}

uint64_t static EmergencyCountdownView_Previews.sampleModel.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for EmergencyCountdownModel();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  return outlined init with copy of EmergencyCountdownModel(v3, a1, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
}

uint64_t static EmergencyCountdownView_Previews.previews.getter()
{
  uint64_t v0 = type metadata accessor for EmergencyCountdownModel();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  outlined init with copy of EmergencyCountdownModel(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
  type metadata accessor for EmergencyCountdownView(0);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownModel);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownView and conformance EmergencyCountdownView, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t implicit closure #1 in static EmergencyCountdownView_Previews.previews.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EmergencyCountdownView(0);
  outlined init with copy of EmergencyCountdownModel(a1, (uint64_t)a2 + *(int *)(v4 + 28), (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
  type metadata accessor for Context();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v5;
  ActionHandler.init()();
  uint64_t v6 = *(int *)(v4 + 24);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  id v7 = (uint64_t *)((char *)a2 + v6);
  swift_beginAccess();
  type metadata accessor for EmergencyCountdownViewModel(0);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  swift_retain();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *id v7 = result;
  v7[1] = v9;
  return result;
}

uint64_t protocol witness for static PreviewProvider.previews.getter in conformance EmergencyCountdownView_Previews()
{
  uint64_t v0 = type metadata accessor for EmergencyCountdownModel();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for sampleModel != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)static EmergencyCountdownView_Previews.sampleModel);
  outlined init with copy of EmergencyCountdownModel(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for EmergencyCountdownModel);
  type metadata accessor for EmergencyCountdownView(0);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownModel);
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type EmergencyCountdownView and conformance EmergencyCountdownView, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownView);
  return SnippetPreview.init(snippetModel:content:)();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance EmergencyCountdownView_Previews(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews();
  return MEMORY[0x270F00210](a1, v2);
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance EmergencyCountdownView_Previews(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews();
  return MEMORY[0x270F00200](a1, v2);
}

uint64_t sub_2591C9B3C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v4 = type metadata accessor for StandardActionHandler();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in EmergencyCountdownViewModel.updateCounter(actionHandler:currentAnimationStep:context:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return (*(uint64_t (**)(unint64_t, void))(**(void **)(v0 + 16) + 1256))(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for EmergencyCountdownViewModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for EmergencyCountdownViewModel);
}

uint64_t type metadata accessor for EmergencyCountdownView(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for EmergencyCountdownView);
}

uint64_t type metadata accessor for EmergencyCountdownViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>> and conformance <A> Group<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>> and conformance <A> Group<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>>);
    lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown> and conformance <> _ConditionalContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown>);
    lazy protocol witness table accessor for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type AmbientEmergencyCountdown and conformance AmbientEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for AmbientEmergencyCountdown);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>, AmbientEmergencyCountdown> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown>);
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type CarPlayEmergencyCountdown and conformance CarPlayEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for CarPlayEmergencyCountdown);
    lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher(&lazy protocol witness table cache variable for type SmartEmergencyCountdown and conformance SmartEmergencyCountdown, (void (*)(uint64_t))type metadata accessor for SmartEmergencyCountdown);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<CarPlayEmergencyCountdown, SmartEmergencyCountdown> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void partial apply for closure #2 in EmergencyCountdownView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for EmergencyCountdownView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  closure #2 in EmergencyCountdownView.body.getter(v2);
}

uint64_t objectdestroy_112Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for EmergencyCountdownView(0) - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  uint64_t v5 = (char *)v2 + v1[9];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  id v7 = *(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = (int *)type metadata accessor for EmergencyCountdownModel();
  v7(&v5[v8[5]], v6);
  v7(&v5[v8[6]], v6);
  v7(&v5[v8[7]], v6);
  v7(&v5[v8[8]], v6);
  v7(&v5[v8[9]], v6);
  v7(&v5[v8[10]], v6);
  v7(&v5[v8[11]], v6);
  v7(&v5[v8[12]], v6);
  uint64_t v9 = &v5[v8[13]];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = &v5[v8[14]];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = &v5[v8[15]];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  return partial apply for closure #3 in EmergencyCountdownView.body.getter(a1, (uint64_t (*)(uint64_t, uint64_t))closure #3 in EmergencyCountdownView.body.getter);
}

uint64_t partial apply for closure #4 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  return partial apply for closure #3 in EmergencyCountdownView.body.getter(a1, (uint64_t (*)(uint64_t, uint64_t))closure #4 in EmergencyCountdownView.body.getter);
}

uint64_t partial apply for closure #3 in EmergencyCountdownView.body.getter(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for EmergencyCountdownView(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t partial apply for closure #5 in EmergencyCountdownView.body.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for EmergencyCountdownView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #5 in EmergencyCountdownView.body.getter(a1, v4);
}

uint64_t associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in EmergencyCountdownViewModel()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t associated type witness table accessor for View.Body : View in EmergencyCountdownView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownView_Previews and conformance EmergencyCountdownView_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in EmergencyCountdownView_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2591CA60C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 320))();
}

uint64_t sub_2591CA65C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 368))();
}

uint64_t sub_2591CA6AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 416))();
}

uint64_t sub_2591CA6FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 464))();
}

uint64_t sub_2591CA74C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 512))();
}

uint64_t sub_2591CA79C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 560))();
}

uint64_t sub_2591CA7EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 608))();
}

uint64_t sub_2591CA83C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 656))();
}

uint64_t sub_2591CA88C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 704))();
}

uint64_t sub_2591CA8DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 752))();
}

uint64_t sub_2591CA92C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 800))();
}

uint64_t sub_2591CA97C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 848))();
}

uint64_t sub_2591CA9CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 896))();
}

uint64_t sub_2591CAA1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 944))();
}

uint64_t sub_2591CAA6C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 968))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2591CAAC4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 976))(*a1);
}

void sub_2591CAB14(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 992))();
}

uint64_t sub_2591CAB68(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 1000))(*a1);
}

uint64_t sub_2591CABB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 1040))();
}

void sub_2591CAC08(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 1064))();
}

uint64_t sub_2591CAC5C(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 1072))(*a1);
}

uint64_t sub_2591CACAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1088))();
  *a2 = result;
  return result;
}

uint64_t sub_2591CAD00(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 1096))(*a1);
}

uint64_t sub_2591CAD5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1112))();
  *a2 = result;
  return result;
}

uint64_t sub_2591CADB0(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 1120))(*a1);
}

uint64_t sub_2591CAE0C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1160))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2591CAE64(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1168))(*a1);
}

ValueMetadata *type metadata accessor for EmergencyCountdownConfiguration()
{
  return &type metadata for EmergencyCountdownConfiguration;
}

uint64_t ObjC metadata update function for EmergencyCountdownViewModel()
{
  return type metadata accessor for EmergencyCountdownViewModel(0);
}

void type metadata completion function for EmergencyCountdownViewModel()
{
  type metadata accessor for EmergencyCountdownModel?();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<Int>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<CGFloat>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<String>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for Published<Int>(319, &lazy cache variable for type metadata for Published<Bool>);
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for EmergencyCountdownModel?()
{
  if (!lazy cache variable for type metadata for EmergencyCountdownModel?)
  {
    type metadata accessor for EmergencyCountdownModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for EmergencyCountdownModel?);
    }
  }
}

void type metadata accessor for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>()
{
  if (!lazy cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
    }
  }
}

void type metadata accessor for Published<Int>(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for EmergencyCountdownView(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = &v7[v14];
    id v17 = (char **)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = &v7[v15];
    uint64_t v20 = (uint64_t)a2 + v15;
    swift_retain();
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    char v23 = (int *)type metadata accessor for EmergencyCountdownModel();
    v22(&v19[v23[5]], v20 + v23[5], v21);
    v22(&v19[v23[6]], v20 + v23[6], v21);
    v22(&v19[v23[7]], v20 + v23[7], v21);
    v22(&v19[v23[8]], v20 + v23[8], v21);
    v22(&v19[v23[9]], v20 + v23[9], v21);
    v22(&v19[v23[10]], v20 + v23[10], v21);
    v22(&v19[v23[11]], v20 + v23[11], v21);
    v22(&v19[v23[12]], v20 + v23[12], v21);
    uint64_t v24 = v23[13];
    uint64_t v25 = &v19[v24];
    uint64_t v26 = v20 + v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = v23[14];
    uint64_t v29 = &v19[v28];
    uint64_t v30 = v20 + v28;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v23[15];
    uint64_t v33 = &v19[v32];
    uint64_t v34 = v20 + v32;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = v23[16];
    uint64_t v37 = &v19[v36];
    uint64_t v38 = (void *)(v20 + v36);
    uint64_t v39 = v38[1];
    *(void *)uint64_t v37 = *v38;
    *((void *)v37 + 1) = v39;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for EmergencyCountdownView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = (int *)type metadata accessor for EmergencyCountdownModel();
  v8(&v6[v9[5]], v7);
  v8(&v6[v9[6]], v7);
  v8(&v6[v9[7]], v7);
  v8(&v6[v9[8]], v7);
  v8(&v6[v9[9]], v7);
  v8(&v6[v9[10]], v7);
  v8(&v6[v9[11]], v7);
  v8(&v6[v9[12]], v7);
  uint64_t v10 = &v6[v9[13]];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = &v6[v9[14]];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = &v6[v9[15]];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EmergencyCountdownView(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  id v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = a2 + v15;
  swift_retain();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v22(v19, v20, v21);
  char v23 = (int *)type metadata accessor for EmergencyCountdownModel();
  v22(&v19[v23[5]], v20 + v23[5], v21);
  v22(&v19[v23[6]], v20 + v23[6], v21);
  v22(&v19[v23[7]], v20 + v23[7], v21);
  v22(&v19[v23[8]], v20 + v23[8], v21);
  v22(&v19[v23[9]], v20 + v23[9], v21);
  v22(&v19[v23[10]], v20 + v23[10], v21);
  v22(&v19[v23[11]], v20 + v23[11], v21);
  v22(&v19[v23[12]], v20 + v23[12], v21);
  uint64_t v24 = v23[13];
  uint64_t v25 = &v19[v24];
  uint64_t v26 = v20 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = v23[14];
  uint64_t v29 = &v19[v28];
  uint64_t v30 = v20 + v28;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = v23[15];
  uint64_t v33 = &v19[v32];
  uint64_t v34 = v20 + v32;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = v23[16];
  uint64_t v37 = &v19[v36];
  uint64_t v38 = (void *)(v20 + v36);
  uint64_t v39 = v38[1];
  *(void *)uint64_t v37 = *v38;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  uint64_t v21 = (int *)type metadata accessor for EmergencyCountdownModel();
  v20(v17 + v21[5], v18 + v21[5], v19);
  v20(v17 + v21[6], v18 + v21[6], v19);
  v20(v17 + v21[7], v18 + v21[7], v19);
  v20(v17 + v21[8], v18 + v21[8], v19);
  v20(v17 + v21[9], v18 + v21[9], v19);
  v20(v17 + v21[10], v18 + v21[10], v19);
  v20(v17 + v21[11], v18 + v21[11], v19);
  v20(v17 + v21[12], v18 + v21[12], v19);
  uint64_t v22 = v21[13];
  uint64_t v23 = v17 + v22;
  uint64_t v24 = v18 + v22;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = v21[14];
  uint64_t v27 = v17 + v26;
  uint64_t v28 = v18 + v26;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = v21[15];
  uint64_t v31 = v17 + v30;
  uint64_t v32 = v18 + v30;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  uint64_t v34 = v21[16];
  uint64_t v35 = (void *)(v17 + v34);
  uint64_t v36 = (void *)(v18 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EmergencyCountdownView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  uint64_t v15 = (int *)type metadata accessor for EmergencyCountdownModel();
  v14(&v11[v15[5]], &v12[v15[5]], v13);
  v14(&v11[v15[6]], &v12[v15[6]], v13);
  v14(&v11[v15[7]], &v12[v15[7]], v13);
  v14(&v11[v15[8]], &v12[v15[8]], v13);
  v14(&v11[v15[9]], &v12[v15[9]], v13);
  v14(&v11[v15[10]], &v12[v15[10]], v13);
  v14(&v11[v15[11]], &v12[v15[11]], v13);
  v14(&v11[v15[12]], &v12[v15[12]], v13);
  uint64_t v16 = v15[13];
  uint64_t v17 = &v11[v16];
  uint64_t v18 = &v12[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v15[14];
  uint64_t v21 = &v11[v20];
  uint64_t v22 = &v12[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v15[15];
  uint64_t v25 = &v11[v24];
  uint64_t v26 = &v12[v24];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  *(_OWORD *)&v11[v15[16]] = *(_OWORD *)&v12[v15[16]];
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownView(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_release();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  uint64_t v21 = (int *)type metadata accessor for EmergencyCountdownModel();
  v20(v17 + v21[5], &v18[v21[5]], v19);
  v20(v17 + v21[6], &v18[v21[6]], v19);
  v20(v17 + v21[7], &v18[v21[7]], v19);
  v20(v17 + v21[8], &v18[v21[8]], v19);
  v20(v17 + v21[9], &v18[v21[9]], v19);
  v20(v17 + v21[10], &v18[v21[10]], v19);
  v20(v17 + v21[11], &v18[v21[11]], v19);
  v20(v17 + v21[12], &v18[v21[12]], v19);
  uint64_t v22 = v21[13];
  uint64_t v23 = v17 + v22;
  uint64_t v24 = &v18[v22];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = v21[14];
  uint64_t v27 = v17 + v26;
  uint64_t v28 = &v18[v26];
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = v21[15];
  uint64_t v31 = v17 + v30;
  uint64_t v32 = &v18[v30];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = v21[16];
  uint64_t v35 = (void *)(v17 + v34);
  uint64_t v36 = &v18[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591CC3BC);
}

uint64_t sub_2591CC3BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for EmergencyCountdownModel();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591CC504);
}

uint64_t sub_2591CC504(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for EmergencyCountdownModel();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t type metadata completion function for EmergencyCountdownView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for EmergencyCountdownModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownView_Previews()
{
  return &type metadata for EmergencyCountdownView_Previews;
}

uint64_t sub_2591CC724()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>> and conformance SubscriptionView<A, B>, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<AnyPublisher<Context.Event, Never>, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _AppearanceActionModifier>>>>);
}

uint64_t sub_2591CC760()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type SnippetPreview<EmergencyCountdownModel, EmergencyCountdownView> and conformance SnippetPreview<A, B>, &demangling cache variable for type metadata for SnippetPreview<EmergencyCountdownModel, EmergencyCountdownView>);
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownUpdateAction and conformance EmergencyCountdownUpdateAction);
  }
  return result;
}

uint64_t outlined destroy of EmergencyCountdownModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v4);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      outlined init with copy of AnyHashable(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25A2D8D80](v9, a1);
      outlined destroy of AnyHashable((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t outlined init with copy of AnyHashable(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ListHeaderView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v41 = type metadata accessor for PrimaryHeaderStandardView();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.title3.getter();
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  outlined consume of Text.Storage(v7, v9, v11);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v17 = Text.fontWeight(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  outlined consume of Text.Storage(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  uint64_t v51 = MEMORY[0x263F1A838];
  uint64_t v52 = MEMORY[0x263F77350];
  uint64_t v24 = swift_allocObject();
  uint64_t v49 = v24;
  *(void *)(v24 + 16) = v17;
  *(void *)(v24 + 24) = v19;
  *(unsigned char *)(v24 + 32) = v21 & 1;
  *(void *)(v24 + 40) = v23;
  uint64_t v48 = 0;
  long long v46 = 0u;
  long long v47 = 0u;
  uint64_t v45 = 0;
  long long v44 = 0u;
  long long v43 = 0u;
  PrimaryHeaderStandardView.init(text1:text2:text3:addTint:)();
  char v25 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v40;
  uint64_t v35 = v42;
  uint64_t v36 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v42, v6, v41);
  uint64_t v37 = v35
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout>)
               + 36);
  *(unsigned char *)uint64_t v37 = v25;
  *(void *)(v37 + 8) = v27;
  *(void *)(v37 + 16) = v29;
  *(void *)(v37 + 24) = v31;
  *(void *)(v37 + 32) = v33;
  *(unsigned char *)(v37 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v6, v36);
}

uint64_t sub_2591CCDA0()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t associated type witness table accessor for View.Body : View in ListHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ListHeaderView@<X0>(uint64_t a1@<X8>)
{
  return ListHeaderView.body.getter(*v1, v1[1], a1);
}

void *initializeBufferWithCopyOfBuffer for ListHeaderView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ListHeaderView()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ListHeaderView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ListHeaderView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListHeaderView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListHeaderView()
{
  return &type metadata for ListHeaderView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout>);
    lazy protocol witness table accessor for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<PrimaryHeaderStandardView, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView()
{
  unint64_t result = lazy protocol witness table cache variable for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView;
  if (!lazy protocol witness table cache variable for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView)
  {
    type metadata accessor for PrimaryHeaderStandardView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PrimaryHeaderStandardView and conformance PrimaryHeaderStandardView);
  }
  return result;
}

uint64_t specialized == infix<A>(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x747465536E65706FLL;
    }
    else {
      unint64_t v3 = 0xD000000000000011;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC00000073676E69;
    }
    else {
      unint64_t v4 = 0x8000000259204CE0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x747465536E65706FLL;
      }
      else {
        unint64_t v6 = 0xD000000000000011;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC00000073676E69;
      }
      else {
        unint64_t v7 = 0x8000000259204CE0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v3 = 0x6C6143724F646461;
    unint64_t v4 = 0xEF74706D6F72506CLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xEF74706D6F72506CLL;
  if (v3 != 0x6C6143724F646461)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6F56746165706572;
  }
  else {
    unint64_t v3 = 0xD000000000000015;
  }
  if (v2) {
    unint64_t v4 = 0x8000000259204C10;
  }
  else {
    unint64_t v4 = 0xEF6C69616D656369;
  }
  if (a2) {
    unint64_t v5 = 0x6F56746165706572;
  }
  else {
    unint64_t v5 = 0xD000000000000015;
  }
  if (a2) {
    unint64_t v6 = 0xEF6C69616D656369;
  }
  else {
    unint64_t v6 = 0x8000000259204C10;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

Swift::Int specialized RawRepresentable<>.hashValue.getter()
{
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  return Hasher._finalize()();
}

uint64_t specialized RawRepresentable<>.hash(into:)()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

{
  return String.hash(into:)();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)()
{
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  return Hasher._finalize()();
}

uint64_t EmergencyCountdownModel.isSmartEnabled.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for EmergencyCountdownModel()
{
  uint64_t result = type metadata singleton initialization cache for EmergencyCountdownModel;
  if (!type metadata singleton initialization cache for EmergencyCountdownModel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EmergencyCountdownModel.sashTitle.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.cancelButtonText.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.cancelledText.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.callButtonText.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.dialog.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.localeIdentifier.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.callingLabel.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.emergencyServicesLabel.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.sos.getter()
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t EmergencyCountdownModel.callAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t EmergencyCountdownModel.cancelAction.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

void EmergencyCountdownModel.init(sashTitle:cancelButtonText:cancelledText:callButtonText:callingLabel:emergencyServicesLabel:sos:dialog:callAction:cancelAction:localeIdentifier:isSmartEnabled:)(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  char v11 = (void *)(a1 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  *char v11 = 0xD000000000000017;
  v11[1] = 0x8000000259204FF0;
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  id v12 = a10;
  CodableAceObject.init(wrappedValue:)();
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  id v13 = a11;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
}

uint64_t EmergencyCountdownModel.sashTitle.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.sashTitle.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.cancelButtonText : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.cancelButtonText : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.cancelButtonText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelButtonText.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.cancelledText : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.cancelledText : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.cancelledText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelledText.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.callButtonText : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.callButtonText : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.callButtonText.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callButtonText.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.callingLabel()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t key path getter for EmergencyCountdownModel.callingLabel : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.callingLabel : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.callingLabel.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callingLabel.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.emergencyServicesLabel : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.emergencyServicesLabel : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.emergencyServicesLabel.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.emergencyServicesLabel.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.sos : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.sos : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.sos.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.sos.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.dialog : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.dialog : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.dialog.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.dialog.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t key path getter for EmergencyCountdownModel.localeIdentifier : EmergencyCountdownModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.localeIdentifier : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.localeIdentifier.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.localeIdentifier.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.isSmartEnabled()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t key path getter for EmergencyCountdownModel.isSmartEnabled : EmergencyCountdownModel@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for EmergencyCountdownModel.isSmartEnabled : EmergencyCountdownModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.isSmartEnabled.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.isSmartEnabled.modify(void *a1))()
{
  BOOL v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.callAction()
{
  type metadata accessor for SABaseClientBoundCommand(0, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t key path setter for EmergencyCountdownModel.callAction : EmergencyCountdownModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for EmergencyCountdownModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.callAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.callAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of EmergencyCountdownModel.cancelAction()
{
  type metadata accessor for SABaseClientBoundCommand(0, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t key path setter for EmergencyCountdownModel.cancelAction : EmergencyCountdownModel(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for EmergencyCountdownModel();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t EmergencyCountdownModel.cancelAction.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

uint64_t (*EmergencyCountdownModel.cancelAction.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t EmergencyCountdownModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmergencyCountdownModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EmergencyCountdownModel() + 64));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EmergencyCountdownModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

void *EmergencyCountdownModel.resultViewID.unsafeMutableAddressor()
{
  return &static EmergencyCountdownModel.resultViewID;
}

unint64_t static EmergencyCountdownModel.resultViewID.getter()
{
  return 0xD000000000000017;
}

unint64_t EmergencyCountdownModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 8:
      return result;
    case 2:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t result = 0x747475426C6C6163;
      break;
    case 4:
      unint64_t result = 0x4C676E696C6C6163;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 7565171;
      break;
    case 7:
      unint64_t result = 0x676F6C616964;
      break;
    case 9:
      unint64_t result = 0x457472616D537369;
      break;
    case 10:
      unint64_t result = 0x697463416C6C6163;
      break;
    case 11:
      unint64_t result = 0x63416C65636E6163;
      break;
    case 12:
      unint64_t result = 0x65736E6F70736572;
      break;
    default:
      unint64_t result = 0x6C74695468736173;
      break;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance EmergencyCountdownModel.CodingKeys()
{
  return EmergencyCountdownModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance EmergencyCountdownModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized EmergencyCountdownModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance EmergencyCountdownModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance EmergencyCountdownModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance EmergencyCountdownModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EmergencyCountdownModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<EmergencyCountdownModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[31] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for EmergencyCountdownModel();
    v8[30] = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[29] = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[28] = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[27] = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[26] = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[25] = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[24] = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[15] = 8;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[14] = 9;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[13] = 10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[12] = 11;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[11] = 12;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys);
  }
  return result;
}

uint64_t EmergencyCountdownModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v80 = (char *)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  uint64_t v86 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v81 = (char *)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v82 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v102 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  int v83 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v84 = (char *)v76 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v91 = (char *)v76 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v95 = (char *)v76 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v76 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  char v20 = (char *)v76 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)v76 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)v76 - v25;
  MEMORY[0x270FA5388](v24);
  long long v98 = (char *)v76 - v27;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<EmergencyCountdownModel.CodingKeys>);
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v29 = (char *)v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for EmergencyCountdownModel();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v99 = (int *)v31;
  uint64_t v34 = *(int *)(v31 + 64);
  uint64_t v101 = v33;
  uint64_t v35 = &v33[v34];
  *(void *)uint64_t v35 = 0xD000000000000017;
  *((void *)v35 + 1) = 0x8000000259204FF0;
  uint64_t v96 = (uint64_t)a1;
  long long v97 = &v33[v34];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type EmergencyCountdownModel.CodingKeys and conformance EmergencyCountdownModel.CodingKeys();
  uint64_t v93 = v29;
  uint64_t v36 = (char *)v100;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v100 = v6;
  if (v36)
  {
    long long v98 = v36;
    unsigned int v37 = 4096;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1(v96);
    int v53 = (v37 >> 2) & 1;
    int v54 = (v37 >> 3) & 1;
    int v55 = (v37 >> 4) & 1;
    int v56 = (v37 >> 5) & 1;
    LODWORD(v96) = (v37 >> 7) & 1;
    LODWORD(v94) = (v37 >> 6) & 1;
    if ((v37 & 1) == 0)
    {
      uint64_t v57 = v99;
      if ((v37 & 2) != 0)
      {
        uint64_t v58 = *(void (**)(char *, uint64_t))(v102 + 8);
        v58(&v101[v99[5]], v100);
        LODWORD(v93) = 0;
        if ((v37 & 4) != 0)
        {
          LODWORD(v95) = 0;
          LODWORD(v92) = 0;
          LODWORD(v91) = 0;
          uint64_t v59 = v100;
          uint64_t v60 = (uint64_t)v101;
          goto LABEL_12;
        }
        LODWORD(v95) = 0;
        LODWORD(v92) = 0;
        LODWORD(v91) = 0;
        uint64_t v59 = v100;
        uint64_t v60 = (uint64_t)v101;
        if (!v54) {
          goto LABEL_25;
        }
LABEL_16:
        uint64_t v58 = *(void (**)(char *, uint64_t))(v102 + 8);
        v58((char *)(v60 + v57[7]), v59);
        if ((v55 & 1) == 0) {
          goto LABEL_29;
        }
LABEL_21:
        v58((char *)(v60 + v57[8]), v59);
        uint64_t v62 = v102;
        if (v56) {
          goto LABEL_27;
        }
        goto LABEL_34;
      }
      LODWORD(v91) = 0;
      LODWORD(v92) = 0;
      LODWORD(v95) = 0;
      LODWORD(v93) = 0;
      uint64_t v59 = v100;
      uint64_t v60 = (uint64_t)v101;
      if (v53)
      {
LABEL_19:
        uint64_t v58 = *(void (**)(char *, uint64_t))(v102 + 8);
        v58((char *)(v60 + v57[6]), v59);
        if ((v54 & 1) == 0)
        {
LABEL_25:
          if (v55)
          {
            uint64_t v62 = v102;
            uint64_t v58 = *(void (**)(char *, uint64_t))(v102 + 8);
            v58((char *)(v60 + v57[8]), v59);
            if (v56)
            {
LABEL_27:
              v58((char *)(v60 + v57[9]), v59);
              int v63 = (int)v95;
              if ((v94 & 1) == 0)
              {
LABEL_39:
                if (v96)
                {
                  uint64_t v58 = *(void (**)(char *, uint64_t))(v62 + 8);
                  v58((char *)(v60 + v57[11]), v59);
                  if (v93)
                  {
LABEL_41:
                    v58((char *)(v60 + v57[12]), v59);
                    int v64 = (int)v91;
                    if (v63)
                    {
LABEL_49:
                      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v60 + v57[13], v90);
                      if ((v92 & 1) == 0)
                      {
LABEL_50:
                        if (!v64) {
                          return swift_bridgeObjectRelease();
                        }
LABEL_51:
                        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v60 + v57[15], v87);
                        return swift_bridgeObjectRelease();
                      }
LABEL_46:
                      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v60 + v57[14], v89);
                      if ((v64 & 1) == 0) {
                        return swift_bridgeObjectRelease();
                      }
                      goto LABEL_51;
                    }
LABEL_45:
                    if (!v92) {
                      goto LABEL_50;
                    }
                    goto LABEL_46;
                  }
LABEL_48:
                  int v64 = (int)v91;
                  if (v63) {
                    goto LABEL_49;
                  }
                  goto LABEL_45;
                }
LABEL_43:
                if (v93)
                {
                  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v60 + v57[12], v59);
                  int v64 = (int)v91;
                  if (v63) {
                    goto LABEL_49;
                  }
                  goto LABEL_45;
                }
                goto LABEL_48;
              }
              goto LABEL_31;
            }
LABEL_34:
            if (!v94)
            {
              int v63 = (int)v95;
              goto LABEL_39;
            }
            uint64_t v58 = *(void (**)(char *, uint64_t))(v62 + 8);
            v58((char *)(v60 + v57[10]), v59);
            int v63 = (int)v95;
            if ((v96 & 1) == 0) {
              goto LABEL_43;
            }
LABEL_36:
            v58((char *)(v60 + v57[11]), v59);
            if (v93) {
              goto LABEL_41;
            }
            goto LABEL_48;
          }
LABEL_29:
          if (v56)
          {
            uint64_t v62 = v102;
            uint64_t v58 = *(void (**)(char *, uint64_t))(v102 + 8);
            v58((char *)(v60 + v57[9]), v59);
            int v63 = (int)v95;
            if ((v94 & 1) == 0) {
              goto LABEL_39;
            }
LABEL_31:
            v58((char *)(v60 + v57[10]), v59);
            if ((v96 & 1) == 0) {
              goto LABEL_43;
            }
            goto LABEL_36;
          }
          uint64_t v62 = v102;
          goto LABEL_34;
        }
        goto LABEL_20;
      }
LABEL_15:
      if (!v54) {
        goto LABEL_25;
      }
      goto LABEL_16;
    }
    LODWORD(v93) = 0;
    LODWORD(v95) = 0;
    LODWORD(v92) = 0;
    LODWORD(v91) = 0;
    int v61 = (v37 >> 1) & 1;
LABEL_10:
    uint64_t v60 = (uint64_t)v101;
    uint64_t v58 = *(void (**)(char *, uint64_t))(v102 + 8);
    uint64_t v59 = v100;
    v58(v101, v100);
    if (v61)
    {
      uint64_t v57 = v99;
      v58((char *)(v60 + v99[5]), v59);
      if (v53)
      {
LABEL_12:
        v58((char *)(v60 + v57[6]), v59);
        if ((v54 & 1) == 0) {
          goto LABEL_25;
        }
LABEL_20:
        v58((char *)(v60 + v57[7]), v59);
        if ((v55 & 1) == 0) {
          goto LABEL_29;
        }
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v57 = v99;
      uint64_t v59 = v100;
      uint64_t v60 = (uint64_t)v101;
      if (v53) {
        goto LABEL_19;
      }
    }
    goto LABEL_15;
  }
  uint64_t v78 = v20;
  uint64_t v77 = v17;
  char v115 = 0;
  lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
  uint64_t v38 = v93;
  uint64_t v39 = v94;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v40 = (uint64_t)v101;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
  v76[1] = v102 + 32;
  v76[0] = v41;
  v41(v101, v98, v6);
  char v114 = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v42 = v6;
  long long v43 = (void (*)(uint64_t, char *, uint64_t))v76[0];
  ((void (*)(uint64_t, char *, uint64_t))v76[0])(v40 + v99[5], v26, v6);
  char v113 = 2;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v43(v40 + v99[6], v23, v6);
  char v112 = 3;
  long long v44 = v78;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v43(v40 + v99[7], v44, v6);
  char v111 = 4;
  uint64_t v45 = v77;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v46 = v92;
  ((void (*)(uint64_t, char *, uint64_t))v76[0])(v40 + v99[8], v45, v6);
  char v110 = 5;
  long long v47 = v95;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  ((void (*)(uint64_t, char *, uint64_t))v76[0])(v40 + v99[9], v47, v42);
  char v109 = 6;
  uint64_t v48 = v91;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  ((void (*)(uint64_t, char *, void))v76[0])(v40 + v99[10], v48, 0);
  char v108 = 7;
  uint64_t v49 = v84;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v98 = 0;
  uint64_t v50 = (void (*)(char *, char *, uint64_t))v76[0];
  ((void (*)(uint64_t, char *, void))v76[0])(v40 + v99[11], v49, 0);
  char v107 = 8;
  uint64_t v51 = v83;
  uint64_t v52 = v98;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v98 = v52;
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v39);
    unsigned int v37 = 4351;
    goto LABEL_5;
  }
  v50(&v101[v99[12]], v51, v100);
  char v106 = 9;
  lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
  uint64_t v66 = v98;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  LODWORD(v95) = v66 == 0;
  long long v98 = v66;
  if (v66
    || ((*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v101[v99[13]], v82, v90),
        char v105 = 10,
        lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupLaunchAppWithIntent> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>), uint64_t v67 = v98, KeyedDecodingContainer.decode<A>(_:forKey:)(), (v98 = v67) != 0))
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
    LODWORD(v92) = 0;
    LODWORD(v91) = 0;
LABEL_56:
    __swift_destroy_boxed_opaque_existential_1(v96);
    LOBYTE(v61) = 1;
    int v53 = 1;
    int v54 = 1;
    int v55 = 1;
    int v56 = 1;
    LODWORD(v94) = 1;
    LODWORD(v96) = 1;
    LODWORD(v93) = 1;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v101[v99[14]], v81, v89);
  char v104 = 11;
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v68 = v98;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v98 = v68;
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
    LODWORD(v91) = 0;
    LODWORD(v92) = 1;
    goto LABEL_56;
  }
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(&v101[v99[15]], v80, v87);
  char v103 = 12;
  uint64_t v69 = v98;
  uint64_t v70 = KeyedDecodingContainer.decode(_:forKey:)();
  long long v98 = v69;
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
    LODWORD(v92) = 1;
    LODWORD(v91) = 1;
    goto LABEL_56;
  }
  uint64_t v72 = v70;
  uint64_t v73 = v71;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
  uint64_t v74 = v97;
  swift_bridgeObjectRelease();
  *uint64_t v74 = v72;
  v74[1] = v73;
  uint64_t v75 = (uint64_t)v101;
  outlined init with copy of EmergencyCountdownModel((uint64_t)v101, v79);
  __swift_destroy_boxed_opaque_existential_1(v96);
  return outlined destroy of EmergencyCountdownModel(v75);
}

uint64_t outlined init with copy of EmergencyCountdownModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyCountdownModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance EmergencyCountdownModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t protocol witness for static ResultViewIDProviding.resultViewID.getter in conformance EmergencyCountdownModel()
{
  return 0xD000000000000017;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EmergencyCountdownModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownModel(void *a1)
{
  return EmergencyCountdownModel.encode(to:)(a1);
}

BOOL EmergencyCountdownUpdateAction.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of EmergencyCountdownUpdateAction.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyCountdownUpdateAction@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance EmergencyCountdownUpdateAction, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance EmergencyCountdownUpdateAction@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized EmergencyCountdownUpdateAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance EmergencyCountdownUpdateAction()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance EmergencyCountdownUpdateAction()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t protocol witness for UpdateResponseCommand.init(_:) in conformance EmergencyCountdownUpdateAction()
{
  return UpdateResponseCommand<>.init(_:)();
}

uint64_t protocol witness for UpdateResponseCommand.serializeData() in conformance EmergencyCountdownUpdateAction()
{
  return UpdateResponseCommand<>.serializeData()();
}

uint64_t specialized EmergencyCountdownModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C74695468736173 && a2 == 0xE900000000000065;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259205720 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xED00007478655464 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x747475426C6C6163 && a2 == 0xEE00747865546E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C676E696C6C6163 && a2 == 0xEC0000006C656261 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000259205740 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7565171 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000259205760 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x457472616D537369 && a2 == 0xEE0064656C62616ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x697463416C6C6163 && a2 == 0xEA00000000006E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t specialized EmergencyCountdownUpdateAction.rawValue.getter()
{
  return 0x69546C65636E6163;
}

uint64_t instantiation function for generic protocol witness table for EmergencyCountdownModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in EmergencyCountdownModel()
{
  return lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel);
}

uint64_t base witness table accessor for Encodable in EmergencyCountdownModel()
{
  return lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(&lazy protocol witness table cache variable for type EmergencyCountdownModel and conformance EmergencyCountdownModel);
}

uint64_t lazy protocol witness table accessor for type EmergencyCountdownModel and conformance EmergencyCountdownModel(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EmergencyCountdownModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2591D121C@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_2591D12B0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2591D1304@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EmergencyCountdownModel();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EmergencyCountdownModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    v8((uint64_t *)((char *)a1 + a3[11]), (uint64_t *)((char *)a2 + a3[11]), v7);
    v8((uint64_t *)((char *)a1 + a3[12]), (uint64_t *)((char *)a2 + a3[12]), v7);
    uint64_t v9 = a3[13];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[14];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[15];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[16];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EmergencyCountdownModel(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  v5(a1 + a2[8], v4);
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  v5(a1 + a2[11], v4);
  v5(a1 + a2[12], v4);
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[14];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[15];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for EmergencyCountdownModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v8 = a3[13];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591D21B0);
}

uint64_t sub_2591D21B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[13];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[16] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCountdownModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591D2384);
}

uint64_t sub_2591D2384(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[13];
    }
    else
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[14];
      }
      else
      {
        uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[16] + 8) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[15];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for EmergencyCountdownModel()
{
  _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
  if (v0 <= 0x3F)
  {
    _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<Bool>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CodableAceObject<SABaseCommand>(319, &lazy cache variable for type metadata for CodableAceObject<SAIntentGroupLaunchAppWithIntent>, &lazy cache variable for type metadata for SAIntentGroupLaunchAppWithIntent);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CodableAceObject<SABaseCommand>(319, (unint64_t *)&lazy cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>, (unint64_t *)&lazy cache variable for type metadata for SAIntentGroupRunSiriKitExecutor);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for EmergencyCountdownUpdateAction(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2591D2784);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyCountdownUpdateAction()
{
  return &type metadata for EmergencyCountdownUpdateAction;
}

uint64_t getEnumTagSinglePayload for EmergencyCountdownModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EmergencyCountdownModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591D2918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

void *type metadata accessor for EmergencyCountdownModel.CodingKeys()
{
  return &unk_270725300;
}

uint64_t DisambiguationItemWithDirectInvocationModel.label.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for DisambiguationItemWithDirectInvocationModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for DisambiguationItemWithDirectInvocationModel);
}

uint64_t DisambiguationItemWithDirectInvocationModel.rskeCommand.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  uint64_t v4 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t DisambiguationItemWithDirectInvocationModel.init(id:personHandle:spokenHandle:shouldPrintHandleBlue:label:rskeCommand:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, void *a10, uint64_t a11, unint64_t a12)
{
  uint64_t v31 = a7;
  unint64_t v32 = a8;
  int v29 = a6;
  unint64_t v36 = a5;
  uint64_t v28 = a4;
  uint64_t v41 = a2;
  uint64_t v38 = a11;
  unint64_t v39 = a12;
  id v33 = a10;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  MEMORY[0x270FA5388](v34);
  uint64_t v30 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v17 = a9 + *(int *)(v16 + 20);
  uint64_t v42 = 0;
  unint64_t v43 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Loggable.init(wrappedValue:)();
  uint64_t v18 = a9 + *(int *)(v16 + 32);
  uint64_t v42 = 0;
  unint64_t v43 = 0;
  Loggable.init(wrappedValue:)();
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 16);
  uint64_t v40 = a1;
  uint64_t v35 = v19;
  v21(a9, a1);
  swift_bridgeObjectRetain();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
  v23(v17, v22);
  uint64_t v42 = v41;
  unint64_t v43 = a3;
  unint64_t v37 = a3;
  Loggable.init(wrappedValue:)();
  LOBYTE(v42) = v29;
  Loggable.init(wrappedValue:)();
  v23(v18, v22);
  uint64_t v42 = v31;
  unint64_t v43 = v32;
  Loggable.init(wrappedValue:)();
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v24 = v33;
  CodableAceObject.init(wrappedValue:)();
  unint64_t v25 = v36;
  Loggable.init(wrappedValue:)();
  if (v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v28;
  }
  else
  {
    if (v37) {
      uint64_t v26 = v41;
    }
    else {
      uint64_t v26 = 0;
    }
    if (v37) {
      unint64_t v25 = v37;
    }
    else {
      unint64_t v25 = 0xE000000000000000;
    }
  }
  uint64_t v42 = v26;
  unint64_t v43 = v25;
  Loggable.init(wrappedValue:)();
  uint64_t v42 = v38;
  unint64_t v43 = v39;
  Loggable.init(wrappedValue:)();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v40, v35);
}

uint64_t ForeignEmergencyCallDisambiguationModel.init(emergencyServicesItem:foreignEmergencyNumberItem:prompt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v11 = (void *)(a5 + v10[7]);
  *uint64_t v11 = 0xD00000000000001ELL;
  v11[1] = 0x8000000259205010;
  outlined init with take of DisambiguationItemWithDirectInvocationModel?(a1, a5);
  uint64_t result = outlined init with take of DisambiguationItemWithDirectInvocationModel?(a2, a5 + v10[5]);
  uint64_t v13 = (void *)(a5 + v10[6]);
  *uint64_t v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t DisambiguationItemWithDirectInvocationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DisambiguationItemWithDirectInvocationModel.personHandle.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  return v1;
}

double key path getter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel@<D0>(_OWORD *a1@<X8>)
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.personHandle : DisambiguationItemWithDirectInvocationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.personHandle.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.personHandle.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t DisambiguationItemWithDirectInvocationModel.spokenHandle.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for DisambiguationItemWithDirectInvocationModel.spokenHandle : DisambiguationItemWithDirectInvocationModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.spokenHandle : DisambiguationItemWithDirectInvocationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.spokenHandle.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.spokenHandle.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue : DisambiguationItemWithDirectInvocationModel@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue : DisambiguationItemWithDirectInvocationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.shouldPrintHandleBlue.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.personHandle()
{
  return Loggable.init(wrappedValue:)();
}

double key path getter for DisambiguationItemWithDirectInvocationModel.label : DisambiguationItemWithDirectInvocationModel@<D0>(_OWORD *a1@<X8>)
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.label : DisambiguationItemWithDirectInvocationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.label.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.label.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

void property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.rskeCommand(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  MEMORY[0x270FA5388](v2);
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  id v3 = a1;
  CodableAceObject.init(wrappedValue:)();
  Loggable.init(wrappedValue:)();
}

uint64_t key path getter for DisambiguationItemWithDirectInvocationModel.rskeCommand : DisambiguationItemWithDirectInvocationModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  uint64_t v6 = CodableAceObject.wrappedValue.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.rskeCommand : DisambiguationItemWithDirectInvocationModel(void **a1)
{
  unsigned __int8 v1 = *a1;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  uint64_t v3 = (uint64_t (*)(uint64_t *, void))Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.setter();
  return v3(&v5, 0);
}

void DisambiguationItemWithDirectInvocationModel.rskeCommand.setter(void *a1)
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  id v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  uint64_t v3 = (void (*)(uint64_t *, void))Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  CodableAceObject.wrappedValue.setter();
  v3(&v4, 0);
}

void (*DisambiguationItemWithDirectInvocationModel.rskeCommand.modify(void *a1))(uint64_t a1)
{
  id v2 = malloc(0x50uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  v2[8] = Loggable.wrappedValue.modify();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[9] = CodableAceObject.wrappedValue.modify();
  return DisambiguationItemWithDirectInvocationModel.rskeCommand.modify;
}

void DisambiguationItemWithDirectInvocationModel.rskeCommand.modify(uint64_t a1)
{
  unsigned __int8 v1 = *(void **)a1;
  id v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);
  free(v1);
}

uint64_t property wrapper backing initializer of DisambiguationItemWithDirectInvocationModel.type()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t type metadata accessor for ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for ForeignEmergencyCallDisambiguationModel);
}

uint64_t outlined init with take of DisambiguationItemWithDirectInvocationModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DisambiguationItemWithDirectInvocationModel.type.getter()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  Loggable.wrappedValue.getter();
  return v1;
}

double key path getter for DisambiguationItemWithDirectInvocationModel.type : DisambiguationItemWithDirectInvocationModel@<D0>(_OWORD *a1@<X8>)
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  Loggable.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for DisambiguationItemWithDirectInvocationModel.type : DisambiguationItemWithDirectInvocationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t DisambiguationItemWithDirectInvocationModel.type.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*DisambiguationItemWithDirectInvocationModel.type.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

unint64_t DisambiguationItemWithDirectInvocationModel.ItemType.description.getter(uint64_t a1, void *a2)
{
  if (!a2) {
    return 0xD000000000000018;
  }
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v7, ".phoneNumber(");
  HIWORD(v7[1]) = -4864;
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return v7[0];
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0x6D754E656E6F6870;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys()
{
  return DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys()
{
  return 0;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys>);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v17 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys>);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys>);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();
  uint64_t v14 = v21;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v14)
  {
    char v22 = 0;
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    char v23 = 1;
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();
    uint64_t v16 = v17;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys);
  }
  return result;
}

uint64_t DisambiguationItemWithDirectInvocationModel.ItemType.init(from:)(void *a1)
{
  return specialized DisambiguationItemWithDirectInvocationModel.ItemType.init(from:)(a1);
}

uint64_t protocol witness for Decodable.init(from:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized DisambiguationItemWithDirectInvocationModel.ItemType.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance DisambiguationItemWithDirectInvocationModel.ItemType(void *a1)
{
  return DisambiguationItemWithDirectInvocationModel.ItemType.encode(to:)(a1, *v1, v1[1]);
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.ItemType()
{
  return DisambiguationItemWithDirectInvocationModel.ItemType.description.getter(*(void *)v0, *(void **)(v0 + 8));
}

uint64_t static DisambiguationItemWithDirectInvocationModel.== infix(_:_:)()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t DisambiguationItemWithDirectInvocationModel.hash(into:)()
{
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t DisambiguationItemWithDirectInvocationModel.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x6E6F73726570;
      goto LABEL_5;
    case 2:
      uint64_t v3 = 0x6E656B6F7073;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6148000000000000;
      break;
    case 3:
      return result;
    case 4:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 5:
      uint64_t result = 0x6D6D6F43656B7372;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    default:
      uint64_t result = 25705;
      break;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  return DisambiguationItemWithDirectInvocationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized DisambiguationItemWithDirectInvocationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance DisambiguationItemWithDirectInvocationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DisambiguationItemWithDirectInvocationModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<DisambiguationItemWithDirectInvocationModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v16 = 0;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    uint64_t v7 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String?> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v9[1] = v7;
    char v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v13 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v12 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v11 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v10 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    lazy protocol witness table accessor for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int DisambiguationItemWithDirectInvocationModel.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t DisambiguationItemWithDirectInvocationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  uint64_t v53 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  int v55 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v57 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v59 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  int v63 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v76 = *(void *)(v79 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v79);
  uint64_t v58 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v50 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.CodingKeys>);
  uint64_t v61 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  char v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v19[*(int *)(v17 + 20)];
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  uint64_t v75 = v20;
  Loggable.init(wrappedValue:)();
  uint64_t v21 = v19;
  char v22 = &v19[*(int *)(v16 + 32)];
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  uint64_t v73 = (int *)v16;
  uint64_t v74 = v22;
  Loggable.init(wrappedValue:)();
  uint64_t v23 = a1[3];
  uint64_t v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys();
  id v24 = v72;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v24)
  {
    uint64_t v28 = v79;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    int v29 = *(void (**)(char *, uint64_t))(v76 + 8);
    v29(v75, v28);
    return ((uint64_t (*)(char *, uint64_t))v29)(v74, v28);
  }
  else
  {
    unint64_t v25 = v11;
    uint64_t v26 = v63;
    LOBYTE(v77) = 0;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
    uint64_t v27 = v62;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v30 = v15;
    uint64_t v31 = v21;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v21, v27, v12);
    LOBYTE(v77) = 1;
    uint64_t v32 = lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String?> and conformance <A> Loggable<A>);
    id v33 = v25;
    uint64_t v34 = v79;
    uint64_t v72 = v30;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v35 = v73;
    uint64_t v52 = v32;
    uint64_t v62 = (char *)v12;
    unint64_t v36 = v33;
    uint64_t v38 = v76 + 40;
    unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v76 + 40);
    v37(v75, v36, v34);
    LOBYTE(v77) = 2;
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    uint64_t v39 = v69;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v50 = v38;
    uint64_t v51 = v37;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v31[v35[6]], v26, v39);
    LOBYTE(v77) = 3;
    lazy protocol witness table accessor for type Loggable<Bool> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<Bool> and conformance <A> Loggable<A>);
    uint64_t v40 = v59;
    uint64_t v41 = v68;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v31[v35[7]], v40, v41);
    LOBYTE(v77) = 4;
    uint64_t v42 = v58;
    uint64_t v43 = v79;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v63 = v31;
    v51(v74, v42, v43);
    LOBYTE(v77) = 5;
    lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>);
    long long v44 = v57;
    uint64_t v45 = v65;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v46 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v63[v35[9]], v44, v45);
    LOBYTE(v77) = 6;
    lazy protocol witness table accessor for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>);
    long long v47 = v55;
    uint64_t v48 = v56;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v72, v70);
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v46 + v73[10], v47, v48);
    outlined init with copy of DisambiguationItemWithDirectInvocationModel(v46, v54, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    return outlined destroy of DisambiguationItemWithDirectInvocationModel(v46, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  }
}

uint64_t protocol witness for Identifiable.id.getter in conformance DisambiguationItemWithDirectInvocationModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance DisambiguationItemWithDirectInvocationModel()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance DisambiguationItemWithDirectInvocationModel()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Decodable.init(from:) in conformance DisambiguationItemWithDirectInvocationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DisambiguationItemWithDirectInvocationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance DisambiguationItemWithDirectInvocationModel(void *a1)
{
  return DisambiguationItemWithDirectInvocationModel.encode(to:)(a1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance DisambiguationItemWithDirectInvocationModel()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t ForeignEmergencyCallDisambiguationModel.emergencyServicesItem.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of DisambiguationItemWithDirectInvocationModel?(v1, a1);
}

uint64_t ForeignEmergencyCallDisambiguationModel.foreignEmergencyNumberItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 20);
  return outlined init with copy of DisambiguationItemWithDirectInvocationModel?(v3, a1);
}

uint64_t ForeignEmergencyCallDisambiguationModel.prompt.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ForeignEmergencyCallDisambiguationModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ForeignEmergencyCallDisambiguationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ForeignEmergencyCallDisambiguationModel(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ForeignEmergencyCallDisambiguationModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

unint64_t ForeignEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0x74706D6F7270;
      break;
    case 3:
      unint64_t result = 0x65736E6F70736572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  return ForeignEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ForeignEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ForeignEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ForeignEmergencyCallDisambiguationModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ForeignEmergencyCallDisambiguationModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (void (*)(uint64_t))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
    char v11 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v10 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v9 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ForeignEmergencyCallDisambiguationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v36 = (char *)&v31 - v8;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ForeignEmergencyCallDisambiguationModel.CodingKeys>);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ForeignEmergencyCallDisambiguationModel(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = &v14[*(int *)(v12 + 28)];
  *(void *)char v15 = 0xD00000000000001ELL;
  *((void *)v15 + 1) = 0x8000000259205010;
  uint64_t v38 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = v14;
    id v33 = a1;
    uint64_t v31 = v11;
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    char v42 = 0;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (void (*)(uint64_t))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    uint64_t v16 = v36;
    uint64_t v17 = v37;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v18 = (uint64_t)v16;
    uint64_t v19 = (uint64_t)v32;
    outlined init with take of DisambiguationItemWithDirectInvocationModel?(v18, (uint64_t)v32);
    char v41 = 1;
    uint64_t v20 = (uint64_t)v7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v21 = v31;
    outlined init with take of DisambiguationItemWithDirectInvocationModel?(v20, v19 + *(int *)(v31 + 20));
    char v40 = 2;
    uint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v23 = v19;
    id v24 = (uint64_t *)(v19 + *(int *)(v21 + 24));
    uint64_t *v24 = v22;
    v24[1] = v25;
    char v39 = 3;
    uint64_t v26 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v17);
    int v29 = (uint64_t *)v38;
    swift_bridgeObjectRelease();
    *int v29 = v26;
    v29[1] = v28;
    outlined init with copy of DisambiguationItemWithDirectInvocationModel(v23, v34, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return outlined destroy of DisambiguationItemWithDirectInvocationModel(v23, type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  }
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ForeignEmergencyCallDisambiguationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ForeignEmergencyCallDisambiguationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ForeignEmergencyCallDisambiguationModel(void *a1)
{
  return ForeignEmergencyCallDisambiguationModel.encode(to:)(a1);
}

uint64_t LocalEmergencyCallDisambiguationModel.appBundleId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalEmergencyCallDisambiguationModel.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LocalEmergencyCallDisambiguationModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 24);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t property wrapper backing initializer of LocalEmergencyCallDisambiguationModel.prompt()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t LocalEmergencyCallDisambiguationModel.prompt.getter()
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  Loggable.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for LocalEmergencyCallDisambiguationModel.prompt : LocalEmergencyCallDisambiguationModel@<X0>(void *a1@<X8>)
{
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t result = Loggable.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for LocalEmergencyCallDisambiguationModel.prompt : LocalEmergencyCallDisambiguationModel()
{
  return Loggable.wrappedValue.setter();
}

uint64_t LocalEmergencyCallDisambiguationModel.prompt.setter()
{
  return Loggable.wrappedValue.setter();
}

uint64_t (*LocalEmergencyCallDisambiguationModel.prompt.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  v2[4] = Loggable.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t LocalEmergencyCallDisambiguationModel.isSmartEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 32));
}

uint64_t LocalEmergencyCallDisambiguationModel.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalEmergencyCallDisambiguationModel.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*LocalEmergencyCallDisambiguationModel.responseViewId.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t LocalEmergencyCallDisambiguationModel.init(appBundleId:prompt:items:isSmartEnabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, char a4@<W5>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v11 = (void *)((char *)a5 + *(int *)(v10 + 36));
  *uint64_t v11 = 0xD00000000000001CLL;
  v11[1] = 0x8000000259205030;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  UUID.init()();
  uint64_t result = Loggable.init(wrappedValue:)();
  *((unsigned char *)a5 + *(int *)(v10 + 32)) = a4;
  return result;
}

uint64_t LocalEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  return *(void *)&aAppbundlitems[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  return LocalEmergencyCallDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance LocalEmergencyCallDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized LocalEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance LocalEmergencyCallDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocalEmergencyCallDisambiguationModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<LocalEmergencyCallDisambiguationModel.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
    v10[14] = 2;
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[13] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[12] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[11] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LocalEmergencyCallDisambiguationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v34 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<LocalEmergencyCallDisambiguationModel.CodingKeys>);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v15 = (char *)v14 + *(int *)(v12 + 36);
  *(void *)char v15 = 0xD00000000000001CLL;
  *((void *)v15 + 1) = 0x8000000259205030;
  char v40 = a1;
  char v41 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys();
  char v39 = v10;
  uint64_t v16 = v42;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v7;
    char v42 = v4;
    uint64_t v32 = v14;
    uint64_t v19 = v37;
    uint64_t v18 = v38;
    char v49 = 0;
    uint64_t v20 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v21 = v32;
    uint64_t *v32 = v20;
    v21[1] = v22;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    char v48 = 1;
    lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](&lazy protocol witness table cache variable for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A], &lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    void v21[2] = v43;
    char v47 = 2;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v23 = v21;
    uint64_t v24 = v11;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))((char *)v23 + *(int *)(v11 + 24), v17, v5);
    char v46 = 3;
    lazy protocol witness table accessor for type Loggable<String> and conformance <A> Loggable<A>(&lazy protocol witness table cache variable for type Loggable<String> and conformance <A> Loggable<A>);
    uint64_t v25 = v42;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))((uint64_t)v32 + *(int *)(v24 + 28), v25, v18);
    char v45 = 4;
    *((unsigned char *)v32 + *(int *)(v24 + 32)) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    char v44 = 5;
    uint64_t v26 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v19);
    int v29 = (uint64_t *)v41;
    swift_bridgeObjectRelease();
    *int v29 = v26;
    v29[1] = v28;
    uint64_t v30 = v32;
    outlined init with copy of DisambiguationItemWithDirectInvocationModel((uint64_t)v32, v33, type metadata accessor for LocalEmergencyCallDisambiguationModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v30, type metadata accessor for LocalEmergencyCallDisambiguationModel);
  }
}

uint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Identifiable.id.getter in conformance LocalEmergencyCallDisambiguationModel@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t protocol witness for Decodable.init(from:) in conformance LocalEmergencyCallDisambiguationModel@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LocalEmergencyCallDisambiguationModel.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance LocalEmergencyCallDisambiguationModel(void *a1)
{
  return LocalEmergencyCallDisambiguationModel.encode(to:)(a1);
}

uint64_t specialized DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002592057A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized DisambiguationItemWithDirectInvocationModel.ItemType.init(from:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys>);
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys>);
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys>);
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys();
  uint64_t v12 = (uint64_t)v27;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_9;
  }
  uint64_t v27 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v13 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v13 + 16) != 1)
  {
    uint64_t v14 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *uint64_t v16 = &type metadata for DisambiguationItemWithDirectInvocationModel.ItemType;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x263F8DCB0], v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v11, v8);
    a1 = v27;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  if (*(unsigned char *)(v13 + 32))
  {
    char v29 = 1;
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
    uint64_t v11 = 0;
  }
  else
  {
    char v28 = 0;
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys and conformance DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys();
    uint64_t v17 = v7;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v11;
    uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v20 = v17;
    uint64_t v21 = v26;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v8);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v11;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.CodingKeys and conformance DisambiguationItemWithDirectInvocationModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type String? and conformance <A> A?(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Loggable<DisambiguationItemWithDirectInvocationModel.ItemType> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType();
    lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType()
{
  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType;
  if (!lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel.ItemType and conformance DisambiguationItemWithDirectInvocationModel.ItemType);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Loggable<String?> and conformance <A> Loggable<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Loggable<String?>);
    lazy protocol witness table accessor for type String? and conformance <A> A?(&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    lazy protocol witness table accessor for type String? and conformance <A> A?(&lazy protocol witness table cache variable for type String? and conformance <A> A?);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of DisambiguationItemWithDirectInvocationModel?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel.CodingKeys and conformance ForeignEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  return type metadata accessor for EmergencyCountdownViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for LocalEmergencyCallDisambiguationModel);
}

unint64_t lazy protocol witness table accessor for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel.CodingKeys and conformance LocalEmergencyCallDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type [DisambiguationItemWithDirectInvocationModel] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DisambiguationItemWithDirectInvocationModel]);
    lazy protocol witness table accessor for type UUID and conformance UUID(a2, (void (*)(uint64_t))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for Decodable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (void (*)(uint64_t))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t base witness table accessor for Encodable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (void (*)(uint64_t))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
}

uint64_t base witness table accessor for Equatable in DisambiguationItemWithDirectInvocationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DisambiguationItemWithDirectInvocationModel and conformance DisambiguationItemWithDirectInvocationModel, (void (*)(uint64_t))type metadata accessor for DisambiguationItemWithDirectInvocationModel);
}

uint64_t instantiation function for generic protocol witness table for ForeignEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in ForeignEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t base witness table accessor for Encodable in ForeignEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ForeignEmergencyCallDisambiguationModel and conformance ForeignEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for ForeignEmergencyCallDisambiguationModel);
}

uint64_t instantiation function for generic protocol witness table for LocalEmergencyCallDisambiguationModel(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t base witness table accessor for Decodable in LocalEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
}

uint64_t base witness table accessor for Encodable in LocalEmergencyCallDisambiguationModel()
{
  return lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type LocalEmergencyCallDisambiguationModel and conformance LocalEmergencyCallDisambiguationModel, (void (*)(uint64_t))type metadata accessor for LocalEmergencyCallDisambiguationModel);
}

char *initializeBufferWithCopyOfBuffer for DisambiguationItemWithDirectInvocationModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    char v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    v12(&a1[a3[8]], (char *)a2 + a3[8], v11);
    uint64_t v21 = a3[9];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[10];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  v7(a1 + a2[8], v6);
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = a1 + a2[10];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  return v16(v14, v15);
}

uint64_t initializeWithCopy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

uint64_t assignWithCopy for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t initializeWithTake for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

uint64_t assignWithTake for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591D8E98);
}

uint64_t sub_2591D8E98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_11;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[10];
  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591D90F0);
}

uint64_t sub_2591D90F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_11;
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[10];
  return v21(v23, a2, a2, v22);
}

void type metadata completion function for DisambiguationItemWithDirectInvocationModel()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Loggable<String?>(319, &lazy cache variable for type metadata for Loggable<String?>, &demangling cache variable for type metadata for String?);
    if (v1 <= 0x3F)
    {
      _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
      if (v2 <= 0x3F)
      {
        _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<Bool>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Loggable<String?>(319, &lazy cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>, &demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
          if (v4 <= 0x3F)
          {
            _s10SnippetKit8LoggableVySSGMaTm_0(319, &lazy cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for Loggable<String?>(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = type metadata accessor for Loggable();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t getEnumTag for DisambiguationItemWithDirectInvocationModel.ItemType(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *destructiveInjectEnumTag for DisambiguationItemWithDirectInvocationModel.ItemType(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType()
{
  return &type metadata for DisambiguationItemWithDirectInvocationModel.ItemType;
}

uint64_t *initializeBufferWithCopyOfBuffer for ForeignEmergencyCallDisambiguationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
    uint64_t v8 = *((void *)v7 - 1);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = v7[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v70 = v8;
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      uint64_t v18 = v7[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v22 = v7[7];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      uint64_t v26 = v16;
      uint64_t v8 = v70;
      v17((char *)a1 + v7[8], (char *)a2 + v7[8], v26);
      uint64_t v27 = v7[9];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = v7[10];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v70 + 56))(a1, 0, 1, v7);
    }
    uint64_t v35 = a3[5];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    if (v9((uint64_t *)((char *)a2 + v35), 1, v7))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      uint64_t v39 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v36, v37, v39);
      uint64_t v40 = v7[5];
      uint64_t v71 = v8;
      char v41 = &v36[v40];
      char v42 = &v37[v40];
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      char v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      v44(v41, v42, v43);
      uint64_t v45 = v7[6];
      char v46 = &v36[v45];
      char v47 = &v37[v45];
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      uint64_t v49 = v7[7];
      uint64_t v50 = &v36[v49];
      uint64_t v51 = &v37[v49];
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      v44(&v36[v7[8]], &v37[v7[8]], v43);
      uint64_t v53 = v7[9];
      uint64_t v54 = &v36[v53];
      int v55 = &v37[v53];
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = v7[10];
      uint64_t v58 = &v36[v57];
      uint64_t v59 = &v37[v57];
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, int *))(v71 + 56))(v36, 0, 1, v7);
    }
    uint64_t v61 = a3[6];
    uint64_t v62 = a3[7];
    int v63 = (uint64_t *)((char *)a1 + v61);
    uint64_t v64 = (uint64_t *)((char *)a2 + v61);
    uint64_t v65 = v64[1];
    *int v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = (uint64_t *)((char *)a1 + v62);
    uint64_t v67 = (uint64_t *)((char *)a2 + v62);
    uint64_t v68 = v67[1];
    *uint64_t v66 = *v67;
    v66[1] = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v4 - 1) + 48);
  if (!v5(a1, 1, v4))
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = a1 + v4[5];
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    uint64_t v10 = a1 + v4[6];
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = a1 + v4[7];
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    v9(a1 + v4[8], v8);
    uint64_t v14 = a1 + v4[9];
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = a1 + v4[10];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = a1 + *(int *)(a2 + 20);
  if (!v5(v18, 1, v4))
  {
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    uint64_t v20 = v18 + v4[5];
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
    v22(v20, v21);
    uint64_t v23 = v18 + v4[6];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    uint64_t v25 = v18 + v4[7];
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    v22(v18 + v4[8], v21);
    uint64_t v27 = v18 + v4[9];
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    uint64_t v29 = v18 + v4[10];
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    uint64_t v11 = v6[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v68 = v7;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    uint64_t v16 = v6[6];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = v6[7];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = v14;
    uint64_t v7 = v68;
    v15(&a1[v6[8]], &a2[v6[8]], v24);
    uint64_t v25 = v6[9];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v6[10];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, int *))(v68 + 56))(a1, 0, 1, v6);
  }
  uint64_t v33 = a3[5];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v8(&a2[v33], 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v37 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v34, v35, v37);
    uint64_t v38 = v6[5];
    uint64_t v69 = v7;
    uint64_t v39 = &v34[v38];
    uint64_t v40 = &v35[v38];
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    char v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    v42(v39, v40, v41);
    uint64_t v43 = v6[6];
    char v44 = &v34[v43];
    uint64_t v45 = &v35[v43];
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = v6[7];
    uint64_t v48 = &v34[v47];
    uint64_t v49 = &v35[v47];
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    v42(&v34[v6[8]], &v35[v6[8]], v41);
    uint64_t v51 = v6[9];
    uint64_t v52 = &v34[v51];
    uint64_t v53 = &v35[v51];
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v6[10];
    uint64_t v56 = &v34[v55];
    uint64_t v57 = &v35[v55];
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    (*(void (**)(char *, void, uint64_t, int *))(v69 + 56))(v34, 0, 1, v6);
  }
  uint64_t v59 = a3[6];
  uint64_t v60 = a3[7];
  uint64_t v61 = &a1[v59];
  uint64_t v62 = &a2[v59];
  uint64_t v63 = *((void *)v62 + 1);
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = v63;
  uint64_t v64 = &a1[v60];
  uint64_t v65 = &a2[v60];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v6[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v113 = v7;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      uint64_t v17 = v6[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      uint64_t v21 = v6[7];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      v16(&a1[v6[8]], &a2[v6[8]], v15);
      uint64_t v7 = v113;
      uint64_t v25 = v6[9];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      uint64_t v29 = v6[10];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, int *))(v113 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)a1, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
LABEL_6:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v69 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 24))(a1, a2, v69);
  uint64_t v70 = v6[5];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v115 = v7;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24);
  v74(v71, v72, v73);
  uint64_t v75 = v6[6];
  uint64_t v76 = &a1[v75];
  uint64_t v77 = &a2[v75];
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
  uint64_t v79 = v6[7];
  uint64_t v80 = &a1[v79];
  uint64_t v81 = &a2[v79];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  v74(&a1[v6[8]], &a2[v6[8]], v73);
  uint64_t v7 = v115;
  uint64_t v83 = v6[9];
  char v84 = &a1[v83];
  uint64_t v85 = &a2[v83];
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  uint64_t v87 = v6[10];
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 24))(v88, v89, v90);
LABEL_7:
  uint64_t v34 = a3[5];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  int v37 = v8(&a1[v34], 1, v6);
  int v38 = v8(v36, 1, v6);
  if (!v37)
  {
    if (!v38)
    {
      uint64_t v91 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 24))(v35, v36, v91);
      uint64_t v92 = v6[5];
      uint64_t v93 = &v35[v92];
      uint64_t v94 = &v36[v92];
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 24);
      v96(v93, v94, v95);
      uint64_t v97 = v6[6];
      long long v98 = &v35[v97];
      long long v99 = &v36[v97];
      uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 24))(v98, v99, v100);
      uint64_t v101 = v6[7];
      uint64_t v102 = &v35[v101];
      char v103 = &v36[v101];
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
      v96(&v35[v6[8]], &v36[v6[8]], v95);
      uint64_t v105 = v6[9];
      char v106 = &v35[v105];
      char v107 = &v36[v105];
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 24))(v106, v107, v108);
      uint64_t v109 = v6[10];
      char v110 = &v35[v109];
      char v111 = &v36[v109];
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 24))(v110, v111, v112);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v35, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v35, v36, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v39 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
  uint64_t v40 = v6[5];
  uint64_t v41 = &v35[v40];
  char v42 = &v36[v40];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v114 = v7;
  char v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  v44(v41, v42, v43);
  uint64_t v45 = v6[6];
  uint64_t v46 = &v35[v45];
  uint64_t v47 = &v36[v45];
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = v6[7];
  uint64_t v50 = &v35[v49];
  uint64_t v51 = &v36[v49];
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  v44(&v35[v6[8]], &v36[v6[8]], v43);
  uint64_t v53 = v6[9];
  uint64_t v54 = &v35[v53];
  uint64_t v55 = &v36[v53];
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
  uint64_t v57 = v6[10];
  uint64_t v58 = &v35[v57];
  uint64_t v59 = &v36[v57];
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  (*(void (**)(char *, void, uint64_t, int *))(v114 + 56))(v35, 0, 1, v6);
LABEL_13:
  uint64_t v62 = a3[6];
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  *(void *)uint64_t v63 = *(void *)v64;
  *((void *)v63 + 1) = *((void *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = a3[7];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  *(void *)uint64_t v66 = *(void *)v67;
  *((void *)v66 + 1) = *((void *)v67 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    uint64_t v11 = v6[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v61 = v7;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    uint64_t v16 = v6[6];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    uint64_t v20 = v6[7];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    uint64_t v24 = v14;
    uint64_t v7 = v61;
    v15(&a1[v6[8]], &a2[v6[8]], v24);
    uint64_t v25 = v6[9];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    uint64_t v29 = v6[10];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, int *))(v61 + 56))(a1, 0, 1, v6);
  }
  uint64_t v33 = a3[5];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v8(&a2[v33], 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v37 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
    uint64_t v38 = v6[5];
    uint64_t v62 = v7;
    uint64_t v39 = &v34[v38];
    uint64_t v40 = &v35[v38];
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
    char v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32);
    v42(v39, v40, v41);
    uint64_t v43 = v6[6];
    char v44 = &v34[v43];
    uint64_t v45 = &v35[v43];
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
    uint64_t v47 = v6[7];
    uint64_t v48 = &v34[v47];
    uint64_t v49 = &v35[v47];
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    v42(&v34[v6[8]], &v35[v6[8]], v41);
    uint64_t v51 = v6[9];
    uint64_t v52 = &v34[v51];
    uint64_t v53 = &v35[v51];
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
    uint64_t v55 = v6[10];
    uint64_t v56 = &v34[v55];
    uint64_t v57 = &v35[v55];
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    (*(void (**)(char *, void, uint64_t, int *))(v62 + 56))(v34, 0, 1, v6);
  }
  uint64_t v59 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v59] = *(_OWORD *)&a2[v59];
  return a1;
}

char *assignWithTake for ForeignEmergencyCallDisambiguationModel(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = v6[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v117 = v7;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      uint64_t v17 = v6[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v21 = v6[7];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      v16(&a1[v6[8]], &a2[v6[8]], v15);
      uint64_t v7 = v117;
      uint64_t v25 = v6[9];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      uint64_t v29 = v6[10];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, int *))(v117 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)a1, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
LABEL_6:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v73 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 40))(a1, a2, v73);
  uint64_t v74 = v6[5];
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v119 = v7;
  uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40);
  v78(v75, v76, v77);
  uint64_t v79 = v6[6];
  uint64_t v80 = &a1[v79];
  uint64_t v81 = &a2[v79];
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
  uint64_t v83 = v6[7];
  char v84 = &a1[v83];
  uint64_t v85 = &a2[v83];
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 40))(v84, v85, v86);
  v78(&a1[v6[8]], &a2[v6[8]], v77);
  uint64_t v7 = v119;
  uint64_t v87 = v6[9];
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = v6[10];
  uint64_t v92 = &a1[v91];
  uint64_t v93 = &a2[v91];
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 40))(v92, v93, v94);
LABEL_7:
  uint64_t v34 = a3[5];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  int v37 = v8(&a1[v34], 1, v6);
  int v38 = v8(v36, 1, v6);
  if (!v37)
  {
    if (!v38)
    {
      uint64_t v95 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 40))(v35, v36, v95);
      uint64_t v96 = v6[5];
      uint64_t v97 = &v35[v96];
      long long v98 = &v36[v96];
      uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 40);
      v100(v97, v98, v99);
      uint64_t v101 = v6[6];
      uint64_t v102 = &v35[v101];
      char v103 = &v36[v101];
      uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 40))(v102, v103, v104);
      uint64_t v105 = v6[7];
      char v106 = &v35[v105];
      char v107 = &v36[v105];
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 40))(v106, v107, v108);
      v100(&v35[v6[8]], &v36[v6[8]], v99);
      uint64_t v109 = v6[9];
      char v110 = &v35[v109];
      char v111 = &v36[v109];
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 40))(v110, v111, v112);
      uint64_t v113 = v6[10];
      uint64_t v114 = &v35[v113];
      uint64_t v115 = &v36[v113];
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 40))(v114, v115, v116);
      goto LABEL_13;
    }
    outlined destroy of DisambiguationItemWithDirectInvocationModel((uint64_t)v35, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    memcpy(v35, v36, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v39 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v35, v36, v39);
  uint64_t v40 = v6[5];
  uint64_t v41 = &v35[v40];
  char v42 = &v36[v40];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v118 = v7;
  char v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32);
  v44(v41, v42, v43);
  uint64_t v45 = v6[6];
  uint64_t v46 = &v35[v45];
  uint64_t v47 = &v36[v45];
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  uint64_t v49 = v6[7];
  uint64_t v50 = &v35[v49];
  uint64_t v51 = &v36[v49];
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  v44(&v35[v6[8]], &v36[v6[8]], v43);
  uint64_t v53 = v6[9];
  uint64_t v54 = &v35[v53];
  uint64_t v55 = &v36[v53];
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  uint64_t v57 = v6[10];
  uint64_t v58 = &v35[v57];
  uint64_t v59 = &v36[v57];
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
  (*(void (**)(char *, void, uint64_t, int *))(v118 + 56))(v35, 0, 1, v6);
LABEL_13:
  uint64_t v62 = a3[6];
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  uint64_t v66 = *(void *)v64;
  uint64_t v65 = *((void *)v64 + 1);
  *(void *)uint64_t v63 = v66;
  *((void *)v63 + 1) = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[7];
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  uint64_t v71 = *(void *)v69;
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = v71;
  *((void *)v68 + 1) = v70;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591DBF84);
}

uint64_t sub_2591DBF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591DC060);
}

uint64_t sub_2591DC060(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void type metadata completion function for ForeignEmergencyCallDisambiguationModel()
{
  type metadata accessor for DisambiguationItemWithDirectInvocationModel?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for DisambiguationItemWithDirectInvocationModel?()
{
  if (!lazy cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?)
  {
    type metadata accessor for DisambiguationItemWithDirectInvocationModel(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for DisambiguationItemWithDirectInvocationModel?);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v18 = (void *)((char *)v4 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

void *assignWithTake for LocalEmergencyCallDisambiguationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591DC8E4);
}

uint64_t sub_2591DC8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591DCA28);
}

uint64_t sub_2591DCA28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void type metadata completion function for LocalEmergencyCallDisambiguationModel()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    _s10SnippetKit8LoggableVySSGMaTm_0(319, (unint64_t *)&lazy cache variable for type metadata for Loggable<String>);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591DCD20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void *type metadata accessor for LocalEmergencyCallDisambiguationModel.CodingKeys()
{
  return &unk_270725450;
}

unsigned char *storeEnumTagSinglePayload for ForeignEmergencyCallDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591DCE24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ForeignEmergencyCallDisambiguationModel.CodingKeys()
{
  return &unk_2707254E0;
}

uint64_t getEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591DCFB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.CodingKeys()
{
  return &unk_270725570;
}

unsigned char *storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591DD0BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType.CodingKeys()
{
  return &unk_270725600;
}

unsigned char *storeEnumTagSinglePayload for DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2591DD190);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType.PhoneNumberCodingKeys()
{
  return &unk_270725690;
}

void *type metadata accessor for DisambiguationItemWithDirectInvocationModel.ItemType.EmergencySentinelPersonCodingKeys()
{
  return &unk_2707256B0;
}

uint64_t specialized DisambiguationItemWithDirectInvocationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61486E6F73726570 && a2 == 0xEC000000656C646ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61486E656B6F7073 && a2 == 0xEC000000656C646ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002592057C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6D6F43656B7372 && a2 == 0xEB00000000646E61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t specialized ForeignEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002592057E0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000259205800 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t specialized LocalEmergencyCallDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x457472616D537369 && a2 == 0xEE0064656C62616ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEE00644977656956)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void View.disambiguationListItem(isFirstElement:)(char a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context();
  char v6 = (void *)EnvironmentObject.init()();
  v8[0] = v6;
  v8[1] = v7;
  char v9 = a1;
  MEMORY[0x25A2D8460](v8, a2, &type metadata for CarPlayDisambiguationListItem, a3);
}

uint64_t CarPlayDisambiguationListItem.isFirstElement.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

void one-time initialization function for listPadding()
{
  static CarPlayDisambiguationListItem.listPadding = 0x4000000000000000;
}

uint64_t CarPlayDisambiguationListItem.body(content:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v22 = a3;
  uint64_t v23 = a1;
  uint64_t v24 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<CarPlayDisambiguationListItem>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>>.Storage);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentSpacing(top:bottom:)>>.0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    id v16 = a2;
    dispatch thunk of Context.currentIdiom.getter();

    if (VRXIdiom.isCarPlay.getter() & 1) == 0 || (v22)
    {
      uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
      v19(v8, v23, v5);
      v19(v11, (uint64_t)v8, v5);
      swift_storeEnumTagMultiPayload();
      unint64_t v20 = lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>();
      uint64_t v25 = v5;
      unint64_t v26 = v20;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      if (one-time initialization token for listPadding != -1) {
        swift_once();
      }
      unint64_t v17 = lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>();
      View.componentSpacing(top:bottom:)();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v11, v15, v12);
      swift_storeEnumTagMultiPayload();
      uint64_t v25 = v5;
      unint64_t v26 = v17;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  else
  {
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t CarPlayDisambiguationListItem.init(isFirstElement:)()
{
  return EnvironmentObject.init()();
}

unint64_t lazy protocol witness table accessor for type Context and conformance Context()
{
  unint64_t result = lazy protocol witness table cache variable for type Context and conformance Context;
  if (!lazy protocol witness table cache variable for type Context and conformance Context)
  {
    type metadata accessor for Context();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context);
  }
  return result;
}

uint64_t protocol witness for static ViewModifier._makeView(modifier:inputs:body:) in conformance CarPlayDisambiguationListItem()
{
  return MEMORY[0x270EFF518]();
}

uint64_t protocol witness for static ViewModifier._makeViewList(modifier:inputs:body:) in conformance CarPlayDisambiguationListItem()
{
  return MEMORY[0x270EFF528]();
}

uint64_t protocol witness for static ViewModifier._viewListCount(inputs:body:) in conformance CarPlayDisambiguationListItem()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance CarPlayDisambiguationListItem@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CarPlayDisambiguationListItem.body(content:)(a1, *(void **)v2, *(unsigned __int8 *)(v2 + 16), a2);
}

unint64_t lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>;
  if (!lazy protocol witness table cache variable for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<CarPlayDisambiguationListItem>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>);
  }
  return result;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in CarPlayDisambiguationListItem()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for CarPlayDisambiguationListItem(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  return a1;
}

void destroy for CarPlayDisambiguationListItem(id *a1)
{
}

uint64_t assignWithCopy for CarPlayDisambiguationListItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CarPlayDisambiguationListItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayDisambiguationListItem(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayDisambiguationListItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarPlayDisambiguationListItem()
{
  return &type metadata for CarPlayDisambiguationListItem;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<CarPlayDisambiguationListItem>);
    lazy protocol witness table accessor for type _ViewModifier_Content<CarPlayDisambiguationListItem> and conformance _ViewModifier_Content<A>();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.componentSpacing(top:bottom:)>>.0, _ViewModifier_Content<CarPlayDisambiguationListItem>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t sub_2591DE674()
{
  return swift_getWitnessTable();
}

uint64_t LoggableError.logged(shouldLogToAbc:shouldCreateTTR:)@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  LODWORD(v65) = a2;
  uint64_t v67 = a5;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v66 = ((char *)&v59 - v16);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  unint64_t v19 = v72;
  uint64_t v63 = v71;
  uint64_t v68 = v10;
  uint64_t v69 = v11;
  if (a1)
  {
    uint64_t v64 = v14;
    uint64_t v61 = *(void (**)(uint64_t, uint64_t))(a4 + 32);
    uint64_t v62 = (void (*)(uint64_t, uint64_t))(a4 + 32);
    v61(a3, a4);
    swift_bridgeObjectRetain_n();
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v71 = v23;
      *(_DWORD *)int v22 = 136315138;
      uint64_t v60 = (void (*)(uint64_t, uint64_t))(v22 + 4);
      swift_bridgeObjectRetain();
      uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v19, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25915D000, v20, v21, "#LoggableError Trying ABC for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v23, -1, -1);
      MEMORY[0x25A2D96D0](v22, -1, -1);

      uint64_t v24 = v68;
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      unint64_t v26 = v18;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      unint64_t v26 = v18;
      uint64_t v24 = v10;
    }
    uint64_t v60 = v25;
    v25((uint64_t)v26, v24);
    uint64_t v27 = LoggableError.caseName.getter(a3);
    unint64_t v29 = v28;
    uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    unint64_t v72 = v30;
    v31._uint64_t countAndFlagsBits = 657930;
    v31._object = (void *)0xE300000000000000;
    String.append(_:)(v31);
    v32._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = v71;
    uint64_t v34 = v72;
    uint64_t v35 = (uint64_t)v66;
    v61(a3, a4);
    specialized static FileRadarUtils.autoBugCapture(errorType:errorSubType:subTypeContext:logger:)(0x4C41544146, 0xE500000000000000, v27, v29, v33, v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v68;
    v60(v35, v68);
    uint64_t v14 = v64;
  }
  if (v65)
  {
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(a4 + 32);
    uint64_t v65 = a4 + 32;
    uint64_t v62 = v36;
    v36(a3, a4);
    swift_bridgeObjectRetain();
    int v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v64 = v14;
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v71 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v70 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v19, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25915D000, v37, v38, "#LoggableError Trying TTR for %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2D96D0](v40, -1, -1);
      MEMORY[0x25A2D96D0](v39, -1, -1);

      uint64_t v41 = v68;
      char v42 = *(char **)(v69 + 8);
      uint64_t v43 = v64;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      char v42 = *(char **)(v69 + 8);
      uint64_t v43 = v14;
      uint64_t v41 = v10;
    }
    uint64_t v64 = v42;
    ((void (*)(char *, uint64_t))v42)(v43, v41);
    uint64_t v71 = 0;
    unint64_t v72 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v71 = 0xD00000000000001ALL;
    unint64_t v72 = 0x80000002592051F0;
    v44._uint64_t countAndFlagsBits = LoggableError.caseName.getter(a3);
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    unint64_t v45 = v72;
    uint64_t v63 = v71;
    uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    unint64_t v72 = v46;
    v47._uint64_t countAndFlagsBits = 657930;
    v47._object = (void *)0xE300000000000000;
    String.append(_:)(v47);
    v48._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    String.append(_:)(v48);
    swift_bridgeObjectRelease();
    v49._uint64_t countAndFlagsBits = 657930;
    v49._object = (void *)0xE300000000000000;
    String.append(_:)(v49);
    v50._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    uint64_t v52 = v71;
    uint64_t v51 = v72;
    uint64_t v71 = 0;
    unint64_t v72 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v53._uint64_t countAndFlagsBits = 0x45656E6F68502061;
    v53._object = (void *)0xEE002820726F7272;
    String.append(_:)(v53);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v54._uint64_t countAndFlagsBits = 0x6564207361772029;
    v54._object = (void *)0xEF2E646574636574;
    String.append(_:)(v54);
    uint64_t v55 = v71;
    uint64_t v56 = v72;
    uint64_t v57 = v66;
    v62(a3, a4);
    specialized static FileRadarUtils.tapToRadar(title:desc:reason:logger:)(v63, v45, v52, v51, v55, v56, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(NSObject *, uint64_t))v64)(v57, v68);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v67, v6, a3);
}

uint64_t LoggableError.caseName.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Mirror();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = a1;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v12(boxed_opaque_existential_1, v2, a1);
  Mirror.init(reflecting:)();
  Mirror.children.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  specialized Collection.first.getter(&v20);
  swift_release();
  if (!v21[3])
  {
    outlined destroy of (label: String?, value: Any)?((uint64_t)&v20);
    v12((uint64_t *)v6, v2, a1);
LABEL_5:
    *(void *)&long long v20 = 0;
    *((void *)&v20 + 1) = 0xE000000000000000;
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    uint64_t v13 = (void *)*((void *)&v20 + 1);
    uint64_t v14 = v20;
    goto LABEL_6;
  }
  uint64_t v13 = (void *)*((void *)&v20 + 1);
  uint64_t v14 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v12((uint64_t *)v6, v2, a1);
  if (!v13) {
    goto LABEL_5;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  swift_getDynamicType();
  *(void *)&long long v20 = _typeName(_:qualified:)();
  *((void *)&v20 + 1) = v15;
  v16._uint64_t countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = v14;
  v17._object = v13;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t specialized Collection.first.getter@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = dispatch thunk of _AnyIndexBox._typeID.getter();
  swift_getObjectType();
  uint64_t result = dispatch thunk of _AnyIndexBox._typeID.getter();
  if (v2 == result)
  {
    char v4 = dispatch thunk of _AnyIndexBox._isEqual(to:)();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      dispatch thunk of _AnyCollectionBox.subscript.getter();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t one-time initialization function for cancelUtterance(uint64_t a1)
{
  return one-time initialization function for cancelUtterance(a1, 28526, 0xE200000000000000, &static PhoneStartRequestUtterances.cancelUtterance, &qword_26A37C460);
}

uint64_t *PhoneStartRequestUtterances.cancelUtterance.unsafeMutableAddressor()
{
  if (one-time initialization token for cancelUtterance != -1) {
    swift_once();
  }
  return &static PhoneStartRequestUtterances.cancelUtterance;
}

uint64_t static PhoneStartRequestUtterances.cancelUtterance.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for cancelUtterance, &static PhoneStartRequestUtterances.cancelUtterance);
}

uint64_t one-time initialization function for confirmUtterance(uint64_t a1)
{
  return one-time initialization function for cancelUtterance(a1, 7562617, 0xE300000000000000, &static PhoneStartRequestUtterances.confirmUtterance, &qword_26A37C470);
}

uint64_t one-time initialization function for cancelUtterance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  type metadata accessor for MachineUtteranceBuilder();
  swift_allocObject();
  MachineUtteranceBuilder.init()();
  dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
  swift_release();
  uint64_t v7 = dispatch thunk of MachineUtteranceBuilder.build()();
  uint64_t v9 = v8;
  uint64_t result = swift_release();
  *a4 = v7;
  *a5 = v9;
  return result;
}

uint64_t *PhoneStartRequestUtterances.confirmUtterance.unsafeMutableAddressor()
{
  if (one-time initialization token for confirmUtterance != -1) {
    swift_once();
  }
  return &static PhoneStartRequestUtterances.confirmUtterance;
}

uint64_t static PhoneStartRequestUtterances.confirmUtterance.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for confirmUtterance, &static PhoneStartRequestUtterances.confirmUtterance);
}

uint64_t static PhoneStartRequestUtterances.cancelUtterance.getter(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for PhoneStartRequestUtterances()
{
  return &type metadata for PhoneStartRequestUtterances;
}

uint64_t AppDescription.rskeCommand.getter()
{
  return CodableAceObject.wrappedValue.getter();
}

uint64_t type metadata accessor for AppDescription()
{
  uint64_t result = type metadata singleton initialization cache for AppDescription;
  if (!type metadata singleton initialization cache for AppDescription) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppDescription.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AppDescription.appName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppDescription() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppDescription.appBundleId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppDescription() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppDescription.isFirstParty.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppDescription() + 28));
}

uint64_t property wrapper backing initializer of AppDescription.rskeCommand()
{
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t key path setter for AppDescription.rskeCommand : AppDescription(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for AppDescription();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  return CodableAceObject.wrappedValue.setter();
}

uint64_t AppDescription.rskeCommand.setter()
{
  return CodableAceObject.wrappedValue.setter();
}

void (*AppDescription.rskeCommand.modify(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  v2[4] = CodableAceObject.wrappedValue.modify();
  return SearchCallHistoryBinaryButtonModel.primaryText.modify;
}

uint64_t AppDescription.init(id:appName:appBundleId:isFirstParty:rskeCommand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a7, a1, v14);
  uint64_t v15 = (int *)type metadata accessor for AppDescription();
  Swift::String v16 = (void *)(a7 + v15[5]);
  *Swift::String v16 = a2;
  v16[1] = a3;
  Swift::String v17 = (void *)(a7 + v15[6]);
  *Swift::String v17 = a4;
  v17[1] = a5;
  *(unsigned char *)(a7 + v15[7]) = a6;
  type metadata accessor for SAIntentGroupRunSiriKitExecutor();
  CodableAceObject.init(wrappedValue:)();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
  return v18(a1, v14);
}

uint64_t static AppDescription.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for AppDescription() + 24);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t AppDescription.hash(into:)()
{
  type metadata accessor for AppDescription();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

uint64_t AppDescription.CodingKeys.stringValue.getter(char a1)
{
  return qword_259204338[a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDescription.CodingKeys()
{
  return AppDescription.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDescription.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized AppDescription.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDescription.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDescription.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppDescription.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDescription.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  _s10Foundation4UUIDVACSEAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for AppDescription();
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys);
  }
  return result;
}

Swift::Int AppDescription.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t AppDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v29 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDescription.CodingKeys>);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for AppDescription();
  MEMORY[0x270FA5388](v9);
  size_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDescription.CodingKeys and conformance AppDescription.CodingKeys();
  Swift::String v31 = v8;
  uint64_t v12 = (uint64_t)v32;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v23 = v4;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  Swift::String v32 = a1;
  char v37 = 0;
  _s10Foundation4UUIDVACSEAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v29, v5);
  char v36 = 1;
  uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
  Swift::String v16 = (uint64_t *)&v11[v9[5]];
  *Swift::String v16 = v15;
  v16[1] = v17;
  char v35 = 2;
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  unint64_t v19 = (uint64_t *)&v11[v9[6]];
  uint64_t *v19 = v18;
  v19[1] = v20;
  char v34 = 3;
  v11[v9[7]] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  char v33 = 4;
  lazy protocol witness table accessor for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>(&lazy protocol witness table cache variable for type CodableAceObject<SAIntentGroupRunSiriKitExecutor> and conformance CodableAceObject<A>);
  os_log_type_t v21 = v23;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v30);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v11[v9[8]], v21, v14);
  outlined init with copy of AppDescription((uint64_t)v11, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return outlined destroy of AppDescription((uint64_t)v11);
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDescription@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppDescription.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDescription(void *a1)
{
  return AppDescription.encode(to:)(a1);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance AppDescription()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance AppDescription()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance AppDescription()
{
  return Hasher._finalize()();
}

uint64_t outlined init with copy of AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of AppDescription(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance AppDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 24);
  if (*(void *)(a1 + v3) == *(void *)(a2 + v3) && *(void *)(a1 + v3 + 8) == *(void *)(a2 + v3 + 8)) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t AppDisambiguationModel.prompt.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t AppDisambiguationModel.responseViewId.getter()
{
  return 0xD000000000000011;
}

uint64_t AppDisambiguationModel.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x74706D6F7270;
  }
  else {
    return 0x7263736544707061;
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance AppDisambiguationModel.CodingKeys()
{
  return AppDisambiguationModel.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance AppDisambiguationModel.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized AppDisambiguationModel.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance AppDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AppDisambiguationModel.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppDisambiguationModel.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<AppDisambiguationModel.CodingKeys>);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v15 = a2;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
  lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](&lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A], &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v4)
  {
    char v13 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys;
  if (!lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys);
  }
  return result;
}

uint64_t AppDisambiguationModel.init(from:)(void *a1)
{
  uint64_t result = specialized AppDisambiguationModel.init(from:)(a1);
  if (v1) {
    return v3;
  }
  return result;
}

unint64_t protocol witness for PhoneSnippetModel.responseViewId.getter in conformance AppDisambiguationModel()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for Decodable.init(from:) in conformance AppDisambiguationModel@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized AppDisambiguationModel.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance AppDisambiguationModel(void *a1)
{
  return AppDisambiguationModel.encode(to:)(a1, *v1, v1[1], v1[2]);
}

uint64_t specialized AppDescription.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5074737269467369 && a2 == 0xEC00000079747261 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6D6F43656B7372 && a2 == 0xEB00000000646E61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t specialized AppDisambiguationModel.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7263736544707061 && a2 == 0xEF736E6F69747069;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized AppDisambiguationModel.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<AppDisambiguationModel.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  lazy protocol witness table accessor for type AppDisambiguationModel.CodingKeys and conformance AppDisambiguationModel.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AppDescription]);
    v9[7] = 0;
    lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](&lazy protocol witness table cache variable for type [AppDescription] and conformance <A> [A], &lazy protocol witness table cache variable for type AppDescription and conformance AppDescription);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in AppDescription()
{
  return _s10Foundation4UUIDVACSEAAWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x263F07508]);
}

uint64_t base witness table accessor for Equatable in AppDescription()
{
  return _s10Foundation4UUIDVACSEAAWlTm_0(&lazy protocol witness table cache variable for type AppDescription and conformance AppDescription, (void (*)(uint64_t))type metadata accessor for AppDescription);
}

unint64_t instantiation function for generic protocol witness table for AppDisambiguationModel(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type AppDisambiguationModel and conformance AppDisambiguationModel();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2591E1558@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AppDescription();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t result = CodableAceObject.wrappedValue.getter();
  *a1 = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for AppDescription(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    size_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    char v13 = (void *)((char *)a1 + v9);
    char v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *char v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AppDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  char v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for AppDescription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591E1BB8);
}

uint64_t sub_2591E1BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for AppDescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591E1D00);
}

uint64_t sub_2591E1D00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void type metadata completion function for AppDescription()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CodableAceObject<SAIntentGroupRunSiriKitExecutor>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for AppDisambiguationModel()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for AppDisambiguationModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppDisambiguationModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for AppDisambiguationModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppDisambiguationModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDisambiguationModel()
{
  return &type metadata for AppDisambiguationModel;
}

unsigned char *storeEnumTagSinglePayload for AppDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591E21B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for AppDisambiguationModel.CodingKeys()
{
  return &unk_270725878;
}

unsigned char *storeEnumTagSinglePayload for AppDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591E22BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for AppDescription.CodingKeys()
{
  return &unk_270725908;
}

uint64_t lazy protocol witness table accessor for type [AppDescription] and conformance <A> [A](unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [AppDescription]);
    _s10Foundation4UUIDVACSEAAWlTm_0(a2, (void (*)(uint64_t))type metadata accessor for AppDescription);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s10Foundation4UUIDVACSEAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PhoneContactHeader.appBundleId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.contactId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.handle.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoneContactHeader.isFirstPartyApp.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t PhoneContactHeader.description.getter()
{
  _StringGuts.grow(_:)(95);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v1._object = (void *)0x8000000259205A90;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)v0;
  int v3 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x6361746E6F63202CLL;
  v5._object = (void *)0xEC0000003D644974;
  String.append(_:)(v5);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x616C70736964202CLL;
  v9._object = (void *)0xEE003D656D614E79;
  String.append(_:)(v9);
  uint64_t v10 = *(void *)(v0 + 32);
  uint64_t v11 = *(void **)(v0 + 40);
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0x656C646E6168202CLL;
  v13._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v13);
  uint64_t v14 = *(void *)(v0 + 48);
  uint64_t v15 = *(void **)(v0 + 56);
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._object = (void *)0x8000000259205AB0;
  v17._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v17);
  if (*(unsigned char *)(v0 + 64)) {
    uint64_t v18 = 1702195828;
  }
  else {
    uint64_t v18 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 64)) {
    unint64_t v19 = 0xE400000000000000;
  }
  else {
    unint64_t v19 = 0xE500000000000000;
  }
  unint64_t v20 = v19;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 41;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  return 0;
}

uint64_t PhoneContactHeader.CodingKeys.stringValue.getter(char a1)
{
  return *(void *)&aAppbundlcontac[8 * a1];
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance PhoneContactHeader.CodingKeys()
{
  return PhoneContactHeader.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance PhoneContactHeader.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized PhoneContactHeader.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance PhoneContactHeader.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance PhoneContactHeader.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PhoneContactHeader.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<PhoneContactHeader.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys;
  if (!lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys);
  }
  return result;
}

void __swiftcall PhoneContactHeader.init(appBundleId:contactId:displayName:handle:isFirstPartyApp:)(PhoneSnippetUI::PhoneContactHeader *__return_ptr retstr, Swift::String appBundleId, Swift::String contactId, Swift::String displayName, Swift::String handle, Swift::Bool isFirstPartyApp)
{
  retstr->appBundleId = appBundleId;
  retstr->contactId = contactId;
  retstr->displayName = displayName;
  retstr->handle = handle;
  retstr->isFirstPartyApp = isFirstPartyApp;
}

__n128 PhoneContactHeader.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  specialized PhoneContactHeader.init(from:)(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

__n128 protocol witness for Decodable.init(from:) in conformance PhoneContactHeader@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  specialized PhoneContactHeader.init(from:)(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance PhoneContactHeader(void *a1)
{
  return PhoneContactHeader.encode(to:)(a1);
}

uint64_t specialized PhoneContactHeader.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C646E6168 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5074737269467369 && a2 == 0xEF70704179747261)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t specialized PhoneContactHeader.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<PhoneContactHeader.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  Swift::String v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type PhoneContactHeader.CodingKeys and conformance PhoneContactHeader.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v35 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v29 = v9;
  char v34 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v30 = v13;
  uint64_t v26 = v12;
  char v33 = 2;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  uint64_t v25 = KeyedDecodingContainer.decode(_:forKey:)();
  char v32 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v27 = v15;
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  char v31 = 4;
  swift_bridgeObjectRetain();
  char v18 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v19 = v24;
  swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  swift_bridgeObjectRelease();
  uint64_t v21 = v30;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v19;
  *(unsigned char *)(a2 + 64) = v18 & 1;
  return result;
}

uint64_t destroy for PhoneContactHeader()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PhoneContactHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneContactHeader(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneContactHeader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneContactHeader()
{
  return &type metadata for PhoneContactHeader;
}

unsigned char *storeEnumTagSinglePayload for PhoneContactHeader.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2591E35F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

void *type metadata accessor for PhoneContactHeader.CodingKeys()
{
  return &unk_270725A58;
}

Swift::String __swiftcall String.firstLetterCapitalized()()
{
  uint64_t v2 = String.firstLetterCapitalized()(v0, v1, MEMORY[0x263F8D958]);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall String.firstLetterLowercased()()
{
  uint64_t v2 = String.firstLetterCapitalized()(v0, v1, MEMORY[0x263F8D948]);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t String.firstLetterCapitalized()(unint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v7 = specialized Collection.prefix(_:)(1, a1, a2, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3(v7, v9, v11, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1uLL, a1, a2, v15);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t String.remove(characters:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void v6[2] = a1;
  swift_bridgeObjectRetain();
  return specialized RangeReplaceableCollection.filter(_:)((uint64_t (*)(void *))partial apply for closure #1 in String.remove(characters:), (uint64_t)v6, a2, a3);
}

uint64_t specialized RangeReplaceableCollection.filter(_:)(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v19 = a2;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v9 = 0;
    uint64_t v15 = a4 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v16[0] = a3;
          v16[1] = v15;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          _StringObject.sharedUTF8.getter();
        }
        int v10 = _decodeScalar(_:startingAt:)();
      }
      uint64_t v12 = v11;
      LODWORD(v16[0]) = v10;
      char v13 = a1(v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13) {
        String.UnicodeScalarView.append(_:)();
      }
      v9 += v12;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t String.lowercasedWithFirstUppercased.getter()
{
  Swift::String v0 = String.lowercased()();
  swift_bridgeObjectRetain();
  specialized Collection.prefix(_:)(1, v0._countAndFlagsBits, (unint64_t)v0._object, v1);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = Substring.uppercased()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  specialized Collection.dropFirst(_:)(1uLL, v0._countAndFlagsBits, (unint64_t)v0._object, v3);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

BOOL String.isPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  int v10 = (char *)v22 - v9;
  static CharacterSet.decimalDigits.getter();
  v11._uint64_t countAndFlagsBits = 757671979;
  v11._object = (void *)0xE400000000000000;
  CharacterSet.insert(charactersIn:)(v11);
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_controlCharacterSet);
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  CharacterSet.formUnion(_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  id v15 = objc_msgSend(v12, sel_whitespaceAndNewlineCharacterSet);
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  CharacterSet.formUnion(_:)();
  v14(v8, v4);
  v22[0] = a1;
  v22[1] = a2;
  lazy protocol witness table accessor for type String and conformance String();
  v22[0] = StringProtocol.components(separatedBy:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v20 = v19 == 0;
  v14(v10, v4);
  return v20;
}

BOOL partial apply for closure #1 in String.remove(characters:)()
{
  return (CharacterSet.contains(_:)() & 1) == 0;
}

unint64_t lazy protocol witness table accessor for type [String] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [String] and conformance [A];
  if (!lazy protocol witness table cache variable for type [String] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [String]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A]);
  }
  return result;
}

uint64_t ContactConfirmationView.contactHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContactConfirmationView();
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(v1 + *(int *)(v3 + 24), a1, &demangling cache variable for type metadata for PhoneContactHeader?);
}

uint64_t type metadata accessor for ContactConfirmationView()
{
  uint64_t result = type metadata singleton initialization cache for ContactConfirmationView;
  if (!type metadata singleton initialization cache for ContactConfirmationView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ContactConfirmationView.yesNoConfirmationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ContactConfirmationView();
  return _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
}

uint64_t ContactConfirmationView.appId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ContactConfirmationView() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationView.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ContactConfirmationView() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactConfirmationView.init(confirmationModel:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  lazy protocol witness table accessor for type Context and conformance Context();
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = (int *)type metadata accessor for ContactConfirmationView();
  ActionHandler.init()();
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = (uint64_t *)((char *)a2 + v5[8]);
  *uint64_t v7 = *(void *)(a1 + 16);
  v7[1] = v6;
  uint64_t v8 = (int *)type metadata accessor for ContactConfirmationModel();
  uint64_t v9 = a1 + v8[7];
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(v9 + 48);
  uint64_t v23 = *(void *)(v9 + 40);
  uint64_t v22 = *(void *)(v9 + 56);
  char v16 = *(unsigned char *)(v9 + 64);
  unint64_t v17 = (char *)a2 + v5[6];
  *(void *)unint64_t v17 = v10;
  *((void *)v17 + 1) = v11;
  *((void *)v17 + 2) = v12;
  *((void *)v17 + 3) = v13;
  *((void *)v17 + 4) = v14;
  *((void *)v17 + 5) = v23;
  *((void *)v17 + 6) = v15;
  *((void *)v17 + 7) = v22;
  v17[64] = v16;
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(a1 + v8[6], (uint64_t)a2 + v5[7], (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
  unint64_t v18 = (uint64_t *)(a1 + v8[8]);
  uint64_t v19 = v18[1];
  uint64_t v24 = *v18;
  swift_bridgeObjectRetain();
  outlined copy of PhoneContactHeader?(v10, v11);
  swift_bridgeObjectRetain();
  uint64_t result = outlined destroy of ContactConfirmationModel(a1, (uint64_t (*)(void))type metadata accessor for ContactConfirmationModel);
  uint64_t v21 = (uint64_t *)((char *)a2 + v5[9]);
  void *v21 = v24;
  v21[1] = v19;
  return result;
}

uint64_t outlined copy of PhoneContactHeader?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ContactConfirmationView.body.getter()
{
  uint64_t v1 = type metadata accessor for ContactConfirmationView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(v0, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContactConfirmationView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of ContactConfirmationView((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>);
  return ComponentStack.init(content:)();
}

uint64_t closure #1 in ContactConfirmationView.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v93 = type metadata accessor for YesNoConfirmationView();
  uint64_t v3 = MEMORY[0x270FA5388](v93);
  uint64_t v98 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v96 = (char *)&v82 - v5;
  uint64_t v6 = type metadata accessor for SeparatorStyle();
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v89 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v86 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v91 = *(void *)(v8 - 8);
  uint64_t v92 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v95 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v100 = (uint64_t)&v82 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SummaryItemTextView?);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v94 = (uint64_t)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v99 = (uint64_t)&v82 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Color?);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v85 = (char *)&v82 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VisualProperty?);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for SashStandard.Title();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char **)((char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for SashStandard();
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v90 = (uint64_t)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v101 = (uint64_t)&v82 - v34;
  uint64_t v35 = type metadata accessor for ContactConfirmationView();
  char v36 = (int *)v35;
  char v37 = (uint64_t *)((char *)a1 + *(int *)(v35 + 32));
  uint64_t v38 = v37[1];
  if (v38)
  {
    uint64_t v82 = v21;
    uint64_t v83 = (int *)v35;
    char v84 = a1;
    uint64_t v39 = *a1;
    if (!*a1)
    {
      type metadata accessor for Context();
      lazy protocol witness table accessor for type Context and conformance Context();
      swift_bridgeObjectRetain();
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
      return result;
    }
    uint64_t v40 = *v37;
    swift_bridgeObjectRetain();
    id v41 = v39;
    dispatch thunk of Context.currentIdiom.getter();

    if ((VRXIdiom.isCarPlay.getter() & 1) == 0)
    {
      *uint64_t v29 = v40;
      v29[1] = v38;
      (*(void (**)(void *, void, uint64_t))(v27 + 104))(v29, *MEMORY[0x263F767F0], v26);
      uint64_t v43 = type metadata accessor for VisualProperty();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v25, 1, 1, v43);
      uint64_t v44 = type metadata accessor for Color();
      unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
      v45(v85, 1, 1, v44);
      v45(v82, 1, 1, v44);
      uint64_t v117 = 0;
      long long v115 = 0u;
      long long v116 = 0u;
      SashStandard.init(title:thumbnail:titleColor:backgroundColor:action:componentName:showOnWatch:)();
      uint64_t v46 = v101;
      SashStandardView.init(model:)();
      uint64_t v47 = type metadata accessor for SashStandardView();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
      char v36 = v83;
      a1 = v84;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    char v36 = v83;
    a1 = v84;
  }
  uint64_t v42 = type metadata accessor for SashStandardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v101, 1, 1, v42);
LABEL_7:
  Swift::String v48 = (uint64_t *)((char *)a1 + v36[9]);
  uint64_t v49 = v48[1];
  if (v49)
  {
    uint64_t v50 = *v48;
    uint64_t v117 = 0;
    long long v115 = 0u;
    long long v116 = 0u;
    uint64_t v113 = MEMORY[0x263F8D310];
    uint64_t v114 = MEMORY[0x263F779A0];
    uint64_t v111 = v50;
    uint64_t v112 = v49;
    uint64_t v110 = 0;
    long long v108 = 0u;
    long long v109 = 0u;
    uint64_t v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
    uint64_t v104 = 0;
    long long v102 = 0u;
    long long v103 = 0u;
    swift_bridgeObjectRetain();
    uint64_t v51 = v99;
    SummaryItemTextView.init(text1:text2:text3:text4:text5:)();
    uint64_t v52 = type metadata accessor for SummaryItemTextView();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
  }
  else
  {
    uint64_t v53 = type metadata accessor for SummaryItemTextView();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v99, 1, 1, v53);
  }
  Swift::String v54 = (char *)a1 + v36[6];
  uint64_t v55 = *((void *)v54 + 1);
  if (v55)
  {
    char v56 = v54[64];
    uint64_t v57 = (char *)*((void *)v54 + 6);
    uint64_t v58 = *((void *)v54 + 7);
    uint64_t v59 = *((void *)v54 + 5);
    char v84 = (void **)*((void *)v54 + 4);
    uint64_t v85 = v57;
    uint64_t v60 = *((void *)v54 + 3);
    uint64_t v82 = (char *)*((void *)v54 + 2);
    uint64_t v61 = a1;
    uint64_t v62 = *(void *)v54;
    LODWORD(v83) = v56 & 1;
    type metadata accessor for Context();
    lazy protocol witness table accessor for type Context and conformance Context();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)&long long v115 = EnvironmentObject.init()();
    *((void *)&v115 + 1) = v63;
    *(void *)&long long v116 = 0x4024000000000000;
    *((void *)&v116 + 1) = v62;
    a1 = v61;
    uint64_t v117 = v55;
    uint64_t v118 = v82;
    uint64_t v119 = v60;
    long long v120 = v84;
    uint64_t v64 = v86;
    uint64_t v121 = v59;
    uint64_t v122 = v85;
    uint64_t v123 = v58;
    char v124 = (char)v83;
    uint64_t v66 = v88;
    uint64_t v65 = v89;
    (*(void (**)(char *, void, uint64_t))(v88 + 104))(v86, *MEMORY[0x263F76990], v89);
    lazy protocol witness table accessor for type ContactHeaderView and conformance ContactHeaderView();
    uint64_t v67 = v87;
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v65);
    uint64_t v68 = (void *)v115;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v70 = v91;
    uint64_t v69 = v92;
    uint64_t v71 = v100;
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v100, v67, v92);
    uint64_t v72 = 0;
  }
  else
  {
    uint64_t v72 = 1;
    uint64_t v71 = v100;
    uint64_t v70 = v91;
    uint64_t v69 = v92;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, v72, 1, v69);
  uint64_t v73 = (uint64_t)v96;
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1((uint64_t)a1 + v36[7], (uint64_t)&v96[*(int *)(v93 + 20)], (uint64_t (*)(void))type metadata accessor for YesNoConfirmationModel);
  ActionHandler.init()();
  uint64_t v74 = v90;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v101, v90, &demangling cache variable for type metadata for SashStandardView?);
  uint64_t v75 = v99;
  uint64_t v76 = v94;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v99, v94, &demangling cache variable for type metadata for SummaryItemTextView?);
  uint64_t v77 = v95;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v71, v95, &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  uint64_t v78 = v98;
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(v73, v98, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  uint64_t v79 = v97;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v74, v97, &demangling cache variable for type metadata for SashStandardView?);
  uint64_t v80 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v76, v79 + v80[12], &demangling cache variable for type metadata for SummaryItemTextView?);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v77, v79 + v80[16], &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(v78, v79 + v80[20], (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  outlined destroy of ContactConfirmationModel(v73, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v100, &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v75, &demangling cache variable for type metadata for SummaryItemTextView?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v101, &demangling cache variable for type metadata for SashStandardView?);
  outlined destroy of ContactConfirmationModel(v78, (uint64_t (*)(void))type metadata accessor for YesNoConfirmationView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v77, &demangling cache variable for type metadata for (<<opaque return type of View.separators(_:isOverride:)>>.0)?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v76, &demangling cache variable for type metadata for SummaryItemTextView?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v74, &demangling cache variable for type metadata for SashStandardView?);
}

uint64_t outlined init with take of ContactConfirmationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactConfirmationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t associated type witness table accessor for View.Body : View in ContactConfirmationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ContactConfirmationView(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(v1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContactConfirmationView);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of ContactConfirmationView((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>);
  return ComponentStack.init(content:)();
}

char *initializeBufferWithCopyOfBuffer for ContactConfirmationView(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(void *)(v16 + 8);
    if (v17)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v17;
      uint64_t v18 = *(void *)(v16 + 24);
      *((void *)v15 + 2) = *(void *)(v16 + 16);
      *((void *)v15 + 3) = v18;
      uint64_t v19 = *(void *)(v16 + 40);
      *((void *)v15 + 4) = *(void *)(v16 + 32);
      *((void *)v15 + 5) = v19;
      uint64_t v20 = *(void *)(v16 + 56);
      *((void *)v15 + 6) = *(void *)(v16 + 48);
      *((void *)v15 + 7) = v20;
      v15[64] = *(unsigned char *)(v16 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v21 = *(_OWORD *)(v16 + 48);
      *((_OWORD *)v15 + 2) = *(_OWORD *)(v16 + 32);
      *((_OWORD *)v15 + 3) = v21;
      v15[64] = *(unsigned char *)(v16 + 64);
      long long v22 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v22;
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = &v7[v23];
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    v47(v24, v25, v26);
    uint64_t v27 = (int *)type metadata accessor for YesNoConfirmationModel();
    uint64_t v28 = v27[5];
    uint64_t v29 = &v24[v28];
    uint64_t v30 = v25 + v28;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v46 = a3;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    v32(v29, v30, v31);
    v47(&v24[v27[6]], v25 + v27[6], v26);
    v32(&v24[v27[7]], v25 + v27[7], v31);
    uint64_t v33 = v27[8];
    uint64_t v34 = &v24[v33];
    uint64_t v35 = (void *)(v25 + v33);
    uint64_t v36 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v46[8];
    uint64_t v38 = v46[9];
    uint64_t v39 = &v7[v37];
    uint64_t v40 = (char **)((char *)a2 + v37);
    uint64_t v41 = v40[1];
    *(void *)uint64_t v39 = *v40;
    *((void *)v39 + 1) = v41;
    uint64_t v42 = &v7[v38];
    uint64_t v43 = (char **)((char *)a2 + v38);
    uint64_t v44 = v43[1];
    *(void *)uint64_t v42 = *v43;
    *((void *)v42 + 1) = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ContactConfirmationView(id *a1, int *a2)
{
  unint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(id *)((char *)a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = (char *)a1 + a2[7];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v13 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v13(v6, v7);
  uint64_t v8 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v9 = &v6[v8[5]];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v11 = *(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v13(&v6[v8[6]], v7);
  v11(&v6[v8[7]], v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactConfirmationView(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v16 + 8);
  if (v17)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = *(void *)(v16 + 24);
    *((void *)v15 + 2) = *(void *)(v16 + 16);
    *((void *)v15 + 3) = v18;
    uint64_t v19 = *(void *)(v16 + 40);
    *((void *)v15 + 4) = *(void *)(v16 + 32);
    *((void *)v15 + 5) = v19;
    uint64_t v20 = *(void *)(v16 + 56);
    *((void *)v15 + 6) = *(void *)(v16 + 48);
    *((void *)v15 + 7) = v20;
    v15[64] = *(unsigned char *)(v16 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(v16 + 48);
    *((_OWORD *)v15 + 2) = *(_OWORD *)(v16 + 32);
    *((_OWORD *)v15 + 3) = v21;
    v15[64] = *(unsigned char *)(v16 + 64);
    long long v22 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v22;
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v46(v24, v25, v26);
  uint64_t v27 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v28 = v27[5];
  uint64_t v29 = &v24[v28];
  uint64_t v30 = v25 + v28;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v47 = a1;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
  v32(v29, v30, v31);
  v46(&v24[v27[6]], v25 + v27[6], v26);
  v32(&v24[v27[7]], v25 + v27[7], v31);
  uint64_t v33 = v27[8];
  uint64_t v34 = &v24[v33];
  uint64_t v35 = (void *)(v25 + v33);
  uint64_t v36 = v35[1];
  *(void *)uint64_t v34 = *v35;
  *((void *)v34 + 1) = v36;
  uint64_t v37 = a3[8];
  uint64_t v38 = a3[9];
  uint64_t v39 = (void *)((char *)v47 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = (void *)((char *)v47 + v38);
  uint64_t v43 = (void *)(a2 + v38);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v47;
}

uint64_t assignWithCopy for ContactConfirmationView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a1 + v13 + 8);
  uint64_t v17 = *(void *)(a2 + v13 + 8);
  if (v16)
  {
    if (v17)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      *(void *)(v14 + 8) = *(void *)(v15 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v14 + 16) = *(void *)(v15 + 16);
      *(void *)(v14 + 24) = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v14 + 32) = *(void *)(v15 + 32);
      *(void *)(v14 + 40) = *(void *)(v15 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v14 + 48) = *(void *)(v15 + 48);
      *(void *)(v14 + 56) = *(void *)(v15 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v14 + 64) = *(unsigned char *)(v15 + 64);
    }
    else
    {
      outlined destroy of PhoneContactHeader(v14);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      long long v19 = *(_OWORD *)(v15 + 32);
      long long v18 = *(_OWORD *)(v15 + 48);
      long long v20 = *(_OWORD *)(v15 + 16);
      *(unsigned char *)(v14 + 64) = *(unsigned char *)(v15 + 64);
      *(_OWORD *)(v14 + 32) = v19;
      *(_OWORD *)(v14 + 48) = v18;
      *(_OWORD *)(v14 + 16) = v20;
    }
  }
  else if (v17)
  {
    *(void *)uint64_t v14 = *(void *)v15;
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    *(void *)(v14 + 16) = *(void *)(v15 + 16);
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
    *(void *)(v14 + 40) = *(void *)(v15 + 40);
    *(void *)(v14 + 48) = *(void *)(v15 + 48);
    *(void *)(v14 + 56) = *(void *)(v15 + 56);
    *(unsigned char *)(v14 + 64) = *(unsigned char *)(v15 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    long long v21 = *(_OWORD *)(v15 + 16);
    long long v22 = *(_OWORD *)(v15 + 32);
    long long v23 = *(_OWORD *)(v15 + 48);
    *(unsigned char *)(v14 + 64) = *(unsigned char *)(v15 + 64);
    *(_OWORD *)(v14 + 32) = v22;
    *(_OWORD *)(v14 + 48) = v23;
    *(_OWORD *)(v14 + 16) = v21;
  }
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24);
  v44(v25, v26, v27);
  uint64_t v28 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v29 = v28[5];
  uint64_t v30 = v25 + v29;
  uint64_t v31 = v26 + v29;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v45 = a1;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24);
  v33(v30, v31, v32);
  v44(v25 + v28[6], v26 + v28[6], v27);
  v33(v25 + v28[7], v26 + v28[7], v32);
  uint64_t v34 = v28[8];
  uint64_t v35 = (void *)(v25 + v34);
  uint64_t v36 = (void *)(v26 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[8];
  uint64_t v38 = (void *)(v45 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[9];
  uint64_t v41 = (void *)(v45 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v45;
}

_OWORD *initializeWithTake for ContactConfirmationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v28 = a3;
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  v12[64] = v13[64];
  long long v14 = *((_OWORD *)v13 + 3);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_OWORD *)v12 + 3) = v14;
  long long v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  uint64_t v16 = (char *)a1 + v11;
  uint64_t v17 = (char *)a2 + v11;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  v27(v16, v17, v18);
  long long v19 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v20 = v19[5];
  uint64_t v26 = &v16[v20];
  long long v21 = &v17[v20];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  long long v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v26, v21, v22);
  v27(&v16[v19[6]], &v17[v19[6]], v18);
  v23(&v16[v19[7]], &v17[v19[7]], v22);
  *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
  uint64_t v24 = v28[9];
  *(_OWORD *)((char *)a1 + v28[8]) = *(_OWORD *)((char *)a2 + v28[8]);
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  return a1;
}

uint64_t assignWithTake for ContactConfirmationView(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (!*(void *)(a1 + v11 + 8)) {
    goto LABEL_5;
  }
  uint64_t v14 = *((void *)v13 + 1);
  if (!v14)
  {
    outlined destroy of PhoneContactHeader(v12);
LABEL_5:
    long long v18 = *((_OWORD *)v13 + 3);
    *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
    *(_OWORD *)(v12 + 48) = v18;
    *(unsigned char *)(v12 + 64) = v13[64];
    long long v19 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v19;
    goto LABEL_6;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v13 + 3);
  *(void *)(v12 + 16) = *((void *)v13 + 2);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v13 + 5);
  *(void *)(v12 + 32) = *((void *)v13 + 4);
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v13 + 7);
  *(void *)(v12 + 48) = *((void *)v13 + 6);
  *(void *)(v12 + 56) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 64) = v13[64];
LABEL_6:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 40);
  v47(v21, v22, v23);
  uint64_t v24 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v25 = v24[5];
  uint64_t v26 = v21 + v25;
  uint64_t v27 = &v22[v25];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  Swift::String v48 = a2;
  uint64_t v29 = a1;
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 40);
  v30(v26, v27, v28);
  v47(v21 + v24[6], &v22[v24[6]], v23);
  v30(v21 + v24[7], &v22[v24[7]], v28);
  uint64_t v31 = v24[8];
  uint64_t v32 = (void *)(v21 + v31);
  uint64_t v33 = &v22[v31];
  uint64_t v35 = *(void *)v33;
  uint64_t v34 = *((void *)v33 + 1);
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[8];
  uint64_t v37 = (void *)(v29 + v36);
  uint64_t v38 = (void *)((char *)v48 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  void *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[9];
  uint64_t v42 = (void *)(v29 + v41);
  uint64_t v43 = (void *)((char *)v48 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t getEnumTagSinglePayload for ContactConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591E5E74);
}

uint64_t sub_2591E5E74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for YesNoConfirmationModel();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 28);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ContactConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591E5FC0);
}

void *sub_2591E5FC0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for YesNoConfirmationModel();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for ContactConfirmationView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for YesNoConfirmationModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2591E61CC()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(SashStandardView?, SummaryItemTextView?, (<<opaque return type of View.separators(_:isOverride:)>>.0)?, YesNoConfirmationView)>>);
}

uint64_t objectdestroyTm_11()
{
  unint64_t v1 = (int *)type metadata accessor for ContactConfirmationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  int v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  uint64_t v4 = (char *)v3 + v1[5];
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(id *)((char *)v3 + v1[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = (char *)v3 + v1[7];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = (int *)type metadata accessor for YesNoConfirmationModel();
  uint64_t v10 = &v6[v9[5]];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v8(&v6[v9[6]], v7);
  v12(&v6[v9[7]], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ContactConfirmationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ContactConfirmationView() - 8);
  uint64_t v4 = (void **)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  return closure #1 in ContactConfirmationView.body.getter(v4, a1);
}

uint64_t _s14PhoneSnippetUI22YesNoConfirmationModelVWOcTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of ContactConfirmationModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t AppDisambiguationViewSMART.model.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppDisambiguationViewSMART() + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AppDisambiguationViewSMART()
{
  uint64_t result = type metadata singleton initialization cache for AppDisambiguationViewSMART;
  if (!type metadata singleton initialization cache for AppDisambiguationViewSMART) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppDisambiguationViewSMART.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a4 = EnvironmentObject.init()();
  a4[1] = v8;
  uint64_t v9 = type metadata accessor for AppDisambiguationViewSMART();
  uint64_t result = ActionHandler.init()();
  uint64_t v11 = (uint64_t *)((char *)a4 + *(int *)(v9 + 24));
  *uint64_t v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  return result;
}

uint64_t AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppDisambiguationViewSMART();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = type metadata accessor for DisambiguationTitle();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>>);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + *(int *)(v5 + 32);
  uint64_t v15 = *(void *)(v13 + 8);
  unint64_t v14 = *(void *)(v13 + 16);
  uint64_t v25 = MEMORY[0x263F8D310];
  uint64_t v26 = MEMORY[0x263F779A0];
  if (v14) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  unint64_t v17 = 0xE000000000000000;
  if (v14) {
    unint64_t v17 = v14;
  }
  uint64_t v23 = v16;
  unint64_t v24 = v17;
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  swift_bridgeObjectRetain();
  DisambiguationTitle.init(text1:thumbnail:)();
  outlined init with copy of AppDisambiguationViewSMART(v2, (uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppDisambiguationViewSMART);
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = swift_allocObject();
  outlined init with take of AppDisambiguationViewSMART((uint64_t)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>> and conformance ForEachWithIndex<A, B>, &demangling cache variable for type metadata for ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>);
  DisambiguationView.init(title:content:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v12, v9);
}

uint64_t closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AppDisambiguationViewSMART();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a1 + *(int *)(MEMORY[0x270FA5388](v4 - 8) + 32));
  outlined init with copy of AppDisambiguationViewSMART(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AppDisambiguationViewSMART);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of AppDisambiguationViewSMART((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *a2 = v7;
  a2[1] = partial apply for closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter;
  a2[2] = v9;
  return swift_bridgeObjectRetain();
}

uint64_t outlined init with take of AppDisambiguationViewSMART(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppDisambiguationViewSMART();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppDisambiguationViewSMART() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in AppDisambiguationViewSMART.body.getter(v4, a1);
}

uint64_t associated type witness table accessor for View.Body : View in AppDisambiguationViewSMART()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a4;
  uint64_t v37 = type metadata accessor for SeparatorStyle();
  uint64_t v6 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for AppDescriptionView();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v12 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>);
  MEMORY[0x270FA5388](v35);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AppDisambiguationViewSMART(a2, (uint64_t)v11 + v9[6], (uint64_t (*)(void))type metadata accessor for AppDescription);
  unint64_t v17 = (char *)v11 + v9[7];
  uint64_t v18 = *MEMORY[0x263F76620];
  uint64_t v19 = type metadata accessor for ImageElement.ImageStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  uint64_t v20 = type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v34 = v20;
  *uint64_t v11 = EnvironmentObject.init()();
  v11[1] = v21;
  ActionHandler.init()();
  uint64_t v22 = (char *)v11 + v9[8];
  *(void *)uint64_t v22 = 0;
  v22[8] = 1;
  if (*a3)
  {
    id v23 = *a3;
    dispatch thunk of Context.currentIdiom.getter();
    char v24 = VRXIdiom.isCarPlay.getter();
    uint64_t v25 = (unsigned int *)MEMORY[0x263F76980];
    if ((v24 & 1) == 0) {
      uint64_t v25 = (unsigned int *)MEMORY[0x263F76970];
    }
    uint64_t v26 = v37;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v25, v37);

    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_5(&lazy protocol witness table cache variable for type AppDescriptionView and conformance AppDescriptionView, (void (*)(uint64_t))type metadata accessor for AppDescriptionView);
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
    outlined destroy of AppDescriptionView((uint64_t)v11);
    BOOL v27 = v38 == 0;
    uint64_t v28 = EnvironmentObject.init()();
    uint64_t v30 = v29;
    uint64_t v31 = v36;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v36);
    uint64_t v32 = &v16[*(int *)(v35 + 36)];
    *(void *)uint64_t v32 = v28;
    *((void *)v32 + 1) = v30;
    v32[16] = v27;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v31);
    return outlined init with take of ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>((uint64_t)v16, v39);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppDisambiguationViewSMART(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591E6FD8);
}

uint64_t sub_2591E6FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AppDisambiguationViewSMART(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591E70B0);
}

uint64_t sub_2591E70B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for AppDisambiguationViewSMART()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2591E7210()
{
  return lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type DisambiguationView<ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>> and conformance DisambiguationView<A>, &demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[AppDescription], ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, CarPlayDisambiguationListItem>>>);
}

uint64_t objectdestroyTm_12()
{
  unint64_t v1 = (int *)(type metadata accessor for AppDisambiguationViewSMART() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for AppDisambiguationViewSMART() - 8);
  uint64_t v8 = (id *)(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
  return closure #1 in closure #1 in AppDisambiguationViewSMART.body.getter(a1, a2, v8, a3);
}

uint64_t outlined init with copy of AppDisambiguationViewSMART(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ListBottomView.init(text:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a4 = EnvironmentObject.init()();
  a4[1] = v8;
  uint64_t v9 = type metadata accessor for ListBottomView();
  uint64_t result = ActionHandler.init()();
  uint64_t v11 = (uint64_t *)((char *)a4 + *(int *)(v9 + 24));
  *uint64_t v11 = a1;
  v11[1] = a2;
  *(uint64_t *)((char *)a4 + *(int *)(v9 + 28)) = a3;
  return result;
}

uint64_t type metadata accessor for ListBottomView()
{
  uint64_t result = type metadata singleton initialization cache for ListBottomView;
  if (!type metadata singleton initialization cache for ListBottomView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t key path getter for EnvironmentValues.imageElementImageStyle : EnvironmentValues()
{
  return EnvironmentValues.imageElementImageStyle.getter();
}

uint64_t key path setter for EnvironmentValues.imageElementImageStyle : EnvironmentValues(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x270FA5388](v2 - 8);
  outlined init with copy of ImageElement.ImageStyle?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return EnvironmentValues.imageElementImageStyle.setter();
}

uint64_t ListBottomView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v2 = type metadata accessor for ListBottomView();
  uint64_t v3 = v2 - 8;
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v46 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v45 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Material();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for SimpleItemRichView();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
  MEMORY[0x270FA5388](v39);
  uint64_t v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v1 + *(int *)(v3 + 32));
  uint64_t v9 = v8[1];
  uint64_t v73 = *v8;
  uint64_t v74 = v9;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  LODWORD(v73) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v15 = Text.foregroundStyle<A>(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v75 = MEMORY[0x263F1A838];
  uint64_t v76 = MEMORY[0x263F77350];
  uint64_t v22 = swift_allocObject();
  uint64_t v73 = v22;
  *(void *)(v22 + 16) = v15;
  *(void *)(v22 + 24) = v17;
  *(unsigned char *)(v22 + 32) = v19 & 1;
  *(void *)(v22 + 40) = v21;
  uint64_t v72 = 0;
  long long v70 = 0u;
  long long v71 = 0u;
  uint64_t v69 = 0;
  long long v67 = 0u;
  long long v68 = 0u;
  uint64_t v66 = 0;
  long long v64 = 0u;
  long long v65 = 0u;
  uint64_t v63 = 0;
  long long v61 = 0u;
  long long v62 = 0u;
  uint64_t v60 = 0;
  long long v58 = 0u;
  long long v59 = 0u;
  uint64_t v57 = 0;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v54 = 0;
  long long v52 = 0u;
  long long v53 = 0u;
  uint64_t v23 = ListBottomView.appIconView.getter();
  uint64_t v50 = MEMORY[0x263F1B728];
  uint64_t v51 = MEMORY[0x263F774A8];
  uint64_t v49 = v23;
  char v24 = v38;
  SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
  uint64_t v25 = v40;
  static Material.thick.getter();
  LOBYTE(v17) = static Edge.Set.all.getter();
  uint64_t v26 = (uint64_t)v37;
  BOOL v27 = &v37[*(int *)(v39 + 36)];
  uint64_t v28 = v42;
  uint64_t v29 = v44;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v27, v25, v44);
  v27[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v17;
  uint64_t v30 = v41;
  uint64_t v31 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v26, v24, v43);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v29);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
  uint64_t v32 = v45;
  outlined init with copy of ListBottomView(v1, v45);
  unint64_t v33 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v34 = swift_allocObject();
  outlined init with take of ListBottomView(v32, v34 + v33);
  lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v26, &demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
}

uint64_t sub_2591E7AD4()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t ListBottomView.appIconView.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ImageElement.ImageStyle?);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v30 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v6 - 8);
  v26[1] = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ImageElementView();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  MEMORY[0x270FA5388](v27);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *MEMORY[0x263F765B8];
  v26[0] = *(void *)(v3 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v26[0])(v5, v13, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  uint64_t v14 = type metadata accessor for _ProtoIdiom();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2591FFD20;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x263F76468], v14);
  specialized Set.init(_nonEmptyArrayLiteral:)(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.appIcon(_:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  ImageElementView.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = (uint64_t)v30;
  ((void (*)(char *, void, uint64_t))v26[0])(v30, *MEMORY[0x263F76618], v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v19, 0, 1, v2);
  uint64_t v20 = (uint64_t *)&v12[*(int *)(v27 + 36)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>);
  outlined init with copy of ImageElement.ImageStyle?(v19, (uint64_t)v20 + *(int *)(v21 + 28));
  *uint64_t v20 = KeyPath;
  uint64_t v23 = v28;
  uint64_t v22 = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v12, v10, v29);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v19, &demangling cache variable for type metadata for ImageElement.ImageStyle?);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
  lazy protocol witness table accessor for type ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v24 = View.eraseToAnyView()();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ImageElementView, _EnvironmentKeyWritingModifier<ImageElement.ImageStyle?>>);
  return v24;
}

uint64_t closure #1 in ListBottomView.body.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ActionProperty();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2591FFD20;
  uint64_t v14 = type metadata accessor for Command();
  uint64_t v15 = MEMORY[0x263F771C8];
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
  uint64_t v17 = *(void **)(a1 + *(int *)(type metadata accessor for ListBottomView() + 28));
  uint64_t *boxed_opaque_existential_1 = (uint64_t)v17;
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F77168], v14);
  id v18 = v17;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_25915D000, v20, v21, "#Show call history ListBottomView performing direct action", v22, 2u);
    MEMORY[0x25A2D96D0](v22, -1, -1);
  }

  ActionHandler.wrappedValue.getter();
  uint64_t v23 = type metadata accessor for StandardActionHandler();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v26 = (uint64_t)v29;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v12, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
    uint64_t v27 = type metadata accessor for InteractionType();
    uint64_t v28 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v30, 1, 1, v27);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v28, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v26, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v23);
  }
}

uint64_t outlined init with copy of ListBottomView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListBottomView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2591E8498()
{
  uint64_t v1 = (int *)(type metadata accessor for ListBottomView() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t outlined init with take of ListBottomView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListBottomView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in ListBottomView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for ListBottomView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return closure #1 in ListBottomView.body.getter(v2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>>);
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_4(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ListBottomView()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for ListBottomView(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    unint64_t v16 = &v7[v14];
    uint64_t v17 = (char **)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *(void *)unint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(char **)((char *)a2 + v15);
    *(void *)&v7[v15] = v19;
    swift_bridgeObjectRetain();
    id v20 = v19;
  }
  return v7;
}

void destroy for ListBottomView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(id *)((char *)a1 + *(int *)(a2 + 28));
}

void *initializeWithCopy for ListBottomView(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  unint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *unint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = *(void **)(a2 + v15);
  *(void *)((char *)a1 + v15) = v19;
  swift_bridgeObjectRetain();
  id v20 = v19;
  return a1;
}

uint64_t assignWithCopy for ListBottomView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a2 + v16);
  uint64_t v18 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = v17;
  id v19 = v17;

  return a1;
}

_OWORD *initializeWithTake for ListBottomView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

uint64_t assignWithTake for ListBottomView(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)((char *)a2 + v16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ListBottomView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591E8C40);
}

uint64_t sub_2591E8C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ListBottomView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591E8D1C);
}

uint64_t sub_2591E8D1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for ListBottomView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2591E8E90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2591E8EEC()
{
  return EnvironmentValues.imageElementImageStyle.getter();
}

uint64_t *PhoneCallAppNameConstants.siriAppBundleId.unsafeMutableAddressor()
{
  if (one-time initialization token for siriAppBundleId != -1) {
    swift_once();
  }
  return &static PhoneCallAppNameConstants.siriAppBundleId;
}

void *PhoneCallAppNameConstants.mobilePhoneBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mobilePhoneBundleId;
}

void *PhoneCallAppNameConstants.inCallServiceBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.inCallServiceBundleId;
}

unint64_t static PhoneCallAppNameConstants.inCallServiceBundleId.getter()
{
  return 0xD000000000000017;
}

void *PhoneCallAppNameConstants.carouselBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.carouselBundleId;
}

unint64_t static PhoneCallAppNameConstants.carouselBundleId.getter()
{
  return 0xD000000000000012;
}

unint64_t static PhoneCallAppNameConstants.mobilePhoneBundleId.getter()
{
  return 0xD000000000000015;
}

void *PhoneCallAppNameConstants.macFaceTimeVocBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.macFaceTimeVocBundleId;
}

unint64_t static PhoneCallAppNameConstants.macFaceTimeVocBundleId.getter()
{
  return 0xD000000000000012;
}

void one-time initialization function for macFaceTimeBundleId()
{
  id v0 = (id)TUPreferredFaceTimeBundleIdentifier();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;

  static PhoneCallAppNameConstants.macFaceTimeBundleId = v1;
  unk_26A37C480 = v3;
}

uint64_t *PhoneCallAppNameConstants.macFaceTimeBundleId.unsafeMutableAddressor()
{
  if (one-time initialization token for macFaceTimeBundleId != -1) {
    swift_once();
  }
  return &static PhoneCallAppNameConstants.macFaceTimeBundleId;
}

uint64_t static PhoneCallAppNameConstants.macFaceTimeBundleId.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for macFaceTimeBundleId, &static PhoneCallAppNameConstants.macFaceTimeBundleId);
}

void *PhoneCallAppNameConstants.faceTimeBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.faceTimeBundleId;
}

unint64_t static PhoneCallAppNameConstants.faceTimeBundleId.getter()
{
  return 0xD000000000000012;
}

void *PhoneCallAppNameConstants.nanophoneBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.nanophoneBundleId;
}

unint64_t static PhoneCallAppNameConstants.nanophoneBundleId.getter()
{
  return 0xD000000000000013;
}

void *PhoneCallAppNameConstants.walkieTalkieBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieBundleId.getter()
{
  return 0xD000000000000010;
}

void *PhoneCallAppNameConstants.walkieTalkieInternalBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieInternalBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieInternalBundleId.getter()
{
  return 0xD000000000000027;
}

void *PhoneCallAppNameConstants.walkieTalkieExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.walkieTalkieExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.walkieTalkieExtensionBundleId.getter()
{
  return 0xD00000000000001ELL;
}

void *PhoneCallAppNameConstants.messagesBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.messagesBundleId;
}

unint64_t static PhoneCallAppNameConstants.messagesBundleId.getter()
{
  return 0xD000000000000013;
}

void *PhoneCallAppNameConstants.emergencyBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.emergencyBundleId;
}

unint64_t static PhoneCallAppNameConstants.emergencyBundleId.getter()
{
  return 0xD000000000000022;
}

void *PhoneCallAppNameConstants.mapBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mapBundleId;
}

unint64_t static PhoneCallAppNameConstants.mapBundleId.getter()
{
  return 0xD000000000000016;
}

void *PhoneCallAppNameConstants.faceTimeSettingsRoot.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.faceTimeSettingsRoot;
}

unint64_t static PhoneCallAppNameConstants.faceTimeSettingsRoot.getter()
{
  return 0xD000000000000013;
}

void *PhoneCallAppNameConstants.phoneSettingsRoot.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.phoneSettingsRoot;
}

unint64_t static PhoneCallAppNameConstants.phoneSettingsRoot.getter()
{
  return 0xD000000000000010;
}

void one-time initialization function for settingsRoot()
{
  static PhoneCallAppNameConstants.settingsRoot = 0x3A7366657270;
  unk_26A37C490 = 0xE600000000000000;
}

uint64_t *PhoneCallAppNameConstants.settingsRoot.unsafeMutableAddressor()
{
  if (one-time initialization token for settingsRoot != -1) {
    swift_once();
  }
  return &static PhoneCallAppNameConstants.settingsRoot;
}

uint64_t static PhoneCallAppNameConstants.settingsRoot.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for settingsRoot, &static PhoneCallAppNameConstants.settingsRoot);
}

uint64_t one-time initialization function for inCallServiceLaunchId()
{
  _StringGuts.grow(_:)(21);
  uint64_t result = swift_bridgeObjectRelease();
  static PhoneCallAppNameConstants.inCallServiceLaunchId = 0xD00000000000002ALL;
  unk_26A37C4A0 = 0x8000000259205D80;
  return result;
}

uint64_t *PhoneCallAppNameConstants.inCallServiceLaunchId.unsafeMutableAddressor()
{
  if (one-time initialization token for inCallServiceLaunchId != -1) {
    swift_once();
  }
  return &static PhoneCallAppNameConstants.inCallServiceLaunchId;
}

uint64_t static PhoneCallAppNameConstants.inCallServiceLaunchId.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for inCallServiceLaunchId, &static PhoneCallAppNameConstants.inCallServiceLaunchId);
}

void *PhoneCallAppNameConstants.systemExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.systemExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.systemExtensionBundleId.getter()
{
  return 0xD00000000000002FLL;
}

void *PhoneCallAppNameConstants.systemUIExtensionBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.systemUIExtensionBundleId;
}

unint64_t static PhoneCallAppNameConstants.systemUIExtensionBundleId.getter()
{
  return 0xD000000000000021;
}

void *PhoneCallAppNameConstants.internalWatchAppSuffix.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.internalWatchAppSuffix;
}

unint64_t static PhoneCallAppNameConstants.internalWatchAppSuffix.getter()
{
  return 0xD000000000000017;
}

void *PhoneCallAppNameConstants.contactsBundleId.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.contactsBundleId;
}

unint64_t static PhoneCallAppNameConstants.contactsBundleId.getter()
{
  return 0xD00000000000001BLL;
}

void one-time initialization function for siriAppBundleId()
{
  unk_26A37C4B7 = -18;
}

uint64_t static PhoneCallAppNameConstants.siriAppBundleId.getter()
{
  return static PhoneStartRequestUtterances.cancelUtterance.getter(&one-time initialization token for siriAppBundleId, &static PhoneCallAppNameConstants.siriAppBundleId);
}

void *PhoneCallAppNameConstants.mobilePhoneContactsTabURI.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.mobilePhoneContactsTabURI;
}

unint64_t static PhoneCallAppNameConstants.mobilePhoneContactsTabURI.getter()
{
  return 0xD000000000000017;
}

void *PhoneCallAppNameConstants.openCallRecordURI.unsafeMutableAddressor()
{
  return &static PhoneCallAppNameConstants.openCallRecordURI;
}

unint64_t static PhoneCallAppNameConstants.openCallRecordURI.getter()
{
  return 0xD000000000000020;
}

unint64_t static PhoneCallAppNameConstants.sanitizeFirstPartyAppId(_:)(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (specialized static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(a1, a2)) {
    return 0xD000000000000012;
  }
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t static PhoneCallAppNameConstants.getFaceTimeBundleIdForCurrentPlatform()()
{
  return 0xD000000000000012;
}

uint64_t static PhoneCallAppNameConstants.isFaceTime(appId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2592047F0;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000259205340;
    if (one-time initialization token for macFaceTimeBundleId != -1) {
      swift_once();
    }
    uint64_t v5 = unk_26A37C480;
    *(void *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
    *(void *)(inited + 56) = v5;
    swift_bridgeObjectRetain();
    Swift::Int v6 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    LOBYTE(v2) = specialized Set.contains(_:)(a1, v2, v6);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t specialized Set.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t static PhoneCallAppNameConstants.isPhone(appId:)(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x8000000259205AF0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000012 && a2 == 0x8000000259205B10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000013 && a2 == 0x8000000259205B50
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000015 && a2 == 0x8000000259205AD0)
  {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t static PhoneCallAppNameConstants.isMessagePhoneAppCaseInsensitive(appId:)(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    String.lowercased()();
    goto LABEL_9;
  }
  Swift::String v2 = String.lowercased()();
  Swift::String v3 = String.lowercased()();
  if (!v2._object)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v2._countAndFlagsBits == v3._countAndFlagsBits && v2._object == v3._object)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t static PhoneCallAppNameConstants.isPhoneOrFaceTime(appId:isInsensitive:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = a2;
  if ((a3 & 1) == 0)
  {
    if (!a2) {
      return v3 & 1;
    }
    if ((a1 != 0xD000000000000017 || a2 != 0x8000000259205AF0)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0xD000000000000012 || v3 != 0x8000000259205B10)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0xD000000000000013 || v3 != 0x8000000259205B50)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0xD000000000000015 || v3 != 0x8000000259205AD0)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2592047F0;
      *(void *)(inited + 32) = 0xD000000000000012;
      *(void *)(inited + 40) = 0x8000000259205340;
      if (one-time initialization token for macFaceTimeBundleId != -1) {
        swift_once();
      }
      uint64_t v7 = unk_26A37C480;
      *(void *)(inited + 48) = static PhoneCallAppNameConstants.macFaceTimeBundleId;
      *(void *)(inited + 56) = v7;
      swift_bridgeObjectRetain();
      Swift::Int v8 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      LOBYTE(v3) = specialized Set.contains(_:)(a1, v3, v8);
      swift_bridgeObjectRelease();
      return v3 & 1;
    }
LABEL_19:
    LOBYTE(v3) = 1;
    return v3 & 1;
  }
  if (specialized static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(a1, a2)) {
    goto LABEL_19;
  }
  return specialized static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(a1, (void *)v3);
}

uint64_t specialized static PhoneCallAppNameConstants.isFaceTimeCaseInsensitive(appId:)(uint64_t countAndFlagsBits, void *a2)
{
  object = a2;
  if (a2)
  {
    Swift::String v4 = String.lowercased()();
    Swift::String v5 = String.lowercased()();
    if (v4._object)
    {
      if (v4._countAndFlagsBits == v5._countAndFlagsBits && v4._object == v5._object)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7) {
        return 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    Swift::String v8 = String.lowercased()();
    uint64_t countAndFlagsBits = v8._countAndFlagsBits;
    object = v8._object;
  }
  else
  {
    String.lowercased()();
    swift_bridgeObjectRelease();
  }
  if (one-time initialization token for macFaceTimeBundleId != -1) {
    swift_once();
  }
  Swift::String v9 = String.lowercased()();
  if (!object)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (countAndFlagsBits != v9._countAndFlagsBits || object != v9._object)
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

Swift::Int specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      Swift::Int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int result = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          id v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      os_log_type_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t specialized static PhoneCallAppNameConstants.isPhoneCaseInsensitive(appId:)(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    String.lowercased()();
    swift_bridgeObjectRelease();
    String.lowercased()();
    swift_bridgeObjectRelease();
    String.lowercased()();
    swift_bridgeObjectRelease();
    String.lowercased()();
    goto LABEL_10;
  }
  Swift::String v2 = String.lowercased()();
  Swift::String v3 = String.lowercased()();
  if (v2._object)
  {
    if (v2._countAndFlagsBits == v3._countAndFlagsBits && v2._object == v3._object) {
      goto LABEL_21;
    }
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  Swift::String v7 = String.lowercased()();
  Swift::String v8 = String.lowercased()();
  if (v7._object)
  {
    if (v7._countAndFlagsBits == v8._countAndFlagsBits && v7._object == v8._object) {
      goto LABEL_21;
    }
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  Swift::String v10 = String.lowercased()();
  Swift::String v11 = String.lowercased()();
  if (v10._object)
  {
    if (v10._countAndFlagsBits == v11._countAndFlagsBits && v10._object == v11._object) {
      goto LABEL_21;
    }
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  Swift::String v13 = String.lowercased()();
  Swift::String v14 = String.lowercased()();
  if (!v13._object)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v13._countAndFlagsBits == v14._countAndFlagsBits && v13._object == v14._object)
  {
LABEL_21:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

ValueMetadata *type metadata accessor for PhoneCallAppNameConstants()
{
  return &type metadata for PhoneCallAppNameConstants;
}

uint64_t CarPlayEmergencyCountdown.init(viewModel:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a1 = EnvironmentObject.init()();
  a1[1] = v2;
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  a1[2] = ObservedObject.init(wrappedValue:)();
  a1[3] = v3;
  uint64_t v4 = (int *)type metadata accessor for CarPlayEmergencyCountdown();
  uint64_t result = ActionHandler.init()();
  *(uint64_t *)((char *)a1 + v4[7]) = 0x4024000000000000;
  *(uint64_t *)((char *)a1 + v4[8]) = 0x4052000000000000;
  *(uint64_t *)((char *)a1 + v4[9]) = 0x4058000000000000;
  return result;
}

uint64_t property wrapper backing initializer of CarPlayEmergencyCountdown.viewModel()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t type metadata accessor for CarPlayEmergencyCountdown()
{
  uint64_t result = type metadata singleton initialization cache for CarPlayEmergencyCountdown;
  if (!type metadata singleton initialization cache for CarPlayEmergencyCountdown) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CarPlayEmergencyCountdown.viewModel.getter()
{
  return swift_retain();
}

uint64_t CarPlayEmergencyCountdown.viewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*CarPlayEmergencyCountdown.viewModel.modify())()
{
  return SearchCallHistoryBinaryButtonModel.responseViewId.modify;
}

uint64_t CarPlayEmergencyCountdown.$viewModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for EmergencyCountdownViewModel(0);
  uint64_t v4 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return MEMORY[0x270EFFB90](v1, v2, v3, v4);
}

uint64_t CarPlayEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CarPlayEmergencyCountdown();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  MEMORY[0x270FA5388](v6 - 8);
  Swift::String v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)Swift::String v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 0;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  closure #1 in CarPlayEmergencyCountdown.body.getter(v1, &v8[*(int *)(v9 + 44)]);
  outlined init with copy of CarPlayEmergencyCountdown(v1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  outlined init with take of CarPlayEmergencyCountdown((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  outlined init with copy of VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>((uint64_t)v8, a1);
  char v12 = (uint64_t (**)())(a1
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier>)
                                + 36));
  *char v12 = partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  uint64_t v12[3] = 0;
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
}

void closure #1 in CarPlayEmergencyCountdown.body.getter(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ButtonContainerView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  Swift::String v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v21 - v9;
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  swift_retain();
  uint64_t v11 = (void *)EnvironmentObject.init()();
  uint64_t v22 = v12;
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  uint64_t v13 = ObservedObject.init(wrappedValue:)();
  uint64_t v15 = v14;
  uint64_t v23 = a1;
  ButtonContainerView.init(buttons:)();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v8, v10, v4);
  uint64_t v17 = v22;
  *(void *)a2 = v11;
  *((void *)a2 + 1) = v17;
  *((void *)a2 + 2) = v13;
  *((void *)a2 + 3) = v15;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (EmergencyCountdownSash, ButtonContainerView));
  v16(&a2[*(int *)(v18 + 48)], v8, v4);
  id v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  id v20 = v11;
  swift_retain();
  v19(v10, v4);
  v19(v8, v4);
  swift_release();
}

uint64_t closure #1 in closure #1 in CarPlayEmergencyCountdown.body.getter(uint64_t a1)
{
  uint64_t v55 = type metadata accessor for StandardSiriButtonStyle();
  uint64_t v60 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CarPlayEmergencyCountdown();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>>);
  uint64_t v59 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  uint64_t v57 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  long long v58 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v54 = (char *)&v45 - v15;
  uint64_t v48 = a1;
  outlined init with copy of CarPlayEmergencyCountdown(a1, (uint64_t)v7);
  uint64_t v16 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v52 = ((v16 + 16) & ~v16) + v6;
  uint64_t v53 = (v16 + 16) & ~v16;
  uint64_t v17 = v53;
  uint64_t v51 = v16 | 7;
  uint64_t v18 = swift_allocObject();
  outlined init with take of CarPlayEmergencyCountdown((uint64_t)v7, v18 + v17);
  uint64_t v62 = a1;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>);
  uint64_t v49 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>);
  Button.init(action:label:)();
  static ButtonStyle<>.standardSiriButton(bold:hideIcon:isPressed:)();
  uint64_t v47 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type Button<Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>> and conformance Button<A>, &demangling cache variable for type metadata for Button<Label<<<opaque return type of View.privacySensitive(_:)>>.0, RFImageView>>);
  uint64_t v46 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(&lazy protocol witness table cache variable for type StandardSiriButtonStyle and conformance StandardSiriButtonStyle, MEMORY[0x263F77888]);
  uint64_t v19 = v8;
  uint64_t v20 = v55;
  View.buttonStyle<A>(_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v60 + 8);
  v60 += 8;
  v21(v3, v20);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v59 + 8);
  v59 += 8;
  v22(v10, v19);
  uint64_t v23 = v48;
  CarPlayEmergencyCountdown.countdownLabel.getter((uint64_t)&v63);
  outlined init with copy of CarPlayEmergencyCountdown(v23, (uint64_t)v7);
  uint64_t v24 = swift_allocObject();
  outlined init with take of CarPlayEmergencyCountdown((uint64_t)v7, v24 + v53);
  uint64_t v61 = v23;
  Button.init(action:label:)();
  static ButtonStyle<>.standardSiriButton(bold:hideIcon:isPressed:)();
  uint64_t v26 = v46;
  uint64_t v25 = v47;
  View.buttonStyle<A>(_:)();
  v21(v3, v20);
  v22(v10, v19);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<View>);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_259204820;
  uint64_t v28 = v56;
  *(void *)(v27 + 56) = v56;
  *(void *)&long long v76 = v19;
  *((void *)&v76 + 1) = v20;
  *(void *)&long long v77 = v25;
  *((void *)&v77 + 1) = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)(v27 + 64) = OpaqueTypeConformance2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v27 + 32));
  uint64_t v31 = v57;
  uint64_t v32 = *(void (**)(uint64_t *, char *, uint64_t))(v57 + 16);
  unint64_t v33 = v54;
  v32(boxed_opaque_existential_1, v54, v28);
  v74[8] = v71;
  v74[9] = v72;
  v75[0] = v73[0];
  *(_OWORD *)((char *)v75 + 9) = *(_OWORD *)((char *)v73 + 9);
  v74[4] = v67;
  v74[5] = v68;
  v74[6] = v69;
  v74[7] = v70;
  v74[0] = v63;
  v74[1] = v64;
  v74[2] = v65;
  v74[3] = v66;
  *(void *)(v27 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout>);
  *(void *)(v27 + 104) = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  uint64_t v34 = (_OWORD *)swift_allocObject();
  *(void *)(v27 + 72) = v34;
  long long v35 = v72;
  v34[9] = v71;
  v34[10] = v35;
  v34[11] = v73[0];
  *(_OWORD *)((char *)v34 + 185) = *(_OWORD *)((char *)v73 + 9);
  long long v36 = v68;
  v34[5] = v67;
  v34[6] = v36;
  long long v37 = v70;
  v34[7] = v69;
  v34[8] = v37;
  long long v38 = v64;
  v34[1] = v63;
  v34[2] = v38;
  long long v39 = v66;
  v34[3] = v65;
  v34[4] = v39;
  *(void *)(v27 + 136) = v28;
  *(void *)(v27 + 144) = OpaqueTypeConformance2;
  uint64_t v40 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v27 + 112));
  uint64_t v41 = v58;
  v32(v40, v58, v28);
  outlined retain of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)v74);
  uint64_t v42 = MEMORY[0x25A2D87B0](v27);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v31 + 8);
  v43(v41, v28);
  long long v84 = v71;
  long long v85 = v72;
  v86[0] = v73[0];
  *(_OWORD *)((char *)v86 + 9) = *(_OWORD *)((char *)v73 + 9);
  long long v80 = v67;
  long long v81 = v68;
  long long v82 = v69;
  long long v83 = v70;
  long long v76 = v63;
  long long v77 = v64;
  long long v78 = v65;
  long long v79 = v66;
  outlined release of ModifiedContent<Text, _FlexFrameLayout>((uint64_t)&v76);
  v43(v33, v28);
  return v42;
}

uint64_t CarPlayEmergencyCountdown.countdownLabel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + 24) + 1240);
  uint64_t v8 = swift_retain();
  uint64_t v9 = v7(v8);
  uint64_t v11 = v10;
  swift_release();
  uint64_t v49 = v9;
  uint64_t v50 = v11;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  LOBYTE(v9) = v15 & 1;
  uint64_t v16 = type metadata accessor for CarPlayEmergencyCountdown();
  static Font.Weight.semibold.getter();
  uint64_t v17 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  static Font.system(size:weight:design:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v6, &demangling cache variable for type metadata for Font.Design?);
  uint64_t v38 = Text.font(_:)();
  uint64_t v37 = v18;
  int v36 = v19;
  uint64_t v39 = v20;
  swift_release();
  outlined consume of Text.Storage(v12, v14, v9);
  swift_bridgeObjectRelease();
  uint64_t v40 = v16;
  uint64_t v41 = v2;
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v21 = v49;
  uint64_t v22 = v51;
  uint64_t v23 = v53;
  uint64_t v24 = v55;
  uint64_t v25 = v57;
  uint64_t v26 = v59;
  uint64_t v28 = v61;
  uint64_t v27 = v62;
  char v48 = v36 & 1;
  char v47 = v50;
  char v46 = v52;
  char v45 = v54;
  char v44 = v56;
  char v43 = v58;
  char v42 = v60;
  LOBYTE(v9) = static Edge.Set.vertical.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  uint64_t v30 = v37;
  *(void *)a1 = v38;
  *(void *)(a1 + 8) = v30;
  *(unsigned char *)(a1 + 16) = v48;
  *(void *)(a1 + 24) = v39;
  *(void *)(a1 + 32) = v21;
  *(unsigned char *)(a1 + 40) = v47;
  *(void *)(a1 + 48) = v22;
  *(unsigned char *)(a1 + 56) = v46;
  *(void *)(a1 + 64) = v23;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v24;
  *(unsigned char *)(a1 + 88) = v44;
  *(void *)(a1 + 96) = v25;
  *(unsigned char *)(a1 + 104) = v43;
  *(void *)(a1 + 112) = v26;
  *(unsigned char *)(a1 + 120) = v42;
  *(void *)(a1 + 128) = v28;
  *(void *)(a1 + 136) = v27;
  *(unsigned char *)(a1 + 144) = v9;
  *(void *)(a1 + 152) = v31;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v33;
  *(void *)(a1 + 176) = v34;
  *(unsigned char *)(a1 + 184) = 0;
  return result;
}

void closure #2 in CarPlayEmergencyCountdown.body.getter(id *a1)
{
  if (*a1)
  {
    id v1 = *a1;
    dispatch thunk of Context.hideBackgroundBehindSiri()();
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t outlined init with copy of CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CarPlayEmergencyCountdown();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CarPlayEmergencyCountdown();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter((uint64_t (*)(uint64_t))closure #2 in CarPlayEmergencyCountdown.body.getter);
}

uint64_t outlined init with copy of VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t associated type witness table accessor for View.Body : View in CarPlayEmergencyCountdown()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in CarPlayEmergencyCountdown.cancelButton.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for CarPlayEmergencyCountdown();
  swift_retain();
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(void *)v5 + 1264))(v4);
  swift_release();
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #1 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(**(void **)(a1 + 24) + 488);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  View.privacySensitive(_:)();
  outlined consume of Text.Storage(v3, v5, v7);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return closure #2 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

{
  uint64_t v0;

  uint64_t v0 = type metadata accessor for RFImage();
  MEMORY[0x270FA5388](v0 - 8);
  static RFImage.symbol(_:dark:)();
  return RFImageView.init(_:)();
}

uint64_t closure #1 in CarPlayEmergencyCountdown.callButton.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for CarPlayEmergencyCountdown();
  swift_retain();
  ActionHandler.wrappedValue.getter();
  if (*(void *)a1)
  {
    char v6 = *(void (**)(char *, id))(*(void *)v5 + 1256);
    id v7 = *(id *)a1;
    v6(v4, v7);
    swift_release();

    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  type metadata accessor for RFImageView();
  swift_getOpaqueTypeConformance2();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(&lazy protocol witness table cache variable for type RFImageView and conformance RFImageView, MEMORY[0x263F77560]);
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #2 in CarPlayEmergencyCountdown.callButton.getter(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(**(void **)(a1 + 24) + 584);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  View.privacySensitive(_:)();
  outlined consume of Text.Storage(v3, v5, v7);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #2 in CarPlayEmergencyCountdown.callButton.getter()
{
  return closure #2 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

uint64_t protocol witness for View.body.getter in conformance CarPlayEmergencyCountdown@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 0;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
  closure #1 in CarPlayEmergencyCountdown.body.getter(v2, &v8[*(int *)(v9 + 44)]);
  outlined init with copy of CarPlayEmergencyCountdown(v2, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  outlined init with take of CarPlayEmergencyCountdown((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  outlined init with copy of VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>((uint64_t)v8, a2);
  uint64_t v12 = (uint64_t (**)())(a2
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier>)
                                + 36));
  *uint64_t v12 = partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  uint64_t v12[3] = 0;
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
}

uint64_t sub_2591EBDE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_retain();
}

uint64_t sub_2591EBDEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 24) = v3;
  return result;
}

char *initializeBufferWithCopyOfBuffer for CarPlayEmergencyCountdown(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *((void *)a1 + 3) = a2[3];
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v14 = a3[8];
    *(void *)&v7[a3[7]] = *(char **)((char *)a2 + a3[7]);
    *(void *)&v7[v14] = *(char **)((char *)a2 + v14);
    *(void *)&v7[a3[9]] = *(char **)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for CarPlayEmergencyCountdown(id *a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ActionHandler();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for CarPlayEmergencyCountdown(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591EC324);
}

uint64_t sub_2591EC324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CarPlayEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591EC3E8);
}

uint64_t sub_2591EC3E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActionHandler();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata completion function for CarPlayEmergencyCountdown()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(EmergencyCountdownSash, ButtonContainerView)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in CarPlayEmergencyCountdown.body.getter()
{
  return closure #1 in closure #1 in CarPlayEmergencyCountdown.body.getter(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #1 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(closure #1 in CarPlayEmergencyCountdown.cancelButton.getter);
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

uint64_t objectdestroyTm_13()
{
  unint64_t v1 = (int *)(type metadata accessor for CarPlayEmergencyCountdown() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  swift_release();
  int v3 = (char *)v2 + v1[8];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CarPlayEmergencyCountdown.callButton.getter()
{
  return partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(closure #1 in CarPlayEmergencyCountdown.callButton.getter);
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CarPlayEmergencyCountdown() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t partial apply for closure #2 in CarPlayEmergencyCountdown.callButton.getter()
{
  return closure #2 in CarPlayEmergencyCountdown.cancelButton.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_2591EC89C()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in CarPlayEmergencyCountdown.callButton.getter()
{
  return closure #1 in closure #2 in CarPlayEmergencyCountdown.callButton.getter(*(void *)(v0 + 16));
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter()
{
  return closure #1 in closure #2 in CarPlayEmergencyCountdown.cancelButton.getter(*(void *)(v0 + 16));
}

uint64_t static SeparatorStyle.commonListSeparatorStyle(context:)@<X0>(uint64_t a1@<X8>)
{
  dispatch thunk of Context.currentIdiom.getter();
  char v2 = VRXIdiom.isCarPlay.getter();
  uint64_t v3 = type metadata accessor for SeparatorStyle();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  uint64_t v5 = (unsigned int *)MEMORY[0x263F76980];
  if ((v2 & 1) == 0) {
    uint64_t v5 = (unsigned int *)MEMORY[0x263F76970];
  }
  uint64_t v6 = *v5;
  return v4(a1, v6, v3);
}

uint64_t static ContactInformationImage.getImage(directInvocation:actionHandler:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v30 = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B4C0], v5);
  uint64_t v28 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = static Color.blue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v11 = v50;
  char v12 = v51;
  uint64_t v13 = v52;
  char v14 = v53;
  uint64_t v15 = v54;
  uint64_t v16 = v55;
  LOBYTE(v8) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  char v47 = v12;
  char v45 = v14;
  char v42 = 0;
  *(void *)&long long v35 = v28;
  *((void *)&v35 + 1) = KeyPath;
  *(void *)&long long v36 = v9;
  *((void *)&v36 + 1) = 0x3FE70A3D70A3D70ALL;
  *(void *)&long long v37 = v11;
  BYTE8(v37) = v12;
  *(_DWORD *)((char *)&v37 + 9) = *(_DWORD *)v46;
  HIDWORD(v37) = *(_DWORD *)&v46[3];
  *(void *)&long long v38 = v13;
  BYTE8(v38) = v14;
  *(_DWORD *)((char *)&v38 + 9) = *(_DWORD *)v44;
  HIDWORD(v38) = *(_DWORD *)&v44[3];
  *(void *)&long long v39 = v15;
  *((void *)&v39 + 1) = v16;
  LOBYTE(v40) = (_BYTE)v8;
  DWORD1(v40) = *(_DWORD *)&v43[3];
  *(_DWORD *)((char *)&v40 + 1) = *(_DWORD *)v43;
  *((void *)&v40 + 1) = v17;
  *(void *)&v41[0] = v18;
  *((void *)&v41[0] + 1) = v19;
  *(void *)&v41[1] = v20;
  BYTE8(v41[1]) = 0;
  uint64_t v21 = v29;
  outlined init with copy of StandardActionHandler?(v32, v29);
  unint64_t v22 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v33;
  *(void *)(v23 + 16) = v33;
  outlined init with take of StandardActionHandler?(v21, v23 + v22);
  id v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  v48[4] = v39;
  v48[5] = v40;
  v49[0] = v41[0];
  *(_OWORD *)((char *)v49 + 9) = *(_OWORD *)((char *)v41 + 9);
  v48[0] = v35;
  v48[1] = v36;
  v48[2] = v37;
  v48[3] = v38;
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>((uint64_t)v48);
}

uint64_t closure #1 in static ContactInformationImage.getImage(directInvocation:actionHandler:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActionProperty();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2591FFD20;
  uint64_t v17 = type metadata accessor for Command();
  uint64_t v18 = MEMORY[0x263F771C8];
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v16 + 32));
  uint64_t *boxed_opaque_existential_1 = (uint64_t)a1;
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(void))(*(void *)(v17 - 8) + 104))();
  id v20 = a1;
  ActionProperty.init(_:)();
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.phoneSnippetUI);
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_25915D000, v22, v23, "#ContactInformationImage tapped, performing direct action", v24, 2u);
    MEMORY[0x25A2D96D0](v24, -1, -1);
  }

  outlined init with copy of StandardActionHandler?(a2, (uint64_t)v11);
  uint64_t v25 = type metadata accessor for StandardActionHandler();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    uint64_t v28 = type metadata accessor for InteractionType();
    uint64_t v29 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v31, 1, 1, v28);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v29, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  }
}

uint64_t key path getter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2591ED218@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_2591ED270()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_2591ED29C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  uint64_t v3 = type metadata accessor for StandardActionHandler();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t outlined init with take of StandardActionHandler?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in static ContactInformationImage.getImage(directInvocation:actionHandler:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?)
                 - 8);
  unint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return closure #1 in static ContactInformationImage.getImage(directInvocation:actionHandler:)(v2, v3);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for ContactInformationImage()
{
  return &type metadata for ContactInformationImage;
}

uint64_t sub_2591ED5C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t SmartEmergencyCountdown.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a1 = EnvironmentObject.init()();
  a1[1] = v2;
  uint64_t v3 = type metadata accessor for SmartEmergencyCountdown();
  ActionHandler.init()();
  uint64_t v4 = (uint64_t *)((char *)a1 + *(int *)(v3 + 24));
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *uint64_t v4 = result;
  v4[1] = v6;
  return result;
}

uint64_t type metadata accessor for SmartEmergencyCountdown()
{
  uint64_t result = type metadata singleton initialization cache for SmartEmergencyCountdown;
  if (!type metadata singleton initialization cache for SmartEmergencyCountdown) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t property wrapper backing initializer of SmartEmergencyCountdown.viewModel()
{
  type metadata accessor for EmergencyCountdownViewModel(0);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9(&lazy protocol witness table cache variable for type EmergencyCountdownViewModel and conformance EmergencyCountdownViewModel, (void (*)(uint64_t))type metadata accessor for EmergencyCountdownViewModel);
  return ObservedObject.init(wrappedValue:)();
}

uint64_t SmartEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v3 = type metadata accessor for ColorScheme();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>.Storage);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>);
  MEMORY[0x270FA5388](v7 - 8);
  char v45 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SmartEmergencyCountdown();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>);
  MEMORY[0x270FA5388](v46);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.if<A>(_:transform:)>>.0);
  uint64_t v52 = *(void *)(v18 - 8);
  uint64_t v53 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v50 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
  MEMORY[0x270FA5388](v51);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.hideConversationAreaKeyline(_:)>>.0);
  uint64_t v48 = *(void *)(v22 - 8);
  uint64_t v49 = v22;
  MEMORY[0x270FA5388](v22);
  char v47 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SmartEmergencyCountdown((uint64_t)v2, (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v24 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = swift_allocObject();
  outlined init with take of SmartEmergencyCountdown((uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>);
  ComponentStack.init(content:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v6, v15, v12);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
  uint64_t v26 = (uint64_t)v45;
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  outlined init with take of _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>(v26, (uint64_t)v17);
  if (*v2)
  {
    id v27 = *v2;
    dispatch thunk of Context.currentIdiom.getter();

    VRXIdiom.isWatchOS.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0);
    lazy protocol witness table accessor for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>();
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>>);
    unint64_t v30 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    unint64_t v31 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    uint64_t v58 = v28;
    uint64_t v59 = v28;
    uint64_t v60 = v29;
    unint64_t v61 = v30;
    unint64_t v62 = v30;
    unint64_t v63 = v31;
    swift_getOpaqueTypeConformance2();
    uint64_t v32 = v50;
    View.if<A>(_:transform:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v17, &demangling cache variable for type metadata for Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>);
    uint64_t KeyPath = swift_getKeyPath();
    long long v35 = v54;
    uint64_t v34 = v55;
    uint64_t v36 = v56;
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, *MEMORY[0x263F18500], v56);
    long long v37 = (uint64_t *)&v21[*(int *)(v51 + 36)];
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v37 + *(int *)(v38 + 28), v35, v36);
    uint64_t *v37 = KeyPath;
    uint64_t v40 = v52;
    uint64_t v39 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v21, v32, v53);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v39);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    uint64_t v41 = v47;
    View.hideConversationAreaKeyline(_:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v57, v41, v49);
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t SmartEmergencyCountdown.countdownContent.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v128 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v118 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for CountdownButtonStyle();
  MEMORY[0x270FA5388](v119);
  uint64_t v111 = (uint64_t *)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = type metadata accessor for SmartEmergencyCountdown();
  uint64_t v105 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v106 = v6;
  uint64_t v116 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  uint64_t v130 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v117 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v108 = *(void *)(v8 - 8);
  uint64_t v109 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v107 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for BinaryButtonView();
  uint64_t v113 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v112 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>.Storage);
  MEMORY[0x270FA5388](v123);
  uint64_t v126 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SeparatorStyle();
  uint64_t v102 = *(void *)(v12 - 8);
  uint64_t OpaqueTypeConformance2 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v101 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StatusIndicatorView.IndicatorType();
  uint64_t v95 = *(void *)(v14 - 8);
  uint64_t v96 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v94 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for StatusIndicatorView();
  uint64_t v99 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v98 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v104 = *(void (***)(char *, char *, uint64_t))(v122 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v122);
  uint64_t v97 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v100 = (char *)&v93 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v125 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  char v124 = (char *)&v93 - v23;
  uint64_t v24 = static HorizontalAlignment.center.getter();
  closure #1 in SmartEmergencyCountdown.countdownContent.getter(v2, (uint64_t)&v132);
  unsigned long long v27 = v132;
  unint64_t v26 = v27 >> 64;
  unint64_t v25 = v27;
  unsigned long long v28 = v132;
  uint64_t v114 = v28 >> 64;
  uint64_t v121 = v28;
  LOBYTE(v2) = v133;
  uint64_t v29 = *((void *)&v133 + 1);
  long long v30 = v134;
  char v31 = v135;
  uint64_t v32 = *((void *)&v135 + 1);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v153 = v24;
  uint64_t v154 = 0;
  char v155 = 1;
  unsigned long long v156 = __PAIR128__(v26, v25);
  char v157 = v2;
  uint64_t v158 = v29;
  long long v159 = v30;
  char v160 = v31;
  uint64_t v161 = v32;
  uint64_t v162 = KeyPath;
  char v163 = 1;
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v166, 0.0, 1, 0.0, 1);
  uint64_t v34 = v115;
  outlined consume of Text.Storage(v121, v114, v2);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v30, *((uint64_t *)&v30 + 1), v31);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v121) = static Edge.Set.all.getter();
  uint64_t v35 = EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  char v164 = 0;
  uint64_t v44 = v129;
  uint64_t v45 = v129 + *(int *)(v34 + 24);
  uint64_t v46 = *(void *)(v45 + 8);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v46 + 920))(v35))
  {
    uint64_t v47 = (*(uint64_t (**)(void))(*(void *)v46 + 536))();
    *((void *)&v133 + 1) = MEMORY[0x263F8D310];
    *(void *)&long long v134 = MEMORY[0x263F779A0];
    *(void *)&unsigned long long v132 = v47;
    *((void *)&v132 + 1) = v48;
    (*(void (**)(char *, void, uint64_t))(v95 + 104))(v94, *MEMORY[0x263F77788], v96);
    uint64_t v49 = v98;
    StatusIndicatorView.init(message:type:showIndicator:)();
    uint64_t v51 = v101;
    uint64_t v50 = v102;
    uint64_t v52 = OpaqueTypeConformance2;
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, *MEMORY[0x263F76980], OpaqueTypeConformance2);
    uint64_t v53 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9(&lazy protocol witness table cache variable for type StatusIndicatorView and conformance StatusIndicatorView, MEMORY[0x263F777A0]);
    uint64_t v54 = v97;
    uint64_t v55 = v120;
    View.separators(_:isOverride:)();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v49, v55);
    uint64_t v56 = v104;
    uint64_t v57 = v100;
    uint64_t v58 = v122;
    v104[4](v100, v54, v122);
    v56[2](v126, v57, v58);
    swift_storeEnumTagMultiPayload();
    *(void *)&unsigned long long v132 = v55;
    *((void *)&v132 + 1) = v53;
    swift_getOpaqueTypeConformance2();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, MEMORY[0x263F77658]);
    uint64_t v59 = (uint64_t)v124;
    _ConditionalContent<>.init(storage:)();
    ((void (*)(char *, uint64_t))v56[1])(v57, v58);
  }
  else
  {
    uint64_t v60 = v116;
    outlined init with copy of SmartEmergencyCountdown(v44, v116);
    uint64_t v61 = *(unsigned __int8 *)(v105 + 80);
    uint64_t v62 = (v61 + 16) & ~v61;
    uint64_t v114 = v62;
    uint64_t v105 = v61 | 7;
    v106 += v62;
    uint64_t v63 = swift_allocObject();
    uint64_t v64 = outlined init with take of SmartEmergencyCountdown(v60, v63 + v62);
    MEMORY[0x270FA5388](v64);
    long long v65 = v117;
    Button.init(action:label:)();
    uint64_t v93 = v45;
    uint64_t v115 = v44 + *(int *)(v34 + 20);
    swift_retain();
    uint64_t v66 = (uint64_t)v118;
    ActionHandler.wrappedValue.getter();
    long long v67 = v111;
    CountdownButtonStyle.init(model:actionHandler:showCountdown:buttonHeight:)(v66, 1, v111, 46.0);
    uint64_t v68 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    uint64_t v69 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9(&lazy protocol witness table cache variable for type CountdownButtonStyle and conformance CountdownButtonStyle, (void (*)(uint64_t))type metadata accessor for CountdownButtonStyle);
    long long v70 = v107;
    uint64_t v71 = v110;
    uint64_t v72 = v119;
    uint64_t v101 = (char *)v68;
    uint64_t v102 = v69;
    uint64_t v73 = v69;
    View.buttonStyle<A>(_:)();
    outlined destroy of CountdownButtonStyle((uint64_t)v67);
    uint64_t v74 = *(void (***)(char *, char *, uint64_t))(v130 + 8);
    v130 += 8;
    uint64_t v104 = v74;
    ((void (*)(char *, uint64_t))v74)(v65, v71);
    *(void *)&unsigned long long v132 = v71;
    *((void *)&v132 + 1) = v72;
    *(void *)&long long v133 = v68;
    *((void *)&v133 + 1) = v73;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v75 = v109;
    uint64_t v76 = View.eraseToAnyView()();
    uint64_t v108 = *(void *)(v108 + 8);
    ((void (*)(char *, uint64_t))v108)(v70, v75);
    *(void *)&long long v134 = MEMORY[0x263F774A8];
    *((void *)&v133 + 1) = MEMORY[0x263F1B728];
    *(void *)&unsigned long long v132 = v76;
    uint64_t v77 = v116;
    outlined init with copy of SmartEmergencyCountdown(v129, v116);
    uint64_t v78 = swift_allocObject();
    uint64_t v79 = outlined init with take of SmartEmergencyCountdown(v77, v78 + v114);
    MEMORY[0x270FA5388](v79);
    long long v80 = v117;
    Button.init(action:label:)();
    swift_retain();
    uint64_t v81 = (uint64_t)v118;
    ActionHandler.wrappedValue.getter();
    CountdownButtonStyle.init(model:actionHandler:showCountdown:buttonHeight:)(v81, 0, v67, 46.0);
    View.buttonStyle<A>(_:)();
    outlined destroy of CountdownButtonStyle((uint64_t)v67);
    ((void (*)(char *, uint64_t))v104)(v80, v71);
    uint64_t v82 = View.eraseToAnyView()();
    ((void (*)(char *, uint64_t))v108)(v70, v75);
    *(void *)&v131[2] = MEMORY[0x263F774A8];
    *((void *)&v131[1] + 1) = MEMORY[0x263F1B728];
    *(void *)&v131[0] = v82;
    long long v83 = v112;
    BinaryButtonView.init(primaryButton:secondaryButton:)();
    uint64_t v84 = v113;
    uint64_t v85 = v127;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v126, v83, v127);
    swift_storeEnumTagMultiPayload();
    uint64_t v86 = _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9(&lazy protocol witness table cache variable for type StatusIndicatorView and conformance StatusIndicatorView, MEMORY[0x263F777A0]);
    *(void *)&unsigned long long v132 = v120;
    *((void *)&v132 + 1) = v86;
    swift_getOpaqueTypeConformance2();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type BinaryButtonView and conformance BinaryButtonView, MEMORY[0x263F77658]);
    uint64_t v59 = (uint64_t)v124;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
  }
  char v87 = v164;
  uint64_t v88 = v125;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v59, v125, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  v131[10] = v176;
  v131[11] = v177;
  v131[12] = v178;
  *(void *)&v131[13] = v179;
  v131[6] = v172;
  v131[7] = v173;
  v131[8] = v174;
  v131[9] = v175;
  v131[2] = v168;
  v131[3] = v169;
  v131[4] = v170;
  v131[5] = v171;
  v131[0] = v166;
  v131[1] = v167;
  char v89 = v121;
  BYTE8(v131[13]) = v121;
  *(_DWORD *)((char *)&v131[13] + 9) = *(_DWORD *)v165;
  HIDWORD(v131[13]) = *(_DWORD *)&v165[3];
  *(void *)&v131[14] = v37;
  *((void *)&v131[14] + 1) = v39;
  *(void *)&v131[15] = v41;
  *((void *)&v131[15] + 1) = v43;
  LOBYTE(v131[16]) = v87;
  uint64_t v90 = v128;
  memcpy(v128, v131, 0x101uLL);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v88, (uint64_t)v90 + *(int *)(v91 + 48), &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  outlined retain of ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>((uint64_t)v131);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v59, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v88, &demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>);
  long long v142 = v176;
  long long v143 = v177;
  long long v144 = v178;
  uint64_t v145 = v179;
  long long v138 = v172;
  long long v139 = v173;
  long long v140 = v174;
  long long v141 = v175;
  long long v134 = v168;
  long long v135 = v169;
  long long v136 = v170;
  long long v137 = v171;
  unsigned long long v132 = v166;
  long long v133 = v167;
  char v146 = v89;
  *(_DWORD *)uint64_t v147 = *(_DWORD *)v165;
  *(_DWORD *)&v147[3] = *(_DWORD *)&v165[3];
  uint64_t v148 = v37;
  uint64_t v149 = v39;
  uint64_t v150 = v41;
  uint64_t v151 = v43;
  char v152 = v87;
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>((uint64_t)&v132);
}

uint64_t outlined init with copy of SmartEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmartEmergencyCountdown();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of SmartEmergencyCountdown(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmartEmergencyCountdown();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in closure #1 in SmartEmergencyCountdown.body.getter@<X0>(void *a1@<X8>)
{
  return SmartEmergencyCountdown.countdownContent.getter(a1);
}

uint64_t outlined init with take of _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t closure #2 in SmartEmergencyCountdown.body.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HostBackground?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = static Edge.Set.top.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, (uint64_t)v7, &demangling cache variable for type metadata for Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>);
  uint64_t v9 = &v7[*(int *)(v5 + 36)];
  *uint64_t v9 = v8;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  unsigned char v9[40] = 1;
  *uint64_t v4 = static Color.black.getter();
  uint64_t v10 = *MEMORY[0x263F775E8];
  uint64_t v11 = type metadata accessor for HostBackground();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 104))(v4, v10, v11);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>>);
  lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
  View.requestHostBackground<A, B>(_:accepted:denied:)();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for HostBackground?);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>);
    lazy protocol witness table accessor for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>> and conformance <> _ConditionalContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
    lazy protocol witness table accessor for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #1 in closure #2 in SmartEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, a2, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
}

uint64_t closure #2 in closure #2 in SmartEmergencyCountdown.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = static Edge.Set.all.getter();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, a2, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>>);
  *(unsigned char *)(a2 + *(int *)(result + 36)) = v4;
  return result;
}

uint64_t key path getter for EnvironmentValues.colorScheme : EnvironmentValues()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_2591EF6B8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t key path setter for EnvironmentValues.colorScheme : EnvironmentValues(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0);
    lazy protocol witness table accessor for type Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>> and conformance <A> Group<A>();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Group<_ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>, ComponentStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>, _ConditionalContent<<<opaque return type of View.separators(_:isOverride:)>>.0, BinaryButtonView>)>>>>, _PaddingLayout>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ColorScheme> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in SmartEmergencyCountdown()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in SmartEmergencyCountdown.countdownContent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + *(int *)(type metadata accessor for SmartEmergencyCountdown() + 24) + 8);
  (*(void (**)(void))(*(void *)v2 + 728))();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  static Font.headline.getter();
  uint64_t v8 = Text.font(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  outlined consume of Text.Storage(v3, v5, v7);
  swift_bridgeObjectRelease();
  static Font.Weight.regular.getter();
  uint64_t v13 = Text.fontWeight(_:)();
  uint64_t v15 = v14;
  LOBYTE(v5) = v16 & 1;
  outlined consume of Text.Storage(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v17 = Text.foregroundStyle<A>(_:)();
  uint64_t v46 = v18;
  uint64_t v47 = v17;
  char v45 = v19;
  uint64_t v48 = v20;
  outlined consume of Text.Storage(v13, v15, v5);
  swift_release();
  uint64_t v21 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v2 + 776))(v21);
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  static Font.title3.getter();
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  LOBYTE(v13) = v30;
  swift_release();
  LOBYTE(v10) = v13 & 1;
  outlined consume of Text.Storage(v22, v24, v26);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v31 = Text.fontWeight(_:)();
  uint64_t v33 = v32;
  char v35 = v34;
  outlined consume of Text.Storage(v27, v29, v10);
  uint64_t v36 = swift_bridgeObjectRelease();
  if ((*(uint64_t (**)(uint64_t))(*(void *)v2 + 920))(v36)) {
    static Color.secondary.getter();
  }
  else {
    static Color.primary.getter();
  }
  uint64_t v37 = Text.foregroundStyle<A>(_:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  outlined consume of Text.Storage(v31, v33, v35 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a2 = v47;
  *(void *)(a2 + 8) = v46;
  *(unsigned char *)(a2 + 16) = v45 & 1;
  *(void *)(a2 + 24) = v48;
  *(void *)(a2 + 32) = v37;
  *(void *)(a2 + 40) = v39;
  *(unsigned char *)(a2 + 48) = v43;
  *(void *)(a2 + 56) = v41;
  outlined copy of Text.Storage(v47, v46, v45 & 1);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v37, v39, v43);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v37, v39, v43);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v47, v46, v45 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in SmartEmergencyCountdown.smartCancelButton.getter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for SmartEmergencyCountdown() + 24) + 8);
  (*(void (**)(uint64_t))(*(void *)v5 + 928))(1);
  ActionHandler.wrappedValue.getter();
  (*(void (**)(char *))(*(void *)v5 + 1264))(v4);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
}

uint64_t closure #2 in SmartEmergencyCountdown.smartCancelButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SmartEmergencyCountdown();
  (*(void (**)(void))(**(void **)(a1 + *(int *)(v4 + 24) + 8) + 488))();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.headline.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  outlined consume of Text.Storage(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v15 = Text.fontWeight(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v19 & 1;
  *(void *)(a2 + 24) = v21;
  return result;
}

uint64_t closure #1 in SmartEmergencyCountdown.smartCallButton.getter(id *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for SmartEmergencyCountdown() + 24) + 8);
  ActionHandler.wrappedValue.getter();
  if (*a1)
  {
    uint64_t v6 = *(void (**)(char *, id))(*(void *)v5 + 1256);
    id v7 = *a1;
    v6(v4, v7);

    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v4, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #2 in SmartEmergencyCountdown.smartCallButton.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SmartEmergencyCountdown();
  (*(void (**)(void))(**(void **)(a1 + *(int *)(v4 + 24) + 8) + 584))();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.headline.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  outlined consume of Text.Storage(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v15 = Text.fontWeight(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  outlined consume of Text.Storage(v10, v12, v14 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v19 & 1;
  *(void *)(a2 + 24) = v21;
  return result;
}

char *initializeBufferWithCopyOfBuffer for SmartEmergencyCountdown(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    char v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (char **)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *(void *)uint64_t v15 = *v16;
    *((void *)v15 + 1) = v17;
  }
  swift_retain();
  return v7;
}

uint64_t destroy for SmartEmergencyCountdown(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

void *initializeWithCopy for SmartEmergencyCountdown(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  char v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SmartEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for SmartEmergencyCountdown(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SmartEmergencyCountdown(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SmartEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591F06D8);
}

uint64_t sub_2591F06D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SmartEmergencyCountdown(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591F07B4);
}

uint64_t sub_2591F07B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionHandler();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for SmartEmergencyCountdown()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2591F0918()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.if<A>(_:transform:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
  return swift_getOpaqueTypeConformance2();
}

uint64_t partial apply for closure #1 in SmartEmergencyCountdown.smartCallButton.getter()
{
  return partial apply for closure #1 in SmartEmergencyCountdown.smartCallButton.getter((uint64_t (*)(uint64_t))closure #1 in SmartEmergencyCountdown.smartCallButton.getter);
}

uint64_t partial apply for closure #2 in SmartEmergencyCountdown.smartCallButton.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in SmartEmergencyCountdown.smartCallButton.getter(*(void *)(v1 + 16), a1);
}

uint64_t outlined destroy of CountdownButtonStyle(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CountdownButtonStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm_14()
{
  uint64_t v1 = (int *)(type metadata accessor for SmartEmergencyCountdown() - 8);
  uint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  int v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SmartEmergencyCountdown.smartCancelButton.getter()
{
  return partial apply for closure #1 in SmartEmergencyCountdown.smartCallButton.getter(closure #1 in SmartEmergencyCountdown.smartCancelButton.getter);
}

uint64_t partial apply for closure #1 in SmartEmergencyCountdown.smartCallButton.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SmartEmergencyCountdown() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t partial apply for closure #2 in SmartEmergencyCountdown.smartCancelButton.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in SmartEmergencyCountdown.smartCancelButton.getter(*(void *)(v1 + 16), a1);
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_9(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  outlined consume of Text.Storage(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t LocalEmergencyCallDisambiguationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  ActionHandler.init()();
  return outlined init with take of LocalEmergencyCallDisambiguationModel(a1, (uint64_t)a2 + *(int *)(v5 + 24), type metadata accessor for LocalEmergencyCallDisambiguationModel);
}

uint64_t type metadata accessor for LocalEmergencyCallDisambiguationView()
{
  uint64_t result = type metadata singleton initialization cache for LocalEmergencyCallDisambiguationView;
  if (!type metadata singleton initialization cache for LocalEmergencyCallDisambiguationView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v2 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of LocalEmergencyCallDisambiguationView(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel((uint64_t)v5, v10 + v9, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>);
  lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>();
  ComponentStack.init(content:)();
  outlined init with copy of LocalEmergencyCallDisambiguationView(v16[1], (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  uint64_t v11 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel((uint64_t)v5, v11 + v9, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  uint64_t v13 = v17;
  uint64_t v12 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v18, v8, v17);
  uint64_t v14 = (void *)(v12
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier>)
                          + 36));
  *uint64_t v14 = partial apply for closure #2 in LocalEmergencyCallDisambiguationView.body.getter;
  v14[1] = v11;
  v14[2] = 0;
  v14[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v13);
}

uint64_t closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
  MEMORY[0x270FA5388](v105);
  uint64_t v102 = (uint64_t)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Color?);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  char v87 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v86 = (char *)&v80 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VisualProperty?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v85 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for SashStandard.Title();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v84 = (uint64_t *)((char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for SashStandard();
  MEMORY[0x270FA5388](v11 - 8);
  long long v83 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SashStandardView?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v100 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = (char *)&v80 - v16;
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>.Storage);
  MEMORY[0x270FA5388](v103);
  uint64_t v107 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HostBackground?);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v99 = (uint64_t *)((char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v97 = type metadata accessor for ColorScheme();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v94 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  uint64_t v22 = v21 - 8;
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = type metadata accessor for DisambiguationTitle();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v27 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.privacySensitive(_:)>>.0);
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v29 = (char *)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
  MEMORY[0x270FA5388](v30);
  uint64_t v93 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0);
  uint64_t v98 = *(void *)(v104 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v104);
  uint64_t v92 = (char *)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v95 = (char *)&v80 - v34;
  char v35 = a1;
  uint64_t v36 = (id *)((char *)a1 + *(int *)(v22 + 32));
  if (*((unsigned char *)v36 + *(int *)(type metadata accessor for LocalEmergencyCallDisambiguationModel(0) + 32)) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    Loggable.wrappedValue.getter();
    *((void *)&v112 + 1) = MEMORY[0x263F8D310];
    unint64_t v113 = MEMORY[0x263F779A0];
    uint64_t v110 = 0;
    long long v108 = 0u;
    long long v109 = 0u;
    DisambiguationTitle.init(text1:thumbnail:)();
    outlined init with copy of LocalEmergencyCallDisambiguationView((uint64_t)v35, (uint64_t)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
    unint64_t v37 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v38 = swift_allocObject();
    outlined init with take of LocalEmergencyCallDisambiguationModel((uint64_t)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v38 + v37, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0> and conformance ForEachWithIndex<A, B>, &demangling cache variable for type metadata for ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>);
    DisambiguationView.init(title:content:)();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>> and conformance DisambiguationView<A>, &demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>);
    uint64_t v39 = v89;
    View.privacySensitive(_:)();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v27, v39);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v41 = v96;
    char v42 = v94;
    uint64_t v43 = v97;
    (*(void (**)(char *, void, uint64_t))(v96 + 104))(v94, *MEMORY[0x263F18500], v97);
    uint64_t v44 = (uint64_t)v93;
    char v45 = (uint64_t *)&v93[*(int *)(v30 + 36)];
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v45 + *(int *)(v46 + 28), v42, v43);
    *char v45 = KeyPath;
    uint64_t v47 = v90;
    uint64_t v48 = v91;
    (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v44, v29, v91);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v48);
    uint64_t v49 = static Color.black.getter();
    uint64_t v50 = (uint64_t)v99;
    *uint64_t v99 = v49;
    uint64_t v51 = *MEMORY[0x263F775E8];
    uint64_t v52 = type metadata accessor for HostBackground();
    uint64_t v53 = *(void *)(v52 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 104))(v50, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    unint64_t v79 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    uint64_t v54 = v92;
    View.requestHostBackground<A, B>(_:accepted:denied:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v50, &demangling cache variable for type metadata for HostBackground?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v44, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    uint64_t v55 = v98;
    uint64_t v56 = v95;
    uint64_t v57 = v104;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v54, v104);
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v107, v56, v57);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v111 = v30;
    *((void *)&v111 + 1) = v30;
    *(void *)&long long v112 = v30;
    *((void *)&v112 + 1) = v79;
    unint64_t v113 = v79;
    unint64_t v114 = v79;
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  }
  else
  {
    uint64_t v96 = v23;
    uint64_t v97 = v24;
    uint64_t v99 = (void *)v30;
    uint64_t v98 = (uint64_t)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v59 = (uint64_t)v107;
    if (*v35)
    {
      id v60 = *v35;
      dispatch thunk of Context.currentIdiom.getter();

      if (VRXIdiom.isCarPlay.getter())
      {
        uint64_t v61 = type metadata accessor for SashStandardView();
        uint64_t v62 = (uint64_t)v101;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v101, 1, 1, v61);
      }
      else
      {
        uint64_t v63 = v36[1];
        uint64_t v64 = v84;
        *uint64_t v84 = *v36;
        v64[1] = v63;
        (*(void (**)(void *, void, uint64_t))(v81 + 104))(v64, *MEMORY[0x263F767F0], v82);
        uint64_t v65 = type metadata accessor for VisualProperty();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v85, 1, 1, v65);
        uint64_t v66 = type metadata accessor for Color();
        long long v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
        v67(v86, 1, 1, v66);
        v67(v87, 1, 1, v66);
        unint64_t v113 = 0;
        long long v111 = 0u;
        long long v112 = 0u;
        swift_bridgeObjectRetain();
        uint64_t v59 = (uint64_t)v107;
        SashStandard.init(title:thumbnail:titleColor:backgroundColor:action:componentName:showOnWatch:)();
        uint64_t v62 = (uint64_t)v101;
        SashStandardView.init(model:)();
        uint64_t v68 = type metadata accessor for SashStandardView();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v62, 0, 1, v68);
      }
      uint64_t v69 = v98;
      long long v70 = v99;
      uint64_t v71 = v96;
      uint64_t v72 = v36[2];
      outlined init with copy of LocalEmergencyCallDisambiguationView((uint64_t)v35, v98, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
      unint64_t v73 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      uint64_t v74 = swift_allocObject();
      outlined init with take of LocalEmergencyCallDisambiguationModel(v69, v74 + v73, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
      uint64_t v75 = v100;
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v62, v100, &demangling cache variable for type metadata for SashStandardView?);
      uint64_t v76 = v102;
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v75, v102, &demangling cache variable for type metadata for SashStandardView?);
      uint64_t v77 = (void *)(v76
                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>))
                              + 48));
      *uint64_t v77 = v72;
      v77[1] = partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter;
      v77[2] = v74;
      swift_bridgeObjectRetain_n();
      swift_retain();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v75, &demangling cache variable for type metadata for SashStandardView?);
      outlined init with copy of SearchCallHistoryBinaryButtonModel?(v76, v59, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
      swift_storeEnumTagMultiPayload();
      unint64_t v78 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
      *(void *)&long long v111 = v70;
      *((void *)&v111 + 1) = v70;
      *(void *)&long long v112 = v70;
      *((void *)&v112 + 1) = v78;
      unint64_t v113 = v78;
      unint64_t v114 = v78;
      swift_getOpaqueTypeConformance2();
      lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v76, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
      swift_release();
      swift_bridgeObjectRelease();
      return outlined destroy of SearchCallHistoryBinaryButtonModel?(v62, &demangling cache variable for type metadata for SashStandardView?);
    }
    else
    {
      type metadata accessor for Context();
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>> and conformance DisambiguationView<A>, &demangling cache variable for type metadata for DisambiguationView<ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>>);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ColorScheme> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ColorScheme>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a1 + *(int *)(MEMORY[0x270FA5388](v4 - 8) + 32) + 16);
  outlined init with copy of LocalEmergencyCallDisambiguationView(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  *a2 = v7;
  a2[1] = partial apply for closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter;
  a2[2] = v9;
  return swift_bridgeObjectRetain();
}

uint64_t closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v7 = type metadata accessor for SeparatorStyle();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v47 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v43 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SimpleItemRichView();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem>);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v41 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  char v45 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalEmergencyCallDisambiguationView.disambiguationItemView(for:)((uint64_t)v16);
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v22 = EnvironmentObject.init()();
  uint64_t v24 = v23;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v16, v13);
  uint64_t v25 = &v19[*(int *)(v17 + 36)];
  *(void *)uint64_t v25 = v22;
  *((void *)v25 + 1) = v24;
  v25[16] = a1 == 0;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v26 = v42;
  outlined init with copy of LocalEmergencyCallDisambiguationView(a2, v42, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  uint64_t v27 = v46;
  outlined init with copy of LocalEmergencyCallDisambiguationView(a3, v46, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v28 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v29 = (v43 + *(unsigned __int8 *)(v48 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v30 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel(v26, v30 + v28, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  outlined init with take of LocalEmergencyCallDisambiguationModel(v27, v30 + v29, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v31 = lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  uint64_t v32 = v41;
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem>);
  char v33 = LocalEmergencyCallDisambiguationView.shouldShowSeparators.getter();
  uint64_t v34 = v53;
  uint64_t v35 = v54;
  uint64_t v36 = (unsigned int *)MEMORY[0x263F76970];
  if ((v33 & 1) == 0) {
    uint64_t v36 = (unsigned int *)MEMORY[0x263F76980];
  }
  uint64_t v37 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *v36, v55);
  uint64_t v57 = v17;
  unint64_t v58 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v45;
  uint64_t v39 = v50;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v39);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v56, v38, v51);
}

uint64_t LocalEmergencyCallDisambiguationView.disambiguationItemView(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = type metadata accessor for SimpleItemRichView();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  Loggable.wrappedValue.getter();
  uint64_t v4 = v54;
  unint64_t v5 = v55;
  if (!v55)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  uint64_t v54 = v4;
  unint64_t v55 = v5;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t v56 = MEMORY[0x263F1A838];
  uint64_t v57 = MEMORY[0x263F77350];
  uint64_t v13 = swift_allocObject();
  uint64_t v54 = v13;
  *(void *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v8;
  *(unsigned char *)(v13 + 32) = v10 & 1;
  *(void *)(v13 + 40) = v12;
  Loggable.wrappedValue.getter();
  uint64_t v14 = v50;
  unint64_t v15 = v51;
  if (!v51)
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  uint64_t v50 = v14;
  unint64_t v51 = v15;
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  uint64_t v52 = MEMORY[0x263F1A838];
  uint64_t v53 = MEMORY[0x263F77350];
  uint64_t v23 = swift_allocObject();
  uint64_t v49 = 0;
  uint64_t v50 = v23;
  *(void *)(v23 + 16) = v16;
  *(void *)(v23 + 24) = v18;
  *(unsigned char *)(v23 + 32) = v20 & 1;
  *(void *)(v23 + 40) = v22;
  long long v47 = 0u;
  long long v48 = 0u;
  uint64_t v46 = 0;
  long long v44 = 0u;
  long long v45 = 0u;
  uint64_t v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  uint64_t v40 = 0;
  long long v38 = 0u;
  long long v39 = 0u;
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v34 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v3, v27);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  long long v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ActionProperty();
  uint64_t v13 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v19 = 0;
    _os_log_impl(&dword_25915D000, v17, v18, "#LocalEmergencyCallDisambiguationView component tapped", v19, 2u);
    MEMORY[0x25A2D96D0](v19, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2591FFD20;
  uint64_t v21 = type metadata accessor for Command();
  uint64_t v22 = MEMORY[0x263F771C8];
  *(void *)(v20 + 56) = v21;
  *(void *)(v20 + 64) = v22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v20 + 32));
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  uint64_t v24 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t *boxed_opaque_existential_1 = v24;
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v21);
  ActionProperty.init(_:)();
  type metadata accessor for LocalEmergencyCallDisambiguationView();
  ActionHandler.wrappedValue.getter();
  uint64_t v25 = type metadata accessor for StandardActionHandler();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v37);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v28 = (uint64_t)v33;
    uint64_t v29 = v37;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v33, v15, v37);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v28, 0, 1, v29);
    uint64_t v30 = type metadata accessor for InteractionType();
    uint64_t v31 = (uint64_t)v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v34, 1, 1, v30);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v31, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v28, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v25);
  }
}

uint64_t LocalEmergencyCallDisambiguationView.shouldShowSeparators.getter()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (id *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*v0)
  {
    id v5 = *v0;
    dispatch thunk of Context.currentIdiom.getter();

    LOBYTE(v5) = VRXIdiom.isCarPlay.getter();
    outlined init with copy of LocalEmergencyCallDisambiguationView(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
    if (v5)
    {
      char v6 = 0;
LABEL_6:
      outlined destroy of LocalEmergencyCallDisambiguationView((uint64_t)v4);
      return v6 & 1;
    }
    if (*v4)
    {
      id v7 = *v4;
      dispatch thunk of Context.currentIdiom.getter();

      char v6 = VRXIdiom.isWatchOS.getter() ^ 1;
      goto LABEL_6;
    }
  }
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t closure #2 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return outlined init with copy of SearchCallHistoryBinaryButtonModel?(a1, a2, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.privacySensitive(_:)>>.0, _EnvironmentKeyWritingModifier<ColorScheme>>);
}

void closure #2 in LocalEmergencyCallDisambiguationView.body.getter(id *a1)
{
  if (*a1)
  {
    id v1 = *a1;
    dispatch thunk of Context.hideBackgroundBehindSiri()();

    type metadata accessor for LocalEmergencyCallDisambiguationView();
    id v2 = v1;
    dispatch thunk of Context.informHostListItemCount(_:)();
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t associated type witness table accessor for View.Body : View in LocalEmergencyCallDisambiguationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in LocalEmergencyCallDisambiguationView.listView.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v7 = type metadata accessor for SeparatorStyle();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v47 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v42 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem>);
  MEMORY[0x270FA5388](v16);
  os_log_type_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.componentTapped(isNavigation:perform:)>>.0);
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  long long v45 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(a3, a2, (uint64_t)v15);
  BOOL v22 = a1 == 0;
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  uint64_t v23 = EnvironmentObject.init()();
  uint64_t v25 = v24;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
  uint64_t v26 = &v18[*(int *)(v16 + 36)];
  *(void *)uint64_t v26 = v23;
  *((void *)v26 + 1) = v25;
  v26[16] = v22;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v15, &demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
  uint64_t v27 = v43;
  outlined init with copy of LocalEmergencyCallDisambiguationView(a2, v43, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  uint64_t v28 = v46;
  outlined init with copy of LocalEmergencyCallDisambiguationView((uint64_t)a3, v46, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v29 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v30 = (v42 + *(unsigned __int8 *)(v48 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v31 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel(v27, v31 + v29, type metadata accessor for DisambiguationItemWithDirectInvocationModel);
  outlined init with take of LocalEmergencyCallDisambiguationModel(v28, v31 + v30, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v32 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>();
  View.componentTapped(isNavigation:perform:)();
  swift_release();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem>);
  char v33 = LocalEmergencyCallDisambiguationView.shouldShowSeparators.getter();
  uint64_t v34 = v53;
  uint64_t v35 = v54;
  uint64_t v36 = (unsigned int *)MEMORY[0x263F76970];
  if ((v33 & 1) == 0) {
    uint64_t v36 = (unsigned int *)MEMORY[0x263F76980];
  }
  uint64_t v37 = v55;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *v36, v55);
  uint64_t v57 = v16;
  unint64_t v58 = v32;
  swift_getOpaqueTypeConformance2();
  long long v38 = v45;
  uint64_t v39 = v50;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v39);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v56, v38, v51);
}

uint64_t closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SimpleItemRichView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v89 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v84 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<SimpleItemStandardView, SimpleItemRichView>.Storage);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SimpleItemStandardView();
  uint64_t v90 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  char v87 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v88 = (char *)&v84 - v18;
  uint64_t v19 = *a1;
  if (*a1)
  {
    uint64_t v92 = v12;
    uint64_t v93 = v14;
    id v20 = v19;
    dispatch thunk of Context.currentIdiom.getter();

    char v21 = VRXIdiom.isCarPlay.getter();
    uint64_t v95 = a3;
    uint64_t v96 = v6;
    uint64_t v94 = v15;
    uint64_t v91 = a2;
    if (v21)
    {
      uint64_t v22 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      Loggable.wrappedValue.getter();
      uint64_t v23 = v122;
      unint64_t v24 = v123;
      if (!v123)
      {
        uint64_t v23 = 0;
        unint64_t v24 = 0xE000000000000000;
      }
      uint64_t v122 = v23;
      unint64_t v123 = v24;
      unint64_t v85 = lazy protocol witness table accessor for type String and conformance String();
      uint64_t v25 = Text.init<A>(_:)();
      uint64_t v27 = v26;
      char v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      Loggable.wrappedValue.getter();
      uint64_t v89 = (char *)v22;
      if (v122 == 1) {
        static Color.blue.getter();
      }
      else {
        static Color.primary.getter();
      }
      uint64_t v38 = Text.foregroundColor(_:)();
      uint64_t v40 = v39;
      char v42 = v41;
      uint64_t v44 = v43;
      swift_release();
      outlined consume of Text.Storage(v25, v27, v29 & 1);
      swift_bridgeObjectRelease();
      uint64_t v45 = MEMORY[0x263F1A838];
      uint64_t v46 = MEMORY[0x263F77350];
      uint64_t v124 = MEMORY[0x263F1A838];
      uint64_t v125 = MEMORY[0x263F77350];
      uint64_t v47 = swift_allocObject();
      uint64_t v122 = v47;
      *(void *)(v47 + 16) = v38;
      *(void *)(v47 + 24) = v40;
      *(unsigned char *)(v47 + 32) = v42 & 1;
      *(void *)(v47 + 40) = v44;
      uint64_t v121 = 0;
      long long v119 = 0u;
      long long v120 = 0u;
      Loggable.wrappedValue.getter();
      uint64_t v48 = v115;
      unint64_t v49 = v116;
      if (!v116)
      {
        uint64_t v48 = 0;
        unint64_t v49 = 0xE000000000000000;
      }
      uint64_t v115 = v48;
      unint64_t v116 = v49;
      uint64_t v50 = Text.init<A>(_:)();
      uint64_t v52 = v51;
      char v54 = v53;
      uint64_t v56 = v55;
      uint64_t v117 = v45;
      uint64_t v118 = v46;
      uint64_t v57 = swift_allocObject();
      uint64_t v115 = v57;
      *(void *)(v57 + 16) = v50;
      *(void *)(v57 + 24) = v52;
      *(unsigned char *)(v57 + 32) = v54 & 1;
      *(void *)(v57 + 40) = v56;
      uint64_t v114 = 0;
      long long v112 = 0u;
      long long v113 = 0u;
      uint64_t v111 = 0;
      long long v109 = 0u;
      long long v110 = 0u;
      uint64_t v108 = 0;
      long long v106 = 0u;
      long long v107 = 0u;
      unint64_t v58 = v87;
      SimpleItemStandardView.init(text1:text2:text3:text4:text5:text6:)();
      uint64_t v59 = v90;
      id v60 = v88;
      uint64_t v61 = v94;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v88, v58, v94);
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v93, v60, v61);
      swift_storeEnumTagMultiPayload();
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemStandardView and conformance SimpleItemStandardView, MEMORY[0x263F77858]);
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    }
    else
    {
      uint64_t v88 = v11;
      uint64_t v90 = v7;
      uint64_t v30 = type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
      Loggable.wrappedValue.getter();
      uint64_t v31 = v122;
      unint64_t v32 = v123;
      if (!v123)
      {
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
      uint64_t v122 = v31;
      unint64_t v123 = v32;
      unint64_t v85 = lazy protocol witness table accessor for type String and conformance String();
      uint64_t v33 = Text.init<A>(_:)();
      uint64_t v35 = v34;
      char v37 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
      Loggable.wrappedValue.getter();
      char v87 = (char *)v30;
      if (v122 == 1) {
        static Color.blue.getter();
      }
      else {
        static Color.primary.getter();
      }
      uint64_t v62 = Text.foregroundColor(_:)();
      uint64_t v64 = v63;
      char v66 = v65;
      uint64_t v68 = v67;
      swift_release();
      outlined consume of Text.Storage(v33, v35, v37 & 1);
      swift_bridgeObjectRelease();
      uint64_t v69 = MEMORY[0x263F1A838];
      uint64_t v70 = MEMORY[0x263F77350];
      uint64_t v124 = MEMORY[0x263F1A838];
      uint64_t v125 = MEMORY[0x263F77350];
      uint64_t v71 = swift_allocObject();
      uint64_t v122 = v71;
      *(void *)(v71 + 16) = v62;
      *(void *)(v71 + 24) = v64;
      *(unsigned char *)(v71 + 32) = v66 & 1;
      *(void *)(v71 + 40) = v68;
      uint64_t v121 = 0;
      long long v119 = 0u;
      long long v120 = 0u;
      Loggable.wrappedValue.getter();
      uint64_t v72 = v115;
      unint64_t v73 = v116;
      if (!v116)
      {
        uint64_t v72 = 0;
        unint64_t v73 = 0xE000000000000000;
      }
      uint64_t v115 = v72;
      unint64_t v116 = v73;
      uint64_t v74 = Text.init<A>(_:)();
      uint64_t v76 = v75;
      char v78 = v77;
      uint64_t v80 = v79;
      uint64_t v117 = v69;
      uint64_t v118 = v70;
      uint64_t v81 = swift_allocObject();
      uint64_t v115 = v81;
      *(void *)(v81 + 16) = v74;
      *(void *)(v81 + 24) = v76;
      *(unsigned char *)(v81 + 32) = v78 & 1;
      *(void *)(v81 + 40) = v80;
      uint64_t v114 = 0;
      long long v112 = 0u;
      long long v113 = 0u;
      uint64_t v111 = 0;
      long long v109 = 0u;
      long long v110 = 0u;
      uint64_t v108 = 0;
      long long v106 = 0u;
      long long v107 = 0u;
      uint64_t v105 = 0;
      long long v103 = 0u;
      long long v104 = 0u;
      uint64_t v102 = 0;
      long long v100 = 0u;
      long long v101 = 0u;
      uint64_t v99 = 0;
      long long v97 = 0u;
      long long v98 = 0u;
      uint64_t v82 = v89;
      SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)();
      uint64_t v59 = v90;
      id v60 = v88;
      uint64_t v61 = v96;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v88, v82, v96);
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v93, v60, v61);
      swift_storeEnumTagMultiPayload();
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemStandardView and conformance SimpleItemStandardView, MEMORY[0x263F77858]);
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    }
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #2 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  char v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v4 - 8);
  char v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for ActionProperty();
  uint64_t v13 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2591FFD20;
  uint64_t v17 = type metadata accessor for Command();
  uint64_t v18 = MEMORY[0x263F771C8];
  *(void *)(v16 + 56) = v17;
  *(void *)(v16 + 64) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v16 + 32));
  type metadata accessor for DisambiguationItemWithDirectInvocationModel(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  Loggable.wrappedValue.getter();
  uint64_t v20 = CodableAceObject.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t *boxed_opaque_existential_1 = v20;
  *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v17);
  ActionProperty.init(_:)();
  type metadata accessor for LocalEmergencyCallDisambiguationView();
  ActionHandler.wrappedValue.getter();
  uint64_t v21 = type metadata accessor for StandardActionHandler();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
    return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v8, &demangling cache variable for type metadata for StandardActionHandler?);
  }
  else
  {
    uint64_t v24 = (uint64_t)v28;
    uint64_t v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v28, v15, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v25);
    uint64_t v26 = type metadata accessor for InteractionType();
    uint64_t v27 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v29, 1, 1, v26);
    StandardActionHandler.perform(_:interactionType:)();
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v27, &demangling cache variable for type metadata for InteractionType?);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v24, &demangling cache variable for type metadata for ActionProperty?);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  }
}

uint64_t protocol witness for View.body.getter in conformance LocalEmergencyCallDisambiguationView@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of LocalEmergencyCallDisambiguationView(v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel((uint64_t)v5, v10 + v9, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>);
  lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>> and conformance <> _ConditionalContent<A, B>();
  ComponentStack.init(content:)();
  outlined init with copy of LocalEmergencyCallDisambiguationView(v16[1], (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  uint64_t v11 = swift_allocObject();
  outlined init with take of LocalEmergencyCallDisambiguationModel((uint64_t)v5, v11 + v9, (uint64_t (*)(void))type metadata accessor for LocalEmergencyCallDisambiguationView);
  uint64_t v13 = v17;
  uint64_t v12 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v18, v8, v17);
  uint64_t v14 = (void *)(v12
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier>)
                          + 36));
  *uint64_t v14 = partial apply for closure #2 in LocalEmergencyCallDisambiguationView.body.getter;
  v14[1] = v11;
  v14[2] = 0;
  v14[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v13);
}

char *initializeBufferWithCopyOfBuffer for LocalEmergencyCallDisambiguationView(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionHandler();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14);
    uint64_t v18 = *(void *)(v16 + 8);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    *((void *)v15 + 2) = *(void *)(v16 + 16);
    uint64_t v19 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
    uint64_t v20 = v19[6];
    uint64_t v33 = &v15[v20];
    uint64_t v21 = v16 + v20;
    uint64_t v22 = type metadata accessor for UUID();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v33, v21, v22);
    uint64_t v24 = v19[7];
    uint64_t v25 = &v15[v24];
    uint64_t v26 = v16 + v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    v15[v19[8]] = *(unsigned char *)(v16 + v19[8]);
    uint64_t v28 = v19[9];
    char v29 = &v15[v28];
    uint64_t v30 = (void *)(v16 + v28);
    uint64_t v31 = v30[1];
    *(void *)char v29 = *v30;
    *((void *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for LocalEmergencyCallDisambiguationView(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v8 = &v6[*(int *)(v7 + 24)];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = &v6[*(int *)(v7 + 28)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LocalEmergencyCallDisambiguationView(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *uint64_t v15 = *(void *)(a2 + v14);
  v15[1] = v17;
  _OWORD v15[2] = *(void *)(a2 + v14 + 16);
  uint64_t v18 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v19 = v18[6];
  unint64_t v32 = (char *)v15 + v19;
  uint64_t v20 = v16 + v19;
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v32, v20, v21);
  uint64_t v23 = v18[7];
  uint64_t v24 = (char *)v15 + v23;
  uint64_t v25 = v16 + v23;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  *((unsigned char *)v15 + v18[8]) = *(unsigned char *)(v16 + v18[8]);
  uint64_t v27 = v18[9];
  uint64_t v28 = (void *)((char *)v15 + v27);
  char v29 = (void *)(v16 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  *uint64_t v14 = *(void *)(a2 + v13);
  v14[1] = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[2] = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v17 = v16[6];
  uint64_t v18 = (char *)v14 + v17;
  uint64_t v19 = v15 + v17;
  uint64_t v20 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = v16[7];
  uint64_t v22 = (char *)v14 + v21;
  uint64_t v23 = v15 + v21;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *((unsigned char *)v14 + v16[8]) = *(unsigned char *)(v15 + v16[8]);
  uint64_t v25 = v16[9];
  uint64_t v26 = (void *)((char *)v14 + v25);
  uint64_t v27 = (void *)(v15 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for LocalEmergencyCallDisambiguationView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_OWORD *)uint64_t v11 = *(_OWORD *)((char *)a2 + v10);
  *((void *)v11 + 2) = *(void *)((char *)a2 + v10 + 16);
  uint64_t v13 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = v13[7];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  v11[v13[8]] = v12[v13[8]];
  *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
  return a1;
}

uint64_t assignWithTake for LocalEmergencyCallDisambiguationView(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *uint64_t v12 = *(void *)((char *)a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v12[2] = *((void *)v13 + 2);
  swift_bridgeObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v16 = v15[6];
  uint64_t v17 = (char *)v12 + v16;
  uint64_t v18 = &v13[v16];
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = v15[7];
  uint64_t v21 = (char *)v12 + v20;
  uint64_t v22 = &v13[v20];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *((unsigned char *)v12 + v15[8]) = v13[v15[8]];
  uint64_t v24 = v15[9];
  uint64_t v25 = (void *)((char *)v12 + v24);
  uint64_t v26 = &v13[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591F527C);
}

uint64_t sub_2591F527C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ActionHandler();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LocalEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591F53C8);
}

void *sub_2591F53C8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActionHandler();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for LocalEmergencyCallDisambiguationView()
{
  uint64_t result = type metadata accessor for ActionHandler();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocalEmergencyCallDisambiguationModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>> and conformance ComponentStack<A>, &demangling cache variable for type metadata for ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ComponentStack<_ConditionalContent<<<opaque return type of View.requestHostBackground<A, B>(_:accepted:denied:)>>.0, TupleView<(SashStandardView?, ForEachWithIndex<[DisambiguationItemWithDirectInvocationModel], <<opaque return type of View.separators(_:isOverride:)>>.0>)>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  uint64_t v4 = (id *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  return closure #1 in LocalEmergencyCallDisambiguationView.body.getter(v4, a1);
}

void partial apply for closure #2 in LocalEmergencyCallDisambiguationView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  unint64_t v2 = (id *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  closure #2 in LocalEmergencyCallDisambiguationView.body.getter(v2);
}

uint64_t partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))closure #1 in LocalEmergencyCallDisambiguationView.listView.getter);
}

uint64_t partial apply for closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(v4, a1);
}

uint64_t objectdestroyTm_15()
{
  uint64_t v1 = (int *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  unint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  int v5 = (char *)v2 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  uint64_t v7 = &v5[*(int *)(v6 + 24)];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = &v5[*(int *)(v6 + 28)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter);
}

uint64_t partial apply for closure #1 in LocalEmergencyCallDisambiguationView.listView.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, a2, v7);
}

uint64_t outlined init with copy of LocalEmergencyCallDisambiguationView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with take of LocalEmergencyCallDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter((uint64_t (*)(unint64_t, uint64_t))closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem>);
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SimpleItemRichView, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined destroy of LocalEmergencyCallDisambiguationView(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalEmergencyCallDisambiguationView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2591F5C34()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for DisambiguationItemWithDirectInvocationModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = (int *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  unint64_t v24 = (v2 + v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v5 = v0 + v2;
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v26 = *(void (**)(unint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
  v26(v0 + v2, v25);
  unint64_t v6 = v0 + v2 + v1[7];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String?>);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v5 + v1[8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  uint64_t v12 = v5 + v1[9];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  v8(v5 + v1[10], v7);
  uint64_t v14 = v5 + v1[11];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<CodableAceObject<SAIntentGroupRunSiriKitExecutor>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v5 + v1[12];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<DisambiguationItemWithDirectInvocationModel.ItemType>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  unint64_t v18 = v23 + v24 + v4[7];
  uint64_t v19 = type metadata accessor for ActionHandler();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  unint64_t v20 = v23 + v24 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for LocalEmergencyCallDisambiguationModel(0);
  v26(v20 + *(int *)(v21 + 24), v25);
  v11(v20 + *(int *)(v21 + 28), v10);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter()
{
  return partial apply for closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter((uint64_t (*)(unint64_t, uint64_t))closure #2 in closure #1 in LocalEmergencyCallDisambiguationView.listView.getter);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in LocalEmergencyCallDisambiguationView.body.getter(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for DisambiguationItemWithDirectInvocationModel(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for LocalEmergencyCallDisambiguationView() - 8);
  uint64_t v6 = v1 + ((v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1(v1 + v3, v6);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem>);
    lazy protocol witness table accessor for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>();
    lazy protocol witness table accessor for type CarPlayDisambiguationListItem and conformance CarPlayDisambiguationListItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>, CarPlayDisambiguationListItem> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>>);
    lazy protocol witness table accessor for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<SimpleItemStandardView, SimpleItemRichView>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<SimpleItemStandardView, SimpleItemRichView>);
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemStandardView and conformance SimpleItemStandardView, MEMORY[0x263F77858]);
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(&lazy protocol witness table cache variable for type SimpleItemRichView and conformance SimpleItemRichView, MEMORY[0x263F77728]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<SimpleItemStandardView, SimpleItemRichView> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double SingleResultVoicemailView.circleWidth.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t type metadata accessor for SingleResultVoicemailView()
{
  uint64_t result = type metadata singleton initialization cache for SingleResultVoicemailView;
  if (!type metadata singleton initialization cache for SingleResultVoicemailView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t property wrapper backing initializer of SingleResultVoicemailView.circleWidth(double a1)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  MEMORY[0x270FA5388](v2);
  *(double *)&v6[1] = a1;
  (*(void (**)(char *, void))(v4 + 104))((char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F1A6D0]);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  return ScaledMetric.init(wrappedValue:relativeTo:)();
}

double SingleResultVoicemailView.circleHeight.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  return v1;
}

uint64_t SingleResultVoicemailView.singleVoicemailModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SingleResultVoicemailView();
  return outlined init with copy of SingleResultVoicemailModel(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailModel);
}

uint64_t property wrapper backing initializer of SingleResultVoicemailView.progress()
{
  State.init(wrappedValue:)();
  return v1;
}

double SingleResultVoicemailView.progress.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return v1;
}

double key path getter for SingleResultVoicemailView.progress : SingleResultVoicemailView@<D0>(double *a1@<X8>)
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for SingleResultVoicemailView.progress : SingleResultVoicemailView()
{
  return State.wrappedValue.setter();
}

uint64_t SingleResultVoicemailView.progress.setter()
{
  return State.wrappedValue.setter();
}

void (*SingleResultVoicemailView.progress.modify(void *a1))(uint64_t a1)
{
  double v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 36));
  uint64_t v5 = *v4;
  v3[4] = *v4;
  uint64_t v6 = v4[1];
  v3[5] = v6;
  *double v3 = v5;
  v3[1] = v6;
  swift_retain();
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return SingleResultVoicemailView.progress.modify;
}

void SingleResultVoicemailView.progress.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 16);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  *uint64_t v1 = *(void *)(*(void *)a1 + 32);
  v1[1] = v3;
  v1[3] = v2;
  State.wrappedValue.setter();
  swift_release();
  free(v1);
}

double SingleResultVoicemailView.$progress.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.projectedValue.getter();
  return v1;
}

uint64_t property wrapper backing initializer of SingleResultVoicemailView.shouldStartTimer()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t SingleResultVoicemailView.shouldStartTimer.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for SingleResultVoicemailView.shouldStartTimer : SingleResultVoicemailView@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  uint64_t result = State.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for SingleResultVoicemailView.shouldStartTimer : SingleResultVoicemailView()
{
  return State.wrappedValue.setter();
}

uint64_t SingleResultVoicemailView.shouldStartTimer.setter()
{
  return State.wrappedValue.setter();
}

void (*SingleResultVoicemailView.shouldStartTimer.modify(void *a1))(uint64_t a1)
{
  char v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = (char *)(v1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 40));
  char v5 = *v4;
  v3[34] = *v4;
  uint64_t v6 = *((void *)v4 + 1);
  *char v3 = v5;
  *((void *)v3 + 1) = v6;
  *((void *)v3 + 2) = v6;
  swift_retain();
  *((void *)v3 + 3) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  return SingleResultVoicemailView.shouldStartTimer.modify;
}

void SingleResultVoicemailView.shouldStartTimer.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  *(unsigned char *)uint64_t v1 = *(unsigned char *)(*(void *)a1 + 34);
  v1[1] = v3;
  *((unsigned char *)v1 + 33) = v2;
  State.wrappedValue.setter();
  swift_release();
  free(v1);
}

uint64_t SingleResultVoicemailView.$shouldStartTimer.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  return v1;
}

uint64_t SingleResultVoicemailView.init(singleVoicemailModel:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Font.TextStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Context();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
  *a2 = EnvironmentObject.init()();
  a2[1] = v9;
  uint64_t v10 = (int *)type metadata accessor for SingleResultVoicemailView();
  ActionHandler.init()();
  uint64_t v29 = 0x4041800000000000;
  uint64_t v11 = *MEMORY[0x263F1A6D0];
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v12(v8, v11, v5);
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v29 = 0x4041800000000000;
  v12(v8, v11, v5);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v13 = (uint64_t *)((char *)a2 + v10[9]);
  uint64_t v28 = 0;
  State.init(wrappedValue:)();
  uint64_t v14 = v30;
  *uint64_t v13 = v29;
  v13[1] = v14;
  uint64_t v15 = (char *)a2 + v10[10];
  LOBYTE(v28) = 0;
  State.init(wrappedValue:)();
  uint64_t v16 = v30;
  *uint64_t v15 = v29;
  *((void *)v15 + 1) = v16;
  uint64_t v17 = v26;
  outlined init with copy of SingleResultVoicemailModel(v26, (uint64_t)a2 + v10[8], (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailModel);
  type metadata accessor for NSTimer();
  id v18 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v19 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v20 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v27, 1, 1, v19);
  uint64_t v21 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of SearchCallHistoryBinaryButtonModel?(v20, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  uint64_t v29 = v21;
  type metadata accessor for NSTimer.TimerPublisher();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, MEMORY[0x263F07CE8]);
  uint64_t v22 = ConnectablePublisher.autoconnect()();
  swift_release();
  *(uint64_t *)((char *)a2 + v10[11]) = v22;
  double v23 = ceil(*(double *)(v17 + 80));
  uint64_t result = outlined destroy of SingleResultVoicemailModel(v17, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailModel);
  *(double *)((char *)a2 + v10[12]) = v23;
  return result;
}

unint64_t type metadata accessor for NSTimer()
{
  unint64_t result = lazy cache variable for type metadata for NSTimer;
  if (!lazy cache variable for type metadata for NSTimer)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  }
  return result;
}

uint64_t SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[AnyHashable : Any]>.Publisher);
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v55 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SingleResultVoicemailView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v60 = v4 - 8;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>);
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>)
      - 8;
  MEMORY[0x270FA5388](v48);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v49 = (uint64_t (*)())(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>)
                      - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>);
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>, _AppearanceActionModifier>);
  MEMORY[0x270FA5388](v52);
  uint64_t v53 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for SingleResultVoicemailView;
  outlined init with copy of SingleResultVoicemailModel(v1, v46, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailView);
  uint64_t v16 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = (v16 + 16) & ~v16;
  uint64_t v18 = v17 + v6;
  uint64_t v19 = v16 | 7;
  uint64_t v20 = swift_allocObject();
  outlined init with take of SingleResultVoicemailView((uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v17);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>);
  lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>);
  ComponentStack.init(content:)();
  LOBYTE(v6) = static Edge.Set.all.getter();
  uint64_t v21 = v50;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v9, v50);
  v11[*(int *)(v48 + 44)] = v6;
  uint64_t v22 = v59;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  uint64_t v23 = *(uint64_t *)((char *)v22 + *(int *)(v60 + 52));
  uint64_t v24 = v46;
  outlined init with copy of SingleResultVoicemailModel((uint64_t)v22, v46, (uint64_t (*)(void))v47);
  uint64_t v50 = v18;
  uint64_t v60 = v19;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v17;
  uint64_t v27 = v24;
  outlined init with take of SingleResultVoicemailView(v24, v25 + v17);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v28 = v49;
  *(void *)&v13[*((int *)v49 + 15)] = v23;
  uint64_t v29 = (uint64_t)v13;
  uint64_t v30 = (uint64_t (**)())&v13[*((int *)v28 + 16)];
  void *v30 = partial apply for implicit closure #2 in implicit closure #1 in SingleResultVoicemailView.body.getter;
  v30[1] = (uint64_t (*)())v25;
  swift_retain();
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>);
  if (*v22)
  {
    id v31 = *v22;
    unint64_t v32 = v55;
    dispatch thunk of Context.$sharedState.getter();

    unint64_t v49 = type metadata accessor for SingleResultVoicemailView;
    outlined init with copy of SingleResultVoicemailModel((uint64_t)v22, v24, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailView);
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v26;
    outlined init with take of SingleResultVoicemailView(v24, v33 + v26);
    uint64_t v35 = v29;
    uint64_t v36 = v54;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v29, v54, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>);
    uint64_t v37 = v51;
    uint64_t v39 = v56;
    uint64_t v38 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v36 + *(int *)(v51 + 52), v32, v57);
    uint64_t v40 = (void (**)())(v36 + *(int *)(v37 + 56));
    *uint64_t v40 = partial apply for closure #2 in SingleResultVoicemailView.body.getter;
    v40[1] = (void (*)())v33;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v38);
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v35, &demangling cache variable for type metadata for SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>);
    outlined init with copy of SingleResultVoicemailModel((uint64_t)v59, v27, (uint64_t (*)(void))v49);
    uint64_t v41 = swift_allocObject();
    outlined init with take of SingleResultVoicemailView(v27, v41 + v34);
    uint64_t v42 = v53;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v36, v53, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>);
    uint64_t v43 = (void *)(v42 + *(int *)(v52 + 36));
    *uint64_t v43 = 0;
    v43[1] = 0;
    v43[2] = partial apply for closure #3 in SingleResultVoicemailView.body.getter;
    v43[3] = v41;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v36, &demangling cache variable for type metadata for SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>);
    return outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v42, v58, &demangling cache variable for type metadata for ModifiedContent<SubscriptionView<Published<[AnyHashable : Any]>.Publisher, SubscriptionView<Publishers.Autoconnect<NSTimer.TimerPublisher>, ModifiedContent<ComponentStack<TupleView<(ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView)>>, _BackgroundStyleModifier<BackgroundStyle>>>>, _AppearanceActionModifier>);
  }
  else
  {
    type metadata accessor for Context();
    _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11((unint64_t *)&lazy protocol witness table cache variable for type Context and conformance Context, MEMORY[0x263F77978]);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v193 = a2;
  uint64_t v189 = type metadata accessor for SearchCallHistoryBinaryButtonView();
  uint64_t v3 = MEMORY[0x270FA5388](v189);
  uint64_t v194 = (uint64_t)&v163 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v192 = (char *)&v163 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
  MEMORY[0x270FA5388](v6 - 8);
  char v164 = (uint64_t *)((char *)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v187 = v8;
  uint64_t v188 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v163 = (uint64_t)&v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v191 = (uint64_t)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v186 = (uint64_t)&v163 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v190 = (uint64_t)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v185 = (uint64_t *)((char *)&v163 - v19);
  MEMORY[0x270FA5388](v18);
  uint64_t v197 = (uint64_t)&v163 - v20;
  uint64_t v21 = type metadata accessor for SeparatorStyle();
  uint64_t v183 = *(void *)(v21 - 8);
  uint64_t v184 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v182 = (char *)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ImageElement.ImageStyle();
  uint64_t v168 = *(void *)(v23 - 8);
  uint64_t v169 = v23;
  MEMORY[0x270FA5388](v23);
  unsigned long long v166 = (char *)&v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ImageElement();
  MEMORY[0x270FA5388](v25 - 8);
  long long v173 = (char *)&v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ImageElementView();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v177 = v27;
  uint64_t v178 = v28;
  MEMORY[0x270FA5388](v27);
  long long v172 = (char *)&v163 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for SingleResultVoicemailView();
  uint64_t v31 = v30 - 8;
  uint64_t v32 = *(void *)(v30 - 8);
  uint64_t v33 = *(void *)(v32 + 64);
  MEMORY[0x270FA5388](v30);
  unint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v34 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  uint64_t v36 = (char *)&v163 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for SummaryItemButtonView();
  uint64_t v180 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  long long v170 = (char *)&v163 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.separators(_:isOverride:)>>.0);
  uint64_t v179 = *(void *)(v181 - 8);
  MEMORY[0x270FA5388](v181);
  long long v171 = (char *)&v163 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>)
       - 8;
  uint64_t v39 = MEMORY[0x270FA5388](v175);
  long long v174 = (char *)&v163 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v196 = (uint64_t)&v163 - v41;
  uint64_t v42 = (void *)(a1 + *(int *)(v31 + 40));
  uint64_t v44 = v42[2];
  uint64_t v43 = v42[3];
  uint64_t v229 = MEMORY[0x263F8D310];
  uint64_t v230 = MEMORY[0x263F779A0];
  uint64_t v227 = v44;
  uint64_t v228 = v43;
  swift_bridgeObjectRetain();
  uint64_t v45 = static Alignment.center.getter();
  uint64_t v47 = v46;
  uint64_t v167 = a1;
  closure #1 in SingleResultVoicemailView.getRepeatView()((uint64_t)&v218);
  int v48 = v218;
  char v49 = BYTE4(v218);
  char v50 = BYTE5(v218);
  uint64_t v51 = v219;
  char v52 = v221;
  uint64_t v53 = *((void *)&v221 + 1);
  char v54 = v222;
  uint64_t v55 = v225;
  long long v56 = v220;
  long long v57 = v223;
  long long v58 = v224;
  uint64_t v218 = v45;
  uint64_t v219 = v47;
  LODWORD(v220) = v48;
  BYTE4(v220) = v49;
  BYTE5(v220) = v50;
  *((void *)&v220 + 1) = v51;
  long long v221 = v56;
  char v222 = v52;
  *(void *)&long long v223 = v53;
  BYTE8(v223) = v54;
  long long v224 = v57;
  long long v225 = v58;
  uint64_t v226 = v55;
  outlined init with copy of SingleResultVoicemailModel(a1, (uint64_t)&v163 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailView);
  unint64_t v59 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v60 = swift_allocObject();
  outlined init with take of SingleResultVoicemailView((uint64_t)&v163 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v60 + v59);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>);
  uint64_t v62 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<_ShapeView<Circle, HierarchicalShapeStyle>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>)>>);
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v218 = v61;
  uint64_t v219 = v62;
  swift_getOpaqueTypeConformance2();
  unint64_t v63 = v165;
  uint64_t v64 = View.eraseToAnyView()();
  (*(void (**)(char *, unint64_t))(v34 + 8))(v36, v63);
  *(void *)&long long v221 = MEMORY[0x263F774A8];
  *((void *)&v220 + 1) = MEMORY[0x263F1B728];
  uint64_t v218 = v64;
  uint64_t v217 = 0;
  long long v215 = 0u;
  long long v216 = 0u;
  uint64_t v214 = 0;
  long long v212 = 0u;
  long long v213 = 0u;
  uint64_t v195 = v42;
  uint64_t v65 = v42[5];
  uint64_t v208 = v42[4];
  uint64_t v209 = v65;
  unint64_t v165 = lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v66 = Text.init<A>(_:)();
  uint64_t v68 = v67;
  LOBYTE(v33) = v69 & 1;
  uint64_t v208 = static Color.secondary.getter();
  uint64_t v70 = Text.foregroundStyle<A>(_:)();
  uint64_t v72 = v71;
  LOBYTE(v64) = v73 & 1;
  outlined consume of Text.Storage(v66, v68, v33);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v74 = Text.font(_:)();
  uint64_t v76 = v75;
  LOBYTE(v42) = v77;
  uint64_t v79 = v78;
  swift_release();
  outlined consume of Text.Storage(v70, v72, v64);
  swift_bridgeObjectRelease();
  uint64_t v210 = MEMORY[0x263F1A838];
  uint64_t v211 = MEMORY[0x263F77350];
  uint64_t v80 = swift_allocObject();
  uint64_t v208 = v80;
  *(void *)(v80 + 16) = v74;
  *(void *)(v80 + 24) = v76;
  *(unsigned char *)(v80 + 32) = v42 & 1;
  *(void *)(v80 + 40) = v79;
  uint64_t v81 = v195[7];
  uint64_t v204 = v195[6];
  uint64_t v205 = v81;
  swift_bridgeObjectRetain();
  uint64_t v82 = Text.init<A>(_:)();
  uint64_t v84 = v83;
  LOBYTE(v66) = v85 & 1;
  uint64_t v204 = static Color.secondary.getter();
  uint64_t v86 = Text.foregroundStyle<A>(_:)();
  uint64_t v88 = v87;
  LOBYTE(v64) = v89 & 1;
  outlined consume of Text.Storage(v82, v84, v66);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v90 = Text.font(_:)();
  uint64_t v92 = v91;
  LOBYTE(v66) = v93;
  uint64_t v95 = v94;
  swift_release();
  uint64_t v96 = v88;
  long long v97 = v195;
  outlined consume of Text.Storage(v86, v96, v64);
  swift_bridgeObjectRelease();
  uint64_t v206 = MEMORY[0x263F1A838];
  uint64_t v207 = MEMORY[0x263F77350];
  uint64_t v98 = swift_allocObject();
  uint64_t v204 = v98;
  *(void *)(v98 + 16) = v90;
  *(void *)(v98 + 24) = v92;
  *(unsigned char *)(v98 + 32) = v66 & 1;
  *(void *)(v98 + 40) = v95;
  uint64_t v203 = 0;
  long long v201 = 0u;
  long long v202 = 0u;
  uint64_t v100 = v168;
  uint64_t v99 = v169;
  long long v101 = v166;
  (*(void (**)(char *, void, uint64_t))(v168 + 104))(v166, *MEMORY[0x263F764E8], v169);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_ProtoIdiom>);
  uint64_t v102 = type metadata accessor for _ProtoIdiom();
  uint64_t v103 = *(void *)(v102 - 8);
  unint64_t v104 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = xmmword_2591FFD20;
  (*(void (**)(unint64_t, void, uint64_t))(v103 + 104))(v105 + v104, *MEMORY[0x263F76468], v102);
  specialized Set.init(_nonEmptyArrayLiteral:)(v105);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v99);
  long long v106 = v172;
  ImageElementView.init(_:)();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11(&lazy protocol witness table cache variable for type ImageElementView and conformance ImageElementView, MEMORY[0x263F77690]);
  uint64_t v107 = v177;
  uint64_t v108 = View.eraseToAnyView()();
  (*(void (**)(char *, uint64_t))(v178 + 8))(v106, v107);
  uint64_t v200 = MEMORY[0x263F774A8];
  uint64_t v199 = MEMORY[0x263F1B728];
  uint64_t v198 = v108;
  long long v109 = v170;
  SummaryItemButtonView.init(text1:button1:button2:button3:text2:text3:text4:thumbnail:)();
  uint64_t v111 = v182;
  uint64_t v110 = v183;
  uint64_t v112 = v184;
  (*(void (**)(char *, void, uint64_t))(v183 + 104))(v182, *MEMORY[0x263F76990], v184);
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11(&lazy protocol witness table cache variable for type SummaryItemButtonView and conformance SummaryItemButtonView, MEMORY[0x263F77808]);
  long long v113 = v171;
  uint64_t v114 = v176;
  View.separators(_:isOverride:)();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
  uint64_t v115 = v109;
  uint64_t v116 = 1;
  (*(void (**)(char *, uint64_t))(v180 + 8))(v115, v114);
  LOBYTE(v108) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v118 = v117;
  uint64_t v120 = v119;
  uint64_t v122 = v121;
  uint64_t v124 = v123;
  uint64_t v125 = v179;
  uint64_t v126 = (uint64_t)v174;
  uint64_t v127 = v181;
  (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v174, v113, v181);
  uint64_t v128 = v126 + *(int *)(v175 + 44);
  *(unsigned char *)uint64_t v128 = v108;
  uint64_t v129 = v167;
  *(void *)(v128 + 8) = v118;
  *(void *)(v128 + 16) = v120;
  *(void *)(v128 + 24) = v122;
  *(void *)(v128 + 32) = v124;
  *(unsigned char *)(v128 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v125 + 8))(v113, v127);
  uint64_t v130 = v126;
  uint64_t v131 = v196;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v126, v196, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  uint64_t v132 = static HorizontalAlignment.center.getter();
  uint64_t v133 = (uint64_t)v185;
  uint64_t *v185 = v132;
  *(void *)(v133 + 8) = 0;
  *(unsigned char *)(v133 + 16) = 1;
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  closure #1 in closure #1 in SingleResultVoicemailView.body.getter(v129, v133 + *(int *)(v134 + 44));
  uint64_t v135 = v197;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v133, v197, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  unint64_t v136 = v97[13];
  uint64_t v137 = v97[12] & 0xFFFFFFFFFFFFLL;
  if ((v136 & 0x2000000000000000) != 0) {
    uint64_t v137 = HIBYTE(v136) & 0xF;
  }
  if (v137)
  {
    uint64_t v138 = static HorizontalAlignment.leading.getter();
    uint64_t v139 = (uint64_t)v164;
    uint64_t *v164 = v138;
    *(void *)(v139 + 8) = 0;
    *(unsigned char *)(v139 + 16) = 1;
    uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
    closure #2 in closure #1 in SingleResultVoicemailView.body.getter(v129, v139 + *(int *)(v140 + 44));
    char v141 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v143 = v142;
    uint64_t v145 = v144;
    uint64_t v147 = v146;
    uint64_t v149 = v148;
    uint64_t v150 = v163;
    outlined init with copy of SearchCallHistoryBinaryButtonModel?(v139, v163, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
    uint64_t v151 = v187;
    uint64_t v152 = v150 + *(int *)(v187 + 36);
    *(unsigned char *)uint64_t v152 = v141;
    *(void *)(v152 + 8) = v143;
    *(void *)(v152 + 16) = v145;
    *(void *)(v152 + 24) = v147;
    *(void *)(v152 + 32) = v149;
    *(unsigned char *)(v152 + 40) = 0;
    outlined destroy of SearchCallHistoryBinaryButtonModel?(v139, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>);
    uint64_t v153 = v186;
    outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v150, v186, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>);
    uint64_t v116 = 0;
    uint64_t v154 = v151;
  }
  else
  {
    uint64_t v153 = v186;
    uint64_t v154 = v187;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v188 + 56))(v153, v116, 1, v154);
  uint64_t v155 = (uint64_t)v97 + *(int *)(type metadata accessor for SingleResultVoicemailModel() + 60);
  uint64_t v156 = (uint64_t)v192;
  outlined init with copy of SingleResultVoicemailModel(v155, (uint64_t)&v192[*(int *)(v189 + 20)], (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonModel);
  ActionHandler.init()();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v131, v130, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  uint64_t v157 = v190;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v135, v190, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  uint64_t v158 = v191;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v153, v191, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  uint64_t v159 = v194;
  outlined init with copy of SingleResultVoicemailModel(v156, v194, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  uint64_t v160 = v193;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v130, v193, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  uint64_t v161 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>, VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?, SearchCallHistoryBinaryButtonView));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v157, v160 + v161[12], &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v158, v160 + v161[16], &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  outlined init with copy of SingleResultVoicemailModel(v159, v160 + v161[20], (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  outlined destroy of SingleResultVoicemailModel(v156, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v153, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v197, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v196, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
  outlined destroy of SingleResultVoicemailModel(v159, (uint64_t (*)(void))type metadata accessor for SearchCallHistoryBinaryButtonView);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v158, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>)>>, _PaddingLayout>?);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v157, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>)>>);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v130, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.separators(_:isOverride:)>>.0, _PaddingLayout>);
}

uint64_t outlined init with take of SingleResultVoicemailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleResultVoicemailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SingleResultVoicemailView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return closure #1 in SingleResultVoicemailView.body.getter(v4, a1);
}

uint64_t closure #1 in closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v3 = type metadata accessor for SimpleItemStandardView();
  uint64_t v121 = *(void *)(v3 - 8);
  uint64_t v122 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v119 = (char *)v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  uint64_t v5 = MEMORY[0x270FA5388](v118);
  uint64_t v123 = (uint64_t)v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v117 = (char *)v111 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v120 = (uint64_t)v111 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  uint64_t v113 = *(void *)(v10 - 8);
  uint64_t v114 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v22 = v21 - 8;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v111[0] = (char *)v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v125 = (uint64_t)v111 - v25;
  uint64_t v26 = type metadata accessor for SingleResultVoicemailView();
  uint64_t v27 = (uint64_t *)(a1 + *(int *)(v26 + 36));
  uint64_t v28 = *v27;
  uint64_t v112 = v27[1];
  uint64_t v142 = v28;
  uint64_t v143 = v112;
  v111[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  char v139 = 0;
  uint64_t v115 = v26;
  uint64_t v116 = a1;
  uint64_t v142 = *(void *)(a1 + *(int *)(v26 + 48));
  lazy protocol witness table accessor for type Double and conformance Double();
  ProgressView.init<A>(value:total:)();
  char v29 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v113;
  uint64_t v38 = v114;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v16, v12, v114);
  uint64_t v40 = &v16[*(int *)(v14 + 44)];
  *uint64_t v40 = v29;
  *((void *)v40 + 1) = v31;
  *((void *)v40 + 2) = v33;
  *((void *)v40 + 3) = v35;
  *((void *)v40 + 4) = v37;
  v40[40] = 0;
  uint64_t v41 = v38;
  uint64_t v42 = v111[0];
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v41);
  char v43 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, (uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>);
  char v52 = &v20[*(int *)(v18 + 44)];
  *char v52 = v43;
  *((void *)v52 + 1) = v45;
  *((void *)v52 + 2) = v47;
  *((void *)v52 + 3) = v49;
  *((void *)v52 + 4) = v51;
  v52[40] = 0;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>);
  uint64_t v53 = static Color.gray.getter();
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v20, v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v55 = (uint64_t *)(v42 + *(int *)(v22 + 44));
  uint64_t *v55 = KeyPath;
  v55[1] = v53;
  outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v56 = v42;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v42, v125, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v142 = v28;
  uint64_t v143 = v112;
  State.wrappedValue.getter();
  double v57 = v138;
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08780]), sel_init);
  objc_msgSend(v58, sel_setUnitsStyle_, 0);
  objc_msgSend(v58, sel_setAllowedUnits_, 192);
  objc_msgSend(v58, sel_setZeroFormattingBehavior_, 0x10000);
  id v59 = objc_msgSend(v58, sel_stringFromTimeInterval_, v57);
  if (v59)
  {
    uint64_t v60 = v59;
    unint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v63 = v62;

    v64._uint64_t countAndFlagsBits = 48;
    v64._object = (void *)0xE100000000000000;
    if (String.hasPrefix(_:)(v64))
    {
      uint64_t v66 = specialized Collection.dropFirst(_:)(1uLL, v61, v63, v65);
      uint64_t v68 = v67;
      uint64_t v70 = v69;
      uint64_t v72 = v71;
      swift_bridgeObjectRelease();
      MEMORY[0x25A2D8B40](v66, v68, v70, v72);
      swift_bridgeObjectRelease();
    }
  }

  uint64_t v73 = SingleResultVoicemailView.getVoicemailTimeText(input:)();
  uint64_t v75 = v74;
  char v77 = v76;
  uint64_t v79 = v78;
  swift_bridgeObjectRelease();
  uint64_t v80 = MEMORY[0x263F1A838];
  uint64_t v81 = MEMORY[0x263F77350];
  uint64_t v144 = MEMORY[0x263F1A838];
  uint64_t v145 = MEMORY[0x263F77350];
  uint64_t v82 = swift_allocObject();
  uint64_t v142 = v82;
  *(void *)(v82 + 16) = v73;
  *(void *)(v82 + 24) = v75;
  *(unsigned char *)(v82 + 32) = v77 & 1;
  *(void *)(v82 + 40) = v79;
  uint64_t v83 = SingleResultVoicemailView.getVoicemailTimeText(input:)();
  uint64_t v85 = v84;
  char v87 = v86;
  uint64_t v89 = v88;
  uint64_t v140 = v80;
  uint64_t v141 = v81;
  uint64_t v90 = swift_allocObject();
  uint64_t v137 = 0;
  double v138 = *(double *)&v90;
  *(void *)(v90 + 16) = v83;
  *(void *)(v90 + 24) = v85;
  *(unsigned char *)(v90 + 32) = v87 & 1;
  *(void *)(v90 + 40) = v89;
  long long v135 = 0u;
  long long v136 = 0u;
  uint64_t v134 = 0;
  long long v132 = 0u;
  long long v133 = 0u;
  uint64_t v131 = 0;
  long long v129 = 0u;
  long long v130 = 0u;
  uint64_t v128 = 0;
  long long v126 = 0u;
  long long v127 = 0u;
  uint64_t v91 = v119;
  SimpleItemStandardView.init(text1:text2:text3:text4:text5:text6:)();
  LOBYTE(v83) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v101 = v121;
  uint64_t v100 = v122;
  uint64_t v102 = v117;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v117, v91, v122);
  uint64_t v103 = &v102[*(int *)(v118 + 36)];
  *uint64_t v103 = v83;
  *((void *)v103 + 1) = v93;
  *((void *)v103 + 2) = v95;
  *((void *)v103 + 3) = v97;
  *((void *)v103 + 4) = v99;
  v103[40] = 0;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v91, v100);
  uint64_t v104 = (uint64_t)v102;
  uint64_t v105 = v120;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v104, v120, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  uint64_t v106 = v125;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v125, v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v107 = v123;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v105, v123, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  uint64_t v108 = v124;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v56, v124, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<SimpleItemStandardView, _PaddingLayout>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v107, v108 + *(int *)(v109 + 48), &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v105, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v106, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v107, &demangling cache variable for type metadata for ModifiedContent<SimpleItemStandardView, _PaddingLayout>);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?(v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Color?>>);
}

uint64_t SingleResultVoicemailView.getVoicemailTimeText(input:)()
{
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t v0 = Text.init<A>(_:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  static Color.secondary.getter();
  uint64_t v5 = Text.foregroundStyle<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  outlined consume of Text.Storage(v0, v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  LOBYTE(v0) = v14 & 1;
  outlined consume of Text.Storage(v5, v7, v9);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v15 = Text.fontWeight(_:)();
  outlined consume of Text.Storage(v10, v12, v0);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t closure #2 in closure #1 in SingleResultVoicemailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = type metadata accessor for LongItemTextView();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>)
      - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v56);
  char v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (uint64_t)&v52 - v7;
  uint64_t v8 = type metadata accessor for PlainTextView();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.bold(_:)>>.0);
  uint64_t v12 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  char v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v52 = (uint64_t)&v52 - v20;
  uint64_t v21 = a1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 32);
  swift_bridgeObjectRetain();
  PlainTextView.init(_:)();
  _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11(&lazy protocol witness table cache variable for type PlainTextView and conformance PlainTextView, MEMORY[0x263F77590]);
  View.bold(_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  LOBYTE(v11) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = v53;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v14, v53);
  uint64_t v31 = &v19[*(int *)(v16 + 44)];
  *uint64_t v31 = (char)v11;
  *((void *)v31 + 1) = v23;
  *((void *)v31 + 2) = v25;
  *((void *)v31 + 3) = v27;
  *((void *)v31 + 4) = v29;
  v31[40] = 0;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  uint64_t v32 = v52;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>((uint64_t)v19, v52, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  uint64_t v34 = *(void *)(v21 + 96);
  uint64_t v33 = *(void *)(v21 + 104);
  uint64_t v63 = MEMORY[0x263F8D310];
  uint64_t v64 = MEMORY[0x263F779A0];
  uint64_t v61 = v34;
  uint64_t v62 = v33;
  swift_bridgeObjectRetain();
  uint64_t v35 = v55;
  LongItemTextView.init(text1:)();
  LOBYTE(v11) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v58;
  uint64_t v44 = v59;
  uint64_t v46 = (uint64_t)v54;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v54, v35, v59);
  uint64_t v47 = v46 + *(int *)(v56 + 44);
  *(unsigned char *)uint64_t v47 = (_BYTE)v11;
  *(void *)(v47 + 8) = v37;
  *(void *)(v47 + 16) = v39;
  *(void *)(v47 + 24) = v41;
  *(void *)(v47 + 32) = v43;
  *(unsigned char *)(v47 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v44);
  uint64_t v48 = v57;
  outlined init with take of ModifiedContent<ComponentStack<TupleView<(EmergencyCountdownSash, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>, _PaddingLayout>, _FlexFrameLayout>, Divider, BinaryButtonView)>>, _AppearanceActionModifier>(v46, v57, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v32, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v48, v46, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  uint64_t v49 = v60;
  outlined init with copy of SearchCallHistoryBinaryButtonModel?((uint64_t)v19, v60, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>, ModifiedContent<LongItemTextView, _PaddingLayout>));
  outlined init with copy of SearchCallHistoryBinaryButtonModel?(v46, v49 + *(int *)(v50 + 48), &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v48, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v32, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
  outlined destroy of SearchCallHistoryBinaryButtonModel?(v46, &demangling cache variable for type metadata for ModifiedContent<LongItemTextView, _PaddingLayout>);
  return outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _PaddingLayout>);
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in SingleResultVoicemailView.body.getter()
{
  return SingleResultVoicemailView.handleTimer(_:)();
}

uint64_t SingleResultVoicemailView.handleTimer(_:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SingleResultVoicemailView();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + *(int *)(v3 + 40);
  char v7 = *(unsigned char *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  LOBYTE(v21) = v7;
  uint64_t v22 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  int v9 = LOBYTE(v20);
  outlined init with copy of SingleResultVoicemailModel(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailView);
  if (v9 != 1) {
    return outlined destroy of SingleResultVoicemailModel((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailView);
  }
  uint64_t v10 = &v5[*(int *)(v2 + 36)];
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  double v13 = v20;
  double v14 = *(double *)&v5[*(int *)(v2 + 48)];
  uint64_t result = outlined destroy of SingleResultVoicemailModel((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SingleResultVoicemailView);
  if (v13 < v14)
  {
    uint64_t v16 = (uint64_t *)(v1 + *(int *)(v2 + 36));
    uint64_t v18 = v16[1];
    uint64_t v21 = *v16;
    uint64_t v17 = v21;
    uint64_t v22 = v18;
    swift_retain();
    State.wrappedValue.getter();
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    double v19 = v20 + 1.0;
    State.wrappedValue.setter();
    return swift_release();
  }
  return result;
}

void closure #2 in SingleResultVoicemailView.body.getter()
{
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  lazy protocol witness table accessor for type VoicemailUpdateAction and conformance VoicemailUpdateAction();
  swift_bridgeObjectRetain();
  UpdateResponseCommand<>.init(_:)();
  type metadata accessor for SingleResultVoicemailView();
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.setter();
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      uint64_t v4 = "#SingleResultVoicemailView received repeat playing voicemail action.";
LABEL_10:
      _os_log_impl(&dword_25915D000, v1, v2, v4, v3, 2u);
      MEMORY[0x25A2D96D0](v3, -1, -1);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.setter();
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      uint64_t v4 = "#SingleResultVoicemailView received start playing voicemail action.";
      goto LABEL_10;
    }
  }
}

void partial apply for closure #2 in SingleResultVoicemailView.body.getter()
{
  type metadata accessor for SingleResultVoicemailView();
  closure #2 in SingleResultVoicemailView.body.getter();
}

uint64_t closure #3 in SingleResultVoicemailView.body.getter()
{
  if (one-time initialization token for phoneSnippetUI != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Logger.phoneSnippetUI);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_25915D000, v1, v2, "#SingleResultVoicemailView onDisappear, disconnect timer.", v3, 2u);
    MEMORY[0x25A2D96D0](v3, -1, -1);
  }

  type metadata accessor for SingleResultVoicemailView();
  Publishers.Autoconnect.upstream.getter();
  NSTimer.TimerPublisher.connect()();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  dispatch thunk of Cancellable.cancel()();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t partial apply for closure #3 in SingleResultVoicemailView.body.getter()
{
  return partial apply for closure #3 in SingleResultVoicemailView.body.getter((uint64_t (*)(uint64_t))closure #3 in SingleResultVoicemailView.body.getter);
}

uint64_t associated type witness table accessor for View.Body : View in SingleResultVoicemailView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in SingleResultVoicemailView.getRepeatView()@<X0>(uint64_t a1@<X8>)
{
  int v8 = static HierarchicalShapeStyle.primary.getter();
  uint64_t v7 = static Color.blue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for SingleResultVoicemailView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v3 = Image.init(systemName:)();
  uint64_t v4 = static Color.white.getter();
  uint64_t v5 = swift_getKeyPath();
  *(_DWORD *)a1 = v8;
  *(_WORD *)(a1 + 4) = 256;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = v4;
  swift_retain();
  return swift_release();
}

void closure #2 in SingleResultVoicemailView.getRepeatView()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for InteractionType?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionProperty?);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StandardActionHandler?);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)(a1 + *(int *)(type metadata accessor for SingleResultVoicemailView() + 40));
  char v12 = *v11;
  uint64_t v13 = *((void *)v11 + 1);
  char v33 = v12;
  uint64_t v34 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  if (v35 == 1)
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_25915D000, v15, v16, "SingleResultVoicemailView repeat is tapped", v17, 2u);
      MEMORY[0x25A2D96D0](v17, -1, -1);
    }

    ActionHandler.wrappedValue.getter();
    uint64_t v18 = type metadata accessor for StandardActionHandler();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18) == 1)
    {
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v10, &demangling cache variable for type metadata for StandardActionHandler?);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionElementConvertible>);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_2591FFD20;
      uint64_t v25 = type metadata accessor for Command();
      uint64_t v32 = v4;
      uint64_t v26 = v25;
      uint64_t v27 = MEMORY[0x263F771C8];
      *(void *)(v24 + 56) = v25;
      *(void *)(v24 + 64) = v27;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v24 + 32));
      type metadata accessor for SingleResultVoicemailModel();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
      uint64_t *boxed_opaque_existential_1 = CodableAceObject.wrappedValue.getter();
      *((unsigned char *)boxed_opaque_existential_1 + 8) = 0;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F771A0], v26);
      ActionProperty.init(_:)();
      uint64_t v29 = type metadata accessor for ActionProperty();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v7, 0, 1, v29);
      uint64_t v30 = type metadata accessor for InteractionType();
      uint64_t v31 = (uint64_t)v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v32, 1, 1, v30);
      StandardActionHandler.perform(_:interactionType:)();
      outlined destroy of SearchCallHistoryBinaryButtonModel?(v31, &demangling cache variable for type metadata for InteractionType?);
      outlined destroy of SearchCallHistoryBinaryButtonModel?((uint64_t)v7, &demangling cache variable for type metadata for ActionProperty?);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
    }
  }
  else
  {
    if (one-time initialization token for phoneSnippetUI != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.phoneSnippetUI);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_25915D000, v21, v22, "SingleResultVoicemailView repeat is tapped before playing voicemail for the first time, ignore repeat request", v23, 2u);
      MEMORY[0x25A2D96D0](v23, -1, -1);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for SingleResultVoicemailView(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v5 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v6 = a3[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v11 = type metadata accessor for ActionHandler();
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v7, v8, v11);
    uint64_t v62 = a3;
    uint64_t v63 = a2;
    uint64_t v14 = a3[6];
    uint64_t v15 = &v5[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&v5[a3[7]], (uint64_t)a2 + a3[7], v17);
    uint64_t v19 = a3[8];
    uint64_t v20 = &v5[v19];
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 8);
    *(void *)uint64_t v20 = *(char **)((char *)a2 + v19);
    *((void *)v20 + 1) = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v19 + 24);
    *((void *)v20 + 2) = *(char **)((char *)a2 + v19 + 16);
    *((void *)v20 + 3) = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v19 + 40);
    *((void *)v20 + 4) = *(char **)((char *)a2 + v19 + 32);
    *((void *)v20 + 5) = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v19 + 48);
    uint64_t v26 = *((void *)v21 + 7);
    *((void *)v20 + 6) = v25;
    *((void *)v20 + 7) = v26;
    uint64_t v27 = *((void *)v21 + 9);
    *((void *)v20 + 8) = *((void *)v21 + 8);
    *((void *)v20 + 9) = v27;
    uint64_t v28 = *((void *)v21 + 11);
    *((void *)v20 + 10) = *((void *)v21 + 10);
    *((void *)v20 + 11) = v28;
    uint64_t v29 = *((void *)v21 + 13);
    *((void *)v20 + 12) = *((void *)v21 + 12);
    *((void *)v20 + 13) = v29;
    uint64_t v30 = *((void *)v21 + 15);
    *((void *)v20 + 14) = *((void *)v21 + 14);
    *((void *)v20 + 15) = v30;
    uint64_t v31 = type metadata accessor for SingleResultVoicemailModel();
    uint64_t v32 = *(int *)(v31 + 52);
    uint64_t v59 = &v20[v32];
    uint64_t v61 = v31;
    uint64_t v58 = &v21[v32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
    v34(v59, v58, v33);
    v34(&v20[*(int *)(v61 + 56)], &v21[*(int *)(v61 + 56)], v33);
    uint64_t v35 = *(int *)(v61 + 60);
    uint64_t v36 = &v20[v35];
    uint64_t v37 = &v21[v35];
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    v60(v36, v37, v38);
    uint64_t v39 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
    uint64_t v40 = v39[5];
    uint64_t v41 = &v36[v40];
    uint64_t v42 = &v37[v40];
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
    v44(v41, v42, v43);
    v60(&v36[v39[6]], &v37[v39[6]], v38);
    v44(&v36[v39[7]], &v37[v39[7]], v43);
    uint64_t v45 = v39[8];
    uint64_t v46 = &v36[v45];
    uint64_t v47 = &v37[v45];
    uint64_t v48 = *((void *)v47 + 1);
    *(void *)uint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    uint64_t v49 = v62[9];
    uint64_t v50 = v62[10];
    uint64_t v51 = &v5[v49];
    uint64_t v52 = (char **)((char *)v63 + v49);
    uint64_t v53 = v52[1];
    *(void *)uint64_t v51 = *v52;
    *((void *)v51 + 1) = v53;
    char v54 = &v5[v50];
    uint64_t v55 = (uint64_t)v63 + v50;
    char *v54 = *(unsigned char *)v55;
    *((void *)v54 + 1) = *(void *)(v55 + 8);
    uint64_t v56 = v62[12];
    *(void *)&v5[v62[11]] = *(char **)((char *)v63 + v62[11]);
    *(void *)&v5[v56] = *(char **)((char *)v63 + v56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v5;
}

uint64_t destroy for SingleResultVoicemailView(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + a2[6];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8((char *)a1 + a2[7], v7);
  uint64_t v9 = (char *)a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v10 = (int *)type metadata accessor for SingleResultVoicemailModel();
  uint64_t v11 = &v9[v10[13]];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v13 = *(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(&v9[v10[14]], v12);
  uint64_t v14 = &v9[v10[15]];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v16 = *(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  uint64_t v17 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v18 = &v14[v17[5]];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v20 = *(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8);
  v20(v18, v19);
  v16(&v14[v17[6]], v15);
  v20(&v14[v17[7]], v19);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for SingleResultVoicemailView(void *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v3;
  uint64_t v5 = a3[5];
  uint64_t v7 = (char *)a1 + v5;
  uint64_t v9 = a2 + v5;
  uint64_t v11 = type metadata accessor for ActionHandler();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v4;
  v12(v7, v9, v11);
  uint64_t v62 = a3;
  uint64_t v14 = a3[6];
  uint64_t v64 = a1;
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  uint64_t v63 = a2;
  v18((char *)a1 + a3[7], a2 + a3[7], v17);
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *((void *)v20 + 1) = v22;
  uint64_t v23 = *(void *)(a2 + v19 + 24);
  *((void *)v20 + 2) = *(void *)(a2 + v19 + 16);
  *((void *)v20 + 3) = v23;
  uint64_t v24 = *(void *)(a2 + v19 + 40);
  *((void *)v20 + 4) = *(void *)(a2 + v19 + 32);
  *((void *)v20 + 5) = v24;
  uint64_t v25 = *(void *)(a2 + v19 + 48);
  uint64_t v26 = *((void *)v21 + 7);
  *((void *)v20 + 6) = v25;
  *((void *)v20 + 7) = v26;
  uint64_t v27 = *((void *)v21 + 9);
  *((void *)v20 + 8) = *((void *)v21 + 8);
  *((void *)v20 + 9) = v27;
  uint64_t v28 = *((void *)v21 + 11);
  *((void *)v20 + 10) = *((void *)v21 + 10);
  *((void *)v20 + 11) = v28;
  uint64_t v29 = *((void *)v21 + 13);
  *((void *)v20 + 12) = *((void *)v21 + 12);
  *((void *)v20 + 13) = v29;
  uint64_t v30 = *((void *)v21 + 15);
  *((void *)v20 + 14) = *((void *)v21 + 14);
  *((void *)v20 + 15) = v30;
  uint64_t v31 = type metadata accessor for SingleResultVoicemailModel();
  uint64_t v32 = *(int *)(v31 + 52);
  uint64_t v59 = &v20[v32];
  uint64_t v60 = v31;
  uint64_t v58 = &v21[v32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  v34(v59, v58, v33);
  v34(&v20[*(int *)(v60 + 56)], &v21[*(int *)(v60 + 56)], v33);
  uint64_t v35 = *(int *)(v60 + 60);
  uint64_t v36 = &v20[v35];
  uint64_t v37 = &v21[v35];
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
  v61(v36, v37, v38);
  uint64_t v39 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v40 = v39[5];
  uint64_t v41 = &v36[v40];
  uint64_t v42 = &v37[v40];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  v44(v41, v42, v43);
  v61(&v36[v39[6]], &v37[v39[6]], v38);
  v44(&v36[v39[7]], &v37[v39[7]], v43);
  uint64_t v45 = v39[8];
  uint64_t v46 = &v36[v45];
  uint64_t v47 = &v37[v45];
  uint64_t v48 = *((void *)v47 + 1);
  *(void *)uint64_t v46 = *(void *)v47;
  *((void *)v46 + 1) = v48;
  uint64_t v49 = v62[9];
  uint64_t v50 = v62[10];
  uint64_t v51 = (void *)((char *)v64 + v49);
  uint64_t v52 = (void *)(v63 + v49);
  uint64_t v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  char v54 = (char *)v64 + v50;
  uint64_t v55 = (char *)(v63 + v50);
  char *v54 = *v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  uint64_t v56 = v62[12];
  *(void *)((char *)v64 + v62[11]) = *(void *)(v63 + v62[11]);
  *(void *)((char *)v64 + v56) = *(void *)(v63 + v56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v64;
}

uint64_t assignWithCopy for SingleResultVoicemailView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v48 = a1;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *((void *)v19 + 1) = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 2) = *((void *)v20 + 2);
  *((void *)v19 + 3) = *((void *)v20 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 4) = *((void *)v20 + 4);
  *((void *)v19 + 5) = *((void *)v20 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 6) = *((void *)v20 + 6);
  *((void *)v19 + 7) = *((void *)v20 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 8) = *((void *)v20 + 8);
  *((void *)v19 + 9) = *((void *)v20 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 10) = *((void *)v20 + 10);
  *((void *)v19 + 11) = *((void *)v20 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 12) = *((void *)v20 + 12);
  *((void *)v19 + 13) = *((void *)v20 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 14) = *((void *)v20 + 14);
  *((void *)v19 + 15) = *((void *)v20 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = (int *)type metadata accessor for SingleResultVoicemailModel();
  uint64_t v22 = v21[13];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(&v19[v21[14]], &v20[v21[14]], v25);
  uint64_t v27 = v21[15];
  uint64_t v28 = &v19[v27];
  uint64_t v29 = &v20[v27];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24);
  v47(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v32 = v31[5];
  uint64_t v33 = &v28[v32];
  uint64_t v34 = &v29[v32];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24);
  v36(v33, v34, v35);
  v47(&v28[v31[6]], &v29[v31[6]], v30);
  v36(&v28[v31[7]], &v29[v31[7]], v35);
  uint64_t v37 = v31[8];
  uint64_t v38 = &v28[v37];
  uint64_t v39 = &v29[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[9];
  uint64_t v41 = (void *)(v48 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_retain();
  swift_release();
  uint64_t v43 = a3[10];
  uint64_t v44 = v48 + v43;
  uint64_t v45 = a2 + v43;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
  *(void *)(v44 + 8) = *(void *)(v45 + 8);
  swift_retain();
  swift_release();
  *(void *)(v48 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)(v48 + a3[12]) = *(void *)(a2 + a3[12]);
  return v48;
}

char *initializeWithTake for SingleResultVoicemailView(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = a3[5];
  uint64_t v6 = &a1[v4];
  uint64_t v7 = &a2[v4];
  uint64_t v9 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  long long v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = *(_OWORD *)&a2[v15 + 48];
  *((_OWORD *)v16 + 2) = *(_OWORD *)&a2[v15 + 32];
  *((_OWORD *)v16 + 3) = v19;
  long long v20 = *(_OWORD *)&a2[v15 + 80];
  *((_OWORD *)v16 + 4) = *(_OWORD *)&a2[v15 + 64];
  *((_OWORD *)v16 + 5) = v20;
  long long v21 = *(_OWORD *)&a2[v15 + 112];
  *((_OWORD *)v16 + 6) = *(_OWORD *)&a2[v15 + 96];
  *((_OWORD *)v16 + 7) = v21;
  uint64_t v22 = (int *)type metadata accessor for SingleResultVoicemailModel();
  uint64_t v23 = v22[13];
  uint64_t v24 = &v16[v23];
  uint64_t v25 = &v17[v23];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v27(&v16[v22[14]], &v17[v22[14]], v26);
  uint64_t v28 = v22[15];
  uint64_t v29 = &v16[v28];
  uint64_t v30 = &v17[v28];
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
  v41(v29, v30, v31);
  uint64_t v32 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v33 = v32[5];
  uint64_t v34 = &v29[v33];
  uint64_t v35 = &v30[v33];
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32);
  v37(v34, v35, v36);
  v41(&v29[v32[6]], &v30[v32[6]], v31);
  v37(&v29[v32[7]], &v30[v32[7]], v36);
  *(_OWORD *)&v29[v32[8]] = *(_OWORD *)&v30[v32[8]];
  uint64_t v38 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v38] = *(_OWORD *)&a2[v38];
  uint64_t v39 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v39] = *(void *)&a2[v39];
  return a1;
}

uint64_t assignWithTake for SingleResultVoicemailView(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for ActionHandler();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v55 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = &a2[v11];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v15 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], &a2[a3[7]], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)(a1 + v16);
  long long v18 = &a2[v16];
  uint64_t v19 = *(void *)&a2[v16 + 8];
  *(void *)uint64_t v17 = *(void *)&a2[v16];
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v18 + 5);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v18 + 7);
  *((void *)v17 + 6) = *((void *)v18 + 6);
  *((void *)v17 + 7) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v18 + 9);
  *((void *)v17 + 8) = *((void *)v18 + 8);
  *((void *)v17 + 9) = v23;
  swift_bridgeObjectRelease();
  *((void *)v17 + 10) = *((void *)v18 + 10);
  *((void *)v17 + 11) = *((void *)v18 + 11);
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v18 + 13);
  *((void *)v17 + 12) = *((void *)v18 + 12);
  *((void *)v17 + 13) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v18 + 15);
  *((void *)v17 + 14) = *((void *)v18 + 14);
  *((void *)v17 + 15) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (int *)type metadata accessor for SingleResultVoicemailModel();
  uint64_t v27 = v26[13];
  uint64_t v28 = &v17[v27];
  uint64_t v29 = &v18[v27];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v31(&v17[v26[14]], &v18[v26[14]], v30);
  uint64_t v32 = v26[15];
  uint64_t v33 = &v17[v32];
  uint64_t v34 = &v18[v32];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  char v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40);
  v54(v33, v34, v35);
  uint64_t v36 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v37 = v36[5];
  uint64_t v38 = &v33[v37];
  uint64_t v39 = &v34[v37];
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40);
  v41(v38, v39, v40);
  v54(&v33[v36[6]], &v34[v36[6]], v35);
  v41(&v33[v36[7]], &v34[v36[7]], v40);
  uint64_t v42 = v36[8];
  uint64_t v43 = &v33[v42];
  uint64_t v44 = &v34[v42];
  uint64_t v46 = *(void *)v44;
  uint64_t v45 = *((void *)v44 + 1);
  *(void *)uint64_t v43 = v46;
  *((void *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v55[9];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = &a2[v47];
  *uint64_t v48 = *(void *)v49;
  v48[1] = *((void *)v49 + 1);
  swift_release();
  uint64_t v50 = v55[10];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = &a2[v50];
  *(unsigned char *)uint64_t v51 = *v52;
  *(void *)(v51 + 8) = *((void *)v52 + 1);
  swift_release();
  *(void *)(a1 + v55[11]) = *(void *)&a2[v55[11]];
  swift_release();
  *(void *)(a1 + v55[12]) = *(void *)&a2[v55[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleResultVoicemailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2591FBA64);
}

uint64_t sub_2591FBA64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActionHandler();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_7:
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for SingleResultVoicemailModel();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_7;
  }
  unint64_t v14 = *(void *)(a1 + a3[11]);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleResultVoicemailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2591FBBD8);
}

uint64_t sub_2591FBBD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for ActionHandler();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[6];
    }
    else
    {
      uint64_t result = type metadata accessor for SingleResultVoicemailModel();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[11]) = (a2 - 1);
        return result;
      }
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result - 8);
      uint64_t v11 = a4[8];
    }
  }
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v14(a1 + v11, a2, a2, v9);
}

void type metadata completion function for SingleResultVoicemailView()
{
  type metadata accessor for ActionHandler();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<CGFloat>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SingleResultVoicemailModel();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t objectdestroyTm_16()
{
  unint64_t v1 = (int *)(type metadata accessor for SingleResultVoicemailView() - 8);
  unint64_t v2 = (id *)(v0
            + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80)));

  uint64_t v3 = (char *)v2 + v1[7];
  uint64_t v4 = type metadata accessor for ActionHandler();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)v2 + v1[8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v7 = *(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7((char *)v2 + v1[9], v6);
  uint64_t v8 = (char *)v2 + v1[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for SingleResultVoicemailModel();
  uint64_t v10 = &v8[v9[13]];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SAIntentGroupRunSiriKitExecutor>);
  uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(&v8[v9[14]], v11);
  uint64_t v13 = &v8[v9[15]];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Loggable<String>);
  uint64_t v15 = *(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  uint64_t v16 = (int *)type metadata accessor for SearchCallHistoryBinaryButtonModel();
  uint64_t v17 = &v13[v16[5]];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CodableAceObject<SABaseClientBoundCommand>);
  uint64_t v19 = *(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8);
  v19(v17, v18);
  v15(&v13[v16[6]], v14);
  v19(&v13[v16[7]], v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SingleResultVoicemailView.getRepeatView()()
{
  return partial apply for closure #3 in SingleResultVoicemailView.body.getter((uint64_t (*)(uint64_t))closure #2 in SingleResultVoicemailView.getRepeatView());
}

uint64_t partial apply for closure #3 in SingleResultVoicemailView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SingleResultVoicemailView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3);
}

uint64_t sub_2591FC320()
{
  outlined consume of Text.Storage(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _ProtoIdiom();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<_ProtoIdiom>);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    uint64_t v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11(&lazy protocol witness table cache variable for type _ProtoIdiom and conformance _ProtoIdiom, MEMORY[0x263F76470]);
      uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11((unint64_t *)&lazy protocol witness table cache variable for type _ProtoIdiom and conformance _ProtoIdiom, MEMORY[0x263F76470]);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v14;
          (*v14)(v6, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      uint64_t v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t outlined init with copy of SingleResultVoicemailModel(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of SingleResultVoicemailModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2591FC748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2591FC774()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t _s9SnippetUI7ContextCAC7Combine16ObservableObjectAAWlTm_11(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t JSONDecoder.init()()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t JSONEncoder.init()()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t static CharacterSet.decimalDigits.getter()
{
  return MEMORY[0x270EEE0D0]();
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x270EEE1A0]();
}

Swift::Void __swiftcall CharacterSet.insert(charactersIn:)(Swift::String charactersIn)
{
}

uint64_t CharacterSet.contains(_:)()
{
  return MEMORY[0x270EEE200]();
}

uint64_t CharacterSet.formUnion(_:)()
{
  return MEMORY[0x270EEE238]();
}

uint64_t type metadata accessor for CharacterSet()
{
  return MEMORY[0x270EEE258]();
}

uint64_t Notification.userInfo.getter()
{
  return MEMORY[0x270EEE3B8]();
}

uint64_t _convertErrorToNSError(_:)()
{
  return MEMORY[0x270EEF830]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.init(string:)()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x270EEFF68]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x270EF0120]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t Locale.init(identifier:)()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t Locale.identifier.getter()
{
  return MEMORY[0x270EF0D80]();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)MEMORY[0x270EF0EE0]();
}

uint64_t static Locale.current.getter()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t type metadata accessor for Locale()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t type metadata accessor for _ProtoIdiom()
{
  return MEMORY[0x270F73B98]();
}

uint64_t static ImageElement.badgedImage(image:badge:)()
{
  return MEMORY[0x270F73C38]();
}

uint64_t static ImageElement.contactImageAvatar(contactIds:imageStyle:idioms:)()
{
  return MEMORY[0x270F73C48]();
}

uint64_t type metadata accessor for ImageElement.ImageStyle()
{
  return MEMORY[0x270F73C68]();
}

uint64_t type metadata accessor for ImageElement.SourceType()
{
  return MEMORY[0x270F73CB0]();
}

uint64_t ImageElement.AppIcon.init(_:imageStyle:)()
{
  return MEMORY[0x270F73E70]();
}

uint64_t ImageElement.Contact.Avatar.init(contactIds:)()
{
  return MEMORY[0x270F73E90]();
}

uint64_t type metadata accessor for ImageElement.Contact.Content()
{
  return MEMORY[0x270F73EA8]();
}

uint64_t ImageElement.Contact.init(_:imageStyle:)()
{
  return MEMORY[0x270F73EC8]();
}

uint64_t static ImageElement.appIcon(_:imageStyle:idioms:)()
{
  return MEMORY[0x270F73F10]();
}

uint64_t type metadata accessor for ImageElement()
{
  return MEMORY[0x270F73F20]();
}

uint64_t type metadata accessor for SashStandard.Title()
{
  return MEMORY[0x270F73F88]();
}

uint64_t SashStandard.init(title:thumbnail:titleColor:backgroundColor:action:componentName:showOnWatch:)()
{
  return MEMORY[0x270F73FA8]();
}

uint64_t type metadata accessor for SashStandard()
{
  return MEMORY[0x270F73FC8]();
}

uint64_t type metadata accessor for ActionProperty()
{
  return MEMORY[0x270F74128]();
}

uint64_t ActionProperty.init(_:)()
{
  return MEMORY[0x270F74148]();
}

uint64_t type metadata accessor for SeparatorStyle()
{
  return MEMORY[0x270F741F0]();
}

uint64_t type metadata accessor for VisualProperty()
{
  return MEMORY[0x270F74298]();
}

uint64_t CodableAceObject.init(wrappedValue:)()
{
  return MEMORY[0x270F74438]();
}

uint64_t CodableAceObject.wrappedValue.modify()
{
  return MEMORY[0x270F74440]();
}

uint64_t CodableAceObject.wrappedValue.getter()
{
  return MEMORY[0x270F74448]();
}

uint64_t CodableAceObject.wrappedValue.setter()
{
  return MEMORY[0x270F74450]();
}

uint64_t type metadata accessor for CodableAceObject()
{
  return MEMORY[0x270F74458]();
}

uint64_t dispatch thunk of UpdateResponseCommand.serializeData()()
{
  return MEMORY[0x270F74DF0]();
}

uint64_t UpdateResponseCommand<>.serializeData()()
{
  return MEMORY[0x270F74E00]();
}

uint64_t UpdateResponseCommand<>.init(_:)()
{
  return MEMORY[0x270F74E08]();
}

uint64_t type metadata accessor for Color()
{
  return MEMORY[0x270F75450]();
}

uint64_t type metadata accessor for Command()
{
  return MEMORY[0x270F755D0]();
}

uint64_t static RFImage.symbol(_:dark:)()
{
  return MEMORY[0x270F75648]();
}

uint64_t type metadata accessor for RFImage()
{
  return MEMORY[0x270F75670]();
}

uint64_t Loggable.init(wrappedValue:)()
{
  return MEMORY[0x270F756A0]();
}

uint64_t Loggable.wrappedValue.modify()
{
  return MEMORY[0x270F756A8]();
}

uint64_t Loggable.wrappedValue.getter()
{
  return MEMORY[0x270F756B0]();
}

uint64_t Loggable.wrappedValue.setter()
{
  return MEMORY[0x270F756B8]();
}

uint64_t type metadata accessor for Loggable()
{
  return MEMORY[0x270F756C8]();
}

uint64_t static ColorFactory.emergencyRed.getter()
{
  return MEMORY[0x270F673B8]();
}

uint64_t AceServiceInvokerAsync.submitAndForget(_:)()
{
  return MEMORY[0x270F67CD8]();
}

uint64_t dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)()
{
  return MEMORY[0x270F67DB8]();
}

uint64_t dispatch thunk of MachineUtteranceBuilder.build()()
{
  return MEMORY[0x270F67DC8]();
}

uint64_t MachineUtteranceBuilder.init()()
{
  return MEMORY[0x270F67DD8]();
}

uint64_t type metadata accessor for MachineUtteranceBuilder()
{
  return MEMORY[0x270F67DE0]();
}

uint64_t static DeviceIdiom.== infix(_:_:)()
{
  return MEMORY[0x270F729D8]();
}

uint64_t type metadata accessor for DeviceIdiom()
{
  return MEMORY[0x270F729E8]();
}

uint64_t dispatch thunk of AutoBugCaptureManager.generateSnapshot(errorType:errorSubType:subTypeContext:completion:)()
{
  return MEMORY[0x270F72C28]();
}

uint64_t AutoBugCaptureManager.init(domain:sessionDuration:)()
{
  return MEMORY[0x270F72C30]();
}

uint64_t type metadata accessor for AutoBugCaptureManager()
{
  return MEMORY[0x270F72C38]();
}

uint64_t AppIntentSpecification.actionIdentifier.getter()
{
  return MEMORY[0x270F0C9B0]();
}

uint64_t type metadata accessor for AppIntentSpecification()
{
  return MEMORY[0x270F0C9C0]();
}

uint64_t dispatch thunk of AppIntentRepresentation.exportToSpecification()()
{
  return MEMORY[0x270F0CA20]();
}

uint64_t IntentParameter.init(wrappedValue:)()
{
  return MEMORY[0x270F0CB10]();
}

uint64_t IntentParameter.wrappedValue.modify()
{
  return MEMORY[0x270F0CB20]();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return MEMORY[0x270F0CB38]();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return MEMORY[0x270F0CB48]();
}

uint64_t IntentParameter.projectedValue.getter()
{
  return MEMORY[0x270F0CB50]();
}

uint64_t TTRComponentInfo.init(componentName:componentVersion:componentID:)()
{
  return MEMORY[0x270F65390]();
}

uint64_t type metadata accessor for TTRComponentInfo()
{
  return MEMORY[0x270F65398]();
}

uint64_t RadarFilingExtras.init(attachmentURLs:extensionIDs:deviceIDs:displayReason:)()
{
  return MEMORY[0x270F653A0]();
}

uint64_t type metadata accessor for RadarFilingExtras()
{
  return MEMORY[0x270F653A8]();
}

uint64_t dispatch thunk of TapToRadarManager.createProblem(errStatus:userDefaultSuiteName:radarComponentInfo:title:description:radarFilingExtras:completion:)()
{
  return MEMORY[0x270F653B0]();
}

uint64_t TapToRadarManager.init()()
{
  return MEMORY[0x270F653B8]();
}

uint64_t type metadata accessor for TapToRadarManager()
{
  return MEMORY[0x270F653C0]();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t Publishers.Autoconnect.upstream.getter()
{
  return MEMORY[0x270EE3898]();
}

uint64_t dispatch thunk of Cancellable.cancel()()
{
  return MEMORY[0x270EE3AF8]();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t ConnectablePublisher.autoconnect()()
{
  return MEMORY[0x270EE3CC0]();
}

uint64_t Published.init(initialValue:)()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t Published.projectedValue.getter()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t Published.projectedValue.setter()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t static Published.subscript.modify()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t static Published.subscript.getter()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t static Published.subscript.setter()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t type metadata accessor for Published()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t EdgeInsets.init(_all:)()
{
  return MEMORY[0x270EFED00]();
}

uint64_t static ButtonStyle<>.standardSiriButton(bold:hideIcon:isPressed:)()
{
  return MEMORY[0x270F75820]();
}

uint64_t type metadata accessor for ColorScheme()
{
  return MEMORY[0x270EFEF28]();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return MEMORY[0x270EFEF60]();
}

uint64_t DragGesture.Value.translation.getter()
{
  return MEMORY[0x270EFEF70]();
}

uint64_t DragGesture.Value.startLocation.getter()
{
  return MEMORY[0x270EFEF80]();
}

uint64_t type metadata accessor for DragGesture()
{
  return MEMORY[0x270EFEFB0]();
}

uint64_t static GestureMask.all.getter()
{
  return MEMORY[0x270EFF000]();
}

uint64_t ProgressView.init<A>(value:total:)()
{
  return MEMORY[0x270EFF398]();
}

uint64_t ScaledMetric.init(wrappedValue:relativeTo:)()
{
  return MEMORY[0x270EFF3E8]();
}

uint64_t ScaledMetric.wrappedValue.getter()
{
  return MEMORY[0x270EFF400]();
}

uint64_t type metadata accessor for ScaledMetric()
{
  return MEMORY[0x270EFF410]();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return MEMORY[0x270EFF530]();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return MEMORY[0x270EFF5A0]();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return MEMORY[0x270EFF5D8]();
}

uint64_t GeometryProxy.size.getter()
{
  return MEMORY[0x270EFF6D8]();
}

uint64_t withAnimation<A>(_:completionCriteria:_:completion:)()
{
  return MEMORY[0x270EFF928]();
}

uint64_t withAnimation<A>(_:_:)()
{
  return MEMORY[0x270EFF938]();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return MEMORY[0x270EFFB78]();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return MEMORY[0x270F001B0]();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return MEMORY[0x270F00690]();
}

uint64_t EnvironmentObject.error()()
{
  return MEMORY[0x270F00830]();
}

uint64_t EnvironmentObject.init()()
{
  return MEMORY[0x270F00848]();
}

uint64_t EnvironmentValues.imageElementImageStyle.getter()
{
  return MEMORY[0x270F758A8]();
}

uint64_t EnvironmentValues.imageElementImageStyle.setter()
{
  return MEMORY[0x270F758C0]();
}

uint64_t EnvironmentValues.visualResponseLocation.getter()
{
  return MEMORY[0x270F758C8]();
}

uint64_t EnvironmentValues.visualResponseLocation.setter()
{
  return MEMORY[0x270F758E0]();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return MEMORY[0x270F008C8]();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return MEMORY[0x270F008E0]();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return MEMORY[0x270F00A28]();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return MEMORY[0x270F00A38]();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return MEMORY[0x270F00C70]();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return MEMORY[0x270F00C80]();
}

uint64_t EnvironmentValues.font.getter()
{
  return MEMORY[0x270F00D88]();
}

uint64_t EnvironmentValues.font.setter()
{
  return MEMORY[0x270F00D98]();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return MEMORY[0x270F00E80]();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return MEMORY[0x270F00E90]();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return MEMORY[0x270F00EB0]();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return MEMORY[0x270F00EC8]();
}

uint64_t static VerticalAlignment.top.getter()
{
  return MEMORY[0x270F01058]();
}

uint64_t static VerticalAlignment.center.getter()
{
  return MEMORY[0x270F01068]();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return MEMORY[0x270F01350]();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return MEMORY[0x270F01508]();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return MEMORY[0x270F01518]();
}

uint64_t static HorizontalAlignment.trailing.getter()
{
  return MEMORY[0x270F01530]();
}

uint64_t TitleOnlyLabelStyle.init()()
{
  return MEMORY[0x270F01620]();
}

uint64_t type metadata accessor for TitleOnlyLabelStyle()
{
  return MEMORY[0x270F01628]();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return MEMORY[0x270F01808]();
}

uint64_t type metadata accessor for LocalCoordinateSpace()
{
  return MEMORY[0x270F018E0]();
}

uint64_t RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)()
{
  return MEMORY[0x270F01930]();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return MEMORY[0x270F01D08]();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return MEMORY[0x270F01D18]();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return MEMORY[0x270F01D40]();
}

uint64_t type metadata accessor for UnevenRoundedRectangle()
{
  return MEMORY[0x270F01E50]();
}

uint64_t static CoordinateSpaceProtocol<>.local.getter()
{
  return MEMORY[0x270F01F78]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return MEMORY[0x270F020E0]();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return MEMORY[0x270F020F8]();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return MEMORY[0x270F02108]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration()
{
  return MEMORY[0x270F02110]();
}

uint64_t static AnimationCompletionCriteria.logicallyComplete.getter()
{
  return MEMORY[0x270F02488]();
}

uint64_t type metadata accessor for AnimationCompletionCriteria()
{
  return MEMORY[0x270F024A0]();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return MEMORY[0x270F029E8]();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return MEMORY[0x270F02A18]();
}

uint64_t static Edge.Set.all.getter()
{
  return MEMORY[0x270F02A28]();
}

uint64_t static Edge.Set.top.getter()
{
  return MEMORY[0x270F02A40]();
}

uint64_t static Edge.Set.bottom.getter()
{
  return MEMORY[0x270F02A50]();
}

uint64_t static Edge.Set.leading.getter()
{
  return MEMORY[0x270F02A58]();
}

uint64_t static Edge.Set.trailing.getter()
{
  return MEMORY[0x270F02A80]();
}

uint64_t static Edge.Set.vertical.getter()
{
  return MEMORY[0x270F02A88]();
}

uint64_t static Font.largeTitle.getter()
{
  return MEMORY[0x270F02AC8]();
}

uint64_t static Font.subheadline.getter()
{
  return MEMORY[0x270F02AE0]();
}

uint64_t static Font.Width.standard.getter()
{
  return MEMORY[0x270F02B70]();
}

uint64_t static Font.Width.condensed.getter()
{
  return MEMORY[0x270F02B78]();
}

uint64_t type metadata accessor for Font.Width()
{
  return MEMORY[0x270F02B80]();
}

uint64_t type metadata accessor for Font.Design()
{
  return MEMORY[0x270F02BA0]();
}

uint64_t static Font.Weight.bold.getter()
{
  return MEMORY[0x270F02BB8]();
}

uint64_t static Font.Weight.heavy.getter()
{
  return MEMORY[0x270F02BD8]();
}

uint64_t static Font.Weight.medium.getter()
{
  return MEMORY[0x270F02BF0]();
}

uint64_t static Font.Weight.regular.getter()
{
  return MEMORY[0x270F02C08]();
}

uint64_t static Font.Weight.semibold.getter()
{
  return MEMORY[0x270F02C18]();
}

uint64_t static Font.system(size:weight:design:)()
{
  return MEMORY[0x270F02C48]();
}

uint64_t static Font.title3.getter()
{
  return MEMORY[0x270F02C80]();
}

uint64_t Font.weight(_:)()
{
  return MEMORY[0x270F02C90]();
}

uint64_t static Font.footnote.getter()
{
  return MEMORY[0x270F02D00]();
}

uint64_t static Font.headline.getter()
{
  return MEMORY[0x270F02D18]();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return MEMORY[0x270F02D28]();
}

uint64_t Text.fontWeight(_:)()
{
  return MEMORY[0x270F02F20]();
}

uint64_t Text.foregroundColor(_:)()
{
  return MEMORY[0x270F03000]();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return MEMORY[0x270F03018]();
}

uint64_t Text.font(_:)()
{
  return MEMORY[0x270F030B0]();
}

uint64_t Text.init<A>(_:)()
{
  return MEMORY[0x270F03258]();
}

uint64_t View.eraseToAnyView()()
{
  return MEMORY[0x270F75948]();
}

uint64_t View.buttonRole(_:foreground:background:)()
{
  return MEMORY[0x270F75958]();
}

uint64_t View.buttonRole(_:)()
{
  return MEMORY[0x270F75968]();
}

uint64_t View.separators(_:isOverride:)()
{
  return MEMORY[0x270F759A8]();
}

uint64_t View.componentTapped(isNavigation:perform:)()
{
  return MEMORY[0x270F759D0]();
}

uint64_t View.componentSpacing(top:bottom:)()
{
  return MEMORY[0x270F759F8]();
}

uint64_t View.requestHostBackground<A, B>(_:accepted:denied:)()
{
  return MEMORY[0x270F75A40]();
}

uint64_t View.lastComponentBottomSpacing(_:)()
{
  return MEMORY[0x270F75A78]();
}

uint64_t View.hideConversationAreaKeyline(_:)()
{
  return MEMORY[0x270F75A80]();
}

uint64_t View.if<A>(_:transform:)()
{
  return MEMORY[0x270F75A88]();
}

uint64_t View.fontWeight(_:)()
{
  return MEMORY[0x270F03368]();
}

uint64_t View.labelStyle<A>(_:)()
{
  return MEMORY[0x270F03380]();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return MEMORY[0x270F03450]();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return MEMORY[0x270F035D8]();
}

uint64_t static View._viewListCount(inputs:)()
{
  return MEMORY[0x270F036B8]();
}

uint64_t View.privacySensitive(_:)()
{
  return MEMORY[0x270F038C0]();
}

uint64_t View.bold(_:)()
{
  return MEMORY[0x270F03EF0]();
}

uint64_t View.gesture<A>(_:including:)()
{
  return MEMORY[0x270F040B8]();
}

uint64_t View.modifier<A>(_:)()
{
  return MEMORY[0x270F04168]();
}

uint64_t View.fontWidth(_:)()
{
  return MEMORY[0x270F04238]();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return MEMORY[0x270F043A0]();
}

uint64_t static Color.red.getter()
{
  return MEMORY[0x270F043E0]();
}

uint64_t static Color.blue.getter()
{
  return MEMORY[0x270F043F0]();
}

uint64_t static Color.gray.getter()
{
  return MEMORY[0x270F04418]();
}

uint64_t static Color.black.getter()
{
  return MEMORY[0x270F04458]();
}

uint64_t static Color.white.getter()
{
  return MEMORY[0x270F044A0]();
}

uint64_t static Color.primary.getter()
{
  return MEMORY[0x270F044F8]();
}

uint64_t static Color.secondary.getter()
{
  return MEMORY[0x270F04560]();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return MEMORY[0x270F04568]();
}

uint64_t Image.init(systemName:)()
{
  return MEMORY[0x270F04658]();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return MEMORY[0x270F04688]();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return MEMORY[0x270F04710]();
}

uint64_t Label.init(title:icon:)()
{
  return MEMORY[0x270F04750]();
}

uint64_t Label<>.init<A>(_:systemImage:)()
{
  return MEMORY[0x270F04768]();
}

uint64_t State.init(wrappedValue:)()
{
  return MEMORY[0x270F04810]();
}

uint64_t State.wrappedValue.getter()
{
  return MEMORY[0x270F04828]();
}

uint64_t State.wrappedValue.setter()
{
  return MEMORY[0x270F04838]();
}

uint64_t State.projectedValue.getter()
{
  return MEMORY[0x270F04840]();
}

uint64_t Button.init(action:label:)()
{
  return MEMORY[0x270F048A8]();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return MEMORY[0x270F048F0]();
}

uint64_t type metadata accessor for Capsule()
{
  return MEMORY[0x270F04C10]();
}

uint64_t Divider.init()()
{
  return MEMORY[0x270F04C28]();
}

uint64_t type metadata accessor for Divider()
{
  return MEMORY[0x270F04C38]();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return MEMORY[0x270F04C98]();
}

uint64_t ForEach<>.init(_:content:)()
{
  return MEMORY[0x270F04CB0]();
}

uint64_t type metadata accessor for ForEach()
{
  return MEMORY[0x270F04CC8]();
}

uint64_t Gesture.onEnded(_:)()
{
  return MEMORY[0x270F04CE0]();
}

uint64_t Gesture<>.onChanged(_:)()
{
  return MEMORY[0x270F04CF8]();
}

uint64_t static Material.thick.getter()
{
  return MEMORY[0x270F04F88]();
}

uint64_t static Material.ultraThin.getter()
{
  return MEMORY[0x270F04FA8]();
}

uint64_t type metadata accessor for Material()
{
  return MEMORY[0x270F04FB8]();
}

uint64_t static Alignment.center.getter()
{
  return MEMORY[0x270F05080]();
}

uint64_t static Alignment.leading.getter()
{
  return MEMORY[0x270F05090]();
}

uint64_t static Animation.easeInOut(duration:)()
{
  return MEMORY[0x270F05168]();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t static DispatchTime.now()()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t type metadata accessor for DispatchTime()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t + infix(_:_:)()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t type metadata accessor for ButtonItemButtonStyle.Role()
{
  return MEMORY[0x270F75AD8]();
}

uint64_t SnippetPreview.init(snippetModel:content:)()
{
  return MEMORY[0x270F75AF8]();
}

uint64_t type metadata accessor for RFImageView()
{
  return MEMORY[0x270F75B18]();
}

uint64_t RFImageView.init(_:)()
{
  return MEMORY[0x270F75B30]();
}

uint64_t ActionHandler.wrappedValue.modify()
{
  return MEMORY[0x270F75B80]();
}

uint64_t ActionHandler.wrappedValue.getter()
{
  return MEMORY[0x270F75B88]();
}

uint64_t ActionHandler.wrappedValue.setter()
{
  return MEMORY[0x270F75B98]();
}

uint64_t ActionHandler.init()()
{
  return MEMORY[0x270F75BA0]();
}

uint64_t type metadata accessor for ActionHandler()
{
  return MEMORY[0x270F75BB0]();
}

uint64_t type metadata accessor for PlainTextView()
{
  return MEMORY[0x270F75BE8]();
}

uint64_t PlainTextView.init(_:)()
{
  return MEMORY[0x270F75BF0]();
}

uint64_t static AnyViewBuilder.buildBlock(_:)()
{
  return MEMORY[0x270F75C20]();
}

uint64_t ComponentStack.init(content:)()
{
  return MEMORY[0x270F75C28]();
}

uint64_t type metadata accessor for HostBackground()
{
  return MEMORY[0x270F75C48]();
}

uint64_t type metadata accessor for InteractionType()
{
  return MEMORY[0x270F75C70]();
}

uint64_t BinaryButtonView.init(primaryButton:secondaryButton:)()
{
  return MEMORY[0x270F75C78]();
}

uint64_t type metadata accessor for BinaryButtonView()
{
  return MEMORY[0x270F75C88]();
}

uint64_t type metadata accessor for ImageElementView()
{
  return MEMORY[0x270F75CA8]();
}

uint64_t ImageElementView.init(_:)()
{
  return MEMORY[0x270F75CC0]();
}

uint64_t LongItemTextView.init(text1:)()
{
  return MEMORY[0x270F75CC8]();
}

uint64_t type metadata accessor for LongItemTextView()
{
  return MEMORY[0x270F75CD8]();
}

uint64_t SashStandardView.init(model:)()
{
  return MEMORY[0x270F75D08]();
}

uint64_t type metadata accessor for SashStandardView()
{
  return MEMORY[0x270F75D10]();
}

uint64_t SashStandardView.init(_:titleColor:showOnWatch:)()
{
  return MEMORY[0x270F75D20]();
}

uint64_t DisambiguationView.init(title:content:)()
{
  return MEMORY[0x270F75D88]();
}

uint64_t SimpleItemRichView.init(text1:text2:text3:text4:text5:text6:text7:text8:thumbnail:)()
{
  return MEMORY[0x270F75DB0]();
}

uint64_t type metadata accessor for SimpleItemRichView()
{
  return MEMORY[0x270F75DC8]();
}

uint64_t ButtonContainerView.init(buttons:)()
{
  return MEMORY[0x270F75DF0]();
}

uint64_t type metadata accessor for ButtonContainerView()
{
  return MEMORY[0x270F75E00]();
}

uint64_t DisambiguationTitle.init(text1:thumbnail:)()
{
  return MEMORY[0x270F75E10]();
}

uint64_t type metadata accessor for DisambiguationTitle()
{
  return MEMORY[0x270F75E20]();
}

uint64_t type metadata accessor for StatusIndicatorView.IndicatorType()
{
  return MEMORY[0x270F75E60]();
}

uint64_t StatusIndicatorView.init(message:type:showIndicator:)()
{
  return MEMORY[0x270F75E68]();
}

uint64_t type metadata accessor for StatusIndicatorView()
{
  return MEMORY[0x270F75E78]();
}

uint64_t SummaryItemTextView.init(text1:text2:text3:text4:text5:)()
{
  return MEMORY[0x270F75E90]();
}

uint64_t type metadata accessor for SummaryItemTextView()
{
  return MEMORY[0x270F75E98]();
}

uint64_t StandardActionHandler.perform(_:interactionType:)()
{
  return MEMORY[0x270F75EE8]();
}

uint64_t type metadata accessor for StandardActionHandler()
{
  return MEMORY[0x270F75EF8]();
}

uint64_t SummaryItemButtonView.init(text1:button1:button2:button3:text2:text3:text4:thumbnail:)()
{
  return MEMORY[0x270F75F10]();
}

uint64_t type metadata accessor for SummaryItemButtonView()
{
  return MEMORY[0x270F75F18]();
}

uint64_t SimpleItemStandardView.init(text1:text2:text3:text4:text5:text6:)()
{
  return MEMORY[0x270F75F68]();
}

uint64_t type metadata accessor for SimpleItemStandardView()
{
  return MEMORY[0x270F75F80]();
}

uint64_t type metadata accessor for StandardSiriButtonStyle()
{
  return MEMORY[0x270F75FB8]();
}

uint64_t SummaryItemStandardView.init(text1:text2:text3:text4:thumbnail:)()
{
  return MEMORY[0x270F75FD0]();
}

uint64_t type metadata accessor for SummaryItemStandardView()
{
  return MEMORY[0x270F75FD8]();
}

uint64_t PrimaryHeaderStandardView.init(text1:text2:text3:addTint:)()
{
  return MEMORY[0x270F76048]();
}

uint64_t type metadata accessor for PrimaryHeaderStandardView()
{
  return MEMORY[0x270F76058]();
}

uint64_t type metadata accessor for ComponentStackBottomSpacing()
{
  return MEMORY[0x270F760C8]();
}

uint64_t dispatch thunk of Context.isInAmbient.getter()
{
  return MEMORY[0x270F76158]();
}

uint64_t dispatch thunk of Context.$sharedState.getter()
{
  return MEMORY[0x270F76188]();
}

uint64_t dispatch thunk of Context.currentIdiom.getter()
{
  return MEMORY[0x270F761A0]();
}

uint64_t dispatch thunk of Context.informHostListItemCount(_:)()
{
  return MEMORY[0x270F761F0]();
}

uint64_t dispatch thunk of Context.hideBackgroundBehindSiri()()
{
  return MEMORY[0x270F761F8]();
}

uint64_t dispatch thunk of Context.siriEventUpdatePublisher.getter()
{
  return MEMORY[0x270F76208]();
}

uint64_t type metadata accessor for Context.Event()
{
  return MEMORY[0x270F76218]();
}

uint64_t type metadata accessor for Context()
{
  return MEMORY[0x270F76278]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x270EF1818]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x270EF1840]();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x270F9D318]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x270F9D320]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x270F9D478]();
}

uint64_t type metadata accessor for ClosedRange()
{
  return MEMORY[0x270F9D550]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x270F9D598]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x270EF19B0]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x270F9D5E0]();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = MEMORY[0x270F9D5F8]();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = MEMORY[0x270F9D610]();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x270F9D648]();
}

uint64_t String.UnicodeScalarView.append(_:)()
{
  return MEMORY[0x270F9D698]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x270F9D708]();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return MEMORY[0x270F9D758]();
}

uint64_t String.append<A>(contentsOf:)()
{
  return MEMORY[0x270F9D788]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x270F9D7E0]();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return MEMORY[0x270F9D878](a1._countAndFlagsBits, a1._object);
}

uint64_t Sequence.enumerated()()
{
  return MEMORY[0x270F9D940]();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t Array.init<A>(_:)()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return MEMORY[0x270EF2010]();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return MEMORY[0x270EF2020]();
}

uint64_t NSTimer.TimerPublisher.connect()()
{
  return MEMORY[0x270EF2140]();
}

uint64_t type metadata accessor for NSTimer.TimerPublisher()
{
  return MEMORY[0x270EF2150]();
}

uint64_t static NSTimer.publish(every:tolerance:on:in:options:)()
{
  return MEMORY[0x270EF2160]();
}

uint64_t VRXIdiom.isCarPlay.getter()
{
  return MEMORY[0x270F762F0]();
}

uint64_t VRXIdiom.isWatchOS.getter()
{
  return MEMORY[0x270F76308]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return MEMORY[0x270EF2310]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x270F9E3C0]();
}

Swift::String __swiftcall Substring.uppercased()()
{
  uint64_t v0 = MEMORY[0x270F9E470]();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x270F9E530]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x270F9E560]();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return MEMORY[0x270EF23D8]();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x270F9E7E8]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x270F9E8C0](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x270F9E970]();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return MEMORY[0x270F9E9A0]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t dispatch thunk of _AnyIndexBox._typeID.getter()
{
  return MEMORY[0x270F9EA10]();
}

uint64_t dispatch thunk of _AnyIndexBox._isEqual(to:)()
{
  return MEMORY[0x270F9EA18]();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t type metadata accessor for DecodingError()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t dispatch thunk of _AnyCollectionBox.subscript.getter()
{
  return MEMORY[0x270F9EEF8]();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t __CocoaDictionary.count.getter()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return MEMORY[0x270F9F050]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x270F9F0C0]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x270F9F230](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x270F9F250]();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return MEMORY[0x270F9F258]();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return MEMORY[0x270F9F270]();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return MEMORY[0x270F9F2E8]();
}

{
  return MEMORY[0x270F9F2F0]();
}

{
  return MEMORY[0x270F9F2F8]();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x270F9F318]();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return MEMORY[0x270F9F360]();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x270F9F390]();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return MEMORY[0x270F9F428]();
}

{
  return MEMORY[0x270F9F430]();
}

{
  return MEMORY[0x270F9F438]();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return MEMORY[0x270F9F458]();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return MEMORY[0x270F9F770]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t max<A>(_:_:)()
{
  return MEMORY[0x270F9FA98]();
}

uint64_t min<A>(_:_:)()
{
  return MEMORY[0x270F9FAA8]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x270F9FC48]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t Mirror.init(reflecting:)()
{
  return MEMORY[0x270F9FCA8]();
}

uint64_t Mirror.children.getter()
{
  return MEMORY[0x270F9FCD0]();
}

uint64_t type metadata accessor for Mirror()
{
  return MEMORY[0x270F9FCD8]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t _typeName(_:qualified:)()
{
  return MEMORY[0x270FA0128]();
}

uint64_t AFIsInternalInstall()
{
  return MEMORY[0x270F0EDD0]();
}

uint64_t AFProcessIsAssistantService()
{
  return MEMORY[0x270F0EED8]();
}

uint64_t TUPreferredFaceTimeBundleIdentifier()
{
  return MEMORY[0x270F7CB70]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x270FA0238]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x270FA0250]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}