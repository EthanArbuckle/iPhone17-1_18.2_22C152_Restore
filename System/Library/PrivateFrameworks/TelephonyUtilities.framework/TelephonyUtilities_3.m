uint64_t sub_1003434C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___supportsConversationOneToOneModeEnabled;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___supportsConversationOneToOneModeEnabled);
  if (v2 == 2)
  {
    v3 = sub_10034350C(v0);
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_10034350C(uint64_t a1)
{
  uint64_t result = (uint64_t)[*(id *)(a1 + OBJC_IVAR___CSDFaceTimeInviteDemuxer_featureFlags) conversationOneToOneModeEnabled];
  if (result)
  {
    v2 = self;
    uint64_t result = (uint64_t)[v2 sharedInstance];
    if (result)
    {
      v3 = (void *)result;
      unsigned int v4 = [(id)result multiwaySupported];

      if (v4)
      {
        id v5 = [v2 sharedInstance];
        if (v5)
        {
          v6 = v5;
          unsigned int v7 = [v5 multiwayBlocked];

          return v7 ^ 1;
        }
        else
        {
          return 1;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1003435D4()
{
  v1 = (uint64_t *)(v0 + OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___pushTokenForSelf);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___pushTokenForSelf);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___pushTokenForSelf + 8);
  uint64_t v4 = v2;
  if (v3 == 1)
  {
    uint64_t v4 = (uint64_t)sub_100343664();
    uint64_t v5 = *v1;
    uint64_t v6 = v1[1];
    uint64_t *v1 = v4;
    v1[1] = v7;
    swift_bridgeObjectRetain();
    sub_1003478B4(v5, v6);
  }
  sub_1003478C8(v2, v3);
  return v4;
}

id sub_100343664()
{
  id result = [self sharedInstance];
  if (result)
  {
    v1 = result;
    id v2 = [result pushToken];

    if (v2) {
      return (id)sub_100347848(v2, (SEL *)&selRef___imHexString);
    }
    else {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1003436E8()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_1001F2514();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  sub_1001F2514();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_1001F2514();
  sub_1001F6204(0, (unint64_t *)&qword_1005850F0);
  id v8 = v0;
  static DispatchQoS.unspecified.getter();
  sub_1002BD364((unint64_t *)&qword_100583B00, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1001F081C(&qword_100585100);
  sub_1001FCB74((unint64_t *)&qword_100583B10, &qword_100585100);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  uint64_t v9 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  if (TUSimulatedModeEnabled())
  {
    id v10 = [objc_allocWithZone((Class)TUSimulatedIDSIDQueryController) init];
LABEL_4:

    id v12 = [objc_allocWithZone((Class)TUFeatureFlags) init];
    id v13 = [objc_allocWithZone((Class)type metadata accessor for SharedConversationServerBag()) init];
    id v14 = sub_100347A30(v9, (uint64_t)v10, (uint64_t)v12, (uint64_t)v13, objc_allocWithZone(ObjectType));
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return v14;
  }
  id result = [self sharedInstance];
  id v10 = result;
  if (result) {
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

void sub_100343A38(void *a1, int a2, uint64_t a3, uint64_t a4, char *a5, const void *a6)
{
  int v78 = a2;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v81 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for DispatchQoS();
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  v79 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a6;
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10048F550;
  _Block_copy(a6);
  NSString v17 = [a1 value];
  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_100347848(v17, (SEL *)&selRef_IDSFormattedDestinationID);
  if (v19)
  {
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v19;
    uint64_t v83 = v16;
    char v20 = sub_1003434C0();
    uint64_t v84 = v15;
    v85 = a6;
    if ((v20 & 1) != 0
      && [*(id *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_serverBag] isModernGFTEnabled])
    {
      v73 = a5;
      uint64_t v76 = v11;
      uint64_t v21 = sub_1001F6204(0, (unint64_t *)&unk_100589680);
      swift_bridgeObjectRetain();
      id v22 = sub_1003443F8();
      if (qword_1005839A0 != -1) {
        swift_once();
      }
      sub_1001F081C(&qword_100584B20);
      uint64_t v23 = swift_allocObject();
      v24 = (void *)v23;
      *(_OWORD *)(v23 + 16) = xmmword_10048FB00;
      uint64_t v75 = v12;
      if (v22)
      {
        v89 = (void *)v21;
        unint64_t v90 = sub_1003477E8();
        *(void *)&long long aBlock = v22;
        sub_100233560(&aBlock, (uint64_t)(v24 + 4));
        id v25 = v22;
      }
      else
      {
        *(void *)(v23 + 56) = &type metadata for String;
        id v25 = 0;
        *(void *)(v23 + 64) = sub_1001F3B08();
        v24[4] = 0;
        v24[5] = 0xE000000000000000;
      }
      v24[12] = &type metadata for String;
      v24[13] = sub_1001F3B08();
      v24[9] = a3;
      v24[10] = a4;
      swift_bridgeObjectRetain();
      id v74 = v22;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = _swiftEmptyArrayStorage;
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = _swiftEmptyArrayStorage;
      uint64_t v41 = v40;
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = _swiftEmptyArrayStorage;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = 0;
      v43 = dispatch_group_create();
      dispatch_group_enter(v43);
      v44 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v45;
      v47 = (void *)swift_allocObject();
      uint64_t v77 = v39;
      v47[2] = v39;
      v47[3] = v42;
      v47[4] = v43;
      swift_retain();
      swift_retain();
      v48 = v43;
      uint64_t v49 = v83;
      v50 = v25;
      v51 = v25;
      v52 = v73;
      sub_10034446C(v83, v44, v46, v51, (uint64_t)sub_100347684, (uint64_t)v47);
      swift_bridgeObjectRelease();
      swift_release();
      dispatch_group_enter(v48);
      v53 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v55 = v54;
      v56 = (void *)swift_allocObject();
      uint64_t v70 = v41;
      v56[2] = v41;
      v56[3] = v42;
      v56[4] = v48;
      swift_retain();
      v57 = v48;
      swift_retain();
      sub_10034446C(v49, v53, v55, v50, (uint64_t)sub_1003476B4, (uint64_t)v56);
      swift_bridgeObjectRelease();
      swift_release();
      dispatch_group_enter(v57);
      v58 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v60 = v59;
      v61 = (void *)swift_allocObject();
      uint64_t v62 = v72;
      v61[2] = v72;
      v61[3] = v42;
      v61[4] = v57;
      swift_retain();
      v71 = v57;
      swift_retain();
      sub_10034446C(v49, v58, v60, v50, (uint64_t)sub_10034772C, (uint64_t)v61);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v83 = *(void *)&v52[OBJC_IVAR___CSDFaceTimeInviteDemuxer_queue];
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v77;
      *(void *)(v63 + 24) = v52;
      *(unsigned char *)(v63 + 32) = v78 & 1;
      *(void *)(v63 + 40) = v70;
      *(void *)(v63 + 48) = v62;
      *(void *)(v63 + 56) = v42;
      *(void *)(v63 + 64) = sub_100346E94;
      *(void *)(v63 + 72) = v84;
      unint64_t v90 = (unint64_t)sub_1003477B8;
      uint64_t v91 = v63;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v88 = sub_1002C2C88;
      v89 = &unk_100515950;
      v64 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v65 = v52;
      swift_retain();
      v66 = v79;
      static DispatchQoS.unspecified.getter();
      v86 = _swiftEmptyArrayStorage;
      sub_1002BD364((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001FCB74((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
      v67 = v81;
      uint64_t v68 = v76;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v69 = v71;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v64);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v67, v68);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v66, v82);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v38 = v85;
    }
    else
    {
      if (qword_1005839A0 != -1) {
        swift_once();
      }
      sub_1001F081C(&qword_100584B20);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10048FB00;
      LOBYTE(aBlock) = a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___supportsConversationOneToOneModeEnabled] & 1;
      v27 = a5;
      uint64_t v28 = String.init<A>(reflecting:)();
      uint64_t v30 = v29;
      *(void *)(v26 + 56) = &type metadata for String;
      unint64_t v31 = sub_1001F3B08();
      *(void *)(v26 + 64) = v31;
      *(void *)(v26 + 32) = v28;
      *(void *)(v26 + 40) = v30;
      LOBYTE(aBlock) = [*(id *)&v27[OBJC_IVAR___CSDFaceTimeInviteDemuxer_serverBag] isModernGFTEnabled];
      uint64_t v32 = String.init<A>(reflecting:)();
      *(void *)(v26 + 96) = &type metadata for String;
      *(void *)(v26 + 104) = v31;
      *(void *)(v26 + 72) = v32;
      *(void *)(v26 + 80) = v33;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      Class v35 = Array._bridgeToObjectiveC()().super.isa;
      Class v36 = Array._bridgeToObjectiveC()().super.isa;
      v37 = v85;
      (*((void (**)(const void *, Class, Class, Class, void))v85 + 2))(v85, isa, v35, v36, 0);
      swift_release();
      swift_bridgeObjectRelease();

      v38 = v37;
    }
    _Block_release(v38);
  }
  else
  {
    _Block_release(a6);
    __break(1u);
  }
}

id sub_1003443F8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithUnprefixedURI:v1];

  return v2;
}

void sub_10034446C(uint64_t a1, void **a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10048FB00;
  swift_bridgeObjectRetain();
  sub_1001F081C(&qword_10058B600);
  uint64_t v11 = String.init<A>(reflecting:)();
  uint64_t v13 = v12;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v14 = sub_1001F3B08();
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  long long aBlock = a2;
  uint64_t v31 = a3;
  swift_bridgeObjectRetain();
  uint64_t v15 = String.init<A>(reflecting:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 72) = v15;
  *(void *)(v10 + 80) = v16;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  NSString v17 = *(void **)&v6[OBJC_IVAR___CSDFaceTimeInviteDemuxer_idsQueryController];
  swift_unknownObjectRetain();
  sub_1002501DC(a1);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  id v25 = (void *)TUBundleIdentifierCallServicesDaemon;
  uint64_t v26 = *(void *)&v6[OBJC_IVAR___CSDFaceTimeInviteDemuxer_queue];
  char v20 = (void *)swift_allocObject();
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  v20[5] = v6;
  v20[6] = a5;
  v20[7] = a6;
  v20[8] = a1;
  v34 = sub_100347934;
  Class v35 = v20;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_10024F900;
  uint64_t v33 = &unk_1005159A0;
  uint64_t v21 = _Block_copy(&aBlock);
  id v22 = a4;
  uint64_t v23 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v25;
  swift_release();
  [v17 currentIDStatusForDestinations:isa service:v19 preferredFromID:v22 listenerID:v24 queue:v26 completionBlock:v21];
  _Block_release(v21);
  swift_unknownObjectRelease();
}

void sub_100344738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10048F550;
  *(void *)(v8 + 56) = sub_1001F081C(&qword_1005888D8);
  *(void *)(v8 + 64) = sub_1001FCB74((unint64_t *)&unk_10058AAE0, &qword_1005888D8);
  *(void *)(v8 + 32) = a1;
  swift_bridgeObjectRetain();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(a3 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(a4 + 16) = a2;
  dispatch_group_leave(a5);
}

uint64_t sub_1003448C0(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t *a5, uint64_t a6, void (*a7)(uint64_t, void *, void *, uint64_t))
{
  LOBYTE(v7) = a3;
  uint64_t v139 = 0;
  uint64_t v140 = 0;
  uint64_t v137 = 0;
  uint64_t v138 = 0;
  uint64_t v9 = (void *)(a1 + 16);
  swift_beginAccess();
  unint64_t v10 = *(void *)(a1 + 16);
  unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage;
  if (v10 >> 62) {
    goto LABEL_44;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    v118 = v9;
    if (!v11) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v12 = 4;
    char v13 = v7 & 1;
    while (1)
    {
      id v14 = (v10 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v10 + 8 * v12);
      uint64_t v7 = v14;
      uint64_t v15 = v12 - 3;
      if (__OFADD__(v12 - 4, 1)) {
        break;
      }
      id v126 = v14;
      sub_10034585C(&v126, &v137, &v140, &v139, v13, &v138, &v124);

      if (v124)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v12;
      if (v15 == v11)
      {
        swift_bridgeObjectRelease();
        unint64_t v16 = v131;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain_n();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_16:
  swift_bridgeObjectRelease();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (v17) {
      goto LABEL_18;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    uint64_t v136 = 0;
    v122 = _swiftEmptyArrayStorage;
    v119 = _swiftEmptyArrayStorage;
    goto LABEL_47;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_46;
  }
LABEL_18:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_126;
  }
  uint64_t v18 = 0;
  unint64_t v19 = v16 & 0xC000000000000001;
  v122 = _swiftEmptyArrayStorage;
  do
  {
    if (v19) {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v20 = *(id *)(v16 + 8 * v18 + 32);
    }
    uint64_t v21 = v20;
    id v22 = [v20 pushToken];
    uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v25 = v24;

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1001F7498(v23, v25);
    id v27 = [v21 URI];
    id v28 = [v27 prefixedURI];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v30 = (void *)IDSCopyIDForTokenWithID();

    if (v30)
    {
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        v122 = v36;
      }
      unint64_t v34 = v122[2];
      if (v34 >= v122[3] >> 1)
      {
        sub_1003A47C8();
        v122 = v37;
      }
      v122[2] = v34 + 1;
      Class v35 = &v122[2 * v34];
      v35[4] = v31;
      v35[5] = v33;
    }
    else
    {
    }
    ++v18;
  }
  while (v17 != v18);
  swift_bridgeObjectRelease();
  uint64_t v136 = 0;
  swift_bridgeObjectRetain();
  uint64_t v38 = 0;
  v119 = _swiftEmptyArrayStorage;
  do
  {
    if (v19) {
      id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v39 = *(id *)(v16 + 8 * v38 + 32);
    }
    uint64_t v40 = v39;
    id v126 = v39;
    sub_100345AF4(&v126, &v137, &v136, (uint64_t *)&v131);

    uint64_t v41 = v132;
    if (v132)
    {
      uint64_t v42 = v131;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        v119 = v45;
      }
      unint64_t v43 = v119[2];
      if (v43 >= v119[3] >> 1)
      {
        sub_1003A47C8();
        v119 = v46;
      }
      v119[2] = v43 + 1;
      v44 = &v119[2 * v43];
      v44[4] = v42;
      v44[5] = v41;
    }
    ++v38;
  }
  while (v17 != v38);
  swift_bridgeObjectRelease();
LABEL_47:
  swift_bridgeObjectRelease();
  uint64_t v134 = 0;
  uint64_t v135 = 0;
  uint64_t v133 = 0;
  swift_beginAccess();
  v117 = a4 + 2;
  unint64_t v47 = a4[2];
  if (!(v47 >> 62))
  {
    uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v48) {
      goto LABEL_49;
    }
LABEL_63:
    uint64_t v17 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_64;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
  if (!v48) {
    goto LABEL_63;
  }
LABEL_49:
  if (v48 < 1)
  {
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  uint64_t v49 = 0;
  uint64_t v17 = (uint64_t)_swiftEmptyArrayStorage;
  do
  {
    if ((v47 & 0xC000000000000001) != 0) {
      id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v50 = *(id *)(v47 + 8 * v49 + 32);
    }
    v51 = v50;
    id v124 = v50;
    sub_100345C94(&v124, &v133, v122, &v135, &v134, (uint64_t *)&v126);

    uint64_t v52 = v127;
    if (v127)
    {
      id v53 = v126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        uint64_t v17 = v56;
      }
      unint64_t v54 = *(void *)(v17 + 16);
      if (v54 >= *(void *)(v17 + 24) >> 1)
      {
        sub_1003A47C8();
        uint64_t v17 = v57;
      }
      *(void *)(v17 + 16) = v54 + 1;
      uint64_t v55 = v17 + 16 * v54;
      *(void *)(v55 + 32) = v53;
      *(void *)(v55 + 40) = v52;
    }
    ++v49;
  }
  while (v48 != v49);
LABEL_64:
  swift_bridgeObjectRelease_n();
  uint64_t v129 = 0;
  uint64_t v130 = 0;
  uint64_t v128 = 0;
  swift_beginAccess();
  a5 += 2;
  uint64_t v58 = *a5;
  if (!((unint64_t)*a5 >> 62))
  {
    uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v59) {
      goto LABEL_66;
    }
LABEL_80:
    a4 = _swiftEmptyArrayStorage;
    goto LABEL_81;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
  if (!v59) {
    goto LABEL_80;
  }
LABEL_66:
  if (v59 < 1)
  {
LABEL_127:
    __break(1u);
LABEL_128:
    swift_once();
    goto LABEL_108;
  }
  uint64_t v60 = 0;
  a4 = _swiftEmptyArrayStorage;
  do
  {
    if ((v58 & 0xC000000000000001) != 0) {
      id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v61 = *(id *)(v58 + 8 * v60 + 32);
    }
    uint64_t v62 = v61;
    id v123 = v61;
    sub_100345E8C(&v123, &v130, v122, (void *)v17, &v129, &v128, (uint64_t *)&v124);

    uint64_t v63 = v125;
    if (v125)
    {
      id v64 = v124;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        a4 = v67;
      }
      unint64_t v65 = a4[2];
      if (v65 >= a4[3] >> 1)
      {
        sub_1003A47C8();
        a4 = v68;
      }
      a4[2] = v65 + 1;
      v66 = &a4[2 * v65];
      v66[4] = v64;
      v66[5] = v63;
    }
    ++v60;
  }
  while (v59 != v60);
LABEL_81:
  v69 = (uint64_t *)(a6 + 16);
  swift_bridgeObjectRelease_n();
  uint64_t v70 = v122[2];
  v71 = v118;
  if (v70 || *(void *)(v17 + 16) || a4[2]) {
    goto LABEL_102;
  }
  uint64_t v72 = v139 + v134;
  if (__OFADD__(v139, v134))
  {
    __break(1u);
    goto LABEL_130;
  }
  BOOL v73 = __OFADD__(v72, v128);
  uint64_t v74 = v72 + v128;
  if (v73)
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  if (!v74)
  {
    if (v138)
    {
      sub_1001F6204(0, &qword_100584B80);
      uint64_t v77 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      uint64_t v76 = 2;
      os_log(_:dso:log:type:_:)();

      goto LABEL_101;
    }
    swift_beginAccess();
    if (*v69 == 5)
    {
LABEL_100:
      uint64_t v76 = 3;
      goto LABEL_101;
    }
    swift_beginAccess();
    if (!(*v118 >> 62))
    {
      uint64_t v78 = *(void *)((*v118 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_93;
    }
LABEL_131:
    swift_bridgeObjectRetain();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_93:
    swift_beginAccess();
    if (*v117 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v79 = *(void *)((*v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v80 = v78 + v79;
    if (__OFADD__(v78, v79))
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      if (!((unint64_t)*a5 >> 62))
      {
        v81 = *(char **)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_98;
      }
    }
    swift_bridgeObjectRetain();
    v81 = (char *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_98:
    uint64_t v82 = &v81[v80];
    if (__OFADD__(v80, v81))
    {
      __break(1u);
      swift_bridgeObjectRelease();

      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    v71 = v118;
    if (!v82)
    {
      sub_1001F6204(0, &qword_100584B80);
      v110 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      uint64_t v76 = 4;
      goto LABEL_101;
    }
    goto LABEL_100;
  }
  sub_1001F6204(0, &qword_100584B80);
  uint64_t v75 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  uint64_t v76 = 1;
LABEL_101:
  swift_beginAccess();
  uint64_t *v69 = v76;
LABEL_102:
  swift_beginAccess();
  if (*v71 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = *(void *)((*v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v84 = v135 + v129;
  if (__OFADD__(v135, v129))
  {
    __break(1u);
    goto LABEL_120;
  }
  BOOL v73 = __OFADD__(v84, v136);
  uint64_t v85 = v84 + v136;
  if (v73)
  {
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  uint64_t v113 = v135;
  a6 = v129;
  a2 = v136;
  if (v83 == v85) {
    goto LABEL_109;
  }
  uint64_t v111 = v70;
  v112 = v69;
  if (qword_1005839A0 != -1) {
    goto LABEL_128;
  }
LABEL_108:
  static os_log_type_t.error.getter();
  sub_1001F081C(&qword_100584B20);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_10048FB00;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1001F081C(&qword_1005888D8);
  uint64_t v87 = String.init<A>(reflecting:)();
  uint64_t v89 = v88;
  *(void *)(v86 + 56) = &type metadata for String;
  unint64_t v90 = sub_1001F3B08();
  *(void *)(v86 + 64) = v90;
  *(void *)(v86 + 32) = v87;
  *(void *)(v86 + 40) = v89;
  v71 = v118;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v91 = String.init<A>(reflecting:)();
  *(void *)(v86 + 96) = &type metadata for String;
  *(void *)(v86 + 104) = v90;
  *(void *)(v86 + 72) = v91;
  *(void *)(v86 + 80) = v92;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v70 = v111;
  v69 = v112;
LABEL_109:
  if (qword_1005839A0 != -1) {
LABEL_121:
  }
    swift_once();
  sub_1001F081C(&qword_100584B20);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1004948B0;
  swift_beginAccess();
  if (*v71 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v94 = *(void *)((*v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v93 + 56) = &type metadata for Int;
  *(void *)(v93 + 64) = &protocol witness table for Int;
  *(void *)(v93 + 32) = v94;
  swift_beginAccess();
  if (*v117 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v95 = *(void *)((*v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v93 + 96) = &type metadata for Int;
  *(void *)(v93 + 104) = &protocol witness table for Int;
  *(void *)(v93 + 72) = v95;
  swift_beginAccess();
  if ((unint64_t)*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v96 = *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v93 + 136) = &type metadata for Int;
  *(void *)(v93 + 144) = &protocol witness table for Int;
  *(void *)(v93 + 112) = v96;
  *(void *)(v93 + 176) = &type metadata for Int;
  *(void *)(v93 + 184) = &protocol witness table for Int;
  *(void *)(v93 + 152) = v70;
  uint64_t v97 = *(void *)(v17 + 16);
  *(void *)(v93 + 216) = &type metadata for Int;
  *(void *)(v93 + 224) = &protocol witness table for Int;
  *(void *)(v93 + 192) = v97;
  uint64_t v98 = a4[2];
  *(void *)(v93 + 256) = &type metadata for Int;
  *(void *)(v93 + 264) = &protocol witness table for Int;
  *(void *)(v93 + 232) = v98;
  uint64_t v99 = v119[2];
  *(void *)(v93 + 296) = &type metadata for Int;
  *(void *)(v93 + 304) = &protocol witness table for Int;
  *(void *)(v93 + 272) = v99;
  uint64_t v100 = v140;
  *(void *)(v93 + 336) = &type metadata for Int;
  *(void *)(v93 + 344) = &protocol witness table for Int;
  *(void *)(v93 + 312) = v100;
  uint64_t v101 = v139;
  *(void *)(v93 + 376) = &type metadata for Int;
  *(void *)(v93 + 384) = &protocol witness table for Int;
  *(void *)(v93 + 352) = v101;
  uint64_t v102 = v138;
  *(void *)(v93 + 416) = &type metadata for Int;
  *(void *)(v93 + 424) = &protocol witness table for Int;
  *(void *)(v93 + 392) = v102;
  uint64_t v103 = v137;
  *(void *)(v93 + 456) = &type metadata for Int;
  *(void *)(v93 + 464) = &protocol witness table for Int;
  *(void *)(v93 + 432) = v103;
  *(void *)(v93 + 496) = &type metadata for Int;
  *(void *)(v93 + 504) = &protocol witness table for Int;
  *(void *)(v93 + 472) = v113;
  uint64_t v104 = v134;
  *(void *)(v93 + 536) = &type metadata for Int;
  *(void *)(v93 + 544) = &protocol witness table for Int;
  *(void *)(v93 + 512) = v104;
  uint64_t v105 = v133;
  *(void *)(v93 + 576) = &type metadata for Int;
  *(void *)(v93 + 584) = &protocol witness table for Int;
  *(void *)(v93 + 552) = v105;
  uint64_t v106 = v130;
  *(void *)(v93 + 616) = &type metadata for Int;
  *(void *)(v93 + 624) = &protocol witness table for Int;
  *(void *)(v93 + 592) = v106;
  *(void *)(v93 + 656) = &type metadata for Int;
  *(void *)(v93 + 664) = &protocol witness table for Int;
  *(void *)(v93 + 632) = a6;
  uint64_t v107 = v128;
  *(void *)(v93 + 696) = &type metadata for Int;
  *(void *)(v93 + 704) = &protocol witness table for Int;
  *(void *)(v93 + 672) = v107;
  *(void *)(v93 + 736) = &type metadata for Int;
  *(void *)(v93 + 744) = &protocol witness table for Int;
  *(void *)(v93 + 712) = a2;
  swift_beginAccess();
  uint64_t v108 = *v69;
  *(void *)(v93 + 776) = &type metadata for Int;
  *(void *)(v93 + 784) = &protocol witness table for Int;
  *(void *)(v93 + 752) = v108;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  sub_1002D2880((uint64_t)a4);
  swift_beginAccess();
  a7(v17, v122, v119, *v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10034585C(id *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X4>, char a5@<W5>, uint64_t *a6@<X6>, void *a7@<X8>)
{
  id v10 = *a1;
  id v11 = [*a1 pushToken];
  uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  v15.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_1001F7498(v12, v14);
  id v16 = [v10 URI];
  NSString v17 = [v16 prefixedURI];

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (void *)IDSCopyIDForTokenWithID();

  if (!v18) {
    goto LABEL_10;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2 = v19;

  id v20 = [v10 capabilities];
  id v21 = [v20 valueForCapability:IDSRegistrationPropertySupportsModernGFT];

  if (v21 != (id)1)
  {
    swift_bridgeObjectRelease();
    if (!__OFADD__(*a3, 1))
    {
      ++*a3;
      goto LABEL_19;
    }
    goto LABEL_23;
  }
  sub_1003435D4();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_10030A394();
  char v23 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
LABEL_15:
    if ((a5 & 1) != 0
      || (id v26 = [v10 capabilities],
          id v27 = [v26 valueForCapability:IDSRegistrationPropertyIsGreenTea],
          v26,
          v27 != (id)1))
    {
      *a7 = v10;
      id v28 = v10;
      return;
    }
    unint64_t v24 = a6;
    uint64_t v25 = *a6 + 1;
    if (!__OFADD__(*a6, 1)) {
      goto LABEL_18;
    }
LABEL_24:
    __break(1u);
    return;
  }
  unint64_t v24 = a4;
  uint64_t v25 = *a4 + 1;
  if (!__OFADD__(*a4, 1))
  {
LABEL_18:
    uint64_t *v24 = v25;
    goto LABEL_19;
  }
  __break(1u);
LABEL_10:
  if (__OFADD__(*a2, 1))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  ++*a2;
LABEL_19:
  *a7 = 0;
}

void sub_100345AF4(id *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  id v7 = *a1;
  id v8 = [*a1 pushToken];
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  v12.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_1001F7498(v9, v11);
  id v13 = [v7 URI];
  NSString v14 = [v13 prefixedURI];

  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSData v15 = (void *)IDSCopyIDForTokenWithID();

  if (v15)
  {
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    id v19 = [v7 capabilities];
    id v20 = [v19 valueForCapability:IDSRegistrationPropertySupportsSSRC];

    if (v20 == (id)1)
    {
      *a4 = v16;
      a4[1] = v18;
      return;
    }
    swift_bridgeObjectRelease();
    if (!__OFADD__(*a3, 1))
    {
      ++*a3;
      goto LABEL_10;
    }
  }
  else
  {
    if (!__OFADD__(*a2, 1))
    {
      ++*a2;
LABEL_10:
      *a4 = 0;
      a4[1] = 0;
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100345C94(id *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X5>, uint64_t *a6@<X8>)
{
  id v10 = *a1;
  id v11 = [*a1 pushToken];
  uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  v15.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_1001F7498(v12, v14);
  id v16 = [v10 URI];
  NSString v17 = [v16 prefixedURI];

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (void *)IDSCopyIDForTokenWithID();

  if (!v18)
  {
    if (!__OFADD__(*a2, 1))
    {
      ++*a2;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (sub_10039E4D0(v19, v21, a3))
  {
    swift_bridgeObjectRelease();
    if (!__OFADD__(*a4, 1))
    {
      ++*a4;
LABEL_13:
      *a6 = 0;
      a6[1] = 0;
      return;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  sub_1003435D4();
  if (v22)
  {
    sub_10030A394();
    char v23 = StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRelease();
      if (!__OFADD__(*a5, 1))
      {
        ++*a5;
        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  *a6 = v19;
  a6[1] = v21;
}

void sub_100345E8C(id *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X6>, uint64_t *a7@<X8>)
{
  id v11 = *a1;
  id v12 = [*a1 pushToken];
  uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  v16.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_1001F7498(v13, v15);
  id v17 = [v11 URI];
  NSString v18 = [v17 prefixedURI];

  if (!v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = (void *)IDSCopyIDForTokenWithID();

  if (!v19)
  {
    if (!__OFADD__(*a2, 1))
    {
      ++*a2;
      goto LABEL_10;
    }
    goto LABEL_18;
  }
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  if ((sub_10039E4D0(v20, v22, a3) & 1) == 0 && (sub_10039E4D0(v20, v22, a4) & 1) == 0)
  {
    sub_1003435D4();
    if (!v23 || (sub_10030A394(), char v24 = StringProtocol.contains<A>(_:)(), swift_bridgeObjectRelease(), (v24 & 1) == 0))
    {
      *a7 = v20;
      a7[1] = v22;
      return;
    }
    swift_bridgeObjectRelease();
    if (!__OFADD__(*a6, 1))
    {
      ++*a6;
      goto LABEL_10;
    }
LABEL_19:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  if (__OFADD__(*a5, 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  ++*a5;
LABEL_10:
  *a7 = 0;
  a7[1] = 0;
}

void sub_100346144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  Class v8 = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v9 = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class, Class, objc_class *, uint64_t))(a5 + 16))(a5, isa, v8, v9, a4);
}

void sub_100346224(void **a1, void **a2, uint64_t a3, void **a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  uint64_t v12 = 7104878;
  sub_1001F081C(&qword_100584B20);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1004904F0;
  if (a1)
  {
    long long aBlock = a1;
    swift_bridgeObjectRetain();
    sub_1001F081C((uint64_t *)&unk_100585020);
    uint64_t v14 = String.init<A>(reflecting:)();
    unint64_t v16 = v15;
  }
  else
  {
    unint64_t v16 = 0xE300000000000000;
    uint64_t v14 = 7104878;
  }
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v17 = sub_1001F3B08();
  *(void *)(v13 + 64) = v17;
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  long long aBlock = a2;
  uint64_t v42 = a3;
  swift_bridgeObjectRetain();
  uint64_t v18 = String.init<A>(reflecting:)();
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v17;
  *(void *)(v13 + 72) = v18;
  *(void *)(v13 + 80) = v19;
  if (a4)
  {
    long long aBlock = a4;
    sub_1001F6204(0, (unint64_t *)&unk_100589680);
    uint64_t v20 = a4;
    uint64_t v12 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v21 = 0xE300000000000000;
  }
  *(void *)(v13 + 136) = &type metadata for String;
  *(void *)(v13 + 144) = v17;
  *(void *)(v13 + 112) = v12;
  *(void *)(v13 + 120) = v21;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (a1)
  {
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_100346E9C(v22);
    swift_bridgeObjectRelease();
    sub_100343010(v23);
    uint64_t v25 = v24;
    swift_release();
    uint64_t v26 = sub_100371020(v25);
    swift_bridgeObjectRelease();
    if (v26)
    {
      if (*(void *)(v26 + 16))
      {
        sub_1003465DC(v26, a2, a3, a4, a6, a7);
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
    }
  }
  id v27 = *(void **)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_idsQueryController];
  swift_unknownObjectRetain();
  sub_1002501DC(a8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = (void *)TUBundleIdentifierCallServicesDaemon;
  uint64_t v36 = *(void *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_queue];
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a2;
  v30[3] = a3;
  v30[4] = a4;
  v30[5] = a6;
  v30[6] = a7;
  v30[7] = a5;
  uint64_t v45 = sub_100347998;
  uint64_t v46 = v30;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v42 = 1107296256;
  unint64_t v43 = sub_10024F900;
  v44 = &unk_1005159F0;
  uint64_t v31 = _Block_copy(&aBlock);
  uint64_t v32 = a4;
  id v33 = v29;
  swift_retain();
  unint64_t v34 = a5;
  swift_bridgeObjectRetain();
  swift_release();
  [v27 requiredIDStatusForDestinations:isa service:v28 preferredFromID:v32 listenerID:v33 queue:v36 completionBlock:v31];
  _Block_release(v31);
  swift_unknownObjectRelease();
}

void sub_1003465DC(uint64_t a1, void **a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10048FB00;
  swift_bridgeObjectRetain();
  sub_1001F081C(&qword_10058B600);
  uint64_t v11 = String.init<A>(reflecting:)();
  uint64_t v13 = v12;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v14 = sub_1001F3B08();
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  long long aBlock = a2;
  uint64_t v30 = a3;
  swift_bridgeObjectRetain();
  uint64_t v15 = String.init<A>(reflecting:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 72) = v15;
  *(void *)(v10 + 80) = v16;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  unint64_t v17 = *(void **)(v6 + OBJC_IVAR___CSDFaceTimeInviteDemuxer_idsQueryController);
  swift_unknownObjectRetain();
  sub_1002501DC(a1);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  uint64_t v20 = (void *)TUBundleIdentifierCallServicesDaemon;
  uint64_t v25 = *(void *)(v6 + OBJC_IVAR___CSDFaceTimeInviteDemuxer_queue);
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = a3;
  v21[5] = a4;
  v21[6] = a5;
  v21[7] = a6;
  id v33 = sub_100347A00;
  unint64_t v34 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_10024F900;
  uint64_t v32 = &unk_100515A40;
  uint64_t v22 = _Block_copy(&aBlock);
  id v23 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v20;
  swift_release();
  [v17 currentRemoteDevicesForDestinations:isa service:v19 preferredFromID:v23 listenerID:v24 queue:v25 completionBlock:v22];
  _Block_release(v22);
  swift_unknownObjectRelease();
}

uint64_t sub_10034689C(uint64_t a1, void **a2, uint64_t a3, void *a4, uint64_t (*a5)(void *, uint64_t), uint64_t a6)
{
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  uint64_t v10 = 7104878;
  sub_1001F081C(&qword_100584B20);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1004904F0;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1001F081C((uint64_t *)&unk_100585020);
    uint64_t v12 = String.init<A>(reflecting:)();
    unint64_t v14 = v13;
  }
  else
  {
    unint64_t v14 = 0xE300000000000000;
    uint64_t v12 = 7104878;
  }
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_1001F3B08();
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = String.init<A>(reflecting:)();
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 72) = v16;
  *(void *)(v11 + 80) = v17;
  if (a4)
  {
    sub_1001F6204(0, (unint64_t *)&unk_100589680);
    id v18 = a4;
    uint64_t v10 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v19 = 0xE300000000000000;
  }
  *(void *)(v11 + 136) = &type metadata for String;
  *(void *)(v11 + 144) = v15;
  *(void *)(v11 + 112) = v10;
  *(void *)(v11 + 120) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (!a1) {
    goto LABEL_15;
  }
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_100346E9C(v20);
  swift_bridgeObjectRelease();
  sub_100343010(v21);
  uint64_t v23 = v22;
  swift_release();
  uint64_t v24 = sub_100371020(v23);
  swift_bridgeObjectRelease();
  if (v24)
  {
    if (*(void *)(v24 + 16))
    {
      sub_1003465DC(v24, a2, a3, a4, (uint64_t)a5, a6);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_100346FE0(v26);
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v27 + 16);
  swift_release();
  if (!v28) {
    uint64_t v29 = 0;
  }
  else {
LABEL_15:
  }
    uint64_t v29 = 5;
  return a5(_swiftEmptyArrayStorage, v29);
}

uint64_t sub_100346B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void *, void))
{
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  uint64_t v9 = 7104878;
  sub_1001F081C(&qword_100584B20);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10048FAF0;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1001F081C((uint64_t *)&unk_100585020);
    uint64_t v11 = String.init<A>(reflecting:)();
    unint64_t v13 = v12;
  }
  else
  {
    unint64_t v13 = 0xE300000000000000;
    uint64_t v11 = 7104878;
  }
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v14 = sub_1001F3B08();
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  swift_bridgeObjectRetain();
  sub_1001F081C(&qword_10058B600);
  uint64_t v15 = String.init<A>(reflecting:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 72) = v15;
  *(void *)(v10 + 80) = v16;
  swift_bridgeObjectRetain();
  uint64_t v17 = String.init<A>(reflecting:)();
  *(void *)(v10 + 136) = &type metadata for String;
  *(void *)(v10 + 144) = v14;
  *(void *)(v10 + 112) = v17;
  *(void *)(v10 + 120) = v18;
  if (a5)
  {
    sub_1001F6204(0, (unint64_t *)&unk_100589680);
    id v19 = a5;
    uint64_t v9 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v20 = 0xE300000000000000;
  }
  *(void *)(v10 + 176) = &type metadata for String;
  *(void *)(v10 + 184) = v14;
  *(void *)(v10 + 152) = v9;
  *(void *)(v10 + 160) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1003432C4(a2, a1)[2];
  if (v21)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v21; ++i)
    {
      swift_bridgeObjectRetain();
      sub_1002D294C();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  a6(_swiftEmptyArrayStorage, 0);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FaceTimeInviteDemuxer()
{
  return self;
}

uint64_t sub_100346E5C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100346E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100346144(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_100346E9C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    sub_1002DF3E4(0, v4, (uint64_t *)((char *)&v9 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0)));
    sub_100347B00();
    if (v1) {
      swift_willThrow();
    }
    else {
      return v5;
    }
  }
  else
  {
    uint64_t v6 = (void *)swift_slowAlloc();
    sub_1002DF3E4(0, v4, v6);
    sub_100347B00();
    uint64_t v2 = v7;
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_100346FE0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v5 = (uint64_t *)((char *)&v10 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1002DF3E4(0, v4, v5);
    sub_100347144((uint64_t)v5, v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    sub_1002DF3E4(0, v4, v7);
    sub_100347144((uint64_t)v7, v4, v2);
    uint64_t v2 = v8;
    swift_slowDealloc();
  }
  return v2;
}

void sub_100347144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v18 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_17:
    sub_1002353DC(*(void *)(a3 + 48) + 40 * v10, (uint64_t)v26);
    sub_100201880(*(void *)(a3 + 56) + 32 * v10, (uint64_t)v25);
    sub_1002353DC((uint64_t)v26, (uint64_t)v22);
    sub_100201880((uint64_t)v25, (uint64_t)v24);
    v19[0] = v22[0];
    v19[1] = v22[1];
    uint64_t v20 = v23;
    sub_1001F75B4(v24, &v21);
    if (swift_dynamicCast())
    {
      uint64_t v14 = v27;
      sub_100234D14((uint64_t)v19);
      sub_1002018DC((uint64_t)v25);
      sub_100234D14((uint64_t)v26);
      if (v14 == 2)
      {
        *(void *)(a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        BOOL v11 = __OFADD__(v17++, 1);
        if (v11) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_100234D14((uint64_t)v19);
      sub_1002018DC((uint64_t)v25);
      sub_100234D14((uint64_t)v26);
    }
  }
  BOOL v11 = __OFADD__(v4++, 1);
  if (v11)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v18) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_17;
  }
  int64_t v13 = v4 + 1;
  if (v4 + 1 >= v18) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v4 + 2;
  if (v4 + 2 >= v18) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v4 + 3;
  if (v4 + 3 >= v18)
  {
LABEL_27:
    sub_1002CFB50(a1, a2, v17);
    return;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
LABEL_15:
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v18) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1003473B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v18 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_17:
    sub_1002353DC(*(void *)(a3 + 48) + 40 * v10, (uint64_t)v26);
    sub_100201880(*(void *)(a3 + 56) + 32 * v10, (uint64_t)v25);
    sub_1002353DC((uint64_t)v26, (uint64_t)v22);
    sub_100201880((uint64_t)v25, (uint64_t)v24);
    v19[0] = v22[0];
    v19[1] = v22[1];
    uint64_t v20 = v23;
    sub_1001F75B4(v24, &v21);
    if (swift_dynamicCast())
    {
      uint64_t v14 = v27;
      sub_100234D14((uint64_t)v19);
      sub_1002018DC((uint64_t)v25);
      sub_100234D14((uint64_t)v26);
      if (v14 == 1)
      {
        *(void *)(a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        BOOL v11 = __OFADD__(v17++, 1);
        if (v11) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_100234D14((uint64_t)v19);
      sub_1002018DC((uint64_t)v25);
      sub_100234D14((uint64_t)v26);
    }
  }
  BOOL v11 = __OFADD__(v4++, 1);
  if (v11)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v18) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_17;
  }
  int64_t v13 = v4 + 1;
  if (v4 + 1 >= v18) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v4 + 2;
  if (v4 + 2 >= v18) {
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_15;
  }
  int64_t v13 = v4 + 3;
  if (v4 + 3 >= v18)
  {
LABEL_27:
    sub_1002CFB50(a1, a2, v17);
    return;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
LABEL_15:
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v18) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_10034762C(void *a1)
{
  return sub_100347848(a1, (SEL *)&selRef_IDSFormattedDestinationID);
}

uint64_t sub_100347638()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100347670()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100347684(uint64_t a1, uint64_t a2)
{
  sub_100344738(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32));
}

void sub_1003476B4(uint64_t a1, uint64_t a2)
{
  sub_100344738(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_1003476E4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10034772C(uint64_t a1, uint64_t a2)
{
  sub_100344738(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_100347758()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003477B8()
{
  return sub_1003448C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40), *(uint64_t **)(v0 + 48), *(void *)(v0 + 56), *(void (**)(uint64_t, void *, void *, uint64_t))(v0 + 64));
}

uint64_t sub_1003477D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003477E0()
{
  return swift_release();
}

unint64_t sub_1003477E8()
{
  unint64_t result = qword_10058AAD0;
  if (!qword_10058AAD0)
  {
    sub_1001F6204(255, (unint64_t *)&unk_100589680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058AAD0);
  }
  return result;
}

uint64_t sub_100347848(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_1003478B4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003478C8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003478DC()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100347934(void **a1)
{
  sub_100346224(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void ***)(v1 + 32), *(char **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_100347948()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100347998(uint64_t a1)
{
  return sub_100347A18(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10034689C);
}

uint64_t sub_1003479B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100347A00(uint64_t a1)
{
  return sub_100347A18(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100346B2C);
}

uint64_t sub_100347A18(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

id sub_100347A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  ObjectType = (objc_class *)swift_getObjectType();
  a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___supportsConversationOneToOneModeEnabled] = 2;
  *(_OWORD *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer____lazy_storage___pushTokenForSelf] = xmmword_1004948C0;
  *(void *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_queue] = a1;
  *(void *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_idsQueryController] = a2;
  *(void *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_featureFlags] = a3;
  *(void *)&a5[OBJC_IVAR___CSDFaceTimeInviteDemuxer_serverBag] = a4;
  v12.receiver = a5;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, "init");
}

void sub_100347B00()
{
  sub_1003473B8(v2, v1, v0);
}

id sub_100347B20()
{
  swift_getObjectType();
  sub_100348D80(OBJC_IVAR____TtC13callservicesd18DisclosureProvider_activeDescriptor);
  *(void *)&v0[OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC13callservicesd18DisclosureProvider_recurringDisclosureAudioPlayer] = 0;
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t type metadata accessor for DisclosureProvider()
{
  return self;
}

void sub_100347C2C(unint64_t a1, __int16 a2)
{
  unsigned __int8 v3 = a1;
  unint64_t v28 = a1;
  __int16 v29 = a2;
  unint64_t v4 = HIDWORD(a1) | ((unint64_t)a2 << 32);
  int v5 = HIBYTE(a2);
  uint64_t v6 = v2 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_activeDescriptor;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_activeDescriptor);
  if (v7 == 3) {
    goto LABEL_7;
  }
  *((void *)&v8 + 1) = *(unsigned __int16 *)(v6 + 8);
  *(void *)&long long v8 = *(void *)(v2 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_activeDescriptor);
  LOBYTE(v28) = a1;
  HIDWORD(v28) = HIDWORD(a1);
  LOBYTE(v29) = (HIDWORD(a1) | ((unint64_t)a2 << 32)) >> 32;
  HIBYTE(v29) = HIBYTE(a2);
  unint64_t v9 = v28;
  __int16 v10 = v29;
  LOBYTE(v28) = v7;
  HIDWORD(v28) = HIDWORD(v7);
  LOBYTE(v29) = (unint64_t)(v8 >> 32) >> 32;
  HIBYTE(v29) = BYTE9(v8) & 1;
  if ((sub_100202844(v9, v10, v28, v29) & 1) == 0)
  {
LABEL_7:
    if (v5) {
      __int16 v18 = 256;
    }
    else {
      __int16 v18 = 0;
    }
    *(void *)uint64_t v6 = v3 | (v4 << 32);
    *(_WORD *)(v6 + 8) = v18 | BYTE4(v4);
    if (v3)
    {
      if (v3 == 1)
      {
        id v19 = sub_1001B1BF8();
        static os_log_type_t.default.getter();
        sub_100348DB4();

        sub_100254544();
        sub_100347FC4();
        return;
      }
      id v23 = sub_1001B1BF8();
      static os_log_type_t.default.getter();
      sub_100348DB4();

      uint64_t v22 = &OBJC_IVAR____TtC13callservicesd18DisclosureProvider_recurringDisclosureAudioPlayer;
    }
    else
    {
      id v21 = sub_1001B1BF8();
      static os_log_type_t.default.getter();
      sub_100348DB4();

      uint64_t v22 = &OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer;
    }
    sub_10034806C(v22);
    goto LABEL_18;
  }
  if (qword_100583A18 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1001F5F88(v11, (uint64_t)qword_100594C40);
  oslog = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    LOBYTE(v28) = v3;
    LOBYTE(v29) = BYTE4(v4);
    HIDWORD(v28) = v4;
    HIBYTE(v29) = v5;
    uint64_t v14 = String.init<A>(reflecting:)();
    sub_1002344D8(v14, v15, &v27);
    sub_100348D94();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    LOBYTE(v28) = v3;
    LOBYTE(v29) = BYTE4(v4);
    HIDWORD(v28) = v4;
    HIBYTE(v29) = v5;
    uint64_t v16 = String.init<A>(reflecting:)();
    sub_1002344D8(v16, v17, &v27);
    sub_100348D94();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Asked to begin or update playback of disclosure, but new descriptor %s is equal to activeDescriptor%s so doing nothing", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_18:
    sub_100254544();
    return;
  }
  sub_100254544();
}

void sub_100347FC4()
{
  sub_100348238();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer);
  if (v1)
  {
    id v2 = v1;
    if ([v2 isPlaying])
    {
      [v2 stop];
      [v2 setCurrentTime:0.0];
    }
  }
  unsigned __int8 v3 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer);
  id v4 = v3;
  sub_100348490(v3);
}

void sub_10034806C(void *a1)
{
  sub_100348238();
  unsigned __int8 v3 = *(void **)(v1 + *a1);
  id v4 = v3;
  sub_100348490(v3);
}

void sub_1003480C4()
{
}

void sub_1003480E8()
{
  uint64_t v1 = OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer);
  if (v2)
  {
    id v3 = v2;
    if ([v3 isPlaying])
    {
      id v4 = sub_1001B1BF8();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      [v3 stop];
    }
  }
  uint64_t v5 = OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer);
  if (v6)
  {
    id v7 = v6;
    if ([v7 isPlaying])
    {
      id v8 = sub_1001B1BF8();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      [v7 stop];
    }
  }
  unint64_t v9 = *(void **)(v0 + v5);
  *(void *)(v0 + v5) = 0;

  __int16 v10 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;
}

void sub_100348238()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100583A18 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1001F5F88(v6, (uint64_t)qword_100594C40);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Creating recording disclosure audio players", v9, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for DisclosureDataSource();
  sub_10024143C();
  id v10 = sub_1003485A4((uint64_t)v5);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  os_log_type_t v12 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer);
  *(void *)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_startDisclosureAudioPlayer) = v10;

  sub_100240038();
  id v13 = sub_1003485A4((uint64_t)v5);
  v11(v5, v2);
  uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer);
  *(void *)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer) = v13;

  URL.init(fileURLWithPath:)();
  id v15 = sub_1003485A4((uint64_t)v5);
  v11(v5, v2);
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_recurringDisclosureAudioPlayer);
  *(void *)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_recurringDisclosureAudioPlayer) = v15;
}

void sub_100348490(void *a1)
{
  if (a1)
  {
    [a1 play];
  }
  else
  {
    if (qword_100583A18 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1001F5F88(v1, (uint64_t)qword_100594C40);
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Audio player is nil, cannot play!", v3, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_1003485A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v40[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v40[-1] - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v40[-1] - v9, a1, v4);
  id v12 = objc_allocWithZone((Class)AVAudioPlayer);
  id v13 = sub_1002EB818((uint64_t)v10);
  [v13 setNumberOfLoops:0];
  LODWORD(v14) = 1.0;
  [v13 setVolume:v14];
  [v13 setDelegate:v2];
  id v15 = [self auxiliarySession];
  v40[0] = 0;
  unsigned __int8 v16 = [v15 setCategory:AVAudioSessionCategoryVoiceOver withOptions:1 error:v40];
  id v17 = v40[0];
  if (v16)
  {
    v40[0] = 0;
    id v18 = v17;
    if ([v15 setPreferredMicrophoneInjectionMode:0x2000 error:v40])
    {
      id v19 = v40[0];
    }
    else
    {
      id v31 = v40[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_1001F081C(&qword_10058C110);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10048F550;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 32) = 0xD000000000000041;
      *(void *)(v32 + 40) = 0x800000010048A3D0;
      print(_:separator:terminator:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    [v13 setAudioSession:v15];
    id v33 = v13;
    id v34 = sub_1001B1BF8();
    sub_1001F081C(&qword_100584B20);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_10048F550;
    v11(v8, a1, v4);
    uint64_t v36 = String.init<A>(reflecting:)();
    uint64_t v38 = v37;
    *(void *)(v35 + 56) = &type metadata for String;
    *(void *)(v35 + 64) = sub_1001F3B08();
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v38;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    id v20 = v40[0];
    id v21 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    id v22 = sub_1001B1BF8();
    static os_log_type_t.error.getter();
    sub_1001F081C(&qword_100584B20);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10048FB00;
    v11(v8, a1, v4);
    uint64_t v24 = String.init<A>(reflecting:)();
    uint64_t v26 = v25;
    *(void *)(v23 + 56) = &type metadata for String;
    unint64_t v27 = sub_1001F3B08();
    *(void *)(v23 + 64) = v27;
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    v40[0] = v21;
    swift_errorRetain();
    sub_1001F081C((uint64_t *)&unk_100585FE0);
    uint64_t v28 = String.init<A>(reflecting:)();
    *(void *)(v23 + 96) = &type metadata for String;
    *(void *)(v23 + 104) = v27;
    *(void *)(v23 + 72) = v28;
    *(void *)(v23 + 80) = v29;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    return 0;
  }
  return v13;
}

void sub_100348A48(void *a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_activeDescriptor);
  if (v2 != 3)
  {
    if (v2 == 2)
    {
      uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_recurringDisclosureAudioPlayer);
      if (!v7) {
        return;
      }
      sub_100348D40();
      id v8 = a1;
      id v9 = v7;
      char v10 = static NSObject.== infix(_:_:)();

      if ((v10 & 1) == 0) {
        return;
      }
      id v5 = [self defaultCenter];
      if (qword_1005839D0 != -1)
      {
        id v17 = v5;
        swift_once();
        id v5 = v17;
      }
      uint64_t v6 = &qword_100594B30;
    }
    else if (v2 == 1)
    {
      uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_stopDisclosureAudioPlayer);
      if (!v11) {
        return;
      }
      sub_100348D40();
      id v12 = a1;
      id v13 = v11;
      char v14 = static NSObject.== infix(_:_:)();

      if ((v14 & 1) == 0) {
        return;
      }
      id v5 = [self defaultCenter];
      if (qword_1005839C8 != -1)
      {
        id v18 = v5;
        swift_once();
        id v5 = v18;
      }
      uint64_t v6 = &qword_100594B28;
    }
    else
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13callservicesd18DisclosureProvider_activeDescriptor)) {
        return;
      }
      id v4 = sub_1001B1BF8();
      static os_log_type_t.default.getter();
      sub_100348DB4();

      id v5 = [self defaultCenter];
      if (qword_1005839C0 != -1)
      {
        id v16 = v5;
        swift_once();
        id v5 = v16;
      }
      uint64_t v6 = &qword_100594B20;
    }
    id v15 = v5;
    [v5 postNotificationName:*v6 object:0];
  }
}

unint64_t sub_100348D40()
{
  unint64_t result = qword_10058A160;
  if (!qword_10058A160)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10058A160);
  }
  return result;
}

void sub_100348D80(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  *(void *)uint64_t v2 = 3;
  *(_WORD *)(v2 + 8) = 0;
}

uint64_t sub_100348D94()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100348DB4()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_100348DCC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC13callservicesd21ProtectedAppsObserver_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

id sub_100348E18()
{
  *(void *)&v0[OBJC_IVAR____TtC13callservicesd21ProtectedAppsObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ProtectedAppsObserver();
  id v1 = objc_msgSendSuper2(&v6, "init");
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = objc_msgSend(objc_msgSend(v2, "subjectMonitorRegistry"), "addMonitor:", v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v3;
}

void sub_100348F04(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
    sub_10034949C();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_16;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    self;
    if (swift_dynamicCastObjCClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_10034949C();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_18:
      sub_1002E3EC4();
      if ((v8 & 0x8000000000000000) == 0)
      {
        uint64_t v20 = v2;
        uint64_t v9 = 0;
        do
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = (id)_swiftEmptyArrayStorage[v9 + 4];
          }
          uint64_t v11 = v10;
          id v12 = objc_msgSend(v10, "bundleIdentifier", v20);
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;

          unint64_t v16 = _swiftEmptyArrayStorage[2];
          if (v16 >= _swiftEmptyArrayStorage[3] >> 1) {
            sub_1002E3EC4();
          }
          ++v9;
          _swiftEmptyArrayStorage[2] = v16 + 1;
          id v17 = &_swiftEmptyArrayStorage[2 * v16];
          v17[4] = v13;
          v17[5] = v15;
        }
        while (v8 != v9);
        goto LABEL_28;
      }
LABEL_36:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_18;
    }
  }
LABEL_28:
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100377140();
    swift_bridgeObjectRelease();
    sub_1002E76E4();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1002E76E4();
    swift_bridgeObjectRelease();
  }
}

void sub_100349264()
{
  id v0 = [self hiddenApplications];
  type metadata accessor for APApplication();
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1002E76E4();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  sub_1002E3EC4();
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v4 = *(id *)(v1 + 8 * v3 + 32);
      }
      id v5 = v4;
      id v6 = [v4 bundleIdentifier];
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      unint64_t v10 = _swiftEmptyArrayStorage[2];
      if (v10 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1002E3EC4();
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v7;
      v11[5] = v9;
    }
    while (v2 != v3);
    goto LABEL_13;
  }
  __break(1u);
}

id sub_100349410()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProtectedAppsObserver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProtectedAppsObserver()
{
  return self;
}

uint64_t sub_100349478(uint64_t a1, uint64_t a2)
{
  return sub_100348DCC(a1, a2);
}

uint64_t sub_10034949C()
{
  return swift_bridgeObjectRetain();
}

void sub_1003494BC()
{
  sub_1001FCC38();
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_1001F6398();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1002024D0();
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_1001F07DC();
  static DispatchQoS.unspecified.getter();
  sub_1002BD364((unint64_t *)&qword_100583B00, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1001F081C(&qword_100585100);
  sub_10020A70C((unint64_t *)&qword_100583B10, &qword_100585100);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  objc_allocWithZone(v0);
  sub_10034998C();
  sub_1001FCC08();
}

void sub_1003496CC(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = 500;
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 50) = *(_OWORD *)(a1 + 26);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v22 = *(void *)a1;
  uint64_t v5 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1002950CC(a1);
  id v6 = [v5 identifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v8;
  uint64_t v21 = v7;

  uint64_t v9 = sub_10021FC88(v5);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void **)(a1 + 24);
  char v14 = *(unsigned char *)(a1 + 41);
  char v15 = *(unsigned char *)(a1 + 40);
  id v16 = objc_allocWithZone((Class)AFSiriIncomingCall);
  id v17 = v13;
  swift_bridgeObjectRetain();
  id v18 = sub_10034AB24(v22, v4, v21, v20, v9, v11, v12, v13, v14, v15);
  id v19 = [objc_allocWithZone((Class)AFSiriAnnounceIncomingCallRequest) initWithIncomingCall:v18];

  if (v19)
  {
    sub_10034AC90(a1);
    *(void *)(v2 + 72) = v19;
  }
  else
  {
    __break(1u);
  }
}

void sub_10034981C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 72);
  if (a1)
  {
    v5[4] = a1;
    v5[5] = a2;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_100209DA8;
    v5[3] = &unk_100515B30;
    uint64_t v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v4 = 0;
  }
  [v3 performRequestWithCompletion:v4];
  _Block_release(v4);
}

uint64_t sub_1003498E0()
{
  uint64_t v1 = *(void **)(v0 + 48);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_100349930()
{
  sub_1003498E0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriCallAnnouncementRequest()
{
  return self;
}

void sub_10034998C()
{
  sub_1001FCC38();
  uint64_t v4 = v3;
  id v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v27 = v8;
  __chkstk_darwin(v9);
  sub_10021EA1C();
  sub_1001F6398();
  uint64_t v25 = v11;
  uint64_t v26 = v10;
  __chkstk_darwin(v10);
  sub_1002024D0();
  uint64_t v12 = &v0[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor];
  *uint64_t v12 = 0u;
  v12[1] = 0u;
  *(_OWORD *)((char *)v12 + 26) = 0u;
  v0[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_isAvailable] = 0;
  uint64_t v13 = OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_userConfiguration;
  id v14 = objc_allocWithZone((Class)TUUserConfiguration);
  char v15 = v0;
  *(void *)&v0[v13] = [v14 init];
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_queue] = v6;
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_voiceOverObserver] = v4;
  id v16 = v6;
  id v17 = v4;

  v29.receiver = v15;
  v29.super_class = ObjectType;
  id v18 = (char *)objc_msgSendSuper2(&v29, "init");
  id v19 = *(void **)&v18[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_userConfiguration];
  uint64_t v20 = v18;
  [v19 addDelegate:v20 queue:v16];
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  v28[4] = sub_10034AD1C;
  v28[5] = v21;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 1107296256;
  v28[2] = sub_1002C2C88;
  v28[3] = &unk_100515C70;
  uint64_t v22 = _Block_copy(v28);
  uint64_t v23 = v20;
  static DispatchQoS.unspecified.getter();
  sub_1002BD364((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v22);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v1, v7);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v2, v26);
  swift_release();
  sub_1001FCC08();
}

void sub_100349C90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_userConfiguration) announceCalls];
  sub_100349CF0((uint64_t)v2, (int)[*(id *)(a1 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_voiceOverObserver) isEnabled]);
}

void sub_100349CF0(uint64_t a1, int a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    return;
  }
  if (a1)
  {
    if ((a2 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  id v14 = sub_100008DCC();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  if (a2)
  {
LABEL_4:
    id v11 = sub_100008DCC();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
LABEL_5:
  int v12 = (a1 != 0) & (a2 ^ 1);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_isAvailable) = v12;
  if (v12 == 1)
  {
    id v13 = sub_100008DCC();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void sub_100349F10()
{
  sub_1001FCC38();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v7 = sub_10021EA1C();
  sub_1001F6398();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1002024D0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  v14[4] = sub_10034AD14;
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1002C2C88;
  v14[3] = &unk_100515C20;
  int v12 = _Block_copy(v14);
  id v13 = v0;
  static DispatchQoS.unspecified.getter();
  sub_1002BD364((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  swift_release();
  sub_1001FCC08();
}

void sub_10034A134(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor;
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 24);
  uint64_t v6 = *(void **)(v1 + 32);
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 26) = 0u;
  sub_1002BD990(v2, v3, v4, v5, v6);
}

void sub_10034A160()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)v1;
  uint64_t v25 = *(void *)(v1 + 8);
  uint64_t v26 = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v24 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  char v7 = *(unsigned char *)(v1 + 41);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  id v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_queue);
  *id v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v8);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v8);
  if (v14)
  {
    uint64_t v16 = v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor;
    uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor);
    uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor + 8);
    uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor + 16);
    uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor + 24);
    uint64_t v21 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_activeDescriptor + 32);
    uint64_t v22 = v25;
    *(void *)uint64_t v16 = v26;
    *(void *)(v16 + 8) = v22;
    *(void *)(v16 + 16) = v24;
    *(void *)(v16 + 24) = v4;
    *(void *)(v16 + 32) = v5;
    *(_WORD *)(v16 + 40) = v6 & 1 | ((v7 & 1) << 8);
    sub_1002BD990(v17, v18, v19, v20, v21);
    type metadata accessor for SiriCallAnnouncementRequest();
    swift_allocObject();
    sub_1002950CC(v2);
    sub_1002950CC(v2);
    sub_1003496CC(v2);
    sub_1001FCC08();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10034A2EC(uint64_t a1, char a2)
{
  return sub_10034A2F4(a2);
}

uint64_t sub_10034A2F4(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_queue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1;
  aBlock[4] = sub_10034AC84;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C2C88;
  aBlock[3] = &unk_100515BD0;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v1;
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_1002BD364((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_10034A618(void *a1)
{
  id v1 = [a1 announceCalls];

  return sub_10034A648((uint64_t)v1);
}

uint64_t sub_10034A648(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC13callservicesd28SiriCallAnnouncementProvider_queue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_10034AB1C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C2C88;
  aBlock[3] = &unk_100515B80;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v1;
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_1002BD364((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_10034A960(uint64_t a1, uint64_t a2)
{
}

void sub_10034A9A8(uint64_t a1, int a2)
{
}

void sub_10034A9EC()
{
}

uint64_t type metadata accessor for SiriCallAnnouncementProvider()
{
  return self;
}

uint64_t sub_10034AACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10034AADC()
{
  return swift_release();
}

uint64_t sub_10034AAE4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10034AB1C()
{
  sub_10034A960(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_10034AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, char a10)
{
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  if (a7)
  {
    v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v17.super.Class isa = 0;
  }
  LOBYTE(v20) = a10 & 1;
  id v18 = [v10 initWithCallUUID:v14 callProviderIdentifier:v15 callProviderBundleID:v16 callerContactIdentifiers:v17.super.isa handle:a8 isVideo:a9 & 1 isCallerIDBlocked:v20];

  return v18;
}

uint64_t sub_10034AC4C()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_10034AC84()
{
  sub_10034A9A8(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_10034AC90(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_10034ACDC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10034AD14()
{
  sub_10034A134(*(void *)(v0 + 16));
}

void sub_10034AD1C()
{
  sub_100349C90(*(void *)(v0 + 16));
}

uint64_t sub_10034AD48(unint64_t a1, uint64_t a2)
{
  if ((a2 & 0x10000000000) != 0) {
    return (a1 >> 40) & 1;
  }
  if ((a1 & 0x10000000000) != 0) {
    return 0;
  }
  if ((a2 & 0x100000000) != 0)
  {
    return (a1 & 0x100000000) != 0;
  }
  else
  {
    if ((a1 & 0x100000000) != 0) {
      return 0;
    }
    return a1 == a2;
  }
}

uint64_t sub_10034AD80(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  NSArray v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  *(void *)(v19 + 32) = v3;
  *(unsigned char *)(v19 + 40) = a1;
  aBlock[4] = sub_10034CE14;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C2C88;
  aBlock[3] = &unk_100515D98;
  uint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  v22[1] = _swiftEmptyArrayStorage;
  sub_1001F5FE0();
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  (*(void (**)(char *, void))(v14 + 8))(v17, v22[0]);
  return swift_release();
}

uint64_t sub_10034AFC8(uint64_t a1, uint64_t a2)
{
  sub_100294DC4(a1, (uint64_t)v42);
  sub_100294DC4(a2, (uint64_t)v41);
  sub_100294DC4((uint64_t)v41, (uint64_t)&v46);
  if (v48)
  {
    sub_100294DC4((uint64_t)v42, (uint64_t)&v43);
    char v4 = v45;
  }
  else
  {
    int v13 = v46;
    int v14 = v47;
    sub_100294DC4((uint64_t)v42, (uint64_t)&v43);
    if (v45) {
      return 0;
    }
    char v4 = v44;
    if (!v14)
    {
      if (v43 != v13) {
        char v4 = 1;
      }
      if (v4) {
        return 0;
      }
      goto LABEL_4;
    }
  }
  if ((v4 & 1) == 0) {
    return 0;
  }
LABEL_4:
  uint64_t v5 = *(void **)(a1 + 8);
  id v39 = *(id *)(a2 + 8);
  id v40 = v5;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
    sub_10023C570(&v40);
    sub_10023C570(&v39);
    swift_bridgeObjectRelease_n();
    sub_100294D98(&v39);
    sub_100294D98(&v40);
  }
  else
  {
    char v11 = sub_10034CF6C();
    sub_10023C570(&v40);
    sub_10023C570(&v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100294D98(&v39);
    sub_100294D98(&v40);
    uint64_t result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  uint64_t v15 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (!v15) {
      return 0;
    }
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_10034CF6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v21 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v15)
  {
    return 0;
  }
  uint64_t v22 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v22 == 1) {
      goto LABEL_34;
    }
LABEL_32:
    uint64_t v23 = sub_10034CFB8();
    sub_10023C458(v23, v24, v25);
    uint64_t v26 = sub_10034CFA4();
    sub_10023C458(v26, v27, v28);
    uint64_t v29 = sub_10034CFB8();
    sub_10023C25C(v29, v30, v31);
    uint64_t v32 = sub_10034CFA4();
    sub_10023C25C(v32, v33, v34);
    return 0;
  }
  if (v22 == 1) {
    goto LABEL_32;
  }
  if ((sub_10027F548(*(void *)(a1 + 24) & 0xFFFFFFFF00000001, *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48) & 1, *(void *)(a2 + 24) & 0xFFFFFFFF00000001, *(void *)(a2 + 32), *(void *)(a2 + 40)) & 1) == 0)return 0; {
LABEL_34:
  }
  if (*(unsigned __int8 *)(a1 + 49) != *(unsigned __int8 *)(a2 + 49)
    || ((*(unsigned __int8 *)(a1 + 50) ^ *(unsigned __int8 *)(a2 + 50)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 51) ^ *(unsigned __int8 *)(a2 + 51)) & 1) != 0
    || *(void *)(a1 + 64) != *(void *)(a2 + 64)
    || ((*(unsigned __int8 *)(a1 + 53) ^ *(unsigned __int8 *)(a2 + 53)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 54) ^ *(unsigned __int8 *)(a2 + 54)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 52) ^ *(unsigned __int8 *)(a2 + 52)) & 1) != 0)
  {
    return 0;
  }
  if (*(void *)(a1 + 72))
  {
    self;
    uint64_t v35 = (void *)swift_dynamicCastObjCClass();
    if (v35) {
      swift_unknownObjectRetain();
    }
  }
  else
  {
    uint64_t v35 = 0;
  }
  if (*(void *)(a2 + 72))
  {
    self;
    uint64_t v36 = (void *)swift_dynamicCastObjCClass();
    if (v36) {
      swift_unknownObjectRetain();
    }
  }
  else
  {
    uint64_t v36 = 0;
  }
  if (v35)
  {
    if (v36)
    {
      sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
      id v37 = v35;
      char v38 = static NSObject.== infix(_:_:)();

      if (v38) {
        goto LABEL_58;
      }
    }
    else
    {
    }
    return 0;
  }
  if (v36)
  {

    return 0;
  }
LABEL_58:
  if (((*(unsigned __int8 *)(a1 + 145) ^ *(unsigned __int8 *)(a2 + 145)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 55) ^ *(unsigned __int8 *)(a2 + 55)) & 1) != 0)
  {
    return 0;
  }
  uint64_t result = *(unsigned __int8 *)(a2 + 152);
  if ((*(unsigned char *)(a1 + 152) & 1) == 0) {
    return (*(_DWORD *)(a1 + 148) == *(_DWORD *)(a2 + 148)) & ~result;
  }
  return result;
}

uint64_t sub_10034B3A4@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v6 = sub_10034C22C(a1);
  if (v6)
  {
    id v7 = v6;
    unsigned int v8 = [a1 callSubType];
    id v9 = objc_allocWithZone((Class)TUFeatureFlags);
    id v74 = v7;
    id v10 = [v9 init];
    unint64_t v11 = sub_10034C2F4(a1);
    id v85 = sub_10034C400(a1);
    id v71 = v85;
    id v12 = a1;
    unsigned int v62 = [v12 isOutgoing];
    uint64_t v60 = _AXSDefaultRouteForCall();
    id v13 = v12;
    uint64_t v77 = sub_100347848(v13, (SEL *)&selRef_sourceIdentifier);
    uint64_t v15 = v14;
    unsigned __int8 v84 = [v13 ignoresBluetoothDeviceUID];

    uint64_t v70 = v15;
    swift_bridgeObjectRetain();
    unsigned __int8 v16 = [v13 wantsHoldMusic];
    char v17 = sub_10034C4A0(v13, v11 & 0xFFFFFFFFFFLL | (((v11 >> 40) & 1) << 40));
    id v68 = [v13 audioInterruptionOperationMode];
    if (sub_10032763C())
    {
      uint64_t v18 = 0;
      v67 = 0;
    }
    else
    {
      uint64_t v18 = swift_unknownObjectRetain();
      v67 = &off_100515C98;
    }
    uint64_t v66 = v18;
    swift_unknownObjectRetain();
    unsigned __int8 v65 = [v13 mixesVoiceWithMedia];
    uint64_t v59 = v10;
    if ([v10 expanseBTSwitchingEnabled]) {
      BOOL v64 = [v13 bluetoothAudioFormat] == (id)1;
    }
    else {
      BOOL v64 = 0;
    }
    unsigned __int8 v63 = [v13 isConversation];
    unsigned __int8 v83 = [v13 mediaPlaybackOnExternalDevice];
    unsigned __int8 v82 = [v13 prefersToPlayDuringWombat];
    if (a2) {
      LOBYTE(v19) = 1;
    }
    else {
      int v19 = sub_10032763C() ^ 1;
    }
    id v20 = [v13 screenShareAttributes];
    uint64_t v73 = a3;
    unsigned __int8 v69 = v16;
    if (v20 && (char v21 = v20, v22 = [v20 isWindowed], v21, (v22 & 1) == 0)) {
      unsigned int v23 = [v13 isSharingScreen] ^ 1;
    }
    else {
      LOBYTE(v23) = 1;
    }
    char v75 = v23;
    uint64_t v24 = &selRef_performBlock_;
    id v25 = [v13 provider];
    unsigned int v26 = [v25 isSystemProvider];

    unsigned int v72 = v8;
    if (v26)
    {
      BSAuditTokenForCurrentProcess();
      uint64_t v78 = v121[3];
      uint64_t v79 = v121[2];
      self;
      uint64_t v27 = swift_dynamicCastObjCClass();
      uint64_t v80 = v121[1];
      uint64_t v81 = v121[0];
      if (v27)
      {
        uint64_t v28 = (void *)v27;
        id v29 = v13;
        id v30 = [v28 localProvider];
        if (v30
          && (uint64_t v31 = v30,
              id v32 = [v30 bundleIdentifier],
              v31,
              v32))
        {
          uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v87 = v33;
        }
        else
        {

          uint64_t v86 = 0;
          uint64_t v87 = 0;
        }
        uint64_t v24 = &selRef_performBlock_;
      }
      else
      {
        uint64_t v24 = &selRef_performBlock_;
        uint64_t v86 = sub_1001F618C([v13 provider]);
        uint64_t v87 = v34;
      }
    }
    else
    {
      uint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v80 = 0;
      uint64_t v81 = 0;
      uint64_t v78 = 0;
      uint64_t v79 = 0;
    }
    char v35 = v26 ^ 1;
    id v36 = [v13 v24[235]];
    id v37 = v24;
    unsigned __int8 v38 = [v36 isFaceTimeProvider];

    if (v38)
    {
      unsigned __int8 v39 = 1;
    }
    else
    {
      id v40 = [v13 v37[235]];
      unsigned __int8 v39 = [v40 isTelephonyProvider];
    }
    id v41 = [v13 v37[235]];
    unsigned int v42 = [v41 isFaceTimeProvider];

    unsigned __int8 v76 = v39;
    if (v42
      && [v13 isConversation]
      && (id v43 = [self sharedInstance],
          id v44 = [v43 activeConversationForCall:v13],
          v43,
          v44))
    {
      char v45 = v19;
      id v46 = [v44 v37[235]];
      unsigned __int8 v47 = [v46 isDefaultProvider];

      if ((v47 & 1) != 0
        || (sub_100347848([v44 v37[235]], (SEL *)&selRef_bundleIdentifier), uint64_t v49 = v48, swift_bridgeObjectRelease(), !v49))
      {
        char v50 = v17 & 1;
        uint64_t v53 = v86;
        id v52 = v87;
      }
      else
      {
        char v50 = v17 & 1;
        id v51 = [v44 v37[235]];
        id v52 = [v51 bundleIdentifier];

        if (v52)
        {
          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v55 = v54;

          swift_bridgeObjectRelease();
          id v52 = v55;
        }
        else
        {

          swift_bridgeObjectRelease();
          uint64_t v53 = 0;
        }
      }
      unsigned int v56 = v62;
      uint64_t v57 = v60;
      LOBYTE(v19) = v45;
    }
    else
    {
      char v50 = v17 & 1;
      uint64_t v53 = v86;
      id v52 = v87;

      unsigned int v56 = v62;
      uint64_t v57 = v60;
    }
    unint64_t v61 = v56 | (unint64_t)(v57 << 32);
    BYTE4(__src[0]) = BYTE4(v11);
    LODWORD(__src[0]) = v11;
    BYTE5(__src[0]) = BYTE5(v11) & 1;
    __src[1] = v74;
    __src[2] = v85;
    __src[3] = v61;
    __src[4] = v77;
    __src[5] = v70;
    LOBYTE(__src[6]) = v84;
    BYTE1(__src[6]) = v50;
    BYTE2(__src[6]) = v19 & 1;
    BYTE3(__src[6]) = v69;
    BYTE4(__src[6]) = v83;
    BYTE5(__src[6]) = v65;
    BYTE6(__src[6]) = v63;
    HIBYTE(__src[6]) = v82;
    LOBYTE(__src[7]) = v64;
    __src[8] = v68;
    __src[9] = v66;
    __src[10] = v67;
    __src[11] = v81;
    __src[12] = v80;
    __src[13] = v79;
    __src[14] = v78;
    LOBYTE(__src[15]) = v35;
    __src[16] = v53;
    __src[17] = v52;
    LOBYTE(__src[18]) = v76;
    BYTE1(__src[18]) = v75;
    HIDWORD(__src[18]) = v72;
    LOBYTE(__src[19]) = 0;
    sub_10023C3D8((uint64_t)__src);

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    memcpy(__dst, __src, 0x99uLL);
    ScreenSharingActivityManager.carPlayDidDisconnect()();
    char v91 = BYTE4(v11);
    int v90 = v11;
    char v92 = BYTE5(v11) & 1;
    id v93 = v74;
    id v94 = v85;
    unint64_t v95 = v61;
    uint64_t v96 = v77;
    uint64_t v97 = v70;
    unsigned __int8 v98 = v84;
    char v99 = v50;
    char v100 = v19 & 1;
    unsigned __int8 v101 = v69;
    unsigned __int8 v102 = v83;
    unsigned __int8 v103 = v65;
    unsigned __int8 v104 = v63;
    unsigned __int8 v105 = v82;
    BOOL v106 = v64;
    id v107 = v68;
    uint64_t v108 = v66;
    v109 = v67;
    uint64_t v110 = v81;
    uint64_t v111 = v80;
    uint64_t v112 = v79;
    uint64_t v113 = v78;
    char v114 = v35;
    uint64_t v115 = v53;
    id v116 = v52;
    unsigned __int8 v117 = v76;
    char v118 = v75;
    unsigned int v119 = v72;
    char v120 = 0;
    sub_100294E6C((uint64_t)&v90);
    sub_10023C59C((uint64_t)__dst, (uint64_t)v121, (uint64_t *)&unk_10058A140);
    a3 = v73;
  }
  else
  {

    sub_10023C1C4(&v90);
    sub_10023C59C((uint64_t)&v90, (uint64_t)v121, (uint64_t *)&unk_10058A140);
  }
  return sub_10023C59C((uint64_t)v121, a3, (uint64_t *)&unk_10058A140);
}

void sub_10034BBF0(void *a1, Swift::Bool a2)
{
  sub_1001F6204(0, (unint64_t *)&qword_100585590);
  Class isa = NSNumber.init(BOOLeanLiteral:)(a2).super.super.isa;
  [a1 handleAudioSessionActivationStateChangedTo:isa];
}

uint64_t destroy for AudioInterruptionDescriptor(uint64_t a1)
{
  if (*(void *)(a1 + 40) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioInterruptionDescriptor(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  char v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  id v7 = v4;
  id v8 = v5;
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(_DWORD *)(a1 + 50) = *(_DWORD *)(a2 + 50);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(_WORD *)(a1 + 55) = *(_WORD *)(a2 + 55);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioInterruptionDescriptor(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(_WORD *)(a1 + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)a1 = v4;
  uint64_t v5 = (void *)*((void *)a2 + 1);
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v5;
  id v7 = v5;

  id v8 = *(void **)(a1 + 16);
  uint64_t v9 = (void *)*((void *)a2 + 2);
  *(void *)(a1 + 16) = v9;
  id v10 = v9;

  unint64_t v11 = (long long *)(a1 + 24);
  id v12 = (long long *)(a2 + 6);
  uint64_t v13 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v13 == 1)
    {
      long long v14 = *v12;
      *(_OWORD *)(a1 + 33) = *(_OWORD *)((char *)a2 + 33);
      *unint64_t v11 = v14;
    }
    else
    {
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(_DWORD *)(a1 + 28) = a2[7];
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_100314508(a1 + 24);
    long long v15 = *(_OWORD *)((char *)a2 + 33);
    *unint64_t v11 = *v12;
    *(_OWORD *)(a1 + 33) = v15;
  }
  else
  {
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_DWORD *)(a1 + 28) = a2[7];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  }
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  *(unsigned char *)(a1 + 50) = *((unsigned char *)a2 + 50);
  *(unsigned char *)(a1 + 51) = *((unsigned char *)a2 + 51);
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  *(unsigned char *)(a1 + 53) = *((unsigned char *)a2 + 53);
  *(unsigned char *)(a1 + 54) = *((unsigned char *)a2 + 54);
  *(unsigned char *)(a1 + 55) = *((unsigned char *)a2 + 55);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  uint64_t v16 = *((void *)a2 + 10);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = v16;
  long long v17 = *(_OWORD *)(a2 + 22);
  long long v18 = *(_OWORD *)(a2 + 26);
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(_OWORD *)(a1 + 104) = v18;
  *(_OWORD *)(a1 + 88) = v17;
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
  *(unsigned char *)(a1 + 145) = *((unsigned char *)a2 + 145);
  int v19 = a2[37];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(_DWORD *)(a1 + 148) = v19;
  return a1;
}

void *initializeWithTake for AudioInterruptionDescriptor(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x99uLL);
}

uint64_t assignWithTake for AudioInterruptionDescriptor(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  int v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  if (*(void *)(a1 + 40) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6 != 1)
    {
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      goto LABEL_6;
    }
    sub_100314508(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
LABEL_6:
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(unsigned char *)(a1 + 55) = *(unsigned char *)(a2 + 55);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioInterruptionDescriptor(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 153))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioInterruptionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 152) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 153) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioInterruptionDescriptor()
{
  return &type metadata for AudioInterruptionDescriptor;
}

id sub_10034C1F4()
{
  id v1 = [v0 queue];

  return v1;
}

id sub_10034C22C(void *a1)
{
  if (sub_10032763C())
  {
    unint64_t v2 = (id *)&AVAudioSessionCategoryRingtone;
LABEL_10:
    id v4 = *v2;
    id v5 = *v2;
    return v4;
  }
  if ([a1 audioInterruptionProviderType] == (id)1 && objc_msgSend(a1, "isTTY"))
  {
    unint64_t v2 = (id *)&AVAudioSessionCategoryTTYCall;
    goto LABEL_10;
  }
  sub_1003366B0(a1);
  if (!v3)
  {
    if ([a1 audioInterruptionProviderType] != (id)1) {
      return 0;
    }
    unint64_t v2 = (id *)&AVAudioSessionCategoryPhoneCall;
    goto LABEL_10;
  }
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10034C2F4(void *a1)
{
  if (sub_10032763C())
  {
LABEL_2:
    unsigned __int8 v2 = 0;
    unint64_t v3 = (unint64_t)&_mh_execute_header;
    return v3 | ((unint64_t)v2 << 40);
  }
  id v4 = [a1 audioInterruptionProviderType];
  if (v4 == (id)2)
  {
    unint64_t v3 = 0;
    unsigned __int8 v2 = 1;
    return v3 | ((unint64_t)v2 << 40);
  }
  if (v4 == (id)1)
  {
    id v5 = [a1 provider];
    unsigned __int8 v6 = [v5 isTelephonyProvider];

    if ((v6 & 1) == 0)
    {
      id v7 = [a1 provider];
      unsigned int v8 = [v7 audioSessionID];

      unsigned __int8 v2 = 0;
      unint64_t v3 = v8;
      return v3 | ((unint64_t)v2 << 40);
    }
    goto LABEL_2;
  }
  type metadata accessor for CSDAudioInterruptionProviderType(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

id sub_10034C400(void *a1)
{
  if (sub_10032763C())
  {
    unsigned __int8 v2 = (id *)&AVAudioSessionModeDefault;
LABEL_6:
    id v3 = *v2;
    id v4 = *v2;
    return v3;
  }
  if ([a1 wantsHoldMusic] && objc_msgSend(a1, "audioInterruptionProviderType") == (id)1)
  {
    unsigned __int8 v2 = (id *)&AVAudioSessionModeLocatePhone;
    goto LABEL_6;
  }
  sub_1003366BC(a1);
  if (!v5) {
    return 0;
  }
  id v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10034C4A0(void *a1, uint64_t a2)
{
  if ((a2 & 0x10100000000) != 0) {
    return 1;
  }
  else {
    return objc_msgSend(a1, "isOnHold", v2, v3) ^ 1;
  }
}

uint64_t sub_10034C4DC()
{
  uint64_t v1 = 7104878;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v35, "providerType=");
  HIWORD(v35._object) = -4864;
  sub_100294DC4(v0, (uint64_t)v41);
  sub_100294DC4((uint64_t)v41, (uint64_t)&v39);
  v2._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF44();
  v3._object = v35._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x79726F6765746163;
  v4._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v4);
  unint64_t v39 = *(void *)(v0 + 8);
  type metadata accessor for Category(0);
  _print_unlocked<A, B>(_:_:)();
  sub_10034CEF0();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0x3D65646F6DLL;
  v35._object = (void *)0xE500000000000000;
  unsigned __int8 v6 = *(void **)(v0 + 16);
  if (v6)
  {
    unint64_t v39 = *(void *)(v0 + 16);
    type metadata accessor for Mode(0);
    id v7 = v6;
    uint64_t v8 = String.init<A>(reflecting:)();
    unint64_t v10 = v9;
  }
  else
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v8 = 7104878;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  swift_bridgeObjectRetain();
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  unint64_t v39 = 0xD000000000000012;
  unint64_t v40 = 0x800000010048A700;
  uint64_t v12 = *(void *)(v0 + 40);
  if (v12 == 1)
  {
    uint64_t v13 = (void *)0xE300000000000000;
  }
  else
  {
    long long v14 = *(void **)(v0 + 32);
    uint64_t v15 = HIDWORD(*(void *)(v0 + 24));
    char v16 = *(unsigned char *)(v0 + 48) & 1;
    LOBYTE(v35._countAndFlagsBits) = *(unsigned char *)(v0 + 24) & 1;
    HIDWORD(v35._countAndFlagsBits) = v15;
    v35._object = v14;
    uint64_t v36 = v12;
    char v37 = v16;
    swift_bridgeObjectRetain();
    uint64_t v1 = String.init<A>(reflecting:)();
    uint64_t v13 = v17;
  }
  v18._countAndFlagsBits = v1;
  v18._object = v13;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 32;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  uint64_t v20 = v39;
  char v21 = (void *)v40;
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v20;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0x797469726F697270;
  v23._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v23);
  LOBYTE(v39) = *(unsigned char *)(v0 + 49);
  _print_unlocked<A, B>(_:_:)();
  sub_10034CEF0();
  swift_bridgeObjectRetain();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease();
  sub_10034CF44();
  if (*(unsigned char *)(v0 + 50)) {
    uint64_t v24 = 1702195828;
  }
  else {
    uint64_t v24 = 0x65736C6166;
  }
  sub_10034CF54(v24);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10034CF94();
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0x6C6F4873746E6177;
  v35._object = (void *)0xEF3D636973754D64;
  if (*(unsigned char *)(v0 + 51)) {
    uint64_t v25 = 1702195828;
  }
  else {
    uint64_t v25 = 0x65736C6166;
  }
  sub_10034CF54(v25);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10034CF94();
  _StringGuts.grow(_:)(17);
  v26._countAndFlagsBits = 0x6F6974617265706FLL;
  v26._object = (void *)0xEE003D65646F4D6ELL;
  String.append(_:)(v26);
  unint64_t v39 = *(void *)(v0 + 64);
  type metadata accessor for CSDAudioInterruptionOperationMode(0);
  _print_unlocked<A, B>(_:_:)();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)&v35, "wantsA2DP=");
  BYTE3(v35._object) = 0;
  HIDWORD(v35._object) = -369098752;
  if (*(unsigned char *)(v0 + 56)) {
    uint64_t v27 = 1702195828;
  }
  else {
    uint64_t v27 = 0x65736C6166;
  }
  sub_10034CF54(v27);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10034CF94();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  sub_10034CF44();
  if (*(unsigned char *)(v0 + 54)) {
    uint64_t v28 = 1702195828;
  }
  else {
    uint64_t v28 = 0x65736C6166;
  }
  sub_10034CF54(v28);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10034CFCC();
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0xD00000000000001ELL;
  v35._object = (void *)0x800000010048A770;
  if (*(unsigned char *)(v0 + 52)) {
    uint64_t v29 = 1702195828;
  }
  else {
    uint64_t v29 = 0x65736C6166;
  }
  sub_10034CF54(v29);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10034CFCC();
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  sub_10034CF44();
  if (*(unsigned char *)(v0 + 145)) {
    uint64_t v30 = 1702195828;
  }
  else {
    uint64_t v30 = 0x65736C6166;
  }
  sub_10034CF54(v30);
  swift_bridgeObjectRelease();
  sub_10034CEF0();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0xD00000000000001ELL;
  v35._object = (void *)0x800000010048A7B0;
  if (*(unsigned char *)(v0 + 55)) {
    uint64_t v31 = 1702195828;
  }
  else {
    uint64_t v31 = 0x65736C6166;
  }
  sub_10034CF54(v31);
  swift_bridgeObjectRelease();
  sub_10034CF28();
  sub_10034CF0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = 0x546275536C6C6163;
  v32._object = (void *)0xEC0000003D657079;
  String.append(_:)(v32);
  sub_10023C59C(v0 + 148, (uint64_t)&v39, &qword_100585B48);
  sub_10023C59C((uint64_t)&v39, (uint64_t)v38, &qword_100585B48);
  sub_1001F081C(&qword_100585B48);
  _print_unlocked<A, B>(_:_:)();
  swift_bridgeObjectRetain();
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35._countAndFlagsBits;
}

uint64_t sub_10034CD04()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_10034C4DC();
}

uint64_t sub_10034CD40(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x99uLL);
  memcpy(__dst, a2, 0x99uLL);
  return sub_10034AFC8((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_10034CD98(unsigned int *a1, unsigned int *a2)
{
  return sub_10034AD48(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 5) << 40), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 5) << 40));
}

uint64_t sub_10034CDDC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

void sub_10034CE14()
{
  sub_10034BBF0(*(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_10034CE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10034CE34()
{
  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for AudioInterruptionDescriptor.ProviderType(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AudioInterruptionDescriptor.ProviderType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 6)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioInterruptionDescriptor.ProviderType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 6) = v3;
  return result;
}

uint64_t sub_10034CE9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10034CEB8(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 5) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AudioInterruptionDescriptor.ProviderType()
{
  return &type metadata for AudioInterruptionDescriptor.ProviderType;
}

void sub_10034CEF0()
{
  uint64_t v1 = 32;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_10034CF0C()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10034CF28()
{
  return swift_bridgeObjectRetain();
}

void sub_10034CF54(uint64_t a1)
{
  uint64_t v3 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10034CF6C()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10034CFA4()
{
  return v0;
}

uint64_t sub_10034CFB8()
{
  return v0;
}

uint64_t sub_10034CFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100586A10);
  __chkstk_darwin(v4 - 8);
  unsigned __int8 v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_1001F0530((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_10058AEE8;
  v9[5] = v8;
  sub_100350008((uint64_t)v6, (uint64_t)&unk_10058AEF8, (uint64_t)v9);
  return swift_release();
}

id sub_10034D0E4()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (void *)BlastDoorInstanceTypeKnownSender;
  uint64_t v3 = (objc_class *)type metadata accessor for MessagesBlastDoorInterface();
  objc_allocWithZone(v3);
  uint64_t v4 = v0;
  id v5 = v2;
  uint64_t v6 = MessagesBlastDoorInterface.init(with:)();
  uint64_t v7 = (uint64_t *)&v4[OBJC_IVAR___CSDSecureImageTranscoder_blastDoor];
  v7[3] = (uint64_t)v3;
  v7[4] = (uint64_t)&off_100515E50;
  *uint64_t v7 = v6;

  v9.receiver = v4;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_10034D1B0()
{
  sub_1001F640C();
  v1[21] = v2;
  v1[22] = v0;
  v1[20] = v3;
  sub_1001F081C(&qword_100586A10);
  v1[23] = sub_1003508AC();
  uint64_t v4 = type metadata accessor for URL();
  v1[24] = v4;
  sub_1002462DC(v4);
  v1[25] = v5;
  v1[26] = *(void *)(v6 + 64);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  sub_1001F6430();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10034D2C0()
{
  Swift::String v23 = v0;
  sub_10034DE10();
  if (qword_1005839E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v5 = type metadata accessor for Logger();
  v0[30] = sub_1001F5F88(v5, (uint64_t)qword_100594B98);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[31] = v6;
  v0[32] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v2, v3);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[28];
  if (v9)
  {
    uint64_t v11 = v0[27];
    log = v7;
    uint64_t v13 = v0[24];
    uint64_t v12 = v0[25];
    long long v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)long long v14 = 136315138;
    v6(v11, v10, v13);
    uint64_t v15 = String.init<A>(reflecting:)();
    v0[19] = sub_1002344D8(v15, v16, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    long long v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v17(v10, v13);
    uint64_t v7 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v8, "Attempting to generate preview of image after writing to URL: %s", v14, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    long long v17 = *(void (**)(uint64_t, uint64_t))(v0[25] + 8);
    v17(v0[28], v0[24]);
  }

  v0[33] = v17;
  Data.write(to:options:)();
  sub_100204074((void *)(v0[22] + OBJC_IVAR___CSDSecureImageTranscoder_blastDoor), *(void *)(v0[22] + OBJC_IVAR___CSDSecureImageTranscoder_blastDoor + 24));
  Swift::String v18 = (void *)swift_task_alloc();
  v0[34] = v18;
  *Swift::String v18 = v0;
  v18[1] = sub_10034D6C4;
  sub_1002464BC();
  return sub_10034F284();
}

uint64_t sub_10034D6C4()
{
  sub_1001F640C();
  sub_1001F63B4();
  v3[10] = v1;
  v3[11] = v2;
  v3[12] = v4;
  v3[13] = v0;
  uint64_t v5 = *v1;
  sub_10023D230();
  void *v6 = v5;
  *(void *)(v7 + 280) = v0;
  swift_task_dealloc();
  sub_1001F6430();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_10034D7D8()
{
  id v1 = [self defaultManager];
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  v0[18] = 0;
  unsigned int v5 = sub_100350908(v1, "removeItemAtURL:error:");

  uint64_t v6 = (void *)v0[18];
  if (v5)
  {
    id v7 = v6;
  }
  else
  {
    id v8 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  uint64_t v10 = v0[11];
  uint64_t v9 = v0[12];
  sub_1001F7664();
  v11();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v12(v10, v9);
}

void sub_10034D954()
{
  if (!_TUIsInternalInstall())
  {
    id v14 = [self defaultManager];
    URL._bridgeToObjectiveC()(v15);
    long long v17 = v16;
    *(void *)(v0 + 112) = 0;
    unsigned int v18 = sub_100350908(v14, "removeItemAtURL:error:");

    uint64_t v12 = *(void **)(v0 + 112);
    if (!v18)
    {
LABEL_6:
      id v13 = v12;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
LABEL_9:
      swift_willThrow();
      goto LABEL_12;
    }
LABEL_8:
    id v19 = v12;
    goto LABEL_9;
  }
  id v1 = objc_msgSend(self, "tu_defaults");
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned __int8 v3 = [v1 BOOLForKey:v2 withDefault:0];

  if (v3)
  {
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      sub_1001F63CC();
    }

    id v7 = [self defaultManager];
    URL._bridgeToObjectiveC()(v8);
    uint64_t v10 = v9;
    *(void *)(v0 + 136) = 0;
    unsigned int v11 = [v7 removeItemAtURL:v9 error:v0 + 136];

    uint64_t v12 = *(void **)(v0 + 136);
    if (!v11) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  uint64_t v20 = self;
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = sub_100350404((uint64_t)v21, 0xD000000000000018, 0x800000010048A8C0, 0xD000000000000058, 0x800000010048A8E0, 0x52206120656C6946, 0xEC00000072616461, 0x7373696D736944, 0xE700000000000000, 0, v20);

  if (!v22)
  {
    __break(1u);
    return;
  }
  uint64_t v23 = *(void *)(v0 + 280);
  char v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v36 = *(void *)(v0 + 232);
  uint64_t v24 = *(void *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v25 = *(void *)(v0 + 200);
  uint64_t v27 = *(void *)(v0 + 184);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1001F75B4((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
  sub_1001F6204(0, &qword_10058AF20);
  swift_dynamicCast();
  uint64_t v28 = *(void **)(v0 + 128);
  [v28 setUsesNotificationCenter:0];
  uint64_t v29 = type metadata accessor for TaskPriority();
  uint64_t v30 = v27;
  sub_1001F0530(v27, 1, 1, v29);
  v37(v24, v36, v26);
  unint64_t v31 = (*(unsigned __int8 *)(v25 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  Swift::String v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = 0;
  *((void *)v32 + 3) = 0;
  *((void *)v32 + 4) = v28;
  *((void *)v32 + 5) = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v32[v31], v24, v26);
  id v33 = v28;
  swift_errorRetain();
  sub_10037DAC8(v30, (uint64_t)&unk_10058AF30, (uint64_t)v32);
  swift_release();
  swift_willThrow();

LABEL_12:
  sub_1003508F4();
  sub_1001F7664();
  v34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001F643C();
  v35();
}

uint64_t sub_10034DE10()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unsigned __int8 v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10034F8E8();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10034DFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[32] = a4;
  sub_1001F081C(&qword_1005878F0);
  v6[35] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v6[36] = v7;
  v6[37] = *(void *)(v7 - 8);
  v6[38] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URLComponents();
  v6[39] = v8;
  v6[40] = *(void *)(v8 - 8);
  v6[41] = swift_task_alloc();
  return _swift_task_switch(sub_10034E128, 0, 0);
}

uint64_t sub_10034E128()
{
  sub_100246768();
  uint64_t v1 = v0[32];
  sub_1001F6204(0, &qword_100588070);
  uint64_t v2 = (void *)static IMUserNotificationCenter.shared.getter();
  v0[42] = v2;
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_10034E288;
  uint64_t v3 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_10034ED60;
  v0[26] = &unk_100515F28;
  v0[27] = v3;
  [v2 addUserNotification:v1 listener:0 completionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10034E288()
{
  sub_1001F640C();
  uint64_t v1 = *v0;
  sub_10023D230();
  void *v2 = v1;
  sub_1001F6430();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10034E384()
{
  uint64_t v1 = *(void **)(v0 + 336);
  uint64_t v2 = *(void **)(v0 + 224);
  *(void *)(v0 + 344) = v2;

  if (!v2 || [v2 response])
  {
    id v3 = [self defaultManager];
    URL._bridgeToObjectiveC()(v4);
    uint64_t v6 = v5;
    *(void *)(v0 + 240) = 0;
    unsigned int v7 = sub_100350908(v3, "removeItemAtURL:error:");

    id v8 = *(id *)(v0 + 240);
    if (v7)
    {
    }
    else
    {
      uint64_t v9 = v8;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    goto LABEL_12;
  }
  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease();
  id v10 = [self sharedInstance];
  if (!v10)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return _swift_continuation_await(v10);
  }
  uint64_t v30 = *(void *)(v0 + 280);
  uint64_t v31 = *(void *)(v0 + 288);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v12 = sub_1003506DC(v10);
  if (v13)
  {
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0x6E776F6E6B6E55;
    unint64_t v14 = 0xE700000000000000;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0xD000000000000025;
  v16._object = (void *)0x800000010048A960;
  String.append(_:)(v16);
  *(void *)(v0 + 248) = v11;
  swift_errorRetain();
  sub_1001F081C((uint64_t *)&unk_100585FE0);
  v17._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  URL.path(percentEncoded:)(1);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  sub_1001F081C((uint64_t *)&unk_10058C0D0);
  uint64_t v18 = type metadata accessor for URLQueryItem();
  sub_1002462DC(v18);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100494BA0;
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  sub_100350920();
  URLQueryItem.init(name:value:)();
  sub_100350920();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  int v19 = sub_1001F758C(v30, 1, v31);
  uint64_t v20 = *(void *)(v0 + 280);
  if (v19 == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));

    sub_1002E8C30(v20, &qword_1005878F0);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1002464BC();
    __asm { BRAA            X1, X16 }
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 296) + 32))(*(void *)(v0 + 304), *(void *)(v0 + 280), *(void *)(v0 + 288));
  id v10 = [self defaultWorkspace];
  *(void *)(v0 + 352) = v10;
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v24 = v10;
  URL._bridgeToObjectiveC()(v23);
  uint64_t v26 = v25;
  *(void *)(v0 + 360) = v25;
  *(void *)(v0 + 80) = v0;
  *(void *)(v0 + 120) = v0 + 232;
  *(void *)(v0 + 88) = sub_10034EA1C;
  uint64_t v27 = swift_continuation_init();
  *(void *)(v0 + 144) = _NSConcreteStackBlock;
  *(void *)(v0 + 152) = 0x40000000;
  *(void *)(v0 + 160) = sub_10034EDA0;
  *(void *)(v0 + 168) = &unk_100515F40;
  *(void *)(v0 + 176) = v27;
  [v24 openURL:v26 configuration:0 completionHandler:v0 + 144];
  sub_1002464BC();
  return _swift_continuation_await(v10);
}

uint64_t sub_10034EA1C()
{
  sub_1001F640C();
  sub_1001F63B4();
  *(void *)(v1 + 368) = *(void *)(v0 + 112);
  sub_1001F6430();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_10034EB2C()
{
  uint64_t v2 = *(void **)(v0 + 352);
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v5 = *(void *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_100235D38();
  v6();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001F643C();
  return v7();
}

uint64_t sub_10034EC48()
{
  uint64_t v2 = (void *)v0[43];
  uint64_t v1 = (void *)v0[44];
  uint64_t v4 = v0[40];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[39];
  uint64_t v9 = (void *)v0[45];
  swift_willThrow();

  sub_100235D38();
  v6();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001F643C();
  return v7();
}

uint64_t sub_10034ED60(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;

  return sub_10037DDC0(v3, (uint64_t)a2);
}

uint64_t sub_10034EDA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_10037DD08(v3, v4);
  }
  else
  {
    if (a2) {
      a2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    return sub_10037DD94(v3, a2);
  }
}

uint64_t sub_10034EEB8(void *a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v3[4] = v7;
  v3[5] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v3[6] = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10034EF94;
  return sub_10034D1B0();
}

uint64_t sub_10034EF94(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = (void *)*v3;
  uint64_t v8 = (void *)*v3;
  sub_10023D230();
  *uint64_t v9 = v8;
  uint64_t v10 = (void *)v7[2];
  uint64_t v11 = (void *)*v3;
  *uint64_t v9 = *v3;
  swift_task_dealloc();

  sub_1001F7498(v7[4], v7[5]);
  if (v4)
  {
    uint64_t v12 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    Class isa = 0;
    unint64_t v14 = (void *)v12;
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1001F7498(a1, a2);
    uint64_t v12 = 0;
    unint64_t v14 = isa;
  }
  unint64_t v15 = (void (**)(void, void, void))v8[3];
  ((void (**)(void, Class, uint64_t))v15)[2](v15, isa, v12);

  _Block_release(v15);
  Swift::String v16 = (uint64_t (*)(void))v11[1];
  return v16();
}

uint64_t type metadata accessor for SecureImageTranscoder()
{
  return self;
}

uint64_t sub_10034F18C()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10034F1D4()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = (void *)v0[4];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1003508A0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100245950;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *))((char *)&dword_10058AED0 + dword_10058AED0);
  return v7(v1, v2, v3);
}

uint64_t sub_10034F284()
{
  sub_1001F640C();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = type metadata accessor for Image.Encoding();
  v1[7] = v3;
  sub_1002462DC(v3);
  v1[8] = v4;
  v1[9] = sub_1003508AC();
  sub_1001F081C(&qword_10058AF38);
  v1[10] = sub_1003508AC();
  uint64_t v5 = type metadata accessor for Image();
  v1[11] = v5;
  sub_1002462DC(v5);
  v1[12] = v6;
  v1[13] = sub_1003508AC();
  uint64_t v7 = type metadata accessor for URL();
  v1[14] = v7;
  sub_1002462DC(v7);
  v1[15] = v8;
  v1[16] = sub_1003508AC();
  sub_1001F6430();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_10034F398()
{
  id v44 = v0;
  uint64_t v3 = (void *)dispatch thunk of MessagesBlastDoorInterface.generateImagePreview(for:maxPixelDimension:scale:)();
  if (qword_1005839E0 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[5];
  uint64_t v8 = type metadata accessor for Logger();
  sub_1001F5F88(v8, (uint64_t)qword_100594B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  id v9 = v3;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_100350798();
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    os_log_type_t type = v11;
    v0[2] = sub_1002344D8(v13, v14, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1003508C4();
    v16(v15);
    *(_WORD *)(v12 + 12) = 2080;
    v0[3] = v9;
    type metadata accessor for _ObjCPreviewImageWrapper();
    id v17 = v9;
    uint64_t v18 = String.init<A>(reflecting:)();
    v0[4] = sub_1002344D8(v18, v19, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v10, type, "Generated preview from file: %s with result: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    uint64_t v20 = sub_1003508C4();
    v21(v20);
  }
  uint64_t v22 = (void *)dispatch thunk of _ObjCPreviewImageWrapper.image.getter();
  uint64_t v23 = (void *)_ObjCImageWrapper.cgImage.getter();

  if (v23)
  {
    uint64_t v25 = v0[9];
    uint64_t v24 = v0[10];
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[8];
    type metadata accessor for CGImage(0);
    v43[3] = v28;
    v43[4] = (uint64_t)&protocol witness table for CGImageRef;
    v43[0] = (uint64_t)v23;
    sub_1001F0530(v24, 1, 1, v26);
    id v29 = v23;
    Image.init(provider:maxPixelDimension:enforcedEncoding:)();
    ATXEncodingConfiguration.init(preTwiddled:lzfseCompression:)();
    (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v25, enum case for Image.Encoding.atx(_:), v26);
    uint64_t v34 = Image.data(using:)();
    uint64_t v36 = v35;
    uint64_t v37 = v0[9];
    uint64_t v39 = v0[7];
    uint64_t v38 = v0[8];

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_100235D38();
    v40();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v41 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v41(v34, v36);
  }
  else
  {
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      Swift::String v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Recevied empty image result from BlastDoor", v32, 2u);
      sub_1001F63CC();
    }

    sub_10035074C();
    swift_allocError();
    *id v33 = 0;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001F643C();
    return v1();
  }
}

void sub_10034F8E8()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = NSTemporaryDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(fileURLWithPath:isDirectory:)();
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v5 = [self defaultManager];
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  id v21 = 0;
  LODWORD(v3) = [v5 createDirectoryAtURL:v7 withIntermediateDirectories:1 attributes:0 error:&v21];

  id v9 = v21;
  if (v3)
  {
    id v10 = v9;
  }
  else
  {
    v19[1] = v21;
    id v11 = v21;
    uint64_t v12 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1005839E0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1001F5F88(v13, (uint64_t)qword_100594B98);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      Swift::String v16 = (uint8_t *)swift_slowAlloc();
      id v21 = (id)swift_slowAlloc();
      *(_DWORD *)Swift::String v16 = 136315138;
      uint64_t v20 = v12;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v17 = String.init<A>(reflecting:)();
      uint64_t v20 = sub_1002344D8(v17, v18, (uint64_t *)&v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error creating temporary images directory: %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10034FCBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10035089C;
  return v6();
}

uint64_t sub_10034FD8C()
{
  sub_100246768();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (int *)v0[4];
  uint64_t v4 = swift_task_alloc();
  id v5 = (void *)sub_1003508A0(v4);
  *id v5 = v6;
  v5[1] = sub_10035089C;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10058AEE0 + dword_10058AEE0);
  return v7(v1, v2, v3);
}

uint64_t sub_10034FE44(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = v4;
  v5[1] = sub_10035089C;
  return v7();
}

uint64_t sub_10034FF14()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10034FF54()
{
  sub_100246768();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1003508A0(v0);
  void *v1 = v2;
  v1[1] = sub_10035089C;
  uint64_t v3 = sub_1003508DC();
  return v4(v3);
}

uint64_t sub_100350008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_1001F758C(a1, 1, v6) == 1)
  {
    sub_1002E8C30(a1, &qword_100586A10);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100350178(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100350254;
  return v6(a1);
}

uint64_t sub_100350254()
{
  sub_1001F640C();
  sub_1001F63B4();
  uint64_t v1 = *v0;
  sub_10023D230();
  void *v2 = v1;
  swift_task_dealloc();
  sub_1001F643C();
  return v3();
}

uint64_t sub_100350318()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100350350(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1003508A0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_10035089C;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10058AF00 + dword_10058AF00);
  return v7(a1, v3);
}

id sub_100350404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [a11 userNotificationWithIdentifier:a1 title:v12 message:v13 defaultButton:v14 alternateButton:v15 otherButton:a10];

  return v16;
}

uint64_t sub_100350518()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003505F4()
{
  sub_100246768();
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1003508A0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100245950;
  uint64_t v7 = sub_1003508DC();
  return sub_10034DFAC(v7, v8, v9, v10, v2, v3);
}

uint64_t sub_1003506DC(void *a1)
{
  id v2 = [a1 productBuildVersion];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10035074C()
{
  unint64_t result = qword_10058AF40;
  if (!qword_10058AF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058AF40);
  }
  return result;
}

unint64_t sub_100350798()
{
  unint64_t result = qword_1005888D0;
  if (!qword_1005888D0)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005888D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BlastDoorError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BlastDoorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlastDoorError()
{
  return &type metadata for BlastDoorError;
}

uint64_t sub_1003508A0(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_1003508AC()
{
  return swift_task_alloc();
}

uint64_t sub_1003508C4()
{
  return v0;
}

uint64_t sub_1003508DC()
{
  return v0;
}

id sub_100350908(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t sub_100350920()
{
  return 0x6E656E6F706D6F43;
}

void sub_100350934(uint64_t a1)
{
}

void sub_100350940(uint64_t a1)
{
}

uint64_t sub_10035094C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_endTimeout) = a1;
  return swift_release();
}

void *sub_100350964()
{
  uint64_t v1 = OBJC_IVAR____TtC13callservicesd17RecordingProvider__momentsController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd17RecordingProvider__momentsController);
  if (!v2)
  {
    sub_100350940((uint64_t)[objc_allocWithZone((Class)TUMomentsController) initWithQueue:*(void *)(v0 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_queue)]);
    uint64_t v3 = *(void **)(v0 + v1);
    if (v3)
    {
      [v3 addDelegate:v0];
      uint64_t v2 = *(void **)(v0 + v1);
    }
    else
    {
      uint64_t v2 = 0;
    }
  }
  id v4 = v2;
  return v2;
}

id sub_1003509F0(void *a1)
{
  uint64_t v3 = sub_1001F081C((uint64_t *)&unk_10058BB70);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_100202310();
  *(void *)&v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider_avcStopTimeout] = 0x4014000000000000;
  uint64_t v5 = &v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue] = 0;
  uint64_t v6 = type metadata accessor for Locale();
  sub_1003579E4(v6);
  id v7 = objc_allocWithZone((Class)TUFeatureFlags);
  uint64_t v8 = v1;
  [v7 init];
  LanguageManager.init(featureFlags:localeOverride:)();
  *(void *)&v8[OBJC_IVAR____TtC13callservicesd17RecordingProvider__momentsController] = 0;
  *(void *)&v8[OBJC_IVAR____TtC13callservicesd17RecordingProvider_endTimeout] = 0;
  uint64_t v9 = type metadata accessor for UUID();
  sub_1003579E4(v9);
  *(void *)&v8[OBJC_IVAR____TtC13callservicesd17RecordingProvider_queue] = a1;
  id v10 = a1;

  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for RecordingProvider();
  id v11 = objc_msgSendSuper2(&v13, "init");

  return v11;
}

void sub_100350B48(void *a1)
{
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1001F5F88(v2, (uint64_t)qword_100594C58);
  id v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)sub_100235B18();
    aBlock[0] = sub_100202470();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v21 = (uint64_t)v3;
    type metadata accessor for CallRecordingSession();
    id v7 = v3;
    uint64_t v8 = String.init<A>(reflecting:)();
    uint64_t v21 = sub_1002344D8(v8, v9, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Prewarming recording %s", v6, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v12 = (void *)Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (sub_10026B89C(v13))
    {
      NSString v14 = (_WORD *)sub_100246544();
      sub_100246668(v14);
      sub_100246944((void *)&_mh_execute_header, v15, v16, "Recording session does not have a call! not able to prewarm recording");
      sub_1001F63CC();
    }
    goto LABEL_12;
  }
  id v11 = Strong;
  id v17 = sub_1003530A8((uint64_t)v3, Strong);
  unint64_t v18 = sub_100350964();
  if (v18)
  {
    uint64_t v12 = v18;
    aBlock[4] = (uint64_t)sub_100350F60;
    aBlock[5] = 0;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100351174;
    aBlock[3] = (uint64_t)&unk_100516480;
    unint64_t v19 = _Block_copy(aBlock);
    [v12 prewarmMediaRequest:v17 completion:v19];

    _Block_release(v19);
LABEL_12:

    return;
  }
}

void sub_100350F60(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_100583A20 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1001F5F88(v2, (uint64_t)qword_100594C58);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v5 = String.init<A>(reflecting:)();
      sub_1002344D8(v5, v6, &v8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Error prewarming call recording session %s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100351174(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1001F081C((uint64_t *)&unk_100585580);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = 1;
  }
  sub_1001F0530((uint64_t)v8, v11, 1, v10);
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_100235804((uint64_t)v8, (uint64_t *)&unk_100585580);
}

void sub_100351278()
{
  sub_1001FCC38();
  uint64_t v62 = v0;
  uint64_t v2 = v1;
  type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v63 = v4;
  uint64_t v64 = v3;
  __chkstk_darwin(v3);
  sub_1001F7650();
  uint64_t v61 = v5;
  sub_1002B8138();
  __chkstk_darwin(v6);
  sub_10026B914();
  uint64_t v66 = v7;
  uint64_t v8 = sub_1001F081C(&qword_1005878F0);
  uint64_t v9 = sub_100202384(v8);
  __chkstk_darwin(v9);
  sub_10024672C();
  uint64_t v12 = v10 - v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v61 - v15;
  __chkstk_darwin(v14);
  sub_10026B914();
  uint64_t v65 = v17;
  unint64_t v18 = self;
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1004904F0;
  *(void *)(v19 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v19 + 56) = v21;
  sub_1001F081C(&qword_100584B20);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10048FB00;
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR___CSDCallRecordingSession_callUUID);
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR___CSDCallRecordingSession_callUUID + 8);
  *(void *)(v22 + 56) = &type metadata for String;
  unint64_t v25 = sub_1001F3B08();
  *(void *)(v22 + 64) = v25;
  *(void *)(v22 + 32) = v24;
  *(void *)(v22 + 40) = v23;
  swift_bridgeObjectRetain();
  uint64_t v26 = UUID.uuidString.getter();
  *(void *)(v22 + 96) = &type metadata for String;
  *(void *)(v22 + 104) = v25;
  *(void *)(v22 + 72) = v26;
  *(void *)(v22 + 80) = v27;
  sub_100357A04();
  *(void *)(v19 + 64) = String.init(format:_:)();
  *(void *)(v19 + 72) = v28;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v30 = [v18 fileURLWithPathComponents:isa];

  if (v30)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = 1;
  }
  uint64_t v32 = v64;
  sub_1001F0530((uint64_t)v16, v31, 1, v64);
  uint64_t v33 = v65;
  sub_100273CB0((uint64_t)v16, v65, &qword_1005878F0);
  sub_100350940(0);
  sub_10025E234(v33, v12, &qword_1005878F0);
  int v34 = sub_1001F758C(v12, 1, v32);
  uint64_t v35 = v63;
  if (v34 == 1)
  {
    sub_100235804(v12, &qword_1005878F0);
    if (qword_100583A20 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_1001F5F88(v36, (uint64_t)qword_100594C58);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)sub_100246544();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Directory URL doesn't exist for recording session! cannot clean up from prewarming", v39, 2u);
      sub_1001F63CC();
    }
  }
  else
  {
    sub_100357AF4();
    v40();
    URL.path.getter();
    sub_100235D44();
    id v41 = objc_allocWithZone((Class)CSDSandboxExtensionDirectory);
    id v42 = sub_100357A24();
    if (&type metadata for String)
    {
      id v43 = &type metadata for String;
      sub_10026B7C0();
      v44();
    }
    else
    {
      uint64_t v45 = v42;
      id v46 = [self defaultManager];
      id v47 = [v45 URL];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      URL._bridgeToObjectiveC()(v48);
      char v50 = v49;
      id v51 = *(void (**)(void))(v35 + 8);
      sub_10026B7C0();
      v51();
      v68[0] = 0;
      unsigned __int8 v52 = [v46 removeItemAtURL:v50 error:v68];

      id v53 = v68[0];
      if (v52)
      {

        sub_10026B7C0();
        v51();
        goto LABEL_21;
      }
      unint64_t v54 = v53;
      id v43 = (void *)_convertNSErrorToError(_:)();

      swift_willThrow();
      ((void (*)(uint64_t, uint64_t))v51)(v66, v32);
    }
    if (qword_100583A20 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    sub_1001F5F88(v55, (uint64_t)qword_100594C58);
    swift_errorRetain();
    swift_errorRetain();
    unsigned int v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (sub_10027D4F8(v57))
    {
      uint64_t v58 = (_DWORD *)sub_100235B18();
      v68[0] = (id)sub_100202470();
      *uint64_t v58 = 136315138;
      uint64_t v67 = (uint64_t)v43;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v59 = String.init<A>(reflecting:)();
      uint64_t v67 = sub_1002344D8(v59, v60, (uint64_t *)v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_100357ABC((void *)&_mh_execute_header, v56, (os_log_type_t)v32, "Issue deleting item while cleaning up from prewarm %s");
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
  }
LABEL_21:
  sub_100235804(v33, &qword_1005878F0);
  sub_1001FCC08();
}

void sub_1003518E0()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_100332EE8();
  uint64_t v5 = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001F2514();
  uint64_t v11 = v10 - v9;
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_100583A20 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1001F5F88(v14, (uint64_t)qword_100594C58);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)sub_100246544();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Recording session does not have a call! not able to start recording", v17, 2u);
      sub_1001F63CC();
    }

    unint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
    if (v18)
    {
      uint64_t v19 = sub_10027AC68();
      *(void *)(v19 + 16) = v1;
      uint64_t v35 = sub_1003575D0;
      uint64_t v36 = v19;
      v32[0] = _NSConcreteStackBlock;
      sub_10021EAFC(COERCE_DOUBLE(1107296256));
      uint64_t v33 = sub_1002C2C88;
      int v34 = &unk_100516368;
      uint64_t v20 = _Block_copy(v32);
      uint64_t v21 = v1;
      id v22 = v18;
      static DispatchQoS.unspecified.getter();
      sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_100357A7C();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v20);

      sub_1001F7664();
      v23();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
      swift_release();
    }
    goto LABEL_11;
  }
  uint64_t v13 = Strong;
  id v31 = sub_1003530A8(v3, Strong);
  sub_100352148();
  uint64_t v24 = sub_100350964();
  if (v24)
  {
    unint64_t v25 = v24;
    uint64_t v26 = sub_10027AC68();
    *(void *)(v26 + 16) = v1;
    uint64_t v35 = sub_100357620;
    uint64_t v36 = v26;
    v32[0] = _NSConcreteStackBlock;
    sub_10021EAFC(COERCE_DOUBLE(1107296256));
    uint64_t v33 = sub_100351174;
    int v34 = &unk_100516408;
    uint64_t v27 = _Block_copy(v32);
    uint64_t v28 = v1;
    swift_release();
    [v25 startMediaRequest:v31 completion:v27];

    _Block_release(v27);
LABEL_11:
    sub_1001FCC08();
    return;
  }

  sub_1001FCC08();
}

uint64_t sub_100351FE8(uint64_t a1)
{
  uint64_t v2 = sub_1001F081C((uint64_t *)&unk_100585580);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate;
  swift_beginAccess();
  sub_10025E234(v5, (uint64_t)v11, &qword_10058B030);
  if (!v12) {
    return sub_100235804((uint64_t)v11, &qword_10058B030);
  }
  sub_10020ED28((uint64_t)v11, (uint64_t)v10);
  sub_100235804((uint64_t)v11, &qword_10058B030);
  sub_100204074(v10, v10[3]);
  uint64_t v6 = type metadata accessor for UUID();
  sub_1001F0530((uint64_t)v4, 1, 1, v6);
  sub_100357450();
  uint64_t v7 = swift_allocError();
  sub_1003318D8((uint64_t)v4, v7);
  swift_errorRelease();
  sub_100235804((uint64_t)v4, (uint64_t *)&unk_100585580);
  return sub_1002018DC((uint64_t)v10);
}

void sub_100352148()
{
  sub_1001FCC38();
  id v117 = v0;
  uint64_t v2 = v1;
  type metadata accessor for URL.DirectoryHint();
  sub_1001F6398();
  uint64_t v110 = v4;
  uint64_t v111 = v3;
  __chkstk_darwin(v3);
  sub_1001FCCD0();
  v109 = v5;
  uint64_t v116 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v112 = v6;
  __chkstk_darwin(v7);
  sub_1001F7650();
  uint64_t v113 = v8;
  sub_1002B8138();
  __chkstk_darwin(v9);
  uint64_t v108 = (char *)&v107 - v10;
  sub_1002B8138();
  uint64_t v12 = __chkstk_darwin(v11);
  sub_100357B14(v12, v13, v14, v15, v16, v17, v18, v19, v107);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = sub_100202384(v20);
  __chkstk_darwin(v21);
  sub_100202310();
  uint64_t v118 = type metadata accessor for RecordingMetadata();
  sub_1001F6398();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_1001FCCD0();
  id v119 = v25;
  sub_100357864(v2);
  if (!v26)
  {
    id v43 = [v2 localSenderIdentity];
    if (!v43
      || (v44 = v43, id v45 = [v43 handle], v44, !v45)
      || (sub_1003577F4(v45), !v46))
    {
      id v47 = [v2 localSenderIdentity];
      if (v47
        && (v48 = v47, id v49 = [v47 handle], v48, v49))
      {
        id v50 = [v49 value];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  id v27 = [v2 handle];
  if (v27)
  {
    sub_1003577F4(v27);
    if (v28)
    {
      uint64_t v114 = v23;
LABEL_7:
      id v32 = [v117 localeIdentifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      static Date.now.getter();
      RecordingMetadata.init(locale:startTimeStamp:localHandle:remoteHandle:)();
      if (qword_100583A20 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_1001F5F88(v33, (uint64_t)qword_100594C58);
      int v34 = v2;
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (_DWORD *)sub_100235B18();
        os_log_type_t v38 = (void *)swift_slowAlloc();
        _DWORD *v37 = 138412290;
        *(void *)&long long v120 = v34;
        uint64_t v39 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v38 = v34;

        sub_100357ABC((void *)&_mh_execute_header, v35, v36, "Writing metadata of call: %@");
        sub_1001F081C(&qword_100585900);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
      }
      else
      {

        uint64_t v35 = v34;
      }
      uint64_t v40 = v116;

      type metadata accessor for JSONEncoder();
      swift_allocObject();
      JSONEncoder.init()();
      sub_1003578C8(&qword_10058B078, (void (*)(uint64_t))&type metadata accessor for RecordingMetadata);
      uint64_t v41 = dispatch thunk of JSONEncoder.encode<A>(_:)();
      uint64_t v42 = v115;
      uint64_t v51 = v41;
      id v53 = v52;
      swift_release();
      id v54 = [v117 sandboxURL];
      id v55 = [v54 URL];

      unsigned int v56 = v108;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      strcpy((char *)&v120, "metadata.json");
      HIWORD(v120) = -4864;
      uint64_t v58 = v109;
      uint64_t v57 = v110;
      uint64_t v59 = v111;
      (*(void (**)(void (*)(void), void, uint64_t))(v110 + 104))(v109, enum case for URL.DirectoryHint.inferFromPath(_:), v111);
      sub_10030A394();
      URL.appending<A>(component:directoryHint:)();
      (*(void (**)(void (*)(void), uint64_t))(v57 + 8))(v58, v59);
      swift_bridgeObjectRelease();
      v109 = *(void (**)(void))(v112 + 8);
      uint64_t v110 = v112 + 8;
      ((void (*)(char *, uint64_t))v109)(v56, v40);
      unint64_t v60 = self;
      id v61 = [v60 defaultManager];
      URL.relativePath.getter();
      NSString v62 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v111 = v51;
      id v117 = v53;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      unsigned int v64 = [v61 createFileAtPath:v62 contents:isa attributes:0];

      uint64_t v65 = v113;
      sub_1002468D0();
      v66();
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v70 = sub_100202470();
        v121[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 136315650;
        LODWORD(v112) = v64;
        uint64_t v71 = URL.relativePath.getter();
        uint64_t v73 = sub_1002344D8(v71, v72, v121);
        sub_100235DD0(v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        id v74 = v109;
        sub_100235D38();
        v74();
        *(_WORD *)(v70 + 12) = 2080;
        id v75 = [v60 defaultManager];
        id v76 = [v75 currentDirectoryPath];

        uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v79 = v78;

        *(void *)&long long v120 = v77;
        *((void *)&v120 + 1) = v79;
        uint64_t v80 = String.init<A>(reflecting:)();
        uint64_t v82 = sub_1002344D8(v80, v81, v121);
        sub_100357A88(v82);
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 22) = 2080;
        LOBYTE(v120) = v112;
        uint64_t v83 = String.init<A>(reflecting:)();
        uint64_t v85 = sub_1002344D8(v83, v84, v121);
        sub_100357A88(v85);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "Creating a directory of %s at %s, success: %s", (uint8_t *)v70, 0x20u);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
        sub_1001F7498(v111, (unint64_t)v117);

        sub_100235D38();
        v74();
      }
      else
      {
        sub_1001F7498(v111, (unint64_t)v117);

        unint64_t v95 = v109;
        ((void (*)(uint64_t, uint64_t))v109)(v65, v40);
        ((void (*)(uint64_t, uint64_t))v95)(v42, v40);
      }
      (*(void (**)(id, uint64_t))(v114 + 8))(v119, v118);
      goto LABEL_29;
    }
  }
  id v29 = [v2 handle];
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v114 = v23;
    id v31 = [v29 value];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v86 = type metadata accessor for Logger();
  sub_1001F5F88(v86, (uint64_t)qword_100594C58);
  id v119 = v2;
  uint64_t v87 = Logger.logObject.getter();
  os_log_type_t v88 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = sub_100202470();
    v121[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v89 = 136315650;
    uint64_t v90 = sub_100357864(v119);
    if (v91)
    {
      *(void *)&long long v120 = v90;
      *((void *)&v120 + 1) = v91;
      uint64_t v92 = String.init<A>(reflecting:)();
      unint64_t v94 = v93;
    }
    else
    {
      unint64_t v94 = 0xE300000000000000;
      uint64_t v92 = 7104878;
    }
    *(void *)&long long v120 = sub_1002344D8(v92, v94, v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 12) = 2080;
    id v98 = [v119 localSenderIdentity];
    if (v98)
    {
      *(void *)&long long v120 = v98;
      sub_1001F6204(0, &qword_10058B070);
      uint64_t v99 = String.init<A>(reflecting:)();
      unint64_t v101 = v100;
    }
    else
    {
      unint64_t v101 = 0xE300000000000000;
      uint64_t v99 = 7104878;
    }
    *(void *)&long long v120 = sub_1002344D8(v99, v101, v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 22) = 2080;
    id v102 = [v119 handle];
    if (v102)
    {
      *(void *)&long long v120 = v102;
      sub_1001F6204(0, (unint64_t *)&unk_100586E00);
      uint64_t v103 = String.init<A>(reflecting:)();
      unint64_t v105 = v104;
    }
    else
    {
      unint64_t v105 = 0xE300000000000000;
      uint64_t v103 = 7104878;
    }
    uint64_t v106 = sub_1002344D8(v103, v105, v121);
    sub_100235DD0(v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Not writing metadata because one of these is nil local member handle value: %s local sender identity %s remote handle: %s", (uint8_t *)v89, 0x20u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();

LABEL_29:
    sub_1001FCC08();
    return;
  }

  sub_1001FCC08();
}

uint64_t sub_100352E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate;
  swift_beginAccess();
  sub_10025E234(v5, (uint64_t)v9, &qword_10058B030);
  if (!v10) {
    return sub_100235804((uint64_t)v9, &qword_10058B030);
  }
  sub_10020ED28((uint64_t)v9, (uint64_t)v8);
  sub_100235804((uint64_t)v9, &qword_10058B030);
  sub_100204074(v8, v8[3]);
  if (a3) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  sub_1003318D8(a2, v6);
  swift_errorRelease();
  return sub_1002018DC((uint64_t)v8);
}

uint64_t sub_100352F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C((uint64_t *)&unk_100585580);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate;
  swift_beginAccess();
  sub_10025E234(v7, (uint64_t)v12, &qword_10058B030);
  if (!v13) {
    return sub_100235804((uint64_t)v12, &qword_10058B030);
  }
  sub_10020ED28((uint64_t)v12, (uint64_t)v11);
  sub_100235804((uint64_t)v12, &qword_10058B030);
  sub_100204074(v11, v11[3]);
  uint64_t v8 = type metadata accessor for UUID();
  sub_1001F0530((uint64_t)v6, 1, 1, v8);
  sub_1003318D8((uint64_t)v6, a2);
  sub_100235804((uint64_t)v6, (uint64_t *)&unk_100585580);
  return sub_1002018DC((uint64_t)v11);
}

id sub_1003530A8(uint64_t a1, void *a2)
{
  uint64_t v57 = a1;
  type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v58 = v5;
  uint64_t v59 = v4;
  __chkstk_darwin(v4);
  sub_1001F7650();
  uint64_t v54 = v6;
  sub_1002B8138();
  __chkstk_darwin(v7);
  sub_10026B914();
  id v61 = v8;
  uint64_t v9 = sub_1001F081C(&qword_1005878F0);
  uint64_t v10 = sub_100202384(v9);
  __chkstk_darwin(v10);
  sub_10024672C();
  uint64_t v13 = v11 - v12;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v54 - v16;
  __chkstk_darwin(v15);
  sub_10026B914();
  uint64_t v60 = v18;
  uint64_t v19 = self;
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1004904F0;
  *(void *)(v20 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v20 + 40) = v21;
  *(void *)(v20 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v20 + 56) = v22;
  sub_1001F081C(&qword_100584B20);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10048FB00;
  id v55 = a2;
  id v24 = [a2 uniqueProxyIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100235D44();

  *(void *)(v23 + 56) = &type metadata for String;
  unint64_t v25 = sub_1001F3B08();
  *(void *)(v23 + 64) = v25;
  *(void *)(v23 + 32) = a2;
  *(void *)(v23 + 40) = v2;
  uint64_t v26 = UUID.uuidString.getter();
  *(void *)(v23 + 96) = &type metadata for String;
  *(void *)(v23 + 104) = v25;
  *(void *)(v23 + 72) = v26;
  *(void *)(v23 + 80) = v27;
  sub_100357A04();
  *(void *)(v20 + 64) = String.init(format:_:)();
  *(void *)(v20 + 72) = v28;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v30 = [v19 fileURLWithPathComponents:isa];

  if (v30)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = 1;
  }
  uint64_t v32 = v59;
  sub_1001F0530((uint64_t)v17, v31, 1, v59);
  uint64_t v33 = v60;
  sub_100273CB0((uint64_t)v17, v60, &qword_1005878F0);
  sub_10025E234(v33, v13, &qword_1005878F0);
  int v34 = sub_1001F758C(v13, 1, v32);
  uint64_t v35 = v58;
  id v36 = v61;
  if (v34 == 1)
  {
    sub_100235804(v13, &qword_1005878F0);
    if (qword_100583A20 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_1001F5F88(v37, (uint64_t)qword_100594C58);
    os_log_type_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Unable to create a sandbox directory", v40, 2u);
      swift_slowDealloc();
    }

    sub_100357450();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    sub_100357AF4();
    v41();
    URL.path.getter();
    sub_100235D44();
    id v42 = objc_allocWithZone((Class)CSDSandboxExtensionDirectory);
    uint64_t v43 = v56;
    id v44 = sub_1003571C4();
    if (!v43)
    {
      uint64_t v46 = v44;
      sub_1001F6204(0, &qword_10058B050);
      id v47 = [v46 URL];
      uint64_t v48 = v54;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      id v49 = sub_10035361C(v48, 1);
      sub_1001F6204(0, &qword_10058B058);
      uint64_t v50 = v35;
      id v51 = v55;
      id v52 = v49;
      id v36 = sub_1003536C0(v51, v52);
      v62.value._rawValue = 0;
      LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(v62);
      NSString v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v36 setLocaleIdentifier:v53];

      (*(void (**)(void *, uint64_t))(v50 + 8))(v61, v32);
      sub_100235804(v33, &qword_1005878F0);
      return v36;
    }
    (*(void (**)(id, uint64_t))(v35 + 8))(v36, v32);
  }
  sub_100235804(v33, &qword_1005878F0);
  return v36;
}

id sub_10035361C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  id v8 = [v4 initWithURL:v6 withExtensionType:a2];

  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  return v8;
}

id sub_1003536C0(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCall:a1 URL:a2];

  return v4;
}

void sub_10035371C(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for DispatchQoS();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_1001FCCD0();
  uint64_t v78 = type metadata accessor for DispatchTime();
  sub_1001F6398();
  uint64_t v77 = v5;
  __chkstk_darwin(v6);
  sub_1001F7650();
  sub_1002B8138();
  __chkstk_darwin(v7);
  sub_10026B914();
  sub_100357A6C(v8);
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v9);
  sub_1001F2514();
  uint64_t v10 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v11 = sub_100202384(v10);
  __chkstk_darwin(v11);
  sub_1001F2514();
  uint64_t v14 = v13 - v12;
  uint64_t v81 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v80 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  sub_1003579B8(v17, v18, v19, v20, v21, v22, v23, v24, v72);
  uint64_t v26 = __chkstk_darwin(v25);
  sub_100357B14(v26, v27, v28, v29, v30, v31, v32, v33, v73);
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_1001F5F88(v34, (uint64_t)qword_100594C58);
  id v35 = a1;
  id v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v36, v37))
  {
    os_log_type_t v38 = (_DWORD *)sub_100235B18();
    uint64_t aBlock = sub_100202470();
    _DWORD *v38 = 136315138;
    id v89 = v35;
    type metadata accessor for CallRecordingSession();
    id v39 = v35;
    uint64_t v40 = String.init<A>(reflecting:)();
    uint64_t v42 = sub_1002344D8(v40, v41, &aBlock);
    sub_100357B00(v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    sub_100357ABC((void *)&_mh_execute_header, v36, v37, "Asked to end recording for %s");
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
  uint64_t v43 = (uint64_t)v35 + OBJC_IVAR___CSDCallRecordingSession_currentMessageUUID;
  sub_1002022F8();
  sub_10025E234(v43, v14, (uint64_t *)&unk_100585580);
  uint64_t v44 = v82;
  if (sub_1001F758C(v14, 1, v81) == 1)
  {
    sub_100235804(v14, (uint64_t *)&unk_100585580);
    id v45 = (void *)Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.info.getter();
    if (sub_10026B89C(v46))
    {
      id v47 = (_WORD *)sub_100246544();
      sub_100246668(v47);
      sub_100246944((void *)&_mh_execute_header, v48, v49, "No message UUID! Ending recording anyways");
      sub_1001F63CC();
    }

    uint64_t v50 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
    if (v50)
    {
      uint64_t v51 = sub_10027AC68();
      *(void *)(v51 + 16) = v2;
      uint64_t v87 = sub_10035749C;
      uint64_t v88 = v51;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v84 = 1107296256;
      uint64_t v85 = sub_1002C2C88;
      uint64_t v86 = &unk_100516278;
      id v52 = _Block_copy(&aBlock);
      id v53 = v2;
      id v54 = v50;
      static DispatchQoS.unspecified.getter();
      sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_100357AD4();
      sub_100357A7C();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v52);

      sub_1001F7664();
      v55();
      sub_1001F7664();
      v56();
      swift_release();
    }
  }
  else
  {
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32);
    v79(v82, v14, v81);
    uint64_t v57 = sub_10027AC68();
    *(void *)(v57 + 16) = v1;
    uint64_t v87 = sub_1003574B8;
    uint64_t v88 = v57;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v84 = 1107296256;
    uint64_t v85 = sub_1002C2C88;
    uint64_t v86 = &unk_1005162C8;
    _Block_copy(&aBlock);
    sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v58 = v1;
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_1001F6030();
    sub_100357AD4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v59 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    sub_10035094C(v59);
    uint64_t v60 = *(void **)&v58[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
    if (v60)
    {
      id v61 = v60;
      static DispatchTime.now()();
      + infix(_:_:)();
      Swift::OpaquePointer_optional v62 = *(void (**)(void))(v77 + 8);
      sub_10026B7C0();
      v62();
      if (!*(void *)&v58[OBJC_IVAR____TtC13callservicesd17RecordingProvider_endTimeout])
      {
        __break(1u);
        return;
      }
      swift_retain();
      OS_dispatch_queue.asyncAfter(deadline:execute:)();

      swift_release();
      ((void (*)(uint64_t, uint64_t))v62)(v76, v78);
    }
    uint64_t v63 = sub_100350964();
    if (v63)
    {
      unsigned int v64 = v63;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v75, v82, v81);
      unint64_t v66 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
      unint64_t v67 = (v74 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v68 = swift_allocObject();
      unint64_t v69 = v68 + v66;
      uint64_t v44 = v82;
      v79(v69, v75, v81);
      *(void *)(v68 + v67) = v58;
      uint64_t v87 = sub_100357558;
      uint64_t v88 = v68;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v84 = 1107296256;
      uint64_t v85 = sub_1003629D8;
      uint64_t v86 = &unk_100516318;
      uint64_t v70 = _Block_copy(&aBlock);
      uint64_t v71 = v58;
      swift_release();
      [v64 endMediaRequestWithUUID:isa completion:v70];
      _Block_release(v70);
    }
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v44, v81);
  }
}

uint64_t sub_100353FBC()
{
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1001F5F88(v0, (uint64_t)qword_100594C58);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "timeout reached for ending recording", v3, 2u);
    swift_slowDealloc();
  }

  sub_100357450();
  swift_allocError();
  sub_1003561FC();

  return swift_errorRelease();
}

void sub_1003540D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v39 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = sub_1001F5F88(v15, (uint64_t)qword_100594C58);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v47 = a2;
  v17(v14, a2, v5);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v46 = v16;
  uint64_t v18 = Logger.logObject.getter();
  int v19 = static os_log_type_t.error.getter();
  BOOL v20 = os_log_type_enabled(v18, (os_log_type_t)v19);
  uint64_t v48 = v17;
  if (v20)
  {
    int v41 = v19;
    uint64_t v44 = v9;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v50 = (void (*)(void, void, void))v40;
    *(_DWORD *)uint64_t v21 = 136315394;
    v17(v12, (uint64_t)v14, v5);
    uint64_t v22 = String.init<A>(reflecting:)();
    uint64_t v42 = v5;
    uint64_t v49 = sub_1002344D8(v22, v23, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v14, v42);
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v43 = v24;
    if (a1)
    {
      uint64_t v49 = a1;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v25 = String.init<A>(reflecting:)();
      unint64_t v27 = v26;
    }
    else
    {
      unint64_t v27 = 0xE300000000000000;
      uint64_t v25 = 7104878;
    }
    uint64_t v28 = v47;
    uint64_t v49 = sub_1002344D8(v25, v27, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v41, "Recording with message uuid %s ended with error %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v42;
    uint64_t v9 = v44;
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t))(v6 + 8);
    v43(v14, v5);
    swift_errorRelease();
    swift_errorRelease();

    uint64_t v28 = v47;
  }
  if (a1)
  {
    uint64_t v47 = v6;
    v48(v9, v28, v5);
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v44 = v9;
      uint64_t v33 = (void *)v32;
      uint64_t v34 = v5;
      uint64_t v48 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      uint64_t v50 = (void (*)(void, void, void))v48;
      *(_DWORD *)uint64_t v31 = 138412546;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v49 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v33 = v35;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v31 + 12) = 2080;
      sub_1003578C8((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
      id v36 = v44;
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v49 = sub_1002344D8(v37, v38, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v43(v36, v34);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error while peforming end media request %@ with UUID: %s", (uint8_t *)v31, 0x16u);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      v43(v9, v5);
    }

    swift_errorRetain();
    sub_1003561FC();
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_1003546F0()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v189 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v188 = v4;
  __chkstk_darwin(v5);
  sub_1001FCCD0();
  sub_100357A6C(v6);
  uint64_t v187 = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v186 = v7;
  __chkstk_darwin(v8);
  sub_1001FCCD0();
  sub_100357A6C(v9);
  uint64_t v10 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v192 = v11;
  __chkstk_darwin(v12);
  sub_1001F7650();
  uint64_t v185 = v13;
  sub_1002B8138();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v181 - v16;
  __chkstk_darwin(v15);
  int v19 = (char *)&v181 - v18;
  uint64_t v20 = sub_1001F081C(&qword_1005878F0);
  uint64_t v21 = sub_100202384(v20);
  __chkstk_darwin(v21);
  sub_1001F7650();
  id v195 = v22;
  sub_1002B8138();
  __chkstk_darwin(v23);
  v194 = (char *)&v181 - v24;
  sub_1002B8138();
  __chkstk_darwin(v25);
  sub_10026B914();
  uint64_t v198 = v26;
  uint64_t v27 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v28 = sub_100202384(v27);
  __chkstk_darwin(v28);
  sub_1001F7650();
  id v196 = v29;
  sub_1002B8138();
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v181 - v31;
  uint64_t v203 = type metadata accessor for UUID();
  sub_1001F6398();
  Class v34 = v33;
  uint64_t v36 = __chkstk_darwin(v35);
  sub_1003579B8(v36, v37, v38, v39, v40, v41, v42, v43, v181);
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v181 - v45;
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v47 = type metadata accessor for Logger();
  uint64_t v48 = sub_1001F5F88(v47, (uint64_t)qword_100594C58);
  id v49 = v3;
  uint64_t v202 = v48;
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.info.getter();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v197 = v10;
  v200 = v1;
  v193 = v19;
  v184 = v17;
  if (v52)
  {
    id v53 = (uint8_t *)sub_100235B18();
    v205[0] = sub_100202470();
    *(_DWORD *)id v53 = 136315138;
    id v183 = v53 + 4;
    uint64_t v210 = (uint64_t)v49;
    type metadata accessor for CallRecordingSession();
    id v54 = v49;
    v201 = v46;
    Class isa = v34;
    id v55 = v54;
    uint64_t v56 = String.init<A>(reflecting:)();
    uint64_t v210 = sub_1002344D8(v56, v57, v205);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    Class v34 = isa;
    uint64_t v46 = v201;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Update tokens for %s", v53, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
  uint64_t v58 = (uint64_t)v49 + OBJC_IVAR___CSDCallRecordingSession_currentMessageUUID;
  sub_1002022F8();
  sub_10025E234(v58, (uint64_t)v32, (uint64_t *)&unk_100585580);
  uint64_t v59 = v203;
  if (sub_1001F758C((uint64_t)v32, 1, v203) != 1)
  {
    uint64_t v65 = (void (*)(char *, char *, uint64_t))*((void *)v34 + 4);
    v65(v46, v32, v59);
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v182 = v49;
      id v183 = Strong;
      unint64_t v67 = v34;
      uint64_t v68 = (void (*)(id, char *, uint64_t))*((void *)v34 + 2);
      uint64_t v69 = (uint64_t)v196;
      v68(v196, v46, v59);
      sub_1001F0530(v69, 0, 1, v59);
      uint64_t v70 = v59;
      uint64_t v71 = (uint64_t)&v200[OBJC_IVAR____TtC13callservicesd17RecordingProvider_currentlyEndingRecordingDueToUpdate];
      swift_beginAccess();
      sub_100202264(v69, v71);
      swift_endAccess();
      uint64_t v72 = sub_100350964();
      uint64_t v73 = v46;
      uint64_t v74 = v198;
      if (v72)
      {
        uint64_t v75 = v72;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        uint64_t v76 = (unsigned __int8 *)v67;
        uint64_t v77 = (char *)v191;
        v68(v191, v73, v70);
        unint64_t v78 = (v76[80] + 16) & ~(unint64_t)v76[80];
        uint64_t v79 = swift_allocObject();
        uint64_t v80 = v77;
        unint64_t v67 = (objc_class *)v76;
        v65((char *)(v79 + v78), v80, v70);
        v208 = sub_1003573C4;
        uint64_t v209 = v79;
        v205[0] = (uint64_t)_NSConcreteStackBlock;
        sub_100357AE8(COERCE_DOUBLE(1107296256));
        v206 = sub_1003629D8;
        v207 = &unk_1005161D8;
        uint64_t v81 = _Block_copy(v205);
        swift_release();
        Class v82 = isa;
        [v75 endMediaRequestWithUUID:isa completion:v81];
        _Block_release(v81);

        uint64_t v74 = v198;
      }
      Class isa = v67;
      v201 = v73;
      uint64_t v83 = self;
      sub_1001F081C((uint64_t *)&unk_100585280);
      uint64_t v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_10048FAF0;
      *(void *)(v84 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v84 + 40) = v85;
      *(void *)(v84 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v84 + 56) = v86;
      sub_1001F081C(&qword_100584B20);
      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = xmmword_10048FB00;
      id v88 = v183;
      id v89 = [v183 uniqueProxyIdentifier];
      uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v92 = v91;

      *(void *)(v87 + 56) = &type metadata for String;
      unint64_t v93 = (char *)sub_1001F3B08();
      *(void *)(v87 + 64) = v93;
      *(void *)(v87 + 32) = v90;
      *(void *)(v87 + 40) = v92;
      id v94 = v182;
      uint64_t v95 = UUID.uuidString.getter();
      *(void *)(v87 + 96) = &type metadata for String;
      *(void *)(v87 + 104) = v93;
      *(void *)(v87 + 72) = v95;
      *(void *)(v87 + 80) = v96;
      sub_100357A04();
      *(void *)(v84 + 64) = String.init(format:_:)();
      *(void *)(v84 + 72) = v97;
      uint64_t v98 = (uint64_t)v94 + OBJC_IVAR___CSDCallRecordingSession_messageUUIDs;
      sub_1002022F8();
      v205[0] = *(void *)(*(void *)v98 + 16);
      sub_100357298();
      *(void *)(v84 + 80) = BinaryInteger.description.getter();
      *(void *)(v84 + 88) = v99;
      v100.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v101 = [v83 fileURLWithPathComponents:v100.super.isa];

      if (v101)
      {
        uint64_t v102 = (uint64_t)v194;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100357AA8();
      }
      else
      {
        sub_100357AA8();
        uint64_t v102 = (uint64_t)v194;
      }
      sub_1001F0530(v102, v103, 1, (uint64_t)v68);
      sub_100273CB0(v102, v74, &qword_1005878F0);
      sub_10025E234(v74, (uint64_t)v100.super.isa, &qword_1005878F0);
      int v109 = sub_1001F758C((uint64_t)v100.super.isa, 1, (uint64_t)v68);
      os_log_type_t v110 = v201;
      if (v109 != 1)
      {
        uint64_t v124 = v192;
        sub_100357AF4();
        v125();
        URL.path.getter();
        sub_100235D44();
        id v126 = objc_allocWithZone((Class)CSDSandboxExtensionDirectory);
        id v127 = sub_100357A24();
        if (!v102)
        {
          uint64_t v134 = v127;
          sub_1001F6204(0, &qword_10058B050);
          id v196 = v134;
          id v135 = [v134 URL];
          uint64_t v136 = v88;
          uint64_t v137 = (uint64_t)v184;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          id v138 = sub_10035361C(v137, 1);
          sub_1001F6204(0, &qword_10058B058);
          uint64_t v139 = v136;
          id v140 = v138;
          v194 = v139;
          id v195 = v140;
          id v141 = sub_1003536C0(v139, v140);
          v211.value._rawValue = 0;
          LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(v211);
          NSString v142 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v141 setLocaleIdentifier:v142];

          uint64_t v143 = v185;
          uint64_t v190 = *(void *)(v124 + 16);
          sub_1002468D0();
          v144();
          id v145 = v141;
          v146 = Logger.logObject.getter();
          os_log_type_t v147 = static os_log_type_t.info.getter();
          BOOL v148 = sub_10027D4F8(v147);
          v149 = v68;
          v191 = v145;
          if (v148)
          {
            uint64_t v150 = swift_slowAlloc();
            LODWORD(v202) = v142;
            uint64_t v151 = v150;
            uint64_t v152 = swift_slowAlloc();
            uint64_t v189 = v152;
            *(_DWORD *)uint64_t v151 = 136315394;
            v204 = v145;
            v205[0] = v152;
            id v153 = v145;
            uint64_t v154 = String.init<A>(reflecting:)();
            v204 = (void *)sub_1002344D8(v154, v155, v205);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v151 + 12) = 2080;
            uint64_t v156 = v185;
            sub_1002468D0();
            v157();
            uint64_t v158 = String.init<A>(reflecting:)();
            v204 = (void *)sub_1002344D8(v158, v159, v205);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v160 = *(void (**)(void, void))(v124 + 8);
            v160(v156, v149);
            _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v202, "Starting media request for update tokens %s to directory %s", (uint8_t *)v151, 0x16u);
            swift_arrayDestroy();
            sub_1001F63CC();
            sub_1001F63CC();
          }
          else
          {

            v160 = *(void (**)(void, void))(v124 + 8);
            v160(v143, v149);
          }

          uint64_t v172 = v198;
          Class v171 = isa;
          uint64_t v173 = v203;
          v174 = v200;
          v175 = sub_100350964();
          if (v175)
          {
            v176 = v175;
            uint64_t v177 = sub_10027AC68();
            *(void *)(v177 + 16) = v174;
            v208 = sub_100357300;
            uint64_t v209 = v177;
            v205[0] = (uint64_t)_NSConcreteStackBlock;
            sub_100357AE8(COERCE_DOUBLE(1107296256));
            v206 = sub_100351174;
            v207 = &unk_100516188;
            v178 = _Block_copy(v205);
            id v179 = v174;
            swift_release();
            id v180 = v191;
            [v176 startMediaRequest:v191 completion:v178];
            _Block_release(v178);
          }
          else
          {
          }
          v160(v193, v197);
          sub_100235804(v172, &qword_1005878F0);
          (*((void (**)(char *, uint64_t))v171 + 1))(v201, v173);
          goto LABEL_41;
        }
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v128 = Logger.logObject.getter();
        os_log_type_t v129 = static os_log_type_t.error.getter();
        if (sub_10027D4F8(v129))
        {
          uint64_t v130 = (uint8_t *)sub_100235B18();
          unint64_t v131 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v130 = 138412290;
          swift_errorRetain();
          uint64_t v132 = _swift_stdlib_bridgeErrorToNSError();
          v205[0] = v132;
          unint64_t v93 = v200;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v131 = v132;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v128, v110, "Error while starting media request for update: %@", v130, 0xCu);
          sub_1001F081C(&qword_100585900);
          swift_arrayDestroy();
          sub_1001F63CC();
          sub_1001F63CC();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        v161 = *(void **)&v93[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
        if (!v161)
        {
          swift_errorRelease();

          sub_1001F7664();
          v169();
          sub_100235804(v74, &qword_1005878F0);
          sub_1001F7664();
          v170();
          goto LABEL_41;
        }
        uint64_t v162 = sub_10027AC68();
        *(void *)(v162 + 16) = v93;
        v208 = sub_100357980;
        uint64_t v209 = v162;
        v205[0] = (uint64_t)_NSConcreteStackBlock;
        sub_100357AE8(COERCE_DOUBLE(1107296256));
        v206 = sub_1002C2C88;
        v207 = &unk_100516138;
        v163 = _Block_copy(v205);
        v164 = v93;
        id v165 = v161;
        static DispatchQoS.unspecified.getter();
        v204 = _swiftEmptyArrayStorage;
        sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1001F081C((uint64_t *)&unk_100584B00);
        sub_1001F6030();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v163);

        swift_errorRelease();
        sub_1001F7664();
        v166();
        sub_1001F7664();
        v167();
        sub_1001F7664();
        v168();
        sub_100235804(v74, &qword_1005878F0);
        (*((void (**)(char *, uint64_t))isa + 1))(v201, v203);
LABEL_34:
        swift_release();
        goto LABEL_41;
      }
      sub_100235804((uint64_t)v100.super.isa, &qword_1005878F0);
      uint64_t v111 = (void *)Logger.logObject.getter();
      os_log_type_t v112 = static os_log_type_t.error.getter();
      if (sub_10026B89C(v112))
      {
        uint64_t v113 = (_WORD *)sub_100246544();
        sub_100246668(v113);
        sub_100246944((void *)&_mh_execute_header, v114, v115, "Unable to create a sandbox directory while updating recording tokens. Treating recording as ended");
        sub_1001F63CC();
      }

      uint64_t v116 = *(void **)&v93[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
      if (v116)
      {
        uint64_t v117 = sub_10027AC68();
        *(void *)(v117 + 16) = v93;
        v208 = sub_1003572E4;
        uint64_t v209 = v117;
        v205[0] = (uint64_t)_NSConcreteStackBlock;
        sub_100357AE8(COERCE_DOUBLE(1107296256));
        v206 = sub_1002C2C88;
        v207 = &unk_1005160E8;
        uint64_t v118 = _Block_copy(v205);
        id v119 = v93;
        id v120 = v116;
        static DispatchQoS.unspecified.getter();
        v204 = _swiftEmptyArrayStorage;
        sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1001F081C((uint64_t *)&unk_100584B00);
        sub_1001F6030();
        sub_100357A7C();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v118);

        sub_1001F7664();
        v121();
        sub_1001F7664();
        v122();
        sub_100235804(v74, &qword_1005878F0);
        sub_100235D38();
        v123();
        goto LABEL_34;
      }

      sub_100235804(v74, &qword_1005878F0);
    }
    else
    {
      unint64_t v104 = (void *)Logger.logObject.getter();
      os_log_type_t v105 = static os_log_type_t.error.getter();
      if (sub_10026B89C(v105))
      {
        uint64_t v106 = (_WORD *)sub_100246544();
        sub_100246668(v106);
        sub_100246944((void *)&_mh_execute_header, v107, v108, "No current call for recording session, cannot update tokens");
        sub_1001F63CC();
      }
    }
    sub_100235D38();
    v133();
    goto LABEL_41;
  }
  sub_100235804((uint64_t)v32, (uint64_t *)&unk_100585580);
  uint64_t v60 = (void *)Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.error.getter();
  if (sub_10026B89C(v61))
  {
    Swift::OpaquePointer_optional v62 = (_WORD *)sub_100246544();
    sub_100246668(v62);
    sub_100246944((void *)&_mh_execute_header, v63, v64, "No current messageUUID, cannot update tokens");
    sub_1001F63CC();
  }

LABEL_41:
  sub_1001FCC08();
}

void sub_100355A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_100583A20 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1001F5F88(v8, (uint64_t)qword_100594C58);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v20 = v18;
      *(_DWORD *)uint64_t v11 = 138412546;
      os_log_t v17 = v9;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v19 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v11 + 12) = 2080;
      sub_1003578C8((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v19 = sub_1002344D8(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      os_log_t v16 = v17;
      _os_log_impl((void *)&_mh_execute_header, v17, v10, "Error while peforming end media request (due to token update) %@ with UUID: %s", (uint8_t *)v11, 0x16u);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

void sub_100355D90()
{
  sub_1001FCC38();
  uint64_t v28 = v0;
  uint64_t v29 = v1;
  v27[1] = v2;
  uint64_t v4 = v3;
  uint64_t v30 = v5;
  uint64_t v7 = v6;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10021EA1C();
  sub_1001F6398();
  uint64_t v31 = v12;
  uint64_t v32 = v11;
  __chkstk_darwin(v11);
  sub_1002024D0();
  uint64_t v13 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v14 = sub_1002462DC(v13);
  uint64_t v16 = v15;
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v14);
  uint64_t v19 = *(void **)&v4[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
  if (v19)
  {
    v27[0] = v9;
    sub_10025E234(v7, (uint64_t)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100585580);
    unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v4;
    sub_100273CB0((uint64_t)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, (uint64_t *)&unk_100585580);
    *(void *)(v21 + ((v18 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
    v34[4] = v28;
    v34[5] = v21;
    v34[0] = _NSConcreteStackBlock;
    sub_10021EAFC(COERCE_DOUBLE(1107296256));
    v34[2] = sub_1002C2C88;
    v34[3] = v29;
    uint64_t v22 = _Block_copy(v34);
    id v23 = v19;
    uint64_t v24 = v4;
    swift_errorRetain();
    static DispatchQoS.unspecified.getter();
    uint64_t v33 = _swiftEmptyArrayStorage;
    sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_1001F6030();
    sub_100277464();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    sub_100357A48();
    _Block_release(v22);

    sub_1001F7664();
    v25();
    sub_1001F7664();
    v26();
    swift_release();
  }
  sub_1001FCC08();
}

uint64_t sub_100356024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001F081C((uint64_t *)&unk_100585580);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate;
  swift_beginAccess();
  sub_10025E234(v9, (uint64_t)v15, &qword_10058B030);
  if (!v16) {
    return sub_100235804((uint64_t)v15, &qword_10058B030);
  }
  sub_10020ED28((uint64_t)v15, (uint64_t)v14);
  sub_100235804((uint64_t)v15, &qword_10058B030);
  sub_100204074(v14, v14[3]);
  uint64_t v10 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_currentlyEndingRecordingDueToUpdate;
  swift_beginAccess();
  sub_10025E234(v10, (uint64_t)v8, (uint64_t *)&unk_100585580);
  if (a3) {
    uint64_t v11 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v11 = 0;
  }
  sub_100331464((uint64_t)v8, a2, v11);

  sub_100235804((uint64_t)v8, (uint64_t *)&unk_100585580);
  return sub_1002018DC((uint64_t)v14);
}

uint64_t sub_1003561A4()
{
  sub_100357450();
  swift_allocError();
  sub_1003561FC();

  return swift_errorRelease();
}

void sub_1003561FC()
{
  sub_1001FCC38();
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v1);
  sub_10021EA1C();
  sub_1001F6398();
  __chkstk_darwin(v2);
  sub_1002024D0();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
  if (v3)
  {
    uint64_t v4 = sub_10027AC68();
    *(void *)(v4 + 16) = v0;
    v11[4] = sub_100357290;
    void v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    sub_10021EAFC(COERCE_DOUBLE(1107296256));
    v11[2] = sub_1002C2C88;
    v11[3] = &unk_100516098;
    uint64_t v5 = _Block_copy(v11);
    id v6 = v3;
    uint64_t v7 = v0;
    static DispatchQoS.unspecified.getter();
    sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_1001F6030();
    sub_100277464();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v5);

    sub_10026B7C0();
    v8();
    uint64_t v9 = sub_10026B75C();
    v10(v9);
    swift_release();
  }
  sub_1001FCC08();
}

void sub_1003563E8(uint64_t a1)
{
  uint64_t v2 = sub_1001F081C((uint64_t *)&unk_100585580);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_endTimeout))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
  }
  sub_10035094C(0);
  uint64_t v5 = type metadata accessor for UUID();
  sub_1001F0530((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_currentlyEndingRecordingDueToUpdate;
  swift_beginAccess();
  sub_100202264((uint64_t)v4, v6);
  swift_endAccess();
  uint64_t v7 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate;
  swift_beginAccess();
  sub_10025E234(v7, (uint64_t)v10, &qword_10058B030);
  if (v11)
  {
    sub_10020ED28((uint64_t)v10, (uint64_t)v9);
    sub_100235804((uint64_t)v10, &qword_10058B030);
    sub_100204074(v9, v9[3]);
    sub_1001F0530((uint64_t)v4, 1, 1, v5);
    sub_100331DFC();
    sub_100235804((uint64_t)v4, (uint64_t *)&unk_100585580);
    sub_1002018DC((uint64_t)v9);
  }
  else
  {
    sub_100235804((uint64_t)v10, &qword_10058B030);
  }
  sub_100350940(0);
}

void sub_1003565A8()
{
}

id sub_1003565E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordingProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003566E8()
{
  return type metadata accessor for RecordingProvider();
}

uint64_t type metadata accessor for RecordingProvider()
{
  uint64_t result = qword_10058AFB8;
  if (!qword_10058AFB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100356738()
{
  type metadata accessor for LanguageManager();
  if (v0 <= 0x3F)
  {
    sub_100201688();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100356834()
{
  sub_1001FCC38();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v6 = sub_100202384(v5);
  __chkstk_darwin(v6);
  sub_100332EE8();
  uint64_t v7 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10024672C();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v44 - v15;
  sub_1002B8138();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - v17;
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = sub_1001F5F88(v19, (uint64_t)qword_100594C58);
  id v21 = v4;
  uint64_t v47 = v20;
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.info.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v49 = v13;
  if (v24)
  {
    uint64_t v25 = sub_100235B18();
    uint64_t v48 = v18;
    uint64_t v26 = (_DWORD *)v25;
    uint64_t v27 = sub_100202470();
    uint64_t v45 = v9;
    uint64_t v52 = (uint64_t)v21;
    uint64_t v53 = v27;
    uint64_t v46 = (uint8_t *)v7;
    *uint64_t v26 = 136315138;
    uint64_t v44 = v26 + 1;
    sub_1001F6204(0, &qword_10058B038);
    uint64_t v28 = v2;
    id v29 = v21;
    uint64_t v30 = String.init<A>(reflecting:)();
    uint64_t v32 = sub_1002344D8(v30, v31, &v53);
    sub_100235DD0(v32);
    uint64_t v7 = (uint64_t)v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v2 = v28;
    swift_bridgeObjectRelease();
    sub_100357ABC((void *)&_mh_execute_header, v22, v23, "Moments controller reported that recording is finished %s");
    swift_arrayDestroy();
    uint64_t v9 = v45;
    sub_1001F63CC();
    uint64_t v18 = v48;
    sub_1001F63CC();
  }
  else
  {
  }
  uint64_t v33 = v2 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_currentlyEndingRecordingDueToUpdate;
  sub_1002022F8();
  sub_10025E234(v33, v1, (uint64_t *)&unk_100585580);
  if (sub_1001F758C(v1, 1, v7) == 1)
  {
    sub_100235804(v1, (uint64_t *)&unk_100585580);
LABEL_12:
    sub_1003561FC();
    goto LABEL_15;
  }
  sub_100357AF4();
  v34();
  id v35 = [v21 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v35) = static UUID.== infix(_:_:)();
  uint64_t v36 = *(void (**)(void))(v9 + 8);
  sub_100235D38();
  v36();
  if ((v35 & 1) == 0)
  {
    ((void (*)(char *, uint64_t))v36)(v18, v7);
    goto LABEL_12;
  }
  uint64_t v37 = *(void (**)(void))(v9 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v37)(v49, v18, v7);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v48 = v18;
    uint64_t v40 = (uint8_t *)sub_100235B18();
    uint64_t v47 = sub_100202470();
    uint64_t v52 = v47;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v46 = v40 + 4;
    sub_1002468D0();
    v37();
    uint64_t v41 = String.init<A>(reflecting:)();
    uint64_t v51 = sub_1002344D8(v41, v42, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100235D38();
    v36();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Moments request ended due to updating tokens, not ending recording session entirely %s", v40, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();

    uint64_t v43 = v48;
  }
  else
  {

    sub_100235D38();
    v36();
    uint64_t v43 = v18;
  }
  ((void (*)(char *, uint64_t))v36)(v43, v7);
LABEL_15:
  sub_1001FCC08();
}

void sub_100356D6C()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v2);
  sub_10021EA1C();
  sub_1001F6398();
  __chkstk_darwin(v3);
  sub_1002024D0();
  if (qword_100583A20 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1001F5F88(v4, (uint64_t)qword_100594C58);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)sub_100246544();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Moments controller server died, ending recording if necessary", v7, 2u);
    sub_1001F63CC();
  }

  if (*(void *)&v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider__momentsController])
  {
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegateQueue];
    if (v8)
    {
      uint64_t v9 = sub_10027AC68();
      *(void *)(v9 + 16) = v1;
      v16[4] = sub_100357994;
      v16[5] = v9;
      v16[0] = _NSConcreteStackBlock;
      sub_10021EAFC(COERCE_DOUBLE(1107296256));
      v16[2] = sub_1002C2C88;
      v16[3] = &unk_100516048;
      uint64_t v10 = _Block_copy(v16);
      id v11 = v8;
      uint64_t v12 = v1;
      static DispatchQoS.unspecified.getter();
      sub_1003578C8((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_100277464();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100357A48();
      _Block_release(v10);

      sub_10026B7C0();
      v13();
      uint64_t v14 = sub_10026B75C();
      v15(v14);
      swift_release();
    }
  }
  sub_1001FCC08();
}

void sub_100356FFC(uint64_t a1)
{
  uint64_t v3 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_100202310();
  uint64_t v5 = a1 + OBJC_IVAR____TtC13callservicesd17RecordingProvider_delegate;
  sub_1002022F8();
  sub_10025E234(v5, (uint64_t)v8, &qword_10058B030);
  if (v9)
  {
    sub_10020ED28((uint64_t)v8, (uint64_t)v7);
    sub_100235804((uint64_t)v8, &qword_10058B030);
    sub_100204074(v7, v7[3]);
    uint64_t v6 = type metadata accessor for UUID();
    sub_1003579E4(v6);
    sub_100331DFC();
    sub_100235804(v1, (uint64_t *)&unk_100585580);
    sub_1002018DC((uint64_t)v7);
  }
  else
  {
    sub_100235804((uint64_t)v8, &qword_10058B030);
  }
  sub_100350940(0);
}

uint64_t sub_100357174()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003571AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003571BC()
{
  return swift_release();
}

id sub_1003571C4()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = 0;
  id v2 = [v0 initWithName:v1 error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

void sub_100357290()
{
  sub_1003563E8(*(void *)(v0 + 16));
}

unint64_t sub_100357298()
{
  unint64_t result = qword_10058B040;
  if (!qword_10058B040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B040);
  }
  return result;
}

uint64_t sub_1003572E4()
{
  return sub_1003561A4();
}

void sub_100357300()
{
}

uint64_t sub_100357340()
{
  type metadata accessor for UUID();
  sub_10020233C();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_1001F7664();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

void sub_1003573C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100355A2C(a1, v4);
}

uint64_t sub_100357438()
{
  return sub_100357770((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_100356024);
}

unint64_t sub_100357450()
{
  unint64_t result = qword_10058B068;
  if (!qword_10058B068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B068);
  }
  return result;
}

void sub_10035749C()
{
  sub_100356FFC(*(void *)(v0 + 16));
}

uint64_t sub_1003574B8()
{
  return sub_100353FBC();
}

uint64_t sub_1003574C0()
{
  type metadata accessor for UUID();
  sub_10020233C();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001F7664();
  v5();

  return _swift_deallocObject(v0, v4 + 8, v3);
}

void sub_100357558(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  sub_1002462DC(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1003540D4(a1, v1 + v8, v9);
}

uint64_t sub_1003575D0()
{
  return sub_100351FE8(*(void *)(v0 + 16));
}

uint64_t sub_1003575D8()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100357618()
{
  return sub_100352F6C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100357620()
{
}

uint64_t sub_100357664()
{
  uint64_t v1 = sub_1001F081C((uint64_t *)&unk_100585580);
  sub_1002462DC(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);

  uint64_t v7 = type metadata accessor for UUID();
  if (!sub_1001F758C(v0 + v4, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v4, v7);
  }
  swift_errorRelease();

  return _swift_deallocObject(v0, ((v6 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_100357758()
{
  return sub_100357770((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_100352E84);
}

uint64_t sub_100357770(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = sub_1001F081C((uint64_t *)&unk_100585580);
  sub_1002462DC(v2);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v8, v1 + v7, v9);
}

uint64_t sub_1003577F4(void *a1)
{
  id v2 = [a1 normalizedValue];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100357864(void *a1)
{
  id v1 = [a1 localMemberHandleValue];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1003578C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingProviderError()
{
  return &type metadata for RecordingProviderError;
}

void sub_1003579B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 304) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v10 - 312) = v9;
}

uint64_t sub_1003579E4(uint64_t a1)
{
  return sub_1001F0530(v1, 1, 1, a1);
}

uint64_t sub_100357A04()
{
  return 0x40255F4025;
}

void sub_100357A18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(v2 + a2);
  *(void *)(v2 + a2) = a1;
}

id sub_100357A24()
{
  return sub_1003571C4();
}

uint64_t sub_100357A48()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_100357A6C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_100357A88(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_100357ABC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_100357AD4()
{
  return v0 - 184;
}

void sub_100357AE8(double a1)
{
  *(double *)(v1 - 176) = a1;
}

uint64_t sub_100357B00(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return v1 - 128;
}

void sub_100357B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
}

double sub_100357B28@<D0>(uint64_t a1@<X8>)
{
  long long v27 = 0uLL;
  long long v29 = 0uLL;
  uint64_t v28 = _swiftEmptyDictionarySingleton;
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, "tu_defaults");
  NSString v4 = sub_10035997C();
  id v5 = [v3 stringForKey:v4];

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    *(void *)&long long v27 = v6;
    *((void *)&v27 + 1) = v8;
  }
  id v9 = objc_msgSend(v2, "tu_defaults");
  NSString v10 = sub_1003599D8();
  id v11 = [v9 objectForKey:v10];

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v26, 0, sizeof(v26));
  }
  sub_10023C59C((uint64_t)v26, (uint64_t)&v22, (uint64_t *)&unk_100584CA0);
  if ((void)v24)
  {
    sub_1001F081C((uint64_t *)&unk_100586440);
    if (swift_dynamicCast()) {
      uint64_t v12 = v25;
    }
    else {
      uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)v12;
  }
  else
  {
    sub_100202D2C((uint64_t)&v22);
  }
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1001F5F88(v13, (uint64_t)qword_100594C28);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_beginAccess();
    long long v22 = v27;
    os_log_type_t v23 = v28;
    long long v24 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = String.init<A>(reflecting:)();
    *(void *)&long long v22 = sub_1002344D8(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "initialized Defaults: %s", v16, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }

  swift_beginAccess();
  sub_100357EA8();
  swift_endAccess();
  uint64_t v19 = v28;
  double result = *(double *)&v27;
  long long v21 = v29;
  *(_OWORD *)a1 = v27;
  *(void *)(a1 + 16) = v19;
  *(_OWORD *)(a1 + 24) = v21;
  return result;
}

void sub_100357EA8()
{
  uint64_t v0 = type metadata accessor for SHA256();
  sub_1001F6398();
  *(void *)&long long v61 = v1;
  __chkstk_darwin(v2);
  sub_1001F2514();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for SHA256Digest();
  sub_1001F6398();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  type metadata accessor for URL();
  sub_1001F6398();
  __chkstk_darwin(v15);
  sub_1001F2514();
  URL.init(fileURLWithPath:)();
  uint64_t v16 = Data.init(contentsOf:options:)();
  id v55 = v12;
  uint64_t v56 = v14;
  uint64_t v21 = v61;
  unint64_t v58 = v22;
  uint64_t v59 = v16;
  uint64_t v57 = v8;
  uint64_t v23 = sub_100359A1C();
  v24(v23);
  sub_1001F74F0((unint64_t *)&qword_100584830, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  unint64_t v25 = v58;
  uint64_t v26 = v21;
  uint64_t v27 = v6;
  switch(v58 >> 62)
  {
    case 1uLL:
      uint64_t v30 = v59;
      unint64_t v31 = v55;
      if (v30 >> 32 < (int)v30) {
        goto LABEL_29;
      }
      unint64_t v53 = v58 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v54 = (int)v59;
      sub_1001F7440(v59, v58);
      sub_1003592BC(v54, v30 >> 32);
      sub_1001F7498(v30, v25);
      break;
    case 2uLL:
      uint64_t v32 = v59;
      uint64_t v33 = *(void *)(v59 + 16);
      uint64_t v54 = *(void *)(v59 + 24);
      sub_1001F7440(v59, v58);
      swift_retain();
      swift_retain();
      sub_1003592BC(v33, v54);
      swift_release();
      swift_release();
      sub_1001F7498(v32, v25);
      goto LABEL_12;
    case 3uLL:
      sub_10035939C();
      uint64_t v29 = v59;
      goto LABEL_11;
    default:
      uint64_t v28 = v59;
      sub_10035939C();
      uint64_t v29 = v28;
LABEL_11:
      sub_1001F7498(v29, v25);
LABEL_12:
      unint64_t v31 = v55;
      break;
  }
  Class v34 = v56;
  dispatch thunk of HashFunction.finalize()();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v0);
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v31, v34, v27);
  sub_1001F74F0(&qword_100584838, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  id v55 = (char *)v27;
  dispatch thunk of Sequence.makeIterator()();
  id v35 = v62;
  uint64_t v36 = v63;
  uint64_t v37 = v62[2];
  if (v63 == v37)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v57 + 8))(v56, v55);
    Swift::OpaquePointer_optional v62 = v38;
    sub_1001F081C(&qword_10058B600);
    sub_1001F7538();
    uint64_t v39 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v41 = v40;
    sub_1001F7498(v59, v58);
    swift_bridgeObjectRelease();
    uint64_t v42 = v60;
    swift_bridgeObjectRelease();
    *(void *)(v42 + 24) = v39;
    *(void *)(v42 + 32) = v41;
  }
  else
  {
    if (v63 >= v37)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      JUMPOUT(0x1003584B4);
    }
    uint64_t v38 = _swiftEmptyArrayStorage;
    long long v61 = xmmword_10048F550;
    unint64_t v43 = v63;
    while ((v36 & 0x8000000000000000) == 0)
    {
      if (v43 >= v35[2]) {
        goto LABEL_28;
      }
      char v44 = *((unsigned char *)v35 + v43 + 32);
      sub_1001F081C(&qword_100584B20);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v61;
      *(void *)(v45 + 56) = &type metadata for UInt8;
      *(void *)(v45 + 64) = &protocol witness table for UInt8;
      *(unsigned char *)(v45 + 32) = v44;
      uint64_t v46 = String.init(format:_:)();
      uint64_t v48 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        uint64_t v38 = v51;
      }
      unint64_t v49 = v38[2];
      if (v49 >= v38[3] >> 1)
      {
        sub_1003A47C8();
        uint64_t v38 = v52;
      }
      ++v43;
      v38[2] = v49 + 1;
      uint64_t v50 = &v38[2 * v49];
      v50[4] = v46;
      v50[5] = v48;
      if (v37 == v43) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    swift_once();
    uint64_t v17 = type metadata accessor for Logger();
    sub_1001F5F88(v17, (uint64_t)qword_100594C28);
    unint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "couldn't read contents of toneURL", v20, 2u);
      sub_1001F63CC();
    }
  }
}

void sub_1003584C4()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, "tu_defaults");
  sub_10023C59C(v0, (uint64_t)v8, (uint64_t *)&unk_100586180);
  sub_10023C59C((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_100586180);
  if (v9[1]) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0;
  }
  NSString v4 = sub_10035997C();
  [v2 setObject:v3 forKey:v4];

  swift_unknownObjectRelease();
  id v5 = objc_msgSend(v1, "tu_defaults");
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  NSString v7 = sub_1003599D8();
  [v5 setObject:isa forKey:v7];
}

uint64_t sub_100358604(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10022337C(a1, a2, v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (v10)
    {
      if (v5 != v8 || v6 != v10)
      {
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v13 = v12 ^ 1;
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    char v13 = 1;
    goto LABEL_12;
  }
  if (v10) {
    goto LABEL_9;
  }
LABEL_11:
  char v13 = 0;
LABEL_12:
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1001F5F88(v14, (uint64_t)qword_100594C28);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    sub_1003599A8(1.5047e-36);
    sub_100359A4C();
    sub_1002344D8(a1, a2, &v20);
    sub_1003599F8();
    swift_bridgeObjectRelease_n();
    sub_100359A6C((void *)&_mh_execute_header, v17, v18, "Beep changed=%{BOOL}d for %s");
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v13 & 1;
}

uint64_t sub_100358820(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = v2[1];
  if (v5)
  {
    if (*v2 == a1 && v5 == a2) {
      char v7 = 0;
    }
    else {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
    }
  }
  else
  {
    char v7 = 1;
  }
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1001F5F88(v8, (uint64_t)qword_100594C28);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    sub_1003599A8(1.5047e-36);
    sub_100359A4C();
    sub_1002344D8(a1, a2, &v14);
    sub_1003599F8();
    swift_bridgeObjectRelease_n();
    sub_100359A6C((void *)&_mh_execute_header, v11, v12, "Siri utterance changed=%{BOOL}d for: %s");
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v7 & 1;
}

void sub_1003589C8(uint64_t a1, uint64_t a2)
{
  void *v2 = a1;
  v2[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  NSString v3 = self;
  id v4 = objc_msgSend(v3, "tu_defaults");
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = sub_10035997C();
  [v4 setObject:v5 forKey:v6];

  id v7 = objc_msgSend(v3, "tu_defaults");
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v9 = sub_1003599D8();
  [v7 setObject:isa forKey:v9];
}

void sub_100358B04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  if (v5)
  {
    uint64_t v6 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10027FBB4(v6, v5, a1, a2);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1002CEA94(a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1003584C4();
}

uint64_t sub_100358BC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6565724769726973 && a2 == 0xEC000000676E6974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010048AB40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6365684370656562 && a2 == 0xEC0000006D75736BLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100358D3C()
{
  return 3;
}

uint64_t sub_100358D44(char a1)
{
  if (!a1) {
    return 0x6565724769726973;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0x6365684370656562;
}

uint64_t sub_100358DB0(void *a1)
{
  uint64_t v3 = sub_1001F081C(&qword_10058B0A0);
  sub_1001F6398();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001F2514();
  uint64_t v9 = v8 - v7;
  sub_100204074(a1, a1[3]);
  sub_1003596D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    sub_1001F081C((uint64_t *)&unk_100586440);
    sub_100359724(&qword_10058B0A8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100358F50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1001F081C(&qword_10058B088);
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001F2514();
  uint64_t v11 = v10 - v9;
  sub_100204074(a1, a1[3]);
  sub_1003596D8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_1002018DC((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v14 = v13;
    sub_1001F081C((uint64_t *)&unk_100586440);
    sub_100359724(&qword_10058B098);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v16 = v11;
    uint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v5);
    uint64_t result = sub_1002018DC((uint64_t)a1);
    *a2 = v12;
    a2[1] = v14;
    a2[2] = v20;
    a2[3] = v15;
    a2[4] = v18;
  }
  return result;
}

uint64_t sub_100359184()
{
  return sub_100358D44(*v0);
}

uint64_t sub_10035918C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100358BC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003591B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100358D3C();
  *a1 = result;
  return result;
}

uint64_t sub_1003591DC(uint64_t a1)
{
  unint64_t v2 = sub_1003596D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100359218(uint64_t a1)
{
  unint64_t v2 = sub_1003596D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100359254@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100358F50(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10035929C(void *a1)
{
  return sub_100358DB0(a1);
}

uint64_t sub_1003592BC(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for SHA256();
      sub_1001F74F0((unint64_t *)&qword_100584830, (void (*)(uint64_t))&type metadata accessor for SHA256);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10035939C()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t destroy for GreetingsChecksums()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GreetingsChecksums(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GreetingsChecksums(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GreetingsChecksums(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GreetingsChecksums(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GreetingsChecksums(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GreetingsChecksums()
{
  return &type metadata for GreetingsChecksums;
}

unint64_t sub_1003596D8()
{
  unint64_t result = qword_10058B090;
  if (!qword_10058B090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B090);
  }
  return result;
}

uint64_t sub_100359724(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001F08B4((uint64_t *)&unk_100586440);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GreetingsChecksums.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100359854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GreetingsChecksums.CodingKeys()
{
  return &type metadata for GreetingsChecksums.CodingKeys;
}

unint64_t sub_100359890()
{
  unint64_t result = qword_10058B0B0;
  if (!qword_10058B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B0B0);
  }
  return result;
}

unint64_t sub_1003598E0()
{
  unint64_t result = qword_10058B0B8;
  if (!qword_10058B0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B0B8);
  }
  return result;
}

unint64_t sub_100359930()
{
  unint64_t result = qword_10058B0C0;
  if (!qword_10058B0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B0C0);
  }
  return result;
}

NSString sub_10035997C()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1003599A8(float a1)
{
  float *v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

NSString sub_1003599D8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1003599F8()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100359A1C()
{
  return v0;
}

uint64_t sub_100359A34()
{
  return v0;
}

uint64_t sub_100359A4C()
{
  *(_WORD *)(v0 + 8) = 2080;
  return swift_bridgeObjectRetain();
}

void sub_100359A6C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x12u);
}

id sub_100359A90()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithBundleIdentifier:v1];

  return v2;
}

void (*sub_100359B04(void *a1))(uint64_t a1)
{
  id v2 = malloc(0x40uLL);
  *a1 = v2;
  v2[4] = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v4 = v3;
  v2[5] = v3;
  os_log_type_t v6 = malloc(*(void *)(v5 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_10035EFFC(v2, (uint64_t)v6);
  return sub_100359BCC;
}

void sub_100359BCC(uint64_t a1)
{
  NSString v1 = *(void **)a1;
  id v2 = *(void **)(*(void *)a1 + 48);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = sub_100361B34();
  v6(v5);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

void (*sub_100359C38(void *a1, char a2))(void **a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_10035F1A8(v4, a2 & 1);
  return sub_100359C98;
}

void sub_100359C98(void **a1)
{
  NSString v1 = *a1;
  uint64_t v2 = sub_100361B34();
  v3(v2);

  free(v1);
}

void sub_100359CD8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_100359D40(uint64_t a1)
{
  [v1 setDelegate:a1];

  return swift_unknownObjectRelease();
}

id sub_100359D8C()
{
  return [v0 setWantsNotificationResponsesDelivered];
}

void sub_100359DA0()
{
  sub_1001F6204(0, (unint64_t *)&unk_1005887B0);
  sub_1003619F4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  [v0 setNotificationCategories:isa];
}

void sub_100359E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    v6[4] = a2;
    v6[5] = a3;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    _OWORD v6[2] = sub_1003629D8;
    v6[3] = &unk_100516988;
    uint64_t v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v5 = 0;
  }
  [v3 addNotificationRequest:a1 withCompletionHandler:v5];
  _Block_release(v5);
}

void sub_100359F04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  os_log_type_t v6 = v5;
  NSString v10 = String._bridgeToObjectiveC()();
  if (a4)
  {
    v11[4] = a4;
    void v11[5] = a5;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1003629D8;
    v11[3] = &unk_100516960;
    a4 = _Block_copy(v11);
    swift_retain();
    swift_release();
  }
  [v6 replaceContentForRequestWithIdentifier:v10 replacementContent:a3 completionHandler:a4];
  _Block_release(a4);
}

void sub_100359FE8()
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v0 removeDeliveredNotificationsWithIdentifiers:isa];
}

void sub_10035A040(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  os_log_type_t v6 = a3;
  if (!a2)
  {
    NSString v7 = 0;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  if (v6)
  {
LABEL_3:
    v8[4] = v6;
    void v8[5] = a4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1003629D8;
    v8[3] = &unk_100516938;
    os_log_type_t v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
LABEL_4:
  [v4 setBadgeString:v7 withCompletionHandler:v6];
  _Block_release(v6);
}

void sub_10035A124(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR___CSDUserNotificationController_faceTimeNotificationCenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, ObjectType, v2);
  (*(void (**)(uint64_t, uint64_t))(v2 + 32))(ObjectType, v2);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR___CSDUserNotificationController_phoneNotificationCenter + 8);
  uint64_t v7 = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v9 = swift_unknownObjectRetain();
  v8(v9, v7, v6);
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v7, v6);
  sub_10035AD24();
  sub_1001F081C(&qword_10058B208);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10048FB00;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = &_swiftEmptySetSingleton;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = &_swiftEmptySetSingleton;
  sub_1001F081C(&qword_10058B210);
  sub_100361808();
  uint64_t v109 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v11 = (uint64_t *)(a1 + OBJC_IVAR___CSDUserNotificationController_providers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v105 = a1;
  uint64_t v97 = *(void *)(v12 + 16);
  if (!v97)
  {
LABEL_20:
    dispatch thunk of BadgeManager.startObservingForStoreBadgeCountUpdate()();
    if (qword_100583A38 == -1) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
  uint64_t v13 = (void *)(a1 + OBJC_IVAR___CSDUserNotificationController_providersByIdentifier);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v95 = v13;
  uint64_t v96 = v12;
  while (1)
  {
    long long v106 = *(_OWORD *)(v12 + 16 * v14 + 32);
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = *(void (**)(uint64_t, void))(*((void *)&v106 + 1) + 16);
    swift_unknownObjectRetain();
    v16(v15, *((void *)&v106 + 1));
    uint64_t v17 = sub_10035B570();
    uint64_t v100 = v18;
    id v101 = (uint64_t (*)(uint64_t, void))v16;
    uint64_t v103 = v17;
    uint64_t v104 = v14;
    if (((uint64_t (*)(uint64_t, void))v16)(v15, *((void *)&v106 + 1)))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        id v20 = (id)TUPreferredFaceTimeBundleIdentifier();
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v98 = v22;
        uint64_t v99 = v21;

        goto LABEL_8;
      }
    }
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v98 = v24;
    uint64_t v99 = v23;
LABEL_8:
    uint64_t v102 = v15;
    uint64_t v25 = (*(uint64_t (**)(uint64_t, void))(*((void *)&v106 + 1) + 8))(v15, *((void *)&v106 + 1));
    uint64_t v27 = v26;
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v108 = (void *)*v13;
    uint64_t v29 = v108;
    uint64_t v30 = v13;
    *uint64_t v13 = 0x8000000000000000;
    unint64_t v31 = sub_100233664();
    uint64_t v33 = v29[2];
    BOOL v34 = (v32 & 1) == 0;
    Swift::Int v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    unint64_t v36 = v31;
    char v37 = v32;
    sub_1001F081C(&qword_10058B220);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v35))
    {
      unint64_t v38 = sub_100233664();
      if ((v37 & 1) != (v39 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return;
      }
      unint64_t v36 = v38;
    }
    uint64_t v40 = v108;
    if (v37)
    {
      uint64_t v41 = v108[7];
      swift_unknownObjectRelease();
      *(_OWORD *)(v41 + 16 * v36) = v106;
    }
    else
    {
      v108[(v36 >> 6) + 8] |= 1 << v36;
      uint64_t v42 = (uint64_t *)(v40[6] + 16 * v36);
      *uint64_t v42 = v25;
      v42[1] = v27;
      *(_OWORD *)(v40[7] + 16 * v36) = v106;
      uint64_t v43 = v40[2];
      BOOL v44 = __OFADD__(v43, 1);
      uint64_t v45 = v43 + 1;
      if (v44) {
        goto LABEL_54;
      }
      id v40[2] = v45;
      swift_bridgeObjectRetain();
    }
    *uint64_t v30 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = v46;
    v47[3] = v99;
    v47[4] = v98;
    v47[5] = v103;
    v47[6] = v100;
    uint64_t v48 = *(void (**)(void (*)(), void *, uint64_t, void))(*((void *)&v106 + 1) + 56);
    swift_retain();
    swift_unknownObjectRetain();
    v48(sub_1003618CC, v47, v102, *((void *)&v106 + 1));
    swift_release();
    uint64_t v49 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v50 = (void *)swift_allocObject();
    v50[2] = v49;
    v50[3] = v103;
    v50[4] = v100;
    uint64_t v51 = *(void (**)(void (*)(), void *, uint64_t, void))(*((void *)&v106 + 1) + 104);
    swift_unknownObjectRetain();
    swift_retain();
    v51(sub_1003618E0, v50, v102, *((void *)&v106 + 1));
    swift_release();
    uint64_t v52 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v52;
    *(_OWORD *)(v53 + 24) = v106;
    uint64_t v54 = *(void (**)(void (*)(), uint64_t, uint64_t, void))(*((void *)&v106 + 1) + 128);
    swift_unknownObjectRetain();
    swift_retain();
    v54(sub_1003618F0, v53, v102, *((void *)&v106 + 1));
    swift_release();
    uint64_t v55 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = v55;
    v56[3] = v103;
    v56[4] = v100;
    uint64_t v57 = *(void (**)(void (*)(), void *, uint64_t, void))(*((void *)&v106 + 1) + 80);
    swift_unknownObjectRetain();
    swift_retain();
    v57(sub_100361940, v56, v102, *((void *)&v106 + 1));
    swift_release();
    char v58 = v101(v102, *((void *)&v106 + 1));
    uint64_t v59 = sub_100359C38(v107, v58 & 1);
    if (*v60)
    {
      unint64_t v61 = (*(uint64_t (**)(uint64_t, void))(*((void *)&v106 + 1) + 24))(v102, *((void *)&v106 + 1));
      sub_10035CEFC(v61);
    }
    ((void (*)(void *, void))v59)(v107, 0);
    uint64_t v12 = v96;
    uint64_t v14 = v104 + 1;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v13 = v95;
    if (v97 == v104 + 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
  while (2)
  {
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    swift_once();
LABEL_21:
    uint64_t v62 = type metadata accessor for Logger();
    sub_1001F5F88(v62, (uint64_t)qword_100594CA0);
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Looking to merge badge count data", v65, 2u);
      swift_slowDealloc();
    }

    dispatch thunk of BadgeManager.mergeBadgeCountData(_:)();
    int64_t v66 = 0;
    uint64_t v67 = v109;
    uint64_t v69 = v109 + 64;
    uint64_t v68 = *(void *)(v109 + 64);
    uint64_t v70 = 1 << *(unsigned char *)(v109 + 32);
    uint64_t v71 = -1;
    if (v70 < 64) {
      uint64_t v71 = ~(-1 << v70);
    }
    unint64_t v72 = v71 & v68;
    int64_t v73 = (unint64_t)(v70 + 63) >> 6;
    if ((v71 & v68) != 0)
    {
LABEL_26:
      unint64_t v74 = __clz(__rbit64(v72));
      v72 &= v72 - 1;
      unint64_t v75 = v74 | (v66 << 6);
      goto LABEL_41;
    }
LABEL_27:
    int64_t v76 = v66 + 1;
    if (__OFADD__(v66, 1)) {
      continue;
    }
    break;
  }
  if (v76 >= v73) {
    goto LABEL_43;
  }
  unint64_t v77 = *(void *)(v69 + 8 * v76);
  ++v66;
  if (v77) {
    goto LABEL_40;
  }
  int64_t v66 = v76 + 1;
  if (v76 + 1 >= v73) {
    goto LABEL_43;
  }
  unint64_t v77 = *(void *)(v69 + 8 * v66);
  if (v77) {
    goto LABEL_40;
  }
  int64_t v66 = v76 + 2;
  if (v76 + 2 >= v73) {
    goto LABEL_43;
  }
  unint64_t v77 = *(void *)(v69 + 8 * v66);
  if (v77)
  {
LABEL_40:
    unint64_t v72 = (v77 - 1) & v77;
    unint64_t v75 = __clz(__rbit64(v77)) + (v66 << 6);
LABEL_41:
    uint64_t v79 = *(void *)(*(void *)(v67 + 56) + 8 * v75);
    swift_bridgeObjectRetain();
    sub_10035B570();
    uint64_t v81 = v80;
    uint64_t v82 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 40))(v79, v82, v81);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_10035BF88();
    if (v72) {
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  int64_t v78 = v76 + 3;
  if (v78 < v73)
  {
    unint64_t v77 = *(void *)(v69 + 8 * v78);
    if (!v77)
    {
      while (1)
      {
        int64_t v66 = v78 + 1;
        if (__OFADD__(v78, 1)) {
          goto LABEL_55;
        }
        if (v66 >= v73) {
          goto LABEL_43;
        }
        unint64_t v77 = *(void *)(v69 + 8 * v66);
        ++v78;
        if (v77) {
          goto LABEL_40;
        }
      }
    }
    int64_t v66 = v78;
    goto LABEL_40;
  }
LABEL_43:
  swift_release();
  if ([self isFaceTimePhotosXPCServiceEnabled])
  {
    uint64_t v83 = *(void **)(v105 + OBJC_IVAR___CSDUserNotificationController_clientManager);
    if (v83)
    {
      id v84 = v83;
      [v84 setRequiredConnectionCapability:@"modify-usernotifications"];
      id v85 = [self userNotificationProviderServerXPCInterface];
      [v84 setExportedInterface:v85];

      [v84 setExportedObject:v105];
      NSString v86 = String._bridgeToObjectiveC()();
      [v84 startListeningOnMachServiceWithName:v86];

      uint64_t v87 = v84;
      id v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = (uint8_t *)swift_slowAlloc();
        uint64_t v91 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v90 = 138412290;
        v107[0] = v87;
        uint64_t v87 = v87;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v91 = v83;

        _os_log_impl((void *)&_mh_execute_header, v88, v89, "Started broadcasting User notifications mach service with %@", v90, 0xCu);
        sub_1001F081C(&qword_100585900);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v88 = v87;
      }
    }
  }
  uint64_t v92 = Logger.logObject.getter();
  os_log_type_t v93 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v92, v93))
  {
    id v94 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v94 = 0;
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "Loaded user notification controller", v94, 2u);
    swift_slowDealloc();
  }
}

void sub_10035AD24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001F081C(&qword_100584B40);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v83 - v6;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR___CSDUserNotificationController_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    if (qword_100583A38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  id v84 = v7;
  uint64_t v14 = type metadata accessor for Logger();
  v83[1] = sub_1001F5F88(v14, (uint64_t)qword_100594CA0);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Updating providers", v17, 2u);
    swift_slowDealloc();
  }
  id v85 = v5;

  id v18 = [objc_allocWithZone((Class)CHManager) init];
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v19 = swift_allocObject();
  long long v86 = xmmword_10048F550;
  *(_OWORD *)(v19 + 16) = xmmword_10048F550;
  *(void *)(v19 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v19 + 40) = v20;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v86;
  *(void *)(v21 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v21 + 40) = v22;
  NSString v23 = (id)TUPreferredFaceTimeBundleIdentifier();
  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v24 = objc_msgSend(self, "tu_contactStoreConfigurationForBundleIdentifier:", v23);

  [v24 setIncludeLocalContacts:1];
  id v25 = objc_allocWithZone((Class)CNContactStore);
  v83[0] = v24;
  id v26 = [v25 initWithConfiguration:v24];
  *(void *)&long long v86 = type metadata accessor for CallHistoryNotificationProvider();
  uint64_t v27 = (char *)objc_allocWithZone((Class)v86);
  id v28 = v13;
  id v29 = v18;
  uint64_t v30 = sub_100360478(v28, (uint64_t)v29, (uint64_t)&off_10050B268, v19, 0, v27);
  unint64_t v31 = (uint64_t *)(v1 + OBJC_IVAR___CSDUserNotificationController_providers);
  swift_beginAccess();
  char v32 = v30;
  sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A5188);
  uint64_t v33 = *(void *)(*v31 + 16);
  sub_100398D14(v33);
  uint64_t v34 = *v31;
  *(void *)(v34 + 16) = v33 + 1;
  uint64_t v35 = v34 + 16 * v33;
  *(void *)(v35 + 32) = v32;
  *(void *)(v35 + 40) = &off_100512DD0;
  swift_endAccess();

  unint64_t v36 = self;
  id v37 = v28;
  id v38 = [v36 defaultCenter];
  id v39 = objc_allocWithZone((Class)type metadata accessor for CallRecordingNotificationProvider());
  uint64_t v40 = sub_1002F1E3C(v37, v38);
  swift_beginAccess();
  sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A5188);
  uint64_t v41 = *(void *)(*v31 + 16);
  sub_100398D14(v41);
  uint64_t v42 = *v31;
  *(void *)(v42 + 16) = v41 + 1;
  uint64_t v43 = v42 + 16 * v41;
  *(void *)(v43 + 32) = v40;
  *(void *)(v43 + 40) = &off_100513538;
  swift_endAccess();
  id v44 = v37;
  id v45 = v26;
  uint64_t v46 = sub_10035FB88(v44, v45);
  id v47 = v44;
  id v48 = v45;
  id v49 = [v36 defaultCenter];
  uint64_t v50 = objc_allocWithZone((Class)type metadata accessor for FaceTimeNotificationProvider());
  uint64_t v51 = sub_10035FC70(v47, v48, v49, v50);
  uint64_t v52 = (char *)objc_allocWithZone((Class)v86);
  id v53 = v47;
  id v54 = v29;
  uint64_t v55 = sub_100360478(v53, (uint64_t)v54, (uint64_t)&off_10050B298, v21, 1, v52);
  swift_beginAccess();
  uint64_t v56 = *(void *)(*v31 + 16);
  if (__OFADD__(v56, 3))
  {
    __break(1u);
  }
  else
  {
    sub_10035FB20(v56 + 3);
    swift_unknownObjectRetain();
    sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A5188);
    uint64_t v57 = *(void *)(*v31 + 16);
    sub_100398D14(v57);
    uint64_t v58 = *v31;
    *(void *)(v58 + 16) = v57 + 1;
    uint64_t v59 = v58 + 16 * v57;
    *(void *)(v59 + 32) = v46;
    *(void *)(v59 + 40) = &off_10050DBB8;
    swift_unknownObjectRetain();
    sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A5188);
    uint64_t v60 = *(void *)(*v31 + 16);
    sub_100398D14(v60);
    uint64_t v61 = *v31;
    *(void *)(v61 + 16) = v60 + 1;
    uint64_t v62 = v61 + 16 * v60;
    *(void *)(v62 + 32) = v51;
    *(void *)(v62 + 40) = &off_10050EB30;
    swift_unknownObjectRetain();
    sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A5188);
    uint64_t v63 = *(void *)(*v31 + 16);
    sub_100398D14(v63);
    uint64_t v64 = *v31;
    *(void *)(v64 + 16) = v63 + 1;
    uint64_t v65 = v64 + 16 * v63;
    *(void *)(v65 + 32) = v55;
    *(void *)(v65 + 40) = &off_100512DD0;
    swift_endAccess();

    uint64_t v66 = type metadata accessor for Date();
    uint64_t v67 = (uint64_t)v84;
    sub_1001F0530((uint64_t)v84, 1, 1, v66);
    uint64_t v68 = (uint64_t)v85;
    sub_1001F0530((uint64_t)v85, 1, 1, v66);
    id v69 = objc_allocWithZone((Class)VMVoicemailManager);
    id v70 = v53;
    id v71 = [v69 init];
    id v72 = [objc_allocWithZone((Class)TUFeatureFlags) init];
    int64_t v73 = (char *)objc_allocWithZone((Class)type metadata accessor for VoicemailNotificationProvider());
    unint64_t v74 = sub_100360B58(v70, (uint64_t)v71, v72, (uint64_t)&_swiftEmptySetSingleton, (uint64_t)&_swiftEmptySetSingleton, v67, v68, v73);
    swift_beginAccess();
    sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A5188);
    uint64_t v75 = *(void *)(*v31 + 16);
    sub_100398D14(v75);
    uint64_t v76 = *v31;
    *(void *)(v76 + 16) = v75 + 1;
    uint64_t v77 = v76 + 16 * v75;
    *(void *)(v77 + 32) = v74;
    *(void *)(v77 + 40) = &off_100516A90;
    swift_endAccess();
    int64_t v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "Updated providers", v80, 2u);
      swift_slowDealloc();
      uint64_t v81 = v83[0];
      uint64_t v82 = v54;
    }
    else
    {
      uint64_t v81 = v78;
      uint64_t v82 = v48;
      id v48 = v54;
      int64_t v78 = v83[0];
    }
  }
}

uint64_t sub_10035B570()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR___CSDUserNotificationController_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5) {
    return swift_unknownObjectRetain();
  }
  __break(1u);
  return result;
}

void sub_10035B6B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR___CSDUserNotificationController_callFilterController);
    uint64_t v3 = sub_100239FB0(v2);

    if (v3)
    {
      sub_10035B828();

      goto LABEL_9;
    }
  }
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1001F5F88(v4, (uint64_t)qword_100594CA0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v5, "Not posting notification since it is restricted by the call filter", v6, 2u);
    swift_slowDealloc();
  }
LABEL_9:
}

void sub_10035B828()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  os_log_type_t v5 = v4;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001FCC88();
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR___CSDUserNotificationController_queue);
  void *v1 = v10;
  sub_100235D68();
  v11();
  id v12 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v1, v6);
  if (v10)
  {
    if (qword_100583A38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v13 = type metadata accessor for Logger();
  sub_1001F5F88(v13, (uint64_t)qword_100594CA0);
  id v14 = v5;
  swift_unknownObjectRetain_n();
  id v15 = v14;
  os_log_type_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412546;
    id v20 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v15;

    *(_WORD *)(v18 + 12) = 2080;
    swift_unknownObjectRetain();
    sub_1001F081C(&qword_10058B268);
    uint64_t v21 = String.init<A>(reflecting:)();
    sub_1002344D8(v21, v22, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Adding notification request %@ to %s", (uint8_t *)v18, 0x16u);
    sub_1001F081C(&qword_100585900);
    swift_arrayDestroy();
    sub_1001F63CC();
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_100361B90();
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v15;
  (*(void (**)(id, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 48))(v15, sub_100361A5C, v24, ObjectType, v3);
  swift_release();
  sub_1001FCC08();
}

void sub_10035BB88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10035BC10();
  }
}

void sub_10035BC10()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001FCC70();
  id v12 = *(void **)(v0 + OBJC_IVAR___CSDUserNotificationController_queue);
  void *v1 = v12;
  sub_100235D68();
  v13();
  id v14 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v1, v8);
  if (v12)
  {
    if (qword_100583A38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  sub_1001F5F88(v15, (uint64_t)qword_100594CA0);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  os_log_type_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1002344D8(v7, v5, &v26);
    sub_100361B54(v19);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_unknownObjectRetain();
    sub_1001F081C(&qword_10058B268);
    uint64_t v20 = String.init<A>(reflecting:)();
    uint64_t v22 = sub_1002344D8(v20, v21, &v26);
    sub_100361B54(v22);
    sub_100361B90();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Removing notification with identifier %s from %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_100361B90();
    swift_bridgeObjectRelease_n();
  }
  uint64_t ObjectType = swift_getObjectType();
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10048F550;
  *(void *)(v24 + 32) = v7;
  *(void *)(v24 + 40) = v5;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 80);
  swift_bridgeObjectRetain();
  v25(v24, ObjectType, v3);
  swift_bridgeObjectRelease();
  sub_1001FCC08();
}

void sub_10035BEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = (void *)Strong;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
    sub_10035BF88();
  }
}

void sub_10035BF88()
{
  sub_1001FCC38();
  char v5 = v4;
  uint64_t v6 = sub_1001F081C((uint64_t *)&unk_10058B228);
  __chkstk_darwin(v6 - 8);
  sub_1001FCC70();
  uint64_t v116 = sub_1001F081C(&qword_100588880);
  sub_1001F6398();
  uint64_t v109 = v7;
  __chkstk_darwin(v8);
  sub_1001F7650();
  uint64_t v115 = v9;
  sub_1002B8138();
  __chkstk_darwin(v10);
  uint64_t v108 = (uint64_t)v96 - v11;
  uint64_t v117 = type metadata accessor for BadgeCountCategory();
  sub_1001F6398();
  uint64_t v97 = v12;
  __chkstk_darwin(v13);
  sub_1001F7650();
  uint64_t v107 = v14;
  sub_1002B8138();
  __chkstk_darwin(v15);
  id v101 = (char *)v96 - v16;
  uint64_t v104 = sub_1001F081C(&qword_10058B238);
  sub_10020233C();
  __chkstk_darwin(v17);
  sub_1001F2514();
  long long v106 = (void (**)(uint64_t, uint64_t))(v19 - v18);
  uint64_t v20 = sub_1001F081C(&qword_10058B240);
  __chkstk_darwin(v20 - 8);
  sub_1001F7650();
  uint64_t v110 = v21;
  sub_1002B8138();
  __chkstk_darwin(v22);
  uint64_t v103 = (uint64_t)v96 - v23;
  sub_1002B8138();
  __chkstk_darwin(v24);
  os_log_type_t v112 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v96 - v25);
  sub_1002B8138();
  __chkstk_darwin(v26);
  uint64_t v111 = (void (**)(unint64_t, uint64_t, uint64_t))((char *)v96 - v27);
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_100235BE8();
  char v32 = *(void **)(v0 + OBJC_IVAR___CSDUserNotificationController_queue);
  void *v1 = v32;
  sub_100235D68();
  v33();
  id v34 = v32;
  LOBYTE(v32) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v30 + 8))(v1, v28);
  if ((v32 & 1) == 0)
  {
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v100 = v0;
  uint64_t v35 = v0 + OBJC_IVAR___CSDUserNotificationController_providers;
  swift_beginAccess();
  uint64_t v36 = *(void *)v35;
  uint64_t v114 = *(void *)(*(void *)v35 + 16);
  if (!v114)
  {
    uint64_t v28 = 0;
    uint64_t v3 = 0;
    uint64_t v68 = _swiftEmptyArrayStorage;
    uint64_t v53 = v110;
    goto LABEL_46;
  }
  uint64_t v113 = v35;
  v96[2] = v2;
  if (v5) {
    uint64_t v37 = 0x656E6F6850;
  }
  else {
    uint64_t v37 = 0x656D695465636146;
  }
  if (v5) {
    unint64_t v38 = 0xE500000000000000;
  }
  else {
    unint64_t v38 = 0xE800000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = 0;
  uint64_t v40 = _swiftEmptyArrayStorage;
  do
  {
    long long v118 = *(_OWORD *)(v36 + 16 * v39 + 32);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v42 = *((void *)&v118 + 1);
    uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(*((void *)&v118 + 1) + 16);
    swift_unknownObjectRetain();
    char v44 = v43(ObjectType, v42);
    BOOL v45 = (v44 & 1) == 0;
    if (v44) {
      uint64_t v46 = 0x656E6F6850;
    }
    else {
      uint64_t v46 = 0x656D695465636146;
    }
    if (v45) {
      unint64_t v47 = 0xE800000000000000;
    }
    else {
      unint64_t v47 = 0xE500000000000000;
    }
    if (v46 == v37 && v47 == v38)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      unint64_t v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_28;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v119 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1002E40A4(0, v40[2] + 1, 1);
      uint64_t v40 = v119;
    }
    unint64_t v2 = v40[2];
    unint64_t v50 = v40[3];
    if (v2 >= v50 >> 1)
    {
      sub_1002E40A4((char *)(v50 > 1), v2 + 1, 1);
      uint64_t v40 = v119;
    }
    id v40[2] = v2 + 1;
    *(_OWORD *)&v40[2 * v2 + 4] = v118;
LABEL_28:
    ++v39;
  }
  while (v114 != v39);
  uint64_t v99 = (uint64_t)v40;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)v113;
  uint64_t v52 = *(void *)(*(void *)v113 + 16);
  uint64_t v53 = v110;
  if (!v52)
  {
LABEL_43:
    uint64_t v28 = 0;
    uint64_t v3 = 0;
    uint64_t v68 = (void *)sub_100361BA8();
    goto LABEL_46;
  }
  LODWORD(v118) = enum case for BadgeCountCategory.legacyVoicemail(_:);
  uint64_t v114 = v97 + 104;
  uint64_t v98 = (void (**)(char *, uint64_t, uint64_t))(v97 + 32);
  uint64_t v102 = (void (**)(uint64_t, uint64_t))(v97 + 8);
  swift_bridgeObjectRetain_n();
  v96[1] = v51;
  id v54 = (uint64_t *)(v51 + 40);
  while (2)
  {
    uint64_t v55 = *(v54 - 1);
    uint64_t v56 = *v54;
    uint64_t v57 = swift_getObjectType();
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v56 + 40);
    swift_unknownObjectRetain();
    uint64_t v59 = v111;
    uint64_t v113 = v55;
    uint64_t v105 = v56;
    v58(v57, v56);
    unint64_t v2 = (unint64_t)v112;
    uint64_t v60 = v117;
    (*(void (**)(void *, void, uint64_t))v114)(v112, v118, v117);
    sub_1001F0530(v2, 0, 1, v60);
    uint64_t v61 = v106;
    uint64_t v62 = (uint64_t)v106 + *(int *)(v104 + 48);
    sub_10025E234((uint64_t)v59, (uint64_t)v106, &qword_10058B240);
    sub_10025E234(v2, v62, &qword_10058B240);
    sub_1001F75DC((uint64_t)v61);
    if (!v45)
    {
      uint64_t v63 = v103;
      sub_10025E234((uint64_t)v61, v103, &qword_10058B240);
      sub_1001F75DC(v62);
      if (!v64)
      {
        unint64_t v2 = (unint64_t)v101;
        (*v98)(v101, v62, v60);
        sub_10035FA18((unint64_t *)&unk_10058B248, (void (*)(uint64_t))&type metadata accessor for BadgeCountCategory);
        char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v66 = v60;
        uint64_t v67 = *v102;
        (*v102)(v63, v66);
        v67(v2, v66);
        sub_1002392A8((uint64_t)v106, &qword_10058B240);
        sub_1002392A8((uint64_t)v112, &qword_10058B240);
        sub_1002392A8((uint64_t)v111, &qword_10058B240);
        if (v65) {
          goto LABEL_45;
        }
        goto LABEL_41;
      }
      (*v102)(v63, v60);
LABEL_39:
      sub_1002392A8((uint64_t)v61, &qword_10058B238);
      sub_1002392A8((uint64_t)v112, &qword_10058B240);
      sub_1002392A8((uint64_t)v111, &qword_10058B240);
LABEL_41:
      swift_unknownObjectRelease();
      v54 += 2;
      if (!--v52)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_43;
      }
      continue;
    }
    break;
  }
  sub_1001F75DC(v62);
  if (!v45) {
    goto LABEL_39;
  }
  sub_1002392A8((uint64_t)v61, &qword_10058B240);
  sub_1002392A8((uint64_t)v112, &qword_10058B240);
  sub_1002392A8((uint64_t)v111, &qword_10058B240);
LABEL_45:
  swift_bridgeObjectRelease_n();
  uint64_t v68 = (void *)sub_100361BA8();
  uint64_t v28 = v113;
  uint64_t v3 = v105;
LABEL_46:
  uint64_t v69 = v68[2];
  if (v69)
  {
    uint64_t v105 = v3;
    uint64_t v113 = v28;
    uint64_t v111 = (void (**)(unint64_t, uint64_t, uint64_t))(v97 + 16);
    os_log_type_t v112 = (void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32);
    long long v106 = (void (**)(uint64_t, uint64_t))(v97 + 8);
    uint64_t v99 = swift_retain();
    id v70 = (uint64_t *)(v99 + 40);
    id v71 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v72 = v2;
      uint64_t v73 = *v70;
      uint64_t v74 = swift_getObjectType();
      uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v73 + 40);
      swift_unknownObjectRetain();
      v75(v74, v73);
      uint64_t v76 = v117;
      if (sub_1001F758C(v53, 1, v117) == 1)
      {
        sub_1002392A8(v53, &qword_10058B240);
        uint64_t v77 = 1;
        unint64_t v2 = v72;
        uint64_t v78 = v116;
      }
      else
      {
        os_log_type_t v79 = *v112;
        *(void *)&long long v118 = v71;
        uint64_t v80 = v107;
        v79(v107, v53, v76);
        uint64_t v81 = v116;
        uint64_t v114 = *(int *)(v116 + 48);
        (*v111)(v72, v80, v76);
        uint64_t v82 = v74;
        unint64_t v2 = v72;
        uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 32))(v82, v73);
        uint64_t v84 = v80;
        id v71 = (void *)v118;
        (*v106)(v84, v76);
        uint64_t v77 = 0;
        *(void *)(v72 + v114) = v83;
        uint64_t v78 = v81;
        uint64_t v53 = v110;
      }
      sub_1001F0530(v2, v77, 1, v78);
      swift_unknownObjectRelease();
      sub_1001F75DC(v2);
      if (v45)
      {
        sub_1002392A8(v2, (uint64_t *)&unk_10058B228);
      }
      else
      {
        uint64_t v85 = v108;
        sub_10036194C(v2, v108);
        sub_10036194C(v85, v115);
        char v86 = swift_isUniquelyReferenced_nonNull_native();
        if ((v86 & 1) == 0) {
          id v71 = (void *)sub_1003A51B0();
        }
        unint64_t v87 = v71[2];
        if (v87 >= v71[3] >> 1) {
          id v71 = (void *)sub_1003A51B0();
        }
        v71[2] = v87 + 1;
        sub_10036194C(v115, (uint64_t)v71+ ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(void *)(v109 + 72) * v87);
      }
      v70 += 2;
      --v69;
    }
    while (v69);
    swift_release();
    uint64_t v28 = v113;
    uint64_t v3 = v105;
  }
  swift_release();
  if (qword_100583A38 != -1) {
LABEL_70:
  }
    swift_once();
  uint64_t v88 = type metadata accessor for Logger();
  sub_1001F5F88(v88, (uint64_t)qword_100594CA0);
  os_log_type_t v89 = Logger.logObject.getter();
  os_log_type_t v90 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v91 = 0;
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "We have a voicemail provider, so setting isAmbiguous", v91, 2u);
    sub_1001F63CC();
  }

  if (v28)
  {
    uint64_t v92 = swift_getObjectType();
    os_log_type_t v93 = *(void (**)(uint64_t, uint64_t))(v3 + 32);
    swift_unknownObjectRetain();
    v93(v92, v3);
    swift_unknownObjectRelease();
  }
  dispatch thunk of BadgeManager.setBadgeCounts(_:shouldForceUpdate:isAmbiguous:)();
  swift_bridgeObjectRelease();
  id v94 = [self sharedSystemShellSwitcher];
  unsigned int v95 = [v94 isClarityBoardEnabled];

  if (v95) {
    sub_10035DDF0();
  }
  swift_unknownObjectRelease();
  sub_1001FCC08();
}

void sub_10035CB58()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10035CBE8();
  }
}

void sub_10035CBE8()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001FCCA0();
  uint64_t v14 = *(void **)(v0 + OBJC_IVAR___CSDUserNotificationController_queue);
  void *v1 = v14;
  sub_100235D68();
  v15();
  id v16 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v1, v10);
  if (v14)
  {
    if (qword_100583A38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger();
  sub_1001F5F88(v17, (uint64_t)qword_100594CA0);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1002344D8(v9, v7, &v28);
    sub_100361B78(v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    swift_unknownObjectRetain();
    sub_1001F081C(&qword_10058B268);
    uint64_t v22 = String.init<A>(reflecting:)();
    uint64_t v24 = sub_1002344D8(v22, v23, &v28);
    sub_100361B78(v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100361B90();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Replacing notification with identifier %s from %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_100361B90();
    swift_bridgeObjectRelease_n();
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v9;
  *(void *)(v26 + 24) = v7;
  uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_bridgeObjectRetain();
  v27(v9, v7, v5, sub_100361A54, v26, ObjectType, v3);
  swift_release();
  sub_1001FCC08();
}

void sub_10035CEFC(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_1001F6204(0, (unint64_t *)&unk_1005887B0);
    sub_1003619F4();
    Set.Iterator.init(_cocoa:)();
    unint64_t v1 = (unint64_t)v17[1];
    id v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    id v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      uint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    uint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      uint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        uint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          uint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            uint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              uint64_t v15 = (uint64_t)v3 + 6;
              while (v15 < v8)
              {
                unint64_t v14 = v16[v15++];
                if (v14)
                {
                  uint64_t v11 = (char *)(v15 - 1);
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100206FA0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1002DFCEC((uint64_t)v17, (uint64_t)v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_1001F6204(0, (unint64_t *)&unk_1005887B0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        uint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_10035D19C()
{
  sub_1001FCC38();
  unint64_t v14 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_1001F6398();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001FCC88();
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_10020233C();
  __chkstk_darwin(v7);
  sub_1001FCCA0();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  sub_1001F2514();
  sub_1001F6204(0, (unint64_t *)&qword_1005850F0);
  id v9 = v0;
  static DispatchQoS.unspecified.getter();
  sub_10035FA18((unint64_t *)&qword_100583B00, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1001F081C(&qword_100585100);
  sub_10020A70C((unint64_t *)&qword_100583B10, &qword_100585100);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  unint64_t v10 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  sub_1001F6204(0, (unint64_t *)&unk_100585970);
  id v11 = sub_100359A90();
  id v12 = sub_100359A90();
  sub_100361340(v11, v12, (uint64_t)_swiftEmptyArrayStorage, v14, v10, (char *)objc_allocWithZone(ObjectType));
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  sub_1001FCC08();
}

id sub_10035D470()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1001F5F88(v2, (uint64_t)qword_100594CA0);
  id v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Deallocating %@", v6, 0xCu);
    sub_1001F081C(&qword_100585900);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "dealloc");
}

void sub_10035D6F0(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1001F5F88(v2, (uint64_t)qword_100594CA0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v5 = v16;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Error while posting notification: %@", v4, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1001F5F88(v7, (uint64_t)qword_100594CA0);
    oslog = a2;
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      objc_super v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)objc_super v10 = 136315138;
      id v11 = [oslog identifier];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      sub_1002344D8(v12, v14, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Successfully posted notification with identifier: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

void sub_10035DA8C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1001F5F88(v3, (uint64_t)qword_100594CA0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v5 = 138412290;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v6 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Error while replacing notification: %@", v5, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1001F5F88(v9, (uint64_t)qword_100594CA0);
    swift_bridgeObjectRetain_n();
    objc_super v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_1002344D8(a2, a3, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Successfully replaced notification with identifier: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

id sub_10035DDF0()
{
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1001F5F88(v0, (uint64_t)qword_100594CA0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Updating badge string for Clarity Board Calls", v3, 2u);
    sub_1001F63CC();
  }

  os_log_type_t v4 = (uint64_t *)(v31 + OBJC_IVAR___CSDUserNotificationController_providers);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      long long v32 = *(_OWORD *)(v5 + 16 * i + 32);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(uint64_t (**)(uint64_t, void))(*((void *)&v32 + 1) + 32);
      swift_unknownObjectRetain();
      if (v9(ObjectType, *((void *)&v32 + 1)) < 1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1002E40A4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        unint64_t v10 = _swiftEmptyArrayStorage[3];
        if (v11 >= v10 >> 1) {
          sub_1002E40A4((char *)(v10 > 1), v11 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v11 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v32;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = _swiftEmptyArrayStorage[2];
  swift_release();
  id result = (id)*v4;
  uint64_t v13 = *(void *)(*v4 + 16);
  if (v13)
  {
    for (j = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; j += 2)
    {
      uint64_t v15 = *j;
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 16);
      swift_unknownObjectRetain();
      v17(v16, v15);
      sub_10035B570();
      uint64_t v19 = v18;
      uint64_t v33 = v13;
      if (v30)
      {
        id result = (id)TUBundle();
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v20 = result;
        v21._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
        v34._object = (void *)0xE000000000000000;
        v22.value._object = (void *)0x80000001004821B0;
        v21._object = (void *)0x800000010048AD00;
        v22.value._uint64_t countAndFlagsBits = 0xD000000000000012;
        v23._uint64_t countAndFlagsBits = 0;
        v23._object = (void *)0xE000000000000000;
        v34._uint64_t countAndFlagsBits = 0;
        Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v34);
        uint64_t countAndFlagsBits = v24._countAndFlagsBits;
        object = v24._object;
      }
      else
      {
        uint64_t countAndFlagsBits = 0;
        object = 0;
      }
      uint64_t v27 = swift_getObjectType();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = countAndFlagsBits;
      *(void *)(v28 + 24) = object;
      uint64_t v29 = *(void (**)(uint64_t, void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v19 + 88);
      swift_bridgeObjectRetain();
      v29(countAndFlagsBits, object, sub_1003619EC, v28, v27, v19);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v13 = v33 - 1;
      if (v33 == 1) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_10035E1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1001F5F88(v3, (uint64_t)qword_100594CA0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      swift_errorRetain();
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v6 = v16;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Error setting Clarity badge string to %@", v5, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1001F5F88(v8, (uint64_t)qword_100594CA0);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)unint64_t v11 = 136315138;
      if (a3)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = String.init<A>(reflecting:)();
        unint64_t v14 = v13;
      }
      else
      {
        unint64_t v14 = 0xE300000000000000;
        uint64_t v12 = 7104878;
      }
      sub_1002344D8(v12, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Successfully set Clarity badge string to %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10035E530()
{
}

uint64_t type metadata accessor for UserNotificationController()
{
  return self;
}

void sub_10035E594()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100235BE8();
  uint64_t v12 = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001F2514();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v7;
  v19[3] = v0;
  v19[4] = v5;
  v19[5] = v3;
  v23[4] = sub_10035EF4C;
  v23[5] = v19;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1002C2C88;
  v23[3] = &unk_1005166B8;
  uint64_t v20 = _Block_copy(v23);
  id v21 = v7;
  id v22 = v0;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_10035FA18((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  swift_release();
  sub_1001FCC08();
}

uint64_t sub_10035E7E4(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1001F5F88(v8, (uint64_t)qword_100594CA0);
  id v9 = a1;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = a3;
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v34 = a4;
    *(_DWORD *)uint64_t v12 = 138412290;
    v36[0] = v9;
    uint64_t v14 = a2;
    id v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v9;

    a2 = v14;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Received response %@", v12, 0xCu);
    sub_1001F081C(&qword_100585900);
    swift_arrayDestroy();
    a3 = v35;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v16 = objc_msgSend(v9, "notification", v34);
  id v17 = [v16 request];

  id v18 = [v17 content];
  uint64_t v19 = sub_10035F9A8(v18);
  if (v20)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    Swift::String v23 = (uint64_t *)(a2 + OBJC_IVAR___CSDUserNotificationController_providersByIdentifier);
    swift_beginAccess();
    if (sub_100223688(v21, v22, *v23))
    {
      uint64_t v25 = v24;
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t ObjectType = swift_getObjectType();
      v36[3] = sub_1001F6204(0, &qword_10058B200);
      v36[4] = &off_10050E190;
      v36[0] = v9;
      uint64_t v27 = *(void (**)(void *, uint64_t, uint64_t))(v25 + 144);
      id v28 = v9;
      v27(v36, ObjectType, v25);
      swift_unknownObjectRelease();
      uint64_t v29 = sub_1002018DC((uint64_t)v36);
      return a3(v29);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    long long v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Could not find notification provider for action", v32, 2u);
    swift_slowDealloc();
  }

  return a3(v29);
}

void sub_10035EC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void))
{
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(a4 + OBJC_IVAR___CSDUserNotificationController_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      objc_allocWithZone((Class)type metadata accessor for MomentsNotification());
      swift_bridgeObjectRetain();
      id v16 = sub_1002D08C4(a1, a2, a3);
      id v17 = [self defaultCenter];
      [v17 postNotificationName:@"CSDMomentsControllerStartedRemoteCaptureNotification" object:v16];

      a5[2](a5, 0);
      _Block_release(a5);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  _Block_release(a5);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10035EECC()
{
  _Block_release(*(const void **)(v0 + 16));
  uint64_t v1 = sub_100208504();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10035EEFC()
{
  return sub_100361B48(*(void *)(v0 + 16));
}

uint64_t sub_10035EF04()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10035EF4C()
{
  return sub_10035E7E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10035EF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10035EF68()
{
  return swift_release();
}

uint64_t sub_10035EF70()
{
  return sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A49A0);
}

uint64_t sub_10035EF88()
{
  return sub_10035EFA0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A4BDC);
}

uint64_t sub_10035EFA0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    uint64_t *v1 = result;
  }
  return result;
}

void (*sub_10035EFFC(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_10035F664(v4);
  v4[12] = sub_10035F290(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_10035F11C;
}

void sub_10035F11C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = sub_100361B34();
  v2(v6);
  free(v3);

  free(v1);
}

void (*sub_10035F1A8(void *a1, char a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_10035F6A0(v4);
  v4[9] = sub_10035F488((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return sub_10035F23C;
}

void sub_10035F23C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  uint64_t v3 = sub_100361B34();
  v2(v3);

  free(v1);
}

void (*sub_10035F290(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = sub_1001F081C((uint64_t *)&unk_100587350);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v12 = sub_1002337A4(a2);
  *((unsigned char *)v8 + 32) = v13 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v13 & 1) == 0;
  Swift::Int v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v17 = v12;
  char v18 = v13;
  sub_1001F081C((uint64_t *)&unk_100587150);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v16))
  {
    unint64_t v19 = sub_1002337A4(a2);
    if ((v18 & 1) == (v20 & 1))
    {
      unint64_t v17 = v19;
      goto LABEL_5;
    }
LABEL_10:
    type metadata accessor for UUID();
    uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[3] = v17;
  if (v18)
  {
    uint64_t v21 = *(void *)(*v4 + 56);
    uint64_t v22 = type metadata accessor for SimulatedConversationManager.SimulatedGroupSession(0);
    sub_10028A19C(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v17, (uint64_t)v10);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v22 = type metadata accessor for SimulatedConversationManager.SimulatedGroupSession(0);
    uint64_t v23 = 1;
  }
  sub_1001F0530((uint64_t)v10, v23, 1, v22);
  return sub_10035F428;
}

void sub_10035F428(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_10035F6D0((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_1002392A8((uint64_t)v2, (uint64_t *)&unk_100587350);
  free(v2);

  free(v1);
}

unint64_t (*sub_10035F488(uint64_t a1, char a2, char a3))(unint64_t result)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v9 = sub_1002339C4(a2 & 1);
  *(unsigned char *)(a1 + 25) = v10 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_1001F081C(&qword_10058B260);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13))
  {
    unint64_t v16 = sub_1002339C4(v7);
    if ((v15 & 1) == (v17 & 1))
    {
      unint64_t v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (unint64_t (*)(unint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *(void *)(a1 + 16) = v14;
  if (v15) {
    uint64_t v18 = *(void *)(*(void *)(*v4 + 56) + 8 * v14);
  }
  else {
    uint64_t v18 = 0;
  }
  *(void *)a1 = v18;
  return sub_10035F598;
}

unint64_t sub_10035F598(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25))
    {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else
    {
      char v3 = *(unsigned char *)(result + 24) & 1;
      unint64_t v4 = *(void *)(result + 16);
      return sub_100283630(v4, v3, v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    sub_1001F081C(&qword_10058B210);
    sub_100361808();
    return _NativeDictionary._delete(at:)();
  }
  return result;
}

uint64_t (*sub_10035F664(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_10035F694;
}

uint64_t sub_10035F694(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_10035F6A0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_100361AEC;
}

void sub_10035F6D0(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  unint64_t v23 = a4;
  int v24 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001F081C((uint64_t *)&unk_100587350);
  __chkstk_darwin(v10 - 8);
  BOOL v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SimulatedConversationManager.SimulatedGroupSession(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v21 - v18;
  sub_10025E234(a1, (uint64_t)v12, (uint64_t *)&unk_100587350);
  if (sub_1001F758C((uint64_t)v12, 1, v13) == 1)
  {
    sub_1002392A8((uint64_t)v12, (uint64_t *)&unk_100587350);
    if (v24)
    {
      swift_arrayDestroy();
      sub_10035FA18((unint64_t *)&qword_1005873E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      _NativeDictionary._delete(at:)();
    }
  }
  else
  {
    sub_10028A19C((uint64_t)v12, (uint64_t)v19);
    uint64_t v20 = *a3;
    if (v24)
    {
      sub_10028A19C((uint64_t)v19, *(void *)(v20 + 56) + *(void *)(v14 + 72) * v23);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v9, v21, v7);
      sub_10028A19C((uint64_t)v19, (uint64_t)v17);
      sub_10028354C(v23, (uint64_t)v9, (uint64_t)v17, v20);
    }
  }
}

uint64_t sub_10035F9A8(void *a1)
{
  id v2 = [a1 notificationProviderIdentifier];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10035FA18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10035FA60(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t *v1 = result;
  }
  return result;
}

void sub_10035FB20(uint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || a1 > *(void *)(v3 + 24) >> 1)
  {
    sub_1003A5188();
    uint64_t *v1 = v5;
  }
}

char *sub_10035FB88(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)TUConversationManager) init];
  uint64_t result = (char *)[self sharedInstance];
  if (result)
  {
    uint64_t v6 = result;
    id v7 = [objc_allocWithZone((Class)type metadata accessor for ConversationInvitationResolver()) init];
    id v8 = [objc_allocWithZone((Class)type metadata accessor for SharedConversationServerBag()) init];
    unint64_t v9 = (char *)objc_allocWithZone((Class)type metadata accessor for GroupFaceTimeNotificationProvider());
    return sub_10035FF00(a1, a2, v4, v6, v7, v8, 0, 0, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_10035FC70(void *a1, void *a2, void *a3, unsigned char *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v9 = &a4[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_updateBadgeValue];
  *unint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (uint64_t)&a4[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_badgeCategory];
  uint64_t v11 = type metadata accessor for BadgeCountCategory();
  sub_1001F0530(v10, 1, 1, v11);
  BOOL v12 = &a4[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_openURL];
  *BOOL v12 = 0;
  v12[1] = 0;
  a4[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_notificationType] = 0;
  uint64_t v13 = a4;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_1002DF54C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v14 = &_swiftEmptySetSingleton;
  }
  *(void *)&v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_categories] = v14;
  uint64_t v15 = &v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_add];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = &v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_replace];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  char v17 = &v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_removeNotification];
  *(void *)char v17 = 0;
  *((void *)v17 + 1) = 0;
  *(void *)&v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_queue] = a1;
  id v18 = objc_allocWithZone((Class)TUContactsDataProvider);
  id v19 = a1;
  id v20 = [v18 initWithContactsDataSource:a2];
  *(void *)&v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_contactsDataProvider] = v20;
  *(void *)&v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_notificationCenter] = a3;
  uint64_t v21 = (uint64_t (**)(uint64_t, void *))&v13[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_localizeHandleName];
  *uint64_t v21 = sub_1002546B4;
  v21[1] = 0;
  id v22 = a3;

  v28.receiver = v13;
  v28.super_class = ObjectType;
  id v23 = objc_msgSendSuper2(&v28, "init");
  [v22 addObserver:v23 selector:"handlePendingMessageDidReceiveInviteNotification:" name:@"CSDIDSPendingMessageDidReceiveInviteNotification" object:0];
  int v24 = (char *)v23;
  [v22 addObserver:v24 selector:"handlePendingMessageDidReceiveCancelNotification:" name:@"CSDIDSPendingMessageDidReceiveCancelNotification" object:0];

  uint64_t v25 = (void (**)(NSURL *@<X8>))&v24[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_openURL];
  uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC13callservicesd28FaceTimeNotificationProvider_openURL];
  *uint64_t v25 = sub_1002260D4;
  v25[1] = 0;
  sub_100208490(v26);
  return v24;
}

char *sub_10035FF00(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_featureFlags;
  id v15 = objc_allocWithZone((Class)TUFeatureFlags);
  uint64_t v16 = a9;
  *(void *)&a9[v14] = [v15 init];
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_pendingNotificationsForConversationsByUUID] = _swiftEmptyDictionarySingleton;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_notificationIdentifiersByConversationUUID] = _swiftEmptyDictionarySingleton;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_carPlayNotificationIdentifiersByConversationUUID] = _swiftEmptyDictionarySingleton;
  uint64_t v17 = OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_faceTimeNotificationCenter;
  sub_1001F6204(0, (unint64_t *)&unk_100585970);
  *(void *)&v16[v17] = sub_100359A90();
  id v18 = (uint64_t *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_shouldDelayInviteNotification];
  *id v18 = (uint64_t)sub_100223D30;
  v18[1] = 0;
  v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_facetimeIsShowingOnScreen] = 0;
  id v19 = &v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_openURL];
  *(void *)id v19 = 0;
  *((void *)v19 + 1) = 0;
  id v20 = &v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_unlockAndOpenSensitiveURL];
  *(void *)id v20 = 0;
  *((void *)v20 + 1) = 0;
  v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_notificationType] = 0;
  uint64_t v21 = OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_categories;
  *(void *)&v16[v21] = sub_100228C00();
  id v22 = &v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_add];
  *(void *)id v22 = 0;
  *((void *)v22 + 1) = 0;
  id v23 = &v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_replace];
  *(void *)id v23 = 0;
  *((void *)v23 + 1) = 0;
  int v24 = &v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_removeNotification];
  *(void *)int v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v25 = &v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_updateBadgeValue];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_queue] = a1;
  id v26 = objc_allocWithZone((Class)TUContactsDataProvider);
  id v27 = a1;
  id v28 = [v26 initWithContactsDataSource:a2];
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_contactsDataProvider] = v28;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_conversationManager] = a3;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_ftNetworkSupport] = a4;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_invitationResolver] = a5;
  *(void *)&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_conversationServerBag] = a6;
  if (a7)
  {
    *id v18 = a7;
    v18[1] = a8;
    sub_1002084D8(a7);
    id v29 = a3;
    id v30 = a4;
    id v31 = a5;
    id v32 = a6;
    swift_release();
  }
  else
  {
    id v33 = a3;
    id v34 = a4;
    id v35 = a5;
    id v36 = a6;
  }
  uint64_t v37 = (uint64_t (**)(void *))&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_localizeConversationName];
  _DWORD *v37 = sub_100223DC4;
  v37[1] = 0;
  unint64_t v38 = (uint64_t (**)())&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_localizeHandleName];
  void *v38 = sub_100223E14;
  v38[1] = 0;
  uint64_t v39 = (uint64_t (**)(uint64_t, uint64_t, void *))&v16[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_localizeHandleNameWithConversation];
  *uint64_t v39 = sub_100223EB8;
  v39[1] = 0;

  v59.receiver = v16;
  v59.super_class = ObjectType;
  uint64_t v40 = (char *)objc_msgSendSuper2(&v59, "init");
  uint64_t v41 = *(void **)&v40[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_conversationManager];
  uint64_t v42 = v40;
  [v41 addDelegate:v42 queue:v27];
  [v41 registerWithCompletionHandler:0];
  uint64_t v43 = self;
  id v44 = [v43 defaultCenter];
  [v44 addObserver:v42 selector:"momentsStartedRemoteCapture:" name:@"CSDMomentsControllerStartedRemoteCaptureNotification" object:0];

  id v45 = [v43 defaultCenter];
  [v45 addObserver:v42 selector:"handlePendingMessageDidReceiveInviteNotification:" name:@"CSDGroupIDSPendingMessageDidReceiveInviteNotification" object:0];

  uint64_t v46 = CFNotificationCenterGetDarwinNotifyCenter();
  unint64_t v47 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterAddObserver(v46, v42, (CFNotificationCallback)sub_10022600C, v47, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  id v48 = CFNotificationCenterGetDarwinNotifyCenter();
  id v49 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterAddObserver(v48, v42, (CFNotificationCallback)sub_100226028, v49, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  sub_100208490(a7);

  unint64_t v50 = (void (**)(NSURL *@<X8>))&v42[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_openURL];
  uint64_t v51 = *(void *)&v42[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_openURL];
  unsigned char *v50 = sub_1002260D4;
  v50[1] = 0;
  sub_100208490(v51);
  uint64_t v52 = (uint64_t *)&v42[OBJC_IVAR____TtC13callservicesd33GroupFaceTimeNotificationProvider_unlockAndOpenSensitiveURL];
  swift_beginAccess();
  uint64_t v53 = *v52;
  uint64_t *v52 = (uint64_t)sub_10022611C;
  v52[1] = 0;
  sub_100208490(v53);
  return v42;
}

char *sub_100360478(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char *a6)
{
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v53 = a5 & 1;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  BOOL v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v57 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  id v15 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v62[3] = sub_1001F6204(0, &qword_10058B288);
  v62[4] = &off_100512D18;
  v62[0] = a2;
  uint64_t v16 = OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_callInteractionManager;
  id v17 = objc_allocWithZone((Class)CHCallInteractionManager);
  id v18 = a6;
  *(void *)&a6[v16] = [v17 init];
  uint64_t v19 = OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_callProviderManager;
  *(void *)&v18[v19] = [objc_allocWithZone((Class)TUCallProviderManager) init];
  *(void *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_pendingCallIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v20 = (uint64_t)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_mostRecentCallDate];
  uint64_t v21 = type metadata accessor for Date();
  sub_1001F0530(v20, 1, 1, v21);
  id v22 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_contactStore];
  id v23 = [self storeWithOptions:3];
  *((void *)v22 + 3) = sub_1001F6204(0, &qword_1005889D0);
  *((void *)v22 + 4) = &off_10050C680;
  *(void *)id v22 = v23;
  int v24 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_dialRecentCall];
  *(void *)int v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v25 = (uint64_t *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_findConversationLink];
  *uint64_t v25 = 0;
  v25[1] = 0;
  id v26 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_blockHandles];
  *(void *)id v26 = 0;
  *((void *)v26 + 1) = 0;
  id v27 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_add];
  *(void *)id v27 = 0;
  *((void *)v27 + 1) = 0;
  id v28 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_replace];
  *(void *)id v28 = 0;
  *((void *)v28 + 1) = 0;
  id v29 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_removeNotification];
  *(void *)id v29 = 0;
  *((void *)v29 + 1) = 0;
  id v30 = &v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_updateBadgeValue];
  *(void *)id v30 = 0;
  *((void *)v30 + 1) = 0;
  *(void *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_queue] = a1;
  sub_10020ED28((uint64_t)v62, (uint64_t)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_callHistoryDataSource]);
  v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_notificationType] = v53;
  id v31 = objc_allocWithZone((Class)type metadata accessor for ProcessObserver());
  id v32 = a1;
  *(void *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_inCallServiceProcessObserver] = sub_10024F180((uint64_t)&off_10050B238, v32);
  *(void *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_supportedMediaTypes] = v54;
  *(void *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_supportedProviders] = v55;
  id v33 = (id (**)())&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_supportsDisplayingFaceTimeAudioCalls];
  *id v33 = sub_1002D3770;
  v33[1] = 0;
  id v34 = (void (**)())&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_openURL];
  *id v34 = sub_1002D379C;
  v34[1] = 0;
  uint64_t v35 = *v25;
  *uint64_t v25 = (uint64_t)sub_1002D3AB8;
  v25[1] = 0;
  sub_100208490(v35);
  id v36 = [objc_allocWithZone((Class)TUFeatureFlags) init];
  *(void *)&v18[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_featureFlags] = v36;

  v61.receiver = v18;
  v61.super_class = ObjectType;
  uint64_t v37 = (char *)objc_msgSendSuper2(&v61, "init");
  unint64_t v38 = *(void **)&v37[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_callInteractionManager];
  uint64_t v39 = v37;
  [v38 addDelegate:v39 queue:v32];
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  aBlock[4] = sub_100361AD4;
  aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C2C88;
  aBlock[3] = &unk_1005168E8;
  uint64_t v41 = _Block_copy(aBlock);
  uint64_t v42 = v39;
  static DispatchQoS.unspecified.getter();
  objc_super v59 = _swiftEmptyArrayStorage;
  sub_10035FA18((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v41);
  (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v12, v10);
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v57);
  swift_release();
  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v44 = (void (**)())&v42[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_dialRecentCall];
  uint64_t v45 = *(void *)&v42[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_dialRecentCall];
  _DWORD *v44 = sub_100361ADC;
  v44[1] = (void (*)())v43;
  sub_100208490(v45);
  id v46 = [self defaultCenter];
  [v46 addObserver:v42 selector:"handleCallHistoryDatabaseChangedWithNotification:" name:kCallHistoryDatabaseChangedNotification object:0];

  sub_1002D5B84();
  sub_1002018DC((uint64_t)v62);
  uint64_t v47 = *(void *)&v42[OBJC_IVAR____TtC13callservicesd31CallHistoryNotificationProvider_inCallServiceProcessObserver];
  uint64_t v48 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + OBJC_IVAR___CSDProcessObserver_processStateChanged);
  uint64_t v50 = *(void *)(v47 + OBJC_IVAR___CSDProcessObserver_processStateChanged);
  *id v49 = sub_100361AE4;
  v49[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v48;
  sub_100208490(v50);
  return v42;
}

char *sub_100360B58(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v55 = a7;
  uint64_t v54 = a6;
  uint64_t v53 = a5;
  uint64_t v52 = a4;
  id v57 = a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v60 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v63 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  objc_super v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v58 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67[3] = sub_1001F6204(0, &qword_10058B270);
  v67[4] = &off_100516A28;
  v67[0] = a2;
  uint64_t v13 = OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_contactStore;
  uint64_t v14 = self;
  id v15 = a8;
  id v16 = [v14 sharedInstance];
  id v17 = [v16 contactStore];

  *(void *)&a8[v13] = v17;
  id v18 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_postedVoicemailIdentifiers];
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_postedVoicemailIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v19 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_pendingVoicemailIdentifiers];
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_pendingVoicemailIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v20 = (uint64_t)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentVoicemailDate];
  uint64_t v21 = type metadata accessor for Date();
  sub_1001F0530(v20, 1, 1, v21);
  uint64_t v22 = (uint64_t)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentNonVisualVoicemailDate];
  sub_1001F0530((uint64_t)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentNonVisualVoicemailDate], 1, 1, v21);
  uint64_t v23 = OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_unsubscribedVoicemailInfoForUUID;
  type metadata accessor for UUID();
  sub_1001F081C((uint64_t *)&unk_10058B278);
  sub_10035FA18((unint64_t *)&qword_1005873E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  *(void *)&v15[v23] = Dictionary.init(dictionaryLiteral:)();
  v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_notificationType] = 1;
  int v24 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_add];
  *(void *)int v24 = 0;
  *((void *)v24 + 1) = 0;
  uint64_t v25 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_replace];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  id v26 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_removeNotification];
  *(void *)id v26 = 0;
  *((void *)v26 + 1) = 0;
  id v27 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_updateBadgeValue];
  *(void *)id v27 = 0;
  *((void *)v27 + 1) = 0;
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue] = a1;
  sub_10020ED28((uint64_t)v67, (uint64_t)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource]);
  id v28 = v57;
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_featureFlags] = v57;
  id v29 = objc_allocWithZone((Class)CoreTelephonyClient);
  id v30 = a1;
  id v57 = v28;
  id v31 = [v29 initWithQueue:v30];
  *(void *)&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_telephonyClient] = v31;
  swift_beginAccess();
  *(void *)id v18 = v52;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)uint64_t v19 = v53;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v32 = v54;
  sub_100361A64(v54, v20);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v33 = v55;
  sub_100361A64(v55, v22);
  swift_endAccess();
  id v34 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_localizeVoicemailName];
  *(void *)id v34 = sub_100364064;
  *((void *)v34 + 1) = 0;
  uint64_t v35 = &v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_callbackVoicemail];
  *(void *)uint64_t v35 = sub_10036424C;
  *((void *)v35 + 1) = 0;
  id v36 = (void (**)(NSURL *@<X8>))&v15[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_openURL];
  *id v36 = sub_1002260D4;
  v36[1] = 0;

  v66.receiver = v15;
  v66.super_class = ObjectType;
  uint64_t v37 = (char *)objc_msgSendSuper2(&v66, "init");
  unint64_t v38 = *(void **)&v37[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_telephonyClient];
  uint64_t v39 = v37;
  [v38 setDelegate:v39];
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  aBlock[4] = sub_100361ACC;
  aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C2C88;
  aBlock[3] = &unk_100516898;
  uint64_t v41 = _Block_copy(aBlock);
  uint64_t v42 = v39;
  uint64_t v43 = v58;
  static DispatchQoS.unspecified.getter();
  char v64 = _swiftEmptyArrayStorage;
  sub_10035FA18((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  id v44 = v59;
  uint64_t v45 = v60;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v62);
  swift_release();
  id v46 = self;
  id v47 = [v46 defaultCenter];
  [v47 addObserver:v42 selector:"voicemailsChangedWithNotification:" name:VMVoicemailVoicemailsChangedNotification object:0];

  id v48 = [v46 defaultCenter];
  [v48 addObserver:v42 selector:"onlineStatusChangedWithNotification:" name:VMVoicemailOnlineStatusChangedNotification object:0];

  id v49 = [v46 defaultCenter];
  [v49 addObserver:v42 selector:"subscriptionStateChangedWithNotification:" name:VMVoicemailSubscriptionStateStatusChangedNotification object:0];

  sub_1002392A8(v33, &qword_100584B40);
  sub_1002392A8(v32, &qword_100584B40);
  sub_1002018DC((uint64_t)v67);
  return v42;
}

id sub_100361340(void *a1, void *a2, uint64_t a3, void *a4, void *a5, char *a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  __chkstk_darwin(v15);
  id v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&a6[OBJC_IVAR___CSDUserNotificationController_providersByIdentifier] = _swiftEmptyDictionarySingleton;
  *(void *)&a6[OBJC_IVAR___CSDUserNotificationController_callFilterController] = a4;
  id v18 = &a6[OBJC_IVAR___CSDUserNotificationController_faceTimeNotificationCenter];
  *(void *)id v18 = a1;
  *((void *)v18 + 1) = &off_100516608;
  uint64_t v19 = &a6[OBJC_IVAR___CSDUserNotificationController_phoneNotificationCenter];
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = &off_100516608;
  *(void *)&a6[OBJC_IVAR___CSDUserNotificationController_providers] = a3;
  *(void *)&a6[OBJC_IVAR___CSDUserNotificationController_queue] = a5;
  type metadata accessor for BadgeManager();
  id v20 = a5;
  uint64_t v21 = a6;
  id v36 = a4;
  id v35 = a1;
  id v22 = a2;
  *(void *)&v21[OBJC_IVAR___CSDUserNotificationController_badgeManager] = BadgeManager.__allocating_init(queue:)();
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_1001F5F88(v23, (uint64_t)qword_100594CA0);
  int v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Creating XPC endpoint for User notifications", v26, 2u);
    swift_slowDealloc();
  }

  id v27 = [objc_allocWithZone((Class)CSDClientManager) initWithSerialQueue:v20];
  *(void *)&v21[OBJC_IVAR___CSDUserNotificationController_clientManager] = v27;

  v42.receiver = v21;
  v42.super_class = ObjectType;
  id v28 = objc_msgSendSuper2(&v42, "init");
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  aBlock[4] = sub_100361800;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002C2C88;
  aBlock[3] = &unk_100516708;
  id v30 = _Block_copy(aBlock);
  id v31 = v28;
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_10035FA18((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  swift_release();
  return v31;
}

uint64_t sub_1003617D0()
{
  uint64_t v1 = sub_100208504();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_100361800()
{
  sub_10035A124(*(void *)(v0 + 16));
}

unint64_t sub_100361808()
{
  unint64_t result = qword_10058B218;
  if (!qword_10058B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B218);
  }
  return result;
}

uint64_t sub_100361854()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_100208504();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100361884()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1003618CC()
{
}

void sub_1003618E0()
{
}

void sub_1003618F0()
{
  sub_10035BEFC(v0[2], v0[3], v0[4]);
}

uint64_t sub_100361900()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100361940()
{
}

uint64_t sub_10036194C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100588880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003619B4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003619EC(uint64_t a1)
{
  sub_10035E1C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1003619F4()
{
  unint64_t result = qword_10058B258;
  if (!qword_10058B258)
  {
    sub_1001F6204(255, (unint64_t *)&unk_1005887B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B258);
  }
  return result;
}

void sub_100361A54(uint64_t a1)
{
  sub_10035DA8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100361A5C(uint64_t a1)
{
  sub_10035D6F0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100361A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100361ACC()
{
}

void sub_100361AD4()
{
}

void sub_100361ADC()
{
}

void sub_100361AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1002D5BAC(a1, a2, v26, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t sub_100361B34()
{
  return v0;
}

uint64_t sub_100361B48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100361B54(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100361B78(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_100361B90()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_100361BA8()
{
  return *(void *)(v0 - 296);
}

uint64_t type metadata accessor for DiscoveryModeProvider()
{
  return self;
}

uint64_t sub_100361BE0()
{
  id v0 = sub_100008DCC();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  return _MRMediaRemoteSetRouteDiscoveryMode(1);
}

uint64_t sub_100361C54()
{
  id v0 = sub_100008DCC();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  return _MRMediaRemoteSetRouteDiscoveryMode(0);
}

uint64_t sub_100361CC8(uint64_t result, uint64_t (*a2)(long long *))
{
  uint64_t v3 = result;
  uint64_t v4 = _swiftEmptyArrayStorage;
  os_log_type_t v25 = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = a2;
    v18[1] = v2;
    uint64_t v19 = a2;
    unint64_t v7 = 0;
    uint64_t v8 = result + 32;
    uint64_t v20 = result;
    while (v7 < *(void *)(v3 + 16))
    {
      sub_10020ED28(v8, (uint64_t)v24);
      if (v6(v24))
      {
        sub_100233560(v24, (uint64_t)v21);
        unint64_t v9 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1002E40C4(0, v9[2] + 1, 1);
          unint64_t v9 = v25;
        }
        unint64_t v11 = v9[2];
        unint64_t v10 = v9[3];
        if (v11 >= v10 >> 1) {
          sub_1002E40C4(v10 > 1, v11 + 1, 1);
        }
        uint64_t v12 = v22;
        uint64_t v13 = v23;
        uint64_t v14 = sub_10020EF04((uint64_t)v21, v22);
        __chkstk_darwin(v14);
        uint64_t v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v17 + 16))(v16);
        sub_1002541EC(v11, (uint64_t)v16, (uint64_t *)&v25, v12, v13);
        unint64_t result = sub_1002018DC((uint64_t)v21);
        uint64_t v6 = v19;
        uint64_t v3 = v20;
      }
      else
      {
        unint64_t result = sub_1002018DC((uint64_t)v24);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        uint64_t v4 = v25;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_100361EDC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v21 = v2;
    uint64_t v22 = result;
    unint64_t v7 = 0;
    uint64_t v8 = result + 32;
    while (v7 < *(void *)(v3 + 16))
    {
      sub_10020ED28(v8, (uint64_t)&v26);
      uint64_t v9 = v27;
      uint64_t v10 = v28;
      sub_100204074(&v26, v27);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10) == a2)
      {
        sub_100233560(&v26, (uint64_t)v23);
        unint64_t v11 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1002E40C4(0, v11[2] + 1, 1);
          unint64_t v11 = v29;
        }
        uint64_t v12 = v5;
        unint64_t v14 = v11[2];
        unint64_t v13 = v11[3];
        if (v14 >= v13 >> 1) {
          sub_1002E40C4(v13 > 1, v14 + 1, 1);
        }
        uint64_t v15 = v24;
        uint64_t v16 = v25;
        uint64_t v17 = sub_10020EF04((uint64_t)v23, v24);
        __chkstk_darwin(v17);
        uint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_1002541EC(v14, (uint64_t)v19, (uint64_t *)&v29, v15, v16);
        unint64_t result = sub_1002018DC((uint64_t)v23);
        uint64_t v5 = v12;
        uint64_t v3 = v22;
      }
      else
      {
        unint64_t result = sub_1002018DC((uint64_t)&v26);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        uint64_t v4 = v29;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_100362104(uint64_t a1, char *a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = _swiftEmptyArrayStorage;
  id v36 = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = (uint64_t *)&a2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_postedVoicemailIdentifiers];
  uint64_t result = swift_beginAccess();
  uint64_t v29 = v6;
  if (v6)
  {
    v28[0] = v3;
    v28[1] = v2;
    unint64_t v9 = 0;
    uint64_t v10 = a1 + 32;
    while (v9 < *(void *)(a1 + 16))
    {
      sub_10020ED28(v10, (uint64_t)&v33);
      uint64_t v11 = *v7;
      uint64_t v12 = v34;
      uint64_t v13 = v35;
      sub_100204074(&v33, v34);
      unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 40);
      swift_bridgeObjectRetain();
      v30[0] = v14(v12, v13);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_100370C00(v15, v16, v11);
      char v18 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18)
      {
        uint64_t result = sub_1002018DC((uint64_t)&v33);
      }
      else
      {
        sub_100233560(&v33, (uint64_t)v30);
        uint64_t v19 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1002E40C4(0, v19[2] + 1, 1);
          uint64_t v19 = v36;
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1) {
          sub_1002E40C4(v20 > 1, v21 + 1, 1);
        }
        uint64_t v22 = v31;
        uint64_t v23 = v32;
        uint64_t v24 = sub_10020EF04((uint64_t)v30, v31);
        __chkstk_darwin(v24);
        long long v26 = (char *)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v27 + 16))(v26);
        sub_1002541EC(v21, (uint64_t)v26, (uint64_t *)&v36, v22, v23);
        uint64_t result = sub_1002018DC((uint64_t)v30);
      }
      ++v9;
      v10 += 40;
      if (v29 == v9)
      {
        uint64_t v5 = v36;
        uint64_t v3 = (void *)v28[0];
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:

    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_10036238C(uint64_t a1, char *a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = _swiftEmptyArrayStorage;
  id v36 = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = (uint64_t *)&a2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_postedVoicemailIdentifiers];
  uint64_t result = swift_beginAccess();
  uint64_t v29 = v6;
  if (v6)
  {
    v28[0] = v3;
    v28[1] = v2;
    unint64_t v9 = 0;
    uint64_t v10 = a1 + 32;
    while (v9 < *(void *)(a1 + 16))
    {
      sub_10020ED28(v10, (uint64_t)&v33);
      uint64_t v11 = *v7;
      uint64_t v12 = v34;
      uint64_t v13 = v35;
      sub_100204074(&v33, v34);
      unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 40);
      swift_bridgeObjectRetain();
      v30[0] = v14(v12, v13);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_100370C00(v15, v16, v11);
      char v18 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_100233560(&v33, (uint64_t)v30);
        uint64_t v19 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1002E40C4(0, v19[2] + 1, 1);
          uint64_t v19 = v36;
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        if (v21 >= v20 >> 1) {
          sub_1002E40C4(v20 > 1, v21 + 1, 1);
        }
        uint64_t v22 = v31;
        uint64_t v23 = v32;
        uint64_t v24 = sub_10020EF04((uint64_t)v30, v31);
        __chkstk_darwin(v24);
        long long v26 = (char *)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v27 + 16))(v26);
        sub_1002541EC(v21, (uint64_t)v26, (uint64_t *)&v36, v22, v23);
        uint64_t result = sub_1002018DC((uint64_t)v30);
      }
      else
      {
        uint64_t result = sub_1002018DC((uint64_t)&v33);
      }
      ++v9;
      v10 += 40;
      if (v29 == v9)
      {
        uint64_t v5 = v36;
        uint64_t v3 = (void *)v28[0];
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:

    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  return result;
}

void sub_100362614(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = 0;
    uint64_t v4 = 0;
    int64_t v5 = 0;
    unint64_t v6 = 0;
    unint64_t v7 = __CocoaDictionary.makeIterator()() | 0x8000000000000000;
  }
  else
  {
    sub_1002E4D1C(v25, a1);
    unint64_t v7 = v25[0];
    uint64_t v22 = v25[1];
    uint64_t v4 = v25[2];
    int64_t v5 = v25[3];
    unint64_t v6 = v25[4];
  }
  swift_bridgeObjectRetain();
  int64_t v21 = (unint64_t)(v4 + 64) >> 6;
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_7;
  }
LABEL_5:
  if (v6)
  {
    uint64_t v8 = (v6 - 1) & v6;
    unint64_t v9 = __clz(__rbit64(v6)) | (v5 << 6);
    int64_t v10 = v5;
    goto LABEL_21;
  }
  int64_t v10 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return;
  }
  if (v10 >= v21) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v10);
  if (!v16)
  {
    int64_t v17 = v5 + 2;
    if (v5 + 2 < v21)
    {
      unint64_t v16 = *(void *)(v22 + 8 * v17);
      if (v16) {
        goto LABEL_19;
      }
      int64_t v17 = v5 + 3;
      if (v5 + 3 >= v21) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v22 + 8 * v17);
      if (v16)
      {
LABEL_19:
        int64_t v10 = v17;
        goto LABEL_20;
      }
      int64_t v17 = v5 + 4;
      if (v5 + 4 < v21)
      {
        unint64_t v16 = *(void *)(v22 + 8 * v17);
        if (!v16)
        {
          int64_t v10 = v5 + 5;
          if (v5 + 5 >= v21) {
            goto LABEL_33;
          }
          unint64_t v16 = *(void *)(v22 + 8 * v10);
          if (!v16)
          {
            int64_t v20 = v5 + 6;
            while (v20 < v21)
            {
              unint64_t v16 = *(void *)(v22 + 8 * v20++);
              if (v16)
              {
                int64_t v10 = v20 - 1;
                goto LABEL_20;
              }
            }
            goto LABEL_33;
          }
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
LABEL_33:
    sub_100206FA0();
    return;
  }
LABEL_20:
  uint64_t v8 = (v16 - 1) & v16;
  unint64_t v9 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_21:
  char v18 = *(void **)(*(void *)(v7 + 56) + 8 * v9);
  id v14 = *(id *)(*(void *)(v7 + 48) + 8 * v9);
  id v15 = v18;
  if (!v14) {
    goto LABEL_33;
  }
  while (1)
  {
    v24[0] = v14;
    v24[1] = v15;
    char v19 = sub_10036927C(v24, a2);
    if (v3) {
      break;
    }
    if (v19) {
      goto LABEL_33;
    }

    int64_t v5 = v10;
    unint64_t v6 = v8;
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v11 = __CocoaDictionary.Iterator.next()();
    if (v11)
    {
      uint64_t v13 = v12;
      uint64_t v26 = v11;
      sub_1001F6204(0, (unint64_t *)&unk_100586E00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v24[0];
      swift_unknownObjectRelease();
      uint64_t v26 = v13;
      sub_1001F6204(0, (unint64_t *)&unk_10058B4C8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v24[0];
      swift_unknownObjectRelease();
      int64_t v10 = v5;
      uint64_t v8 = v6;
      if (v14) {
        continue;
      }
    }
    goto LABEL_33;
  }

  sub_100206FA0();
}

id sub_100362954(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [(id)swift_getObjCClassFromMetadata() requestWithIdentifier:v6 content:a3 trigger:a4];

  return v7;
}

void sub_1003629D8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

BOOL sub_100362A44()
{
  return [v0 transcriptionState] == (id)2 || objc_msgSend(v0, "transcriptionState") == 0;
}

BOOL sub_100362A94()
{
  return [v0 transcriptionState] == (id)4;
}

void sub_100362AC0()
{
  sub_1001FCC38();
  uint64_t v1 = sub_1002B4C14(v0, (SEL *)&selRef_callbackDestinationID);
  if (v2 || (uint64_t v1 = sub_1002B4C14(v0, (SEL *)&selRef_senderDestinationID), v3))
  {
    id v4 = (void *)v1;
    id v5 = [objc_allocWithZone((Class)TUCallProviderManager) init];
    id v6 = [v5 telephonyProvider];
    id v7 = [objc_allocWithZone((Class)TUDialRequest) initWithProvider:v6];

    sub_1001F6204(0, (unint64_t *)&unk_100586E00);
    id v8 = sub_1002DDD8C(2, v4);
    [v7 setHandle:v8];
    [v7 setOriginatingUIType:41];
    id v9 = [objc_allocWithZone((Class)TUContactsDataProvider) init];
    id v10 = [objc_allocWithZone((Class)TUContactsDataProviderFetchRequest) initWithHandle:v8];
    id v11 = [v9 executeFetchRequest:v10];
    id v12 = [v11 contacts];
    sub_1001F6204(0, (unint64_t *)&unk_100588790);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      id v14 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_5;
      }
    }
    else
    {
      id v14 = *(void **)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_5:
        sub_1002DE19C(0, (v13 & 0xC000000000000001) == 0, v13);
        if ((v13 & 0xC000000000000001) != 0) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(v13 + 32);
        }
        unint64_t v16 = v15;
        swift_bridgeObjectRelease();
        id v17 = [v16 identifier];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v14 = String._bridgeToObjectiveC()();
      }
    }
    swift_bridgeObjectRelease();
    [v7 setContactIdentifier:v14];
  }
  sub_1001FCC08();
}

uint64_t sub_100362D74()
{
  id v1 = [v0 transcript];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  if ((unint64_t)[v1 confidenceRating] < 2)
  {

    return 0;
  }
  id v3 = [v2 transcriptionString];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void sub_100362E14()
{
}

void sub_100362E54()
{
}

id sub_100362E94()
{
  return sub_100362EB8();
}

id sub_100362EB8()
{
  return [v0 identifier];
}

uint64_t sub_100362EC8()
{
  return sub_100362EEC();
}

uint64_t sub_100362EEC()
{
  return sub_1002B4C14(v0, (SEL *)&selRef_senderDestinationID);
}

id sub_100362F10()
{
  return sub_100362F34();
}

id sub_100362F34()
{
  return [v0 duration];
}

void sub_100362F44()
{
}

void sub_100362F84(SEL *a1, void (*a2)(void))
{
  id v4 = [v2 *a1];
  a2();
}

BOOL sub_100362FF0()
{
  return sub_100362A44();
}

BOOL sub_100363018()
{
  return sub_100362A94();
}

void sub_100363040()
{
}

uint64_t sub_100363064()
{
  return sub_100362D74();
}

uint64_t sub_100363088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001F081C(&qword_100584B40);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_100202310();
  id v5 = sub_1003631F8(1);
  sub_100247894((uint64_t)v5, (uint64_t)v11);
  swift_bridgeObjectRelease();
  uint64_t v6 = v12;
  if (v12)
  {
    uint64_t v7 = v13;
    sub_100204074(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    uint64_t v8 = type metadata accessor for Date();
    sub_1001F0530(v1, 0, 1, v8);
    sub_1002018DC((uint64_t)v11);
    if (sub_1001F758C(v1, 1, v8) != 1) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, v1, v8);
    }
  }
  else
  {
    sub_100235804((uint64_t)v11, &qword_10058B478);
    uint64_t v10 = type metadata accessor for Date();
    sub_1003579E4(v10);
  }
  Date.init()();
  return sub_100235804(v1, &qword_100584B40);
}

void *sub_1003631F8(uint64_t a1)
{
  id v16 = 0;
  id v2 = [v1 messagesForMailboxType:1 limit:a1 offset:0 error:&v16];
  id v3 = v16;
  if (v2)
  {
    uint64_t v4 = v2;
    sub_1001F6204(0, &qword_1005861C8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = v3;

    sub_1002506B8();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = v16;
    sub_10036F604();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1001F5F88(v9, (uint64_t)qword_100594CA0);
    sub_10036F604();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)sub_100235B18();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_10026B998();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Retrieving voicemail messages failed with error %@", v12, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v7;
}

uint64_t sub_100363454(void *a1)
{
  sub_100204074(a1, a1[3]);
  uint64_t v2 = sub_10036F5F0();
  id v4 = [v1 dataForVoicemailWithIdentifier:v3(v2)];
  if (v4)
  {
    id v5 = v4;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return sub_100235AE0();
}

uint64_t sub_1003634E0(uint64_t (*a1)(long long *))
{
  id v17 = 0;
  id v3 = [v1 messagesForMailboxType:1 read:0 limit:-1 offset:0 error:&v17];
  id v4 = v17;
  if (v3)
  {
    id v5 = v3;
    sub_1001F6204(0, &qword_1005861C8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v6 = v4;

    sub_1002506B8();
    id v8 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1001F5F88(v10, (uint64_t)qword_100594CA0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)sub_100235B18();
      uint64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_10026B998();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v14 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Retrieving inbox voicemail messages failed with error %@", v13, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    id v8 = _swiftEmptyArrayStorage;
  }
  swift_retain();
  return sub_100361CC8((uint64_t)v8, a1);
}

uint64_t sub_100363774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  uint64_t v5 = sub_100363858(1, v2, a1);
  if (!*(void *)(v5 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v5 = sub_100363858(*(uint64_t *)((char *)&off_10050B2C0 + v9 + 40), v2, a1);
      if (*(void *)(v5 + 16)) {
        break;
      }
      v9 += 8;
      uint64_t result = swift_bridgeObjectRelease();
      if (v9 == 16) {
        return result;
      }
    }
  }
  sub_100247894(v5, (uint64_t)v10);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_100235AE0();
  sub_100235804(v6, v7);
  return sub_1003426E0((uint64_t)v10, a2, &qword_10058B478);
}

uint64_t sub_100363858(uint64_t a1, id a2, uint64_t a3)
{
  id v18 = 0;
  id v4 = [a2 messagesForMailboxType:a1 limit:-1 offset:0 error:&v18];
  id v5 = v18;
  if (v4)
  {
    uint64_t v6 = v4;
    sub_1001F6204(0, &qword_1005861C8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = v5;

    sub_1002506B8();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = v18;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_1001F5F88(v11, (uint64_t)qword_100594CA0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      swift_errorRetain();
      id v16 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v18 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v15 = v16;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Retrieving voicemail messages failed with error %@", v14, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  return sub_100361EDC((uint64_t)v9, a3);
}

void sub_100363B00()
{
  v3[4] = sub_100363BBC;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100363C0C;
  v3[3] = &unk_100516E70;
  uint64_t v1 = _Block_copy(v3);
  unint64_t v2 = (unint64_t)[v0 countOfVoicemailsPassingTest:v1];
  _Block_release(v1);
  if ((v2 & 0x8000000000000000) != 0) {
    __break(1u);
  }
}

uint64_t sub_100363BBC(void *a1)
{
  if ([a1 mailboxType] == (id)1) {
    return [a1 isRead] ^ 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100363C0C(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

void sub_100363C64(uint64_t a1)
{
  sub_10020ED28(a1, (uint64_t)v4);
  sub_1001F081C(&qword_100588860);
  sub_1001F6204(0, &qword_1005861C8);
  if (swift_dynamicCast())
  {
    id v2 = [v1 trashVoicemail:v3];
  }
}

unint64_t sub_100363D00()
{
  return (unint64_t)sub_100363D28() & 1;
}

id sub_100363D28()
{
  return [v0 isSubscribed];
}

unint64_t sub_100363D4C()
{
  return (unint64_t)sub_100363D74() & 1;
}

id sub_100363D74()
{
  return [v0 isTranscriptionEnabled];
}

uint64_t sub_100363D98@<X0>(uint64_t a1@<X8>)
{
  return sub_100363088(a1);
}

uint64_t sub_100363DBC(void *a1)
{
  return sub_100363454(a1);
}

uint64_t sub_100363DE0(uint64_t (*a1)(long long *))
{
  return sub_1003634E0(a1);
}

uint64_t sub_100363E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100363774(a1, a2);
}

void sub_100363E28()
{
}

void sub_100363E4C(uint64_t a1)
{
}

uint64_t sub_100363E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for BadgeCountCategory.legacyVoicemail(_:);
  uint64_t v3 = type metadata accessor for BadgeCountCategory();
  sub_10020233C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);

  return sub_1001F0530(a1, 0, 1, v3);
}

uint64_t sub_100363EFC()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  qword_10058B350 = result;
  *(void *)algn_10058B358 = v1;
  return result;
}

uint64_t sub_100363F2C()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  qword_10058B360 = result;
  *(void *)algn_10058B368 = v1;
  return result;
}

uint64_t sub_100363F5C()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  qword_10058B370 = result;
  *(void *)algn_10058B378 = v1;
  return result;
}

uint64_t sub_100363F8C(Swift::String string)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10050B2F8, v3);
  sub_10036F604();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v1) {
    return v4;
  }
  else {
    return 0;
  }
}

void sub_100363FDC()
{
  id v0 = [self sharedInstance];
  id v1 = [v0 contactStore];

  id v2 = [objc_allocWithZone((Class)TUContactsDataProvider) initWithContactsDataSource:v1];
  qword_10058B380 = (uint64_t)v2;
}

id sub_100364064(void *a1)
{
  uint64_t v1 = a1[4];
  sub_100204074(a1, a1[3]);
  uint64_t v2 = sub_10036F604();
  v3(v2, v1);
  if (v4)
  {
    sub_1001F6204(0, (unint64_t *)&unk_100586E00);
    sub_100235AE0();
    id v5 = sub_1003641D8();
    id v6 = [objc_allocWithZone((Class)TUContactsDataProviderFetchRequest) initWithHandle:v5];
    if (qword_100583AA0 != -1) {
      swift_once();
    }
    id v7 = [(id)qword_10058B380 executeFetchRequest:v6];
    id v8 = [v7 localizedName];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v9;
  }
  else
  {
    return sub_100274858(0x4E574F4E4B4E55, (void *)0xE700000000000000);
  }
}

id sub_1003641D8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithDestinationID:v1];

  return v2;
}

uint64_t sub_10036424C(void *a1)
{
  uint64_t v2 = sub_1001F081C(&qword_1005878F0);
  uint64_t v3 = sub_100202384(v2);
  __chkstk_darwin(v3);
  sub_10024672C();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100204074(a1, a1[3]);
  uint64_t v16 = sub_10036F5DC();
  id v18 = (void *)v17(v16);
  if (!v18)
  {
    sub_1001F0530((uint64_t)v9, 1, 1, v10);
    return sub_100235804((uint64_t)v9, &qword_1005878F0);
  }
  char v19 = v18;
  id v20 = [v18 URL];

  if (v20)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  sub_1001F0530(v6, v21, 1, v10);
  sub_1003426E0(v6, (uint64_t)v9, &qword_1005878F0);
  if (sub_1001F758C((uint64_t)v9, 1, v10) == 1) {
    return sub_100235804((uint64_t)v9, &qword_1005878F0);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v9, v10);
  URL._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  TUOpenURL();

  uint64_t v26 = sub_10036F5C8();
  return v27(v26);
}

void sub_100364444()
{
}

void sub_100364468()
{
  NSString v1 = v0;
  uint64_t v2 = sub_1001F081C(&qword_100584B40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue];
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  uint64_t v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v11)
  {
    uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24];
    uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32];
    sub_100204074(&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource], v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    uint64_t v14 = type metadata accessor for Date();
    sub_1001F0530((uint64_t)v4, 0, 1, v14);
    uint64_t v11 = (uint64_t)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentVoicemailDate];
    swift_beginAccess();
    sub_10036F208((uint64_t)v4, v11);
    swift_endAccess();
    if (qword_100583A38 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  sub_1001F5F88(v15, (uint64_t)qword_100594CA0);
  uint64_t v16 = v1;
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    sub_100319018(v11, (uint64_t)v4);
    uint64_t v21 = sub_1001FD134((uint64_t)v4);
    unint64_t v23 = v22;
    sub_100235804((uint64_t)v4, &qword_100584B40);
    uint64_t v25 = sub_1002344D8(v21, v23, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2112;
    uint64_t v25 = (uint64_t)v16;
    uint64_t v24 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v20 = v16;

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Most recent voicemail date is now %s for notification provider %@", (uint8_t *)v19, 0x16u);
    sub_1001F081C(&qword_100585900);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100364870()
{
  uint64_t v1 = OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_contactStore;
  id v2 = [self sharedInstance];
  id v3 = [v2 contactStore];

  *(void *)&v0[v1] = v3;
  *(void *)&v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_postedVoicemailIdentifiers] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_pendingVoicemailIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v4 = (uint64_t)&v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentVoicemailDate];
  uint64_t v5 = type metadata accessor for Date();
  sub_1001F0530(v4, 1, 1, v5);
  sub_1001F0530((uint64_t)&v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentNonVisualVoicemailDate], 1, 1, v5);
  uint64_t v6 = OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_unsubscribedVoicemailInfoForUUID;
  type metadata accessor for UUID();
  sub_1001F081C((uint64_t *)&unk_10058B278);
  sub_10036F188((unint64_t *)&qword_1005873E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  *(void *)&v0[v6] = Dictionary.init(dictionaryLiteral:)();
  v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_notificationType] = 1;
  uint64_t v7 = &v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_add];
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = &v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_replace];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = &v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_removeNotification];
  *uint64_t v9 = 0;
  v9[1] = 0;
  id v10 = &v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_updateBadgeValue];
  *id v10 = 0;
  v10[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100364A5C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (qword_100583A38 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v7 = type metadata accessor for Logger();
  sub_1001F5F88(v7, (uint64_t)qword_100594CA0);
  uint64_t v8 = v0;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  p_opt_class_meths = &OBJC_PROTOCOL___TUMomentsControllerDelegate.opt_class_meths;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v13 = Set.description.getter();
    unint64_t v15 = v14;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___TUMomentsControllerDelegate + 48);
    swift_bridgeObjectRelease();
    v36[1] = sub_1002344D8(v13, v15, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Removing all voicemail notifications. Current notification identifiers: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v0 = (char *)p_opt_class_meths[117] + (void)v8;
  swift_beginAccess();
  v36[0] = v0;
  uint64_t v16 = *(void *)v0;
  uint64_t v17 = *(void *)v0 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(*(void *)v0 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(*(void *)v0 + 56);
  uint64_t v21 = &v8[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_removeNotification];
  int64_t v22 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  while (v20)
  {
    unint64_t v24 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v25 = v24 | (v23 << 6);
LABEL_25:
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))v21;
    if (*(void *)v21)
    {
      id v30 = (uint64_t *)(*(void *)(v16 + 48) + 16 * v25);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      long long v33 = (char *)*((void *)v21 + 1);
      swift_bridgeObjectRetain();
      sub_1002084D8((uint64_t)v29);
      uint64_t v34 = v31;
      id v0 = v33;
      v29(v34, v32);
      sub_100208490((uint64_t)v29);
      swift_bridgeObjectRelease();
    }
  }
  int64_t v26 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v26 >= v22) {
    goto LABEL_27;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v26);
  ++v23;
  if (v27) {
    goto LABEL_24;
  }
  int64_t v23 = v26 + 1;
  if (v26 + 1 >= v22) {
    goto LABEL_27;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v23);
  if (v27) {
    goto LABEL_24;
  }
  int64_t v23 = v26 + 2;
  if (v26 + 2 >= v22) {
    goto LABEL_27;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v23);
  if (v27)
  {
LABEL_24:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
    goto LABEL_25;
  }
  int64_t v28 = v26 + 3;
  if (v28 < v22)
  {
    unint64_t v27 = *(void *)(v17 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        int64_t v23 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_29;
        }
        if (v23 >= v22) {
          goto LABEL_27;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v23);
        ++v28;
        if (v27) {
          goto LABEL_24;
        }
      }
    }
    int64_t v23 = v28;
    goto LABEL_24;
  }
LABEL_27:
  swift_release();
  *(void *)v36[0] = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100364ECC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (void *)((char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue);
  void *v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24);
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32);
    sub_100204074((void *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), v10);
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
    sub_10020ED28(a1, (uint64_t)v17);
    if (v12)
    {
      uint64_t v13 = v18;
      uint64_t v14 = v19;
      sub_100204074(v17, v18);
      char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 72))(v13, v14);
    }
    else
    {
      char v15 = 0;
    }
    sub_1002018DC((uint64_t)v17);
    return v15 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100365078(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (void *)((char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue);
  void *v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24);
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32);
    sub_100204074((void *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), v10);
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
    sub_10020ED28(a1, (uint64_t)v17);
    if (v12)
    {
      uint64_t v13 = v18;
      uint64_t v14 = v19;
      sub_100204074(v17, v18);
      char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 80))(v13, v14);
    }
    else
    {
      char v15 = 0;
    }
    sub_1002018DC((uint64_t)v17);
    return v15 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100365224(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(void **)&v2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue];
  *(void *)uint64_t v7 = v8;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v7 = &v2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource];
  uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24];
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32];
  sub_100204074(&v2[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource], v10);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11) & 1) == 0)
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1001F5F88(v16, (uint64_t)qword_100594CA0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Voicemail is not subscribed", v19, 2u);
      swift_slowDealloc();
    }
    goto LABEL_21;
  }
  if (qword_100583A38 != -1) {
    goto LABEL_25;
  }
LABEL_4:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1001F5F88(v12, (uint64_t)qword_100594CA0);
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    char v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v15 = 134217984;
    v33[0] = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Asked to post %ld voicemails", v15, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    if (v20 == 1)
    {
      sub_100247894(a1, (uint64_t)&v31);
      if (v32)
      {
        sub_100233560(&v31, (uint64_t)v33);
        uint64_t v21 = v2;
        sub_1003658A4(v33, 1, (uint64_t)v21, v21);
        sub_1002018DC((uint64_t)v33);
      }
      else
      {
        sub_100235804((uint64_t)&v31, &qword_10058B478);
      }
      return;
    }
    int64_t v22 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      int64_t v23 = v2;
      sub_10036637C(v22, 0, (uint64_t)v23, v23);
      v22 += 5;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v24 = *((void *)v7 + 3);
    uint64_t v25 = *((void *)v7 + 4);
    sub_100204074(v7, v24);
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v24, v25);
    if (v26 >= 1)
    {
      uint64_t v27 = v26;
      int64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v30 = 134217984;
        v33[0] = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Adding notification with count: %ld", v30, 0xCu);
        swift_slowDealloc();
      }

      uint64_t v17 = sub_10036706C(v27, 0);
      sub_1003673C0(v17);
LABEL_21:
    }
  }
}

void sub_1003656CC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (void *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue);
  *id v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    sub_1001F6204(0, (unint64_t *)&qword_1005858F8);
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_100204074(a1, v12);
    v17[1] = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    id v16 = sub_100362954(v14, v15, a2, 0);
    [v16 setDestinations:15];
    sub_1003673C0(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003658A4(void *a1, int a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  id v66 = a4;
  id v9 = sub_1003679A8(a1, a2);
  id v10 = [objc_allocWithZone((Class)TUIntentController) initWithContactProvider:*(void *)(a3 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_contactStore)];
  sub_10020ED28((uint64_t)a1, (uint64_t)aBlock);
  sub_1001F081C(&qword_100588860);
  sub_1001F6204(0, &qword_1005861C8);
  if (swift_dynamicCast())
  {
    id v11 = v72[0];
    uint64_t v67 = (uint64_t)_swiftEmptyArrayStorage;
    id v12 = objc_msgSend(v72[0], "csd_callbackHandle");
    if (v12)
    {
      id v13 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    id v14 = objc_msgSend(v11, "csd_senderHandle");
    if (v14)
    {
      id v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_1001F6204(0, (unint64_t *)&unk_100586E00);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v10 voicemailStartCallIntentByHandleForHandles:isa];

    sub_1001F6204(0, (unint64_t *)&unk_10058B4C8);
    sub_100247240();
    uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100362614(v18, &v67);
    uint64_t v20 = v19;
    int64_t v22 = v21;
    swift_bridgeObjectRelease();
    if (v20)
    {

      if (qword_100583A38 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_1001F5F88(v23, (uint64_t)qword_100594CA0);
      uint64_t v24 = v11;
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      char v65 = v24;
      if (os_log_type_enabled(v25, v26))
      {
        id v63 = v10;
        id v27 = v9;
        uint64_t v28 = v8;
        os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v29 = 134217984;
        aBlock[0] = [v24 identifier];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Retrieved intent; updating notification content for voicemail message with identifier %lu",
          v29,
          0xCu);
        uint64_t v8 = v28;
        id v9 = v27;
        id v10 = v63;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v25 = v24;
      }

      if ([*(id *)(a3 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_featureFlags) vmCatchUpDonationEnabled])
      {
        sub_1001F6204(0, &qword_10058B4D8);
        id v48 = v22;
        id v49 = sub_100369480(v48, 0);
        [v49 setDirection:2];
        sub_10020ED28((uint64_t)a1, (uint64_t)v72);
        uint64_t v50 = (void *)swift_allocObject();
        v50[2] = v9;
        v50[3] = v48;
        v50[4] = sub_10036F294;
        v50[5] = v8;
        sub_100233560((long long *)v72, (uint64_t)(v50 + 6));
        v50[11] = v65;
        id v70 = sub_10036F2D8;
        id v71 = v50;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_1003629D8;
        uint64_t v69 = &unk_100516D08;
        uint64_t v51 = _Block_copy(aBlock);
        uint64_t v52 = v65;
        id v53 = v48;
        id v54 = v9;
        swift_retain();
        swift_release();
        [v49 donateInteractionWithCompletion:v51];

        _Block_release(v51);
      }
      else
      {
        aBlock[0] = 0;
        id v55 = [v9 contentByUpdatingWithProvider:v22 error:aBlock];
        if (v55)
        {
          uint64_t v56 = v55;
          id v57 = aBlock[0];
          sub_100366E54();
        }
        else
        {
          id v58 = aBlock[0];
          _convertNSErrorToError(_:)();

          swift_willThrow();
          objc_super v59 = v65;
          uint64_t v60 = Logger.logObject.getter();
          os_log_type_t v61 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t v62 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v62 = 134217984;
            aBlock[0] = [v59 identifier];
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            _os_log_impl((void *)&_mh_execute_header, v60, v61, "Could not update notification content; using original notification content for voicemail message with identifier %lu",
              v62,
              0xCu);
            swift_slowDealloc();
          }
          else
          {

            uint64_t v60 = v59;
          }

          sub_100366E54();
          swift_errorRelease();
        }
      }
    }
    else
    {
      if (qword_100583A38 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_1001F5F88(v37, (uint64_t)qword_100594CA0);
      sub_10020ED28((uint64_t)a1, (uint64_t)aBlock);
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        id v64 = v11;
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 134217984;
        id v41 = v10;
        id v42 = v9;
        id v44 = v69;
        uint64_t v43 = v70;
        sub_100204074(aBlock, (uint64_t)v69);
        uint64_t v45 = (uint64_t (*)(void *, uint64_t (*)()))*((void *)v43 + 5);
        id v46 = v43;
        id v9 = v42;
        id v10 = v41;
        id v47 = (void *)v45(v44, v46);
        sub_1002018DC((uint64_t)aBlock);
        aBlock[0] = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Cound not retrieve intent; using original notification content for voicemail message with identifier %lu",
          v40,
          0xCu);
        id v11 = v64;
        swift_slowDealloc();
      }
      else
      {
        sub_1002018DC((uint64_t)aBlock);
      }

      sub_100366E54();
    }

    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_1001F5F88(v30, (uint64_t)qword_100594CA0);
    sub_10020ED28((uint64_t)a1, (uint64_t)aBlock);
    long long v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)long long v33 = 134217984;
      uint64_t v34 = v69;
      uint64_t v35 = v70;
      sub_100204074(aBlock, (uint64_t)v69);
      id v36 = (void *)(*((uint64_t (**)(void *, uint64_t (*)()))v35 + 5))(v34, v35);
      sub_1002018DC((uint64_t)aBlock);
      aBlock[0] = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Cound not retrieve voicemail message; using original notification content for voicemail message with identifier %lu",
        v33,
        0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_1002018DC((uint64_t)aBlock);
    }

    sub_100366E54();
    swift_release();
  }
}

void sub_10036637C(void *a1, int a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  id v66 = a4;
  id v9 = sub_1003679A8(a1, a2);
  id v10 = [objc_allocWithZone((Class)TUIntentController) initWithContactProvider:*(void *)(a3 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_contactStore)];
  sub_10020ED28((uint64_t)a1, (uint64_t)aBlock);
  sub_1001F081C(&qword_100588860);
  sub_1001F6204(0, &qword_1005861C8);
  if (swift_dynamicCast())
  {
    id v11 = v72[0];
    uint64_t v67 = (uint64_t)_swiftEmptyArrayStorage;
    id v12 = objc_msgSend(v72[0], "csd_callbackHandle");
    if (v12)
    {
      id v13 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    id v14 = objc_msgSend(v11, "csd_senderHandle");
    if (v14)
    {
      id v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_1001F6204(0, (unint64_t *)&unk_100586E00);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v10 voicemailStartCallIntentByHandleForHandles:isa];

    sub_1001F6204(0, (unint64_t *)&unk_10058B4C8);
    sub_100247240();
    uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100362614(v18, &v67);
    uint64_t v20 = v19;
    int64_t v22 = v21;
    swift_bridgeObjectRelease();
    if (v20)
    {

      if (qword_100583A38 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_1001F5F88(v23, (uint64_t)qword_100594CA0);
      uint64_t v24 = v11;
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      char v65 = v24;
      if (os_log_type_enabled(v25, v26))
      {
        id v63 = v10;
        id v27 = v9;
        uint64_t v28 = v8;
        os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v29 = 134217984;
        aBlock[0] = [v24 identifier];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Retrieved intent; updating notification content for voicemail message with identifier %lu",
          v29,
          0xCu);
        uint64_t v8 = v28;
        id v9 = v27;
        id v10 = v63;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v25 = v24;
      }

      if ([*(id *)(a3 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_featureFlags) vmCatchUpDonationEnabled])
      {
        sub_1001F6204(0, &qword_10058B4D8);
        id v48 = v22;
        id v49 = sub_100369480(v48, 0);
        [v49 setDirection:2];
        sub_10020ED28((uint64_t)a1, (uint64_t)v72);
        uint64_t v50 = (void *)swift_allocObject();
        v50[2] = v9;
        v50[3] = v48;
        v50[4] = sub_10036F2E0;
        v50[5] = v8;
        sub_100233560((long long *)v72, (uint64_t)(v50 + 6));
        v50[11] = v65;
        id v70 = sub_10036F2D8;
        id v71 = v50;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_1003629D8;
        uint64_t v69 = &unk_100516DD0;
        uint64_t v51 = _Block_copy(aBlock);
        uint64_t v52 = v65;
        id v53 = v48;
        id v54 = v9;
        swift_retain();
        swift_release();
        [v49 donateInteractionWithCompletion:v51];

        _Block_release(v51);
      }
      else
      {
        aBlock[0] = 0;
        id v55 = [v9 contentByUpdatingWithProvider:v22 error:aBlock];
        if (v55)
        {
          uint64_t v56 = v55;
          id v57 = aBlock[0];
          sub_100366E54();
        }
        else
        {
          id v58 = aBlock[0];
          _convertNSErrorToError(_:)();

          swift_willThrow();
          objc_super v59 = v65;
          uint64_t v60 = Logger.logObject.getter();
          os_log_type_t v61 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t v62 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v62 = 134217984;
            aBlock[0] = [v59 identifier];
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            _os_log_impl((void *)&_mh_execute_header, v60, v61, "Could not update notification content; using original notification content for voicemail message with identifier %lu",
              v62,
              0xCu);
            swift_slowDealloc();
          }
          else
          {

            uint64_t v60 = v59;
          }

          sub_100366E54();
          swift_errorRelease();
        }
      }
    }
    else
    {
      if (qword_100583A38 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_1001F5F88(v37, (uint64_t)qword_100594CA0);
      sub_10020ED28((uint64_t)a1, (uint64_t)aBlock);
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        id v64 = v11;
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 134217984;
        id v41 = v10;
        id v42 = v9;
        id v44 = v69;
        uint64_t v43 = v70;
        sub_100204074(aBlock, (uint64_t)v69);
        uint64_t v45 = (uint64_t (*)(void *, uint64_t (*)()))*((void *)v43 + 5);
        id v46 = v43;
        id v9 = v42;
        id v10 = v41;
        id v47 = (void *)v45(v44, v46);
        sub_1002018DC((uint64_t)aBlock);
        aBlock[0] = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Cound not retrieve intent; using original notification content for voicemail message with identifier %lu",
          v40,
          0xCu);
        id v11 = v64;
        swift_slowDealloc();
      }
      else
      {
        sub_1002018DC((uint64_t)aBlock);
      }

      sub_100366E54();
    }

    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_1001F5F88(v30, (uint64_t)qword_100594CA0);
    sub_10020ED28((uint64_t)a1, (uint64_t)aBlock);
    long long v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)long long v33 = 134217984;
      uint64_t v34 = v69;
      uint64_t v35 = v70;
      sub_100204074(aBlock, (uint64_t)v69);
      id v36 = (void *)(*((uint64_t (**)(void *, uint64_t (*)()))v35 + 5))(v34, v35);
      sub_1002018DC((uint64_t)aBlock);
      aBlock[0] = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Cound not retrieve voicemail message; using original notification content for voicemail message with identifier %lu",
        v33,
        0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_1002018DC((uint64_t)aBlock);
    }

    sub_100366E54();
    swift_release();
  }
}

void sub_100366E54()
{
  sub_1001FCC38();
  uint64_t v20 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v10);
  uint64_t v21 = sub_10021EA1C();
  sub_1001F6398();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1002024D0();
  sub_10020ED28(v9, (uint64_t)v23);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v5;
  sub_100233560(v23, v14 + 24);
  *(void *)(v14 + 64) = v7;
  v22[4] = v3;
  v22[5] = v14;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  void v22[2] = sub_1002C2C88;
  v22[3] = v20;
  id v15 = _Block_copy(v22);
  id v16 = v5;
  id v17 = v7;
  static DispatchQoS.unspecified.getter();
  sub_10036F188((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  sub_10036F584();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  uint64_t v18 = sub_10036F5C8();
  v19(v18);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v21);
  swift_release();
  sub_1001FCC08();
}

id sub_10036706C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
  sub_100274858(0xD000000000000014, (void *)0x800000010048B0A0);
  sub_1001F081C(&qword_100584B20);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10048F550;
  *(void *)(v8 + 56) = &type metadata for Int;
  *(void *)(v8 + 64) = &protocol witness table for Int;
  *(void *)(v8 + 32) = a1;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setBody:v9];

  sub_100274858(0x49414D4543494F56, (void *)0xE90000000000004CLL);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setTitle:v10];

  if (qword_100583A98 != -1) {
    swift_once();
  }
  NSString v11 = String._bridgeToObjectiveC()();
  [v7 setCategoryIdentifier:v11];

  URL.init(string:)();
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v14 = 0;
  if (sub_1001F758C((uint64_t)v6, 1, v12) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    uint64_t v14 = v15;
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
  }
  [v7 setDefaultActionURL:v14];

  uint64_t v16 = sub_1003691BC();
  sub_10036EEF0(v16, v17, v7);
  if (a2)
  {
    id v18 = [self soundWithAlertType:4];
    [v7 setSound:v18];
  }
  sub_1001F6204(0, (unint64_t *)&qword_1005858F8);
  id v19 = v7;
  id v20 = sub_100362954(0xD000000000000012, 0x800000010048B0C0, v19, 0);
  [v20 setDestinations:15];

  return v20;
}

id sub_1003673C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue);
  *id v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    NSString v11 = *(void (**)(void *))(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_add);
    if (v11)
    {
      swift_retain();
      v11(a1);
      sub_100208490((uint64_t)v11);
    }
    id v12 = [a1 identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    swift_beginAccess();
    sub_1002DFB58(&v17, v13, v15);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return [self _resetCache];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100367598(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (void *)((char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue);
  *id v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
LABEL_4:
    uint64_t v12 = type metadata accessor for Logger();
    sub_1001F5F88(v12, (uint64_t)qword_100594CA0);
    swift_bridgeObjectRetain();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 134217984;
      v35[0] = *(void *)(a1 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Asked to update %ld voicemail notifications", v15, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v20 = *(void *)(a1 + 16);
    if (v20)
    {
      uint64_t v21 = (void (**)(void))(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_replace);
      uint64_t v22 = a1 + 32;
      v31[1] = a1;
      swift_bridgeObjectRetain();
      os_log_type_t v32 = v21;
      do
      {
        sub_10020ED28(v22, (uint64_t)v35);
        id v23 = sub_1003679A8(v35, 0);
        uint64_t v24 = v23;
        uint64_t v25 = *v21;
        if (*v21)
        {
          id v33 = v23;
          uint64_t v27 = v36;
          uint64_t v26 = v37;
          sub_100204074(v35, v36);
          uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 40);
          swift_retain();
          uint64_t v29 = v26;
          uint64_t v24 = v33;
          uint64_t v34 = v28(v27, v29);
          uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
          v25(v30);
          sub_100208490((uint64_t)v25);
          uint64_t v21 = v32;
          swift_bridgeObjectRelease();
        }

        sub_1002018DC((uint64_t)v35);
        v22 += 40;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    return;
  }
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32);
  sub_100204074((void *)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), v10);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11))
  {
    if (qword_100583A38 == -1) {
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1001F5F88(v16, (uint64_t)qword_100594CA0);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Voicemail is not subscribed", v19, 2u);
    swift_slowDealloc();
  }
}

id sub_1003679A8(void *a1, int a2)
{
  int v107 = a2;
  uint64_t v108 = type metadata accessor for URL();
  uint64_t v104 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  id v101 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001F081C(&qword_1005878F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v102 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v103 = (char *)&v100 - v9;
  __chkstk_darwin(v8);
  uint64_t v106 = (uint64_t)&v100 - v10;
  uint64_t v105 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
  sub_100274858(0x49414D4543494F56, (void *)0xE90000000000004CLL);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setTitle:v19];

  uint64_t v109 = v2;
  sub_100369134(a1);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setBody:v20];

  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  sub_100204074(a1, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  [v18 setDate:isa];

  uint64_t v24 = self;
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  sub_100204074(a1, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
  Class v27 = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v105);
  id v28 = [v24 phoneAppVoicemailURLForMessageUUID:v27];

  if (v28)
  {
    uint64_t v29 = v101;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = v104;
    uint64_t v31 = v106;
    os_log_type_t v32 = v29;
    uint64_t v33 = v108;
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v106, v32, v108);
    sub_1001F0530(v31, 0, 1, v33);
    if (sub_1001F758C(v31, 1, v33) == 1)
    {
      id v28 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v34);
      id v28 = v35;
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v33);
    }
  }
  else
  {
    sub_1001F0530(v106, 1, 1, v108);
  }
  [v18 setDefaultActionURL:v28];

  uint64_t v36 = sub_1003691BC();
  sub_10036EEF0(v36, v37, v18);
  v110[0] = 0xD000000000000015;
  v110[1] = 0x800000010048B060;
  AnyHashable.init<A>(_:)();
  uint64_t v38 = a1[3];
  uint64_t v39 = a1[4];
  sub_100204074(a1, v38);
  id v40 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39));
  uint64_t v41 = sub_1001F6204(0, (unint64_t *)&qword_100585590);
  uint64_t v111 = v41;
  v110[0] = v40;
  id v42 = [v18 userInfo];
  uint64_t v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v112 = v43;
  sub_1002C2704((uint64_t)v110, (uint64_t)v113);
  Class v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setUserInfo:v44];

  v110[0] = 0xD000000000000011;
  v110[1] = 0x800000010048B080;
  AnyHashable.init<A>(_:)();
  uint64_t v45 = a1[3];
  uint64_t v46 = a1[4];
  sub_100204074(a1, v45);
  id v47 = *(double (**)(uint64_t, uint64_t))(v46 + 56);
  uint64_t v48 = v46;
  uint64_t v49 = v109;
  id v50 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v47(v45, v48));
  uint64_t v111 = v41;
  v110[0] = v50;
  id v51 = [v18 userInfo];
  uint64_t v52 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v112 = v52;
  sub_1002C2704((uint64_t)v110, (uint64_t)v113);
  Class v53 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setUserInfo:v53];

  uint64_t v54 = *(void *)(v49 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24);
  uint64_t v55 = *(void *)(v49 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32);
  sub_100204074((void *)(v49 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), v54);
  uint64_t v56 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48))(a1, v54, v55);
  if (v57 >> 60 != 15)
  {
    uint64_t v58 = v56;
    unint64_t v59 = v57;
    strcpy((char *)v110, "voicemailData");
    HIWORD(v110[1]) = -4864;
    AnyHashable.init<A>(_:)();
    Class v60 = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v111 = sub_1001F6204(0, &qword_100585B70);
    v110[0] = v60;
    id v61 = [v18 userInfo];
    uint64_t v62 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v112 = v62;
    sub_1002C2704((uint64_t)v110, (uint64_t)v113);
    Class v63 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 setUserInfo:v63];
    sub_1001FCB18(v58, v59);
  }
  uint64_t v64 = a1[3];
  uint64_t v65 = a1[4];
  sub_100204074(a1, v64);
  id v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 88))(v64, v65);
  if (v66)
  {
    uint64_t v67 = v66;
    id v68 = [v66 URL];

    if (v68)
    {
      uint64_t v69 = (uint64_t)v102;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v70 = 0;
      uint64_t v71 = v108;
    }
    else
    {
      uint64_t v70 = 1;
      uint64_t v71 = v108;
      uint64_t v69 = (uint64_t)v102;
    }
    uint64_t v72 = (uint64_t)v103;
    sub_1001F0530(v69, v70, 1, v71);
    sub_1003426E0(v69, v72, &qword_1005878F0);
    if (sub_1001F758C(v72, 1, v71) != 1)
    {
      URL.absoluteString.getter();
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v72, v71);
      v110[0] = 0xD000000000000010;
      v110[1] = 0x80000001004858E0;
      AnyHashable.init<A>(_:)();
      NSString v79 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v111 = sub_1001F6204(0, (unint64_t *)&qword_10058B4C0);
      v110[0] = v79;
      id v80 = [v18 userInfo];
      uint64_t v81 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v112 = v81;
      sub_1002C2704((uint64_t)v110, (uint64_t)v113);
      Class v82 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 setUserInfo:v82];

      goto LABEL_21;
    }
    sub_100235804(v72, &qword_1005878F0);
  }
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v73 = type metadata accessor for Logger();
  sub_1001F5F88(v73, (uint64_t)qword_100594CA0);
  sub_10020ED28((uint64_t)a1, (uint64_t)v113);
  uint64_t v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = (uint8_t *)swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    *(_DWORD *)uint64_t v76 = 136315138;
    sub_10020ED28((uint64_t)v113, (uint64_t)v110);
    sub_1001F081C(&qword_100588860);
    uint64_t v77 = String.init<A>(reflecting:)();
    v110[0] = sub_1002344D8(v77, v78, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002018DC((uint64_t)v113);
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "[WARN] Could not generate dial request URL for voicemail: %s", v76, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002018DC((uint64_t)v113);
  }

LABEL_21:
  uint64_t v83 = a1[3];
  uint64_t v84 = a1[4];
  sub_100204074(a1, v83);
  uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 48))(v83, v84);
  if (v86)
  {
    uint64_t v87 = v85;
    uint64_t v88 = v86;
    if (qword_100583A88 != -1) {
      swift_once();
    }
    NSString v89 = String._bridgeToObjectiveC()();
    [v18 setCategoryIdentifier:v89];

    sub_1001F081C((uint64_t *)&unk_100585280);
    uint64_t v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = xmmword_10048F550;
    *(void *)(v90 + 32) = v87;
    *(void *)(v90 + 40) = v88;
    swift_bridgeObjectRetain();
    sub_10036EF54(v90, v18);
    NSString v91 = String._bridgeToObjectiveC()();
    [v18 setThreadIdentifier:v91];

    strcpy((char *)v110, "contactInfo");
    HIDWORD(v110[1]) = -352321536;
    AnyHashable.init<A>(_:)();
    NSString v92 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_1001F6204(0, (unint64_t *)&qword_10058B4C0);
    v110[0] = v92;
    id v93 = [v18 userInfo];
    uint64_t v94 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v112 = v94;
    sub_1002C2704((uint64_t)v110, (uint64_t)v113);
    Class v95 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 setUserInfo:v95];
  }
  else
  {
    if (qword_100583A90 != -1) {
      swift_once();
    }
    NSString v96 = String._bridgeToObjectiveC()();
    [v18 setCategoryIdentifier:v96];
  }
  if (v107)
  {
    id v97 = [self soundWithAlertType:4];
    [v18 setSound:v97];
  }
  sub_100368904(a1);
  sub_1001F6204(0, &qword_10058B4B8);
  Class v98 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setAttachments:v98];

  return v18;
}

unint64_t sub_100368904(void *a1)
{
  uint64_t v2 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v37 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - v15;
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_100204074(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 64))(v17, v18);
  NSString v19 = self;
  URL._bridgeToObjectiveC()(v20);
  uint64_t v22 = v21;
  uint64_t v39 = v16;
  URL.lastPathComponent.getter();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [v19 copyFileAtURL:v22 toTemporaryFileWithName:v23];

  if (!v24)
  {
    sub_1001F0530((uint64_t)v4, 1, 1, v5);
    uint64_t v26 = v5;
    goto LABEL_5;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v25(v4, v12, v5);
  sub_1001F0530((uint64_t)v4, 0, 1, v5);
  uint64_t v26 = v5;
  if (sub_1001F758C((uint64_t)v4, 1, v5) == 1)
  {
LABEL_5:
    sub_100235804((uint64_t)v4, &qword_1005878F0);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    goto LABEL_6;
  }
  Class v27 = v38;
  v25(v38, v4, v26);
  sub_1001F6204(0, &qword_10058B4B8);
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  sub_100204074(a1, v28);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 40))(v28, v29);
  uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v32 = v31;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v27, v26);
  id v36 = sub_100368F78(v30, v32, (uint64_t)v9, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v33 = *(void (**)(char *, uint64_t))(v6 + 8);
  v33(v27, v26);
LABEL_6:
  unint64_t v34 = v41;
  v33(v39, v26);
  return v34;
}

id sub_100368F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  if (a4)
  {
    v10.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10.super.Class isa = 0;
  }
  id v19 = 0;
  id v11 = [(id)swift_getObjCClassFromMetadata() attachmentWithIdentifier:v6 URL:v9 options:v10.super.isa error:&v19];

  id v12 = v19;
  if (v11)
  {
    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    id v15 = v12;
    v14(a3, v13);
  }
  else
  {
    id v16 = v19;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v17 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a3, v17);
  }
  return v11;
}

id sub_100369134(void *a1)
{
  if (![*(id *)(v1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_featureFlags) vmCatchUpDonationEnabled])return sub_100274858(0x49414D4543494F56, (void *)0xE90000000000004CLL); {
  sub_100204074(a1, a1[3]);
  }
  uint64_t v3 = sub_10036F5F0();
  id result = (id)v4(v3);
  if (!v6) {
    return sub_100274858(0x49414D4543494F56, (void *)0xE90000000000004CLL);
  }
  return result;
}

uint64_t sub_1003691BC()
{
  swift_getObjectType();
  sub_1001F081C(&qword_10058B4B0);
  uint64_t v1 = String.init<A>(describing:)();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_notificationType)) {
    uint64_t v2 = 0x656E6F6850;
  }
  else {
    uint64_t v2 = 0x656D695465636146;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_notificationType)) {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE800000000000000;
  }
  uint64_t v6 = v1;
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10036927C(void **a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (!((unint64_t)*a2 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v6 = v3;
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_8:

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  id v12 = v3;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_8;
  }
LABEL_3:
  sub_1002DE19C(0, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v7 = *(id *)(v4 + 32);
  }
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_1001F6204(0, (unint64_t *)&unk_100586E00);
  id v9 = v3;
  char v10 = static NSObject.== infix(_:_:)();

  if (v10) {
    return 1;
  }
LABEL_9:
  uint64_t v13 = *a2;
  if ((unint64_t)*a2 >> 62)
  {
    id v22 = v3;
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (v14)
    {
LABEL_11:
      BOOL v16 = __OFSUB__(v14, 1);
      uint64_t v17 = v14 - 1;
      if (v16)
      {
        __break(1u);
      }
      else
      {
        sub_1002DE19C(v17, (v13 & 0xC000000000000001) == 0, v13);
        if ((v13 & 0xC000000000000001) == 0)
        {
          id v18 = *(id *)(v13 + 8 * v17 + 32);
LABEL_14:
          id v19 = v18;
          swift_bridgeObjectRelease();
          sub_1001F6204(0, (unint64_t *)&unk_100586E00);
          id v20 = v3;
          char v21 = static NSObject.== infix(_:_:)();

          return v21 & 1;
        }
      }
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v15 = v3;
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_11;
    }
  }

  swift_bridgeObjectRelease();
  return 0;
}

id sub_100369480(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithIntent:a1 response:a2];

  return v4;
}

void sub_1003694DC(uint64_t a1, id a2, uint64_t a3, void (*a4)(uint64_t, void *), uint64_t a5, uint64_t a6, void *a7)
{
  if (a1)
  {
    sub_1001F6204(0, &qword_100584B80);
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    id v12 = static OS_os_log.default.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v25 = a3;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = a7;
      id v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      swift_errorRetain();
      id v27 = (id)_swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v15 = v27;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to donate interaction: %@", v14, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      a7 = v26;
      swift_slowDealloc();
      a3 = v25;
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  id v27 = 0;
  id v16 = [a2 contentByUpdatingWithProvider:a3 error:&v27];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = v27;
    a4(a6, v17);
  }
  else
  {
    id v19 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1001F5F88(v20, (uint64_t)qword_100594CA0);
    char v21 = a7;
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v24 = 134217984;
      id v27 = [v21 identifier];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Could not update notification content; using original notification content for voicemail message with identifier %lu",
        v24,
        0xCu);
      swift_slowDealloc();
    }
    else
    {

      id v22 = v21;
    }

    a4(a6, a2);
    swift_errorRelease();
  }
}

uint64_t sub_1003698A4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_notificationType);
}

void *sub_1003698B4()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_1002DF54C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v0 = &_swiftEmptySetSingleton;
  }
  unint64_t v34 = v0;
  sub_1002D3640();
  sub_1001F6204(0, (unint64_t *)&unk_1005858D0);
  sub_100246A14();
  sub_100274858(0xD000000000000016, v1);
  sub_1001F6204(0, (unint64_t *)&unk_10058B4A0);
  sub_1002DAC00();
  sub_100246A14();
  sub_1002DAC5C();
  uint64_t v3 = v2;
  sub_100246A14();
  sub_100274858(v4, v5);
  sub_1002DAC00();
  sub_100246A14();
  sub_1002DAC5C();
  id v7 = v6;
  sub_1001F6204(0, (unint64_t *)&unk_1005887B0);
  if (qword_100583A88 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10058B350;
  uint64_t v8 = *(void *)algn_10058B358;
  sub_1001F081C((uint64_t *)&unk_100584DD0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100490020;
  *(void *)(v10 + 32) = v3;
  *(void *)(v10 + 40) = v7;
  id v33 = (id)v10;
  specialized Array._endMutation()();
  id v11 = v33;
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10048FB00;
  *(void *)(v12 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v12 + 56) = v14;
  swift_bridgeObjectRetain();
  id v15 = v3;
  id v16 = v7;
  id v17 = sub_1002D1714(v9, v8, v11, v12, 2);
  sub_1002DFCEC((uint64_t)&v33, (uint64_t)v17);

  if (qword_100583A90 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_10058B360;
  uint64_t v19 = *(void *)algn_10058B368;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10048F560;
  *(void *)(v20 + 32) = v16;
  id v33 = (id)v20;
  specialized Array._endMutation()();
  id v21 = v33;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10048FB00;
  *(void *)(v22 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v22 + 40) = v23;
  *(void *)(v22 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v22 + 56) = v24;
  id v25 = v16;
  swift_bridgeObjectRetain();
  id v26 = sub_1002D1714(v18, v19, v21, v22, 2);
  sub_1002DFCEC((uint64_t)&v33, (uint64_t)v26);

  if (qword_100583A98 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_10058B370;
  uint64_t v28 = *(void *)algn_10058B378;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10048F550;
  *(void *)(v29 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v29 + 40) = v30;
  swift_bridgeObjectRetain();
  id v31 = sub_1002D1714(v27, v28, _swiftEmptyArrayStorage, v29, 2);
  sub_1002DFCEC((uint64_t)&v33, (uint64_t)v31);

  return v34;
}

void sub_100369D34()
{
  sub_1001FCC38();
  int64_t v2 = v0;
  uint64_t v3 = sub_1001F081C(&qword_10058B480);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_10024672C();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v63 - v9;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1002024D0();
  id v15 = *(void **)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue);
  void *v1 = v15;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v1, v11);
  if (v15)
  {
    if (qword_100583A38 == -1) {
      goto LABEL_3;
    }
    goto LABEL_53;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  swift_once();
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_1001F5F88(v17, (uint64_t)qword_100594CA0);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)sub_100235B18();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    sub_100246A14();
    uint64_t v67 = sub_1002344D8(0xD000000000000011, v22, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s", v21, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }

  uint64_t v70 = 0;
  unsigned __int8 v69 = 0;
  sub_100204074((void *)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), *(void *)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24));
  uint64_t v23 = sub_10036F5DC();
  uint64_t v25 = 0;
  if (v24(v23))
  {
LABEL_46:
    int v55 = v69;
    uint64_t v56 = (id)v2;
    unint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      LODWORD(v66) = v55;
      id v61 = (void *)v60;
      *(_DWORD *)uint64_t v59 = 138412802;
      uint64_t v67 = (uint64_t)v56;
      uint64_t v62 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v61 = v56;

      *(_WORD *)(v59 + 12) = 2048;
      uint64_t v67 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v59 + 22) = 1024;
      LODWORD(v67) = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%@ count: %ld isAmbiguous: %{BOOL}d", (uint8_t *)v59, 0x1Cu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {

      unint64_t v57 = v56;
    }

    sub_1002022F8();
    sub_1002022F8();
    sub_1001FCC08();
    return;
  }
  id v26 = (uint64_t *)(v2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_unsubscribedVoicemailInfoForUUID);
  sub_1002022F8();
  uint64_t v27 = *v26;
  if (!*(void *)(*v26 + 16))
  {
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "No current unsubscribed voicemail info, attempting to update...", v30, 2u);
      sub_1001F63CC();
    }

    sub_10036A49C();
    uint64_t v27 = *v26;
  }
  v63[1] = v18;
  int64_t v64 = v2;
  uint64_t v31 = *(void *)(v27 + 64);
  uint64_t v65 = v27 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v27 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & v31;
  int64_t v66 = (unint64_t)(v32 + 63) >> 6;
  v63[0] = v66 - 1;
  swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  char v36 = 0;
  int64_t v2 = 0;
  if (v34)
  {
LABEL_13:
    unint64_t v37 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    unint64_t v38 = v37 | (v2 << 6);
LABEL_14:
    uint64_t v39 = *(void *)(v27 + 48);
    type metadata accessor for UUID();
    sub_10020233C();
    (*(void (**)(uint64_t, unint64_t))(v40 + 16))(v7, v39 + *(void *)(v40 + 72) * v38);
    uint64_t v41 = *(void *)(v27 + 56) + 16 * v38;
    uint64_t v42 = sub_1001F081C(&qword_10058B488);
    uint64_t v43 = v7 + *(int *)(v42 + 48);
    uint64_t v44 = *(void *)(v41 + 8);
    *(unsigned char *)uint64_t v43 = *(unsigned char *)v41;
    *(void *)(v43 + 8) = v44;
    sub_1001F0530(v7, 0, 1, v42);
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v45 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v45 < v66)
    {
      unint64_t v46 = *(void *)(v65 + 8 * v45);
      if (v46) {
        goto LABEL_18;
      }
      int64_t v47 = v2 + 2;
      ++v2;
      if (v45 + 1 < v66)
      {
        unint64_t v46 = *(void *)(v65 + 8 * v47);
        if (v46) {
          goto LABEL_21;
        }
        int64_t v2 = v45 + 1;
        if (v45 + 2 < v66)
        {
          unint64_t v46 = *(void *)(v65 + 8 * (v45 + 2));
          if (v46)
          {
            v45 += 2;
            goto LABEL_18;
          }
          int64_t v47 = v45 + 3;
          int64_t v2 = v45 + 2;
          if (v45 + 3 < v66) {
            break;
          }
        }
      }
    }
LABEL_32:
    uint64_t v48 = sub_1001F081C(&qword_10058B488);
    sub_1003579E4(v48);
    unint64_t v34 = 0;
LABEL_33:
    sub_1003426E0(v7, (uint64_t)v10, &qword_10058B480);
    uint64_t v49 = sub_1001F081C(&qword_10058B488);
    if (sub_1001F758C((uint64_t)v10, 1, v49) == 1)
    {
      swift_release();
      if (v36)
      {
        uint64_t v25 = v35 & ~(v35 >> 63);
        uint64_t v70 = v25;
      }
      else
      {
        uint64_t v25 = 0;
        uint64_t v70 = 0;
      }
      int64_t v2 = v64;
      goto LABEL_46;
    }
    id v50 = &v10[*(int *)(v49 + 48)];
    int v51 = *v50;
    if (v51 == 1)
    {
      uint64_t v52 = *((void *)v50 + 1);
      if (v52 < 1)
      {
        unsigned __int8 v69 = 1;
      }
      else
      {
        BOOL v53 = __OFADD__(v35, v52);
        v35 += v52;
        if (v53) {
          goto LABEL_51;
        }
      }
    }
    v36 |= v51;
    type metadata accessor for UUID();
    sub_10020233C();
    sub_1001F7664();
    v54();
    if (v34) {
      goto LABEL_13;
    }
  }
  unint64_t v46 = *(void *)(v65 + 8 * v47);
  if (v46)
  {
LABEL_21:
    int64_t v45 = v47;
LABEL_18:
    unint64_t v34 = (v46 - 1) & v46;
    unint64_t v38 = __clz(__rbit64(v46)) + (v45 << 6);
    int64_t v2 = v45;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v45 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v45 >= v66)
    {
      int64_t v2 = v63[0];
      goto LABEL_32;
    }
    unint64_t v46 = *(void *)(v65 + 8 * v45);
    ++v47;
    if (v46) {
      goto LABEL_18;
    }
  }
  __break(1u);
}

void sub_10036A49C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, void *))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  uint64_t v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v10 + 8))(v12, v9);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24];
  uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32];
  sub_100204074(&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource], v16);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17)) {
    return;
  }
  id v42 = *(id *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_telephonyClient];
  aBlock[0] = 0;
  uint64_t v18 = [v42 getSubscriptionInfoWithError:aBlock];
  if (!v18)
  {
    id v31 = aBlock[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return;
  }
  uint64_t v9 = v18;
  id v19 = aBlock[0];
  unint64_t v20 = sub_10036EFC0(v9);
  if (!v20)
  {

    return;
  }
  uint64_t v15 = v20;
  if (v20 >> 62)
  {
LABEL_17:
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v21)
  {
LABEL_7:
    id v33 = v9;
    if (v21 < 1) {
      __break(1u);
    }
    uint64_t v22 = 0;
    uint64_t v38 = v3 + 16;
    unint64_t v39 = v15 & 0xC000000000000001;
    uint64_t v36 = v3 + 32;
    uint64_t v37 = v4 + 7;
    uint64_t v34 = v3 + 8;
    uint64_t v35 = v44;
    uint64_t v40 = v21;
    uint64_t v41 = v15;
    do
    {
      if (v39) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(v15 + 8 * v22 + 32);
      }
      uint64_t v24 = v23;
      ++v22;
      id v25 = [v23 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      unint64_t v26 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      unint64_t v27 = (v37 + v26) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v28 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v28 + v26, v6, v2);
      *(void *)(v28 + v27) = v1;
      v44[2] = sub_10036F0C8;
      v44[3] = v28;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      v44[0] = sub_10036C274;
      v44[1] = &unk_100516BA0;
      os_log_type_t v29 = _Block_copy(aBlock);
      uint64_t v30 = v1;
      swift_release();
      [v42 getVoicemailInfo:v24 completion:v29];
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      uint64_t v15 = v41;
    }
    while (v40 != v22);

    goto LABEL_19;
  }
LABEL_18:

LABEL_19:
  swift_bridgeObjectRelease();
}

void sub_10036A948()
{
  sub_1001FCC38();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v9 = sub_10021EA1C();
  sub_1001F6398();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1002024D0();
  sub_10020ED28(v4, (uint64_t)v17);
  uint64_t v13 = swift_allocObject();
  sub_100233560(v17, v13 + 16);
  *(void *)(v13 + 56) = v0;
  v16[4] = sub_10036E66C;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1002C2C88;
  v16[3] = &unk_100516B50;
  id v14 = _Block_copy(v16);
  id v15 = v0;
  static DispatchQoS.unspecified.getter();
  sub_10036F188((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  sub_10036F584();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v9);
  swift_release();
  sub_1001FCC08();
}

void sub_10036AB64(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_100204074(a1, v4);
  v60._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  char v6 = sub_100363F8C(v60);
  if (v6 == 2)
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1001F5F88(v7, (uint64_t)qword_100594CA0);
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Unknown notification response received", v9, 2u);
      swift_slowDealloc();
    }

    return;
  }
  char v10 = v6;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_100204074(a1, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  uint64_t v15 = v14;
  uint64_t v16 = HIBYTE(v14) & 0xF;
  uint64_t v17 = v13 & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v18)
  {
    if ((v15 & 0x1000000000000000) != 0)
    {
      unint64_t v20 = (unint64_t)sub_10036E690(v13, v15, 10);
      char v22 = v51;
      goto LABEL_57;
    }
    if ((v15 & 0x2000000000000000) == 0)
    {
      if ((v13 & 0x1000000000000000) != 0) {
        id v19 = (unsigned __int8 *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        id v19 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      unint64_t v20 = (unint64_t)sub_10036E778(v19, v17, 10);
      char v22 = v21 & 1;
LABEL_57:
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        uint64_t v35 = (void *)(a2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource);
        uint64_t v36 = *(void *)(a2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24);
        uint64_t v37 = *(void *)(a2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32);
        sub_100204074((void *)(a2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), v36);
        (*(void (**)(long long *__return_ptr, unint64_t, uint64_t, uint64_t))(v37 + 72))(&v53, v20, v36, v37);
        if (v54)
        {
          sub_100233560(&v53, (uint64_t)v56);
          if (v10)
          {
            uint64_t v38 = *(void (**)(void *))(a2
                                                  + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_callbackVoicemail);
            swift_retain();
            v38(v56);
            swift_release();
          }
          else
          {
            uint64_t v47 = v35[3];
            uint64_t v48 = v35[4];
            sub_100204074(v35, v47);
            (*(void (**)(void *, uint64_t, uint64_t))(v48 + 96))(v56, v47, v48);
          }
          sub_1002018DC((uint64_t)v56);
          return;
        }
        sub_100235804((uint64_t)&v53, &qword_10058B478);
      }
      goto LABEL_62;
    }
    v56[0] = v13;
    v56[1] = v15 & 0xFFFFFFFFFFFFFFLL;
    if (v13 == 43)
    {
      if (!v16) {
        goto LABEL_81;
      }
      if (v16 == 1 || (BYTE1(v13) - 48) > 9u) {
        goto LABEL_41;
      }
      unint64_t v20 = (BYTE1(v13) - 48);
      if (v16 != 2)
      {
        if ((BYTE2(v13) - 48) > 9u) {
          goto LABEL_41;
        }
        unint64_t v20 = 10 * (BYTE1(v13) - 48) + (BYTE2(v13) - 48);
        uint64_t v26 = v16 - 3;
        if (v26)
        {
          unint64_t v27 = (unsigned __int8 *)v56 + 3;
          while (1)
          {
            unsigned int v28 = *v27 - 48;
            if (v28 > 9) {
              goto LABEL_41;
            }
            if (!is_mul_ok(v20, 0xAuLL)) {
              goto LABEL_41;
            }
            BOOL v24 = __CFADD__(10 * v20, v28);
            unint64_t v20 = 10 * v20 + v28;
            if (v24) {
              goto LABEL_41;
            }
            char v22 = 0;
            ++v27;
            if (!--v26) {
              goto LABEL_57;
            }
          }
        }
      }
    }
    else
    {
      if (v13 == 45)
      {
        if (v16)
        {
          if (v16 != 1)
          {
            unsigned __int8 v23 = BYTE1(v13) - 48;
            if ((BYTE1(v13) - 48) <= 9u)
            {
              unint64_t v20 = 0;
              BOOL v24 = v23 == 0;
              unint64_t v25 = -(uint64_t)v23;
              if (!v24) {
                goto LABEL_42;
              }
              if (v16 == 2)
              {
                char v22 = 0;
                unint64_t v20 = v25;
                goto LABEL_57;
              }
              unsigned __int8 v32 = BYTE2(v13) - 48;
              if ((BYTE2(v13) - 48) <= 9u && is_mul_ok(v25, 0xAuLL))
              {
                unint64_t v33 = 10 * v25;
                unint64_t v20 = v33 - v32;
                if (v33 >= v32)
                {
                  uint64_t v34 = v16 - 3;
                  if (!v34) {
                    goto LABEL_56;
                  }
                  uint64_t v49 = (unsigned __int8 *)v56 + 3;
                  while (1)
                  {
                    unsigned int v50 = *v49 - 48;
                    if (v50 > 9) {
                      break;
                    }
                    if (!is_mul_ok(v20, 0xAuLL)) {
                      break;
                    }
                    BOOL v24 = 10 * v20 >= v50;
                    unint64_t v20 = 10 * v20 - v50;
                    if (!v24) {
                      break;
                    }
                    char v22 = 0;
                    ++v49;
                    if (!--v34) {
                      goto LABEL_57;
                    }
                  }
                }
              }
            }
          }
LABEL_41:
          unint64_t v20 = 0;
LABEL_42:
          char v22 = 1;
          goto LABEL_57;
        }
        __break(1u);
LABEL_81:
        __break(1u);
        return;
      }
      if (!v16 || (v13 - 48) > 9u) {
        goto LABEL_41;
      }
      unint64_t v20 = (v13 - 48);
      if (v16 != 1)
      {
        if ((BYTE1(v13) - 48) > 9u) {
          goto LABEL_41;
        }
        unint64_t v20 = 10 * (v13 - 48) + (BYTE1(v13) - 48);
        uint64_t v29 = v16 - 2;
        if (v29)
        {
          uint64_t v30 = (unsigned __int8 *)v56 + 2;
          while (1)
          {
            unsigned int v31 = *v30 - 48;
            if (v31 > 9) {
              goto LABEL_41;
            }
            if (!is_mul_ok(v20, 0xAuLL)) {
              goto LABEL_41;
            }
            BOOL v24 = __CFADD__(10 * v20, v31);
            unint64_t v20 = 10 * v20 + v31;
            if (v24) {
              goto LABEL_41;
            }
            char v22 = 0;
            ++v30;
            if (!--v29) {
              goto LABEL_57;
            }
          }
        }
      }
    }
LABEL_56:
    char v22 = 0;
    goto LABEL_57;
  }
  swift_bridgeObjectRelease();
LABEL_62:
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  sub_1001F5F88(v39, (uint64_t)qword_100594CA0);
  sub_10020ED28((uint64_t)a1, (uint64_t)v56);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, v41))
  {
    id v42 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v53 = swift_slowAlloc();
    *(_DWORD *)id v42 = 136315138;
    uint64_t v43 = v57;
    uint64_t v44 = v58;
    sub_100204074(v56, v57);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
    uint64_t v55 = sub_1002344D8(v45, v46, (uint64_t *)&v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002018DC((uint64_t)v56);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Could not find voicemail with identifier: %s", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002018DC((uint64_t)v56);
  }
}

uint64_t sub_10036B380()
{
  return type metadata accessor for VoicemailNotificationProvider();
}

uint64_t type metadata accessor for VoicemailNotificationProvider()
{
  uint64_t result = qword_10058B3F8;
  if (!qword_10058B3F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10036B3D0()
{
  sub_10026ACE0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10036B4D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100363E70(a1);
}

uint64_t sub_10036B4E8(uint64_t a1, uint64_t a2)
{
  return sub_10022932C(a1, a2, &OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_add, (uint64_t (*)(uint64_t, uint64_t))sub_100235A1C);
}

uint64_t sub_10036B51C(uint64_t a1, uint64_t a2)
{
  return sub_10022932C(a1, a2, &OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_replace, (uint64_t (*)(uint64_t, uint64_t))sub_100235A1C);
}

uint64_t sub_10036B550(uint64_t a1, uint64_t a2)
{
  return sub_10022932C(a1, a2, &OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_removeNotification, (uint64_t (*)(uint64_t, uint64_t))sub_100235A1C);
}

uint64_t sub_10036B584(uint64_t a1, uint64_t a2)
{
  return sub_10022932C(a1, a2, &OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_updateBadgeValue, (uint64_t (*)(uint64_t, uint64_t))sub_100208490);
}

void sub_10036B5BC()
{
  sub_1001FCC38();
  os_log_t v50 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1001F081C(&qword_100584B40);
  uint64_t v6 = sub_100202384(v5);
  __chkstk_darwin(v6);
  sub_10024672C();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - v11;
  if (!v2) {
    __break(1u);
  }
  if ([v2 isVoiceMailMWI])
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1001F5F88(v13, (uint64_t)qword_100594CA0);
    id v14 = v4;
    id v15 = v2;
    id v16 = v14;
    id v17 = v15;
    uint64_t v18 = Logger.logObject.getter();
    int v19 = static os_log_type_t.default.getter();
    BOOL v20 = os_log_type_enabled(v18, (os_log_type_t)v19);
    uint64_t v49 = v12;
    if (v20)
    {
      HIDWORD(v46) = v19;
      uint64_t v48 = v9;
      uint64_t v21 = swift_slowAlloc();
      char v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412546;
      id v51 = v17;
      id v47 = v17;
      id v23 = v17;
      BOOL v24 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v22 = v2;

      *(_WORD *)(v21 + 12) = 2112;
      if (v4)
      {
        id v51 = v16;
        id v25 = v16;
      }
      else
      {
        id v51 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_type_t v31 = BYTE4(v46);
      v24[1] = v4;

      _os_log_impl((void *)&_mh_execute_header, v18, v31, "Handling voicemailInfoAvailableNotification voicemailInfo: %@, context: %@", (uint8_t *)v21, 0x16u);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();

      id v17 = v47;
      uint64_t v9 = v48;
    }
    else
    {
    }
    id v32 = [v17 count];
    id v33 = [v32 integerValue];

    if (v33 && ([v17 available] & 1) != 0)
    {
      uint64_t v34 = (char *)v50
          + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentNonVisualVoicemailDate;
      sub_1002022F8();
      uint64_t v35 = (uint64_t)v49;
      sub_100319018((uint64_t)v34, (uint64_t)v49);
      uint64_t v36 = type metadata accessor for Date();
      int v37 = sub_1001F758C(v35, 1, v36);
      sub_100235804(v35, &qword_100584B40);
      Date.init()();
      sub_1001F0530(v9, 0, 1, v36);
      swift_beginAccess();
      sub_10036F208(v9, (uint64_t)v34);
      swift_endAccess();
      id v38 = [v17 count];
      unint64_t v39 = (unint64_t)[v38 integerValue];

      if ((v39 & 0x8000000000000000) != 0)
      {
        char v43 = v37 == 1;
        uint64_t v42 = 0;
      }
      else
      {
        id v40 = [v17 count];
        id v41 = [v40 integerValue];

        uint64_t v42 = (uint64_t)v41;
        char v43 = v37 == 1;
      }
      id v45 = sub_10036706C(v42, v43);
      sub_1003673C0(v45);
    }
    else
    {
      uint64_t v44 = *(void (**)(unint64_t))((char *)&v50->isa
                                                    + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_removeNotification);
      if (v44)
      {
        swift_retain();
        sub_100246A14();
        v44(0xD000000000000012);
        sub_100208490((uint64_t)v44);
      }
    }
    sub_10036A49C();
    sub_1001FCC08();
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1001F5F88(v26, (uint64_t)qword_100594CA0);
    os_log_t v50 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v27))
    {
      unsigned int v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v27, "Voicemail is not MWI - Ignoring voicemailInfoAvailableNotification", v28, 2u);
      sub_1001F63CC();
    }
    sub_1001FCC08();
  }
}

uint64_t sub_10036BB94(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v58 = a7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v15 = (char *)&v48 - v14;
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_1001F5F88(v16, (uint64_t)qword_100594CA0);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v55 = v11 + 16;
  v54(v15, a6, v10);
  id v18 = a2;
  uint64_t v56 = v17;
  int v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v52 = v11;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v53 = a6;
    uint64_t v23 = v22;
    os_log_t v50 = (void *)swift_slowAlloc();
    id v51 = (void (*)(char *, uint64_t))swift_slowAlloc();
    v60[0] = (uint64_t)v51;
    *(_DWORD *)uint64_t v23 = 136315650;
    sub_10036F188((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v59 = sub_1002344D8(v24, v25, v60);
    os_log_t v49 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v15, v10);
    *(_WORD *)(v23 + 12) = 1024;
    LODWORD(v59) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 18) = 2112;
    uint64_t v59 = (uint64_t)v18;
    id v27 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v50 = v18;

    os_log_t v28 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, v20, "Got voicemail info for uuid %s to available: %{BOOL}d, count: %@", (uint8_t *)v23, 0x1Cu);
    sub_1001F081C(&qword_100585900);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a6 = v53;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v15, v10);
  }
  id v29 = 0;
  id v61 = 0;
  uint64_t v30 = v57;
  if (a1)
  {
    id v29 = [v18 integerValue];
    id v61 = v29;
  }
  os_log_type_t v31 = (uint64_t *)(v58 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_unsubscribedVoicemailInfoForUUID);
  swift_beginAccess();
  char v32 = sub_1002236D8(a6, *v31);
  if (v32 == 2)
  {
    swift_endAccess();
    goto LABEL_15;
  }
  id v34 = v33;
  BOOL v35 = (v32 & 1) == 0;
  swift_endAccess();
  if (v35 != (a1 & 1) && v34 == v29)
  {
LABEL_15:
    swift_beginAccess();
    char v37 = sub_1002236D8(a6, *v31);
    uint64_t result = swift_endAccess();
    if (v37 != 2) {
      return result;
    }
  }
  id v51 = v26;
  v54(v30, a6, v10);
  unint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v53 = a6;
    uint64_t v42 = v41;
    uint64_t v56 = swift_slowAlloc();
    v60[0] = v56;
    *(_DWORD *)uint64_t v42 = 136315650;
    uint64_t v55 = v42 + 4;
    sub_10036F188((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v59 = sub_1002344D8(v43, v44, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v51(v30, v10);
    *(_WORD *)(v42 + 12) = 1024;
    LODWORD(v59) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 18) = 2048;
    uint64_t v59 = (uint64_t)v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Updating voicemail info for uuid %s to available: %{BOOL}d, count: %ld", (uint8_t *)v42, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a6 = v53;
    swift_slowDealloc();
  }
  else
  {
    v51(v30, v10);
  }

  swift_beginAccess();
  id v45 = v61;
  swift_beginAccess();
  sub_10027FC5C(a1 & 1, v45, a6);
  uint64_t result = swift_endAccess();
  uint64_t v46 = *(void (**)(uint64_t))(v58
                                       + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_updateBadgeValue);
  if (v46)
  {
    uint64_t v47 = swift_retain();
    v46(v47);
    return sub_100208490((uint64_t)v46);
  }
  return result;
}

void sub_10036C274(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(uint64_t, id, uint64_t, uint64_t, id))(a1 + 32);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  swift_retain();
  id v13 = a3;
  id v12 = a5;
  v8(a2, v13, v9, v11, v12);
  swift_release();
  swift_bridgeObjectRelease();
}

void *sub_10036C330(uint64_t a1)
{
  uint64_t v3 = (char *)type metadata accessor for Date();
  uint64_t v4 = *((void *)v3 - 1);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v77 = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v69 - v7;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (void *)((char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v13 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_queue];
  *id v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_19;
  }
  uint64_t v84 = &_swiftEmptySetSingleton;
  uint64_t v85 = &_swiftEmptySetSingleton;
  uint64_t v83 = _swiftEmptyArrayStorage;
  id v15 = *(void (**)(char *, uint64_t, char *))(v4 + 16);
  uint64_t v71 = v4 + 16;
  uint64_t v70 = v15;
  v15(v8, a1, v3);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v1;
  uint64_t v74 = v4;
  id v18 = *(void (**)(unint64_t, char *, char *))(v4 + 32);
  os_log_type_t v75 = v3;
  v18(v17 + v16, v8, v3);
  uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24];
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32];
  sub_100204074(&v1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource], v19);
  BOOL v21 = *(uint64_t (**)(uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v20 + 64);
  uint64_t v3 = v1;
  uint64_t v73 = v17;
  uint64_t v22 = v21(sub_10036F4B0, v17, v19, v20);
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v72 = a1;
  if (v23)
  {
    uint64_t v76 = v3;
    uint64_t v24 = &v3[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_pendingVoicemailIdentifiers];
    v69[1] = v22;
    uint64_t v25 = v22 + 32;
    swift_beginAccess();
    uint64_t v26 = _swiftEmptyArrayStorage;
    do
    {
      sub_10020ED28(v25, (uint64_t)v80);
      uint64_t v27 = *(void *)v24;
      uint64_t v28 = v81;
      uint64_t v29 = v82;
      sub_100204074(v80, v81);
      uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 40);
      swift_bridgeObjectRetain();
      uint64_t v31 = v30(v28, v29);
      char v32 = sub_1003708D0(v31, v27);
      swift_bridgeObjectRelease();
      if (v32)
      {
        sub_10020ED28((uint64_t)v80, (uint64_t)v79);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1003A51D8();
          uint64_t v26 = v40;
        }
        unint64_t v33 = v26[2];
        if (v33 >= v26[3] >> 1)
        {
          sub_1003A51D8();
          uint64_t v26 = v41;
        }
        _OWORD v26[2] = v33 + 1;
        sub_100233560(v79, (uint64_t)&v26[5 * v33 + 4]);
        uint64_t v34 = v81;
        uint64_t v35 = v82;
        sub_100204074(v80, v81);
        (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v34, v35);
      }
      else
      {
        sub_10020ED28((uint64_t)v80, (uint64_t)v79);
        uint64_t v36 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1003A51D8();
          uint64_t v36 = v42;
        }
        unint64_t v37 = v36[2];
        if (v37 >= v36[3] >> 1)
        {
          sub_1003A51D8();
          uint64_t v36 = v43;
        }
        void v36[2] = v37 + 1;
        sub_100233560(v79, (uint64_t)&v36[5 * v37 + 4]);
        uint64_t v83 = v36;
        uint64_t v38 = v81;
        uint64_t v39 = v82;
        sub_100204074(v80, v81);
        (*(void (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
      }
      sub_1002E0420();
      sub_1002018DC((uint64_t)v80);
      v25 += 40;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v3 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_100583A38 != -1) {
    goto LABEL_27;
  }
LABEL_19:
  uint64_t v44 = type metadata accessor for Logger();
  uint64_t v45 = sub_1001F5F88(v44, (uint64_t)qword_100594CA0);
  uint64_t v46 = v3;
  uint64_t v76 = (char *)v45;
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    v80[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315394;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v50 = Set.description.getter();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    *(void *)&v79[0] = sub_1002344D8(v50, v52, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v53 = Set.description.getter();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    *(void *)&v79[0] = sub_1002344D8(v53, v55, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Voicemail store changed. We were waiting for %s and found %s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v56 = v77;
  uint64_t v57 = v83;
  uint64_t v58 = v75;
  v70(v77, v72, v75);
  swift_bridgeObjectRetain();
  uint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = swift_slowAlloc();
    uint64_t v77 = (char *)swift_slowAlloc();
    v80[0] = (uint64_t)v77;
    *(_DWORD *)uint64_t v61 = 134218498;
    *(void *)&v79[0] = v57[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2080;
    sub_10036F188(&qword_100587A20, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&v79[0] = sub_1002344D8(v62, v63, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v74 + 8))(v56, v58);
    *(_WORD *)(v61 + 22) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v64 = Set.description.getter();
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    uint64_t v78 = sub_1002344D8(v64, v66, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "Received %ld new voicemails since date %s: %s", (uint8_t *)v61, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v74 + 8))(v56, v58);
  }

  swift_release();
  swift_beginAccess();
  uint64_t v67 = v83;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v67;
}

uint64_t sub_10036CD4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_pendingVoicemailIdentifiers);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  sub_100204074(a1, v11);
  id v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 40);
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v11, v10);
  LOBYTE(v8) = sub_1003708D0(v13, v9);
  swift_bridgeObjectRelease();
  if (v8)
  {
    char v14 = sub_100364ECC((uint64_t)a1);
    sub_10020ED28((uint64_t)a1, (uint64_t)v22);
    if (v14) {
      char v15 = 0;
    }
    else {
      char v15 = sub_100365078((uint64_t)v22) ^ 1;
    }
    sub_1002018DC((uint64_t)v22);
  }
  else
  {
    uint64_t v16 = a1[3];
    uint64_t v17 = a1[4];
    sub_100204074(a1, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v16, v17);
    uint64_t v18 = Date.compare(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
    char v15 = v18 == 1;
  }
  return v15 & 1;
}

void sub_10036CF34(char *a1)
{
  uint64_t v2 = sub_1001F081C(&qword_100584B40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)v89 - v11;
  __chkstk_darwin(v10);
  char v14 = (char *)v89 - v13;
  uint64_t v15 = (uint64_t)&a1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentVoicemailDate];
  swift_beginAccess();
  sub_100319018(v15, (uint64_t)v4);
  if (sub_1001F758C((uint64_t)v4, 1, v5) == 1)
  {
    sub_100235804((uint64_t)v4, &qword_100584B40);
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1001F5F88(v16, (uint64_t)qword_100594CA0);
    uint64_t v17 = a1;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      v101[0] = (uint64_t)v17;
      uint64_t v22 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v21 = v17;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not retrieve date of most recent voicemail for notification provider %@", v20, 0xCu);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v18 = v17;
    }

    sub_100364468();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
  uint64_t v23 = *(void *)&a1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24];
  uint64_t v24 = *(void *)&a1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32];
  sub_100204074(&a1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource], v23);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v23, v24))
  {
    id v93 = v9;
    uint64_t v104 = _swiftEmptyArrayStorage;
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    uint64_t v26 = sub_1001F5F88(v25, (uint64_t)qword_100594CA0);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    id v97 = v14;
    uint64_t v92 = v6 + 16;
    NSString v91 = v27;
    v27(v12, (uint64_t)v14, v5);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v31 = "eIdentifier";
    uint64_t v98 = v5;
    uint64_t v96 = v6;
    uint64_t v94 = v26;
    if (v30)
    {
      char v32 = (uint8_t *)swift_slowAlloc();
      v101[0] = swift_slowAlloc();
      *(_DWORD *)char v32 = 136315138;
      sub_10036F188(&qword_100587A20, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v100[0] = sub_1002344D8(v33, v34, v101);
      uint64_t v31 = "synchronousConversationsForBundleIdentifier" + 32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      Class v95 = *(void (**)(char *, uint64_t))(v6 + 8);
      v95(v12, v98);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Retrieving messages delivered after %s", v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v5 = v98;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      Class v95 = *(void (**)(char *, uint64_t))(v6 + 8);
      v95(v12, v5);
    }

    uint64_t v39 = (uint64_t)v97;
    uint64_t v99 = sub_10036C330((uint64_t)v97);
    uint64_t v41 = v40;
    if (*(void *)(v40 + 16))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        v101[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = *((void *)v31 + 202);
        uint64_t v90 = (uint64_t)(v44 + 4);
        swift_bridgeObjectRetain();
        sub_1001F081C(&qword_100588860);
        uint64_t v45 = Array.description.getter();
        unint64_t v47 = v46;
        swift_bridgeObjectRelease();
        *(void *)&v100[0] = sub_1002344D8(v45, v47, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Voicemail store changed, and we found the following voicemail messages we were waiting for: %s", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRetain();
      sub_1002D2964();
      int64_t v55 = *(void *)(v41 + 16);
      if (v55)
      {
        *(void *)&v100[0] = _swiftEmptyArrayStorage;
        sub_1002E40F4(0, v55, 0);
        uint64_t v56 = v41 + 32;
        do
        {
          sub_10020ED28(v56, (uint64_t)v101);
          uint64_t v57 = v102;
          uint64_t v58 = v103;
          sub_100204074(v101, v102);
          uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 40))(v57, v58);
          sub_1002018DC((uint64_t)v101);
          os_log_type_t v60 = *(void **)&v100[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1002E40F4(0, v60[2] + 1, 1);
            os_log_type_t v60 = *(void **)&v100[0];
          }
          unint64_t v62 = v60[2];
          unint64_t v61 = v60[3];
          if (v62 >= v61 >> 1)
          {
            sub_1002E40F4((char *)(v61 > 1), v62 + 1, 1);
            os_log_type_t v60 = *(void **)&v100[0];
          }
          v60[2] = v62 + 1;
          v60[v62 + 4] = v59;
          v56 += 40;
          --v55;
        }
        while (v55);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        os_log_type_t v60 = _swiftEmptyArrayStorage;
      }
      unint64_t v63 = &a1[OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_pendingVoicemailIdentifiers];
      swift_beginAccess();
      uint64_t v39 = (uint64_t)v97;
      uint64_t v64 = v99;
      if (*(void *)(*(void *)v63 + 16))
      {
        uint64_t v65 = v60[2];
        if (v65)
        {
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v65; ++i)
          {
            uint64_t v67 = v60[i + 4];
            sub_100377A50(v67);
          }
          swift_bridgeObjectRelease();
        }
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      os_log_type_t v48 = a1;
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v49, v50))
      {
        unint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        v101[0] = v90;
        *(_DWORD *)unint64_t v51 = *((void *)v31 + 202);
        v89[1] = v51 + 4;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v52 = Set.description.getter();
        unint64_t v54 = v53;
        swift_bridgeObjectRelease();
        *(void *)&v100[0] = sub_1002344D8(v52, v54, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Voicemail store changed, but we did not find any voicemail messages we were waiting for. Waiting for: %s", v51, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v39 = (uint64_t)v97;
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v64 = v99;
    }
    uint64_t v68 = v64[2];
    if (v68)
    {
      unsigned __int8 v69 = v93;
      v91(v93, v39, v5);
      swift_bridgeObjectRetain();
      uint64_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        v101[0] = v94;
        *(_DWORD *)uint64_t v72 = 134218242;
        *(void *)&v100[0] = v99[2];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2080;
        sub_10036F188(&qword_100587A20, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)&v100[0] = sub_1002344D8(v73, v74, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v95(v69, v5);
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Received %ld new voicemails since date %s", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v64 = v99;
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease();
        v95(v69, v5);
      }

      sub_100364468();
      uint64_t v75 = (uint64_t)(v64 + 4);
      uint64_t v39 = (uint64_t)v97;
      while (1)
      {
        sub_10020ED28(v75, (uint64_t)v101);
        if (sub_100365078((uint64_t)v101)) {
          break;
        }
        if ((sub_100364ECC((uint64_t)v101) & 1) == 0) {
          goto LABEL_52;
        }
        uint64_t v78 = v102;
        uint64_t v79 = v103;
        sub_100204074(v101, v102);
        (*(void (**)(uint64_t, uint64_t))(v79 + 40))(v78, v79);
        swift_beginAccess();
        sub_1002E0420();
        swift_endAccess();
LABEL_57:
        sub_1002018DC((uint64_t)v101);
        v75 += 40;
        if (!--v68) {
          goto LABEL_58;
        }
      }
      uint64_t v76 = v102;
      uint64_t v77 = v103;
      sub_100204074(v101, v102);
      (*(void (**)(uint64_t, uint64_t))(v77 + 40))(v76, v77);
      swift_beginAccess();
      sub_1002E0420();
      swift_endAccess();
LABEL_52:
      sub_10020ED28((uint64_t)v101, (uint64_t)v100);
      id v80 = v104;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A51D8();
        id v80 = v82;
      }
      unint64_t v81 = v80[2];
      if (v81 >= v80[3] >> 1)
      {
        sub_1003A51D8();
        id v80 = v83;
      }
      v80[2] = v81 + 1;
      sub_100233560(v100, (uint64_t)&v80[5 * v81 + 4]);
      uint64_t v104 = v80;
      goto LABEL_57;
    }
LABEL_58:
    swift_bridgeObjectRelease();
    uint64_t v84 = (uint64_t)v104;
    uint64_t v85 = a1;
    uint64_t v86 = swift_bridgeObjectRetain();
    uint64_t v87 = sub_100362104(v86, v85);
    uint64_t v88 = sub_10036238C(v84, v85);
    if (*(void *)(v87 + 16)) {
      sub_100365224(v87);
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v88 + 16))
    {
      sub_100367598(v88);
      swift_bridgeObjectRelease();
      v95((char *)v39, v98);
    }
    else
    {
      v95((char *)v39, v98);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_1001F5F88(v35, (uint64_t)qword_100594CA0);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Voicemail is not subscribed", v38, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
}

void sub_10036DF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FCC38();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v24 = type metadata accessor for Notification();
  sub_1001F6398();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  os_log_type_t v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v30 = v23;
  sub_10036F5B4();
  sub_10036DFFC();

  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v24);
  sub_1001FCC08();
}

void sub_10036DFFC()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  uint64_t v45 = v3;
  uint64_t v46 = v4;
  uint64_t v44 = v5;
  uint64_t v6 = v0;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001FCCD0();
  uint64_t v49 = v13;
  uint64_t v50 = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v48 = v14;
  __chkstk_darwin(v15);
  sub_1001FCCD0();
  uint64_t v47 = v16;
  uint64_t v17 = type metadata accessor for Notification();
  sub_1001F6398();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100583A38 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_1001F5F88(v23, (uint64_t)qword_100594CA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v8, v17);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = sub_100235B18();
    uint64_t v40 = v2;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v43 = v9;
    v52[0] = v28;
    uint64_t v41 = v6;
    uint64_t v42 = v11;
    *(_DWORD *)uint64_t v27 = 136315138;
    sub_10036F188((unint64_t *)&unk_100585960, (void (*)(uint64_t))&type metadata accessor for Notification);
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v51 = (void *)sub_1002344D8(v29, v30, v52);
    uint64_t v6 = v41;
    uint64_t v11 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_10036F5A0();
    v32(v31);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, v44, v27, 0xCu);
    swift_arrayDestroy();
    uint64_t v9 = v43;
    sub_1001F63CC();
    uint64_t v2 = v40;
    sub_1001F63CC();
  }
  else
  {
    uint64_t v33 = sub_10036F5A0();
    v34(v33);
  }

  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v6;
  v52[4] = v46;
  v52[5] = v35;
  v52[0] = (uint64_t)_NSConcreteStackBlock;
  v52[1] = 1107296256;
  v52[2] = (uint64_t)sub_1002C2C88;
  v52[3] = v2;
  uint64_t v36 = _Block_copy(v52);
  id v37 = v6;
  static DispatchQoS.unspecified.getter();
  unint64_t v51 = _swiftEmptyArrayStorage;
  sub_10036F188((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  uint64_t v38 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v36);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v38, v9);
  sub_1001F7664();
  v39();
  swift_release();
  sub_1001FCC08();
}

uint64_t sub_10036E42C(uint64_t a1)
{
  uint64_t v3 = sub_1001F081C(&qword_100584B40);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_100202310();
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 24);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource + 32);
  sub_100204074((void *)(a1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_voicemailDataSource), v5);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6) & 1) == 0)
  {
    if (qword_100583A38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1001F5F88(v7, (uint64_t)qword_100594CA0);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Removing posted voicemail notifications because vmd isn't subscribed.", v10, 2u);
      sub_1001F63CC();
    }

    sub_100364A5C();
  }
  uint64_t v11 = type metadata accessor for Date();
  sub_1003579E4(v11);
  uint64_t v12 = a1 + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_mostRecentNonVisualVoicemailDate;
  swift_beginAccess();
  sub_10036F208(v1, v12);
  uint64_t result = swift_endAccess();
  uint64_t v14 = *(void (**)(uint64_t))(a1
                                       + OBJC_IVAR____TtC13callservicesd29VoicemailNotificationProvider_updateBadgeValue);
  if (v14)
  {
    uint64_t v15 = swift_retain();
    v14(v15);
    return sub_100208490((uint64_t)v14);
  }
  return result;
}

uint64_t sub_10036E62C()
{
  sub_1002018DC(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10036E66C()
{
  sub_10036AB64((void *)(v0 + 16), *(void *)(v0 + 56));
}

uint64_t sub_10036E678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10036E688()
{
  return swift_release();
}

unsigned __int8 *sub_10036E690(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10036E9F4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_10036E778(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_10036E778(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v17 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v18 = a3 + 48;
        unsigned __int8 v19 = a3 + 55;
        unsigned __int8 v20 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = 58;
        }
        else
        {
          unsigned __int8 v20 = 97;
          unsigned __int8 v19 = 65;
        }
        if (result)
        {
          unint64_t v9 = 0;
          uint64_t v21 = result + 1;
          do
          {
            unsigned int v22 = *v21;
            if (v22 < 0x30 || v22 >= v18)
            {
              if (v22 < 0x41 || v22 >= v19)
              {
                uint64_t v13 = 0;
                if (v22 < 0x61 || v22 >= v20) {
                  return (unsigned __int8 *)v13;
                }
                char v23 = -87;
              }
              else
              {
                char v23 = -55;
              }
            }
            else
            {
              char v23 = -48;
            }
            if (!is_mul_ok(v9, a3)) {
              return 0;
            }
            unint64_t v24 = v9 * a3;
            unsigned __int8 v25 = v22 + v23;
            BOOL v16 = __CFADD__(v24, v25);
            unint64_t v9 = v24 + v25;
            if (v16) {
              return 0;
            }
            ++v21;
            --v17;
          }
          while (v17);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v26 = a3 + 48;
        unsigned __int8 v27 = a3 + 55;
        unsigned __int8 v28 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = 58;
        }
        else
        {
          unsigned __int8 v28 = 97;
          unsigned __int8 v27 = 65;
        }
        if (result)
        {
          unint64_t v29 = 0;
          do
          {
            unsigned int v30 = *result;
            if (v30 < 0x30 || v30 >= v26)
            {
              if (v30 < 0x41 || v30 >= v27)
              {
                uint64_t v13 = 0;
                if (v30 < 0x61 || v30 >= v28) {
                  return (unsigned __int8 *)v13;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            if (!is_mul_ok(v29, a3)) {
              return 0;
            }
            unint64_t v32 = v29 * a3;
            unsigned __int8 v33 = v30 + v31;
            BOOL v16 = __CFADD__(v32, v33);
            unint64_t v29 = v32 + v33;
            if (v16) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)v29;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          unint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            if (!is_mul_ok(v9, a3)) {
              return 0;
            }
            unint64_t v14 = v9 * a3;
            unsigned __int8 v15 = v11 + v12;
            BOOL v16 = v14 >= v15;
            unint64_t v9 = v14 - v15;
            if (!v16) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10036E9F4()
{
  unint64_t v0 = sub_10036EA60();
  uint64_t v4 = sub_10036EA94(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10036EA60()
{
  return String.subscript.getter();
}

uint64_t sub_10036EA94(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10036EBEC(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1002349E8(v9, 0),
          unint64_t v12 = sub_10036ECEC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10036EBEC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100234A50(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100234A50(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10036ECEC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_100234A50(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_100234A50(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_10036EEF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setNotificationProviderIdentifier:v4];
}

void sub_10036EF54(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setRemoteParticipantHandles:isa];
}

uint64_t sub_10036EFC0(void *a1)
{
  id v1 = [a1 subscriptionsInUse];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  sub_1001F6204(0, (unint64_t *)&unk_10058B490);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10036F030()
{
  type metadata accessor for UUID();
  sub_10020233C();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001F7664();
  v5();

  return _swift_deallocObject(v0, v4 + 8, v3);
}

uint64_t sub_10036F0C8()
{
  type metadata accessor for UUID();
  sub_10036F5B4();

  return sub_10036BB94(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10036F188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10036F1D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10036F208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036F270()
{
  return sub_10036E42C(*(void *)(v0 + 16));
}

void sub_10036F28C()
{
  sub_10036CF34(*(char **)(v0 + 16));
}

void sub_10036F294()
{
}

void sub_10036F2E0()
{
}

uint64_t sub_10036F324()
{
  swift_release();
  sub_1002018DC((uint64_t)(v0 + 6));

  return _swift_deallocObject(v0, 96, 7);
}

void sub_10036F37C(uint64_t a1)
{
  sub_1003694DC(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t, void *))(v1 + 32), *(void *)(v1 + 40), v1 + 48, *(void **)(v1 + 88));
}

uint64_t sub_10036F394()
{
  sub_1002018DC(v0 + 24);

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10036F3DC()
{
  sub_1003656CC((void *)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_10036F40C()
{
  uint64_t v1 = type metadata accessor for Date();
  sub_1001F6398();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_10036F4B0(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10036CD4C(a1, v4, v5);
}

uint64_t sub_10036F584()
{
  return v0 - 176;
}

uint64_t sub_10036F5A0()
{
  return v0;
}

uint64_t sub_10036F5C8()
{
  return v0;
}

uint64_t sub_10036F5DC()
{
  return v0;
}

uint64_t sub_10036F5F0()
{
  return v0;
}

uint64_t sub_10036F604()
{
  return v0;
}

id sub_10036F610()
{
  sub_1001F6204(0, (unint64_t *)&unk_1005887A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() orPredicateWithSubpredicates:isa];

  return v1;
}

id sub_10036F694(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___CSDCallHistoryCallFilter_usTollFreePrefixes] = &off_10050B348;
  *(void *)&v1[OBJC_IVAR___CSDCallHistoryCallFilter_callHistoryManager] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for CallHistoryCallFilter();
  return objc_msgSendSuper2(&v3, "init");
}

BOOL sub_10036F71C(void *a1)
{
  objc_super v3 = (void *)sub_10036FB40(a1);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 value];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    uint64_t v9 = sub_1001F612C(v4, (SEL *)&selRef_normalizedValue);
    BOOL v11 = sub_1003704B0(v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v12 = sub_100008DCC();
    sub_1001F081C(&qword_100584B20);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10048FB00;
    *(void *)(v13 + 56) = type metadata accessor for CallHistoryCallFilter();
    *(void *)(v13 + 64) = sub_100370754();
    *(void *)(v13 + 32) = v1;
    *(void *)(v13 + 96) = sub_1001F6204(0, &qword_10058B660);
    *(void *)(v13 + 104) = sub_1001FCAC8((unint64_t *)&qword_10058B540, &qword_10058B660);
    *(void *)(v13 + 72) = a1;
    id v14 = v1;
    id v15 = a1;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v20 = [v15 silencingUserInfo];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
    id v24 = [objc_allocWithZone((Class)NSNumber) initWithBool:!v11];
    swift_bridgeObjectRetain();
    objc_msgSend(v20, "__swift_setObject:forKeyedSubscript:", v24, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(), v21, v23);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
    id v16 = sub_100008DCC();
    sub_1001F081C(&qword_100584B20);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10048FB00;
    *(void *)(v17 + 56) = type metadata accessor for CallHistoryCallFilter();
    *(void *)(v17 + 64) = sub_100370754();
    *(void *)(v17 + 32) = v1;
    *(void *)(v17 + 96) = sub_1001F6204(0, &qword_10058B660);
    *(void *)(v17 + 104) = sub_1001FCAC8((unint64_t *)&qword_10058B540, &qword_10058B660);
    *(void *)(v17 + 72) = a1;
    id v18 = v1;
    id v19 = a1;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

uint64_t sub_10036FB40(void *a1)
{
  id v3 = [a1 remoteHandle];
  id v4 = v3;
  if (!v3) {
    return (uint64_t)v4;
  }
  id v5 = [v3 tuHandle];

  if (!v5) {
    return 0;
  }
  uint64_t v6 = sub_1001F612C(v5, (SEL *)&selRef_isoCountryCode);
  uint64_t v8 = &_s10Foundation4DataV15_RepresentationON_ptr;
  uint64_t v9 = &selRef_generatorDescriptor;
  if (v7)
  {
    if (v6 == 29557 && v7 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        goto LABEL_18;
      }
    }
    if ([v5 type] == (id)2)
    {
      uint64_t v12 = *(void *)(v1 + OBJC_IVAR___CSDCallHistoryCallFilter_usTollFreePrefixes);
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain_n();
        id v14 = (uint64_t *)(v12 + 40);
        while (1)
        {
          uint64_t v16 = *(v14 - 1);
          uint64_t v15 = *v14;
          swift_bridgeObjectRetain();
          id v17 = [v5 value];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v20 = v19;

          uint64_t v39 = v18;
          uint64_t v40 = v20;
          uint64_t v37 = v16;
          uint64_t v38 = v15;
          unint64_t v2 = sub_100209C28();
          sub_100209C74();
          LOBYTE(v17) = BidirectionalCollection<>.starts<A>(with:)();
          swift_bridgeObjectRelease();
          if (v17) {
            break;
          }
          v14 += 2;
          swift_bridgeObjectRelease();
          if (!--v13)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v8 = &_s10Foundation4DataV15_RepresentationON_ptr;
            uint64_t v9 = &selRef_generatorDescriptor;
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v8 = &_s10Foundation4DataV15_RepresentationON_ptr;
        uint64_t v9 = &selRef_generatorDescriptor;
        objc_msgSend(self, "handleTypeForTUHandle:", v5, v37, v15, v39, v20);
        id v31 = sub_1003708B0();
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v34 = v33;

        sub_10036FFEC(2uLL, v32, v34);
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
        id v35 = [v5 *(SEL *)(v2 + 1880)];
        unint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v36 = objc_allocWithZone((Class)CHHandle);
        id v4 = sub_100370850();
        if (v4) {
          goto LABEL_36;
        }
        goto LABEL_35;
      }
    }
  }
LABEL_18:
  id v21 = objc_msgSend(v5, "type", v37, v38, v39, v40);
  if (v21 == (id)1)
  {
    NSString v25 = [v5 value];
    if (!v25)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v26 = [self normalizedGenericHandleForValue:v25];
LABEL_31:
    id v4 = v26;

    if (v4)
    {
LABEL_36:

      return (uint64_t)v4;
    }
LABEL_35:
    objc_msgSend(self, v9[161], v5);
    id v27 = sub_1003708B0();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v28 = [v5 *(SEL *)(v2 + 1880)];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v29 = objc_allocWithZone((Class)v8[348]);
    id v4 = sub_100370850();
    goto LABEL_36;
  }
  if (v21 == (id)2)
  {
    NSString v22 = [v5 value];
    if (!v22)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    sub_1001F612C(v5, (SEL *)&selRef_isoCountryCode);
    if (v23)
    {
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v24 = 0;
    }
    id v4 = [self normalizedPhoneNumberHandleForValue:v22 isoCountryCode:v24];

    if (v4) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v21 == (id)3)
  {
    NSString v25 = [v5 value];
    if (!v25)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v26 = [self normalizedEmailAddressHandleForValue:v25];
    goto LABEL_31;
  }
  type metadata accessor for TUHandleType(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

unint64_t sub_10036FFEC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = String.index(_:offsetBy:limitedBy:)();
    if (v6) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = String.subscript.getter();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

id sub_1003700C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1001F081C((uint64_t *)&unk_100584DD0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100492010;
  uint64_t v7 = self;
  *(void *)(v6 + 32) = [v7 predicateForCallsWithStatusOriginated:1];
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10048FB00;
  *(void *)(v8 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v8 + 56) = v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v7 predicateForCallsWithAnyServiceProviders:isa];

  *(void *)(v6 + 40) = v12;
  *(void *)(v6 + 48) = [v7 predicateForCallsWithRemoteParticipantCount:1];
  specialized Array._endMutation()();
  unint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10048F560;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v7 predicateForCallsWithRemoteParticipantHandleValue:v14];

  *(void *)(v13 + 32) = v15;
  unint64_t v26 = v13;
  specialized Array._endMutation()();
  if (a4)
  {
    uint64_t v16 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFLL;
    }
    if (v16)
    {
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v7 predicateForCallsWithRemoteParticipantHandleNormalizedValue:v17];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_1003708A0();
      if (v19) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v13 = v26;
    }
  }
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21 >= 2) {
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    unint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v20 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20 > 1)
    {
LABEL_10:
      sub_1001F6204(0, &qword_100587A50);
      sub_10036F610();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_1003708A0();
      if (v19) {
        sub_10037087C();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_22;
    }
  }
  if (v20)
  {
    sub_1002DE19C(0, (v13 & 0xC000000000000001) == 0, v13);
    if ((v13 & 0xC000000000000001) != 0) {
      id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v22 = *(id *)(v13 + 32);
    }
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    id v24 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_1003708A0();
    if (v19) {
      sub_10037087C();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_22:
  sub_1001F6204(0, &qword_100587A50);
  return sub_1002D1698();
}

BOOL sub_1003704B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v5 = sub_1003700C0(a1, a2, a3, a4);
  id v6 = sub_100008DCC();
  sub_1001F081C(&qword_100584B20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10048FB00;
  *(void *)(v7 + 56) = type metadata accessor for CallHistoryCallFilter();
  *(void *)(v7 + 64) = sub_100370754();
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 96) = sub_1001F6204(0, (unint64_t *)&unk_1005887A0);
  *(void *)(v7 + 104) = sub_1001FCAC8((unint64_t *)&qword_100585030, (unint64_t *)&unk_1005887A0);
  *(void *)(v7 + 72) = v5;
  uint64_t v8 = v4;
  id v9 = v5;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v10 = [*(id *)&v8[OBJC_IVAR___CSDCallHistoryCallFilter_callHistoryManager] callsWithPredicate:v9 limit:1 offset:0 batchSize:0];
  sub_1001F6204(0, &qword_100585038);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  return v12 == 0;
}

void sub_100370670()
{
}

id sub_1003706B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallHistoryCallFilter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CallHistoryCallFilter()
{
  return self;
}

unint64_t sub_100370754()
{
  unint64_t result = qword_10058B520;
  if (!qword_10058B520)
  {
    type metadata accessor for CallHistoryCallFilter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B520);
  }
  return result;
}

id sub_1003707A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a5)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  id v10 = [v5 initWithType:a1 value:v8 normalizedValue:v9];

  return v10;
}

uint64_t sub_100370844(void *a1)
{
  return sub_1001F612C(a1, (SEL *)&selRef_isoCountryCode);
}

id sub_100370850()
{
  return sub_1003707A0(v0, v1, v2, v3, v4);
}

uint64_t sub_10037087C()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id sub_1003708B0()
{
  return [v0 value];
}

uint64_t sub_1003708D4(void *a1, uint64_t a2)
{
  return sub_1003708FC(a1, a2, (unint64_t *)&qword_10058A480);
}

uint64_t sub_1003708E8(void *a1, uint64_t a2)
{
  return sub_1003708FC(a1, a2, (unint64_t *)&unk_100586E00);
}

uint64_t sub_1003708FC(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = a1;
    char v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        Swift::Int v10 = v8 & ~v9,
        sub_10037851C(),
        (v11 & 1) == 0))
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  sub_1001F6204(0, a3);
  id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v10);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v15 = ~v9;
    uint64_t v16 = (v10 + 1) & v15;
    sub_10037851C();
    if (v17)
    {
      do
      {
        id v18 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          break;
        }
        uint64_t v16 = (v16 + 1) & v15;
        sub_10037851C();
      }
      while ((v19 & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  char v14 = 1;
  return v14 & 1;
}

void sub_100370A38()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1002024D0();
  if (*(void *)(v2 + 16))
  {
    sub_10037848C((unint64_t *)&qword_1005873E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v9 = v7 & ~v8;
    uint64_t v10 = v2 + 56;
    if ((*(void *)(v2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v16 = ~v8;
      uint64_t v17 = v2;
      uint64_t v11 = v5 + 16;
      id v12 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = *(void *)(v11 + 56);
      do
      {
        v12(v0, *(void *)(v17 + 48) + v13 * v9, v3);
        sub_10037848C((unint64_t *)&qword_1005858A0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_10026B9D8();
        v15();
        if (v14) {
          break;
        }
        unint64_t v9 = (v9 + 1) & v16;
      }
      while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
  }
  sub_1001FCC08();
}

void sub_100370C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    sub_1002C8448();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_1002E7CD0();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1002E7CD0();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1002E7CD0();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_100370D10(void *a1, uint64_t a2)
{
  return sub_1003708FC(a1, a2, (unint64_t *)&qword_100588810);
}

void sub_100370D24(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v4 = static Hasher._hash(seed:_:)() & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(void *)(*(void *)(a2 + 48) + 8 * v4) != a1)
    {
      sub_1003785B0();
      if (v7)
      {
        do
        {
          if (*(void *)(v5 + 8 * v6) == a1) {
            break;
          }
          sub_1003785B0();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

void *sub_100370DC8(uint64_t a1)
{
  return sub_100370DF0(a1);
}

void *sub_100370DDC(uint64_t a1)
{
  return sub_100370DF0(a1);
}

void *sub_100370DF0(uint64_t a1)
{
  char v8 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v8;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_100201880(i, (uint64_t)v7);
    sub_1002C8448();
    sub_1001F6204(v4, v5);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v8;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_100370F00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100378628();
  uint64_t v3 = v11;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_100201880(i, (uint64_t)v10);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003785F4();
        uint64_t v3 = v11;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      if (v5 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1002E3EC4();
        uint64_t v3 = v11;
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_100371020(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100378628();
  uint64_t v3 = v11;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_1002353DC(i, (uint64_t)v10);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003785F4();
        uint64_t v3 = v11;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      if (v5 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1002E3EC4();
        uint64_t v3 = v11;
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_100371170()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1003711E0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_delegate) = a1;
  return swift_unknownObjectRelease();
}

id sub_10037122C()
{
  return *(id *)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
}

void sub_100371298(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  *(void *)(v1 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue) = a1;
}

char *sub_1003712AC(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for CSDCollaborationStateManager());
  id v3 = a1;
  uint64_t v4 = sub_100371984(v3, (uint64_t)sub_1003713AC, 0, (uint64_t)sub_100371878, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  unint64_t v5 = self;
  uint64_t v6 = v4;
  unint64_t result = (char *)[v5 defaultWorkspace];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = v6;
    [v8 addObserver:v9];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003713AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = self;
  URL._bridgeToObjectiveC()(v10);
  id v12 = v11;
  id v41 = 0;
  id v13 = [v9 appLinksWithURL:v11 limit:1 error:&v41];

  id v14 = v41;
  if (!v13)
  {
    id v21 = v41;
    uint64_t v22 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1005839E0 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_1001F5F88(v23, (uint64_t)qword_100594B98);
    id v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v24(v6, a1, v2);
    swift_errorRetain();
    swift_errorRetain();
    NSString v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      int v38 = v27;
      uint64_t v29 = v28;
      uint64_t v39 = (void *)swift_slowAlloc();
      uint64_t v40 = v22;
      id v41 = v39;
      *(_DWORD *)uint64_t v29 = 136315394;
      id v36 = (void (*)(char *, char *, uint64_t))v24;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      os_log_t v37 = v25;
      uint64_t v30 = String.init<A>(reflecting:)();
      uint64_t v40 = sub_1002344D8(v30, v31, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v36(v8, v6, v2);
      uint64_t v32 = String.init<A>(reflecting:)();
      uint64_t v40 = sub_1002344D8(v32, v33, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      os_log_t v34 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v38, "Failed to get appLink with error: %s, url: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    return 0;
  }
  sub_1001F6204(0, &qword_10058B618);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v16 = v14;

  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_14;
  }
LABEL_4:
  sub_1002DE19C(0, (v15 & 0xC000000000000001) == 0, v15);
  if ((v15 & 0xC000000000000001) != 0) {
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v17 = *(id *)(v15 + 32);
  }
  char v18 = v17;
  swift_bridgeObjectRelease();
  id v19 = [v18 targetApplicationRecord];

  if (v19) {
    return sub_1001F618C(v19);
  }
  return 0;
}

uint64_t sub_100371878(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  for (uint64_t i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    uint64_t v4 = *(i - 1);
    uint64_t v3 = *i;
    id v5 = objc_allocWithZone((Class)LSApplicationRecord);
    swift_bridgeObjectRetain_n();
    id v6 = sub_100377640(v4, v3, 1);
    if (v6) {
      break;
    }
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();

  return v4;
}

char *sub_100371984(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&v5[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_delegate] = 0;
  uint64_t v10 = &v5[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_protectedAppsObserver];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  uint64_t v11 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierOpened;
  id v12 = v5;
  *(void *)&v5[v11] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v13 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToBundleID;
  *(void *)&v12[v13] = sub_100378530();
  uint64_t v14 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_bundleIDToCollaborationIdentifier;
  *(void *)&v12[v14] = sub_100378530();
  uint64_t v15 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToConversationUUID;
  type metadata accessor for UUID();
  *(void *)&v12[v15] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v12[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierNoAppInstalled] = &_swiftEmptySetSingleton;
  uint64_t v16 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToPotentialCKBundleIDs;
  sub_1001F081C(&qword_10058B600);
  *(void *)&v12[v16] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v17 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToCollaborationURL;
  *(void *)&v12[v17] = sub_100378530();
  uint64_t v18 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_conversationUUIDToDisclosedCollaborationInitiators;
  sub_1001F081C((uint64_t *)&unk_1005884D0);
  sub_10037848C((unint64_t *)&qword_1005873E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  *(void *)&v12[v18] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v19 = OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_featureFlags;
  *(void *)&v12[v19] = [objc_allocWithZone((Class)TUFeatureFlags) init];
  unint64_t v20 = &v12[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_appLinkBundleIDBlock];
  *(void *)unint64_t v20 = a2;
  *((void *)v20 + 1) = a3;
  id v21 = &v12[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_installedBundleIDBlock];
  *(void *)id v21 = a4;
  *((void *)v21 + 1) = a5;
  *(void *)&v12[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue] = a1;
  swift_retain();
  swift_retain();
  id v22 = a1;

  v36.receiver = v12;
  v36.super_class = (Class)type metadata accessor for CSDCollaborationStateManager();
  uint64_t v23 = (char *)objc_msgSendSuper2(&v36, "init");
  id v24 = *(void **)&v23[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_featureFlags];
  NSString v25 = v23;
  if ([v24 appProtectionEnabled])
  {
    Class v34 = (Class)type metadata accessor for ProtectedAppsObserver();
    uint64_t v35 = &off_100515A98;
    v33[0] = [objc_allocWithZone(v34) init];
    uint64_t v26 = (uint64_t)&v25[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_protectedAppsObserver];
    sub_10025E698();
    sub_1003783DC((uint64_t)v33, v26);
    swift_endAccess();
    sub_10025E698();
    uint64_t v27 = *(void *)(v26 + 24);
    if (v27)
    {
      uint64_t v28 = *(void *)(v26 + 32);
      sub_10020EF04(v26, *(void *)(v26 + 24));
      uint64_t v29 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v28 + 16);
      uint64_t v30 = v25;
      v29(v25, &off_100516E98, v27, v28);
    }
    swift_endAccess();
  }
  swift_release();
  swift_release();

  return v25;
}

void sub_100371CB0()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v5 = sub_100202384(v4);
  __chkstk_darwin(v5);
  sub_10037856C();
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v6);
  sub_1001FCC88();
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v7;
  sub_100235D68();
  v8();
  id v9 = v7;
  os_log_type_t v10 = _dispatchPreconditionTest(_:)();
  sub_100378684();
  v11();
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  id v12 = (uint64_t *)(v0
                  + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToConversationUUID);
  sub_1002022F8();
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_100378678();
  sub_100223764(v14, v15, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for UUID();
  LODWORD(v13) = sub_1001F758C(v0, 1, v16);
  sub_10021E23C(v0, (uint64_t *)&unk_100585580);
  if (v13 == 1)
  {
    if (qword_1005839E0 == -1)
    {
LABEL_4:
      uint64_t v17 = type metadata accessor for Logger();
      sub_1001F5F88(v17, (uint64_t)qword_100594B98);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.info.getter();
      uint64_t v42 = v3;
      if (sub_100342CB0(v19))
      {
        unint64_t v20 = (uint8_t *)sub_100235B18();
        LOBYTE(v3) = sub_100202470();
        *(_DWORD *)unint64_t v20 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v21 = String.init<A>(reflecting:)();
        sub_1003786FC(v21, v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100342BCC();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, v10, "CSDCollaborationStateManager started tracking %s", v20, 0xCu);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
      }
      else
      {

        sub_100342BCC();
      }
      sub_100378678();
      sub_1003723B0();
      sub_100378678();
      sub_100373388();
      uint64_t v32 = v31;
      swift_bridgeObjectRetain_n();
      unint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.info.getter();
      if (sub_1002B81D0(v34))
      {
        uint64_t v35 = sub_100235B88();
        sub_10026B9C0();
        *(_DWORD *)uint64_t v35 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v36 = String.init<A>(reflecting:)();
        uint64_t v38 = sub_1003786FC(v36, v37);
        sub_1003786DC(v38);
        sub_100342BCC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2080;
        type metadata accessor for TUCollaborationDocumentState(0);
        uint64_t v39 = String.init<A>(reflecting:)();
        uint64_t v41 = sub_1003786FC(v39, v40);
        sub_1003786DC(v41);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v3, "CSDCollaborationStateManager finished adding %s with state: %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
      }
      else
      {

        sub_100342BCC();
      }
      if (v42) {
        ((void (*)(uint64_t, void))v42)(v32, 0);
      }
      sub_10037492C();
      goto LABEL_19;
    }
LABEL_21:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1005839E0 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_1001F5F88(v23, (uint64_t)qword_100594B98);
  id v24 = (void *)Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.info.getter();
  if (sub_100246418(v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    sub_100235C6C();
    _os_log_impl(v27, v28, v29, v30, v26, 2u);
    sub_1001F63CC();
  }

  if (v3)
  {
    sub_100378678();
    sub_100373388();
    v3();
  }
LABEL_19:
  sub_1001FCC08();
}

void sub_1003723B0()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v48 = v6;
  uint64_t v49 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v13 = sub_100202384(v12);
  __chkstk_darwin(v13);
  sub_100378588();
  sub_1001F6398();
  __chkstk_darwin(v14);
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  *(uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0)) = (uint64_t)v16;
  sub_100235D68();
  v17();
  id v18 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  sub_100378684();
  v19();
  if (v16)
  {
    sub_10025E698();
    swift_bridgeObjectRetain();
    sub_1002C8448();
    sub_10027FD58(v20, v21, v22);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v1, v3, v23);
    sub_1001F0530(v1, 0, 1, v23);
    sub_10025E698();
    swift_bridgeObjectRetain();
    sub_1002C8448();
    sub_1002C2A6C();
    swift_endAccess();
    sub_10025E698();
    swift_bridgeObjectRetain();
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_1002C8448();
      sub_10027FCA8(v24, v25, v26);
    }
    else
    {
      sub_1002CEB34(v11, v9);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_10025E698();
    swift_bridgeObjectRetain();
    uint64_t v27 = v49;
    swift_bridgeObjectRetain();
    sub_10027FBB4(v48, v27, v11, v9);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_10037521C();
    if (v29)
    {
      uint64_t v30 = v28;
      uint64_t v31 = v29;
      sub_1001F6204(0, &qword_100584B80);
      sub_100378500();
      swift_bridgeObjectRetain_n();
      uint64_t v32 = static OS_os_log.default.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (sub_1002B81D0(v33))
      {
        uint64_t v34 = sub_100235B88();
        uint64_t v49 = sub_10026B9C0();
        v50[0] = v49;
        *(_DWORD *)uint64_t v34 = 136315394;
        uint64_t v51 = v11;
        uint64_t v52 = v9;
        swift_bridgeObjectRetain();
        uint64_t v35 = String.init<A>(reflecting:)();
        uint64_t v37 = sub_1002344D8(v35, v36, v50);
        sub_100361B78(v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_1002B8120();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        uint64_t v51 = v30;
        uint64_t v52 = v31;
        swift_bridgeObjectRetain();
        uint64_t v38 = String.init<A>(reflecting:)();
        uint64_t v40 = sub_1002344D8(v38, v39, v50);
        sub_100378714(v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v1, "CSDCollaborationStateManager started tracking %s with bundleID %s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1002B8120();
      }

      sub_10025E698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10027FBB4(v30, v31, v11, v9);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10025E698();
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_100202590();
      sub_10027FBB4(v45, v46, v30, v31);
      swift_endAccess();
    }
    else
    {
      sub_1001F6204(0, &qword_100584B80);
      uint64_t v41 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      sub_10025E698();
      swift_bridgeObjectRetain();
      sub_1002C8448();
      sub_1002DFB58(v42, v43, v44);
      swift_endAccess();
    }
    swift_bridgeObjectRelease();
    sub_1001FCC08();
  }
  else
  {
    __break(1u);
  }
}

void sub_100372A40(void *a1)
{
  id v1 = [a1 highlightIdentifiers];
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100246BE0(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_100202590();
    sub_100372C10();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1005839E0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1001F5F88(v5, (uint64_t)qword_100594B98);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "CSDCollaborationStateManager cannot stop tracking collaborations for conversation without any collaboration identifiers", v7, 2u);
      sub_1001F63CC();
    }
  }
}

void sub_100372C10()
{
  sub_1001FCC38();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v9 = sub_100202384(v8);
  __chkstk_darwin(v9);
  sub_100378588();
  sub_1001F6398();
  __chkstk_darwin(v10);
  sub_1001FCC88();
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v11;
  sub_100235D68();
  v12();
  id v13 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  sub_100378684();
  v14();
  if (v11)
  {
    if (qword_1005839E0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  sub_1001F5F88(v15, (uint64_t)qword_100594B98);
  sub_100378500();
  uint64_t v16 = (void *)Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (sub_100342CB0(v17))
  {
    id v18 = (_DWORD *)sub_100235B18();
    v36[0] = sub_100202470();
    *id v18 = 136315138;
    v36[3] = v7;
    v36[4] = v5;
    swift_bridgeObjectRetain();
    uint64_t v19 = String.init<A>(reflecting:)();
    uint64_t v21 = sub_1002344D8(v19, v20, v36);
    sub_100361B78(v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_1002B8120();
    swift_bridgeObjectRelease();
    sub_1002B846C((void *)&_mh_execute_header, v22, v23, "CSDCollaborationStateManager stopped tracking %s");
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_1002B8120();
  }
  sub_10025E698();
  uint64_t v24 = sub_100202590();
  sub_1002CED58(v24);
  swift_endAccess();
  uint64_t v25 = (uint64_t *)(v3 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToBundleID);
  sub_1002022F8();
  uint64_t v26 = *v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_10022337C(v7, v5, v26);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29)
  {
    sub_1002024E8();
    sub_1002CEA94(v27);
    sub_1003786C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10025E698();
  sub_1002CEB34(v7, v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1002024E8();
  uint64_t v30 = sub_100202590();
  sub_1002CEA94(v30);
  sub_1003786C4();
  swift_bridgeObjectRelease();
  sub_10025E698();
  uint64_t v31 = sub_100202590();
  sub_1002CEBE8(v31, v32);
  sub_10021E23C(v2, (uint64_t *)&unk_100585580);
  swift_endAccess();
  sub_10025E698();
  uint64_t v33 = sub_100202590();
  sub_100377734(v33, v34);
  sub_1003786C4();
  swift_bridgeObjectRelease();
  sub_10025E698();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_100202590();
  sub_1002CEA94(v35);
  sub_1003786C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001FCC08();
}

void sub_100372FF4()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v6);
  sub_1002024D0();
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v7;
  sub_100235D68();
  v8();
  id v9 = v7;
  _dispatchPreconditionTest(_:)();
  uint64_t v10 = sub_100378550();
  v11(v10);
  if (v7)
  {
    if (qword_1005839E0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1001F5F88(v12, (uint64_t)qword_100594B98);
  swift_bridgeObjectRetain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)sub_100235B18();
    v19[0] = sub_100202470();
    v19[1] = v5;
    *(_DWORD *)uint64_t v15 = 136315138;
    void v19[2] = v3;
    swift_bridgeObjectRetain();
    uint64_t v16 = String.init<A>(reflecting:)();
    uint64_t v18 = sub_1002344D8(v16, v17, v19);
    sub_100378714(v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "CSDCollaborationStateManager opened collaboration: %s", v15, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1003785D8();
  sub_10025E698();
  swift_bridgeObjectRetain();
  sub_10027FD58(1, v5, v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1003785D8();
  sub_1003786A4();
  sub_1001FCC08();
}

void sub_100373278(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10037331C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

void sub_100373388()
{
  sub_1001FCC38();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v7);
  sub_1002024D0();
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v8;
  sub_100235D68();
  v9();
  id v10 = v8;
  _dispatchPreconditionTest(_:)();
  uint64_t v11 = sub_100378550();
  v12(v11);
  if (v8)
  {
    if ([*(id *)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_featureFlags) appProtectionEnabled])
    {
      uint64_t v13 = v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_protectedAppsObserver;
      sub_1002022F8();
      sub_10037833C(v13, (uint64_t)&v48);
      if (v49)
      {
        sub_100233560(&v48, (uint64_t)v50);
        sub_100204074(v50, v50[3]);
        sub_100349264();
        uint64_t v15 = v14;
        uint64_t v16 = (uint64_t *)(v2
                        + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToBundleID);
        sub_1002022F8();
        uint64_t v17 = *v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_10022337C(v6, v4, v17);
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          uint64_t v21 = v18;
        }
        else {
          uint64_t v21 = 0;
        }
        if (v20) {
          uint64_t v22 = v20;
        }
        else {
          uint64_t v22 = 0xE000000000000000;
        }
        char v23 = sub_10039E4D0(v21, v22, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1002018DC((uint64_t)v50);
LABEL_13:
        if (sub_1003747FC())
        {
          sub_1002022F8();
          swift_bridgeObjectRetain();
          uint64_t v24 = sub_100378618();
          sub_100370C00(v24, v25, v26);
          char v28 = v27;
          swift_bridgeObjectRelease();
          if (v28) {
            goto LABEL_16;
          }
          sub_1002022F8();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_100378618();
          sub_10022337C(v29, v30, v31);
          uint64_t v33 = v32;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 == 0) | v23 & 1)
          {
LABEL_16:
            uint64_t v34 = 2;
          }
          else
          {
            sub_1002022F8();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v44 = sub_100378618();
            char v47 = sub_100223724(v44, v45, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v47 & 1) == 0)
            {
              uint64_t v52 = 0;
LABEL_19:
              if (qword_1005839E0 == -1) {
                goto LABEL_20;
              }
              goto LABEL_28;
            }
            uint64_t v34 = 1;
          }
        }
        else
        {
          uint64_t v34 = -1;
        }
        uint64_t v52 = v34;
        goto LABEL_19;
      }
      sub_10021E23C((uint64_t)&v48, (uint64_t *)&unk_10058B608);
    }
    char v23 = 0;
    goto LABEL_13;
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_20:
  uint64_t v35 = type metadata accessor for Logger();
  sub_1001F5F88(v35, (uint64_t)qword_100594B98);
  uint64_t v36 = v52;
  swift_bridgeObjectRetain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = sub_100235B88();
    uint64_t v51 = sub_10026B9C0();
    *(_DWORD *)uint64_t v39 = 136315394;
    v50[0] = v6;
    v50[1] = v4;
    swift_bridgeObjectRetain();
    uint64_t v40 = String.init<A>(reflecting:)();
    v50[0] = sub_1002344D8(v40, v41, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_1002B8120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    v50[0] = v36;
    type metadata accessor for TUCollaborationDocumentState(0);
    uint64_t v42 = String.init<A>(reflecting:)();
    v50[0] = sub_1002344D8(v42, v43, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "CSDCollaborationStateManager state for %s is %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_1002B8120();
  }
  sub_1002022F8();
  sub_1001FCC08();
}

void sub_100373890(void *a1, uint64_t a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v53 = (char *)v48 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v48 - v15;
  uint64_t v17 = (uint64_t *)(a3
                  + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_conversationUUIDToDisclosedCollaborationInitiators);
  swift_beginAccess();
  uint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1002233D4(a2, v18);
  swift_bridgeObjectRelease();
  if (v19 && (char v20 = sub_1003708FC(a1, v19, &qword_100588840), swift_bridgeObjectRelease(), (v20 & 1) != 0))
  {
    if (qword_1005839E0 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1001F5F88(v21, (uint64_t)qword_100594B98);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v22(v16, a2, v8);
    id v23 = a1;
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.info.getter();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      int v50 = v26;
      uint64_t v28 = v27;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v54 = (uint64_t)v23;
      uint64_t v55 = v51;
      *(_DWORD *)uint64_t v28 = 136315394;
      v48[1] = v28 + 4;
      sub_1001F6204(0, &qword_100588840);
      uint64_t v49 = (void (*)(char *, char *, uint64_t))v22;
      id v29 = v23;
      uint64_t v52 = a4;
      uint64_t v30 = String.init<A>(reflecting:)();
      uint64_t v54 = sub_1002344D8(v30, v31, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v49(v53, v16, v8);
      uint64_t v32 = String.init<A>(reflecting:)();
      uint64_t v54 = sub_1002344D8(v32, v33, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a4 = v52;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v50, "CSDCollaborationStateManager: %s already disclosed for conversation UUID %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    }

    uint64_t v47 = 0;
  }
  else
  {
    if (qword_1005839E0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_1001F5F88(v34, (uint64_t)qword_100594B98);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v35(v12, a2, v8);
    id v36 = a1;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.info.getter();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      int v50 = v39;
      uint64_t v41 = v40;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v54 = (uint64_t)v36;
      uint64_t v55 = v51;
      *(_DWORD *)uint64_t v41 = 136315394;
      uint64_t v49 = (void (*)(char *, char *, uint64_t))(v41 + 4);
      sub_1001F6204(0, &qword_100588840);
      id v42 = v36;
      uint64_t v52 = a4;
      uint64_t v43 = String.init<A>(reflecting:)();
      uint64_t v54 = sub_1002344D8(v43, v44, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      v35(v53, (uint64_t)v12, v8);
      uint64_t v45 = String.init<A>(reflecting:)();
      uint64_t v54 = sub_1002344D8(v45, v46, &v55);
      a4 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v50, "CSDCollaborationStateManager: %s needs disclosure for conversation UUID %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }

    uint64_t v47 = 1;
  }
  a4[2](a4, v47, 0);
  _Block_release(a4);
}

void sub_100374004()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v43 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - v12;
  if (qword_1005839E0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  int v15 = sub_1001F5F88(v14, (uint64_t)qword_100594B98);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16(v13, v3, v6);
  id v17 = v5;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  if (sub_1002B81D0(v19))
  {
    uint64_t v20 = sub_100235B88();
    int v39 = v15;
    uint64_t v21 = v20;
    uint64_t v40 = sub_10026B9C0();
    v45[0] = v40;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v37 = v21 + 4;
    id v44 = v17;
    sub_1001F6204(0, &qword_100588840);
    uint64_t v41 = v1;
    id v22 = v17;
    os_log_t v38 = v18;
    id v23 = v17;
    id v24 = v22;
    uint64_t v42 = v3;
    uint64_t v25 = String.init<A>(reflecting:)();
    id v44 = (id)sub_1002344D8(v25, v26, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v17 = v23;
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v16(v43, (uint64_t)v13, v6);
    uint64_t v27 = String.init<A>(reflecting:)();
    id v44 = (id)sub_1002344D8(v27, v28, v45);
    uint64_t v1 = v41;
    uint64_t v3 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10026B9D8();
    v29();
    os_log_t v30 = v38;
    _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v39, "CSDCollaborationStateManager: adding %s as disclosed for conversation UUID %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_10026B9D8();
    v31();
  }
  uint64_t v32 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_conversationUUIDToDisclosedCollaborationInitiators);
  sub_1002022F8();
  uint64_t v33 = *v32;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1002233D4(v3, v33);
  swift_bridgeObjectRelease();
  uint64_t v35 = &_swiftEmptySetSingleton;
  if (v34) {
    uint64_t v35 = (void *)v34;
  }
  uint64_t v46 = (uint64_t)v35;
  sub_1002E0530((uint64_t)&v44, (uint64_t)v17);

  uint64_t v36 = v46;
  sub_1002024E8();
  sub_10027FDA4(v36, v3);
  swift_endAccess();
  sub_1001FCC08();
}

void sub_100374478()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1002024D0();
  sub_10025E698();
  uint64_t v7 = sub_1002CEE00(v2);
  swift_endAccess();
  if (v7)
  {
    if (qword_1005839E0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1001F5F88(v8, (uint64_t)qword_100594B98);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v2, v3);
    swift_bridgeObjectRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = sub_100235B88();
      v20[0] = sub_10026B9C0();
      *(_DWORD *)uint64_t v11 = 136315394;
      sub_10037848C((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_1002344D8(v12, v13, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_10026B75C();
      v15(v14);
      *(_WORD *)(v11 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1001F081C((uint64_t *)&unk_1005884D0);
      uint64_t v16 = String.init<A>(reflecting:)();
      sub_1002344D8(v16, v17, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1002B8120();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "CSDCollaborationStateManager: disclosed initiators removed for conversation UUID %s: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {
      uint64_t v18 = sub_10026B75C();
      v19(v18);

      sub_1002B8120();
    }
  }
  sub_1001FCC08();
}

uint64_t sub_1003747FC()
{
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v2);
  sub_1002024D0();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v3;
  sub_100235D68();
  v4();
  id v5 = v3;
  LOBYTE(v3) = _dispatchPreconditionTest(_:)();
  sub_10026B9D8();
  uint64_t result = v6();
  if (v3)
  {
    uint64_t v8 = v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierOpened;
    sub_1002022F8();
    if (*(void *)(*(void *)v8 + 16))
    {
      swift_bridgeObjectRetain();
      sub_100202590();
      sub_100233664();
      char v10 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v10 = 0;
    }
    return v10 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10037492C()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v86 = v5;
  uint64_t v87 = v4;
  id v90 = v6;
  uint64_t v79 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v81 = v13;
  __chkstk_darwin(v14);
  sub_1001FCCD0();
  uint64_t v80 = v15;
  uint64_t v16 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v17 = sub_100202384(v16);
  __chkstk_darwin(v17);
  sub_1001FCCD0();
  uint64_t v88 = v18;
  uint64_t v85 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v83 = v19;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v22;
  __chkstk_darwin(v21);
  id v24 = (char *)&v72 - v23;
  uint64_t v25 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_1001FCCA0();
  uint64_t v89 = v0;
  id v29 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v29;
  sub_100235D68();
  v30();
  id v31 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v27 + 8))(v1, v25);
  if (v29)
  {
    uint64_t v84 = v24;
    if (qword_1005839E0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v82 = sub_1001F5F88(v32, (uint64_t)qword_100594B98);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.info.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v76 = v8;
  uint64_t v75 = v12;
  unint64_t v74 = v11;
  if (v35)
  {
    uint64_t v36 = sub_100235B88();
    uint64_t v73 = v3;
    uint64_t v37 = v36;
    uint64_t v91 = sub_10026B9C0();
    *(_DWORD *)uint64_t v37 = 136315394;
    id v38 = v90;
    uint64_t v98 = (uint64_t)v90;
    type metadata accessor for TUCollaborationDocumentState(0);
    uint64_t v39 = String.init<A>(reflecting:)();
    uint64_t v98 = sub_1002344D8(v39, v40, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    id v41 = (id)v87;
    uint64_t v98 = v87;
    uint64_t v42 = String.init<A>(reflecting:)();
    uint64_t v98 = sub_1002344D8(v42, v43, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "CSDCollaborationStateManager: Checking whether to update delegate with currentDocumentState: %s oldState: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    uint64_t v3 = v73;
    sub_1001F63CC();

    uint64_t v44 = v89;
  }
  else
  {

    uint64_t v44 = v89;
    id v38 = v90;
    id v41 = (id)v87;
  }
  uint64_t v45 = v88;
  if (v41 != v38)
  {
    uint64_t v46 = (uint64_t *)(v44
                    + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToConversationUUID);
    sub_1002022F8();
    uint64_t v47 = *v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100223764(v86, v3, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v85;
    if (sub_1001F758C(v45, 1, v85) == 1)
    {
      sub_10021E23C(v45, (uint64_t *)&unk_100585580);
      sub_100378660();
      uint64_t v49 = (void *)Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.info.getter();
      if (sub_100246418(v50))
      {
        uint64_t v51 = (uint8_t *)sub_100235B18();
        id v97 = (void *)sub_100202470();
        *(_DWORD *)uint64_t v51 = 136315138;
        uint64_t v91 = v86;
        uint64_t v92 = v3;
        swift_bridgeObjectRetain();
        uint64_t v52 = String.init<A>(reflecting:)();
        uint64_t v91 = sub_1002344D8(v52, v53, (uint64_t *)&v97);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100342C98();
        swift_bridgeObjectRelease();
        sub_100235C6C();
        _os_log_impl(v54, v55, v56, v57, v51, 0xCu);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
      }
      else
      {

        sub_100342C98();
      }
    }
    else
    {
      uint64_t v58 = v83;
      uint64_t v59 = v84;
      os_log_type_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
      v60(v84, v45, v48);
      unint64_t v61 = *(void **)(v44 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_delegate);
      if (v61)
      {
        id v90 = [v61 queue];
        uint64_t v62 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v63 = v78;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v78, v59, v48);
        unint64_t v64 = (*(unsigned __int8 *)(v58 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v65 = v58;
        unint64_t v66 = (char *)swift_allocObject();
        *((void *)v66 + 2) = v62;
        *((void *)v66 + 3) = v38;
        *((void *)v66 + 4) = v86;
        *((void *)v66 + 5) = v3;
        v60(&v66[v64], (uint64_t)v63, v48);
        Class v95 = sub_1003782D4;
        uint64_t v96 = v66;
        uint64_t v91 = (uint64_t)_NSConcreteStackBlock;
        uint64_t v92 = 1107296256;
        id v93 = sub_1002C2C88;
        uint64_t v94 = &unk_100516F98;
        uint64_t v67 = _Block_copy(&v91);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v68 = v80;
        static DispatchQoS.unspecified.getter();
        id v97 = _swiftEmptyArrayStorage;
        sub_10037848C((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1001F081C((uint64_t *)&unk_100584B00);
        sub_1001F6030();
        unsigned __int8 v69 = v74;
        uint64_t v70 = v79;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        os_log_type_t v71 = v90;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v67);

        (*(void (**)(char *, uint64_t))(v76 + 8))(v69, v70);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v68, v75);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v84, v48);
        swift_release();
        swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v48);
      }
    }
  }
  sub_1001FCC08();
}

void sub_100375150(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_delegate);
    swift_unknownObjectRetain();

    if (v5)
    {
      NSString v6 = String._bridgeToObjectiveC()();
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v5 collaborationStateChanged:a2 forCollaborationIdentifier:v6 onConversationUUID:isa];

      swift_unknownObjectRelease();
    }
  }
}

void sub_10037521C()
{
  sub_1001FCC38();
  uint64_t v2 = v0;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_1001F081C(&qword_1005878F0);
  uint64_t v8 = sub_100202384(v7);
  __chkstk_darwin(v8);
  sub_10037856C();
  uint64_t v9 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v71 = v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001FCCA0();
  uint64_t v18 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  void *v1 = v18;
  sub_100235D68();
  v19();
  id v20 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v1, v14);
  if (v18)
  {
    uint64_t v21 = (uint64_t *)(v0
                    + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToCollaborationURL);
    sub_1002022F8();
    uint64_t v22 = *v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_10022337C(v6, v4, v22);
    uint64_t v1 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1) {
      goto LABEL_33;
    }
    URL.init(string:)();
    if (sub_1001F758C(v0, 1, v9) == 1)
    {
      sub_10021E23C(v0, &qword_1005878F0);
      if (qword_1005839E0 == -1) {
        goto LABEL_5;
      }
      goto LABEL_39;
    }
    uint64_t v70 = v6;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v13, v0, v9);
    uint64_t v32 = *(uint64_t (**)(char *))(v0
                                           + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_appLinkBundleIDBlock);
    swift_retain();
    uint64_t v33 = v32(v13);
    uint64_t v35 = v34;
    swift_release();
    if (v35)
    {
      if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v38)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        uint64_t v39 = (uint64_t *)(v2
                        + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierToPotentialCKBundleIDs);
        sub_1002022F8();
        uint64_t v40 = *v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_100223128(v70, v4, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v41)
        {
          if (*(void *)(v41 + 16))
          {
            if (qword_1005839E0 != -1) {
              swift_once();
            }
            uint64_t v42 = type metadata accessor for Logger();
            uint64_t v43 = sub_1001F5F88(v42, (uint64_t)qword_100594B98);
            swift_bridgeObjectRetain_n();
            uint64_t v44 = Logger.logObject.getter();
            os_log_type_t v45 = static os_log_type_t.info.getter();
            int v46 = v45;
            if (os_log_type_enabled(v44, v45))
            {
              uint64_t v69 = v43;
              uint64_t v47 = sub_100235B18();
              int v68 = v46;
              uint64_t v48 = (uint8_t *)v47;
              uint64_t v67 = sub_100202470();
              v75[0] = v67;
              *(_DWORD *)uint64_t v48 = 136315138;
              unint64_t v66 = v48 + 4;
              uint64_t v72 = v41;
              swift_bridgeObjectRetain();
              sub_1001F081C(&qword_10058B600);
              uint64_t v49 = String.init<A>(reflecting:)();
              uint64_t v72 = sub_1002344D8(v49, v50, v75);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              sub_100342FC0();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v68, "Collaboration identifier is a sharebear collaboration- checking potential bundleIDs %s", v48, 0xCu);
              swift_arrayDestroy();
              sub_1001F63CC();
              sub_1001F63CC();
            }
            else
            {

              sub_100342FC0();
            }
            sub_100375A1C(v41);
            uint64_t v58 = v57;
            swift_bridgeObjectRelease();
            if (v58) {
              goto LABEL_32;
            }
            swift_bridgeObjectRetain_n();
            unint64_t v61 = (void *)Logger.logObject.getter();
            os_log_type_t v62 = static os_log_type_t.info.getter();
            if (sub_100342CB0(v62))
            {
              unint64_t v63 = (_DWORD *)sub_100235B18();
              v75[0] = sub_100202470();
              *unint64_t v63 = 136315138;
              swift_bridgeObjectRetain();
              uint64_t v72 = sub_1002344D8(v70, v4, v75);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              sub_1002B846C((void *)&_mh_execute_header, v64, v65, "No CloudKit applications are installed that can open %s");
              swift_arrayDestroy();
              sub_1001F63CC();
              sub_1001F63CC();
            }
            else
            {
              sub_1002B8120();
            }

LABEL_28:
            uint64_t v55 = sub_10037864C();
            v56(v55);
            goto LABEL_33;
          }
          swift_bridgeObjectRelease();
        }
        if (qword_1005839E0 != -1) {
          swift_once();
        }
        uint64_t v51 = type metadata accessor for Logger();
        sub_1001F5F88(v51, (uint64_t)qword_100594B98);
        uint64_t v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v54 = 0;
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "No CloudKit bundleIDs cached for a sharebear collaboration, returning nil for installed bundleID", v54, 2u);
          sub_1001F63CC();
        }

        goto LABEL_28;
      }
    }
LABEL_32:
    uint64_t v59 = sub_10037864C();
    v60(v59);
    goto LABEL_33;
  }
  __break(1u);
LABEL_39:
  swift_once();
LABEL_5:
  uint64_t v24 = type metadata accessor for Logger();
  sub_1001F5F88(v24, (uint64_t)qword_100594B98);
  sub_100378500();
  swift_bridgeObjectRetain();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = sub_100235B88();
    v75[0] = sub_10026B9C0();
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v73 = v14;
    unint64_t v74 = v1;
    swift_bridgeObjectRetain();
    uint64_t v28 = String.init<A>(reflecting:)();
    uint64_t v73 = sub_1002344D8(v28, v29, v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100342FC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v73 = v6;
    unint64_t v74 = (void *)v4;
    swift_bridgeObjectRetain();
    uint64_t v30 = String.init<A>(reflecting:)();
    uint64_t v73 = sub_1003786FC(v30, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_1002B8120();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "CSDCollaborationStateManager could not create a url from %s for collaboration identifier %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    sub_1002B8120();
    sub_100342FC0();
  }
LABEL_33:
  sub_1001FCC08();
}

uint64_t sub_100375A1C(uint64_t a1)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v1
                                         + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_installedBundleIDBlock);
  swift_retain();
  uint64_t v4 = v3(a1);
  swift_release();
  return v4;
}

void sub_100375A80()
{
}

id sub_100375AC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CSDCollaborationStateManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CSDCollaborationStateManager()
{
  return self;
}

void sub_100375C34(uint64_t a1)
{
  if (qword_1005839E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1001F5F88(v2, (uint64_t)qword_100594B98);
  swift_bridgeObjectRetain_n();
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v6 = Array.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_1002344D8(v6, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "applicationsDidInstall: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (sub_100370DF0(a1))
  {
    swift_bridgeObjectRelease();
    sub_100375EB0();
  }
  else
  {
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to convert notifications' appProxies to LSApplicationProxy", v11, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100375EB0()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_collaborationIdentifierNoAppInstalled);
  sub_1002022F8();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 56);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v25 = v2;
  uint64_t v26 = v3;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v16 = *v14;
    unint64_t v15 = v14[1];
    swift_bridgeObjectRetain();
    sub_10037521C();
    if (v18)
    {
      unint64_t v19 = v18;
      int64_t v28 = v8;
      unint64_t v29 = v6;
      uint64_t v20 = v17;
      sub_100373388();
      if (qword_1005839E0 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_1001F5F88(v21, (uint64_t)qword_100594B98);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = sub_100235B88();
        v30[0] = sub_10026B9C0();
        *(_DWORD *)uint64_t v24 = 136315394;
        swift_bridgeObjectRetain();
        sub_1002344D8(v20, v19, v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_1002344D8(v16, v15, v30);
        uint64_t v2 = v25;
        uint64_t v3 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Found a newly installed bundleID %s for collaboration identifier: %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        sub_100342BCC();
      }
      int64_t v8 = v28;
      sub_10025E698();
      swift_bridgeObjectRetain();
      sub_10027FD58(0, v16, v15);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10025E698();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10027FBB4(v20, v19, v16, v15);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10025E698();
      swift_bridgeObjectRetain();
      sub_10027FBB4(v16, v15, v20, v19);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1002024E8();
      sub_100377734(v16, v15);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100373388();
      sub_10037492C();
      unint64_t v6 = v29;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v27) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v27) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v27) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v27) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v3 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1003763A0()
{
  sub_1001FCC38();
  uint64_t v17 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v6);
  sub_10021EA1C();
  sub_1001F6398();
  __chkstk_darwin(v7);
  sub_1002024D0();
  int64_t v8 = *(void **)&v0[OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v0;
  v18[4] = v3;
  v18[5] = v9;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  void v18[2] = sub_1002C2C88;
  v18[3] = v17;
  os_log_type_t v10 = _Block_copy(v18);
  id v11 = v8;
  swift_bridgeObjectRetain();
  unint64_t v12 = v0;
  static DispatchQoS.unspecified.getter();
  sub_10037848C((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  sub_100277464();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100357A48();
  _Block_release(v10);

  uint64_t v13 = sub_10021ECA8();
  v14(v13);
  uint64_t v15 = sub_10021EBF4();
  v16(v15);
  swift_release();
  sub_1001FCC08();
}

void sub_100376574(uint64_t a1, uint64_t a2)
{
  if (qword_1005839E0 != -1) {
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v4 = type metadata accessor for Logger();
    sub_1001F5F88(v4, (uint64_t)qword_100594B98);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v35 = (uint64_t)(v7 + 4);
      swift_bridgeObjectRetain();
      uint64_t v36 = a2;
      uint64_t v8 = Array.description.getter();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1002344D8(v8, v10, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "applicationsDidUninstall: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v11 = (unint64_t)sub_100370DF0(a1);
    if (!v11)
    {
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to convert notifications' appProxies to LSApplicationProxy", v32, 2u);
        swift_slowDealloc();
      }

      return;
    }
    a1 = v11;
    if (v11 >> 62) {
      break;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      goto LABEL_25;
    }
LABEL_8:
    v38[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_1002E3EC4();
    if (v12 < 0)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      return;
    }
    uint64_t v13 = 0;
    uint64_t v14 = (void *)v38[0];
    while (v12 != v13)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v16 = v15;
      uint64_t v17 = sub_10021FC88(v15);
      if (!v18) {
        goto LABEL_28;
      }
      uint64_t v19 = v17;
      uint64_t v20 = v18;

      v38[0] = (uint64_t)v14;
      unint64_t v21 = v14[2];
      if (v21 >= v14[3] >> 1)
      {
        sub_1002E3EC4();
        uint64_t v14 = (void *)v38[0];
      }
      ++v13;
      v14[2] = v21 + 1;
      uint64_t v22 = &v14[2 * v21];
      v22[4] = v19;
      v22[5] = v20;
      if (v12 == v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_23:
    swift_once();
  }
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  if (v12) {
    goto LABEL_8;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_26:
  sub_1002507F0((uint64_t)v14, v23, v24, v25, v26, v27, v28, v29, v35, v36, v37, v38[0], v38[1]);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  sub_10037691C(v34);
  swift_bridgeObjectRelease();
}

uint64_t sub_10037691C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(v42
                   + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_bundleIDToCollaborationIdentifier);
    swift_bridgeObjectRetain();
    sub_1002022F8();
    uint64_t v4 = (unint64_t *)(v2 + 40);
    char v38 = v3;
    do
    {
      unint64_t v5 = *v4;
      if (*v4)
      {
        uint64_t v6 = *v3;
        if (*(void *)(*v3 + 16))
        {
          uint64_t v7 = *(v4 - 1);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v8 = sub_100233664();
          if (v9)
          {
            unint64_t v10 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v8);
            uint64_t v11 = *v10;
            unint64_t v12 = v10[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_1005839E0 != -1) {
              swift_once();
            }
            uint64_t v13 = type metadata accessor for Logger();
            sub_1001F5F88(v13, (uint64_t)qword_100594B98);
            sub_100378500();
            sub_100378660();
            uint64_t v14 = (void *)Logger.logObject.getter();
            os_log_type_t v15 = static os_log_type_t.info.getter();
            uint64_t v40 = v7;
            if (sub_100246418(v15))
            {
              uint64_t v16 = sub_100235B88();
              uint64_t v39 = sub_10026B9C0();
              v44[0] = v39;
              *(_DWORD *)uint64_t v16 = 136315394;
              swift_bridgeObjectRetain();
              sub_1002344D8(v7, v5, v44);
              sub_1003785CC();
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v16 + 12) = 2080;
              swift_bridgeObjectRetain();
              sub_1002344D8(v11, v12, v44);
              sub_1003785CC();
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              sub_100235C6C();
              _os_log_impl(v17, v18, v19, "applicationsDidUninstall: %s for collaboration identifier: %s. Checking if another application can open it", (uint8_t *)v16, 0x16u);
              LOBYTE(v3) = v39;
              swift_arrayDestroy();
              sub_1001F63CC();
              sub_1001F63CC();
            }
            else
            {

              sub_100342C98();
              sub_1002B8120();
            }
            sub_100373388();
            sub_100378728();
            sub_10037521C();
            if (v21)
            {
              unint64_t v22 = v21;
              uint64_t v23 = v20;
              sub_100378660();
              swift_bridgeObjectRetain_n();
              uint64_t v24 = Logger.logObject.getter();
              os_log_type_t v25 = static os_log_type_t.info.getter();
              if (sub_100246418(v25))
              {
                uint64_t v41 = v11;
                uint64_t v26 = sub_100235B88();
                v44[0] = sub_10026B9C0();
                *(_DWORD *)uint64_t v26 = 136315394;
                swift_bridgeObjectRetain();
                sub_1002344D8(v23, v22, v44);
                sub_1003785CC();
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v26 + 12) = 2080;
                swift_bridgeObjectRetain();
                sub_1002344D8(v41, v12, v44);
                sub_1003785CC();
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v3, "Found a fallback bundleID %s for collaboration identifier: %s", (uint8_t *)v26, 0x16u);
                swift_arrayDestroy();
                sub_1001F63CC();
                uint64_t v11 = v41;
                sub_1001F63CC();
              }
              else
              {

                sub_100342C98();
                swift_bridgeObjectRelease_n();
              }
              uint64_t v3 = v38;
              sub_10025E698();
              swift_bridgeObjectRetain();
              sub_10027FD58(0, v11, v12);
              swift_endAccess();
              swift_bridgeObjectRelease();
              sub_10025E698();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10027FBB4(v23, v22, v11, v12);
              swift_endAccess();
              swift_bridgeObjectRelease();
              sub_1002024E8();
              swift_bridgeObjectRetain();
              uint64_t v33 = sub_100378728();
              sub_10027FBB4(v33, v34, v23, v22);
              swift_endAccess();
              swift_bridgeObjectRelease();
              sub_1002024E8();
              sub_1002CEA94(v40);
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10025E698();
              uint64_t v35 = sub_100378728();
              sub_100377734(v35, v36);
              swift_endAccess();
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_100378660();
              uint64_t v27 = (void *)Logger.logObject.getter();
              os_log_type_t v28 = static os_log_type_t.info.getter();
              if (sub_100246418(v28))
              {
                uint64_t v29 = (uint8_t *)sub_100235B18();
                v44[0] = sub_100202470();
                *(_DWORD *)uint64_t v29 = 136315138;
                swift_bridgeObjectRetain();
                sub_1002344D8(v11, v12, v44);
                sub_1003785CC();
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                sub_100235C6C();
                _os_log_impl(v30, v31, v32, "No new bundleID found for collaboration identifier: %s so setting state to not installed", v29, 0xCu);
                swift_arrayDestroy();
                sub_1001F63CC();
                sub_1001F63CC();
              }
              else
              {

                sub_100342C98();
              }
              uint64_t v3 = v38;
              sub_10025E698();
              swift_bridgeObjectRetain();
              sub_10027FD58(0, v11, v12);
              swift_endAccess();
              swift_bridgeObjectRelease();
              sub_10025E698();
              swift_bridgeObjectRetain();
              uint64_t v37 = sub_100378728();
              sub_1002CEA94(v37);
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1002024E8();
              sub_1002CEA94(v40);
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10025E698();
              swift_bridgeObjectRetain();
              sub_1002DFB58(&v43, v11, v12);
              swift_endAccess();
              swift_bridgeObjectRelease();
            }
            sub_100373388();
            sub_10037492C();
          }
          else
          {
            sub_1002B8120();
          }
          swift_bridgeObjectRelease();
        }
      }
      v4 += 2;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100377094(void *a1)
{
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = a1;
  sub_1003763A0();

  return swift_bridgeObjectRelease();
}

void sub_100377120()
{
  sub_100376574(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100377128(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100377138()
{
  return swift_release();
}

void sub_100377140()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_10021EA1C();
  sub_1001F6398();
  __chkstk_darwin(v5);
  sub_1002024D0();
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC13callservicesd28CSDCollaborationStateManager_queue);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v7;
  v15[4] = sub_100378484;
  v15[5] = v8;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_1002C2C88;
  v15[3] = &unk_100517010;
  char v9 = _Block_copy(v15);
  id v10 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_10037848C((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  sub_100277464();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100357A48();
  _Block_release(v9);

  uint64_t v11 = sub_10021ECA8();
  v12(v11);
  uint64_t v13 = sub_10021EBF4();
  v14(v13);
  swift_release();
  swift_release();
  sub_1001FCC08();
}

uint64_t sub_100377358(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return result;
  }
  uint64_t v2 = result + 32;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v3 = 0;
  p_opt_class_meths = &OBJC_PROTOCOL___TUMomentsControllerDelegate.opt_class_meths;
  uint64_t v25 = v2;
  while (1)
  {
    uint64_t v5 = (uint64_t *)(v2 + 16 * v3);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong) {
      break;
    }
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
LABEL_15:
    sub_10021E23C((uint64_t)&v26, (uint64_t *)&unk_10058B608);
LABEL_22:
    if (++v3 == v1) {
      return swift_bridgeObjectRelease();
    }
  }
  char v9 = (void *)Strong;
  uint64_t v10 = (uint64_t)p_opt_class_meths[172] + Strong;
  swift_beginAccess();
  sub_10037833C(v10, (uint64_t)&v26);
  swift_bridgeObjectRetain();

  if (!*((void *)&v27 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_100233560(&v26, (uint64_t)v29);
  sub_100204074(v29, v29[3]);
  sub_100349264();
  unint64_t v12 = v11;
  uint64_t v13 = v11[2];
  if (!v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  BOOL v14 = v11[4] == v7 && v11[5] == v6;
  if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_unknownObjectWeakLoadStrong();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      sub_1001F081C((uint64_t *)&unk_100588830);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10048F550;
      *(void *)(inited + 32) = v7;
      *(void *)(inited + 40) = v6;
      sub_10037691C(inited);
      swift_setDeallocating();
      sub_100252A78();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v2 = v25;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___TUMomentsControllerDelegate + 48);
LABEL_21:
    sub_1002018DC((uint64_t)v29);
    goto LABEL_22;
  }
  if (v13 == 1) {
    goto LABEL_25;
  }
  if (v12[6] == v7 && v12[7] == v6) {
    goto LABEL_11;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    goto LABEL_11;
  }
  if (v13 == 2)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v25;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___TUMomentsControllerDelegate + 48);
LABEL_17:
    uint64_t v18 = swift_unknownObjectWeakLoadStrong();
    if (v18)
    {
      os_log_type_t v19 = (void *)v18;
      sub_100375EB0();
    }
    goto LABEL_21;
  }
  unint64_t v21 = v12 + 9;
  uint64_t v22 = 2;
  while (1)
  {
    uint64_t v23 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (*(v21 - 1) == v7 && *v21 == v6) {
      goto LABEL_11;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_11;
    }
    v21 += 2;
    ++v22;
    if (v23 == v13) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

id sub_100377640(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_10037771C(uint64_t a1)
{
  return sub_100377A68(a1, (void (*)(void))sub_1002E25C4);
}

uint64_t sub_100377734(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  sub_100378690();
  if ((v9 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  uint64_t v11 = (void *)(v10 + 16 * v8);
  BOOL v12 = *v11 == a1 && v11[1] == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v16 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v16;
      sub_100378690();
      if ((v17 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v18 = (void *)(v10 + 16 * v8);
      BOOL v19 = *v18 == a1 && v18[1] == a2;
    }
    while (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1003784EC();
  if (!v14)
  {
    sub_1002E249C();
    uint64_t v13 = v21;
  }
  uint64_t v15 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_100377D18(v8);
  uint64_t *v2 = v21;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1003778A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    Swift::Int v8 = *(void *)(v4 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
    uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v11 = v9 & ~v10;
    sub_1002E7B98();
    if (v12)
    {
      sub_1001F6204(0, (unint64_t *)&unk_100586E00);
      id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v14 = static NSObject.== infix(_:_:)();

      if (v14)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_isUniquelyReferenced_nonNull_native();
        sub_1003784EC();
        if (!v20)
        {
          sub_1002E2964();
          uint64_t v19 = v22;
        }
        uint64_t v7 = *(void *)(*(void *)(v19 + 48) + 8 * v11);
        sub_100377ED4(v11);
        void *v2 = v22;
        goto LABEL_12;
      }
      uint64_t v15 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v15;
        sub_1002E7B98();
        if ((v16 & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
        char v18 = static NSObject.== infix(_:_:)();

        if (v18) {
          goto LABEL_9;
        }
      }
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  id v5 = a1;
  char v6 = __CocoaSet.contains(_:)();

  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v7 = sub_100377B78();
LABEL_12:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100377A50(uint64_t a1)
{
  return sub_100377A68(a1, (void (*)(void))sub_1002E2C20);
}

uint64_t sub_100377A68(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v6 = *v4;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a1)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a1);
  }
  swift_isUniquelyReferenced_nonNull_native();
  sub_1003784EC();
  if (!v13)
  {
    a2();
    uint64_t v12 = v16;
  }
  uint64_t v14 = *(void *)(*(void *)(v12 + 48) + 8 * v9);
  sub_10037806C(v9);
  *uint64_t v4 = v16;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100377B78()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  sub_1002E09BC(v3, v2, v4, v5, v6, v7, v8, v9, v23, v24, v26);
  uint64_t v11 = v10;
  uint64_t v25 = v10;
  Swift::Int v12 = *(void *)(v10 + 40);
  swift_retain();
  Swift::Int v13 = NSObject._rawHashValue(seed:)(v12);
  uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    sub_1001F6204(0, (unint64_t *)&unk_100586E00);
    id v16 = *(id *)(*(void *)(v11 + 48) + 8 * v15);
    char v17 = static NSObject.== infix(_:_:)();

    if (v17)
    {
LABEL_6:
      swift_release();
      uint64_t v21 = *(void *)(*(void *)(v11 + 48) + 8 * v15);
      sub_100377ED4(v15);
      if (static NSObject.== infix(_:_:)())
      {
        void *v1 = v25;
        return v21;
      }
      __break(1u);
    }
    else
    {
      uint64_t v18 = ~v14;
      while (1)
      {
        unint64_t v15 = (v15 + 1) & v18;
        if (((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
          break;
        }
        id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v15);
        char v20 = static NSObject.== infix(_:_:)();

        if (v20) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100377D18(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            unint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            id v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *unint64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100377ED4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_15:
            uint64_t v16 = *(void *)(v3 + 48);
            BOOL v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            BOOL v19 = v2 != v6 || v17 >= v18 + 1;
            int64_t v2 = v6;
            if (v19)
            {
              *BOOL v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10037806C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        id v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            unint64_t v15 = (void *)(v10 + 8 * v2);
            BOOL v16 = v2 != v6 || v15 >= v11 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              *unint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1003781EC()
{
  sub_100375C34(*(void *)(v0 + 16));
}

uint64_t sub_1003781F4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037822C()
{
  type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 48) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  sub_100378684();
  v8();

  return _swift_deallocObject(v0, v6, v7);
}

void sub_1003782D4()
{
  type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);

  sub_100375150(v1, v2);
}

uint64_t sub_10037833C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C((uint64_t *)&unk_10058B608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003783A4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003783DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C((uint64_t *)&unk_10058B608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100378444()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100378484()
{
  return sub_100377358(*(void *)(v0 + 16));
}

uint64_t sub_10037848C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003784EC()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_100378500()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100378530()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_100378550()
{
  return v0;
}

uint64_t sub_10037856C()
{
  return 0;
}

uint64_t sub_100378588()
{
  return type metadata accessor for DispatchPredicate();
}

void sub_1003785D8()
{
  sub_100373388();
}

void sub_1003785F4()
{
  sub_1002E3EC4();
}

uint64_t sub_100378618()
{
  return v0;
}

void sub_100378628()
{
  sub_1002E3EC4();
}

uint64_t sub_10037864C()
{
  return v0;
}

uint64_t sub_100378660()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_100378678()
{
  return v0;
}

void sub_1003786A4()
{
  sub_10037492C();
}

uint64_t sub_1003786C4()
{
  return swift_endAccess();
}

uint64_t sub_1003786DC(uint64_t a1)
{
  *(void *)(v1 - 128) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1003786FC(uint64_t a1, unint64_t a2)
{
  return sub_1002344D8(a1, a2, (uint64_t *)(v2 - 112));
}

uint64_t sub_100378714(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_100378728()
{
  return v0;
}

void (**sub_100378734(unint64_t a1, void *a2))(char *, uint64_t)
{
  uint64_t v3 = v2;
  id v29 = a2;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v28 = a1 & 0xC000000000000001;
    v25[1] = v3;
    uint64_t v26 = v5 + 1;
    uint64_t v9 = 4;
    while (1)
    {
      uint64_t v3 = v9 - 4;
      if (v28)
      {
        uint64_t v5 = (void (**)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void (***)(char *, uint64_t))(a1 + 8 * v9);
        swift_unknownObjectRetain();
      }
      uint64_t v10 = v9 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      id v11 = [v5 SIMIdentifier];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      id v15 = [v29 account];
      if (v15)
      {
        BOOL v16 = v15;
        uint64_t v30 = v5;
        unint64_t v17 = a1;
        id v18 = [v15 UUID];

        static UUID._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = UUID.uuidString.getter();
        uint64_t v21 = v20;
        (*v26)(v7, v27);
        if (v12 == v19 && v14 == v21)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          return v30;
        }
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23)
        {

          goto LABEL_20;
        }
        swift_unknownObjectRelease();
        a1 = v17;
      }
      else
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v9;
      if (v10 == v8) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:

  swift_bridgeObjectRelease();
  return 0;
}

id sub_100378A04()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = objc_msgSend(self, "tu_defaults");
  id v3 = [v2 silenceUnknownCallersEnabled];

  id v4 = sub_100008DCC();
  sub_1001F081C(&qword_100584B20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10048FB00;
  *(void *)(v5 + 56) = ObjectType;
  *(void *)(v5 + 64) = sub_100379164();
  *(void *)(v5 + 32) = v0;
  *(void *)(v5 + 96) = &type metadata for Bool;
  *(void *)(v5 + 104) = &protocol witness table for Bool;
  *(unsigned char *)(v5 + 72) = (_BYTE)v3;
  id v6 = v0;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100378B14(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  if ([a1 verificationStatus] == (id)1)
  {
    id v4 = sub_100008DCC();
    sub_1001F081C(&qword_100584B20);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_10048FB00;
    *(void *)(v5 + 56) = ObjectType;
    *(void *)(v5 + 64) = sub_100379164();
    *(void *)(v5 + 32) = v1;
    *(void *)(v5 + 96) = sub_1001F6204(0, &qword_10058B660);
    *(void *)(v5 + 104) = sub_1002F4D04();
    *(void *)(v5 + 72) = a1;
    id v6 = v1;
    id v7 = a1;
    static os_log_type_t.default.getter();
  }
  else
  {
    char v8 = sub_100378DD4(a1);
    id v4 = sub_100008DCC();
    sub_1001F081C(&qword_100584B20);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10048FB00;
    *(void *)(v9 + 56) = ObjectType;
    *(void *)(v9 + 64) = sub_100379164();
    *(void *)(v9 + 32) = v1;
    *(void *)(v9 + 96) = sub_1001F6204(0, &qword_10058B660);
    *(void *)(v9 + 104) = sub_1002F4D04();
    *(void *)(v9 + 72) = a1;
    id v10 = v1;
    id v11 = a1;
    static os_log_type_t.default.getter();
    if (v8)
    {
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      [v11 setFilteredOutReason:2];
      uint64_t v12 = 1;
      goto LABEL_6;
    }
  }
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v12 = 0;
LABEL_6:
  id v13 = [a1 silencingUserInfo];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  id v17 = [objc_allocWithZone((Class)NSNumber) initWithBool:v12];
  swift_bridgeObjectRetain();
  objc_msgSend(v13, "__swift_setObject:forKeyedSubscript:", v17, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(), v14, v16);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  if (v12) {
    unsigned __int8 v18 = sub_100378A04();
  }
  else {
    unsigned __int8 v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_100378DD4(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 remoteHandle];
  if (!v4) {
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  id v6 = [a1 account];
  if (!v6 || (id v7 = v6, v8 = [v6 handle], v7, !v8))
  {

LABEL_7:
    char v9 = 0;
    return v9 & 1;
  }
  sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
  if (static NSObject.== infix(_:_:)())
  {

    char v9 = 1;
    return v9 & 1;
  }
  id v11 = [*(id *)(v2 + OBJC_IVAR___CSDOwnNumberCallFilter_idsCTAdapter) currentSIMsWithError:0];
  sub_1001F081C(&qword_10058B668);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = sub_100378734(v12, a1);
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v14 = [v13 phoneNumber];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  id v18 = [v5 value];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (!v17)
  {
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  if (v15 == v19 && v17 == v21) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return v9 & 1;
}

id sub_100379060(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR___CSDOwnNumberCallFilter_idsCTAdapter;
  uint64_t v5 = self;
  id v6 = v1;
  *(void *)&v1[v4] = [v5 sharedInstance];

  v9.receiver = v6;
  v9.super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, "initWithQueue:", a1);

  return v7;
}

uint64_t type metadata accessor for OwnNumberCallFilter()
{
  return self;
}

unint64_t sub_100379164()
{
  unint64_t result = qword_10058B658;
  if (!qword_10058B658)
  {
    type metadata accessor for OwnNumberCallFilter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B658);
  }
  return result;
}

id sub_1003791B0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1001F081C((uint64_t *)&unk_100587920);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithKeysToFetch:isa];

  return v2;
}

void sub_10037922C(uint64_t a1)
{
  v9[6] = _swiftEmptyArrayStorage;
  sub_1002E4D1C(v9, a1);
  uint64_t v1 = v9[1];
  int64_t v2 = v9[3];
  uint64_t v3 = v9[4];
  int64_t v4 = (unint64_t)(v9[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  v3 &= v3 - 1;
  while (1)
  {
    swift_bridgeObjectRetain();
    sub_1002D2688();
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v5 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      break;
    }
    if (v5 >= v4) {
      goto LABEL_21;
    }
    uint64_t v6 = *(void *)(v1 + 8 * v5);
    int64_t v7 = v2 + 1;
    if (!v6)
    {
      int64_t v7 = v2 + 2;
      if (v2 + 2 >= v4) {
        goto LABEL_21;
      }
      uint64_t v6 = *(void *)(v1 + 8 * v7);
      if (!v6)
      {
        int64_t v7 = v2 + 3;
        if (v2 + 3 >= v4) {
          goto LABEL_21;
        }
        uint64_t v6 = *(void *)(v1 + 8 * v7);
        if (!v6)
        {
          int64_t v7 = v2 + 4;
          if (v2 + 4 >= v4) {
            goto LABEL_21;
          }
          uint64_t v6 = *(void *)(v1 + 8 * v7);
          if (!v6)
          {
            int64_t v7 = v2 + 5;
            if (v2 + 5 >= v4) {
              goto LABEL_21;
            }
            uint64_t v6 = *(void *)(v1 + 8 * v7);
            if (!v6)
            {
              int64_t v8 = v2 + 6;
              while (v8 < v4)
              {
                uint64_t v6 = *(void *)(v1 + 8 * v8++);
                if (v6)
                {
                  int64_t v7 = v8 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    uint64_t v3 = (v6 - 1) & v6;
    int64_t v2 = v7;
  }
  __break(1u);
}

id sub_100379388(void *a1)
{
  id v2 = [self storeWithOptions:3];
  id v3 = [self sharedInstance];
  sub_1001F6204(0, &qword_10058B6C8);
  id v4 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v5 = [v4 applicationBundleIdentifiers];

  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1001F6204(0, (unint64_t *)&unk_100588760);
  id v7 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  id v8 = [v7 incomingCommunicationLimit];

  objc_super v9 = (char *)objc_allocWithZone((Class)type metadata accessor for ClarityUICallFilter());
  id v10 = sub_10037A2DC(a1, (uint64_t)v2, (uint64_t)v3, v6, (uint64_t)v8, v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_10037952C(void *a1, id a2)
{
  if (([a2 isTelephonyProvider] & 1) == 0
    && ![a2 isFaceTimeProvider])
  {
    if (qword_1005839A0 == -1) {
      goto LABEL_33;
    }
    goto LABEL_40;
  }
  id v5 = *(void **)&v2[OBJC_IVAR___CSDClarityUICallFilter_applications];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v8 = sub_10039E4D0(v6, v7, v5);
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  id v9 = (id)TUPreferredFaceTimeBundleIdentifier();
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  LOBYTE(v9) = sub_10039E4D0(v10, v12, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_5:
    id v13 = *(void **)&v2[OBJC_IVAR___CSDClarityUICallFilter_incomingCommunicationLimit];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
    if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
    {
      id v35 = v13;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v20 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v23 = v22;
        if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
          {
            uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v29 = v28;
            if (v27 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v29 == v30)
            {

              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v32 & 1) == 0)
              {
                if (qword_1005839A0 != -1) {
                  swift_once();
                }
                static os_log_type_t.error.getter();
                sub_1001F081C(&qword_100584B20);
                uint64_t v33 = sub_1001FCCB8();
                *(_OWORD *)(v33 + 16) = xmmword_10048F550;
                *(void *)(v33 + 56) = type metadata accessor for ClarityUICallFilter();
                *(void *)(v33 + 64) = sub_10037A290();
                *(void *)(v33 + 32) = v2;
                uint64_t v34 = v2;
                os_log(_:dso:log:type:_:)();
                goto LABEL_34;
              }
            }
            id v47 = [a1 remoteHandle];
            id v48 = [v47 tuHandle];

            char v38 = sub_100379ED8((uint64_t)v48);
            if (qword_1005839A0 == -1) {
              goto LABEL_25;
            }
            goto LABEL_39;
          }
        }

        if (qword_1005839A0 == -1)
        {
LABEL_33:
          sub_1001F081C(&qword_100584B20);
          uint64_t v44 = sub_1001FCCB8();
          *(_OWORD *)(v44 + 16) = xmmword_10048F550;
          *(void *)(v44 + 56) = type metadata accessor for ClarityUICallFilter();
          *(void *)(v44 + 64) = sub_10037A290();
          *(void *)(v44 + 32) = v2;
          os_log_type_t v45 = v2;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
LABEL_34:
          swift_bridgeObjectRelease();
          char v41 = 0;
          return v41 & 1;
        }
LABEL_40:
        swift_once();
        goto LABEL_33;
      }
    }

    id v36 = [a1 remoteHandle];
    id v37 = [v36 tuHandle];

    char v38 = sub_100379C7C((BOOL)v37);
    if (qword_1005839A0 == -1)
    {
LABEL_25:
      sub_1001F081C(&qword_100584B20);
      uint64_t v39 = sub_1001FCCE4();
      *(_OWORD *)(v39 + 16) = xmmword_10048FB00;
      *(void *)(v39 + 56) = type metadata accessor for ClarityUICallFilter();
      *(void *)(v39 + 64) = sub_10037A290();
      *(void *)(v39 + 32) = v2;
      *(void *)(v39 + 96) = &type metadata for Bool;
      *(void *)(v39 + 104) = &protocol witness table for Bool;
      *(unsigned char *)(v39 + 72) = v38 & 1;
      uint64_t v40 = v2;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      char v41 = v38 ^ 1;
      return v41 & 1;
    }
LABEL_39:
    swift_once();
    goto LABEL_25;
  }
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v42 = sub_1001FCCB8();
  *(_OWORD *)(v42 + 16) = xmmword_10048F550;
  *(void *)(v42 + 56) = type metadata accessor for ClarityUICallFilter();
  *(void *)(v42 + 64) = sub_10037A290();
  *(void *)(v42 + 32) = v2;
  uint64_t v43 = v2;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  char v41 = 1;
  return v41 & 1;
}

BOOL sub_100379C7C(BOOL result)
{
  if (result)
  {
    id v2 = (void *)result;
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR___CSDClarityUICallFilter_contactStore + 24);
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR___CSDClarityUICallFilter_contactStore + 32);
    sub_100204074((void *)(v1 + OBJC_IVAR___CSDClarityUICallFilter_contactStore), v3);
    id v5 = v2;
    id v6 = [v5 value];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v7, v9, v3, v4);
    swift_bridgeObjectRelease();
    id v11 = [v5 value];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    unint64_t v15 = sub_100223128(v12, v14, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
      }
      return v16 > 0;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_100379ED8(uint64_t result)
{
  if (result)
  {
    id v2 = v1;
    uint64_t v3 = (void *)result;
    sub_1001F6204(0, (unint64_t *)&qword_100584D10);
    id v4 = v3;
    id v5 = sub_1003791B0();
    uint64_t v6 = *(void *)((char *)v1 + OBJC_IVAR___CSDClarityUICallFilter_contactStore + 24);
    uint64_t v7 = *(void *)((char *)v1 + OBJC_IVAR___CSDClarityUICallFilter_contactStore + 32);
    sub_100204074((void *)((char *)v2 + OBJC_IVAR___CSDClarityUICallFilter_contactStore), *(void *)((char *)v2 + OBJC_IVAR___CSDClarityUICallFilter_contactStore + 24));
    id v8 = [v4 value];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, v11, v6, v7);
    swift_bridgeObjectRelease();
    sub_10037922C(v12);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v22 = v5;
    if (v14 >> 62) {
      goto LABEL_15;
    }
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v15)
    {
      id v2 = (void *)((char *)v2 + OBJC_IVAR___CSDClarityUICallFilter_favorites);
      uint64_t v16 = 4;
      while (1)
      {
        id v17 = (v14 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v14 + 8 * v16);
        id v18 = v17;
        uint64_t v19 = v16 - 3;
        if (__OFADD__(v16 - 4, 1)) {
          break;
        }
        uint64_t v20 = v2[3];
        uint64_t v21 = v2[4];
        sub_100204074(v2, v20);
        LOBYTE(v20) = sub_1003097CC((uint64_t)v18, v20, v21);

        if (v20)
        {

          swift_bridgeObjectRelease();
          return 1;
        }
        ++v16;
        if (v19 == v15) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_11:

    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

id sub_10037A1CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClarityUICallFilter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClarityUICallFilter()
{
  return self;
}

unint64_t sub_10037A290()
{
  unint64_t result = qword_10058B6B8;
  if (!qword_10058B6B8)
  {
    type metadata accessor for ClarityUICallFilter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B6B8);
  }
  return result;
}

id sub_10037A2DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  v16[3] = sub_1001F6204(0, &qword_1005889D0);
  v16[4] = &off_10050C680;
  v16[0] = a2;
  v15[3] = sub_1001F6204(0, (unint64_t *)&unk_10058B6D0);
  v15[4] = &off_1005141D0;
  v15[0] = a3;
  sub_10020ED28((uint64_t)v16, (uint64_t)&a6[OBJC_IVAR___CSDClarityUICallFilter_contactStore]);
  sub_10020ED28((uint64_t)v15, (uint64_t)&a6[OBJC_IVAR___CSDClarityUICallFilter_favorites]);
  *(void *)&a6[OBJC_IVAR___CSDClarityUICallFilter_applications] = a4;
  *(void *)&a6[OBJC_IVAR___CSDClarityUICallFilter_incomingCommunicationLimit] = a5;
  v14.receiver = a6;
  v14.super_class = (Class)type metadata accessor for ClarityUICallFilter();
  id v12 = objc_msgSendSuper2(&v14, "initWithQueue:", a1);

  sub_1002018DC((uint64_t)v15);
  sub_1002018DC((uint64_t)v16);
  return v12;
}

ValueMetadata *type metadata accessor for DiscoveryModeDescriptor()
{
  return &type metadata for DiscoveryModeDescriptor;
}

unint64_t sub_10037A400()
{
  return 0xD000000000000019;
}

unint64_t sub_10037A41C()
{
  return 0xD000000000000019;
}

uint64_t sub_10037A43C()
{
  sub_10021E23C(v0 + OBJC_IVAR____TtC13callservicesd13SoundProvider_activeDescriptor, &qword_100584C78);

  return swift_deallocClassInstance();
}

uint64_t sub_10037A4B8()
{
  return type metadata accessor for SoundProvider();
}

uint64_t type metadata accessor for SoundProvider()
{
  uint64_t result = qword_10058B710;
  if (!qword_10058B710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10037A508()
{
  sub_10037A5A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10037A5A4()
{
  if (!qword_10058B720)
  {
    type metadata accessor for SoundDescriptor();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10058B720);
    }
  }
}

uint64_t sub_10037A5FC()
{
  uint64_t v1 = type metadata accessor for SoundDescriptor();
  sub_10037AEF4(v1);
  uint64_t v2 = OBJC_IVAR____TtC13callservicesd13SoundProvider_player;
  *(void *)(v0 + v2) = [objc_allocWithZone((Class)TUCallSoundPlayer) init];
  return v0;
}

void sub_10037A658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v5 = type metadata accessor for SoundDescriptor();
  __chkstk_darwin(v5);
  sub_1001F2514();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1001F081C(&qword_10058B7C8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  sub_1001F2514();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_1001F081C(&qword_100584C78);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  id v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v42 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v42 - v21;
  sub_1002EA110(a1, (uint64_t)&v42 - v21);
  sub_1001F0530((uint64_t)v22, 0, 1, v5);
  uint64_t v23 = v3 + OBJC_IVAR____TtC13callservicesd13SoundProvider_activeDescriptor;
  swift_beginAccess();
  uint64_t v24 = v13 + *(int *)(v10 + 56);
  sub_10037ABC0((uint64_t)v22, v13);
  sub_10037ABC0(v23, v24);
  sub_10037AED4(v13);
  if (v25)
  {
    sub_10021E23C((uint64_t)v22, &qword_100584C78);
    sub_10037AED4(v24);
    if (v25)
    {
      sub_10021E23C(v13, &qword_100584C78);
LABEL_14:
      id v31 = sub_100008DCC();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      return;
    }
    goto LABEL_9;
  }
  sub_10037ABC0(v13, (uint64_t)v20);
  sub_10037AED4(v24);
  if (v25)
  {
    sub_10021E23C((uint64_t)v22, &qword_100584C78);
    sub_1002EA174((uint64_t)v20);
LABEL_9:
    uint64_t v42 = v17;
    sub_10021E23C(v13, &qword_10058B7C8);
    goto LABEL_10;
  }
  uint64_t v42 = v17;
  sub_10028C2CC(v24, v8);
  char v30 = sub_1002E9700((uint64_t)v20, v8);
  sub_1002EA174(v8);
  sub_10021E23C((uint64_t)v22, &qword_100584C78);
  sub_1002EA174((uint64_t)v20);
  sub_10021E23C(v13, &qword_100584C78);
  if (v30) {
    goto LABEL_14;
  }
LABEL_10:
  sub_10037AC28();
  id v26 = [objc_allocWithZone((Class)TUCallSoundPlayerDescriptor) initWithSoundType:*(void *)a1 provider:*(void *)(a1 + 8) video:*(unsigned __int8 *)(a1 + 16) region:*(void *)(a1 + 24) audioPlayingWarmupNeeded:*(unsigned __int8 *)(a1 + *(int *)(v5 + 36))];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC13callservicesd13SoundProvider_player);
    if (v44)
    {
      aBlock[4] = v44;
      aBlock[5] = v43;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      id aBlock[2] = sub_100209DA8;
      id aBlock[3] = &unk_100517090;
      uint64_t v29 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v37 = (uint64_t)v42;
    unsigned int v38 = [v28 attemptToPlayDescriptor:v27 completion:v29];
    _Block_release(v29);
    if (v38)
    {

      sub_1002EA110(a1, v37);
      sub_1001F0530(v37, 0, 1, v5);
      swift_beginAccess();
      sub_10037AE54(v37, v23);
      swift_endAccess();
    }
    else
    {
      id v39 = sub_100008DCC();
      sub_1001F081C(&qword_100584B20);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_10048F550;
      *(void *)(v40 + 56) = sub_10037ADC4();
      *(void *)(v40 + 64) = sub_10037AE04();
      *(void *)(v40 + 32) = v27;
      id v41 = v27;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v32 = sub_100008DCC();
    sub_1001F081C(&qword_100584B20);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10048F550;
    sub_1002EA110(a1, v8);
    uint64_t v34 = String.init<A>(reflecting:)();
    uint64_t v36 = v35;
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_1001F3B08();
    *(void *)(v33 + 32) = v34;
    *(void *)(v33 + 40) = v36;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10037ABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100584C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037AC28()
{
  uint64_t v1 = sub_1001F081C(&qword_100584C78);
  __chkstk_darwin(v1 - 8);
  sub_1001F2514();
  uint64_t v4 = v3 - v2;
  id v5 = sub_100008DCC();
  sub_1001F081C(&qword_100584B20);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10048F550;
  uint64_t v7 = v0 + OBJC_IVAR____TtC13callservicesd13SoundProvider_activeDescriptor;
  swift_beginAccess();
  sub_10037ABC0(v7, v4);
  uint64_t v8 = sub_1001FCD2C(v4);
  uint64_t v10 = v9;
  sub_10021E23C(v4, &qword_100584C78);
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_1001F3B08();
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  [*(id *)(v0 + OBJC_IVAR____TtC13callservicesd13SoundProvider_player) stopPlaying];
  uint64_t v11 = type metadata accessor for SoundDescriptor();
  sub_10037AEF4(v11);
  swift_beginAccess();
  sub_10037AE54(v4, v7);
  return swift_endAccess();
}

unint64_t sub_10037ADC4()
{
  unint64_t result = qword_10058B7D0;
  if (!qword_10058B7D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10058B7D0);
  }
  return result;
}

unint64_t sub_10037AE04()
{
  unint64_t result = qword_10058B7D8;
  if (!qword_10058B7D8)
  {
    sub_10037ADC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B7D8);
  }
  return result;
}

uint64_t sub_10037AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100584C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037AEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10037AECC()
{
  return swift_release();
}

uint64_t sub_10037AED4(uint64_t a1)
{
  return sub_1001F758C(a1, 1, v1);
}

uint64_t sub_10037AEF4(uint64_t a1)
{
  return sub_1001F0530(v1, 1, 1, a1);
}

uint64_t sub_10037AF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  id v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10037AF80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10037AFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10037B048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10037B0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10037B110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10037B174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10037B188);
}

uint64_t sub_10037B188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();

  return sub_1001F758C(a1, a2, v4);
}

uint64_t sub_10037B1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037B1E4);
}

uint64_t sub_10037B1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();

  return sub_1001F0530(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AudioInterruptionDeferredEndDescriptor()
{
  uint64_t result = qword_10058B838;
  if (!qword_10058B838) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10037B278()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10037B30C()
{
  type metadata accessor for UUID();
  sub_10037B3F0();
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = 0x444955556C6C6163;
  v2._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000027;
}

unint64_t sub_10037B3F0()
{
  unint64_t result = qword_10058B060;
  if (!qword_10058B060)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058B060);
  }
  return result;
}

uint64_t sub_10037B440()
{
  type metadata accessor for ConversationLinkDescriptorManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10037C8A4();
  qword_100594DA0 = v0;
  return result;
}

id sub_10037B47C()
{
  Swift::String v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)TUConversationLinkDescriptorXPCClientDataSource) init];
    uint64_t v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v2 = v3;

    Swift::String v1 = 0;
  }
  id v5 = v1;
  return v2;
}

#error "10037B68C: call analysis failed (funcsize=215)"

uint64_t sub_10037B880()
{
  Lock.withLock<A>(_:)();
  return v1;
}

uint64_t sub_10037B8E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10037B930(a1);
  uint64_t v4 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_10037B9C0(result + 1);
    *a2 = v4;
  }
  return result;
}

#error "10037B978: call analysis failed (funcsize=31)"

#error "10037B9EC: call analysis failed (funcsize=27)"

void sub_10037BA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_1002E757C();
  a23 = v24;
  a24 = v25;
  unint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  id v32 = sub_10037B47C();
  NSString v33 = String._bridgeToObjectiveC()();
  a11 = 0;
  LODWORD(v31) = [v32 setInteger:v31 forKey:v33 error:&a11];

  if (v31)
  {
    id v34 = a11;
  }
  else
  {
    id v35 = a11;
    uint64_t v36 = (_DWORD *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A08 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_1001F5F88(v37, (uint64_t)qword_100594C10);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    unsigned int v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      sub_100235B88();
      uint64_t v40 = (void *)sub_10037C974();
      a11 = (id)sub_100202470();
      *uint64_t v36 = 136315394;
      swift_bridgeObjectRetain();
      sub_1002344D8(v29, v27, (uint64_t *)&a11);
      sub_10037C904();
      swift_bridgeObjectRelease_n();
      sub_10037C990();
      _swift_stdlib_bridgeErrorToNSError();
      sub_10037C930();
      *uint64_t v40 = v36 + 1;
      swift_errorRelease();
      swift_errorRelease();
      sub_10037C9C4((void *)&_mh_execute_header, v41, v42, "ConversationLinkSync: Failed to store int on ConversationLinkDescriptorManager %s %@");
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_10037C958();
      sub_1001F63CC();
      sub_1001F63CC();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  sub_100254544();
}

void sub_10037BCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_1002E757C();
  a23 = v24;
  a24 = v25;
  unint64_t v27 = v26;
  uint64_t v29 = v28;
  id v30 = sub_10037B47C();
  NSString v31 = String._bridgeToObjectiveC()();
  NSString v32 = String._bridgeToObjectiveC()();
  a11 = 0;
  unsigned int v33 = [v30 setString:v31 forKey:v32 error:&a11];

  if (v33)
  {
    id v34 = a11;
  }
  else
  {
    id v35 = a11;
    uint64_t v36 = (_DWORD *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A08 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_1001F5F88(v37, (uint64_t)qword_100594C10);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    unsigned int v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      sub_100235B88();
      uint64_t v40 = (void *)sub_10037C974();
      a11 = (id)sub_100202470();
      *uint64_t v36 = 136315394;
      swift_bridgeObjectRetain();
      sub_1002344D8(v29, v27, (uint64_t *)&a11);
      sub_10037C904();
      swift_bridgeObjectRelease_n();
      sub_10037C990();
      _swift_stdlib_bridgeErrorToNSError();
      sub_10037C930();
      *uint64_t v40 = v36 + 1;
      swift_errorRelease();
      swift_errorRelease();
      sub_10037C9C4((void *)&_mh_execute_header, v41, v42, "ConversationLinkSync: Failed to store string on ConversationLinkDescriptorManager %s %@");
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_10037C958();
      sub_1001F63CC();
      sub_1001F63CC();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  sub_100254544();
}

void sub_10037BF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, id a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_1002E757C();
  a23 = v24;
  a24 = v25;
  unint64_t v27 = v26;
  uint64_t v29 = v28;
  id v30 = sub_10037B47C();
  NSString v31 = String._bridgeToObjectiveC()();
  a11 = 0;
  id v32 = [v30 stringForKey:v31 error:&a11];

  id v33 = a11;
  if (v32)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10037C9E4();
    id v34 = v33;
  }
  else
  {
    id v35 = a11;
    uint64_t v36 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A08 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_1001F5F88(v37, (uint64_t)qword_100594C10);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    unsigned int v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      sub_100235B88();
      uint64_t v40 = (void *)sub_10037C974();
      a11 = (id)sub_100202470();
      *(_DWORD *)uint64_t v36 = 136315394;
      swift_bridgeObjectRetain();
      sub_1002344D8(v29, v27, (uint64_t *)&a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2112;
      swift_errorRetain();
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v40 = v41;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "ConversationLinkSync: Failed to read string in ConversationLinkDescriptorManager %s %@", (uint8_t *)v36, 0x16u);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  sub_100254544();
}

id sub_10037C1FC(uint64_t a1, unint64_t a2)
{
  id v4 = sub_10037B47C();
  NSString v5 = String._bridgeToObjectiveC()();
  v17[0] = 0;
  id v6 = [v4 integerForKey:v5 error:v17];

  id v19 = v17[0];
  if (v17[0])
  {
    uint64_t v7 = qword_100583A08;
    id v8 = v17[0];
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1001F5F88(v9, (uint64_t)qword_100594C10);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = sub_100235B88();
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v18 = sub_100202470();
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      v17[0] = (id)sub_1002344D8(a1, a2, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2112;
      swift_beginAccess();
      id v14 = v19;
      if (v19) {
        id v15 = v19;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ConversationLinkSync: Failed to read int in ConversationLinkDescriptorManager %s %@", (uint8_t *)v12, 0x16u);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  else if (v6 == (id)NSNotFound.getter())
  {
    return 0;
  }
  else
  {
    return v6;
  }
}

uint64_t sub_10037C4C8()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (!v2) {
    return 0;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1001F75B4(v4, v5);
  sub_1001F75B4(v5, v4);
  if (swift_dynamicCast()) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_10037C5C8()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (!v2) {
    return 0;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1001F75B4(v4, v5);
  sub_1001F75B4(v5, v4);
  if (swift_dynamicCast()) {
    return v6;
  }
  else {
    return 0;
  }
}

void sub_10037C6CC(uint64_t a1, char a2)
{
  id v3 = [self standardUserDefaults];
  if (a2) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  }
  NSString v5 = String._bridgeToObjectiveC()();
  [v3 setObject:v4 forKey:v5];

  swift_unknownObjectRelease();
}

void sub_10037C790()
{
  id v0 = [self standardUserDefaults];
  id v1 = String._bridgeToObjectiveC()();
  [v0 removeObjectForKey:v1];
}

uint64_t sub_10037C824()
{
  swift_release();

  return v0;
}

uint64_t sub_10037C84C()
{
  sub_10037C824();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationLinkDescriptorManager()
{
  return self;
}

uint64_t sub_10037C8A4()
{
  type metadata accessor for Lock();
  swift_allocObject();
  *(void *)(v0 + 16) = Lock.init()();
  *(void *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_10037C8E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10037B8E0(v1, a1);
}

uint64_t sub_10037C904()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10037C930()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10037C958()
{
  return swift_arrayDestroy();
}

uint64_t sub_10037C974()
{
  return swift_slowAlloc();
}

uint64_t sub_10037C990()
{
  *(_WORD *)(v0 + 12) = 2112;
  return swift_errorRetain();
}

uint64_t sub_10037C9B0()
{
  return v0;
}

void sub_10037C9C4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10037C9F0()
{
  sub_1001F640C();
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 112) = v0;
  *(unsigned char *)(v1 + 229) = v3;
  *(unsigned char *)(v1 + 228) = v4;
  *(void *)(v1 + 88) = v5;
  *(void *)(v1 + 96) = v6;
  *(void *)(v1 + 80) = v7;
  uint64_t v8 = type metadata accessor for URL.DirectoryHint();
  *(void *)(v1 + 120) = v8;
  sub_1002462DC(v8);
  *(void *)(v1 + 128) = v9;
  *(void *)(v1 + 136) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  *(void *)(v1 + 144) = v10;
  sub_1002462DC(v10);
  *(void *)(v1 + 152) = v11;
  *(void *)(v1 + 160) = swift_task_alloc();
  *(void *)(v1 + 168) = swift_task_alloc();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 176) = v12;
  *uint64_t v12 = v1;
  v12[1] = sub_10037CB0C;
  return sub_1001F3B54();
}

uint64_t sub_10037CB0C()
{
  sub_10038FA50();
  sub_1001F63B4();
  uint64_t v3 = v2;
  sub_1001F6424();
  *char v4 = v3;
  *char v4 = *v1;
  *(void *)(v3 + 184) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = sub_10038F974();
    return v7(v6);
  }
  else
  {
    sub_1001F6430();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_10037CC34()
{
  sub_1001F4A24(*(void **)(v0 + 184));
  uint64_t v1 = dispatch thunk of SynthesisVoice.name.getter();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1001F314C();
  if (v3)
  {
    if (v5)
    {
      if (v1 == v4 && v3 == v5)
      {
        swift_bridgeObjectRelease();
        char v7 = 1;
      }
      else
      {
        sub_10038FA44();
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v7 = 0;
    }
    goto LABEL_12;
  }
  if (v5)
  {
    char v7 = 0;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v7 = 1;
LABEL_13:
  unsigned int v8 = sub_1001F3434() ^ 1;
  if (v7) {
    char v9 = v8 | *(unsigned char *)(v0 + 228) | *(unsigned char *)(v0 + 229);
  }
  else {
    char v9 = 1;
  }
  strcpy((char *)(v0 + 16), "Greeting.caf");
  *(unsigned char *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  sub_100235D68();
  v10();
  sub_10030A394();
  URL.appending<A>(path:directoryHint:)();
  sub_10038F950();
  v11();
  swift_bridgeObjectRelease();
  id v12 = sub_1001B1B60();
  *(void *)(v0 + 192) = sub_1001F081C(&qword_100584B20);
  if (v9)
  {
    char v51 = *(unsigned char *)(v0 + 229);
    char v13 = *(unsigned char *)(v0 + 228);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10048FAF0;
    *(unsigned char *)(v0 + 224) = v8 & 1;
    uint64_t v15 = String.init<A>(reflecting:)();
    uint64_t v17 = v16;
    *(void *)(v14 + 56) = &type metadata for String;
    unint64_t v18 = sub_1001F3B08();
    *(void *)(v0 + 200) = v18;
    *(void *)(v14 + 64) = v18;
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
    *(unsigned char *)(v0 + 227) = (v7 & 1) == 0;
    uint64_t v19 = String.init<A>(reflecting:)();
    *(void *)(v14 + 96) = &type metadata for String;
    *(void *)(v14 + 104) = v18;
    *(void *)(v14 + 72) = v19;
    *(void *)(v14 + 80) = v20;
    *(unsigned char *)(v0 + 225) = v13;
    uint64_t v21 = String.init<A>(reflecting:)();
    *(void *)(v14 + 136) = &type metadata for String;
    *(void *)(v14 + 144) = v18;
    *(void *)(v14 + 112) = v21;
    *(void *)(v14 + 120) = v22;
    *(unsigned char *)(v0 + 226) = v51;
    uint64_t v23 = String.init<A>(reflecting:)();
    *(void *)(v14 + 176) = &type metadata for String;
    *(void *)(v14 + 184) = v18;
    *(void *)(v14 + 152) = v23;
    *(void *)(v14 + 160) = v24;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10037D0F8;
    uint64_t v26 = *(void *)(v0 + 168);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v28 = *(void *)(v0 + 88);
    return sub_1001F3604(v26, v27, v28);
  }
  else
  {
    id v30 = *(void **)(v0 + 184);
    uint64_t v31 = *(void *)(v0 + 152);
    uint64_t v32 = *(void *)(v0 + 160);
    uint64_t v33 = *(void *)(v0 + 144);
    uint64_t v34 = *(void *)(v0 + 104);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1004904F0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v32, v34, v33);
    uint64_t v36 = String.init<A>(reflecting:)();
    uint64_t v38 = v37;
    *(void *)(v35 + 56) = &type metadata for String;
    unint64_t v39 = sub_1001F3B08();
    *(void *)(v35 + 64) = v39;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v38;
    *(void *)(v0 + 64) = v30;
    type metadata accessor for SynthesisVoice();
    id v40 = v30;
    sub_10038F9EC();
    uint64_t v41 = String.init<A>(reflecting:)();
    *(void *)(v35 + 96) = &type metadata for String;
    *(void *)(v35 + 104) = v39;
    *(void *)(v35 + 72) = v41;
    *(void *)(v35 + 80) = v42;
    uint64_t v43 = sub_1001F314C();
    if (v44)
    {
      *(void *)(v0 + 48) = v43;
      *(void *)(v0 + 56) = v44;
      uint64_t v45 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v46 = 0xE300000000000000;
      uint64_t v45 = 7104878;
    }
    id v47 = *(void **)(v0 + 184);
    *(void *)(v35 + 136) = &type metadata for String;
    *(void *)(v35 + 144) = v39;
    *(void *)(v35 + 112) = v45;
    *(void *)(v35 + 120) = v46;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    sub_100235C60();
    v48();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v49 = sub_10038F974();
    return v50(v49);
  }
}

uint64_t sub_10037D0F8()
{
  sub_1001F640C();
  sub_1001F63B4();
  sub_1001F6424();
  void *v3 = v2;
  uint64_t v4 = *v1;
  sub_10023D230();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  sub_1001F6430();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10037D1D4()
{
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[13];
  uint64_t v32 = v0[27];
  id v7 = sub_1001B1B60();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10048FB00;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v9(v3, v2, v5);
  uint64_t v10 = String.init<A>(reflecting:)();
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = v1;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v11;
  v9(v3, v6, v5);
  uint64_t v12 = String.init<A>(reflecting:)();
  *(void *)(v8 + 96) = &type metadata for String;
  *(void *)(v8 + 104) = v1;
  *(void *)(v8 + 72) = v12;
  *(void *)(v8 + 80) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  sub_1001F34A0();
  if (v32)
  {
    uint64_t v14 = v0[25];
    uint64_t v15 = (void *)v0[23];
    id v16 = sub_1001B1B60();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10048F550;
    v0[9] = v32;
    swift_errorRetain();
    sub_1001F081C((uint64_t *)&unk_100585FE0);
    uint64_t v18 = String.init<A>(reflecting:)();
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = v14;
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v19;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_errorRelease();
  }
  else
  {
    uint64_t v20 = dispatch thunk of SynthesisVoice.name.getter();
    sub_1001F31F4(v20, v21);
    id v16 = sub_1001B1B60();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10048F550;
    uint64_t v23 = dispatch thunk of SynthesisVoice.name.getter();
    if (v24)
    {
      v0[4] = v23;
      v0[5] = v24;
      uint64_t v25 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v26 = 0xE300000000000000;
      uint64_t v25 = 7104878;
    }
    uint64_t v27 = v0[25];
    uint64_t v28 = (void *)v0[23];
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = v27;
    *(void *)(v22 + 32) = v25;
    *(void *)(v22 + 40) = v26;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  swift_bridgeObjectRelease();

  sub_100235C60();
  v29();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v30 = (uint64_t (*)(BOOL))v0[1];
  return v30(v32 == 0);
}

uint64_t sub_10037D500()
{
  sub_10038FA50();

  sub_10038F950();
  v1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = sub_10038F974();
  return v3(v2);
}

void sub_10037D59C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = a2;
  uint64_t v24 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_1001F6204(0, &qword_100588270);
    sub_1002CA948();
    Set.Iterator.init(_cocoa:)();
    unint64_t v6 = (unint64_t)v23[1];
    uint64_t v22 = v23[2];
    id v7 = v23[3];
    uint64_t v8 = (char *)v23[4];
    unint64_t v9 = (unint64_t)v23[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v22 = (void *)(a2 + 56);
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    id v7 = (void *)v11;
    uint64_t v8 = 0;
  }
  int64_t v21 = ((unint64_t)v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v9)
  {
    uint64_t v14 = (v9 - 1) & v9;
    unint64_t v15 = __clz(__rbit64(v9)) | ((void)v8 << 6);
    int64_t v16 = (int64_t)v8;
    goto LABEL_24;
  }
  int64_t v16 = (int64_t)(v8 + 1);
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v16 >= v21) {
    goto LABEL_35;
  }
  unint64_t v18 = v22[v16];
  if (!v18)
  {
    int64_t v19 = (int64_t)(v8 + 2);
    if ((uint64_t)(v8 + 2) < v21)
    {
      unint64_t v18 = v22[v19];
      if (v18) {
        goto LABEL_22;
      }
      int64_t v19 = (int64_t)(v8 + 3);
      if ((uint64_t)(v8 + 3) >= v21) {
        goto LABEL_35;
      }
      unint64_t v18 = v22[v19];
      if (v18)
      {
LABEL_22:
        int64_t v16 = v19;
        goto LABEL_23;
      }
      int64_t v19 = (int64_t)(v8 + 4);
      if ((uint64_t)(v8 + 4) < v21)
      {
        unint64_t v18 = v22[v19];
        if (!v18)
        {
          int64_t v16 = (int64_t)(v8 + 5);
          if ((uint64_t)(v8 + 5) >= v21) {
            goto LABEL_35;
          }
          unint64_t v18 = v22[v16];
          if (!v18)
          {
            uint64_t v20 = (uint64_t)(v8 + 6);
            while (v20 < v21)
            {
              unint64_t v18 = v22[v20++];
              if (v18)
              {
                int64_t v16 = v20 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_35;
          }
          goto LABEL_23;
        }
        goto LABEL_22;
      }
    }
LABEL_35:
    sub_100206FA0();

    return;
  }
LABEL_23:
  uint64_t v14 = (v18 - 1) & v18;
  unint64_t v15 = __clz(__rbit64(v18)) + (v16 << 6);
LABEL_24:
  id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v15);
  if (!v17) {
    goto LABEL_35;
  }
  while (1)
  {
    v23[0] = v17;
    sub_100382160((uint64_t)&v24, v23, (uint64_t)a3);
    if (v4) {
      break;
    }

    uint64_t v8 = (char *)v16;
    unint64_t v9 = v14;
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
LABEL_10:
    if (__CocoaSet.Iterator.next()())
    {
      sub_1001F6204(0, &qword_100588270);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v17 = v23[0];
      swift_unknownObjectRelease();
      int64_t v16 = (int64_t)v8;
      uint64_t v14 = v9;
      if (v17) {
        continue;
      }
    }
    goto LABEL_35;
  }

  swift_bridgeObjectRelease();
  sub_100206FA0();
}

uint64_t sub_10037D8C4(uint64_t a1, void *a2)
{
  sub_1002E4D1C(v18, a1);
  uint64_t v3 = v18[0];
  uint64_t v17 = v18[1];
  int64_t v4 = v18[3];
  unint64_t v5 = v18[4];
  int64_t v19 = (unint64_t)(v18[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v19) {
      goto LABEL_27;
    }
    unint64_t v10 = *(void *)(v17 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v19) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v17 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v19) {
          goto LABEL_27;
        }
        unint64_t v10 = *(void *)(v17 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v19) {
            goto LABEL_27;
          }
          unint64_t v10 = *(void *)(v17 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v19) {
              goto LABEL_27;
            }
            unint64_t v10 = *(void *)(v17 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v19)
              {
                unint64_t v10 = *(void *)(v17 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return 0;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
LABEL_20:
    uint64_t v13 = a2[1];
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v3 + 48) + 16 * v8);
      unint64_t v15 = (void *)(*(void *)(v3 + 56) + 16 * v8);
      BOOL v16 = *v15 == *a2 && v13 == v15[1];
      if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_release();
        return v14;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10037DAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  sub_10038FA2C(a1, 1, v5);
  if (v6)
  {
    sub_100235804(a1, &qword_100586A10);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_1001F7664();
    v7();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

id sub_10037DC08()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  id v4 = [v0 initWithURL:v2 options:0];

  type metadata accessor for URL();
  sub_10020233C();
  sub_1001F7664();
  v5();
  return v4;
}

uint64_t sub_10037DC9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3) {
    return sub_10037DD0C(v3, (uint64_t)a3);
  }
  sub_1001F6204(0, &qword_10058BB50);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  return sub_10037DD74(v3, v5);
}

uint64_t sub_10037DD0C(uint64_t a1, uint64_t a2)
{
  sub_1001F081C((uint64_t *)&unk_100585FE0);
  uint64_t v4 = swift_allocError();
  *uint64_t v5 = a2;

  return _swift_continuation_throwingResumeWithError(a1, v4);
}

uint64_t sub_10037DD74(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return _swift_continuation_throwingResume();
}

uint64_t sub_10037DD94(uint64_t a1, uint64_t a2)
{
  return sub_10037DDE0(a1, a2, &qword_10058BB98, (uint64_t (*)(uint64_t))&_swift_continuation_throwingResume);
}

uint64_t sub_10037DDB4(uint64_t a1)
{
  return j__swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_10037DDC0(uint64_t a1, uint64_t a2)
{
  return sub_10037DDE0(a1, a2, (uint64_t *)&unk_10058BBA0, (uint64_t (*)(uint64_t))&_swift_continuation_resume);
}

uint64_t sub_10037DDE0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = a2;
  sub_100273CB0((uint64_t)&v7, *(void *)(*(void *)(a1 + 64) + 40), a3);
  return a4(a1);
}

void sub_10037DE3C()
{
  sub_1001FCC38();
  uint64_t v3 = sub_1001F081C(&qword_1005878F0);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_10038F908();
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100235BE8();
  int64_t v9 = *(void **)&v1[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue];
  void *v2 = v9;
  sub_100235D68();
  v10();
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v2, v5);
  if (v9)
  {
    if (qword_100583A10 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1001F5F88(v12, (uint64_t)qword_100594C28);
  uint64_t v13 = v1;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  p_opt_class_meths = &OBJC_PROTOCOL___TUMomentsControllerDelegate.opt_class_meths;
  uint64_t v17 = &OBJC_PROTOCOL___TUMomentsControllerDelegate.opt_class_meths;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = sub_100202470();
    *(_DWORD *)uint64_t v18 = 67109890;
    uint64_t v19 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 8) = 1024;
    (*(uint64_t (**)(uint64_t))&v13[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_localeCheck])(v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 14) = 2080;
    sub_1002022F8();
    type metadata accessor for URL();
    swift_bridgeObjectRetain();
    uint64_t v20 = Dictionary.description.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_1002344D8(v20, v22, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 24) = 1024;

    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___TUMomentsControllerDelegate + 48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "afterFirstUnlock: %{BOOL}d isSupportedLocale: %{BOOL}d greetingsDict: %s hasSpeechAssets: %{BOOL}d", (uint8_t *)v18, 0x1Eu);
    swift_arrayDestroy();
    sub_1001F63CC();
    uint64_t v17 = (__objc2_meth_list **)(&OBJC_PROTOCOL___TUMomentsControllerDelegate + 48);
    sub_1001F63CC();
  }
  else
  {
  }
  if (*((unsigned char *)&p_opt_class_meths[320]->entrysize + (void)v13) == 1
    && ((*(uint64_t (**)(void))&v13[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_localeCheck])() & 1) != 0)
  {
    uint64_t v23 = (uint64_t *)((char *)v17[313] + (void)v13);
    uint64_t v24 = sub_100235AC8();
    sub_10038F86C(v24, v25, *v23);
    swift_endAccess();
    uint64_t v26 = type metadata accessor for URL();
    sub_1001F758C(v0, 1, v26);
    sub_100235804(v0, &qword_1005878F0);
  }
  sub_1001FCC08();
}

uint64_t sub_10037E258()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_1001F081C(&qword_1005878F0);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_100202310();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_afterFirstUnlock) != 1) {
    return 1;
  }
  if (((*(uint64_t (**)(void))(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_localeCheck))() & 1) == 0) {
    return 2;
  }
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict);
  uint64_t v6 = sub_100235AC8();
  sub_10038F86C(v6, v7, *v5);
  swift_endAccess();
  uint64_t v8 = type metadata accessor for URL();
  LODWORD(v5) = sub_1001F758C(v1, 1, v8);
  sub_100235804(v1, &qword_1005878F0);
  if (v5 == 1) {
    return 3;
  }
  if (*(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_speechAssetManager)
                + OBJC_IVAR___CSDSpeechAssetManager_hasSpeechAssets))
    return 0;
  return 4;
}

uint64_t sub_10037E38C()
{
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v2);
  sub_100202310();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue);
  void *v1 = v3;
  sub_100235D68();
  v4();
  id v5 = v3;
  LOBYTE(v3) = _dispatchPreconditionTest(_:)();
  sub_10024636C();
  uint64_t result = v6();
  if (v3)
  {
    uint64_t v8 = v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict;
    sub_1002022F8();
    return *(void *)(*(void *)v8 + 16) != 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10037E484()
{
  sub_1001FCC38();
  id v107 = v3;
  uint64_t v108 = v4;
  uint64_t v105 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v103 = v5;
  __chkstk_darwin(v6);
  uint64_t v98 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B8138();
  __chkstk_darwin(v8);
  sub_10026B914();
  uint64_t v100 = v9;
  uint64_t v10 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v11 = sub_100202384(v10);
  __chkstk_darwin(v11);
  sub_1001F2514();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v104 = v16;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  sub_10026B914();
  uint64_t v102 = v21;
  uint64_t v22 = sub_1001F081C(&qword_1005878F0);
  uint64_t v23 = sub_100202384(v22);
  __chkstk_darwin(v23);
  sub_1001F7650();
  uint64_t v99 = v24;
  sub_1002B8138();
  __chkstk_darwin(v25);
  id v101 = (char *)&v97 - v26;
  sub_1002B8138();
  uint64_t v28 = __chkstk_darwin(v27);
  id v30 = (char *)&v97 - v29;
  __chkstk_darwin(v28);
  sub_10038FA18();
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v31);
  sub_100235BE8();
  uint64_t v32 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue);
  void *v2 = v32;
  sub_100235D68();
  v33();
  id v34 = v32;
  LOBYTE(v32) = _dispatchPreconditionTest(_:)();
  sub_10026B7C0();
  v35();
  if (v32)
  {
    uint64_t v36 = (uint64_t *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict);
    uint64_t v37 = sub_100235AC8();
    sub_10038F86C(v37, v38, *v36);
    swift_endAccess();
    unint64_t v39 = (uint64_t *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_phoneNumberToAccountUUIDMap);
    sub_1002022F8();
    uint64_t v40 = *v39;
    uint64_t v41 = *(void *)(*v39 + 16);
    if (!v41)
    {
      uint64_t v60 = v1;
      uint64_t v61 = v108;
LABEL_28:
      sub_100273CB0(v60, v61, &qword_1005878F0);
      goto LABEL_29;
    }
    uint64_t v106 = v1;
    if (v41 == 1)
    {
      uint64_t v42 = sub_100246B38(v40);
      if (v43)
      {
        uint64_t v44 = v42;
        uint64_t v45 = v43;
        sub_100235AC8();
        sub_1002233BC(v44, v45, *v36);
        uint64_t v46 = v105;
        sub_10038FA2C((uint64_t)v30, 1, v105);
        if (!v47)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v108, v30, v46);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_100235804(v106, &qword_1005878F0);
          sub_100329D48();
          sub_1001F0530(v80, v81, v82, v46);
LABEL_29:
          sub_1001FCC08();
          return;
        }
        sub_100235804((uint64_t)v30, &qword_1005878F0);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
    }
    id v48 = v107;
    id v49 = [v107 provider];
    unsigned int v50 = [v49 isTelephonyProvider];

    if (v50)
    {
      id v51 = [v48 localSenderIdentityAccountUUID];
      if (v51)
      {
        uint64_t v52 = v51;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        os_log_type_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 32);
        v53(v14, v20, v15);
        sub_100342E78(v14, 0);
        sub_10038FA2C(v14, 1, v15);
        if (!v47)
        {
          v53(v102, (char *)v14, v15);
          uint64_t v54 = UUID.uuidString.getter();
          uint64_t v56 = v55;
          sub_100235AC8();
          uint64_t v57 = (uint64_t)v101;
          sub_1002233BC(v54, v56, *v36);
          swift_bridgeObjectRelease();
          uint64_t v58 = v105;
          sub_10038FA2C(v57, 1, v105);
          if (v47)
          {
            sub_100235804(v57, &qword_1005878F0);
            swift_endAccess();
            sub_10038F950();
            v59();
          }
          else
          {
            uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32);
            uint64_t v84 = v100;
            v83(v100, v57, v58);
            swift_endAccess();
            sub_10038F950();
            v85();
            uint64_t v86 = v106;
            sub_100235804(v106, &qword_1005878F0);
            v83(v86, v84, v58);
            sub_100329D48();
            sub_1001F0530(v87, v88, v89, v58);
          }
          goto LABEL_26;
        }
      }
      else
      {
        sub_100342E78(v14, 1);
      }
      sub_100235804(v14, (uint64_t *)&unk_100585580);
LABEL_26:
      uint64_t v64 = v108;
      goto LABEL_27;
    }
    os_log_type_t v62 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_callCenterObserver);
    if (v62)
    {
      id v63 = [v62 activeConversationForCall:v48];
      uint64_t v64 = v108;
      if (v63)
      {
        uint64_t v65 = v63;
        id v66 = [v63 localMember];
        if (v66)
        {
          uint64_t v67 = v66;
          id v68 = [v66 handle];

          uint64_t v69 = sub_1003577F4(v68);
          if (v70)
          {
            uint64_t v71 = v69;
            uint64_t v72 = v70;
            sub_100235AC8();
            uint64_t v73 = sub_10022337C(v71, v72, *v39);
            if (!v74)
            {
              swift_endAccess();

              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
            uint64_t v75 = v73;
            uint64_t v76 = v74;
            swift_endAccess();
            swift_bridgeObjectRelease();
            sub_100235AC8();
            uint64_t v77 = *v36;
            swift_bridgeObjectRetain();
            uint64_t v78 = v99;
            sub_1002233BC(v75, v76, v77);
            swift_bridgeObjectRelease();
            uint64_t v79 = v105;
            sub_10038FA2C(v78, 1, v105);
            if (!v47)
            {
              id v90 = *(void (**)(uint64_t))(v103 + 32);
              uint64_t v91 = v98;
              uint64_t v92 = sub_10038F9EC();
              v90(v92);
              swift_endAccess();
              swift_bridgeObjectRelease();

              uint64_t v93 = v106;
              sub_100235804(v106, &qword_1005878F0);
              ((void (*)(uint64_t, char *, uint64_t))v90)(v93, v91, v79);
              sub_100329D48();
              sub_1001F0530(v94, v95, v96, v79);
              goto LABEL_27;
            }
            sub_100235804(v78, &qword_1005878F0);
            swift_endAccess();
            swift_bridgeObjectRelease();
          }
        }
      }
LABEL_27:
      uint64_t v60 = v106;
      uint64_t v61 = v64;
      goto LABEL_28;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void *sub_10037EBF0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v5 = sub_100202384(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v36 - v9 + 16;
  id v11 = [a1 localSenderIdentityAccountUUID];
  if (v11)
  {
    uint64_t v12 = v11;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = (uint64_t)v8;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = (uint64_t)v8;
    uint64_t v15 = 1;
  }
  sub_100342E78(v14, v15);
  sub_100273CB0((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_100585580);
  type metadata accessor for UUID();
  sub_10038FA2C((uint64_t)v10, 1, v13);
  if (v16)
  {
    sub_100235804((uint64_t)v10, (uint64_t *)&unk_100585580);
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v17 = UUID.uuidString.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v10, v13);
  }
  v36[0] = v17;
  v36[1] = v19;
  id v20 = [a1 provider];
  unsigned int v21 = [v20 isTelephonyProvider];

  if (v21)
  {
    sub_1002022F8();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = (void *)sub_10037D8C4(v22, v36);
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    if (!v25) {
      return 0;
    }
    swift_bridgeObjectRelease();
    return v23;
  }
  uint64_t result = *(void **)(v2 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_callCenterObserver);
  if (result)
  {
    id v27 = [result activeConversationForCall:a1];
    if (!v27) {
      return 0;
    }
    uint64_t v28 = v27;
    id v29 = [v27 localMember];
    uint64_t v23 = v29;
    if (v29)
    {
      id v30 = [v29 handle];

      uint64_t v23 = (void *)sub_1003577F4(v30);
      uint64_t v32 = v31;
      if (!v19)
      {
        if (v31)
        {
          uint64_t v33 = (uint64_t *)(v2 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_phoneNumberToAccountUUIDMap);
          sub_100235AC8();
          uint64_t v34 = *v33;
          swift_bridgeObjectRetain();
          sub_10022337C((uint64_t)v23, v32, v34);
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
    }

    return v23;
  }
  __break(1u);
  return result;
}

void sub_10037EF10()
{
  sub_1001FCC38();
  uint64_t v89 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1001F081C(&qword_1005878F0);
  uint64_t v7 = sub_100202384(v6);
  __chkstk_darwin(v7);
  sub_1001F2514();
  uint64_t v86 = v9 - v8;
  uint64_t v10 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v91 = v11;
  __chkstk_darwin(v12);
  sub_1001F7650();
  uint64_t v88 = v13;
  sub_1002B8138();
  __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v72 - v15;
  sub_1002B8138();
  __chkstk_darwin(v16);
  sub_10026B98C();
  uint64_t v78 = v17;
  sub_1002B8138();
  __chkstk_darwin(v18);
  sub_10026B98C();
  uint64_t v81 = v19;
  sub_1002B8138();
  __chkstk_darwin(v20);
  sub_10038FA18();
  uint64_t v21 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v23 = v22;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v73 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = v26;
  __chkstk_darwin(v25);
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v28 = sub_1001F5F88(v27, (uint64_t)qword_100594C28);
  uint64_t v76 = *(void *)(v23 + 16);
  uint64_t v77 = v23 + 16;
  sub_10024640C();
  v29();
  id v30 = *(void (**)(uint64_t, NSObject *, uint64_t))(v91 + 16);
  uint64_t v85 = v5;
  uint64_t v90 = v91 + 16;
  uint64_t v87 = v30;
  sub_10024640C();
  v31();
  uint64_t v84 = v28;
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v74 = v21;
  uint64_t v80 = v23;
  if (v34)
  {
    uint64_t v35 = sub_100235B88();
    uint64_t v75 = v3;
    uint64_t v36 = v35;
    uint64_t v72 = sub_10026B9C0();
    v93[0] = v72;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v83 = (void (*)(NSObject *, uint64_t))v10;
    sub_10038EB48((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v92 = sub_1002344D8(v37, v38, v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_10038F984();
    v40(v39);
    *(_WORD *)(v36 + 12) = 2080;
    sub_10038EB48((unint64_t *)&qword_1005888D0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v92 = sub_1002344D8(v41, v42, v93);
    uint64_t v10 = (uint64_t)v83;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void (**)(void))(v91 + 8);
    sub_100235C60();
    v43();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "saveCustomGreeting for %s, url=%s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    uint64_t v3 = v75;
    sub_1001F63CC();
  }
  else
  {
    uint64_t v44 = sub_10038F984();
    v45(v44);
    uint64_t v43 = *(void (**)(void))(v91 + 8);
    ((void (*)(uint64_t, uint64_t))v43)(v1, v10);
  }

  uint64_t v46 = v86;
  sub_100385FAC(v85, v86);
  char v47 = v87;
  sub_10038FA2C(v46, 1, v10);
  if (v48)
  {
    sub_100235804(v46, &qword_1005878F0);
  }
  else
  {
    id v49 = v81;
    (*(void (**)(NSObject *, uint64_t, uint64_t))(v91 + 32))(v81, v46, v10);
    v47(v78, v49, v10);
    unsigned int v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.default.getter();
    BOOL v52 = os_log_type_enabled(v50, v51);
    uint64_t v83 = (void (*)(NSObject *, uint64_t))v43;
    if (v52)
    {
      os_log_type_t v53 = (uint8_t *)sub_100235B18();
      uint64_t v54 = sub_100202470();
      uint64_t v75 = v3;
      v93[0] = v54;
      *(_DWORD *)os_log_type_t v53 = 136315138;
      sub_10024640C();
      v55();
      uint64_t v56 = String.init<A>(reflecting:)();
      uint64_t v58 = sub_1002344D8(v56, v57, v93);
      sub_100235DD0(v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10038F924();
      sub_100235C60();
      v59();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "successfully saved custom greeting to: %s", v53, 0xCu);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {
      uint64_t v60 = sub_10038F924();
      ((void (*)(uint64_t))v43)(v60);
    }

    uint64_t v61 = v74;
    os_log_type_t v62 = v73;
    uint64_t v63 = UUID.uuidString.getter();
    unint64_t v65 = v64;
    sub_10024640C();
    v66();
    uint64_t v67 = v80;
    unint64_t v68 = (*(unsigned __int8 *)(v80 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    uint64_t v69 = swift_allocObject();
    uint64_t v70 = v89;
    *(void *)(v69 + 16) = v89;
    (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))(v69 + v68, v62, v61);
    v70;
    uint64_t v71 = v81;
    sub_100383CB4(v63, v65, v81, 1, (uint64_t)sub_10038EC04, v69);
    swift_bridgeObjectRelease();
    swift_release();
    v83(v71, v10);
  }
  sub_1001FCC08();
}

void sub_10037F7D0()
{
  sub_1001FCC38();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001F7650();
  uint64_t v32 = v9;
  sub_1002B8138();
  __chkstk_darwin(v10);
  sub_10026B914();
  uint64_t v12 = v11;
  uint64_t v13 = sub_1001F081C(&qword_1005878F0);
  uint64_t v14 = sub_100202384(v13);
  __chkstk_darwin(v14);
  sub_100332EE8();
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001FCCA0();
  uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue);
  void *v1 = v19;
  sub_100235D68();
  v20();
  id v21 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v1, v15);
  if (v19)
  {
    UUID.uuidString.getter();
    uint64_t v22 = type metadata accessor for URL();
    sub_10038F9F8(v22);
    swift_beginAccess();
    sub_1002C278C();
    swift_endAccess();
    UUID.uuidString.getter();
    sub_100388554();
    swift_bridgeObjectRelease();
    if (qword_100583A10 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v23 = type metadata accessor for Logger();
  sub_1001F5F88(v23, (uint64_t)qword_100594C28);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v24(v12, v4, v5);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)sub_100235B18();
    uint64_t v33 = sub_100202470();
    *(_DWORD *)uint64_t v27 = 136315138;
    v24(v32, v12, v5);
    uint64_t v28 = String.init<A>(reflecting:)();
    uint64_t v30 = sub_1002344D8(v28, v29, &v33);
    sub_100235DD0(v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10026B7C0();
    v31();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "removed custom greeting for account %s", v27, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v5);
  }

  sub_1001FCC08();
}

void sub_10037FB48()
{
  sub_1001FCC38();
  uint64_t v100 = v3;
  uint64_t v5 = v4;
  uint64_t v99 = type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v94 = v6;
  __chkstk_darwin(v7);
  sub_1001F7650();
  uint64_t v93 = v8;
  sub_1002B8138();
  __chkstk_darwin(v9);
  sub_10026B98C();
  uint64_t v91 = v10;
  sub_1002B8138();
  __chkstk_darwin(v11);
  sub_10026B98C();
  uint64_t v92 = v12;
  sub_1002B8138();
  __chkstk_darwin(v13);
  sub_10026B914();
  uint64_t v98 = v14;
  uint64_t v15 = sub_1001F081C(&qword_1005878F0);
  uint64_t v16 = sub_100202384(v15);
  __chkstk_darwin(v16);
  sub_1001FCCA0();
  uint64_t v17 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  uint64_t v95 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B8138();
  __chkstk_darwin(v22);
  type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  __chkstk_darwin(v23);
  sub_1002024D0();
  uint64_t v24 = *(void **)&v0[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue];
  void *v1 = v24;
  sub_100235D68();
  v25();
  id v26 = v24;
  LOBYTE(v24) = _dispatchPreconditionTest(_:)();
  sub_10038F950();
  v27();
  if (v24)
  {
    if (qword_100583A10 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = sub_1001F5F88(v28, (uint64_t)qword_100594C28);
  uint64_t v30 = *(void *)(v19 + 16);
  uint64_t v86 = v19 + 16;
  uint64_t v85 = v30;
  sub_10024640C();
  v31();
  uint64_t v32 = v0;
  uint64_t v96 = v29;
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  int v35 = v34;
  BOOL v36 = os_log_type_enabled(v33, v34);
  uint64_t v97 = v2;
  uint64_t v90 = v5;
  uint64_t v89 = v17;
  uint64_t v88 = v19;
  if (v36)
  {
    uint64_t v37 = sub_100235B88();
    LODWORD(v84) = v35;
    uint64_t v38 = v37;
    uint64_t v83 = sub_10026B9C0();
    v103[0] = v83;
    *(_DWORD *)uint64_t v38 = 136315394;
    sub_10038EB48((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v102 = sub_1002344D8(v39, v40, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v87 = *(void *)(v19 + 8);
    sub_10026B7C0();
    v41();
    *(_WORD *)(v38 + 12) = 2080;
    sub_1002022F8();
    swift_bridgeObjectRetain();
    uint64_t v42 = v99;
    Dictionary.description.getter();
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_10038F9EC();
    uint64_t v102 = sub_1002344D8(v43, v44, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v84, "customGreeting for %s, greetingsDict=%s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    uint64_t v87 = *(void *)(v19 + 8);
    sub_10026B7C0();
    v46();

    uint64_t v42 = v99;
  }
  uint64_t v47 = UUID.uuidString.getter();
  uint64_t v49 = v48;
  unsigned int v50 = (uint64_t *)&v32[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict];
  sub_100235AC8();
  sub_1002233BC(v47, v49, *v50);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_100241468();
  URL.init(fileURLWithPath:isDirectory:)();
  swift_bridgeObjectRelease();
  UUID.uuidString.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v51 = v94;
  BOOL v52 = *(void (**)(void))(v94 + 8);
  sub_100235D38();
  v52();
  uint64_t v53 = v98;
  URL.appendingPathComponent(_:)();
  sub_100235D38();
  v52();
  uint64_t v54 = v93;
  uint64_t v94 = *(void *)(v51 + 16);
  ((void (*)(void *, uint64_t, uint64_t))v94)(v93, v53, v42);
  uint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  BOOL v57 = os_log_type_enabled(v55, v56);
  uint64_t v84 = v52;
  if (v57)
  {
    uint64_t v58 = (uint8_t *)sub_100235B18();
    v103[0] = sub_100202470();
    *(_DWORD *)uint64_t v58 = 136315138;
    uint64_t v54 = v58 + 12;
    sub_10038EB48((unint64_t *)&qword_1005888D0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v102 = sub_1002344D8(v59, v60, v103);
    uint64_t v61 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    BOOL v52 = v84;
    sub_100235D38();
    v52();
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "rawGreetingURL %s", v58, 0xCu);
    sub_1002466B8();
    uint64_t v53 = v98;
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    uint64_t v61 = v42;
    ((void (*)(void *, uint64_t))v52)(v54, v42);
  }

  id v62 = [self defaultManager];
  URL.path.getter();
  String._bridgeToObjectiveC()();
  uint64_t v63 = sub_1002469FC();
  unsigned int v64 = sub_100246990(v63, "fileExistsAtPath:");

  if (v64)
  {
    uint64_t v65 = v97;
    sub_100235804(v97, &qword_1005878F0);
    ((void (*)(uint64_t, uint64_t, uint64_t))v94)(v65, v53, v61);
    sub_100329D48();
    sub_1001F0530(v66, v67, v68, v61);
  }
  sub_10024640C();
  v69();
  uint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = sub_100235B88();
    uint64_t v100 = sub_10026B9C0();
    v103[0] = v100;
    *(_DWORD *)uint64_t v72 = 136315394;
    uint64_t v73 = v97;
    sub_1002022F8();
    uint64_t v74 = sub_1001FCDEC(v73);
    uint64_t v101 = sub_1002344D8(v74, v75, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v72 + 12) = 2080;
    sub_10038EB48((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v101 = sub_1002344D8(v76, v77, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100235C60();
    v78();
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "returning %s for accountUUID %s", (uint8_t *)v72, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();

    sub_100235D38();
    v79();
    uint64_t v80 = v90;
  }
  else
  {

    sub_100235C60();
    v81();
    sub_100235D38();
    v52();
    uint64_t v80 = v90;
    uint64_t v73 = v97;
  }
  sub_1002022F8();
  sub_10025E234(v73, v80, &qword_1005878F0);
  sub_100235804(v73, &qword_1005878F0);
  sub_1001FCC08();
}

void sub_100380550()
{
  sub_1002E79A4();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  sub_1001F6398();
  __chkstk_darwin(v3);
  sub_1002024D0();
  id v4 = [self defaultManager];
  sub_10038F8DC();
  URL.path.getter();
  sub_10038FA44();
  sub_100235D38();
  v5();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v7 = [v4 fileExistsAtPath:v6];

  if (v7)
  {
    sub_10038F8DC();
    uint64_t v8 = 0;
  }
  else
  {
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    uint64_t v10 = sub_1002466F4(v9, (uint64_t)qword_100594C28);
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)sub_100246544();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "default greeting does not exist", v12, 2u);
      sub_1001F63CC();
    }

    uint64_t v8 = 1;
  }
  sub_1001F0530(v1, v8, 1, v2);
  sub_1002E7968();
}

uint64_t sub_10038073C()
{
  OS_dispatch_queue.sync<A>(execute:)();
  return v1;
}

id sub_1003807B0()
{
  uint64_t v1 = sub_1001F081C((uint64_t *)&unk_10058BB70);
  uint64_t v2 = sub_100202384(v1);
  __chkstk_darwin(v2);
  sub_1001F2514();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for LanguageManager();
  uint64_t v7 = sub_100202384(v6);
  __chkstk_darwin(v7);
  sub_10038F908();
  uint64_t v8 = type metadata accessor for Locale();
  sub_1001F0530(v5, 1, 1, v8);
  [objc_allocWithZone((Class)TUFeatureFlags) init];
  LanguageManager.init(featureFlags:localeOverride:)();
  id v9 = [objc_allocWithZone((Class)type metadata accessor for DaemonSession()) init];
  id result = [self sharedInstance];
  if (result)
  {
    os_log_type_t v11 = result;
    type metadata accessor for SiriSpeechService();
    uint64_t v12 = swift_allocObject();
    return (id)sub_10038ED40(v0, v9, (uint64_t)sub_1001F255C, 0, v11, 0, 0, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100380914(char a1, char a2, uint64_t a3, void *a4)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithStateSync:a1 & 1 mailSync:a2 & 1 delegate:a3 delegateQueue:a4];
  swift_unknownObjectRelease();

  return v5;
}

uint64_t sub_10038098C()
{
  return TUCallScreeningEnabledForCurrentLocale();
}

void sub_1003809AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100380A04();
  }
}

void sub_100380A04()
{
  sub_1001FCC38();
  char v2 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v3);
  sub_10021EA1C();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_1002024D0();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  *(unsigned char *)(v5 + 24) = v2;
  v11[4] = sub_10038E270;
  void v11[5] = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1002C2C88;
  void v11[3] = &unk_100517130;
  uint64_t v6 = _Block_copy(v11);
  id v7 = v0;
  static DispatchQoS.unspecified.getter();
  sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  sub_10026B7D8();
  sub_10027AC54();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v6);
  sub_10026B7C0();
  v8();
  uint64_t v9 = sub_10038FA44();
  v10(v9);
  swift_release();
  sub_1001FCC08();
}

void sub_100380BEC()
{
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1001F5F88(v0, (uint64_t)qword_100594C28);
  char v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "after first unlock", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_afterFirstUnlock] = 1;
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_100380D5C();
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_1003810EC();
  }
}

void sub_100380D5C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue];
  *uint64_t v4 = (uint64_t)v5;
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_coreTelephonyClient];
  if (!v7)
  {
    __break(1u);
    return;
  }
  id v8 = [v7 subscriptions];
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1001F6204(0, &qword_100588270);
    sub_1002CA948();
    unint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10037D59C((uint64_t)_swiftEmptyDictionarySingleton, v10, v0);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  }
  uint64_t v4 = (uint64_t *)&v0[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_phoneNumberToAccountUUIDMap];
  swift_beginAccess();
  *uint64_t v4 = v12;
  swift_bridgeObjectRelease();
  if (qword_100583A10 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v13 = type metadata accessor for Logger();
  sub_1001F5F88(v13, (uint64_t)qword_100594C28);
  uint64_t v14 = v0;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v21 = *v4;
    swift_bridgeObjectRetain();
    sub_1001F081C((uint64_t *)&unk_100586440);
    uint64_t v18 = String.init<A>(reflecting:)();
    uint64_t v21 = sub_1002344D8(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "phoneNumberToAccountUUIDMap: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1003824F8();
}

void sub_1003810EC()
{
  if ((*(uint64_t (**)(void))(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_localeCheck))())
  {
    sub_100382E04();
    sub_10027926C();
  }
  else
  {
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1001F5F88(v1, (uint64_t)qword_100594C28);
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "current locale is not supported for AnsweringMachine, not downloading assets", v3, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10038121C()
{
  sub_1001FCC38();
  os_log_type_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1001F081C((uint64_t *)&unk_10058BB70);
  uint64_t v6 = sub_100202384(v5);
  __chkstk_darwin(v6);
  sub_100332EE8();
  uint64_t v7 = type metadata accessor for LanguageManager();
  uint64_t v8 = sub_100202384(v7);
  __chkstk_darwin(v8);
  sub_1001FCCA0();
  id v9 = [objc_allocWithZone((Class)CSDDeviceLockStateObserver) initWithQueue:v4];
  id v21 = [objc_allocWithZone((Class)type metadata accessor for CallCenterObserver()) init];
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  type metadata accessor for URL();
  id v20 = v4;
  id v23 = v9;
  id v10 = v2;
  uint64_t v11 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  id v13 = sub_1003807B0();
  sub_1001F6204(0, &qword_10058B270);
  id v14 = sub_100380914(1, 0, 0, 0);
  uint64_t v15 = type metadata accessor for Locale();
  sub_10038F9F8(v15);
  [objc_allocWithZone((Class)TUFeatureFlags) init];
  LanguageManager.init(featureFlags:localeOverride:)();
  os_log_type_t v16 = sub_10038EF9C(v21, v20, v11, v12, (uint64_t)v13, (uint64_t)&off_10050BF40, (uint64_t)v9, 0, (uint64_t)v24, (uint64_t)v14, 0, 0, 0, v0, v10, objc_allocWithZone(ObjectType));
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_speechAssetManager];
  uint64_t v18 = v16;
  id v19 = v17;
  sub_10027834C();

  sub_100380A04();
  sub_100380D5C();
  sub_1003814DC();

  sub_1001FCC08();
}

void sub_1003814DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001F081C(&qword_1005878F0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v91 = (char *)v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v104 = (uint64_t)v88 - v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v88 - v7;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v94 = (char *)v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v103 = (char *)v88 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v97 = (char *)v88 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v88 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (void *)((char *)v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v23 = *(void **)((char *)v1 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue);
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    swift_once();
    goto LABEL_37;
  }
  id v102 = self;
  id v25 = [v102 defaultManager];
  sub_100388EA0();
  URL.path.getter();
  id v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v95 = v10 + 8;
  id v107 = v26;
  v26(v18, v9);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v110 = 0;
  id v28 = [v25 contentsOfDirectoryAtPath:v27 error:&v110];

  id v29 = v110;
  if (v28)
  {
    uint64_t v100 = v18;
    uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = *(void *)(v30 + 16);
    if (v32)
    {
      uint64_t v33 = (char *)v1 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict;
      uint64_t v105 = (void (**)(uint64_t, char *, uint64_t))(v10 + 16);
      uint64_t v90 = &v111;
      uint64_t v92 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
      uint64_t v96 = v10;
      v88[2] = v10 + 40;
      v88[1] = v30;
      os_log_type_t v34 = (uint64_t *)(v30 + 40);
      unint64_t v99 = 0x800000010048BD70;
      *(void *)&long long v31 = 136315138;
      long long v89 = v31;
      v88[3] = (char *)&type metadata for Any + 8;
      uint64_t v101 = v1;
      int v35 = v97;
      uint64_t v36 = v95;
      uint64_t v98 = v8;
      uint64_t v106 = (char *)v1 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict;
      while (1)
      {
        uint64_t v38 = (void *)*(v34 - 1);
        uint64_t v37 = *v34;
        swift_beginAccess();
        uint64_t v39 = *(void *)v33;
        uint64_t v40 = *(void *)(*(void *)v33 + 16);
        uint64_t v108 = v38;
        if (v40)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v41 = sub_100233664();
          if (v42)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v96 + 16))(v8, *(void *)(v39 + 56) + *(void *)(v96 + 72) * v41, v9);
            uint64_t v43 = (uint64_t)v8;
            uint64_t v44 = 0;
          }
          else
          {
            uint64_t v43 = (uint64_t)v8;
            uint64_t v44 = 1;
          }
          sub_1001F0530(v43, v44, 1, v9);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1001F0530((uint64_t)v8, 1, 1, v9);
          swift_bridgeObjectRetain();
        }
        swift_endAccess();
        if (sub_1001F758C((uint64_t)v8, 1, v9) == 1)
        {
          sub_100235804((uint64_t)v8, &qword_1005878F0);
          uint64_t v45 = v107;
          uint64_t v46 = v36;
          uint64_t v47 = v103;
          sub_100388EA0();
          uint64_t v48 = v100;
          URL.appendingPathComponent(_:)();
          v45(v47, v9);
          URL.appendingPathComponent(_:)();
          v45(v48, v9);
          id v49 = [v102 defaultManager];
          URL.path.getter();
          unsigned int v50 = v35;
          NSString v51 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unsigned int v52 = [v49 fileExistsAtPath:v51];

          if (v52)
          {
            if (qword_100583A10 != -1) {
              swift_once();
            }
            uint64_t v53 = type metadata accessor for Logger();
            sub_1001F5F88(v53, (uint64_t)qword_100594C28);
            swift_bridgeObjectRetain_n();
            uint64_t v54 = Logger.logObject.getter();
            os_log_type_t v55 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v54, v55))
            {
              os_log_type_t v56 = (uint8_t *)swift_slowAlloc();
              uint64_t v112 = (void *)swift_slowAlloc();
              *(_DWORD *)os_log_type_t v56 = v89;
              uint64_t v93 = v56 + 4;
              id v110 = v108;
              uint64_t v111 = v37;
              swift_bridgeObjectRetain();
              uint64_t v57 = String.init<A>(reflecting:)();
              id v110 = (id)sub_1002344D8(v57, v58, (uint64_t *)&v112);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v54, v55, "adding FS object item (%s) to greetingsDict", v56, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            int v35 = v97;
            uint64_t v59 = v104;
            (*v105)(v104, v97, v9);
            sub_1001F0530(v59, 0, 1, v9);
            uint64_t v33 = v106;
            swift_beginAccess();
            if (sub_1001F758C(v59, 1, v9) == 1)
            {
              sub_100235804(v104, &qword_1005878F0);
              uint64_t v60 = (uint64_t)v91;
              sub_1002CE720((uint64_t)v108, v37);
              swift_bridgeObjectRelease();
              sub_100235804(v60, &qword_1005878F0);
              uint64_t v8 = v98;
              uint64_t v36 = v95;
            }
            else
            {
              uint64_t v1 = *v92;
              (*v92)(v94, v104, v9);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v112 = *(void **)v33;
              uint64_t v62 = (uint64_t)v112;
              *(void *)uint64_t v33 = 0x8000000000000000;
              unint64_t v63 = sub_100233664();
              uint64_t v65 = *(void *)(v62 + 16);
              BOOL v66 = (v64 & 1) == 0;
              Swift::Int v67 = v65 + v66;
              if (__OFADD__(v65, v66))
              {
                __break(1u);
                goto LABEL_41;
              }
              unint64_t v68 = v63;
              char v69 = v64;
              sub_1001F081C(&qword_10058BB80);
              Swift::Bool v70 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v67);
              uint64_t v36 = v95;
              os_log_type_t v71 = v108;
              if (v70)
              {
                unint64_t v72 = sub_100233664();
                if ((v69 & 1) != (v73 & 1))
                {
                  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                  __break(1u);
                  return;
                }
                unint64_t v68 = v72;
              }
              uint64_t v74 = v112;
              if (v69)
              {
                (*(void (**)(unint64_t, char *, uint64_t))(v96 + 40))(v112[7] + *(void *)(v96 + 72) * v68, v94, v9);
              }
              else
              {
                v112[(v68 >> 6) + 8] |= 1 << v68;
                unint64_t v75 = (void *)(v74[6] + 16 * v68);
                *unint64_t v75 = v71;
                v75[1] = v37;
                v1((char *)(v74[7] + *(void *)(v96 + 72) * v68), (uint64_t)v94, v9);
                uint64_t v76 = v74[2];
                BOOL v77 = __OFADD__(v76, 1);
                uint64_t v78 = v76 + 1;
                if (v77) {
                  __break(1u);
                }
                v74[2] = v78;
                swift_bridgeObjectRetain();
              }
              uint64_t v33 = v106;
              *(void *)uint64_t v106 = v112;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int v35 = v97;
              uint64_t v8 = v98;
            }
            swift_endAccess();
            v107(v35, v9);
          }
          else
          {
            v45(v50, v9);
            swift_bridgeObjectRelease();
            int v35 = v50;
            uint64_t v36 = v46;
            uint64_t v33 = v106;
            uint64_t v8 = v98;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_100235804((uint64_t)v8, &qword_1005878F0);
        }
        v34 += 2;
        if (!--v32)
        {
          swift_bridgeObjectRelease();
          uint64_t v1 = v101;
          goto LABEL_36;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v79 = v29;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
LABEL_36:
  if (qword_100583A10 != -1) {
    goto LABEL_42;
  }
LABEL_37:
  uint64_t v80 = type metadata accessor for Logger();
  sub_1001F5F88(v80, (uint64_t)qword_100594C28);
  uint64_t v81 = v1;
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc();
    uint64_t v112 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v84 = 136315138;
    uint64_t v85 = (uint64_t *)&v81[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict];
    swift_beginAccess();
    uint64_t v109 = *v85;
    swift_bridgeObjectRetain();
    sub_1001F081C(&qword_10058BB58);
    uint64_t v86 = String.init<A>(reflecting:)();
    uint64_t v109 = sub_1002344D8(v86, v87, (uint64_t *)&v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "updateGreetingsDictFromFileSystem greetingsDict: %s", v84, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100382160(uint64_t a1, void **a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  __chkstk_darwin(v7);
  int v35 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1001F5F88(v10, (uint64_t)qword_100594C28);
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v38 = a1;
  if (v14)
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412290;
    id v39 = v11;
    id v16 = v11;
    v34[1] = v3;
    id v17 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)v34[0] = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Subscription: %@", v15, 0xCu);
    sub_1001F081C(&qword_100585900);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t result = sub_1001F612C(v11, (SEL *)&selRef_labelID);
  if (v19)
  {
    uint64_t v20 = result;
    uint64_t v21 = v19;
    uint64_t result = sub_1001F612C(v11, (SEL *)&selRef_phoneNumber);
    if (v22)
    {
      id v23 = *(void **)(a3 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_coreTelephonyClient);
      if (!v23)
      {
        __break(1u);
        return result;
      }
      uint64_t v24 = result;
      uint64_t v25 = v22;
      id v26 = [v11 uuid];
      NSString v27 = v35;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v37);
      id v29 = [v23 accountISOCountryCodeForSubscriptionUUID:isa];

      if (v29)
      {
        NSString v30 = String._bridgeToObjectiveC()();
        long long v31 = (void *)CFPhoneNumberCreate();

        String = (void *)CFPhoneNumberCreateString();
        if (String)
        {
          swift_bridgeObjectRelease();
          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v33;
        }
      }
      sub_10027FBB4(v20, v21, v24, v25);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1003824F8()
{
  uint64_t v1 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v56 - v5;
  uint64_t v60 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v60 - 8);
  uint64_t v8 = __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v58 = (char *)&v56 - v10;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (void *)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)((char *)v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue);
  *BOOL v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  char v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (qword_100583A10 != -1) {
LABEL_44:
  }
    swift_once();
  char v69 = v0;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v62 = sub_1001F5F88(v18, (uint64_t)qword_100594C28);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "updateFromDefaultGreetingIfNecessary", v21, 2u);
    swift_slowDealloc();
  }

  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, "tu_defaults");
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v23 stringForKey:v24];

  if (!v25) {
    return;
  }
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  uint64_t v63 = v26;
  UUID.init(uuidString:)();
  uint64_t v29 = v60;
  if (sub_1001F758C((uint64_t)v6, 1, v60) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100235804((uint64_t)v6, (uint64_t *)&unk_100585580);
LABEL_37:
    id v51 = objc_msgSend(v22, "tu_defaults", (void)v56, *((void *)&v56 + 1));
    NSString v52 = String._bridgeToObjectiveC()();
    [v51 removeObjectForKey:v52];

    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      os_log_type_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "not copying old default greeting", v55, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v61 = v28;
  NSString v30 = v6;
  long long v31 = v58;
  uint64_t v65 = *(void (**)(char *, char *))(v7 + 32);
  uint64_t v66 = v7 + 32;
  v65(v58, v30);
  uint64_t v32 = v69;
  if ((sub_100384A90() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v29);
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  id v33 = objc_msgSend(v22, "tu_defaults");
  NSString v34 = String._bridgeToObjectiveC()();
  [v33 removeObjectForKey:v34];

  uint64_t v0 = (uint64_t *)((char *)v32 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_phoneNumberToAccountUUIDMap);
  swift_beginAccess();
  uint64_t v35 = *v0;
  uint64_t v36 = *(void *)(*v0 + 64);
  uint64_t v67 = *v0 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
  uint64_t v38 = -1;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  unint64_t v39 = v38 & v36;
  int64_t v68 = (unint64_t)(v37 + 63) >> 6;
  char v64 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v57 = &v70;
  swift_bridgeObjectRetain();
  int64_t v40 = 0;
  uint64_t v6 = 0;
  *(void *)&long long v41 = 138412290;
  long long v56 = v41;
  uint64_t v7 = v29;
  char v42 = v59;
  while (v39)
  {
    unint64_t v43 = __clz(__rbit64(v39));
    v39 &= v39 - 1;
    unint64_t v44 = v43 | (v40 << 6);
LABEL_27:
    uint64_t v48 = (uint64_t *)(*(void *)(v35 + 56) + 16 * v44);
    uint64_t v50 = *v48;
    id v49 = (void (*)(char *, uint64_t))v48[1];
    swift_bridgeObjectRetain();
    UUID.init(uuidString:)();
    if (sub_1001F758C((uint64_t)v4, 1, v7) == 1)
    {
      swift_bridgeObjectRelease();
      sub_100235804((uint64_t)v4, (uint64_t *)&unk_100585580);
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v65)(v42, v4, v7);
      uint64_t v0 = v69;
      if (sub_100384A90()) {
        sub_100389C54(v63, v61, v50, v49);
      }
      (*v64)(v42, v7);
      swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v40++, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v0 = v69;
  if (v40 >= v68) {
    goto LABEL_40;
  }
  unint64_t v46 = *(void *)(v67 + 8 * v40);
  if (v46)
  {
LABEL_26:
    unint64_t v39 = (v46 - 1) & v46;
    unint64_t v44 = __clz(__rbit64(v46)) + (v40 << 6);
    goto LABEL_27;
  }
  int64_t v47 = v40 + 1;
  if (v40 + 1 >= v68) {
    goto LABEL_40;
  }
  unint64_t v46 = *(void *)(v67 + 8 * v47);
  if (v46) {
    goto LABEL_25;
  }
  int64_t v47 = v40 + 2;
  if (v40 + 2 >= v68) {
    goto LABEL_40;
  }
  unint64_t v46 = *(void *)(v67 + 8 * v47);
  if (v46) {
    goto LABEL_25;
  }
  int64_t v47 = v40 + 3;
  if (v40 + 3 >= v68) {
    goto LABEL_40;
  }
  unint64_t v46 = *(void *)(v67 + 8 * v47);
  if (v46) {
    goto LABEL_25;
  }
  int64_t v47 = v40 + 4;
  if (v40 + 4 >= v68)
  {
LABEL_40:
    swift_release();
    sub_100388554();
    swift_bridgeObjectRelease();
    (*v64)(v58, v7);
    return;
  }
  unint64_t v46 = *(void *)(v67 + 8 * v47);
  if (v46)
  {
LABEL_25:
    int64_t v40 = v47;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v40 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v40 >= v68) {
      goto LABEL_40;
    }
    unint64_t v46 = *(void *)(v67 + 8 * v40);
    ++v47;
    if (v46) {
      goto LABEL_26;
    }
  }
  __break(1u);
}

unint64_t sub_100382E04()
{
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  uint64_t v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
    uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_voicemailManager);
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_voicemailManager + 24);
    uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_voicemailManager + 32);
    sub_100204074((void *)(v0 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_voicemailManager), v11);
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    uint64_t v10 = result;
    if (!(result >> 62))
    {
      uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v14 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    id v16 = (void (**)(char *, uint64_t))(v1 + 8);
    do
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v10 + 8 * v15 + 32);
      }
      uint64_t v18 = v17;
      ++v15;
      id v19 = [v17 UUID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1003830B4(v7, (uint64_t)v3);
      (*v16)(v3, v21);
    }
    while (v14 != v15);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1003830B4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v91 = a1;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = (void (*)(void, void, void))v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v90 = ((char *)&v84 - v9);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v97 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v94 = v16;
  uint64_t v95 = (char *)&v84 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v84 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint8_t **)((char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v23 = *(void **)&v3[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue];
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  uint64_t v25 = _dispatchPreconditionTest(_:)();
  uint64_t v27 = *(void (**)(void *, uint64_t))(v20 + 8);
  uint64_t v26 = v20 + 8;
  v27(v22, v19);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v25 = a2;
  if (sub_100384A90())
  {
    uint64_t v26 = v96;
    uint64_t v19 = v97;
    if (qword_100583A10 == -1)
    {
LABEL_4:
      uint64_t v28 = type metadata accessor for Logger();
      uint64_t v29 = (void *)sub_1001F5F88(v28, (uint64_t)qword_100594C28);
      NSString v30 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
      uint64_t v89 = v26 + 16;
      uint64_t v88 = v30;
      v30(v13, v25, v19);
      long long v31 = v3;
      uint64_t v91 = v29;
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        NSString v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        *(void *)&v101[0] = v86;
        uint64_t v87 = v25;
        uint64_t v85 = v34;
        *(_DWORD *)NSString v34 = 136315138;
        uint64_t v84 = v34 + 4;
        uint64_t v35 = v90;
        sub_100383B50();
        uint64_t v36 = v92;
        uint64_t v37 = v93;
        (*(void (**)(char *, NSObject *, void))(v92 + 16))(v8, v35, v93);
        uint64_t v38 = String.init<A>(reflecting:)();
        unint64_t v40 = v39;
        (*(void (**)(NSObject *, void (*)(void, void, void)))(v36 + 8))(v35, v37);
        v100[0] = sub_1002344D8(v38, v40, (uint64_t *)v101);
        uint64_t v25 = v87;
        uint64_t v26 = v96;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        uint64_t v41 = v97;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v97);
        os_log_type_t v42 = v33;
        uint64_t v43 = v41;
        _os_log_impl((void *)&_mh_execute_header, v32, v42, "not downloading greeting, file exists %s", v85, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v19);
        uint64_t v43 = v19;
        uint64_t v35 = v90;
      }
      uint64_t v52 = UUID.uuidString.getter();
      unint64_t v54 = v53;
      sub_100383B50();
      uint64_t v55 = (uint64_t)&v31[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsChecksums];
      swift_beginAccess();
      sub_10020ED28(v55, (uint64_t)v100);
      long long v56 = sub_100204074(v100, v100[3]);
      uint64_t v57 = UUID.uuidString.getter();
      long long v58 = *((_OWORD *)v56 + 1);
      v101[0] = *(_OWORD *)v56;
      v101[1] = v58;
      uint64_t v102 = v56[4];
      LOBYTE(v55) = sub_100358604(v57, v59);
      swift_bridgeObjectRelease();
      uint64_t v60 = v95;
      v88(v95, v25, v43);
      uint64_t v61 = v26;
      unint64_t v62 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v63 = swift_allocObject();
      uint64_t v64 = v43;
      uint64_t v65 = v63;
      *(void *)(v63 + 16) = v31;
      (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v63 + v62, v60, v64);
      uint64_t v66 = v31;
      sub_100383CB4(v52, v54, v35, v55 & 1, (uint64_t)sub_10038EC04, v65);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(NSObject *, void (*)(void, void, void)))(v92 + 8))(v35, v93);
      sub_1002018DC((uint64_t)v100);
      uint64_t v67 = v66;
      int64_t v68 = Logger.logObject.getter();
      os_log_type_t v69 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 136315138;
        uint64_t v99 = v71;
        unint64_t v72 = (uint64_t *)&v67[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict];
        swift_beginAccess();
        uint64_t v98 = *v72;
        swift_bridgeObjectRetain();
        sub_1001F081C(&qword_10058BB58);
        uint64_t v73 = String.init<A>(reflecting:)();
        uint64_t v98 = sub_1002344D8(v73, v74, &v99);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v68, v69, "greetingsDict=%s", v70, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      return;
    }
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v45 = v96;
  uint64_t v44 = v97;
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for Logger();
  sub_1001F5F88(v46, (uint64_t)qword_100594C28);
  uint64_t v93 = *(void (**)(void, void, void))(v45 + 16);
  v93(v18, v25, v44);
  int64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    id v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    *(void *)&v101[0] = v92;
    *(_DWORD *)id v49 = 136315138;
    uint64_t v90 = (v49 + 4);
    sub_10038EB48((unint64_t *)&qword_10058B060, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
    v100[0] = sub_1002344D8(v50, v51, (uint64_t *)v101);
    uint64_t v44 = v97;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v44);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "looking for greeting for account: %s", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v44);
  }

  uint64_t v75 = v91[3];
  uint64_t v76 = v91[4];
  sub_100204074(v91, v75);
  BOOL v77 = v95;
  v93(v95, v25, v44);
  unint64_t v78 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v79 = swift_allocObject();
  uint64_t v80 = v44;
  uint64_t v81 = v79;
  *(void *)(v79 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v79 + v78, v77, v80);
  uint64_t v82 = *(void (**)(uint64_t, uint64_t (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v76 + 16);
  os_log_type_t v83 = v3;
  v82(v25, sub_10038EB9C, v81, v75, v76);
  swift_release();
}

uint64_t sub_100383B50()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - v5;
  sub_100388EA0();
  UUID.uuidString.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_100386FB8(v6);
  URL.appendingPathComponent(_:)();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_100383CB4(uint64_t a1, unint64_t a2, NSObject *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v126 = a5;
  uint64_t v121 = a6;
  LODWORD(v125) = a4;
  uint64_t v114 = a1;
  uint64_t v113 = type metadata accessor for DispatchWorkItemFlags();
  id v119 = *(void (***)(char *, uint64_t))(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v116 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v118 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for DispatchQoS();
  uint64_t v117 = *((void *)v118 - 1);
  __chkstk_darwin(v118);
  uint64_t v115 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001F081C(&qword_100586A10);
  __chkstk_darwin(v10 - 8);
  uint64_t v110 = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v106 = (uint64_t)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void **)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v108 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  id v107 = (char *)&v105 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v109 = (char *)&v105 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  id v24 = (char *)&v105 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v105 - v26;
  uint64_t v123 = v28;
  __chkstk_darwin(v25);
  NSString v30 = (char *)&v105 - v29;
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v32 = sub_1001F5F88(v31, (uint64_t)qword_100594C28);
  os_log_type_t v33 = (void (*)(char *, NSObject *, uint64_t))v15[2];
  uint64_t v128 = a3;
  v33(v30, a3, v14);
  swift_bridgeObjectRetain_n();
  uint64_t v112 = v32;
  NSString v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  BOOL v36 = os_log_type_enabled(v34, v35);
  os_log_type_t v129 = v15;
  uint64_t v130 = v27;
  unint64_t v105 = a2;
  v122 = v15 + 2;
  id v120 = (void (*)(char *, char *, uint64_t))v33;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v124 = (void **)swift_slowAlloc();
    uint64_t aBlock = v124;
    *(_DWORD *)uint64_t v37 = 136315650;
    uint64_t v111 = v24;
    swift_bridgeObjectRetain();
    unint64_t v131 = (void *)sub_1002344D8(v114, a2, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2080;
    v33(v130, v30, v14);
    uint64_t v38 = String.init<A>(reflecting:)();
    unint64_t v131 = (void *)sub_1002344D8(v38, v39, (uint64_t *)&aBlock);
    id v24 = v111;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v40 = (void (*)(char *, uint64_t))v129[1];
    unint64_t v41 = (unint64_t)(v129 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40(v30, v14);
    *(_WORD *)(v37 + 22) = 1024;
    char v42 = (char)v125;
    LODWORD(v131) = v125 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "addEndTone: for: %s from: %s force: %{BOOL}d", (uint8_t *)v37, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v27 = v130;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    unint64_t v40 = (void (*)(char *, uint64_t))v15[1];
    unint64_t v41 = (unint64_t)(v15 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40(v30, v14);

    char v42 = (char)v125;
  }
  URL.deletingLastPathComponent()();
  URL.appendingPathComponent(_:)();
  uint64_t v124 = (void **)v41;
  uint64_t v125 = v40;
  v40(v27, v14);
  uint64_t v43 = v120;
  if (v42)
  {
    id v44 = [self defaultManager];
    URL._bridgeToObjectiveC()(v45);
    int64_t v47 = v46;
    uint64_t aBlock = 0;
    unsigned int v48 = [v44 removeItemAtURL:v46 error:&aBlock];

    if (v48)
    {
      id v49 = aBlock;
    }
    else
    {
      uint64_t v50 = aBlock;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  id v51 = [self defaultManager];
  URL.path.getter();
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v53 = [v51 fileExistsAtPath:v52];

  if (v53)
  {
    unint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      long long v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "addEndTone: greeting with tone existed, returning it", v56, 2u);
      swift_slowDealloc();
    }

    uint64_t v57 = v130;
    v43(v130, v24, v14);
    long long v58 = v129;
    unint64_t v59 = (*((unsigned __int8 *)v129 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v129 + 80);
    uint64_t v60 = swift_allocObject();
    uint64_t v61 = v121;
    *(void *)(v60 + 16) = v126;
    *(void *)(v60 + 24) = v61;
    ((void (*)(unint64_t, char *, uint64_t))v58[4])(v60 + v59, v57, v14);
    uint64_t v136 = sub_10038E5B8;
    uint64_t v137 = v60;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v133 = 1107296256;
    unint64_t v62 = &unk_100517298;
LABEL_18:
    uint64_t v134 = sub_1002C2C88;
    id v135 = v62;
    uint64_t v73 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v74 = v115;
    static DispatchQoS.unspecified.getter();
    unint64_t v131 = _swiftEmptyArrayStorage;
    sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_1001F6030();
    uint64_t v75 = v116;
    uint64_t v76 = v113;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v73);
    v119[1](v75, v76);
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v117 + 8))(v74, v118);
    v125(v24, v14);
    return swift_release();
  }
  uint64_t v63 = v106;
  uint64_t v64 = v128;
  sub_100389004(v128, v106);
  if (sub_1001F758C(v63, 1, v14) == 1)
  {
    sub_100235804(v63, &qword_1005878F0);
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "addEndTone: creating temporary message file failed, will use message without end tone", v67, 2u);
      swift_slowDealloc();
    }

    int64_t v68 = v130;
    v43(v130, (char *)v64, v14);
    os_log_type_t v69 = v129;
    unint64_t v70 = (*((unsigned __int8 *)v129 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v129 + 80);
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = v121;
    *(void *)(v71 + 16) = v126;
    *(void *)(v71 + 24) = v72;
    ((void (*)(unint64_t, char *, uint64_t))v69[4])(v71 + v70, v68, v14);
    uint64_t v136 = sub_10038E5B8;
    uint64_t v137 = v71;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v133 = 1107296256;
    unint64_t v62 = &unk_100517220;
    goto LABEL_18;
  }
  unint64_t v78 = (char *)(v129 + 4);
  long long v118 = (void (*)(char *, uint64_t, uint64_t))v129[4];
  uint64_t v79 = v109;
  v118(v109, v63, v14);
  sub_1001F6204(0, &qword_10058BB30);
  uint64_t v80 = v43;
  uint64_t v81 = v130;
  URL.init(fileURLWithPath:)();
  os_log_type_t v129 = sub_10037DC08();
  v80(v81, v79, v14);
  id v119 = (void (**)(char *, uint64_t))sub_10037DC08();
  uint64_t v82 = type metadata accessor for TaskPriority();
  sub_1001F0530(v110, 1, 1, v82);
  v80(v81, v79, v14);
  v80(v107, v24, v14);
  v80(v108, (char *)v64, v14);
  uint64_t v83 = v78[48];
  uint64_t v84 = (v83 + 48) & ~v83;
  unint64_t v85 = (v84 + v123 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v86 = v14;
  uint64_t v87 = (v83 + v85 + 8) & ~v83;
  unint64_t v88 = (v87 + v123 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v89 = (v88 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = v24;
  uint64_t v90 = (v83 + v89 + 16) & ~v83;
  uint64_t v91 = (char *)swift_allocObject();
  *((void *)v91 + 2) = 0;
  *((void *)v91 + 3) = 0;
  uint64_t v92 = v119;
  *((void *)v91 + 4) = v129;
  *((void *)v91 + 5) = v92;
  uint64_t v93 = &v91[v84];
  uint64_t v94 = (void (*)(char *, char *, uint64_t))v118;
  v118(v93, (uint64_t)v81, v86);
  uint64_t v95 = v127;
  *(void *)&v91[v85] = v127;
  v94(&v91[v87], v107, v86);
  uint64_t v96 = v94;
  uint64_t v97 = &v91[v88];
  unint64_t v98 = v105;
  *(void *)uint64_t v97 = v114;
  *((void *)v97 + 1) = v98;
  uint64_t v99 = &v91[v89];
  uint64_t v100 = v121;
  *(void *)uint64_t v99 = v126;
  *((void *)v99 + 1) = v100;
  v96(&v91[v90], v108, v86);
  swift_bridgeObjectRetain();
  uint64_t v101 = v129;
  uint64_t v102 = v119;
  id v103 = v95;
  swift_retain();
  sub_1002C8468(v110, (uint64_t)&unk_10058BB40, (uint64_t)v91);
  swift_release();

  uint64_t v104 = (uint64_t (*)(char *, uint64_t))v125;
  v125(v109, v86);
  return v104(v111, v86);
}

id sub_100384A90()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultManager];
  sub_100383B50();
  URL.path.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 fileExistsAtPath:v5];

  return v6;
}

uint64_t sub_100384BD0(void *a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v25 = a1;
  uint64_t v28 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void *)&a3[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  uint64_t v18 = v25;
  *(void *)(v17 + v16) = v25;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_10038ECC0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1002C2C88;
  id aBlock[3] = &unk_100517470;
  uint64_t v19 = _Block_copy(aBlock);
  swift_errorRetain();
  id v20 = v18;
  uint64_t v21 = a3;
  static DispatchQoS.unspecified.getter();
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  uint64_t v22 = v26;
  uint64_t v23 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  return swift_release();
}

void sub_100384F78(uint64_t a1, uint64_t a2, NSObject *a3, void *a4)
{
  unint64_t v131 = a4;
  uint64_t v134 = a3;
  uint64_t v138 = a2;
  uint64_t v5 = sub_1001F081C(&qword_1005878F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v122 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v122 - v13;
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v122 - v15;
  uint64_t v133 = type metadata accessor for URL();
  uint64_t v135 = *(void *)(v133 - 8);
  uint64_t v17 = __chkstk_darwin(v133);
  uint64_t v19 = ((char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = ((char *)&v122 - v21);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = ((char *)&v122 - v24);
  __chkstk_darwin(v23);
  uint64_t v27 = ((char *)&v122 - v26);
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = *(uint8_t **)(v28 - 8);
  uint64_t v136 = v28;
  uint64_t v137 = v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v31 = __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  if (a1)
  {
    BOOL v36 = (char *)&v122 - v32;
    uint64_t v132 = v33;
    swift_errorRetain();
    uint64_t v37 = a1;
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_1001F5F88(v38, (uint64_t)qword_100594C28);
    unint64_t v39 = v137;
    unint64_t v40 = (void (*)(char *, uint64_t, uint64_t))*((void *)v137 + 2);
    uint64_t v41 = v136;
    v40(v36, v138, v136);
    swift_errorRetain();
    swift_errorRetain();
    char v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      LODWORD(v135) = v44;
      uint64_t v46 = v45;
      uint64_t v138 = swift_slowAlloc();
      v140[0] = v138;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v134 = v42;
      v141[0] = v37;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v47 = String.init<A>(reflecting:)();
      v141[0] = sub_1002344D8(v47, v48, v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v46 + 12) = 2080;
      v40(v132, (uint64_t)v36, v41);
      uint64_t v49 = String.init<A>(reflecting:)();
      v141[0] = sub_1002344D8(v49, v50, v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v39 + 1))(v36, v41);
      id v51 = v134;
      _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v135, "error (%s) fetching greeting for accountUUID (%s)", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    (*((void (**)(char *, uint64_t))v39 + 1))(v36, v41);
    goto LABEL_23;
  }
  uint64_t v126 = v19;
  id v127 = v8;
  uint64_t v128 = v22;
  os_log_type_t v129 = v25;
  NSString v52 = v134;
  uint64_t v53 = v135;
  uint64_t v130 = v14;
  if (!v134)
  {
LABEL_15:
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    sub_1001F5F88(v64, (uint64_t)qword_100594C28);
    uint64_t v65 = v52;
    char v42 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      v140[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136315138;
      if (v52)
      {
        v141[0] = (uint64_t)v65;
        sub_1001F6204(0, (unint64_t *)&unk_10058BB60);
        int64_t v68 = v65;
        uint64_t v69 = String.init<A>(reflecting:)();
        unint64_t v71 = v70;
      }
      else
      {
        unint64_t v71 = 0xE300000000000000;
        uint64_t v69 = 7104878;
      }
      v141[0] = sub_1002344D8(v69, v71, v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v42, v66, "no greeting url or not custom %s", v67, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_23:

    return;
  }
  uint64_t v54 = (uint64_t)v16;
  uint64_t v124 = v35;
  uint64_t v125 = v34;
  uint64_t v132 = v33;
  os_log_type_t v55 = v134;
  if ([v55 type] != (id)2)
  {

    goto LABEL_15;
  }
  id v56 = [v55 url];
  if (!v56)
  {
    sub_1001F0530((uint64_t)v16, 1, 1, v133);
    goto LABEL_14;
  }
  uint64_t v57 = v56;
  long long v58 = v129;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v59 = *(void (**)(uint64_t, NSObject *, uint64_t))(v53 + 32);
  uint64_t v60 = v133;
  v59(v54, v58, v133);
  sub_1001F0530(v54, 0, 1, v60);
  if (sub_1001F758C(v54, 1, v60) == 1)
  {
LABEL_14:

    sub_100235804(v54, &qword_1005878F0);
    goto LABEL_15;
  }
  uint64_t v61 = v133;
  uint64_t v123 = v59;
  v59((uint64_t)v27, v54, v133);
  uint64_t v62 = (uint64_t)v130;
  sub_1001F0530((uint64_t)v130, 1, 1, v61);
  uint64_t v63 = v138;
  sub_100385FAC(v27, (uint64_t)v11);
  sub_100235804(v62, &qword_1005878F0);
  sub_100273CB0((uint64_t)v11, v62, &qword_1005878F0);
  uint64_t v72 = v127;
  sub_10025E234(v62, (uint64_t)v127, &qword_1005878F0);
  int v73 = sub_1001F758C((uint64_t)v72, 1, v133);
  unint64_t v74 = v128;
  if (v73 == 1)
  {
    sub_100235804((uint64_t)v72, &qword_1005878F0);
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    sub_1001F5F88(v75, (uint64_t)qword_100594C28);
    uint64_t v76 = v135;
    BOOL v77 = *(void (**)(char *, NSObject *, uint64_t))(v135 + 16);
    unint64_t v78 = v126;
    v77((char *)v126, v27, v133);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = v133;
      uint64_t v134 = v27;
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      v140[0] = v138;
      *(_DWORD *)uint64_t v82 = 136315138;
      uint64_t v137 = v82 + 4;
      v77((char *)v129, v78, v81);
      uint64_t v83 = String.init<A>(reflecting:)();
      v141[0] = sub_1002344D8(v83, v84, v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v85 = *(void (**)(char *, uint64_t))(v76 + 8);
      v85((char *)v126, v81);
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "was not able to copy greeting to our store: %s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100235804((uint64_t)v130, &qword_1005878F0);
      v85((char *)v134, v81);
    }
    else
    {

      long long v118 = *(void (**)(char *, uint64_t))(v76 + 8);
      uint64_t v119 = v133;
      v118((char *)v78, v133);
      sub_100235804((uint64_t)v130, &qword_1005878F0);
      v118((char *)v27, v119);
    }
  }
  else
  {
    uint64_t v134 = v27;
    os_log_type_t v129 = v55;
    v123((uint64_t)v128, v72, v133);
    uint64_t v86 = UUID.uuidString.getter();
    uint64_t v87 = v63;
    uint64_t v88 = v86;
    unint64_t v90 = v89;
    uint64_t v92 = v136;
    uint64_t v91 = v137;
    uint64_t v93 = v132;
    id v127 = *((void *)v137 + 2);
    ((void (*)(char *, uint64_t, uint64_t))v127)(v132, v87, v136);
    unint64_t v94 = (v91[80] + 24) & ~(unint64_t)v91[80];
    uint64_t v95 = v91;
    uint64_t v96 = swift_allocObject();
    uint64_t v97 = v131;
    *(void *)(v96 + 16) = v131;
    unint64_t v98 = v95;
    uint64_t v99 = v74;
    (*((void (**)(unint64_t, char *, uint64_t))v98 + 4))(v96 + v94, v93, v92);
    id v100 = v97;
    sub_100383CB4(v88, v90, v74, 1, (uint64_t)sub_10038EC04, v96);
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v101 = type metadata accessor for Logger();
    sub_1001F5F88(v101, (uint64_t)qword_100594C28);
    uint64_t v102 = v125;
    id v103 = (void (*)(uint64_t, uint64_t, uint64_t))v127;
    ((void (*)(uint64_t, uint64_t, uint64_t))v127)(v125, v138, v92);
    id v104 = v100;
    unint64_t v105 = Logger.logObject.getter();
    os_log_type_t v106 = static os_log_type_t.default.getter();
    int v107 = v106;
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v108 = swift_slowAlloc();
      LODWORD(v131) = v107;
      uint64_t v109 = v108;
      uint64_t v138 = swift_slowAlloc();
      v141[0] = v138;
      *(_DWORD *)uint64_t v109 = 136315394;
      v103((uint64_t)v132, v102, v92);
      uint64_t v110 = String.init<A>(reflecting:)();
      uint64_t v111 = v137;
      v140[0] = sub_1002344D8(v110, v112, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*((void (**)(uint64_t, uint64_t))v111 + 1))(v102, v92);
      *(_WORD *)(v109 + 12) = 2080;
      uint64_t v113 = v133;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v114 = Dictionary.description.getter();
      unint64_t v116 = v115;
      swift_bridgeObjectRelease();
      uint64_t v139 = sub_1002344D8(v114, v116, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v131, "Downloaded greeting for account %s greetingsDict=%s", (uint8_t *)v109, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v117 = *(void (**)(NSObject *, uint64_t))(v135 + 8);
      v117(v128, v113);
      sub_100235804((uint64_t)v130, &qword_1005878F0);
      v117(v134, v113);
    }
    else
    {

      (*((void (**)(uint64_t, uint64_t))v137 + 1))(v102, v92);
      id v120 = *(void (**)(NSObject *, uint64_t))(v135 + 8);
      uint64_t v121 = v133;
      v120(v99, v133);
      sub_100235804((uint64_t)v130, &qword_1005878F0);
      v120(v134, v121);
    }
  }
}

uint64_t sub_100385FAC@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  os_log_type_t v66 = a1;
  uint64_t v59 = a2;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v61 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v60 = ((char *)&v56 - v7);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v56 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  sub_100388EA0();
  UUID.uuidString.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v64 = v3;
  uint64_t v65 = *(void (**)(char *, uint64_t))(v3 + 8);
  v65(v13, v2);
  uint64_t v63 = v15;
  sub_100386FB8(v15);
  sub_100383B50();
  unint64_t v16 = self;
  id v17 = [v16 defaultManager];
  URL.path.getter();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v19 = [v17 fileExistsAtPath:v18];

  if (v19)
  {
    id v20 = [v16 defaultManager];
    URL._bridgeToObjectiveC()(v21);
    uint64_t v23 = v22;
    id v68 = 0;
    unsigned int v24 = [v20 removeItemAtURL:v22 error:&v68];

    if (v24)
    {
      id v25 = v68;
    }
    else
    {
      id v26 = v68;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      uint64_t v62 = 0;
    }
  }
  id v27 = [v16 defaultManager];
  URL._bridgeToObjectiveC()(v28);
  uint64_t v30 = v29;
  URL._bridgeToObjectiveC()(v31);
  os_log_type_t v33 = v32;
  id v68 = 0;
  unsigned int v34 = [v27 copyItemAtURL:v30 toURL:v32 error:&v68];

  if (v34)
  {
    uint64_t v35 = qword_100583A10;
    id v36 = v68;
    if (v35 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_1001F5F88(v37, (uint64_t)qword_100594C28);
    uint64_t v38 = *(void (**)(char *, NSObject *, uint64_t))(v64 + 16);
    unint64_t v39 = v60;
    v38((char *)v60, v66, v2);
    unint64_t v40 = v61;
    v38(v61, v10, v2);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    os_log_type_t v66 = v41;
    int v58 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      id v68 = v57;
      *(_DWORD *)uint64_t v43 = 136315394;
      v38(v13, v39, v2);
      uint64_t v44 = String.init<A>(reflecting:)();
      uint64_t v67 = sub_1002344D8(v44, v45, (uint64_t *)&v68);
      id v56 = &v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v65((char *)v60, v2);
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v60 = (v43 + 14);
      uint64_t v46 = v61;
      v38(v13, v61, v2);
      uint64_t v47 = String.init<A>(reflecting:)();
      uint64_t v67 = sub_1002344D8(v47, v48, (uint64_t *)&v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v49 = v65;
      v65(v46, v2);
      unint64_t v50 = v66;
      _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v58, "successfully copied %s to %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v49(v63, v2);
    }
    else
    {

      uint64_t v54 = v65;
      v65(v40, v2);
      v54((char *)v39, v2);
      v54(v63, v2);
    }
    uint64_t v55 = v59;
    (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v59, v10, v2);
    return sub_1001F0530(v55, 0, 1, v2);
  }
  else
  {
    id v51 = v68;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    NSString v52 = (uint64_t (*)(char *, uint64_t))v65;
    v65(v10, v2);
    return v52(v63, v2);
  }
}

uint64_t sub_100386614(uint64_t a1)
{
  uint64_t v3 = sub_1001F081C(&qword_1005878F0);
  uint64_t v4 = sub_100202384(v3);
  __chkstk_darwin(v4);
  sub_1002024D0();
  UUID.uuidString.getter();
  sub_10025E234(a1, v1, &qword_1005878F0);
  swift_beginAccess();
  sub_1002C278C();
  return swift_endAccess();
}

id sub_1003866E4(uint64_t a1, int a2)
{
  int v81 = a2;
  uint64_t v89 = a1;
  uint64_t v75 = type metadata accessor for Locale();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v2 = __chkstk_darwin(v75);
  uint64_t v72 = (char *)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  int v73 = (char *)v71 - v4;
  uint64_t v5 = sub_1001F081C(&qword_100586A10);
  __chkstk_darwin(v5 - 8);
  uint64_t v87 = (uint8_t *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LanguageManager();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v85 = v7;
  *(void *)&long long v86 = v8;
  __chkstk_darwin(v7);
  unint64_t v84 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v79 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v17);
  unint64_t v78 = (char *)v71 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v71 - v21;
  __chkstk_darwin(v20);
  unsigned int v24 = (char *)v71 - v23;
  static URL.temporaryDirectory.getter();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  URL.appendingPathComponent(_:)();
  id v25 = v84;
  swift_bridgeObjectRelease();
  uint64_t v80 = v15;
  uint64_t v26 = v15;
  uint64_t v27 = v85;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v28 = v26 + 8;
  v29(v22, v14);
  uint64_t v88 = v24;
  uint64_t v30 = v24;
  uint64_t v31 = v86;
  uint64_t v32 = (char *)v89;
  sub_100386FB8(v30);
  sub_100387450();
  sub_100386FB8(v22);
  uint64_t v82 = v29;
  uint64_t v83 = v14;
  v29(v22, v14);
  os_log_type_t v33 = *(void (**)(char *))(v31 + 16);
  v71[1] = &v32[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_languageManager];
  v33(v25);
  id result = (id)TUBundle();
  if (result)
  {
    uint64_t v35 = result;
    v36._uint64_t countAndFlagsBits = 0xD000000000000021;
    v36._object = (void *)0x800000010048BD40;
    v37._object = (void *)0x80000001004821B0;
    v37._uint64_t countAndFlagsBits = 0xD000000000000012;
    Swift::String_optional v38 = LanguageManager.localizedString(forKey:table:bundle:languageCode:)(v36, v37, (NSBundle)v35, (Swift::String_optional)0);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v27);
    if (v38.value._object)
    {
      long long v86 = *(_OWORD *)&v32[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_ttsService];
      uint64_t countAndFlagsBits = v38.value._countAndFlagsBits;
      sub_10038747C();
      unint64_t v39 = &v32[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsChecksums];
      swift_beginAccess();
      unint64_t v40 = sub_100204074(v39, *((void *)v39 + 3));
      long long v41 = *((_OWORD *)v40 + 1);
      v91[0] = *(_OWORD *)v40;
      v91[1] = v41;
      uint64_t v92 = v40[4];
      object = v38.value._object;
      LODWORD(v84) = sub_100358820(v38.value._countAndFlagsBits, (unint64_t)v38.value._object);
      uint64_t v42 = type metadata accessor for TaskPriority();
      sub_1001F0530((uint64_t)v87, 1, 1, v42);
      uint64_t v85 = v28;
      uint64_t v43 = v80;
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
      unint64_t v45 = v78;
      uint64_t v46 = v83;
      v44(v78, v88, v83);
      uint64_t v47 = v79;
      v44(v79, v22, v46);
      uint64_t v48 = *(unsigned __int8 *)(v43 + 80);
      uint64_t v49 = (v48 + 64) & ~v48;
      uint64_t v50 = (v16 + v48 + v49) & ~v48;
      uint64_t v51 = v50 + v16;
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = 0;
      *(void *)(v52 + 24) = 0;
      *(_OWORD *)(v52 + 32) = v86;
      uint64_t v53 = object;
      *(void *)(v52 + 48) = countAndFlagsBits;
      *(void *)(v52 + 56) = v53;
      uint64_t v54 = v52 + v49;
      uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
      v55(v54, v45, v46);
      v55(v52 + v50, v47, v46);
      id v56 = (unsigned char *)(v52 + v51);
      unsigned char *v56 = v84 & 1;
      v56[1] = v81 & 1;
      uint64_t v57 = (void *)v89;
      *(void *)(v52 + ((v51 + 9) & 0xFFFFFFFFFFFFFFF8)) = v89;
      id v58 = v57;
      swift_unknownObjectRetain();
      sub_10037DAC8((uint64_t)v87, (uint64_t)&unk_10058BB18, v52);
      swift_release();
      uint64_t v59 = (uint64_t (*)(char *, uint64_t))v82;
      v82(v22, v46);
      return (id)v59(v88, v46);
    }
    else
    {
      if (qword_100583A10 != -1) {
        swift_once();
      }
      uint64_t v60 = type metadata accessor for Logger();
      sub_1001F5F88(v60, (uint64_t)qword_100594C28);
      uint64_t v61 = v32;
      uint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v85 = v28;
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(void *)&v91[0] = v89;
        *(_DWORD *)uint64_t v64 = 136315138;
        uint64_t v87 = v64 + 4;
        uint64_t v65 = v73;
        LanguageManager.locale.getter();
        uint64_t v66 = v74;
        uint64_t v67 = v75;
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v65, v75);
        uint64_t v68 = String.init<A>(reflecting:)();
        unint64_t v70 = v69;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
        uint64_t v90 = sub_1002344D8(v68, v70, (uint64_t *)v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Unable to localize greeting for locale %s. Not creating an outgoing message", v64, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      return (id)((uint64_t (*)(char *, uint64_t))v82)(v88, v83);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100386FB8(char *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v9 = self;
  id v10 = [v9 defaultManager];
  URL.absoluteString.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v12 = [v10 fileExistsAtPath:v11];

  if ((v12 & 1) == 0)
  {
    id v13 = [v9 defaultManager];
    URL._bridgeToObjectiveC()(v14);
    uint64_t v16 = v15;
    id v39 = 0;
    unsigned int v17 = [v13 createDirectoryAtURL:v15 withIntermediateDirectories:1 attributes:0 error:&v39];

    id v18 = v39;
    if (v17)
    {
      id v19 = v18;
    }
    else
    {
      id v37 = v39;
      id v20 = v39;
      uint64_t v21 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_100583A10 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_1001F5F88(v22, (uint64_t)qword_100594C28);
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
      v23(v8, a1, v2);
      swift_errorRetain();
      swift_errorRetain();
      unsigned int v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        int v36 = v26;
        uint64_t v28 = v27;
        id v37 = (id)swift_slowAlloc();
        uint64_t v38 = v21;
        id v39 = v37;
        *(_DWORD *)uint64_t v28 = 136315394;
        unsigned int v34 = v23;
        swift_errorRetain();
        sub_1001F081C((uint64_t *)&unk_100585FE0);
        uint64_t v29 = String.init<A>(reflecting:)();
        os_log_t v35 = v24;
        uint64_t v38 = sub_1002344D8(v29, v30, (uint64_t *)&v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v28 + 12) = 2080;
        v34(v6, v8, v2);
        uint64_t v31 = String.init<A>(reflecting:)();
        uint64_t v38 = sub_1002344D8(v31, v32, (uint64_t *)&v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        os_log_t v33 = v35;
        _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v36, "Received an error (%s creating %s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
    }
  }
}

void sub_100387450()
{
}

void sub_10038747C()
{
  sub_1002E79A4();
  uint64_t v1 = v0;
  type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v3 = __chkstk_darwin(v2);
  v1(v3);
  URL.appendingPathComponent(_:)();
  sub_100235D38();
  v4();
  sub_1002E7968();
}

uint64_t sub_100387540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = v16;
  v7[14] = v17;
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v7[15] = v8;
  v7[16] = *(void *)(v8 - 8);
  v7[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v7[18] = v9;
  v7[19] = *(void *)(v9 - 8);
  v7[20] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  v7[21] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v7[22] = v11;
  v7[23] = *(void *)(v11 + 64);
  v7[24] = swift_task_alloc();
  uint64_t v14 = (uint64_t (__cdecl *)())((char *)&dword_10058BB20 + dword_10058BB20);
  unsigned __int8 v12 = (void *)swift_task_alloc();
  v7[25] = v12;
  *unsigned __int8 v12 = v7;
  v12[1] = sub_10038775C;
  return v14();
}

uint64_t sub_10038775C()
{
  sub_10038FA50();
  char v3 = v2;
  sub_1001F63B4();
  uint64_t v5 = v4;
  sub_1001F6424();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_10023D230();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001F643C();
    return v9();
  }
  else
  {
    *(unsigned char *)(v5 + 208) = v3 & 1;
    sub_1001F6430();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_100387888()
{
  char v18 = *(unsigned char *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v5 = *(void **)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 88);
  long long v19 = *(_OWORD *)(v0 + 72);
  sub_10024640C();
  v8();
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v18;
  *(void *)(v11 + 24) = v5;
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11 + v9, v1, v4);
  *(_OWORD *)(v11 + v10) = v19;
  *(void *)(v0 + 48) = sub_10038E53C;
  *(void *)(v0 + 56) = v11;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1002C2C88;
  *(void *)(v0 + 40) = &unk_1005171A8;
  uint64_t v12 = _Block_copy((const void *)(v0 + 16));
  id v13 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  *(void *)(v0 + 64) = _swiftEmptyArrayStorage;
  sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  sub_1001F7664();
  v14();
  sub_1001F7664();
  v15();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001F643C();
  return v16();
}

uint64_t sub_100387B48(char a1, char *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v10 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_opt_class_meths = &OBJC_PROTOCOL___TUMomentsControllerDelegate.opt_class_meths;
  if (a1)
  {
    uint64_t v14 = (uint64_t)&a2[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsChecksums];
    swift_beginAccess();
    uint64_t v15 = *(void *)(v14 + 24);
    uint64_t v16 = *(void *)(v14 + 32);
    sub_10020EF04(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(a3, a4, v15, v16);
    swift_endAccess();
  }
  uint64_t v17 = type metadata accessor for URL();
  (*(void (**)(char *, NSObject *, uint64_t))(*(void *)(v17 - 8) + 16))(v12, a5, v17);
  sub_1001F0530((uint64_t)v12, 0, 1, v17);
  char v18 = (uint64_t *)&a2[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict];
  swift_beginAccess();
  sub_1002C278C();
  swift_endAccess();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1001F5F88(v19, (uint64_t)qword_100594C28);
  uint64_t v20 = a2;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    int v36 = a5;
    v37[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    v35[1] = v23 + 4;
    swift_beginAccess();
    sub_1002233BC(0x746C7561666564, 0xE700000000000000, *v18);
    swift_endAccess();
    uint64_t v25 = sub_1001FCDEC((uint64_t)v12);
    char v26 = a1;
    unint64_t v28 = v27;
    sub_100235804((uint64_t)v12, &qword_1005878F0);
    *(void *)&long long v38 = sub_1002344D8(v25, v28, v37);
    a5 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v26;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___TUMomentsControllerDelegate + 48);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v21, v22, "before add endtone the greeting is %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v29 = (void *)((char *)p_opt_class_meths[316] + (void)v20);
  swift_beginAccess();
  unint64_t v30 = sub_100204074(v29, v29[3]);
  long long v38 = *(_OWORD *)v30;
  long long v39 = *((_OWORD *)v30 + 1);
  uint64_t v40 = v30[4];
  char v31 = a1 | sub_100358604(0x746C7561666564, 0xE700000000000000);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v20;
  os_log_t v33 = v20;
  sub_100383CB4(0x746C7561666564, 0xE700000000000000, a5, v31 & 1, (uint64_t)sub_10038E5AC, v32);
  return swift_release();
}

void sub_100387F74(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10025E234(a1, (uint64_t)v6, &qword_1005878F0);
  uint64_t v7 = (uint64_t *)&a2[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict];
  swift_beginAccess();
  sub_1002C278C();
  swift_endAccess();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1001F5F88(v8, (uint64_t)qword_100594C28);
  unint64_t v9 = a2;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_beginAccess();
    sub_1002233BC(0x746C7561666564, 0xE700000000000000, *v7);
    swift_endAccess();
    uint64_t v13 = sub_1001FCDEC((uint64_t)v6);
    unint64_t v15 = v14;
    sub_100235804((uint64_t)v6, &qword_1005878F0);
    v16[1] = sub_1002344D8(v13, v15, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "after add endtone the greeting is %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10038821C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16))
  {
    swift_bridgeObjectRetain();
    sub_100233664();
    char v6 = v5;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  *a2 = v6 & 1;
  return result;
}

void sub_1003882C4()
{
}

uint64_t sub_10038841C()
{
  return type metadata accessor for GreetingsDataSource();
}

uint64_t type metadata accessor for GreetingsDataSource()
{
  uint64_t result = qword_10058BA40;
  if (!qword_10058BA40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10038846C()
{
  uint64_t result = type metadata accessor for LanguageManager();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100388554()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)v46 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v46 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v46 - v11;
  sub_100388EA0();
  URL.appendingPathComponent(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v52 = v10;
  uint64_t v54 = v13;
  v13(v10, v0);
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_1001F5F88(v14, (uint64_t)qword_100594C28);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v16(v7, v12, v0);
  uint64_t v49 = v15;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v53 = v1 + 8;
  uint64_t v50 = v16;
  uint64_t v51 = v1 + 16;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v4;
    uint64_t v21 = (uint8_t *)v20;
    os_log_type_t v22 = (void *)swift_slowAlloc();
    uint64_t v48 = v12;
    v46[1] = v22;
    id v56 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    v16(v52, v7, v0);
    uint64_t v23 = String.init<A>(reflecting:)();
    uint64_t v55 = sub_1002344D8(v23, v24, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v54(v7, v0);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "removing directory %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v48;
    swift_slowDealloc();
    uint64_t v4 = v47;
    swift_slowDealloc();
  }
  else
  {
    v54(v7, v0);
  }

  id v25 = [self defaultManager];
  URL._bridgeToObjectiveC()(v26);
  unint64_t v28 = v27;
  id v56 = 0;
  unsigned int v29 = [v25 removeItemAtURL:v27 error:&v56];

  if (v29)
  {
    id v30 = v56;
    return ((uint64_t (*)(char *, uint64_t))v54)(v12, v0);
  }
  else
  {
    id v32 = v56;
    uint64_t v33 = _convertNSErrorToError(_:)();

    swift_willThrow();
    unsigned int v34 = v50;
    v50(v4, v12, v0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      LODWORD(v49) = v37;
      uint64_t v39 = v38;
      uint64_t v48 = (char *)swift_slowAlloc();
      id v56 = v48;
      *(_DWORD *)uint64_t v39 = 136315394;
      v34(v52, v4, v0);
      uint64_t v40 = String.init<A>(reflecting:)();
      uint64_t v55 = sub_1002344D8(v40, v41, (uint64_t *)&v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v42 = (uint64_t (*)(char *, uint64_t))v54;
      v54(v4, v0);
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v55 = v33;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v43 = String.init<A>(reflecting:)();
      uint64_t v55 = sub_1002344D8(v43, v44, (uint64_t *)&v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v49, "removing directory %s returned an error: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return v42(v12, v0);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      unint64_t v45 = (uint64_t (*)(char *, uint64_t))v54;
      v54(v4, v0);
      swift_errorRelease();
      return v45(v12, v0);
    }
  }
}

void sub_100388B8C()
{
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = sub_1002466F4(v1, (uint64_t)qword_100594C28);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (sub_100246418(v3))
  {
    uint64_t v4 = (uint8_t *)sub_100246544();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v0, "subscriptionsDidChange", v4, 2u);
    sub_1001F63CC();
  }

  sub_100380D5C();
}

unint64_t sub_100388D4C()
{
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1001F5F88(v0, (uint64_t)qword_100594C28);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "handleVMAccountsDidChange", v3, 2u);
    swift_slowDealloc();
  }

  return sub_100382E04();
}

uint64_t sub_100388EA0()
{
  uint64_t v0 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v0 - 8);
  os_log_type_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultManager];
  id v4 = [v3 URLsForDirectory:5 inDomains:1];

  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100246A68(v6, (uint64_t)v2);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1001F758C((uint64_t)v2, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100241468();
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
  }
  return result;
}

uint64_t sub_100389004@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v76 = a1;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (***)(uint64_t, char *, uint64_t))(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v69 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v70 = (char *)v66 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v66 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v66 - v16;
  __chkstk_darwin(v15);
  BOOL v19 = (char *)v66 - v18;
  static URL.temporaryDirectory.getter();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  unint64_t v71 = v7;
  uint64_t v20 = v7[1];
  uint64_t v68 = v17;
  uint64_t v74 = v20;
  uint64_t v75 = v6;
  ((void (*)(char *, uint64_t))v20)(v17, v6);
  sub_100386FB8(v19);
  URL.lastPathComponent.getter();
  uint64_t v72 = v19;
  uint64_t v21 = v14;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  os_log_type_t v22 = self;
  id v23 = [v22 defaultManager];
  URL._bridgeToObjectiveC()(v24);
  char v26 = v25;
  unint64_t v78 = 0;
  unsigned int v27 = [v23 removeItemAtURL:v25 error:&v78];

  if (v27)
  {
    unint64_t v28 = v78;
  }
  else
  {
    unsigned int v29 = v78;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  id v30 = [v22 defaultManager];
  URL._bridgeToObjectiveC()(v31);
  uint64_t v33 = v32;
  URL._bridgeToObjectiveC()(v34);
  os_log_type_t v36 = v35;
  unint64_t v78 = 0;
  unsigned int v37 = [v30 copyItemAtURL:v33 toURL:v35 error:&v78];

  uint64_t v39 = v70;
  uint64_t v38 = v71;
  if (v37)
  {
    uint64_t v40 = v78;
    uint64_t v41 = v75;
    ((void (*)(char *, uint64_t))v74)(v72, v75);
    uint64_t v42 = v73;
    v38[4](v73, v21, v41);
    uint64_t v43 = 0;
  }
  else
  {
    unint64_t v44 = v78;
    uint64_t v45 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v41 = v75;
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_1001F5F88(v46, (uint64_t)qword_100594C28);
    uint64_t v47 = v38[2];
    v47((uint64_t)v39, (char *)v76, v41);
    uint64_t v48 = v69;
    v47((uint64_t)v69, v21, v41);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    int v51 = v50;
    uint64_t v76 = v49;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      unint64_t v71 = (void (**)(uint64_t, char *, uint64_t))swift_slowAlloc();
      unint64_t v78 = v71;
      *(_DWORD *)uint64_t v52 = 136315650;
      v66[1] = v52 + 4;
      int v67 = v51;
      uint64_t v53 = v68;
      v47((uint64_t)v68, v39, v41);
      uint64_t v54 = String.init<A>(reflecting:)();
      uint64_t v77 = sub_1002344D8(v54, v55, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v74)(v39, v75);
      *(_WORD *)(v52 + 12) = 2080;
      unint64_t v70 = (char *)(v52 + 14);
      id v56 = v69;
      v47((uint64_t)v53, v69, v75);
      uint64_t v57 = String.init<A>(reflecting:)();
      uint64_t v77 = sub_1002344D8(v57, v58, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v59 = v56;
      uint64_t v60 = v74;
      ((void (*)(char *, uint64_t))v74)(v59, v75);
      *(_WORD *)(v52 + 22) = 2080;
      uint64_t v77 = v45;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v61 = String.init<A>(reflecting:)();
      uint64_t v77 = sub_1002344D8(v61, v62, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v41 = v75;
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_type_t v63 = v76;
      _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v67, "Error copying file (%s to temp location (%s): %s", (uint8_t *)v52, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      ((void (*)(char *, uint64_t))v60)(v21, v41);
      ((void (*)(char *, uint64_t))v60)(v72, v41);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      uint64_t v64 = v74;
      ((void (*)(char *, uint64_t))v74)(v48, v41);
      ((void (*)(char *, uint64_t))v64)(v39, v41);
      swift_errorRelease();
      ((void (*)(char *, uint64_t))v64)(v21, v41);
      ((void (*)(char *, uint64_t))v64)(v72, v41);
    }
    uint64_t v43 = 1;
    uint64_t v42 = v73;
  }
  return sub_1001F0530(v42, v43, 1, v41);
}

void sub_100389784(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v42 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v8 = &v40[-v7];
  uint64_t v9 = self;
  id v10 = [v9 defaultManager];
  URL._bridgeToObjectiveC()(v11);
  uint64_t v13 = v12;
  id v45 = 0;
  unsigned int v14 = [v10 removeItemAtURL:v12 error:&v45];

  if (v14)
  {
    id v15 = v45;
  }
  else
  {
    id v16 = v45;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  id v17 = [v9 defaultManager];
  URL._bridgeToObjectiveC()(v18);
  uint64_t v20 = v19;
  URL._bridgeToObjectiveC()(v21);
  id v23 = v22;
  id v45 = 0;
  unsigned int v24 = [v17 copyItemAtURL:v20 toURL:v22 error:&v45];

  id v25 = v45;
  if (v24)
  {
    id v26 = v25;
  }
  else
  {
    id v43 = v45;
    id v27 = v45;
    uint64_t v28 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_1001F5F88(v29, (uint64_t)qword_100594C28);
    id v30 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
    v30(v8, a2, v3);
    swift_errorRetain();
    swift_errorRetain();
    char v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v41 = v33;
      uint64_t v35 = v34;
      id v43 = (id)swift_slowAlloc();
      id v45 = v43;
      *(_DWORD *)uint64_t v35 = 136315394;
      v30(v42, (uint64_t)v8, v3);
      uint64_t v36 = String.init<A>(reflecting:)();
      uint64_t v44 = sub_1002344D8(v36, v37, (uint64_t *)&v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v8, v3);
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v44 = v28;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v38 = String.init<A>(reflecting:)();
      uint64_t v44 = sub_1002344D8(v38, v39, (uint64_t *)&v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v41, "Error copying completed greeting to %s: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v8, v3);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100389C54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t))
{
  uint64_t v66 = a4;
  uint64_t v67 = a1;
  uint64_t v69 = a2;
  uint64_t v4 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v68 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v58 = (char *)&v57 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  unsigned int v14 = (char *)&v57 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v57 - v16;
  __chkstk_darwin(v15);
  BOOL v19 = (char *)&v57 - v18;
  sub_100388554();
  sub_100388EA0();
  URL.appendingPathComponent(_:)();
  uint64_t v69 = v7;
  os_log_type_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v21 = v7 + 8;
  uint64_t v20 = v22;
  v22(v17, v6);
  sub_100388EA0();
  URL.appendingPathComponent(_:)();
  id v23 = v17;
  unsigned int v24 = v14;
  uint64_t v25 = v6;
  v22(v23, v6);
  sub_100386FB8(v24);
  id v64 = self;
  id v26 = [v64 defaultManager];
  URL._bridgeToObjectiveC()(v27);
  uint64_t v29 = v28;
  id v70 = 0;
  id v30 = [v26 contentsOfDirectoryAtURL:v28 includingPropertiesForKeys:0 options:0 error:&v70];

  id v31 = v70;
  if (v30)
  {
    uint64_t v66 = v20;
    uint64_t v67 = v21;
    uint64_t v57 = v19;
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = v31;

    uint64_t v59 = v32;
    uint64_t v34 = *(void *)(v32 + 16);
    uint64_t v35 = v58;
    uint64_t v36 = v25;
    if (v34)
    {
      unint64_t v37 = *(void (**)(uint64_t, unint64_t, uint64_t))(v69 + 16);
      unint64_t v62 = v24;
      os_log_type_t v63 = v37;
      unint64_t v38 = v59 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
      uint64_t v39 = *(void *)(v69 + 72);
      v69 += 16;
      uint64_t v60 = v39;
      uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v69 + 16);
      uint64_t v40 = v65;
      while (1)
      {
        uint64_t v41 = v68;
        v63(v68, v38, v36);
        sub_1001F0530(v41, 0, 1, v36);
        if (sub_1001F758C(v41, 1, v36) == 1) {
          break;
        }
        (*v61)(v35, v41, v36);
        URL.lastPathComponent.getter();
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        id v42 = [v64 defaultManager];
        URL._bridgeToObjectiveC()(v43);
        id v45 = v44;
        URL._bridgeToObjectiveC()(v46);
        uint64_t v48 = v47;
        id v70 = 0;
        unsigned int v49 = [v42 copyItemAtURL:v45 toURL:v47 error:&v70];

        if (!v49)
        {
          id v55 = v70;
          swift_bridgeObjectRelease();
          _convertNSErrorToError(_:)();

          swift_willThrow();
          id v56 = v66;
          v66(v40, v36);
          v56(v35, v36);
          v56(v62, v36);
          return ((uint64_t (*)(char *, uint64_t))v56)(v57, v36);
        }
        id v50 = v70;
        int v51 = v66;
        v66(v40, v36);
        v51(v35, v36);
        v38 += v60;
        --v34;
        unsigned int v24 = v62;
        if (!v34) {
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      sub_1001F0530(v68, 1, 1, v36);
    }
    swift_bridgeObjectRelease();
    uint64_t v52 = (uint64_t (*)(char *, uint64_t))v66;
    v66(v24, v36);
    return v52(v57, v36);
  }
  else
  {
    id v54 = v70;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v20(v24, v25);
    return ((uint64_t (*)(char *, uint64_t))v20)(v19, v25);
  }
}

uint64_t sub_10038A1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 824) = v17;
  *(_OWORD *)(v8 + 808) = v16;
  *(_OWORD *)(v8 + 792) = v15;
  *(void *)(v8 + 784) = a8;
  *(void *)(v8 + 776) = a7;
  *(void *)(v8 + 768) = a6;
  *(void *)(v8 + 760) = a5;
  *(void *)(v8 + 752) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 832) = v9;
  *(void *)(v8 + 840) = *(void *)(v9 - 8);
  *(void *)(v8 + 848) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 856) = v10;
  *(void *)(v8 + 864) = *(void *)(v10 - 8);
  *(void *)(v8 + 872) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  *(void *)(v8 + 880) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 888) = v12;
  *(void *)(v8 + 896) = *(void *)(v12 + 64);
  *(void *)(v8 + 904) = swift_task_alloc();
  *(void *)(v8 + 912) = swift_task_alloc();
  *(void *)(v8 + 920) = swift_task_alloc();
  return _swift_task_switch(sub_10038A3E0, 0, 0);
}

uint64_t sub_10038A3E0()
{
  sub_1002468E8();
  sub_100246768();
  uint64_t v1 = (void *)v0[94];
  v0[116] = AVMediaTypeAudio;
  v0[10] = v0;
  v0[15] = v0 + 86;
  v0[11] = sub_10038A51C;
  v0[66] = swift_continuation_init();
  v0[62] = _NSConcreteStackBlock;
  v0[63] = 0x40000000;
  v0[64] = sub_10037DC9C;
  v0[65] = &unk_1005172C0;
  [v1 loadTracksWithMediaType:AVMediaTypeAudio completionHandler:v0 + 62];
  sub_1002469C8();
  return _swift_continuation_await(v2);
}

uint64_t sub_10038A51C()
{
  sub_1001F640C();
  sub_1001F63B4();
  sub_1001F6424();
  void *v2 = v1;
  void *v2 = *v0;
  *(void *)(v1 + 936) = *(void *)(v3 + 112);
  sub_1001F6430();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10038A628()
{
  unint64_t v1 = v0[86];
  if (v1 >> 62)
  {
    sub_100246970();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_1002DE19C(0, (v1 & 0xC000000000000001) == 0, v1);
    if ((v1 & 0xC000000000000001) != 0) {
      id v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v2 = *(id *)(v1 + 32);
    }
    v0[118] = v2;
    uint64_t v3 = v0[116];
    uint64_t v4 = (void *)v0[95];
    swift_bridgeObjectRelease();
    v0[18] = v0;
    v0[23] = v0 + 92;
    v0[19] = sub_10038A8D0;
    v0[71] = swift_continuation_init();
    v0[67] = _NSConcreteStackBlock;
    v0[68] = 0x40000000;
    v0[69] = sub_10037DC9C;
    v0[70] = &unk_1005172D8;
    [v4 loadTracksWithMediaType:v3 completionHandler:v0 + 67];
    return _swift_continuation_await(v0 + 18);
  }
  swift_bridgeObjectRelease();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = (void *)sub_1002466F4(v6, (uint64_t)qword_100594C28);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_100246484(v8))
  {
    uint64_t v9 = (_WORD *)sub_100246544();
    sub_100246668(v9);
    sub_1002463AC((void *)&_mh_execute_header, v10, v11, "addEndTone: cannot create tracks for tone or messge, will use message without end tone");
    sub_1001F63CC();
  }

  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100246844();
  return v12();
}

uint64_t sub_10038A8D0()
{
  sub_1001F640C();
  sub_1001F63B4();
  sub_1001F6424();
  void *v2 = v1;
  void *v2 = *v0;
  *(void *)(v1 + 952) = *(void *)(v3 + 176);
  sub_1001F6430();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10038A9DC()
{
  uint64_t v103 = v0;
  unint64_t v4 = *(void *)(v0 + 736);
  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_30:

    swift_bridgeObjectRelease();
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    uint64_t v85 = (void *)sub_1002466F4(v84, (uint64_t)qword_100594C28);
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (sub_100246484(v86))
    {
      uint64_t v87 = (_WORD *)sub_100246544();
      sub_100246668(v87);
      sub_1002463AC((void *)&_mh_execute_header, v88, v89, "addEndTone: cannot create tracks for tone or messge, will use message without end tone");
      sub_1001F63CC();
    }

LABEL_35:
    sub_10038F6E8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100246834();
    sub_1002464A0();
    __asm { BRAA            X1, X16 }
  }
  sub_100246970();
  uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v83) {
    goto LABEL_30;
  }
LABEL_3:
  sub_1002DE19C(0, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0) {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v5 = *(id *)(v4 + 32);
  }
  *(void *)(v0 + 960) = v5;
  uint64_t v6 = *(void *)(v0 + 928);
  swift_bridgeObjectRelease();
  id v7 = [objc_allocWithZone((Class)AVMutableComposition) init];
  *(void *)(v0 + 968) = v7;
  id v8 = [v7 addMutableTrackWithMediaType:v6 preferredTrackID:0x7FFFFFFFLL];
  *(void *)(v0 + 976) = v8;
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1001F081C(&qword_100585D88);
    id v10 = v9;
    *(void *)(v0 + 984) = static AVPartialAsyncProperty<A>.timeRange.getter();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 992) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10038B48C;
    sub_1002464A0();
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v12, v13);
  }
  long long v15 = *(void **)(v0 + 968);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v16 = objc_allocWithZone((Class)AVAssetExportSession);
  id v17 = sub_10038E1CC(v15);
  *(void *)(v0 + 1096) = v17;
  if (!v17)
  {
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    id v30 = (void *)sub_1002466F4(v29, (uint64_t)qword_100594C28);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (sub_100246484(v31))
    {
      uint64_t v32 = (_WORD *)sub_100246544();
      sub_100246668(v32);
      sub_1002463AC((void *)&_mh_execute_header, v33, v34, "addEndTone: failed to create exportSession");
      sub_1001F63CC();
    }

    sub_10038F8C8();
    id v35 = [self defaultManager];
    URL.path.getter();
    String._bridgeToObjectiveC()();
    uint64_t v36 = sub_1002469FC();
    id v37 = sub_100246990(v36, "fileExistsAtPath:");

    sub_10038F82C();
    sub_10038F95C();
    if (v37)
    {
      uint64_t v38 = sub_10038F70C();
      v39(v38);
      sub_10038F780();
      uint64_t v40 = (void *)swift_allocObject();
      id v40[2] = v3;
      v40[3] = v2;
      v40[4] = v16;
      uint64_t v41 = sub_10038F748((uint64_t)v40);
      uint64_t v43 = v42(v41);
      sub_10038F940(v43, v44, v45, v46, v47, v48, v49, v50, v93, v94, v95);
      *(void *)(v0 + 288) = sub_10038EADC;
      *(void *)(v0 + 296) = v40;
      *(void *)(v0 + 256) = _NSConcreteStackBlock;
      *(void *)(v0 + 264) = 1107296256;
      *(void *)(v0 + 272) = sub_1002C2C88;
      *(void *)(v0 + 280) = &unk_100517368;
      int v51 = _Block_copy(aBlock);
      id v52 = v3;
      swift_bridgeObjectRetain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 712) = _swiftEmptyArrayStorage;
      sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_10038F7C4();
      sub_10038F99C();

      _Block_release(v51);
    }
    else
    {
      uint64_t v76 = sub_10038F798();
      v77(v76);
      sub_10038F780();
      uint64_t v78 = swift_allocObject();
      uint64_t v79 = sub_10038F748(v78);
      v80(v79);
      int v81 = (void *)(v78 + v1);
      void *v81 = v37;
      v81[1] = v2;
      *(void *)(v0 + 384) = sub_10038E9D4;
      *(void *)(v0 + 392) = v78;
      *(void *)(v0 + 352) = _NSConcreteStackBlock;
      *(void *)(v0 + 360) = 1107296256;
      *(void *)(v0 + 368) = sub_1002C2C88;
      *(void *)(v0 + 376) = &unk_100517318;
      uint64_t v82 = _Block_copy(v16);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 720) = _swiftEmptyArrayStorage;
      sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_10038F7F8();
      sub_10038F890();

      _Block_release(v82);
    }
    sub_1001F7664();
    v53();
    sub_1001F7664();
    v54();
    swift_release();
    goto LABEL_35;
  }
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v0 + 888);
  URL.deletingLastPathComponent()();
  URL.appendingPathComponent(_:)();
  uint64_t v20 = *(void (**)(void))(v19 + 8);
  *(void *)(v0 + 1104) = v20;
  *(void *)(v0 + 1112) = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  sub_10026B7C0();
  v20();
  uint64_t v21 = self;
  *(void *)(v0 + 1120) = v21;
  id v22 = [v21 defaultManager];
  URL._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  *(void *)(v0 + 704) = 0;
  unsigned __int8 v26 = [v22 removeItemAtURL:v24 error:v0 + 704];

  id v27 = *(void **)(v0 + 704);
  if (v26)
  {
    id v28 = v27;
  }
  else
  {
    id v55 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v56 = *(void *)(v0 + 920);
  uint64_t v57 = *(void *)(v0 + 904);
  uint64_t v58 = *(void *)(v0 + 888);
  uint64_t v59 = *(void *)(v0 + 880);
  uint64_t v60 = type metadata accessor for Logger();
  *(void *)(v0 + 1128) = sub_1001F5F88(v60, (uint64_t)qword_100594C28);
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
  v61(v57, v56, v59);
  unint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (sub_100246418(v63))
  {
    uint64_t v64 = *(void *)(v0 + 912);
    uint64_t v65 = *(void *)(v0 + 904);
    uint64_t v101 = v18;
    uint64_t v66 = *(void *)(v0 + 880);
    uint64_t v67 = (uint8_t *)sub_100235B18();
    uint64_t v102 = sub_100202470();
    *(_DWORD *)uint64_t v67 = 136315138;
    v61(v64, v65, v66);
    uint64_t v68 = String.init<A>(reflecting:)();
    *(void *)(v0 + 664) = sub_1002344D8(v68, v69, &v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = v101;
    sub_1001F7664();
    v70();
    _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v57, "addEndTone: writing tone file to: %s", v67, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    ((void (*)(void, void))v20)(*(void *)(v0 + 904), *(void *)(v0 + 880));
  }

  URL._bridgeToObjectiveC()(v71);
  uint64_t v73 = v72;
  [v18 setOutputURL:v72];

  [v18 setOutputFileType:AVFileTypeAppleM4A];
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_10038C7B8;
  *(void *)(v0 + 608) = swift_continuation_init();
  *(void *)(v0 + 576) = _NSConcreteStackBlock;
  *(void *)(v0 + 584) = 0x40000000;
  *(void *)(v0 + 592) = sub_10037DDB4;
  *(void *)(v0 + 600) = &unk_100517390;
  [v18 exportAsynchronouslyWithCompletionHandler:v0 + 576];
  sub_1002464A0();
  return _swift_continuation_await(v74);
}

uint64_t sub_10038B48C()
{
  sub_1002468E8();
  sub_100246768();
  sub_10038F764();
  uint64_t v3 = v2;
  sub_10023D230();
  *unint64_t v4 = v3;
  *unint64_t v4 = *v1;
  *(void *)(v3 + 1000) = v0;
  swift_task_dealloc();
  if (v0) {

  }
  swift_release();
  sub_1001F6430();
  sub_1002469C8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_10038B5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_100246604();
  sub_100246964();
  *(void *)(v18 + 208) = *(void *)(v18 + 304);
  uint64_t v19 = *(void **)(v18 + 976);
  uint64_t v20 = *(void *)(v18 + 960);
  uint64_t v21 = *(void *)(v18 + 344);
  CMTimeEpoch epoch = kCMTimeZero.epoch;
  *(void *)(v18 + 728) = 0;
  *(void *)(v18 + 216) = *(void *)(v18 + 312);
  *(_OWORD *)(v18 + 224) = *(_OWORD *)(v18 + 320);
  *(void *)(v18 + 240) = *(void *)(v18 + 336);
  *(void *)(v18 + 248) = v21;
  *(void *)(v18 + 640) = kCMTimeZero.value;
  *(void *)(v18 + 648) = *(void *)&kCMTimeZero.timescale;
  *(void *)(v18 + 656) = epoch;
  unsigned int v23 = [v19 insertTimeRange:v18 + 208 ofTrack:v20 atTime:v18 + 640 error:v18 + 728];

  id v24 = *(id *)(v18 + 728);
  if (v23)
  {
    uint64_t v25 = *(void **)(v18 + 976);
    *(void *)(v18 + 1008) = sub_1001F081C(&qword_100585D88);
    id v26 = v25;
    *(void *)(v18 + 1016) = static AVPartialAsyncProperty<A>.timeRange.getter();
    id v27 = (void *)swift_task_alloc();
    *(void *)(v18 + 1024) = v27;
    void *v27 = v18;
    v27[1] = sub_10038B938;
    sub_1002464BC();
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v28, v29);
  }
  else
  {
    os_log_type_t v31 = v24;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100246808(v32, (uint64_t)qword_100594C28);
    swift_errorRetain();
    uint64_t v33 = (void *)Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    BOOL v35 = sub_100246418(v34);
    uint64_t v36 = *(void **)(v18 + 976);
    id v37 = *(void **)(v18 + 968);
    uint64_t v38 = *(void **)(v18 + 960);
    uint64_t v39 = *(void **)(v18 + 944);
    if (v35)
    {
      a12 = *(void **)(v18 + 968);
      a9 = v18 + 680;
      sub_100235B18();
      sub_100202470();
      sub_1002466A8();
      a10 = v39;
      sub_100246434(4.8149e-34);
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v40 = sub_100246A20();
      *(void *)(v18 + 680) = sub_100246A50(v40, v41, v42, v43, v44, v45, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_100246500((void *)&_mh_execute_header, v47, v48, "addEndTone: cannot combine tracks, will use message without end tone: %s");
      sub_1002466B8();
      sub_1001F63CC();
      sub_1001F63CC();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    sub_10038F6E8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10024671C();
    sub_1002464BC();
    return v50(v49, v50, v51, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  }
}

uint64_t sub_10038B938()
{
  sub_1002468E8();
  sub_100246768();
  sub_10038F764();
  uint64_t v3 = v2;
  sub_10023D230();
  *unint64_t v4 = v3;
  *unint64_t v4 = *v1;
  *(void *)(v3 + 1032) = v0;
  swift_task_dealloc();
  if (v0) {

  }
  swift_release();
  sub_1001F6430();
  sub_1002469C8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_10038BA74()
{
  sub_10038FA50();
  *(void *)(v0 + 1040) = *(void *)(v0 + 400);
  *(void *)&long long v1 = *(void *)(v0 + 408);
  *(_OWORD *)(v0 + 1048) = *(_OWORD *)(v0 + 416);
  *((void *)&v1 + 1) = *(void *)(v0 + 432);
  *(_OWORD *)(v0 + 1184) = v1;
  *(void *)(v0 + 1064) = *(void *)(v0 + 440);
  uint64_t v2 = static AVPartialAsyncProperty<A>.timeRange.getter();
  *(void *)(v0 + 1072) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1080) = v3;
  void *v3 = v0;
  v3[1] = sub_10038BB80;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 1136, v2);
}

uint64_t sub_10038BB80()
{
  sub_1002468E8();
  sub_100246768();
  sub_10038F764();
  uint64_t v3 = v2;
  sub_10023D230();
  *unint64_t v4 = v3;
  *unint64_t v4 = *v1;
  *(void *)(v3 + 1088) = v0;
  swift_task_dealloc();
  if (v0) {

  }
  swift_release();
  sub_1001F6430();
  sub_1002469C8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_10038BCBC()
{
  uint64_t v112 = v0;
  uint64_t v3 = *(void *)(v0 + 1064);
  unint64_t v4 = (void *)(v0 + 672);
  uint64_t v5 = *(void *)(v0 + 1040);
  uint64_t v6 = *(void **)(v0 + 976);
  uint64_t v7 = *(void *)(v0 + 944);
  uint64_t v8 = *(void *)(v0 + 1160);
  uint64_t v9 = *(void *)(v0 + 1176);
  *(void *)(v0 + 696) = 0;
  *(void *)(v0 + 448) = v5;
  *(void *)(v0 + 456) = *(void *)(v0 + 1184);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 1048);
  *(void *)(v0 + 480) = *(void *)(v0 + 1192);
  *(void *)(v0 + 488) = v3;
  *(void *)(v0 + 616) = v8;
  *(void *)(v0 + 624) = *(void *)(v0 + 1168);
  *(void *)(v0 + 632) = v9;
  unsigned int v10 = [v6 insertTimeRange:v0 + 448 ofTrack:v7 atTime:v0 + 616 error:v0 + 696];

  id v11 = *(id *)(v0 + 696);
  if (!v10)
  {
    uint64_t v28 = v11;
    uint64_t v29 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_1001F5F88(v30, (uint64_t)qword_100594C28);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v31 = (void *)Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    BOOL v33 = sub_100246418(v32);
    os_log_type_t v34 = *(void **)(v0 + 976);
    BOOL v35 = *(void **)(v0 + 968);
    uint64_t v36 = *(void **)(v0 + 960);
    id v37 = *(void **)(v0 + 944);
    if (v33)
    {
      uint64_t v110 = *(void **)(v0 + 976);
      uint64_t v38 = (_DWORD *)sub_100235B18();
      v111[0] = sub_100202470();
      _DWORD *v38 = 136315138;
      *(void *)(v0 + 672) = v29;
      swift_errorRetain();
      sub_1001F081C((uint64_t *)&unk_100585FE0);
      uint64_t v39 = String.init<A>(reflecting:)();
      *(void *)(v0 + 680) = sub_1002344D8(v39, v40, v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_10038FA5C((void *)&_mh_execute_header, v41, v42, "addEndTone: cannot combine tracks, will use message without end tone: %s");
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
LABEL_27:
    sub_10038F6E8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100246834();
    sub_1002464A0();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v12 = *(void **)(v0 + 968);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  objc_allocWithZone((Class)AVAssetExportSession);
  id v15 = sub_10038E1CC(v12);
  *(void *)(v0 + 1096) = v15;
  if (!v15)
  {
    if (qword_100583A10 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    uint64_t v44 = (void *)sub_1002466F4(v43, (uint64_t)qword_100594C28);
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (sub_100246484(v45))
    {
      uint64_t v46 = (_WORD *)sub_100246544();
      sub_100246668(v46);
      sub_1002463AC((void *)&_mh_execute_header, v47, v48, "addEndTone: failed to create exportSession");
      sub_1001F63CC();
    }

    sub_10038F8C8();
    id v49 = [self defaultManager];
    URL.path.getter();
    String._bridgeToObjectiveC()();
    uint64_t v50 = sub_1002469FC();
    id v51 = sub_100246990(v50, "fileExistsAtPath:");

    sub_10038F82C();
    sub_10038F95C();
    if (v51)
    {
      uint64_t v52 = sub_10038F70C();
      v53(v52);
      sub_10038F780();
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = v4;
      v54[3] = v2;
      v54[4] = v14;
      uint64_t v55 = sub_10038F748((uint64_t)v54);
      uint64_t v57 = v56(v55);
      sub_10038F940(v57, v58, v59, v60, v61, v62, v63, v64, v100, v101, v102);
      *(void *)(v0 + 288) = sub_10038EADC;
      *(void *)(v0 + 296) = v54;
      *(void *)(v0 + 256) = _NSConcreteStackBlock;
      *(void *)(v0 + 264) = 1107296256;
      *(void *)(v0 + 272) = sub_1002C2C88;
      *(void *)(v0 + 280) = &unk_100517368;
      uint64_t v65 = _Block_copy(aBlock);
      id v66 = v4;
      swift_bridgeObjectRetain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 712) = _swiftEmptyArrayStorage;
      sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_10038F7C4();
      sub_10038F99C();

      _Block_release(v65);
    }
    else
    {
      uint64_t v90 = sub_10038F798();
      v91(v90);
      sub_10038F780();
      uint64_t v92 = swift_allocObject();
      uint64_t v93 = sub_10038F748(v92);
      v94(v93);
      uint64_t v95 = (void *)(v92 + v1);
      *uint64_t v95 = v51;
      v95[1] = v2;
      *(void *)(v0 + 384) = sub_10038E9D4;
      *(void *)(v0 + 392) = v92;
      *(void *)(v0 + 352) = _NSConcreteStackBlock;
      *(void *)(v0 + 360) = 1107296256;
      *(void *)(v0 + 368) = sub_1002C2C88;
      *(void *)(v0 + 376) = &unk_100517318;
      uint64_t v96 = _Block_copy(v14);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 720) = _swiftEmptyArrayStorage;
      sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      sub_10038F7F8();
      sub_10038F890();

      _Block_release(v96);
    }
    sub_1001F7664();
    v67();
    sub_1001F7664();
    v68();
    swift_release();
    goto LABEL_27;
  }
  id v16 = v15;
  uint64_t v17 = *(void *)(v0 + 888);
  URL.deletingLastPathComponent()();
  URL.appendingPathComponent(_:)();
  *(void *)(v0 + 1104) = *(void *)(v17 + 8);
  *(void *)(v0 + 1112) = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v18 = sub_10038F9EC();
  uint64_t v109 = (void (*)(void, void))v19;
  v19(v18);
  uint64_t v20 = self;
  *(void *)(v0 + 1120) = v20;
  id v21 = [v20 defaultManager];
  URL._bridgeToObjectiveC()(v22);
  id v24 = v23;
  *(void *)(v0 + 704) = 0;
  unsigned __int8 v25 = [v21 removeItemAtURL:v23 error:v0 + 704];

  id v26 = *(void **)(v0 + 704);
  if (v25)
  {
    id v27 = v26;
  }
  else
  {
    id v69 = v26;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v70 = *(void *)(v0 + 920);
  uint64_t v71 = *(void *)(v0 + 904);
  uint64_t v72 = *(void *)(v0 + 888);
  uint64_t v73 = *(void *)(v0 + 880);
  uint64_t v74 = type metadata accessor for Logger();
  *(void *)(v0 + 1128) = sub_1001F5F88(v74, (uint64_t)qword_100594C28);
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16);
  v75(v71, v70, v73);
  uint64_t v76 = Logger.logObject.getter();
  os_log_type_t v77 = static os_log_type_t.default.getter();
  if (sub_100246418(v77))
  {
    uint64_t v78 = *(void *)(v0 + 912);
    uint64_t v79 = *(void *)(v0 + 904);
    uint64_t v108 = v16;
    uint64_t v80 = *(void *)(v0 + 880);
    int v81 = (uint8_t *)sub_100235B18();
    v111[0] = sub_100202470();
    *(_DWORD *)int v81 = 136315138;
    v75(v78, v79, v80);
    uint64_t v82 = String.init<A>(reflecting:)();
    *(void *)(v0 + 664) = sub_1002344D8(v82, v83, v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v16 = v108;
    sub_100235C60();
    v84();
    _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v71, "addEndTone: writing tone file to: %s", v81, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
    v109(*(void *)(v0 + 904), *(void *)(v0 + 880));
  }

  URL._bridgeToObjectiveC()(v85);
  uint64_t v87 = v86;
  [v16 setOutputURL:v86];

  [v16 setOutputFileType:AVFileTypeAppleM4A];
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_10038C7B8;
  *(void *)(v0 + 608) = swift_continuation_init();
  *(void *)(v0 + 576) = _NSConcreteStackBlock;
  *(void *)(v0 + 584) = 0x40000000;
  *(void *)(v0 + 592) = sub_10037DDB4;
  *(void *)(v0 + 600) = &unk_100517390;
  [v16 exportAsynchronouslyWithCompletionHandler:v0 + 576];
  sub_1002464A0();
  return _swift_continuation_await(v88);
}

uint64_t sub_10038C7B8()
{
  sub_1001F640C();
  uint64_t v1 = *v0;
  sub_10023D230();
  void *v2 = v1;
  sub_1001F6430();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10038C8B4()
{
  id v4 = [*(id *)(v1 + 1120) defaultManager];
  URL.path.getter();
  String._bridgeToObjectiveC()();
  uint64_t v5 = sub_1002469FC();
  unsigned __int8 v6 = sub_100246990(v5, "fileExistsAtPath:");

  if (v6)
  {
    uint64_t v7 = *(void **)(v1 + 1096);
    sub_100389784(*(void *)(v1 + 920), *(void *)(v1 + 784));
  }
  else
  {
    id v8 = *(id *)(v1 + 1096);
    uint64_t v9 = (void *)Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = sub_100246418(v10);
    uint64_t v7 = *(void **)(v1 + 1096);
    if (v11)
    {
      uint64_t v2 = (_DWORD *)sub_100235B18();
      _DWORD *v2 = 134217984;
      uint64_t v3 = v2 + 3;
      *(void *)(v1 + 744) = [v7 status];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      sub_10038FA5C((void *)&_mh_execute_header, v12, v13, "addEndTone: export of new greeting did not complete successfully: %ld");
      sub_1001F63CC();
    }
    else
    {
    }
  }

  (*(void (**)(void, void))(v1 + 1104))(*(void *)(v1 + 920), *(void *)(v1 + 880));
  sub_10038F8C8();
  id v14 = [self defaultManager];
  URL.path.getter();
  String._bridgeToObjectiveC()();
  uint64_t v15 = sub_1002469FC();
  id v16 = sub_100246990(v15, "fileExistsAtPath:");

  uint64_t v17 = (char *)v2 + 7;
  uint64_t v50 = *(void **)(v1 + 976);
  id v51 = *(void **)(v1 + 968);
  uint64_t v48 = *(void **)(v1 + 944);
  id v49 = *(void **)(v1 + 960);
  if (v16)
  {
    uint64_t v18 = sub_10038F70C();
    v19(v18);
    sub_10038F780();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = &selRef_conversationsByUUID;
    uint64_t v20[3] = v3;
    v20[4] = v0;
    uint64_t v21 = sub_10038F748((uint64_t)v20);
    uint64_t v23 = v22(v21);
    sub_10038F940(v23, v24, v25, v26, v27, v28, v29, v30, v44, v45, v46);
    *(void *)(v1 + 288) = sub_10038EADC;
    *(void *)(v1 + 296) = v20;
    *(void *)(v1 + 256) = _NSConcreteStackBlock;
    *(void *)(v1 + 264) = 1107296256;
    *(void *)(v1 + 272) = sub_1002C2C88;
    *(void *)(v1 + 280) = &unk_100517368;
    os_log_type_t v31 = _Block_copy(aBlock);
    os_log_type_t v32 = &selRef_conversationsByUUID;
    swift_bridgeObjectRetain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *(void *)(v1 + 712) = _swiftEmptyArrayStorage;
    sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_1001F6030();
    sub_10038F7C4();
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v31);
  }
  else
  {
    uint64_t v33 = sub_10038F798();
    v34(v33);
    sub_10038F780();
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = sub_10038F748(v35);
    v37(v36);
    uint64_t v38 = &v17[v35];
    *(void *)uint64_t v38 = v16;
    *((void *)v38 + 1) = v3;
    *(void *)(v1 + 384) = sub_10038E9D4;
    *(void *)(v1 + 392) = v35;
    *(void *)(v1 + 352) = _NSConcreteStackBlock;
    *(void *)(v1 + 360) = 1107296256;
    *(void *)(v1 + 368) = sub_1002C2C88;
    *(void *)(v1 + 376) = &unk_100517318;
    uint64_t v39 = _Block_copy(v0);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *(void *)(v1 + 720) = _swiftEmptyArrayStorage;
    sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_1001F6030();
    sub_10038F7F8();
    sub_10038F890();

    _Block_release(v39);
  }

  sub_1001F7664();
  v40();
  sub_1001F7664();
  v41();
  swift_release();
  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100246834();
  return v42();
}

uint64_t sub_10038CE00()
{
  sub_1002468E8();
  sub_100246768();
  swift_willThrow();
  swift_errorRelease();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = (void *)sub_1002466F4(v0, (uint64_t)qword_100594C28);
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (sub_100246484(v2))
  {
    uint64_t v3 = (_WORD *)sub_100246544();
    sub_100246668(v3);
    sub_1002463AC((void *)&_mh_execute_header, v4, v5, "addEndTone: cannot create tracks for tone or messge, will use message without end tone");
    sub_1001F63CC();
  }

  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100246844();
  sub_1002469C8();
  return v7(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_10038CF34()
{
  sub_1002468E8();
  sub_100246768();
  uint64_t v1 = *(void **)(v0 + 944);
  swift_willThrow();

  swift_errorRelease();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = (void *)sub_1002466F4(v2, (uint64_t)qword_100594C28);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (sub_100246484(v4))
  {
    uint64_t v5 = (_WORD *)sub_100246544();
    sub_100246668(v5);
    sub_1002463AC((void *)&_mh_execute_header, v6, v7, "addEndTone: cannot create tracks for tone or messge, will use message without end tone");
    sub_1001F63CC();
  }

  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100246844();
  sub_1002469C8();
  return v9(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_10038D070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_100246604();
  sub_100246964();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100246808(v22, (uint64_t)qword_100594C28);
  swift_errorRetain();
  uint64_t v23 = (void *)Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  sub_100246418(v24);
  sub_10038F8B4();
  if (v25)
  {
    a13 = v18;
    sub_100246458();
    sub_100202470();
    sub_1002466A8();
    sub_100246434(4.8149e-34);
    sub_1001F081C((uint64_t *)&unk_100585FE0);
    uint64_t v26 = sub_100246A20();
    uint64_t v33 = sub_100246A50(v26, v27, v28, v29, v30, v31, v32);
    sub_100246520(v33);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_100246500((void *)&_mh_execute_header, v34, v35, "addEndTone: cannot combine tracks, will use message without end tone: %s");
    sub_1002466B8();
    sub_1001F63CC();
    sub_1001F63CC();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10024671C();
  sub_1002464BC();
  return v37(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10038D254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_100246604();
  sub_100246964();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100246808(v22, (uint64_t)qword_100594C28);
  swift_errorRetain();
  uint64_t v23 = (void *)Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  sub_100246418(v24);
  sub_10038F8B4();
  if (v25)
  {
    a13 = v18;
    sub_100246458();
    sub_100202470();
    sub_1002466A8();
    sub_100246434(4.8149e-34);
    sub_1001F081C((uint64_t *)&unk_100585FE0);
    uint64_t v26 = sub_100246A20();
    uint64_t v33 = sub_100246A50(v26, v27, v28, v29, v30, v31, v32);
    sub_100246520(v33);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_100246500((void *)&_mh_execute_header, v34, v35, "addEndTone: cannot combine tracks, will use message without end tone: %s");
    sub_1002466B8();
    sub_1001F63CC();
    sub_1001F63CC();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10024671C();
  sub_1002464BC();
  return v37(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10038D438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_100246604();
  sub_100246964();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100246808(v22, (uint64_t)qword_100594C28);
  swift_errorRetain();
  uint64_t v23 = (void *)Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  sub_100246418(v24);
  sub_10038F8B4();
  if (v25)
  {
    a13 = v18;
    sub_100246458();
    sub_100202470();
    sub_1002466A8();
    sub_100246434(4.8149e-34);
    sub_1001F081C((uint64_t *)&unk_100585FE0);
    uint64_t v26 = sub_100246A20();
    uint64_t v33 = sub_100246A50(v26, v27, v28, v29, v30, v31, v32);
    sub_100246520(v33);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_100246500((void *)&_mh_execute_header, v34, v35, "addEndTone: cannot combine tracks, will use message without end tone: %s");
    sub_1002466B8();
    sub_1001F63CC();
    sub_1001F63CC();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10038F6E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10024671C();
  sub_1002464BC();
  return v37(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10038D61C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v38 = a5;
  uint64_t v10 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsChecksums;
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 24);
  uint64_t v19 = *(void *)(v17 + 32);
  sub_10020EF04(v17, v18);
  uint64_t v20 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 32);
  uint64_t v35 = a2;
  v20(a2, a3, v18, v19);
  swift_endAccess();
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_1001F5F88(v21, (uint64_t)qword_100594C28);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v36 = a4;
  v22(v16, a4, v13);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    unint64_t v32 = a3;
    uint64_t v26 = v25;
    uint64_t v33 = swift_slowAlloc();
    v40[0] = v33;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v31 = v26 + 4;
    sub_10038EB48((unint64_t *)&qword_1005888D0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_1002344D8(v27, v28, v40);
    uint64_t v34 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    *(_WORD *)(v26 + 12) = 2080;
    unint64_t v29 = v32;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1002344D8(v35, v29, v40);
    uint64_t v22 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "addEndTone: updating to greetingURL=%s for %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);

    swift_bridgeObjectRelease_n();
  }
  v22(v12, v36, v13);
  sub_1001F0530((uint64_t)v12, 0, 1, v13);
  v38(v12);
  return sub_100235804((uint64_t)v12, &qword_1005878F0);
}

uint64_t sub_10038DA30(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_1001F081C(&qword_1005878F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1001F5F88(v13, (uint64_t)qword_100594C28);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v26 = a1;
  v25(v12, a1, v9);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    os_log_type_t v24 = a2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v22;
    uint64_t v23 = a3;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v21 = v17 + 4;
    sub_10038EB48((unint64_t *)&qword_1005888D0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = sub_1002344D8(v18, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "addEndTone: the tone file didn't exist, returning %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v24;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  v25(v8, v26, v9);
  sub_1001F0530((uint64_t)v8, 0, 1, v9);
  a2(v8);
  return sub_100235804((uint64_t)v8, &qword_1005878F0);
}

uint64_t sub_10038DD74(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001F081C(&qword_1005878F0);
  uint64_t v7 = sub_100202384(v6);
  __chkstk_darwin(v7);
  sub_1002024D0();
  uint64_t v8 = type metadata accessor for URL();
  sub_10020233C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, a3, v8);
  sub_100342E78(v3, 0);
  a1(v3);
  return sub_100235804(v3, &qword_1005878F0);
}

void sub_10038DE44()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10021EA1C();
  sub_1001F6398();
  __chkstk_darwin(v10);
  sub_1002024D0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  uint64_t v16[4] = v5;
  void v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1002C2C88;
  v16[3] = v3;
  uint64_t v12 = _Block_copy(v16);
  id v13 = v0;
  static DispatchQoS.unspecified.getter();
  sub_10038EB48((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  sub_10026B7D8();
  sub_10027AC54();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  uint64_t v14 = sub_10038FA44();
  v15(v14);
  swift_release();
  sub_1001FCC08();
}

void sub_10038E01C()
{
  if (qword_100583A10 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1001F5F88(v0, (uint64_t)qword_100594C28);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "speech assets or locale changed- checking if we should regenerate greeting", v3, 2u);
    swift_slowDealloc();
  }

  sub_100380A04();
}

uint64_t sub_10038E174()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10038E1AC()
{
}

uint64_t sub_10038E1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10038E1C4()
{
  return swift_release();
}

id sub_10038E1CC(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 initWithAsset:a1 presetName:v3];

  return v4;
}

uint64_t sub_10038E238()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_10038E270()
{
  return sub_1003866E4(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_10038E27C()
{
  sub_1002E79A4();
  type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v2 = v1;
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(void *)(v3 + 64)
        + *(unsigned __int8 *)(v2 + 80)
        + ((*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void (**)(void))(v2 + 8);
  sub_10024636C();
  v5();
  sub_10024636C();
  v5();

  sub_10028AC70();
  sub_1002E7968();
  return _swift_deallocObject(v6, v7, v8);
}

uint64_t sub_10038E34C()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_1002462DC(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  void *v2 = v0;
  v2[1] = sub_100245950;
  sub_10038F9D8();
  return sub_100387540(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10038E49C()
{
  sub_1002E79A4();
  type metadata accessor for URL();
  sub_1001F6398();
  sub_10038F9C0();

  swift_bridgeObjectRelease();
  sub_10024636C();
  v1();
  swift_unknownObjectRelease();
  sub_10028AC70();
  sub_1002E7968();
  return _swift_deallocObject(v2, v3, v4);
}

uint64_t sub_10038E53C()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_1002462DC(v1);
  sub_1002467F8();
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(char **)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);

  return sub_100387B48(v3, v4, v5, v6, (v0 + v2));
}

void sub_10038E5AC(uint64_t a1)
{
  sub_100387F74(a1, *(char **)(v1 + 16));
}

uint64_t sub_10038E5BC()
{
  type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v11 = v5 | 7;
  unint64_t v7 = (v6 + 7 + ((v5 + 48) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = ((v5 + ((((v6 + 7 + ((v5 + v7 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v5)
     + v6;
  swift_unknownObjectRelease();

  uint64_t v9 = *(void (**)(void))(v2 + 8);
  sub_10024636C();
  v9();

  sub_10024636C();
  v9();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10024636C();
  v9();

  return _swift_deallocObject(v0, v8, v11);
}

uint64_t sub_10038E6F0()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_1002462DC(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  void *v2 = v0;
  v2[1] = sub_100245950;
  sub_10038F9D8();
  return sub_10038A1E8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10038E864()
{
  type metadata accessor for URL();
  sub_1001F6398();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  sub_10024636C();
  v8();

  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_10038E900()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_1001F63E4(v1);
  return sub_10038DD74(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_10038E938()
{
  type metadata accessor for URL();
  sub_10020233C();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = ((*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  sub_1001F7664();
  v5();
  swift_release();

  return _swift_deallocObject(v0, v4, v3);
}

uint64_t sub_10038E9D4()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_1002462DC(v1);
  sub_1002467F8();
  unint64_t v4 = *(void (**)(void))(v0 + v3);
  uint64_t v5 = *(void *)(v0 + v3 + 8);

  return sub_10038DA30(v0 + v2, v4, v5);
}

uint64_t sub_10038EA38()
{
  sub_1002E79A4();
  type metadata accessor for URL();
  sub_1001F6398();
  sub_10038F9C0();

  swift_bridgeObjectRelease();
  sub_10024636C();
  v1();
  swift_release();
  sub_10028AC70();
  sub_1002E7968();
  return _swift_deallocObject(v2, v3, v4);
}

uint64_t sub_10038EADC()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_1002462DC(v1);
  sub_1002467F8();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  unint64_t v5 = v0[4];
  uint64_t v7 = *(void (**)(char *))((char *)v0 + v6);
  uint64_t v8 = *(void *)((char *)v0 + v6 + 8);

  return sub_10038D61C(v3, v4, v5, (uint64_t)v0 + v2, v7, v8);
}

uint64_t sub_10038EB48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10038EB90()
{
  return sub_100388D4C();
}

uint64_t sub_10038EB9C(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  sub_1001F63E4(v5);
  uint64_t v7 = *(char **)(v2 + 16);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100384BD0(a1, a2, v7, v8);
}

uint64_t sub_10038EC08()
{
  sub_1002E79A4();
  type metadata accessor for UUID();
  sub_1001F6398();
  unint64_t v3 = (*(void *)(v2 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_errorRelease();
  sub_10024636C();
  v4();

  sub_10028AC70();
  sub_1002E7968();
  return _swift_deallocObject(v5, v6, v7);
}

void sub_10038ECC0()
{
  uint64_t v1 = type metadata accessor for UUID();
  sub_1002462DC(v1);
  sub_1002467F8();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v5 = *(NSObject **)(v0 + v4);
  uint64_t v6 = *(void **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100384F78(v3, v0 + v2, v5, v6);
}

uint64_t sub_10038ED34(void *a1)
{
  return sub_1001F612C(a1, (SEL *)&selRef_labelID);
}

uint64_t sub_10038ED40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a8 + 16) = 0xD000000000000029;
  *(void *)(a8 + 24) = 0x800000010048BF60;
  *(void *)(a8 + 32) = [self defaultManager];
  *(unsigned char *)(a8 + 112) = 0;
  *(_DWORD *)(a8 + 116) = 0;
  *(void *)(a8 + 120) = sub_1001F30D0;
  *(void *)(a8 + 128) = 0;
  uint64_t v16 = self;
  v27.value._rawValue = 0;
  LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(v27);
  String._bridgeToObjectiveC()();
  sub_1002469FC();
  id v17 = [v16 fallbackLanguageFor:v8];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(a8 + 40) = v18;
  *(void *)(a8 + 48) = v20;
  *(void *)(a8 + 88) = a2;
  *(void *)(a8 + 96) = &off_10050BF08;
  swift_unknownObjectRetain();
  dispatch thunk of DaemonSession.keepActive.setter();
  *(void *)(a8 + 72) = a3;
  *(void *)(a8 + 80) = a4;
  *(void *)(a8 + 104) = a5;
  *(void *)(a8 + 56) = a6;
  *(void *)(a8 + 64) = a7;
  swift_retain();
  id v21 = a5;
  uint64_t v22 = (void *)sub_1001F259C();
  sub_1001F081C((uint64_t *)&unk_100584DD0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10048F560;
  swift_unknownObjectRetain();
  *(void *)(v23 + 32) = sub_1001F259C();
  specialized Array._endMutation()();
  *(void *)(swift_allocObject() + 16) = v22;
  id v24 = v22;
  dispatch thunk of DaemonSession.subscribe(voices:reply:)();

  swift_bridgeObjectRelease();
  swift_release();
  sub_1001F2E94();

  swift_release();
  type metadata accessor for LanguageManager();
  sub_10020233C();
  sub_1001F7664();
  v25();
  return a8;
}

char *sub_10038EF9C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(), char a13, uint64_t a14, void *a15, unsigned char *a16)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v23 = sub_1001F6204(0, &qword_10058B270);
  uint64_t v24 = OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_lockStateObserver;
  *(void *)&a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_lockStateObserver] = 0;
  uint64_t v49 = OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_afterFirstUnlock;
  a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_afterFirstUnlock] = 0;
  a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_fetchingSpeechAssets] = 0;
  *(void *)&a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_callCenterObserver] = a1;
  uint64_t v60[3] = v23;
  v60[4] = &off_10050C690;
  *(void *)&a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_queue] = a2;
  v60[0] = a10;
  *(void *)&a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsDict] = a3;
  *(void *)&a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_phoneNumberToAccountUUIDMap] = a4;
  uint64_t v25 = &a16[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_ttsService];
  *uint64_t v25 = a5;
  v25[1] = a6;
  *(void *)&a16[v24] = a7;
  uint64_t v26 = a16;
  id v27 = a1;
  id v28 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_10025E234(a9, (uint64_t)&v58, (uint64_t *)&unk_10058BB88);
  uint64_t v48 = v27;
  if (v59)
  {
    sub_100233560(&v58, (uint64_t)&aBlock);
  }
  else
  {
    sub_100357B28((uint64_t)v61);
    uint64_t v54 = &type metadata for GreetingsChecksums;
    uint64_t v55 = (void (*)())&off_100516550;
    uint64_t v29 = swift_allocObject();
    *(void *)&long long aBlock = v29;
    long long v30 = v61[1];
    *(_OWORD *)(v29 + 16) = v61[0];
    *(_OWORD *)(v29 + 32) = v30;
    *(void *)(v29 + 48) = v62;
    sub_100235804((uint64_t)&v58, (uint64_t *)&unk_10058BB88);
  }
  sub_100233560(&aBlock, (uint64_t)&v26[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_greetingsChecksums]);
  id v31 = a8;
  if (!a8) {
    id v31 = [objc_allocWithZone((Class)CSDCoreTelephonyClient) initWithQueue:v28 shouldRegisterForECBMNotification:0];
  }
  *(void *)&v26[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_coreTelephonyClient] = v31;
  sub_10020ED28((uint64_t)v60, (uint64_t)&v26[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_voicemailManager]);
  if (a11) {
    unint64_t v32 = (uint64_t (*)())a11;
  }
  else {
    unint64_t v32 = sub_10038098C;
  }
  if (a11) {
    uint64_t v33 = a12;
  }
  else {
    uint64_t v33 = 0;
  }
  uint64_t v34 = (uint64_t (**)())&v26[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_localeCheck];
  *uint64_t v34 = v32;
  v34[1] = v33;
  a16[v49] = a13 & 1;
  uint64_t v35 = &v26[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_languageManager];
  uint64_t v36 = type metadata accessor for LanguageManager();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, a14, v36);
  *(void *)&v26[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_speechAssetManager] = a15;
  swift_unknownObjectRetain();
  uint64_t v38 = a15;
  sub_1002084D8(a11);

  v57.receiver = v26;
  v57.super_class = ObjectType;
  uint64_t result = (char *)objc_msgSendSuper2(&v57, "init");
  uint64_t v40 = *(void **)&result[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_coreTelephonyClient];
  if (v40)
  {
    uint64_t v41 = result;
    [v40 setDelegate:v41];
    [*(id *)&v38[OBJC_IVAR___CSDSpeechAssetManager_delegates] addObject:v41];
    uint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_ttsService];
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v42 + 120) = sub_10038F574;
    *(void *)(v42 + 128) = v43;
    swift_release();
    uint64_t v44 = *(void **)&v41[OBJC_IVAR____TtC13callservicesd19GreetingsDataSource_lockStateObserver];
    if (v44)
    {
      uint64_t v45 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v55 = sub_10038F57C;
      uint64_t v56 = v45;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v53 = sub_1002C2C88;
      uint64_t v54 = (ValueMetadata *)&unk_100517510;
      uint64_t v46 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      [v44 performBlockAfterFirstUnlock:v46];
      swift_unknownObjectRelease();
      _Block_release(v46);
    }
    id v47 = [self defaultCenter];
    [v47 addObserver:v41 selector:"handleVMAccountsDidChange" name:VMVoicemailManagerAccountsDidChangeNotification object:0];

    sub_100208490(a11);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(a14, v36);
    sub_1002018DC((uint64_t)v60);
    sub_100235804(a9, (uint64_t *)&unk_10058BB88);
    return v41;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10038F4F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10038F53C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10038F574()
{
}

void sub_10038F57C()
{
}

void sub_10038F584(uint64_t a1)
{
  sub_1001F2C6C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10038F58C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10038821C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10038F5B0()
{
  type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  sub_10024636C();
  v8();

  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_10038F64C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  sub_1001F63E4(v2);
  return sub_100386614(a1);
}

uint64_t sub_10038F6E8()
{
  return swift_task_dealloc();
}

uint64_t sub_10038F70C()
{
  return v0;
}

uint64_t sub_10038F748(uint64_t a1)
{
  return a1 + v1;
}

uint64_t sub_10038F798()
{
  return v0;
}

uint64_t sub_10038F7C4()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10038F7F8()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10038F86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002233BC(0x746C7561666564, 0xE700000000000000, a3);
}

uint64_t sub_10038F890()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

void sub_10038F8DC()
{
  sub_10038747C();
}

uint64_t sub_10038F908()
{
  return 0;
}

uint64_t sub_10038F924()
{
  return v0;
}

void sub_10038F940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id v13 = (void *)(v11 + v12);
  *id v13 = a10;
  v13[1] = a11;
}

uint64_t sub_10038F974()
{
  return 0;
}

uint64_t sub_10038F984()
{
  return v0;
}

uint64_t sub_10038F99C()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10038F9EC()
{
  return v0;
}

uint64_t sub_10038F9F8(uint64_t a1)
{
  return sub_1001F0530(v1, 1, 1, a1);
}

uint64_t sub_10038FA18()
{
  return 0;
}

uint64_t sub_10038FA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F758C(a1, a2, a3);
}

uint64_t sub_10038FA44()
{
  return v0;
}

void sub_10038FA5C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

void sub_10038FA7C(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    id v3 = sub_1001B1AC8();
    sub_1001F081C(&qword_100584B20);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_10048F550;
    [v2 originatingUIType];
    uint64_t v5 = String.init<A>(reflecting:)();
    uint64_t v7 = v6;
    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 64) = sub_1001F3B08();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    LODWORD(v3) = [v2 originatingUIType];

    *(_DWORD *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_originatingUIType) = v3;
  }
  else
  {
    sub_1001F6204(0, &qword_100584B80);
    id v8 = (id)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

uint64_t sub_10038FC18(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maximumMemberCount;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maximumMemberCount);
  id v4 = [a1 remoteMembers];
  sub_1001F6204(0, (unint64_t *)&unk_1005888A0);
  sub_100210D5C((unint64_t *)&qword_1005858C0, (unint64_t *)&unk_1005888A0);
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = sub_10039E66C(v5);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 <= v3) {
      uint64_t v8 = v3;
    }
    *(void *)(v1 + v2) = v8;
  }
  return result;
}

id sub_10038FCEC(void *a1)
{
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  uint64_t v5 = sub_100202384(v4);
  __chkstk_darwin(v5);
  sub_1001F2514();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for Date();
  sub_1001F6398();
  uint64_t v11 = v10;
  uint64_t v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  os_log_type_t v15 = (char *)&v36 - v14;
  sub_100392D88();
  sub_100319018(v2, v8);
  if (sub_1001F758C(v8, 1, v9) == 1) {
    return (id)sub_1003929DC(v8, &qword_100584B40);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v15, v8, v9);
  id v17 = [a1 activeRemoteParticipants];
  sub_1001F6204(0, &qword_100585908);
  sub_100210D5C((unint64_t *)&unk_100585910, &qword_100585908);
  uint64_t v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = sub_10039E66C(v18);
  swift_bridgeObjectRelease();
  id result = [a1 state];
  BOOL v20 = result == (id)3;
  BOOL v21 = __OFADD__(v19, v20);
  uint64_t v22 = v19 + v20;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    if (v22 <= *(void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maxNumberOfParticipants)) {
      uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maxNumberOfParticipants);
    }
    *(void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maxNumberOfParticipants) = v22;
    id v23 = [a1 activeRemoteParticipants];
    uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = sub_10039E66C(v24);
    swift_bridgeObjectRelease();
    if (v25 >= 1)
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_hasHadActiveParticipants) = 1;
      uint64_t v26 = v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone;
      if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone + 8) & 1) == 0)
      {
        double v27 = *(double *)v26;
        Date.init()();
        Date.timeIntervalSince(_:)();
        double v29 = v28;
        long long v30 = *(void (**)(void))(v11 + 8);
        sub_100392D14();
        v30();
        sub_100392D14();
        id result = (id)((uint64_t (*)(void))v30)();
        *(double *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_cumulativeTimeAlone) = v29 - v27 + *(double *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_cumulativeTimeAlone);
        *(void *)uint64_t v26 = 0;
        *(unsigned char *)(v26 + 8) = 1;
        return result;
      }
      goto LABEL_10;
    }
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_hasHadActiveParticipants) & 1) == 0)
    {
LABEL_10:
      sub_100392D14();
      return (id)v31();
    }
    Date.init()();
    Date.timeIntervalSince(_:)();
    uint64_t v33 = v32;
    uint64_t v34 = *(void (**)(void))(v11 + 8);
    sub_100392D14();
    v34();
    sub_100392D14();
    id result = (id)((uint64_t (*)(void))v34)();
    uint64_t v35 = v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone;
    *(void *)uint64_t v35 = v33;
    *(unsigned char *)(v35 + 8) = 0;
  }
  return result;
}

void *sub_100390038()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_AVCBlobRecoveryAttempts);
}

void *sub_100390044()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_remoteMemberNotInMemberListCounts);
}

void *sub_100390050()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_transitionAttempts);
}

void *sub_10039005C()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_AVCBlobRecoveryTimeouts);
}

void *sub_100390068()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_switchToOneToOneModeFailures);
}

void *sub_100390074()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_switchToGFTModeFailures);
}

void *sub_100390080()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetryAttempts);
}

void *sub_10039008C()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetryFailures);
}

void *sub_100390098()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetrySuccesses);
}

void *sub_1003900A4()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetryAttempts);
}

void *sub_1003900B0()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetryFailures);
}

void *sub_1003900BC()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetrySuccesses);
}

void *sub_1003900C8()
{
  return sub_1003900D4(&OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIRequests);
}

void *sub_1003900D4(void *result)
{
  uint64_t v2 = *(void *)(v1 + *result);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3) {
    __break(1u);
  }
  else {
    *(void *)(v1 + *result) = v4;
  }
  return result;
}

uint64_t sub_1003900F0(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIApprovals);
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIApprovals);
    BOOL v4 = __OFADD__(v3, 1);
    uint64_t v5 = v3 + 1;
    if (!v4) {
      goto LABEL_6;
    }
    __break(1u);
  }
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIDismissals);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIDismissals);
  BOOL v4 = __OFADD__(v6, 1);
  uint64_t v5 = v6 + 1;
  if (!v4)
  {
LABEL_6:
    void *v2 = v5;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100390134(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  uint64_t v5 = sub_100202384(v4);
  __chkstk_darwin(v5);
  sub_1001F7650();
  uint64_t v37 = v6;
  sub_1002B8138();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = type metadata accessor for Date();
  sub_1001F6398();
  uint64_t v36 = v11;
  uint64_t v13 = __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)&v36 - v16;
  id v18 = [a1 remoteMembers];
  sub_1001F6204(0, (unint64_t *)&unk_1005888A0);
  sub_100210D5C((unint64_t *)&qword_1005858C0, (unint64_t *)&unk_1005888A0);
  uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = sub_10039E66C(v19);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v20, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_finalMemberCount) = v20 + 1;
    unsigned __int8 v22 = [a1 isOneToOneModeEnabled];
    *(unsigned char *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_uPlusOneModeAtEnd) = v22;
    sub_100392D88();
    sub_100319018(v20, (uint64_t)v9);
    id v23 = (void *)&unk_100594000;
    if (sub_1001F758C((uint64_t)v9, 1, v10) == 1)
    {
      sub_1003929DC((uint64_t)v9, &qword_100584B40);
    }
    else
    {
      uint64_t v24 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v17, v9, v10);
      Date.init()();
      Date.timeIntervalSince(_:)();
      double v26 = v25;
      double v27 = *(void (**)(char *, uint64_t))(v24 + 8);
      v27(v15, v10);
      uint64_t v28 = v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_relativeEnd;
      *(double *)uint64_t v28 = v26;
      *(unsigned char *)(v28 + 8) = 0;
      uint64_t v29 = v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_duration;
      *(double *)uint64_t v29 = v26 - *(double *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_relativeStart);
      *(unsigned char *)(v29 + 8) = 0;
      id v30 = [a1 activeRemoteParticipants];
      sub_1001F6204(0, &qword_100585908);
      sub_100210D5C((unint64_t *)&unk_100585910, &qword_100585908);
      uint64_t v31 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = sub_10039E66C(v31);
      swift_bridgeObjectRelease();
      v27(v17, v10);
      id v23 = &unk_100594000;
      if (!v32
        && (*(unsigned char *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone + 8) & 1) == 0)
      {
        double v33 = v26 - *(double *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone);
        *(double *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_cumulativeTimeAlone) = v33 + *(double *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_cumulativeTimeAlone);
        *(double *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_timeAloneAtEnd) = v33;
      }
    }
    uint64_t v34 = v37;
    sub_1001F0530(v37, 1, 1, v10);
    swift_beginAccess();
    sub_10036F208(v34, v20);
    uint64_t result = swift_endAccess();
    uint64_t v35 = v2 + v23[469];
    *(void *)uint64_t v35 = 0;
    *(unsigned char *)(v35 + 8) = 1;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_hasHadActiveParticipants) = 2;
  }
  return result;
}

id sub_100390510(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  uint64_t v5 = sub_100202384(v4);
  __chkstk_darwin(v5);
  sub_1001F2514();
  uint64_t v95 = v7 - v6;
  uint64_t v8 = type metadata accessor for Date();
  sub_1001F6398();
  uint64_t v99 = v9;
  __chkstk_darwin(v10);
  sub_1001F7650();
  uint64_t v98 = v11;
  sub_1002B8138();
  __chkstk_darwin(v12);
  uint64_t v102 = (char *)v91 - v13;
  sub_1002B8138();
  __chkstk_darwin(v14);
  uint64_t v101 = (char *)v91 - v15;
  uint64_t v16 = sub_1001F081C((uint64_t *)&unk_100585580);
  uint64_t v17 = sub_100202384(v16);
  __chkstk_darwin(v17);
  sub_1001F7650();
  uint64_t v96 = v18;
  sub_1002B8138();
  __chkstk_darwin(v19);
  uint64_t v97 = (uint64_t)v91 - v20;
  uint64_t v21 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_1001F2514();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = &v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_relativeEnd];
  *(void *)uint64_t v28 = 0;
  uint64_t v29 = 1;
  v28[8] = 1;
  id v30 = &v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_duration];
  *(void *)id v30 = 0;
  v30[8] = 1;
  *(_DWORD *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_originatingUIType] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_AVCBlobRecoveryAttempts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_AVCBlobRecoveryTimeouts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_remoteMemberNotInMemberListCounts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_transitionAttempts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_switchToOneToOneModeFailures] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_switchToGFTModeFailures] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIRequests] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIApprovals] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIDismissals] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetryAttempts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetryFailures] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetrySuccesses] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetryAttempts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetryFailures] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetrySuccesses] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_cumulativeTimeAlone] = 0;
  *(void *)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_timeAloneAtEnd] = 0;
  uint64_t v94 = &v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_timebase];
  uint64_t v100 = v8;
  sub_1001F0530((uint64_t)&v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_timebase], 1, 1, v8);
  uint64_t v92 = OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_hasHadActiveParticipants;
  v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_hasHadActiveParticipants] = 2;
  uint64_t v31 = &v2[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone];
  *(void *)uint64_t v31 = 0;
  v31[8] = 1;
  uint64_t v32 = v2;
  id v33 = [a1 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = UUID.uuidString.getter();
  uint64_t v36 = v35;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v91[1] = v23 + 8;
  v37(v27, v21);
  uint64_t v38 = (uint64_t *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_uuid];
  uint64_t *v38 = v34;
  v38[1] = v36;
  uint64_t v39 = a1;
  id v40 = [a1 report];
  id v41 = [v40 conversationID];

  uint64_t v42 = v96;
  if (v41)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v29 = 0;
  }
  sub_1001F0530(v42, v29, 1, v21);
  uint64_t v43 = v97;
  sub_10021E124(v42, v97);
  int v44 = sub_1001F758C(v43, 1, v21);
  uint64_t v45 = v101;
  if (v44 == 1)
  {
    sub_1003929DC(v43, (uint64_t *)&unk_100585580);
    uint64_t v46 = 0;
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v46 = UUID.uuidString.getter();
    uint64_t v47 = v48;
    v37(v43, v21);
  }
  uint64_t v49 = v100;
  uint64_t v50 = v98;
  id v51 = (uint64_t *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_CID];
  uint64_t *v51 = v46;
  v51[1] = v47;
  Date.init()();
  uint64_t v52 = v39;
  id v53 = [v39 report];

  if (v53)
  {
    id v54 = [v39 report];
    id v55 = [v54 timebase];

    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v99;
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v50, v49);
    id v57 = [v52 report];
    id v58 = [v57 timebase];

    uint64_t v59 = v102;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v56 = v99;
    uint64_t v59 = v102;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v102, v45, v49);
  }
  Date.timeIntervalSince(_:)();
  *(void *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_relativeStart] = v60;
  id result = (id)Date.timeIntervalSinceReferenceDate.getter();
  double v63 = v62 / 14400.0;
  if ((~*(void *)&v63 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v63 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v63 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Date.init(timeIntervalSinceReferenceDate:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v56 + 32))(&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_conversationBaseTime], v50, v49);
  uint64_t v64 = v95;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v95, v59, v49);
  sub_1001F0530(v64, 0, 1, v49);
  uint64_t v65 = (uint64_t)v94;
  swift_beginAccess();
  sub_10036F208(v64, v65);
  swift_endAccess();
  id v66 = [v52 remoteMembers];
  sub_1001F6204(0, (unint64_t *)&unk_1005888A0);
  sub_100210D5C((unint64_t *)&qword_1005858C0, (unint64_t *)&unk_1005888A0);
  uint64_t v67 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v68 = sub_10039E66C(v67);
  swift_bridgeObjectRelease();
  *(void *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_initialMemberCount] = v68;
  *(void *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maximumMemberCount] = v68;
  *(void *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_finalMemberCount] = v68;
  id v69 = [v52 activeRemoteParticipants];
  sub_1001F6204(0, &qword_100585908);
  sub_100210D5C((unint64_t *)&unk_100585910, &qword_100585908);
  uint64_t v70 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v71 = sub_10039E66C(v70);
  swift_bridgeObjectRelease();
  id result = [v52 state];
  BOOL v72 = result == (id)3;
  BOOL v73 = __OFADD__(v71, v72);
  uint64_t v74 = v71 + v72;
  if (v73)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  *(void *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maxNumberOfParticipants] = v74;
  unsigned __int8 v75 = [v52 isOneToOneModeEnabled];
  v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_uPlusOneModeAtStart] = v75;
  unsigned __int8 v76 = [v52 isOneToOneModeEnabled];
  v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_uPlusOneModeAtEnd] = v76;
  id v77 = [v52 link];
  id v78 = v77;
  if (v77) {

  }
  v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_hasLink] = v78 != 0;
  unsigned __int8 v79 = [v52 isPendingConversation];
  v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_isPending] = v79;
  id v80 = [v52 activeRemoteParticipants];
  uint64_t v81 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v82 = sub_10039E66C(v81);
  swift_bridgeObjectRelease();
  v2[v92] = v82 > 0;
  id v83 = [v52 provider];
  id v84 = [v83 identifier];

  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v87 = v86;

  uint64_t v88 = (uint64_t *)&v32[OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_conversationProvider];
  *uint64_t v88 = v85;
  v88[1] = v87;

  v103.receiver = v32;
  v103.super_class = ObjectType;
  id v89 = objc_msgSendSuper2(&v103, "init");

  uint64_t v90 = *(void (**)(char *, uint64_t))(v56 + 8);
  v90(v102, v49);
  v90(v101, v49);
  return v89;
}

void sub_100390E88()
{
}

uint64_t sub_100390EC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65766974616C6572 && a2 == 0xED00007472617453;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 4475203 && a2 == 0xE300000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x800000010048BFE0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x800000010048C000 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x6B6E694C736168 && a2 == 0xE700000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x6E69646E65507369 && a2 == 0xE900000000000067;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 0x65766974616C6572 && a2 == 0xEB00000000646E45;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x8000000100484880 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x80000001004848A0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x8000000100484A40 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x800000010048C040 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x800000010048C060 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x800000010048C080 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 14;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x800000010048C0A0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 15;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x800000010048C0C0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 16;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x800000010048C0E0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 17;
              }
              else if (a1 == 0xD000000000000021 && a2 == 0x800000010048C100 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 18;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x800000010048C130 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 19;
              }
              else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010048C150 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 20;
              }
              else if (a1 == 0xD000000000000017 && a2 == 0x800000010048C170 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 21;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x800000010048C190 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 22;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x800000010048C1B0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 23;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x800000010048C1D0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 24;
              }
              else if (a1 == 0xD000000000000014 && a2 == 0x800000010048C1F0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 25;
              }
              else if (a1 == 0xD000000000000014 && a2 == 0x800000010048C210 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 26;
              }
              else if (a1 == 0xD000000000000015 && a2 == 0x800000010048C230 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 27;
              }
              else if (a1 == 0xD000000000000023 && a2 == 0x800000010048C250 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 28;
              }
              else if (a1 == 0xD000000000000023 && a2 == 0x800000010048C280 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 29;
              }
              else if (a1 == 0xD000000000000024 && a2 == 0x800000010048C2B0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 30;
              }
              else if (a1 == 0xD000000000000013 && a2 == 0x800000010048C2E0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 31;
              }
              else
              {
                BOOL v12 = a1 == 0x6E6F6C41656D6974 && a2 == 0xEE00646E45744165;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 32;
                }
                else
                {
                  BOOL v13 = a1 == 0x65736162656D6974 && a2 == 0xE800000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 33;
                  }
                  else if (a1 == 0xD000000000000018 && a2 == 0x800000010048C310 {
                         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  }
                  {
                    swift_bridgeObjectRelease();
                    return 34;
                  }
                  else if (a1 == 0xD000000000000010 && a2 == 0x800000010048C330)
                  {
                    swift_bridgeObjectRelease();
                    return 35;
                  }
                  else
                  {
                    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    if (v14) {
                      return 35;
                    }
                    else {
                      return 36;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100391B80()
{
  return 36;
}

uint64_t sub_100391B88(char a1)
{
  uint64_t result = 1684632949;
  switch(a1)
  {
    case 1:
    case 7:
      uint64_t result = 0x65766974616C6572;
      break;
    case 2:
      uint64_t result = 4475203;
      break;
    case 3:
      uint64_t result = 0xD000000000000014;
      break;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    case 5:
      uint64_t result = 0x6B6E694C736168;
      break;
    case 6:
      uint64_t result = 0x6E69646E65507369;
      break;
    case 8:
      uint64_t v3 = 0x697461727564;
      goto LABEL_30;
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 10:
      uint64_t result = 0xD000000000000011;
      break;
    case 11:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
    case 13:
    case 19:
    case 23:
      uint64_t result = 0xD000000000000012;
      break;
    case 14:
      uint64_t result = 0xD000000000000010;
      break;
    case 15:
      uint64_t result = 0xD000000000000017;
      break;
    case 16:
      uint64_t result = 0xD000000000000017;
      break;
    case 17:
      uint64_t result = 0xD000000000000017;
      break;
    case 18:
      uint64_t result = 0xD000000000000021;
      break;
    case 20:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 21:
      uint64_t result = 0xD000000000000017;
      break;
    case 22:
      uint64_t result = 0xD000000000000011;
      break;
    case 24:
      uint64_t result = 0xD000000000000013;
      break;
    case 25:
      uint64_t result = 0xD000000000000014;
      break;
    case 26:
      uint64_t result = 0xD000000000000014;
      break;
    case 27:
      uint64_t result = 0xD000000000000015;
      break;
    case 28:
      uint64_t result = 0xD000000000000023;
      break;
    case 29:
      uint64_t result = 0xD000000000000023;
      break;
    case 30:
      uint64_t result = 0xD000000000000024;
      break;
    case 31:
      uint64_t result = 0xD000000000000013;
      break;
    case 32:
      uint64_t v3 = 0x6C41656D6974;
LABEL_30:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6E6F000000000000;
      break;
    case 33:
      uint64_t result = 0x65736162656D6974;
      break;
    case 34:
      uint64_t result = 0xD000000000000018;
      break;
    case 35:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100391F94()
{
  return sub_100391B88(*v0);
}

uint64_t sub_100391F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100390EC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100391FC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100391B80();
  *a1 = result;
  return result;
}

uint64_t sub_100391FEC(uint64_t a1)
{
  unint64_t v2 = sub_100392948();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100392028(uint64_t a1)
{
  unint64_t v2 = sub_100392948();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100392110()
{
  return type metadata accessor for RTCCSDConversationInfo();
}

uint64_t type metadata accessor for RTCCSDConversationInfo()
{
  uint64_t result = qword_10058BBF8;
  if (!qword_10058BBF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100392160()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10026ACE0();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1003922B4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1001F081C(&qword_100584B40);
  uint64_t v6 = sub_100202384(v5);
  __chkstk_darwin(v6);
  sub_1001F2514();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1001F081C(&qword_10058BC08);
  sub_1001F6398();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001F2514();
  uint64_t v16 = v15 - v14;
  sub_100204074(a1, a1[3]);
  sub_100392948();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100392D6C();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    sub_100392CF0(1);
    sub_100392D48(2);
    type metadata accessor for Date();
    sub_100392994(&qword_100588000, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100392D6C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100392D48(4);
    sub_100392CCC(5);
    sub_100392CCC(6);
    sub_100392D78(OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_relativeEnd);
    sub_100392D24(7);
    sub_100392D78(OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_duration);
    sub_100392D24(8);
    sub_100392CCC(9);
    sub_100392CCC(10);
    sub_100392D6C();
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maximumMemberCount), 12);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_initialMemberCount), 13);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_finalMemberCount), 14);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_maxNumberOfParticipants), 15);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_AVCBlobRecoveryAttempts), 16);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_AVCBlobRecoveryTimeouts), 17);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_remoteMemberNotInMemberListCounts), 18);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_transitionAttempts), 19);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_switchToOneToOneModeFailures), 20);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_switchToGFTModeFailures), 21);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIRequests), 22);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIApprovals), 23);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_numberLMIDismissals), 24);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetryAttempts), 25);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetryFailures), 26);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_messageRetrySuccesses), 27);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetryAttempts), 28);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetryFailures), 29);
    sub_100392CA8(*(void *)(v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_avcBlobRecoveryMessageRetrySuccesses), 30);
    sub_100392CF0(31);
    sub_100392CF0(32);
    uint64_t v17 = v3 + OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_timebase;
    swift_beginAccess();
    sub_100319018(v17, v9);
    sub_100392D6C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_1003929DC(v9, &qword_100584B40);
    sub_100392D6C();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_100392D78(OBJC_IVAR____TtC13callservicesd22RTCCSDConversationInfo_lastTimeNotAlone);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
}

uint64_t sub_1003928CC(void *a1)
{
  return sub_1003922B4(a1);
}

uint64_t sub_1003928F0(uint64_t a1)
{
  uint64_t result = sub_100392994(&qword_1005855A0, (void (*)(uint64_t))type metadata accessor for RTCCSDConversationInfo);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100392948()
{
  unint64_t result = qword_10058BC10;
  if (!qword_10058BC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058BC10);
  }
  return result;
}

uint64_t sub_100392994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003929DC(uint64_t a1, uint64_t *a2)
{
  sub_1001F081C(a2);
  sub_1001F75FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t getEnumTagSinglePayload for RTCCSDConversationInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDD)
  {
    if (a2 + 35 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 35) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 36;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x24;
  int v5 = v6 - 36;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RTCCSDConversationInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 35 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 35) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDC)
  {
    unsigned int v6 = ((a2 - 221) >> 8) + 1;
    *uint64_t result = a2 + 35;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100392B80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 35;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RTCCSDConversationInfo.CodingKeys()
{
  return &type metadata for RTCCSDConversationInfo.CodingKeys;
}

unint64_t sub_100392BBC()
{
  unint64_t result = qword_10058BC18;
  if (!qword_10058BC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058BC18);
  }
  return result;
}

unint64_t sub_100392C0C()
{
  unint64_t result = qword_10058BC20;
  if (!qword_10058BC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058BC20);
  }
  return result;
}

unint64_t sub_100392C5C()
{
  unint64_t result = qword_10058BC28;
  if (!qword_10058BC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058BC28);
  }
  return result;
}

uint64_t sub_100392CA8@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(unsigned char *)(v3 - 104) = a2;
  return KeyedEncodingContainer.encode(_:forKey:)(a1, v3 - 104, v2);
}

uint64_t sub_100392CCC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100392CF0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v2 - 104) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)(v2 - 104, v1);
}

uint64_t sub_100392D24@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100392D48@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100392D78@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_100392D88()
{
  return swift_beginAccess();
}

uint64_t sub_100392DE0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100392E50()
{
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

char *sub_100392E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unsigned int v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments;
  *(void *)&v6[OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v13 = *(void **)&v6[v12];
  *(void *)&v6[v12] = 0;
  uint64_t v14 = v6;

  swift_unknownObjectWeakAssign();
  v19.receiver = v14;
  v19.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v19, "init");
  id v16 = sub_100393A80(a1, a2, a3, v15, a5);

  swift_unknownObjectRelease();
  if (v16)
  {
    uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments];
    *(void *)&v15[OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments] = v16;
  }
  else
  {

    return 0;
  }
  return v15;
}

id sub_100393070()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments);
  if (result) {
    return [result streamToken];
  }
  __break(1u);
  return result;
}

SEL *sub_100393144(SEL *result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments)) {
    return (SEL *)[*(id *)(v1 + OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments) *result];
  }
  __break(1u);
  return result;
}

id sub_100393164(id result, unsigned __int8 a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC13callservicesd13CSDAVCMoments_moments);
  if (v5)
  {
    NSString v6 = a4;
    unsigned __int8 v8 = result;
    if (a4)
    {
      id v9 = v5;
      NSString v6 = String._bridgeToObjectiveC()();
    }
    else
    {
      id v10 = v5;
    }
    id v11 = [v5 newRequestWithMediaType:v8 mode:a2 requesteeID:v6];

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10039328C()
{
}

uint64_t type metadata accessor for CSDAVCMoments()
{
  return self;
}

void *sub_10039333C(uint64_t a1, uint64_t a2)
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result moments:v2 capabilitiesDidChange:a2];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100393428(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    if (a3) {
      a3 = (void *)_convertErrorToNSError(_:)();
    }
    objc_msgSend(v9, *a4, v4, a2, a3);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1003934D8(void *a1, uint64_t a2, void *a3, void *a4, void *a5, SEL *a6)
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a1;
  id v13 = a5;
  sub_100393428((uint64_t)v13, (uint64_t)a4, a5, a6);
}

uint64_t sub_100393624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = sub_1001F081C(&qword_1005878F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v26 - v15;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = (void *)result;
    sub_10029AC90(a3, (uint64_t)v16);
    uint64_t v19 = type metadata accessor for URL();
    uint64_t v21 = 0;
    if (sub_1001F758C((uint64_t)v16, 1, v19) != 1)
    {
      URL._bridgeToObjectiveC()(v20);
      uint64_t v21 = v22;
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v16, v19);
    }
    sub_10029AC90(a4, (uint64_t)v14);
    if (sub_1001F758C((uint64_t)v14, 1, v19) == 1)
    {
      uint64_t v24 = 0;
      if (!a5) {
        goto LABEL_9;
      }
    }
    else
    {
      URL._bridgeToObjectiveC()(v23);
      uint64_t v24 = v25;
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v14, v19);
      if (!a5)
      {
LABEL_9:
        [v18 moments:v6 didEndProcessingRequest:a2 stillImageURL:v21 movieURL:v24 error:a5];

        return swift_unknownObjectRelease();
      }
    }
    a5 = (void *)_convertErrorToNSError(_:)();
    goto LABEL_9;
  }
  return result;
}

void *sub_100393998()
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    if ([result respondsToSelector:"momentsServerDidDisconnect:"]) {
      [v2 momentsServerDidDisconnect:v0];
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_100393A80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (a3)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  id v9 = [objc_allocWithZone((Class)AVCMoments) initWithStreamToken:a1 requesterID:v8 delegate:a4 dispatchQueue:a5];

  return v9;
}

void sub_100393B1C()
{
  sub_1003993A8();
  if (v1)
  {
    sub_1001F081C((uint64_t *)&unk_1005884E0);
    uint64_t v2 = (void *)sub_10039913C();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  sub_100398F18();
  unint64_t v5 = v4 & v3;
  sub_10039935C();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v6 << 6);
  while (1)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v0 + 48) + 16 * v8);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    sub_100201880(*(void *)(v0 + 56) + 32 * v8, (uint64_t)v44);
    *(void *)&long long v43 = v23;
    *((void *)&v43 + 1) = v22;
    v41[2] = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    *(void *)&v41[0] = v23;
    *((void *)&v41[0] + 1) = v22;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1001F75B4(v42, v36);
    long long v37 = v33;
    long long v38 = v34;
    uint64_t v39 = v35;
    sub_1001F75B4(v36, v40);
    long long v33 = v37;
    long long v34 = v38;
    uint64_t v35 = v39;
    sub_1001F75B4(v40, v41);
    sub_1001F75B4(v41, &v37);
    AnyHashable._rawHashValue(seed:)(v2[5]);
    sub_100398FC4();
    if (v24)
    {
      sub_100283EE8();
      while (++v27 != v28 || (v26 & 1) == 0)
      {
        BOOL v29 = v27 == v28;
        if (v27 == v28) {
          uint64_t v27 = 0;
        }
        v26 |= v29;
        if (v2[v27 + 8] != -1)
        {
          sub_100283EA0();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_100283F1C();
LABEL_36:
    sub_100398EEC(v25);
    *(_OWORD *)uint64_t v30 = v33;
    *(_OWORD *)(v30 + 16) = v34;
    *(void *)(v30 + 32) = v35;
    sub_1001F75B4(&v37, (_OWORD *)(v2[7] + 32 * v31));
    ++v2[2];
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v6, 1)) {
      goto LABEL_40;
    }
    sub_1003992E8();
    if (v9 == v10) {
      goto LABEL_38;
    }
    sub_1003992DC();
    if (!v11)
    {
      sub_100398F94();
      if (v9 == v10) {
        goto LABEL_38;
      }
      sub_100399180();
      if (!v12)
      {
        sub_100398F94();
        if (v9 == v10) {
          goto LABEL_38;
        }
        sub_100399180();
        if (!v13)
        {
          sub_100398F94();
          if (v9 == v10) {
            goto LABEL_38;
          }
          sub_100399180();
          if (!v14)
          {
            sub_1003992E8();
            if (v9 == v10)
            {
LABEL_38:
              swift_release();
              sub_100399324();
              return;
            }
            if (!*(void *)(v32 + 8 * v15)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_100399014();
    unint64_t v5 = v18 & v17;
    unint64_t v8 = v20 + (v19 << 6);
    uint64_t v6 = v19;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_100398F94();
    if (v9 == v10) {
      goto LABEL_38;
    }
    sub_1003992B0();
    if (v16) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_100393DF0()
{
  sub_1003993A8();
  if (v1)
  {
    sub_1001F081C((uint64_t *)&unk_1005884E0);
    uint64_t v2 = (void *)sub_10039913C();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  sub_100398F18();
  unint64_t v5 = v4 & v3;
  sub_10039935C();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v6 << 6);
  while (1)
  {
    uint64_t v21 = (void *)(*(void *)(v0 + 48) + 16 * v8);
    uint64_t v22 = v21[1];
    *(void *)&v41[0] = *v21;
    *((void *)&v41[0] + 1) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v37 = v34;
    long long v38 = v35;
    uint64_t v39 = v36;
    uint64_t v23 = (_OWORD *)sub_1003992A4();
    sub_1001F75B4(v23, v24);
    long long v34 = v37;
    long long v35 = v38;
    uint64_t v36 = v39;
    sub_1001F75B4(&v40, v41);
    sub_1001F75B4(v41, &v37);
    AnyHashable._rawHashValue(seed:)(v2[5]);
    sub_100398FC4();
    if (v25)
    {
      sub_100283EE8();
      while (++v28 != v29 || (v27 & 1) == 0)
      {
        BOOL v30 = v28 == v29;
        if (v28 == v29) {
          uint64_t v28 = 0;
        }
        v27 |= v30;
        if (v2[v28 + 8] != -1)
        {
          sub_100283EA0();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_100283F1C();
LABEL_36:
    sub_100398EEC(v26);
    *(_OWORD *)uint64_t v31 = v34;
    *(_OWORD *)(v31 + 16) = v35;
    *(void *)(v31 + 32) = v36;
    sub_1001F75B4(&v37, (_OWORD *)(v2[7] + 32 * v32));
    ++v2[2];
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v6, 1)) {
      goto LABEL_40;
    }
    sub_1003992E8();
    if (v9 == v10) {
      goto LABEL_38;
    }
    sub_1003992DC();
    if (!v11)
    {
      sub_100398F94();
      if (v9 == v10) {
        goto LABEL_38;
      }
      sub_100399180();
      if (!v12)
      {
        sub_100398F94();
        if (v9 == v10) {
          goto LABEL_38;
        }
        sub_100399180();
        if (!v13)
        {
          sub_100398F94();
          if (v9 == v10) {
            goto LABEL_38;
          }
          sub_100399180();
          if (!v14)
          {
            sub_1003992E8();
            if (v9 == v10)
            {
LABEL_38:
              swift_release();
              sub_100399324();
              return;
            }
            if (!*(void *)(v33 + 8 * v15)) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_100399014();
    unint64_t v5 = v18 & v17;
    unint64_t v8 = v20 + (v19 << 6);
    uint64_t v6 = v19;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_100398F94();
    if (v9 == v10) {
      goto LABEL_38;
    }
    sub_1003992B0();
    if (v16) {
      goto LABEL_26;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_1003940B8()
{
  sub_1003993A8();
  if (v1)
  {
    sub_1001F081C(&qword_10058AA30);
    uint64_t v2 = (void *)sub_10039913C();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  sub_100398F44();
  unint64_t v5 = v4 & v3;
  uint64_t v6 = &v43;
  unint64_t v7 = &v45;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  char v9 = (char *)&type metadata for Any + 8;
  char v10 = &type metadata for Bool;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v40 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8, 1)) {
          goto LABEL_36;
        }
        sub_100206FDC();
        if (v12 == v13)
        {
LABEL_33:
          sub_100206FA0();
          return;
        }
        sub_1003992DC();
        if (!v14)
        {
          sub_100398F88();
          if (v12 == v13) {
            goto LABEL_33;
          }
          sub_1003991E0();
          if (!v15)
          {
            sub_100398F88();
            if (v12 == v13) {
              goto LABEL_33;
            }
            sub_1003991E0();
            if (!v16)
            {
              sub_100398F88();
              if (v12 == v13) {
                goto LABEL_33;
              }
              sub_1003991E0();
              if (!v17)
              {
                sub_100206FDC();
                if (v12 == v13) {
                  goto LABEL_33;
                }
                if (!*(void *)(v38 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1))
                  {
                    sub_100398F88();
                    if (v12 == v13) {
                      goto LABEL_33;
                    }
                    sub_1003992B0();
                    if (v19) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_100399014();
        uint64_t v40 = v21 & v20;
        unint64_t v11 = v23 + (v22 << 6);
        uint64_t v8 = v22;
      }
      char v24 = (uint64_t *)(*(void *)(v0 + 48) + 16 * v11);
      uint64_t v41 = *v24;
      uint64_t v42 = v24[1];
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      sub_1001F75B4(v6, v7);
      sub_1001F75B4(v7, v46);
      sub_1001F75B4(v46, &v44);
      unint64_t v25 = sub_100233664();
      unint64_t v26 = v25;
      if ((v27 & 1) == 0) {
        break;
      }
      uint64_t v39 = v8;
      uint64_t v28 = v7;
      uint64_t v29 = v6;
      uint64_t v30 = v0;
      uint64_t v31 = v10;
      uint64_t v32 = v9;
      uint64_t v33 = (void *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *uint64_t v33 = v41;
      v33[1] = v42;
      char v9 = v32;
      char v10 = v31;
      uint64_t v0 = v30;
      uint64_t v6 = v29;
      unint64_t v7 = v28;
      uint64_t v8 = v39;
      long long v34 = (_OWORD *)(v2[7] + 32 * v26);
      sub_1002018DC((uint64_t)v34);
      sub_1001F75B4(&v44, v34);
      unint64_t v5 = v40;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    long long v35 = (void *)(v2[6] + 16 * v25);
    *long long v35 = v41;
    v35[1] = v42;
    sub_1001F75B4(&v44, (_OWORD *)(v2[7] + 32 * v25));
    uint64_t v36 = v2[2];
    BOOL v13 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v13) {
      goto LABEL_35;
    }
    v2[2] = v37;
    unint64_t v5 = v40;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1003943A4()
{
  sub_1003993A8();
  if (v1)
  {
    sub_1001F081C(&qword_10058BD78);
    uint64_t v2 = (void *)sub_10039913C();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  sub_100398F44();
  unint64_t v5 = v4 & v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        unint64_t v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v8 = v7 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6, 1)) {
          goto LABEL_36;
        }
        sub_100206FDC();
        if (v9 == v10)
        {
LABEL_33:
          sub_100206FA0();
          return;
        }
        sub_1003992DC();
        if (!v11)
        {
          sub_100398F88();
          if (v9 == v10) {
            goto LABEL_33;
          }
          sub_1003991E0();
          if (!v12)
          {
            sub_100398F88();
            if (v9 == v10) {
              goto LABEL_33;
            }
            sub_1003991E0();
            if (!v13)
            {
              sub_100398F88();
              if (v9 == v10) {
                goto LABEL_33;
              }
              sub_1003991E0();
              if (!v14)
              {
                sub_100206FDC();
                if (v9 == v10) {
                  goto LABEL_33;
                }
                if (!*(void *)(v34 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_100398F88();
                    if (v9 == v10) {
                      goto LABEL_33;
                    }
                    sub_1003992B0();
                    if (v16) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_100399014();
        unint64_t v5 = v18 & v17;
        unint64_t v8 = v20 + (v19 << 6);
        uint64_t v6 = v19;
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v0 + 48) + 16 * v8);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = *(void **)(*(void *)(v0 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
      id v25 = v24;
      unint64_t v26 = sub_100233664();
      unint64_t v27 = v26;
      if ((v28 & 1) == 0) {
        break;
      }
      uint64_t v29 = (void *)(v2[6] + 16 * v26);
      swift_bridgeObjectRelease();
      *uint64_t v29 = v23;
      v29[1] = v22;
      uint64_t v30 = v2[7];

      *(void *)(v30 + 8 * v27) = v25;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v26;
    uint64_t v31 = (void *)(v2[6] + 16 * v26);
    *uint64_t v31 = v23;
    v31[1] = v22;
    *(void *)(v2[7] + 8 * v26) = v25;
    uint64_t v32 = v2[2];
    BOOL v10 = __OFADD__(v32, 1);
    uint64_t v33 = v32 + 1;
    if (v10) {
      goto LABEL_35;
    }
    v2[2] = v33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1003945D4()
{
  qword_10058BD30 = (uint64_t)&_swiftEmptyDictionarySingleton;
}

uint64_t sub_1003945E8(uint64_t a1, void *a2)
{
  type metadata accessor for AnalyticsReporter();
  sub_100396638(a2);
  uint64_t v4 = v3;
  uint64_t v5 = sub_100398FA0();
  sub_1003962FC(v5, v6, v4);
  swift_bridgeObjectRelease();
  return sub_1003946B0(a2);
}

uint64_t sub_1003946B0(void *a1)
{
  if (qword_100583AB0 != -1) {
    swift_once();
  }
  id v2 = sub_1003992F4();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  sub_1003992BC();
  uint64_t v6 = sub_100223684(v3, v5, qword_10058BD30);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v6)
  {
    id v7 = sub_1003992F4();
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    id v11 = sub_1003992F4();
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    type metadata accessor for CallRecordingTracker();
    swift_allocObject();
    uint64_t v15 = sub_100337130(v12, v14);
    sub_1002024E8();
    sub_10027FDC4((uint64_t)v15, v8, v10);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  id v16 = sub_1003992F4();
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  sub_1003992BC();
  uint64_t v20 = sub_100223684(v17, v19, qword_10058BD30);
  swift_bridgeObjectRelease();
  if (!v20) {
    return swift_endAccess();
  }
  swift_endAccess();
  BOOL v21 = sub_1003371A0(a1);
  uint64_t result = swift_release();
  if (v21)
  {
    sub_100396638(a1);
    uint64_t v24 = v23;
    uint64_t v25 = sub_100398FA0();
    sub_1003962FC(v25, v26, v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003948AC(void *a1)
{
  return sub_100399178(a1, "Logged manual launch needed event for session: %s");
}

uint64_t sub_10039491C(void *a1)
{
  return sub_100399178(a1, "Logged manual launch attempt event for session: %s");
}

uint64_t sub_10039493C(void *a1, const char *a2)
{
  if (qword_1005839F8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1001F5F88(v4, (uint64_t)qword_100594BE0);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_100235B18();
    uint64_t v13 = sub_100202470();
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_1001F6204(0, &qword_100587568);
    id v9 = v5;
    uint64_t v10 = String.init<A>(reflecting:)();
    sub_1002344D8(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a2, v8, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
  return sub_100395194(v5);
}

void sub_100394B80(void *a1, int a2)
{
  if (qword_1005839F8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1001F5F88(v4, (uint64_t)qword_100594BE0);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_1001F6204(0, &qword_100587568);
    int v9 = a2;
    id v10 = v5;
    uint64_t v11 = String.init<A>(reflecting:)();
    sub_1002344D8(v11, v12, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a2 = v9;
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    type metadata accessor for IDSGroupSessionServerErrorCode(0);
    uint64_t v13 = String.init<A>(reflecting:)();
    sub_1002344D8(v13, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Logged session server termination event for session: %s reason: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
  sub_1001F618C([v5 activity]);
  if (v15)
  {
    sub_1001F081C(&qword_10058BD70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10048FB00;
    *(void *)(inited + 32) = 0xD000000000000010;
    *(void *)(inited + 40) = 0x800000010047CF50;
    sub_1001F6204(0, (unint64_t *)&qword_10058B4C0);
    *(void *)(inited + 48) = sub_1002EAB80();
    *(void *)(inited + 56) = 0xD000000000000012;
    *(void *)(inited + 64) = 0x800000010048C920;
    LODWORD(v22) = a2;
    dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(inited + 72) = sub_1002EAB80();
    Dictionary.init(dictionaryLiteral:)();
    sub_1003943A4();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_100396180(0xD00000000000003BLL, 0x800000010048C940, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      BOOL v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Couldn't log server termination event because of no bundleIdentifier on activitySession", v21, 2u);
      sub_1001F63CC();
    }
  }
}

uint64_t sub_100394F9C()
{
  if (qword_1005839F8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1001F5F88(v0, (uint64_t)qword_100594BE0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Logged DualSIMRingtoneState: %{BOOL}d", v3, 8u);
    sub_1001F63CC();
  }

  sub_1001F081C((uint64_t *)&unk_100588240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10048F550;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x800000010048C8D0;
  *(NSNumber *)(inited + 48) = Bool._bridgeToObjectiveC()();
  sub_1001F6204(0, (unint64_t *)&qword_100585590);
  Dictionary.init(dictionaryLiteral:)();
  sub_1003943A4();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  sub_100396180(0xD000000000000027, 0x800000010048C8F0, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100395194(void *a1)
{
  id v1 = [a1 activity];
  id v2 = [v1 metadata];

  if (v2)
  {
    id v3 = [v2 context];

    id v4 = [v3 analyticsIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1001F081C(&qword_10058BD70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10048FB00;
  strcpy((char *)(inited + 32), "activity_type");
  *(_WORD *)(inited + 46) = -4864;
  sub_1001F6204(0, (unint64_t *)&qword_10058B4C0);
  *(void *)(inited + 48) = sub_1002EAB80();
  *(void *)(inited + 56) = 0x745F6E6F69746361;
  *(void *)(inited + 64) = 0xEB00000000657079;
  swift_bridgeObjectRetain();
  *(void *)(inited + 72) = sub_1002EAB80();
  Dictionary.init(dictionaryLiteral:)();
  sub_1003943A4();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_100396180(0xD00000000000002ELL, 0x800000010048C8A0, v7);
  return swift_bridgeObjectRelease();
}

void sub_100395378(void *a1, id a2)
{
  uint64_t v3 = v2;
  if ([a2 status] != 6 || !objc_msgSend(a2, "isEndpointOnCurrentDevice"))
  {
    id v22 = [a2 provider];
    unsigned int v23 = [v22 isTelephonyProvider];

    if (!v23) {
      return;
    }
    uint64_t v24 = (uint64_t *)(v3 + OBJC_IVAR___CSDAnalyticsReporter_callToStartTransportType);
    sub_1002022F8();
    uint64_t v25 = *v24;
    id v26 = a2;
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1002238B8(v26, v25);

    swift_bridgeObjectRelease();
    if (v27) {
      return;
    }
    uint64_t v28 = sub_100398D74(v26);
    if (v28)
    {
      uint64_t v29 = v28;
      sub_100399158();
      AnyHashable.init<A>(_:)();
      sub_1002232D0((uint64_t)v90, v29, &v91);
      swift_bridgeObjectRelease();
      sub_100234D14((uint64_t)v90);
      if (*((void *)&v92 + 1))
      {
        sub_1001F75B4(&v91, v90);
        type metadata accessor for AnalyticsReporter();
        sub_100201880((uint64_t)v90, (uint64_t)&v91);
        id v30 = v26;
        unsigned __int8 v31 = sub_100398300((uint64_t)&v91);
        sub_10021E23C((uint64_t)&v91, (uint64_t *)&unk_100584CA0);
        id v32 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v31];
        sub_1002024E8();
        if (v32)
        {
          sub_10027FE4C((uint64_t)v32, v30);
        }
        else
        {
          uint64_t v77 = sub_1002CEF10(v30);

          id v30 = (id)v77;
        }

        swift_endAccess();
        sub_1002018DC((uint64_t)v90);
        goto LABEL_82;
      }
    }
    else
    {
      long long v91 = 0u;
      long long v92 = 0u;
    }
    sub_10021E23C((uint64_t)&v91, (uint64_t *)&unk_100584CA0);
LABEL_82:
    id v78 = [v26 callCenter];
    id v79 = v78;
    if (v78)
    {
      id v80 = [v78 routeController];

      id v79 = [v80 pickedRoute];
    }
    type metadata accessor for AnalyticsReporter();
    uint64_t v81 = sub_100398A34(v79);
    uint64_t v83 = v82;

    sub_1002024E8();
    id v84 = v26;
    sub_10027FDE4(v81, v83, (uint64_t)v84);
    swift_endAccess();

    return;
  }
  type metadata accessor for AnalyticsReporter();
  sub_1002022F8();
  unint64_t v6 = (unint64_t)a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1003992A4();
  int v9 = sub_1002238B8(v7, v8);
  swift_bridgeObjectRelease();
  id v10 = (uint64_t *)(v2 + OBJC_IVAR___CSDAnalyticsReporter_callToAudioRoutesTracker);
  sub_1002022F8();
  uint64_t v86 = v10;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1003992A4();
  uint64_t v13 = sub_100223990(v11, v12);

  swift_bridgeObjectRelease();
  sub_100396B20((void *)v6, v9, v13);
  uint64_t v15 = v14;

  swift_bridgeObjectRelease();
  if (qword_1005839F8 != -1) {
    goto LABEL_88;
  }
LABEL_4:
  uint64_t v16 = type metadata accessor for Logger();
  sub_1001F5F88(v16, (uint64_t)qword_100594BE0);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)sub_100235B18();
    v93[0] = sub_100202470();
    *(_DWORD *)uint64_t v19 = 136315138;
    sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
    uint64_t v20 = Dictionary.description.getter();
    sub_1002344D8(v20, v21, v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Logging end call to core analytics: %s", v19, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100396180(0xD000000000000025, 0x800000010048C870, v15);
  swift_bridgeObjectRelease();
  sub_1002024E8();
  uint64_t v33 = (id *)(id)v6;
  uint64_t v34 = (void *)sub_1002CEF10(v33);
  swift_endAccess();

  id v35 = [a1 calls];
  sub_1001F6204(0, (unint64_t *)&qword_10058A480);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v85 = *v86 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(*v86 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & *(void *)(*v86 + 64);
  int64_t v87 = (unint64_t)(v36 + 63) >> 6;
  a1 = (void *)(v6 & 0xC000000000000001);
  uint64_t v88 = *v86;
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  while (1)
  {
    if (v38)
    {
      unint64_t v40 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v41 = v40 | (v39 << 6);
      goto LABEL_41;
    }
    int64_t v42 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      goto LABEL_87;
    }
    if (v42 >= v87)
    {
LABEL_67:
      swift_bridgeObjectRelease();
      swift_release();
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v67)
        {
LABEL_69:
          if (v67 < 1) {
            goto LABEL_92;
          }
          for (uint64_t i = 0; i != v67; ++i)
          {
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
              id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v69 = (id)_swiftEmptyArrayStorage[i + 4];
            }
            uint64_t v70 = v69;
            sub_1002024E8();
            swift_bridgeObjectRetain();
            uint64_t v71 = sub_100233A08((uint64_t)v70);
            char v73 = v72;
            swift_bridgeObjectRelease();
            if (v73)
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v89 = *v86;
              uint64_t v75 = *v86;
              uint64_t *v86 = 0x8000000000000000;
              Swift::Int v76 = *(void *)(v75 + 24);
              sub_1001F081C((uint64_t *)&unk_100587090);
              _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v76);

              sub_1002CFEB4();
              _NativeDictionary._delete(at:)();
              uint64_t *v86 = v89;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
          }
        }
      }
      else
      {
        uint64_t v67 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v67) {
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v43 = *(void *)(v85 + 8 * v42);
    ++v39;
    if (v43) {
      goto LABEL_40;
    }
    int64_t v39 = v42 + 1;
    sub_10039924C();
    if (v44 == v45) {
      goto LABEL_67;
    }
    sub_100399240();
    if (v43) {
      goto LABEL_40;
    }
    int64_t v39 = v46 + 2;
    sub_10039924C();
    if (v44 == v45) {
      goto LABEL_67;
    }
    sub_100399240();
    if (v43) {
      goto LABEL_40;
    }
    int64_t v39 = v47 + 3;
    sub_10039924C();
    if (v44 == v45) {
      goto LABEL_67;
    }
    sub_100399240();
    if (v43) {
      goto LABEL_40;
    }
    int64_t v39 = v48 + 4;
    sub_10039924C();
    if (v44 == v45) {
      goto LABEL_67;
    }
    sub_100399240();
    if (v43) {
      goto LABEL_40;
    }
    int64_t v50 = v49 + 5;
    if (v50 >= v87) {
      goto LABEL_67;
    }
    unint64_t v43 = *(void *)(v85 + 8 * v50);
    if (!v43) {
      break;
    }
    int64_t v39 = v50;
LABEL_40:
    unint64_t v38 = (v43 - 1) & v43;
    unint64_t v41 = __clz(__rbit64(v43)) + (v39 << 6);
LABEL_41:
    uint64_t v52 = *(void **)(*(void *)(v88 + 48) + 8 * v41);
    if (v6 >> 62)
    {
      id v66 = v52;
      swift_bridgeObjectRetain();
      uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
      if (!v53) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v53 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v54 = v52;
      swift_bridgeObjectRetain();
      if (!v53) {
        goto LABEL_48;
      }
    }
    if (a1) {
      id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v55 = *(id *)(v6 + 32);
    }
    uint64_t v56 = v55;
    char v57 = static NSObject.== infix(_:_:)();

    if (v57)
    {
LABEL_46:

      swift_bridgeObjectRelease();
    }
    else
    {
      if (v53 != 1)
      {
        if (a1) {
          id v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v59 = *(id *)(v6 + 40);
        }
        uint64_t v60 = v59;
        char v61 = static NSObject.== infix(_:_:)();

        if (v61) {
          goto LABEL_46;
        }
        if (v53 != 2)
        {
          uint64_t v62 = 6;
          while (1)
          {
            id v63 = a1 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v6 + 8 * v62);
            uint64_t v64 = v63;
            uint64_t v15 = v62 - 3;
            if (__OFADD__(v62 - 4, 1)) {
              break;
            }
            char v65 = static NSObject.== infix(_:_:)();

            if (v65) {
              goto LABEL_46;
            }
            ++v62;
            if (v15 == v53) {
              goto LABEL_48;
            }
          }
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          swift_once();
          goto LABEL_4;
        }
      }
LABEL_48:
      swift_bridgeObjectRelease();
      id v58 = v52;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  while (1)
  {
    int64_t v39 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    sub_10039924C();
    if (v44 == v45) {
      goto LABEL_67;
    }
    sub_100399240();
    int64_t v50 = v51 + 1;
    if (v43) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_92:
  __break(1u);
}

void sub_100395E1C(int a1, void *a2, id a3)
{
  if ([a3 status] != 5 && objc_msgSend(a3, "status") != 6)
  {
    if (qword_1005839F8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1001F5F88(v5, (uint64_t)qword_100594BE0);
    id v6 = a3;
    id v7 = a2;
    id v8 = v6;
    id v9 = v7;
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      v23[0] = sub_100202470();
      *(_DWORD *)uint64_t v12 = 136315394;
      id v13 = [v8 callUUID];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      sub_1002344D8(v14, v16, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2112;
      id v17 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v22 = v9;

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Audio route update for %s: %@", (uint8_t *)v12, 0x16u);
      sub_1001F081C(&qword_100585900);
      swift_arrayDestroy();
      sub_1001F63CC();
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {
    }
    type metadata accessor for AnalyticsReporter();
    id v18 = v8;
    uint64_t v19 = sub_100398A34(v9);
    uint64_t v21 = v20;
    sub_1002024E8();
    sub_10027FDE4(v19, v21, (uint64_t)v18);
    swift_endAccess();
  }
}

void sub_100396180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  v7[4] = sub_100398E30;
  void v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100396260;
  v7[3] = &unk_1005176A0;
  id v6 = _Block_copy(v7);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);
}

Class sub_100396260(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

void sub_1003962FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t aBlock = 0xD000000000000018;
  unint64_t v16 = 0x800000010048C830;
  String.append(_:)(*(Swift::String *)&a1);
  if (a3)
  {
    uint64_t v4 = qword_1005839F8;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1001F5F88(v5, (uint64_t)qword_100594BE0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_bridgeObjectRetain();
      sub_1002344D8(0xD000000000000018, 0x800000010048C830, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2080;
      sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
      swift_bridgeObjectRetain();
      uint64_t v9 = Dictionary.description.getter();
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_1002344D8(v9, v11, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Returning ca event of %s, payload: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      sub_1001F63CC();
      sub_1001F63CC();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  uint64_t v19 = sub_100398E38;
  uint64_t v20 = v13;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v16 = 1107296256;
  id v17 = sub_100396260;
  id v18 = &unk_100517650;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v14);
}

void sub_100396638(void *a1)
{
  uint64_t v2 = sub_1001F081C(&qword_100584B40);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v38 - v6;
  uint64_t v8 = type metadata accessor for Date();
  sub_1001F6398();
  uint64_t v10 = v9;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  id v17 = (char *)&v38 - v16;
  sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
  uint64_t v39 = Dictionary.init(dictionaryLiteral:)();
  id v18 = [a1 recordingStartedDate];
  if (!v18)
  {
    sub_10039928C((uint64_t)v7, 1);
    goto LABEL_11;
  }
  uint64_t v19 = v18;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = *(void (**)(void))(v10 + 32);
  sub_100399104();
  v20();
  sub_10039928C((uint64_t)v7, 0);
  if (sub_1001F758C((uint64_t)v7, 1, v8) == 1)
  {
LABEL_11:
    uint64_t v5 = v7;
    goto LABEL_14;
  }
  sub_100399104();
  v20();
  id v21 = [a1 recordingEndedDate];
  if (v21)
  {
    id v22 = v21;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100399104();
    v20();
    sub_10039928C((uint64_t)v5, 0);
    if (sub_1001F758C((uint64_t)v5, 1, v8) != 1)
    {
      sub_1003992A4();
      sub_100399104();
      v20();
      Date.timeIntervalSince(_:)();
      sub_1002C20C0();
      if (v23)
      {
        __break(1u);
      }
      else
      {
        sub_100399350();
        if (!(v24 ^ v25 | v23))
        {
          sub_1003990F4();
          if (v24)
          {
            [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:(unint64_t)v26];
            uint64_t v27 = v39;
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v41 = v27;
            sub_10039930C();
            swift_bridgeObjectRelease();
            uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
            v28(v14, v8);
            v28(v17, v8);
            return;
          }
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
      return;
    }
  }
  else
  {
    sub_10039928C((uint64_t)v5, 1);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v8);
LABEL_14:
  sub_10021E23C((uint64_t)v5, &qword_100584B40);
  if (qword_1005839F8 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_1001F5F88(v29, (uint64_t)qword_100594BE0);
  id v30 = a1;
  unsigned __int8 v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)sub_100235B18();
    uint64_t v34 = sub_100202470();
    uint64_t v40 = (uint64_t)v30;
    uint64_t v41 = v34;
    *(_DWORD *)uint64_t v33 = 136315138;
    sub_1001F6204(0, (unint64_t *)&qword_100588810);
    id v35 = v30;
    uint64_t v36 = String.init<A>(reflecting:)();
    uint64_t v40 = sub_1002344D8(v36, v37, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Call recording session has nil start or end dates: %s ", v33, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }
  else
  {
  }
}

void sub_100396B20(void *a1, void *a2, uint64_t a3)
{
  uint64_t v111 = a3;
  id v109 = a2;
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  __chkstk_darwin(v4 - 8);
  sub_1001F7650();
  id v104 = (uint8_t *)v5;
  sub_1002B8138();
  __chkstk_darwin(v6);
  uint64_t v110 = (uint8_t *)&v101 - v7;
  sub_1002B8138();
  __chkstk_darwin(v8);
  os_log_type_t v106 = (void (*)(void))((char *)&v101 - v9);
  uint64_t v10 = type metadata accessor for Date();
  sub_1001F6398();
  uint64_t v112 = v11;
  __chkstk_darwin(v12);
  sub_1001F7650();
  uint64_t v102 = v13;
  sub_1002B8138();
  __chkstk_darwin(v14);
  uint64_t v108 = (char *)&v101 - v15;
  sub_1002B8138();
  __chkstk_darwin(v16);
  uint64_t v113 = (char *)&v101 - v17;
  sub_1002B8138();
  __chkstk_darwin(v18);
  objc_super v103 = (char *)&v101 - v19;
  uint64_t v105 = sub_1001F6204(0, (unint64_t *)&qword_1005861B0);
  uint64_t v20 = Dictionary.init(dictionaryLiteral:)();
  id v21 = [a1 displayContext];
  sub_10039862C(v21);

  Int._bridgeToObjectiveC()();
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v20;
  unint64_t v22 = 0x8000000000000000;
  unint64_t v119 = 0x8000000000000000;
  sub_10039930C();
  uint64_t v23 = v116[0];
  swift_bridgeObjectRelease();
  sub_1001F618C([a1 provider]);
  char v24 = (char **)sub_1001F6204(0, (unint64_t *)&qword_10058B4C0);
  sub_1002EAB80();
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v23;
  unint64_t v119 = 0x8000000000000000;
  sub_100398E98();
  uint64_t v25 = v116[0];
  swift_bridgeObjectRelease();
  id v26 = [a1 provider];
  id v27 = [v26 identifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1002EAB80();
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v25;
  unint64_t v119 = 0x8000000000000000;
  sub_100282A30();
  sub_100399114();
  [a1 isIncoming];
  uint64_t v28 = &selRef_setActiveRequestsByTransactionID_;
  sub_100399274(objc_allocWithZone((Class)NSNumber));
  sub_100399034();
  sub_100398ED0();
  sub_100282A30();
  sub_100399114();
  [a1 isOnHold];
  sub_100399274(objc_allocWithZone((Class)NSNumber));
  sub_100399034();
  sub_100398ED0();
  sub_100282A30();
  sub_100399114();
  [a1 isConnected];
  sub_100399274(objc_allocWithZone((Class)NSNumber));
  sub_100399034();
  sub_10039904C();
  sub_100282A30();
  sub_100399114();
  [a1 status];
  sub_100399274(objc_allocWithZone((Class)NSNumber));
  sub_100399034();
  sub_10039904C();
  sub_100282A30();
  sub_100399114();
  [a1 isConferenced];
  sub_100399274(objc_allocWithZone((Class)NSNumber));
  sub_100399034();
  v116[0] = (uint64_t)v116;
  unint64_t v119 = 0x8000000000000000;
  sub_100398E98();
  sub_100399114();
  [a1 callDuration];
  sub_1002C20C0();
  if (v29)
  {
    __break(1u);
    goto LABEL_75;
  }
  sub_100399350();
  if (v30 ^ v31 | v29)
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    swift_once();
    goto LABEL_14;
  }
  sub_1003990F4();
  if (!v30) {
    goto LABEL_76;
  }
  [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:(unint64_t)v32];
  sub_100399034();
  v116[0] = (uint64_t)v116;
  unint64_t v119 = 0x8000000000000000;
  sub_100282A30();
  sub_100399114();
  objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", objc_msgSend(a1, "isJunk"));
  sub_100399034();
  sub_100398ED0();
  sub_100282A30();
  uint64_t v33 = v116[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1002EAB80();
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v33;
  unint64_t v119 = 0x8000000000000000;
  sub_100282A30();
  swift_bridgeObjectRelease();
  [a1 junkConfidence];
  sub_10039870C();
  sub_1002EAB80();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10039906C();
  sub_100282A30();
  swift_bridgeObjectRelease();
  [a1 identificationCategory];
  sub_100398798();
  sub_1002EAB80();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10039906C();
  sub_100282A30();
  uint64_t v34 = v116[0];
  swift_bridgeObjectRelease();
  sub_1001F6204(0, (unint64_t *)&qword_100585590);
  NSNumber.init(BOOLeanLiteral:)((Swift::Bool)[a1 wasScreened]);
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v34;
  unint64_t v119 = 0x8000000000000000;
  sub_10039930C();
  uint64_t v35 = v116[0];
  swift_bridgeObjectRelease();
  unsigned int v36 = [a1 wasScreened];
  if (v36) {
    LOBYTE(v36) = [a1 isScreening] ^ 1;
  }
  uint64_t v28 = &selRef_performBlock_;
  NSNumber.init(BOOLeanLiteral:)(v36);
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v35;
  unint64_t v119 = 0x8000000000000000;
  sub_100398E64();
  uint64_t v37 = v116[0];
  swift_bridgeObjectRelease();
  char v24 = &selRef_setActiveRequestsByTransactionID_;
  objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(a1, "liveVoicemailUnavailableReason"));
  swift_isUniquelyReferenced_nonNull_native();
  v116[0] = v37;
  unint64_t v119 = 0x8000000000000000;
  unint64_t v22 = 0xD000000000000010;
  sub_100398E98();
  sub_100398E48();
  id v38 = [a1 recordingSession];
  if (v38)
  {
    uint64_t v39 = v38;
    sub_1003946B0(v38);
  }
  id v40 = [a1 recordingDisabledError];
  if (v40
    && (v116[0] = (uint64_t)v40,
        sub_1001F081C((uint64_t *)&unk_100585FE0),
        sub_1001F6204(0, &qword_100589C50),
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v41 = (void *)v117;
    [objc_allocWithZone((Class)NSNumber) initWithBool:0];
    sub_100399228();
    sub_10039908C();
    unint64_t v119 = 0x8000000000000000;
    sub_100399388();
    sub_100398E48();
    objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", objc_msgSend(v41, "code"));
    sub_100399228();
    sub_10039908C();
    unint64_t v119 = 0x8000000000000000;
    sub_100398E98();
    unint64_t v119 = v116[0];
  }
  else
  {
    [objc_allocWithZone((Class)NSNumber) initWithBool:1];
    sub_100398E80();
    sub_100398EB8();
    sub_100398E64();
    unint64_t v119 = v116[0];
  }
  swift_bridgeObjectRelease();
  if (qword_100583AB0 != -1) {
    goto LABEL_77;
  }
LABEL_14:
  int64_t v42 = &selRef_blocksPendingTransportAvailability;
  id v43 = [a1 callUUID];
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  swift_beginAccess();
  uint64_t v47 = sub_100223684(v44, (uint64_t)v46, qword_10058BD30);
  swift_bridgeObjectRelease();
  if (!v47)
  {
    swift_endAccess();
    [objc_allocWithZone((Class)NSNumber) initWithBool:0];
    sub_100398E80();
    sub_100398EB8();
    sub_100398E64();
    sub_100398E48();
    goto LABEL_21;
  }
  swift_endAccess();
  [objc_allocWithZone((Class)NSNumber) initWithBool:1];
  sub_100399228();
  sub_10039908C();
  unint64_t v119 = 0x8000000000000000;
  sub_100399388();
  sub_100398E48();
  objc_msgSend(objc_allocWithZone((Class)NSNumber), v24[177], sub_100337250());
  sub_100399228();
  sub_10039908C();
  unint64_t v119 = 0x8000000000000000;
  sub_100398E98();
  sub_100398E48();
  sub_1003372B8();
  sub_1002C20C0();
  if (v29)
  {
    __break(1u);
    goto LABEL_79;
  }
  sub_100399350();
  if (v30 ^ v31 | v29)
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  sub_1003990F4();
  if (!v30) {
    goto LABEL_80;
  }
  [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:(unint64_t)v48];
  sub_100399228();
  sub_100398EB8();
  sub_10039930C();
  sub_100398E48();
  id v49 = [a1 callUUID];
  uint64_t v46 = (void (*)(void))static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;

  sub_1002024E8();
  sub_1002CEEF0((uint64_t)v46, v51);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v28 = &selRef_performBlock_;
LABEL_21:
  id v52 = [a1 v28[235]];
  unsigned int v53 = [v52 isSystemProvider];

  int64_t v42 = (char **)v112;
  if (!v53) {
    goto LABEL_30;
  }
  id v54 = [a1 dateSentInvitation];
  if (!v54)
  {
    uint64_t v46 = v106;
    sub_100399258((uint64_t)v106);
    goto LABEL_29;
  }
  id v55 = v54;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v56 = (void (*)(void))v42[4];
  uint64_t v46 = v106;
  v56();
  sub_1001F0530((uint64_t)v46, 0, 1, v10);
  if (sub_1001F758C((uint64_t)v46, 1, v10) == 1)
  {
LABEL_29:
    sub_10021E23C((uint64_t)v46, &qword_100584B40);
    goto LABEL_30;
  }
  char v57 = v24;
  ((void (*)(char *, void (*)(void), uint64_t))v56)(v103, v46, v10);
  id v58 = [a1 dateCreated];
  id v59 = v113;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSince(_:)();
  uint64_t v46 = (void (*)(void))(v42 + 1);
  int64_t v42 = (char **)v42[1];
  ((void (*)(char *, uint64_t))v42)(v59, v10);
  sub_1002C20C0();
  if (v29)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v60 <= -9.22337204e18)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v60 >= 9.22337204e18)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  char v24 = v57;
  [objc_allocWithZone((Class)NSNumber) initWithLongLong:(uint64_t)v60];
  sub_100398E80();
  sub_100398EB8();
  sub_100282A30();
  sub_100398E48();
  ((void (*)(char *, uint64_t))v42)(v103, v10);
  int64_t v42 = (char **)v112;
LABEL_30:
  id v61 = [a1 dateConnected];
  if (!v61)
  {
    id v63 = v110;
    sub_100399258((uint64_t)v110);
    goto LABEL_41;
  }
  uint64_t v62 = v61;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v46 = (void (*)(void))v42[4];
  id v63 = v110;
  sub_10039912C();
  v46();
  sub_1003990BC();
  if (v29)
  {
LABEL_41:
    sub_10021E23C((uint64_t)v63, &qword_100584B40);
    goto LABEL_42;
  }
  sub_10039912C();
  v46();
  id v64 = [a1 dateStartedConnecting];
  if (!v64)
  {
    id v63 = v104;
    sub_100399258((uint64_t)v104);
    goto LABEL_40;
  }
  char v65 = v64;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v63 = v104;
  sub_10039912C();
  v46();
  sub_1003990BC();
  if (v29)
  {
LABEL_40:
    ((void (*)(char *, uint64_t))v42[1])(v108, v10);
    goto LABEL_41;
  }
  sub_10039912C();
  v46();
  Date.timeIntervalSince(_:)();
  if (v66 * 1000.0 < 0.0)
  {
    objc_msgSend(objc_allocWithZone((Class)NSNumber), v24[177], 0);
    sub_100398E80();
    sub_1003991C4();
    sub_100398E64();
    sub_100398E48();
    if (qword_1005839F8 == -1)
    {
LABEL_36:
      uint64_t v67 = type metadata accessor for Logger();
      sub_1001F5F88(v67, (uint64_t)qword_100594BE0);
      uint64_t v46 = a1;
      uint64_t v68 = Logger.logObject.getter();
      os_log_type_t v69 = static os_log_type_t.error.getter();
      int v70 = v69;
      if (os_log_type_enabled(v68, v69))
      {
        LODWORD(v113) = v70;
        uint64_t v71 = (uint8_t *)sub_100235B18();
        uint64_t v111 = sub_100202470();
        v116[0] = v111;
        uint64_t v110 = v71;
        *(_DWORD *)uint64_t v71 = 136315138;
        int v107 = v71 + 4;
        id v72 = [v46 provider];
        id v73 = [v72 identifier];

        uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v76 = v75;

        unint64_t v22 = 0xD000000000000010;
        *(void *)&long long v117 = sub_1002344D8(v74, v76, v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v113, "Connection time is negative, %s is likely processing a callkit action incorrectly", v110, 0xCu);
        uint64_t v46 = (void (*)(void))v111;
        swift_arrayDestroy();
        sub_1001F63CC();
        sub_1001F63CC();

        uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
        v77(v102, v10);
        v77((uint64_t)v108, v10);
        goto LABEL_42;
      }

      goto LABEL_73;
    }
LABEL_84:
    swift_once();
    goto LABEL_36;
  }
  sub_1002C20C0();
  if (v29)
  {
    __break(1u);
    goto LABEL_86;
  }
  sub_100399350();
  if (v30 ^ v31 | v29)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    return;
  }
  sub_1003990F4();
  if (!v30) {
    goto LABEL_87;
  }
  [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:(unint64_t)v99];
  sub_100398E80();
  sub_1003991C4();
  sub_100398E64();
  sub_100398E48();
LABEL_73:
  uint64_t v100 = v42[1];
  ((void (*)(uint64_t, uint64_t))v100)(v102, v10);
  ((void (*)(char *, uint64_t))v100)(v108, v10);
LABEL_42:
  sub_100398458(a1);
  sub_100398E80();
  sub_10039909C();
  sub_100282A30();
  sub_100398E48();
  uint64_t v78 = (uint64_t)[a1 disconnectedReason];
  [objc_allocWithZone((Class)NSNumber) initWithInt:v78];
  sub_100398E80();
  sub_100398F70();
  sub_100282A30();
  sub_100398E48();
  uint64_t v79 = sub_100398D74(a1);
  if (!v79) {
    goto LABEL_57;
  }
  uint64_t v80 = v79;
  id v81 = [a1 provider];
  uint64_t v46 = (void (*)(void))[v81 isFaceTimeProvider];

  if (v46)
  {
    uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v115 = v82;
    AnyHashable.init<A>(_:)();
    sub_1002232D0((uint64_t)v116, v80, &v117);
    swift_bridgeObjectRelease();
    sub_100234D14((uint64_t)v116);
    if (*((void *)&v118 + 1))
    {
      type metadata accessor for TUCallFaceTimeTransportType(0);
      if (swift_dynamicCast())
      {
        if (v114 == 2) {
          uint64_t v78 = 2;
        }
        else {
          uint64_t v78 = v114 == 1;
        }
        goto LABEL_54;
      }
    }
    else
    {
      sub_10021E23C((uint64_t)&v117, (uint64_t *)&unk_100584CA0);
    }
    uint64_t v78 = 0;
LABEL_54:
    sub_1003993B4(objc_allocWithZone((Class)NSNumber));
    sub_100398E80();
    sub_10039918C();
    sub_100398E64();
    sub_100398E48();
    goto LABEL_57;
  }
  swift_bridgeObjectRelease();
  uint64_t v78 = (uint64_t)[a1 provider];
  unsigned int v83 = [(id)v78 isTelephonyProvider];

  if (v83)
  {
    uint64_t v84 = sub_100398D74(a1);
    if (v84)
    {
      uint64_t v85 = v84;
      sub_100399158();
      *(void *)&long long v117 = v86;
      *((void *)&v117 + 1) = v87;
      AnyHashable.init<A>(_:)();
      sub_1002232D0((uint64_t)v116, v85, &v117);
      swift_bridgeObjectRelease();
      sub_100234D14((uint64_t)v116);
    }
    else
    {
      long long v117 = 0u;
      long long v118 = 0u;
    }
    uint64_t v78 = sub_100398300((uint64_t)&v117);
    sub_1003993B4(objc_allocWithZone((Class)NSNumber));
    sub_100398E80();
    sub_10039918C();
    sub_100398E64();
    sub_100398E48();
    sub_10021E23C((uint64_t)&v117, (uint64_t *)&unk_100584CA0);
  }
LABEL_57:
  if (v109)
  {
    id v88 = v109;
    sub_100398E80();
    sub_1003991A8();
    sub_100398E64();
    unint64_t v119 = v116[0];
LABEL_61:
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  uint64_t v89 = (void *)sub_1002231D4(v22 + 8, 0x800000010048C730, v119);
  if (v89)
  {
    id v90 = v89;
    sub_100398E80();
    sub_1003991A8();
    sub_100398E64();
    unint64_t v119 = v116[0];

    goto LABEL_61;
  }
LABEL_62:
  objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", objc_msgSend(a1, "isHostedOnCurrentDevice") ^ 1);
  sub_100398E80();
  sub_10039909C();
  sub_100282A30();
  sub_100398E48();
  [a1 providerEndedReason];
  sub_1003993B4(objc_allocWithZone((Class)NSNumber));
  sub_100398E80();
  v116[0] = v119;
  unint64_t v119 = (unint64_t)v46;
  sub_100282A30();
  sub_100398E48();
  sub_1003982A8(a1);
  sub_1003993B4(objc_allocWithZone((Class)NSNumber));
  sub_100398E80();
  sub_100398F70();
  sub_100282A30();
  sub_100398E48();
  unsigned int v91 = [a1 disconnectedReason];
  [objc_allocWithZone((Class)NSNumber) initWithBool:(v91 < 0x16) & (0x2184FFu >> v91)];
  sub_100398E80();
  sub_100398F70();
  sub_100282A30();
  sub_100398E48();
  if (qword_1005839F8 != -1) {
    swift_once();
  }
  uint64_t v92 = type metadata accessor for Logger();
  sub_1001F5F88(v92, (uint64_t)qword_100594BE0);
  uint64_t v93 = Logger.logObject.getter();
  os_log_type_t v94 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v93, v94))
  {
    uint64_t v95 = (uint8_t *)sub_100235B18();
    v116[0] = sub_100202470();
    *(_DWORD *)uint64_t v95 = 136315138;
    sub_1002022F8();
    swift_bridgeObjectRetain();
    uint64_t v96 = Dictionary.description.getter();
    unint64_t v98 = v97;
    swift_bridgeObjectRelease();
    uint64_t v114 = sub_1002344D8(v96, v98, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v93, v94, "Returning ca event: %s", v95, 0xCu);
    swift_arrayDestroy();
    sub_1001F63CC();
    sub_1001F63CC();
  }

  sub_1002022F8();
}

uint64_t sub_1003982A8(void *a1)
{
  id v1 = [a1 initialLinkType];
  if ((unint64_t)v1 >= 6) {
    return 5;
  }
  else {
    return (0x60403020100uLL >> (8 * v1));
  }
}

uint64_t sub_1003982E8(uint64_t a1)
{
  if (a1 == 2) {
    return 2;
  }
  else {
    return a1 == 1;
  }
}

uint64_t sub_100398300(uint64_t a1)
{
  sub_100204CE0(a1, (uint64_t)v5);
  if (v6)
  {
    if (swift_dynamicCast())
    {
      if (v4 == 0xD000000000000010 && (sub_100399024((uint64_t)"kCallSubTypeWifi"), v1) || (sub_100398FE8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      if (v4 == 0xD000000000000011 && (sub_100399024((uint64_t)"kCallSubTypeVoLTE"), v1) || (sub_1003991EC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      if (v4 == 0xD000000000000015 && (sub_100399024((uint64_t)"kCallSubTypeTelephony"), v1)
        || (sub_1003991EC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v4 == 0xD000000000000010)
      {
        sub_100399024((uint64_t)"kCallSubTypeVoNR");
        if (v1)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
      }
      char v3 = sub_100398FE8();
      swift_bridgeObjectRelease();
      if (v3) {
        return 4;
      }
    }
  }
  else
  {
    sub_10021E23C((uint64_t)v5, (uint64_t *)&unk_100584CA0);
  }
  return 0;
}

id sub_100398458(void *a1)
{
  [a1 isVideo];
  if ([a1 isTTY])
  {
    sub_100399210();
    v2._uint64_t countAndFlagsBits = 1498698847;
    v2._object = (void *)0xE400000000000000;
    String.append(_:)(v2);
    swift_bridgeObjectRelease();
  }
  if ([a1 isEmergency])
  {
    sub_100399210();
    v3._object = (void *)0xEA00000000007963;
    v3._uint64_t countAndFlagsBits = 0x6E656772656D455FLL;
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
  }
  if ([a1 isVoicemail])
  {
    sub_100399210();
    v4._uint64_t countAndFlagsBits = 0x616D6563696F565FLL;
    v4._object = (void *)0xEA00000000006C69;
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
  }
  if ([a1 isSOS])
  {
    sub_100399210();
    v5._uint64_t countAndFlagsBits = 1397707615;
    v5._object = (void *)0xE400000000000000;
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
  }
  if ([a1 isRTT])
  {
    sub_100399210();
    v6._uint64_t countAndFlagsBits = 1414812255;
    v6._object = (void *)0xE400000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
  }
  sub_1001F6204(0, (unint64_t *)&qword_10058B4C0);
  return sub_1002EAB80();
}

uint64_t sub_10039862C(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v2 = a1;
  sub_1001F612C(v2, (SEL *)&selRef_contactName);
  sub_100399370();
  if (v1)
  {
    uint64_t v3 = 1;
  }
  else
  {
    sub_1001F612C(v2, (SEL *)&selRef_mapName);
    sub_100399370();
    sub_1001F612C(v2, (SEL *)&selRef_suggestedName);
    sub_100399370();
    sub_1001F612C(v2, (SEL *)&selRef_callDirectoryLabel);
    sub_100399370();
    id v4 = [v2 location];
    if (v4)
    {

      uint64_t v3 = 5;
    }
    else
    {
      uint64_t v3 = 0;
    }
  }

  return v3;
}

uint64_t sub_10039870C()
{
  return 0x726568744FLL;
}

uint64_t sub_100398798()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_100398A34(void *a1)
{
  if (!a1) {
    return 0x6E776F6E6B6E55;
  }
  id v1 = a1;
  if ([v1 isBluetooth])
  {

    return 0x746F6F7465756C42;
  }
  else if ([v1 isSpeaker])
  {

    return 0x72656B61657053;
  }
  else if ([v1 isReceiver])
  {

    return 0x7265766965636552;
  }
  else if (([v1 isWiredHeadset] & 1) != 0 {
         || [v1 isWiredHeadphones])
  }
  {

    return 0x6465726957;
  }
  else
  {
    unsigned int v3 = [v1 isAuxiliary];

    if (v3) {
      return 0x7261696C69787541;
    }
    else {
      return 0x726568744FLL;
    }
  }
}

id sub_100398B9C()
{
  *(void *)&v0[OBJC_IVAR___CSDAnalyticsReporter_callToStartTransportType] = _swiftEmptyDictionarySingleton;
  *(void *)&v0[OBJC_IVAR___CSDAnalyticsReporter_callToAudioRoutesTracker] = _swiftEmptyDictionarySingleton;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsReporter();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_100398C14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsReporter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AnalyticsReporter()
{
  return self;
}

uint64_t sub_100398CB8(uint64_t a1)
{
  return sub_100398D2C(a1, (uint64_t (*)(BOOL))sub_1003A49A0);
}

uint64_t sub_100398CD0(uint64_t a1)
{
  return sub_100398D2C(a1, (uint64_t (*)(BOOL))sub_1003A4BDC);
}

uint64_t sub_100398CE8(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return result;
}

uint64_t sub_100398D14(uint64_t a1)
{
  return sub_100398D2C(a1, (uint64_t (*)(BOOL))sub_1003A5188);
}

uint64_t sub_100398D2C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_100398D74(void *a1)
{
  id v1 = [a1 providerContext];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100398DE0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100398E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100398E28()
{
  return swift_release();
}

uint64_t sub_100398E30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100398E48()
{
  *(void *)(v0 - 112) = *(void *)(v0 - 184);
  return swift_bridgeObjectRelease();
}

void sub_100398E64()
{
  sub_100282A30();
}

uint64_t sub_100398E80()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_100398E98()
{
  sub_100282A30();
}

void sub_100398EB8()
{
  *(void *)(v0 - 184) = *(void *)(v0 - 112);
  *(void *)(v0 - 112) = 0x8000000000000000;
}

uint64_t sub_100398ED0()
{
  *(void *)(v3 - 184) = v0;
  *(void *)(v3 - 112) = v2;
  return v1;
}

void sub_100398EEC(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_100398F70()
{
  *(void *)(v2 - 184) = *(void *)(v2 - 112);
  *(void *)(v2 - 112) = v1;
  return v0;
}

uint64_t sub_100398FA0()
{
  return 0x6F6365726C6C6163;
}

uint64_t sub_100398FE8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

unint64_t sub_100399024@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_100399034()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_10039904C()
{
  *(void *)(v3 - 184) = v0;
  *(void *)(v3 - 112) = v2;
  return v1;
}

uint64_t sub_10039906C()
{
  *(void *)(v3 - 184) = v0;
  *(void *)(v3 - 112) = v2;
  return v1;
}

void sub_10039908C()
{
  *(void *)(v0 - 184) = *(void *)(v0 - 112);
}

uint64_t sub_10039909C()
{
  *(void *)(v1 - 184) = *(void *)(v1 - 112);
  *(void *)(v1 - 112) = 0x8000000000000000;
  return v0;
}

uint64_t sub_1003990BC()
{
  sub_1001F0530(v0, 0, 1, v1);
  return sub_1001F758C(v0, 1, v1);
}

uint64_t sub_100399114()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10039913C()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_100399178(void *a1, const char *a2)
{
  return sub_10039493C(a1, a2);
}

void sub_10039918C()
{
  *(void *)(v0 - 184) = *(void *)(v0 - 112);
  *(void *)(v0 - 112) = 0x8000000000000000;
}

void sub_1003991A8()
{
  *(void *)(v0 - 184) = *(void *)(v0 - 112);
  *(void *)(v0 - 112) = 0x8000000000000000;
}

void sub_1003991C4()
{
  *(void *)(v0 - 184) = *(void *)(v0 - 112);
  *(void *)(v0 - 112) = 0x8000000000000000;
}

uint64_t sub_1003991EC()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100399210()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100399228()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100399258(uint64_t a1)
{
  return sub_1001F0530(a1, 1, 1, v1);
}

id sub_100399274(void *a1)
{
  id v4 = *(const char **)(v2 + 1424);
  return objc_msgSend(a1, v4, v1);
}

uint64_t sub_10039928C(uint64_t a1, uint64_t a2)
{
  return sub_1001F0530(a1, a2, 1, v2);
}

uint64_t sub_1003992A4()
{
  return v0;
}

uint64_t sub_1003992BC()
{
  return swift_beginAccess();
}

id sub_1003992F4()
{
  uint64_t v3 = *(const char **)(v1 + 992);
  return [v0 v3];
}

void sub_10039930C()
{
  sub_100282A30();
}

uint64_t sub_100399324()
{
  sub_100206FA0();
  return v0;
}

uint64_t sub_100399370()
{
  return swift_bridgeObjectRelease();
}

void sub_100399388()
{
  sub_100282A30();
}

id sub_1003993B4(void *a1)
{
  id v4 = *(const char **)(v2 + 1416);
  return objc_msgSend(a1, v4, v1);
}

uint64_t sub_1003993CC()
{
  sub_10039A550();
  uint64_t result = NSString.init(stringLiteral:)();
  qword_100594EB0 = result;
  return result;
}

uint64_t sub_100399458()
{
  sub_10039A550();
  uint64_t result = NSString.init(stringLiteral:)();
  qword_100594EB8 = result;
  return result;
}

id sub_10039949C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_10039957C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_account);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100399628(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR___CSDKeychainPasswordItem_account);
  void *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

id sub_100399644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = &v6[OBJC_IVAR___CSDKeychainPasswordItem_service];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v6[OBJC_IVAR___CSDKeychainPasswordItem_account];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  uint64_t v16 = &v6[OBJC_IVAR___CSDKeychainPasswordItem_accessGroup];
  *(void *)uint64_t v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v6;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, "init");
}

char *sub_100399764()
{
  uint64_t v1 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100399870();
  if (!v0)
  {
    uint64_t v6 = v4;
    unint64_t v7 = v5;
    static String.Encoding.utf8.getter();
    uint64_t v8 = String.init(data:encoding:)();
    if (v9)
    {
      uint64_t v3 = (char *)v8;
    }
    else
    {
      sub_10039A504();
      sub_1002106AC();
      *(_DWORD *)uint64_t v11 = 1;
      *(unsigned char *)(v11 + 4) = 1;
      swift_willThrow();
    }
    sub_1001F7498(v6, v7);
  }
  return v3;
}

uint64_t sub_100399870()
{
  uint64_t v5 = sub_100399F74();
  v7[3] = &type metadata for Bool;
  LOBYTE(v7[0]) = 1;
  sub_1002C2C08((uint64_t)v7, (void *)(id)kSecReturnData);
  CFTypeRef result = 0;
  uint64_t v0 = v5;
  type metadata accessor for CFString(0);
  sub_10039A4B4();
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  SecItemCopyMatching(isa, &result);

  if (result && (swift_unknownObjectRetain(), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v0 = v7[0];
    id v2 = sub_100008DCC();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_unknownObjectRelease();
  }
  else
  {
    sub_10039A504();
    sub_1002106AC();
    *(_DWORD *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 4) = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  return v0;
}

uint64_t sub_100399AE4()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v4 = String.data(using:allowLossyConversion:)();
  unint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_100399C08(v4, v6);
    return sub_1001FCB18(v4, v6);
  }
  return result;
}

void sub_100399C08(uint64_t a1, unint64_t a2)
{
  void v15[5] = sub_100399F74();
  v15[3] = &type metadata for Data;
  v15[0] = a1;
  v15[1] = a2;
  uint64_t v4 = (id)kSecValueData;
  sub_1001F7440(a1, a2);
  sub_1002C2C08((uint64_t)v15, v4);
  type metadata accessor for CFString(0);
  sub_10039A4B4();
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v6 = SecItemAdd(isa, 0);

  if (v6 == -25299)
  {
    sub_100399F74();
    swift_bridgeObjectRelease();
    sub_1001F081C(&qword_10058BDC8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10048F550;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = a1;
    *(void *)(inited + 48) = a2;
    sub_1001F7440(a1, a2);
    uint64_t v8 = v4;
    Dictionary.init(dictionaryLiteral:)();
    v9.super.CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_100399F74();
    CFDictionaryRef v10 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    OSStatus v11 = SecItemUpdate(v10, v9.super.isa);

    if (v11 == noErr.getter())
    {
      id v12 = sub_100008DCC();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

LABEL_6:
      return;
    }
    sub_10039A504();
    sub_1002106AC();
    *(_DWORD *)uint64_t v13 = -25299;
    *(unsigned char *)(v13 + 4) = 0;
    swift_willThrow();
  }
  else
  {
    if (v6 == noErr.getter())
    {
      id v12 = sub_100008DCC();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_6;
    }
    sub_10039A504();
    sub_1002106AC();
    *(_DWORD *)uint64_t v14 = v6;
    *(unsigned char *)(v14 + 4) = 0;
    swift_willThrow();
  }
}

uint64_t sub_100399F74()
{
  sub_1001F081C((uint64_t *)&unk_10058BDD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10048FAF0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassGenericPassword;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = kSecAttrService;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_service + 8);
  *(void *)(inited + 80) = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_service);
  *(void *)(inited + 88) = v3;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 112) = kSecAttrAccount;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_account + 8);
  *(void *)(inited + 120) = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_account);
  *(void *)(inited + 128) = v4;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecAttrAccessGroup;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_accessGroup);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR___CSDKeychainPasswordItem_accessGroup + 8);
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 160) = v5;
  *(void *)(inited + 168) = v6;
  sub_10039A4B4();
  CFStringRef v7 = (id)kSecClass;
  CFStringRef v8 = (id)kSecClassGenericPassword;
  CFStringRef v9 = (id)kSecAttrService;
  swift_bridgeObjectRetain();
  CFStringRef v10 = (id)kSecAttrAccount;
  swift_bridgeObjectRetain();
  CFStringRef v11 = (id)kSecAttrAccessGroup;
  swift_bridgeObjectRetain();
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10039A2C8()
{
  swift_getObjectType();
  uint64_t v6 = _typeName(_:qualified:)();
  v0._uint64_t countAndFlagsBits = 40;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 32;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = 0x3D746E756F636361;
  v3._object = (void *)0xE800000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_10039A3E8()
{
}

uint64_t type metadata accessor for KeychainPasswordItem()
{
  return self;
}

unint64_t sub_10039A4B4()
{
  unint64_t result = qword_100584168;
  if (!qword_100584168)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100584168);
  }
  return result;
}

unint64_t sub_10039A504()
{
  unint64_t result = qword_10058BDC0;
  if (!qword_10058BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10058BDC0);
  }
  return result;
}

unint64_t sub_10039A550()
{
  unint64_t result = qword_10058B4C0;
  if (!qword_10058B4C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10058B4C0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for KeychainPasswordItem.KeychainError(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for KeychainPasswordItem.KeychainError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for KeychainPasswordItem.KeychainError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_10039A5F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10039A60C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 4) = v2;
  return result;
}

ValueMetadata *type metadata accessor for KeychainPasswordItem.KeychainError()
{
  return &type metadata for KeychainPasswordItem.KeychainError;
}

void *sub_10039A63C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      CFStringRef v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      if ([v7 isBluetooth])
      {
        if (sub_10039B1C8() == a2 && v10 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8;
        }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_17;
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

NSString sub_10039A7C8()
{
  NSString result = String._bridgeToObjectiveC()();
  static HandoffAudioController.routeIdentifierChangedNotification = (uint64_t)result;
  return result;
}

uint64_t *HandoffAudioController.routeIdentifierChangedNotification.unsafeMutableAddressor()
{
  if (qword_100583AC8 != -1) {
    swift_once();
  }
  return &static HandoffAudioController.routeIdentifierChangedNotification;
}

id static HandoffAudioController.routeIdentifierChangedNotification.getter()
{
  return sub_10039949C(&qword_100583AC8, (void **)&static HandoffAudioController.routeIdentifierChangedNotification);
}

NSString sub_10039A898()
{
  NSString result = String._bridgeToObjectiveC()();
  static HandoffAudioController.continueHandoffAudioRouteNotification = (uint64_t)result;
  return result;
}

uint64_t *HandoffAudioController.continueHandoffAudioRouteNotification.unsafeMutableAddressor()
{
  if (qword_100583AD0 != -1) {
    swift_once();
  }
  return &static HandoffAudioController.continueHandoffAudioRouteNotification;
}

id static HandoffAudioController.continueHandoffAudioRouteNotification.getter()
{
  return sub_10039949C(&qword_100583AD0, (void **)&static HandoffAudioController.continueHandoffAudioRouteNotification);
}

uint64_t sub_10039A968(uint64_t a1, uint64_t a2)
{
  char v3 = (void *)(v2 + OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier);
  void *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t HandoffAudioController.init()()
{
  swift_getObjectType();
  Swift::String v0 = self;
  id v1 = [v0 sharedInstance];
  id v2 = [v1 queue];

  id v3 = [v0 sharedInstance];
  id v4 = [v3 audioDeviceController];

  id v5 = [v0 sharedInstance];
  id v6 = [v5 routeController];

  id v7 = [v0 sharedInstance];
  id v8 = [v7 conversationManager];

  HandoffAudioController.__allocating_init(callCenterQueue:audioDeviceController:routeController:conversationManager:)();
  uint64_t v10 = v9;
  swift_deallocPartialClassInstance();
  return v10;
}

void HandoffAudioController.__allocating_init(callCenterQueue:audioDeviceController:routeController:conversationManager:)()
{
  sub_1001FCC38();
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001FCC70();
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9);
  sub_1001F2514();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  sub_10021067C();
  sub_1001F6204(0, (unint64_t *)&qword_1005850F0);
  static DispatchQoS.unspecified.getter();
  sub_10020A6C4((unint64_t *)&qword_100583B00, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1001F081C(&qword_100585100);
  sub_10020A70C((unint64_t *)&qword_100583B10, &qword_100585100);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v0, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5);
  CFStringRef v11 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v12 = [objc_allocWithZone((Class)type metadata accessor for SharedConversationServerBag()) init];
  uint64_t v13 = (char *)objc_allocWithZone((Class)type metadata accessor for HandoffAudioController());
  sub_10039D074(v11, v14, v15, v16, v17, v12, v13);
  sub_1001FCC08();
}

char *HandoffAudioController.__allocating_init(queue:callCenterQueue:audioDeviceController:routeController:conversationManager:serverBag:)()
{
  sub_10039DC68();
  uint64_t v0 = (void *)sub_10039DC44();

  return sub_10039CFEC(v0, v1, v2, v3, v4, v5);
}

uint64_t type metadata accessor for HandoffAudioController()
{
  return self;
}

char *HandoffAudioController.init(queue:callCenterQueue:audioDeviceController:routeController:conversationManager:serverBag:)()
{
  sub_10039DC68();
  uint64_t v0 = (void *)sub_10039DC44();

  return sub_10039D4D4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10039ADE4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (char *)Strong;
    uint64_t v10 = OBJC_IVAR___CSDHandoffAudioController_routeController;
    [*(id *)(Strong + OBJC_IVAR___CSDHandoffAudioController_routeController) addDelegate:Strong];
    id v11 = [*(id *)&v9[v10] pickedRoute];
    if (v11)
    {
      id v12 = v11;
      if ([v11 isBluetooth])
      {
        uint64_t v19 = *(void *)&v9[OBJC_IVAR___CSDHandoffAudioController_queue];
        uint64_t v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v13;
        *(void *)(v14 + 24) = v12;
        uint64_t v18 = v13;
        aBlock[4] = sub_10039DC04;
        aBlock[5] = v14;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        id aBlock[2] = sub_1002C2C88;
        id aBlock[3] = &unk_1005179E0;
        uint64_t v16 = _Block_copy(aBlock);
        swift_retain();
        id v17 = v12;
        static DispatchQoS.unspecified.getter();
        uint64_t v20 = _swiftEmptyArrayStorage;
        sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1001F081C((uint64_t *)&unk_100584B00);
        sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v15 = v16;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v15);

        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

        swift_release();
        swift_release();
        return;
      }
    }
  }
}

void sub_10039B168()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = sub_10039B1C8();
    sub_10039A968(v2, v3);
  }
}

uint64_t sub_10039B1C8()
{
  unsigned int v1 = [v0 isBluetooth];
  id v2 = [v0 uniqueIdentifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v1) {
    return v3;
  }
  sub_10030A394();
  uint64_t v4 = StringProtocol.components<A>(separatedBy:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16))
  {
    uint64_t v3 = *(void *)(v4 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

void HandoffAudioController.__deallocating_deinit()
{
  sub_1001FCC38();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v16 = sub_10021EA1C();
  sub_1001F6398();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)&v0[OBJC_IVAR___CSDHandoffAudioController_conversationManager] removeDelegate:v0];
  v15[1] = *(void *)&v0[OBJC_IVAR___CSDHandoffAudioController_callCenterQueue];
  uint64_t v11 = sub_10027AC68();
  *(void *)(v11 + 16) = v0;
  uint64_t v19[4] = sub_10039D970;
  v19[5] = v11;
  v19[0] = _NSConcreteStackBlock;
  sub_10021EAFC(COERCE_DOUBLE(1107296256));
  void v19[2] = sub_1002C2C88;
  v19[3] = &unk_100517800;
  id v12 = _Block_copy(v19);
  uint64_t v13 = v0;
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v16);
  swift_release();
  uint64_t v14 = (objc_class *)type metadata accessor for HandoffAudioController();
  v17.receiver = v13;
  v17.super_class = v14;
  objc_msgSendSuper2(&v17, "dealloc");
  sub_1001FCC08();
}

uint64_t sub_10039B5B8(uint64_t a1, NSString a2)
{
  id v3 = [self defaultCenter];
  if (qword_100583AC8 != -1) {
    swift_once();
  }
  uint64_t v4 = static HandoffAudioController.routeIdentifierChangedNotification;
  if (a2) {
    a2 = String._bridgeToObjectiveC()();
  }
  [v3 postNotificationName:v4 object:a2];

  return swift_unknownObjectRelease();
}

void sub_10039B684()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  v21[4] = v4;
  __chkstk_darwin(v5);
  sub_10021EA1C();
  sub_1001F6398();
  v21[2] = v7;
  v21[3] = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for Notification();
  sub_1001F6398();
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v13);
  v21[1] = *(void *)(v1 + OBJC_IVAR___CSDHandoffAudioController_queue);
  uint64_t v14 = sub_10027AC68();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v16 + ((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  v22[4] = sub_10039DAE4;
  v22[5] = v16;
  v22[0] = _NSConcreteStackBlock;
  sub_10021EAFC(COERCE_DOUBLE(1107296256));
  void v22[2] = sub_1002C2C88;
  v22[3] = &unk_100517918;
  objc_super v17 = _Block_copy(v22);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v21[5] = _swiftEmptyArrayStorage;
  sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  sub_10039DC94();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10027AC54();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  uint64_t v18 = sub_10021EAE0();
  v19(v18);
  sub_1001F7664();
  v20();
  swift_release();
  swift_release();
  sub_1001FCC08();
}

uint64_t sub_10039B958(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v21[3])
  {
    sub_100202D2C((uint64_t)v21);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    id v14 = sub_1001B1BF8();
    static os_log_type_t.error.getter();
    sub_1001F081C(&qword_100584B20);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10048F550;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    uint64_t v16 = String.init<A>(reflecting:)();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1001F3B08();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    os_log(_:dso:log:type:_:)();
    goto LABEL_7;
  }
  uint64_t v7 = v20[0];
  uint64_t v6 = v20[1];
  id v8 = sub_1001B1BF8();
  sub_1001F081C(&qword_100584B20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10048F550;
  v21[0] = v7;
  v21[1] = v6;
  swift_bridgeObjectRetain();
  uint64_t v10 = String.init<A>(reflecting:)();
  uint64_t v12 = v11;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_1001F3B08();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (id)Strong;
    sub_10039BBF4();
LABEL_7:
  }
  return swift_bridgeObjectRelease();
}

void sub_10039BBF4()
{
  sub_1001FCC38();
  uint64_t v4 = v3;
  uint64_t v21 = v5;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v6);
  uint64_t v22 = sub_10021EA1C();
  sub_1001F6398();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v10 = sub_10039DCB0();
  sub_1001F6398();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10021067C();
  id v14 = *(void **)&v0[OBJC_IVAR___CSDHandoffAudioController_queue];
  void *v2 = v14;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v2, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v2, v10);
  if (v14)
  {
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v0;
    v16[3] = v21;
    uint64_t v16[4] = v4;
    v23[4] = sub_10039DBB0;
    v23[5] = v16;
    v23[0] = _NSConcreteStackBlock;
    sub_10021EAFC(COERCE_DOUBLE(1107296256));
    long long v23[2] = sub_1002C2C88;
    uint64_t v23[3] = &unk_100517968;
    uint64_t v17 = _Block_copy(v23);
    uint64_t v18 = v0;
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
    sub_10039DC94();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    sub_10027AC54();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    uint64_t v19 = sub_10021EAE0();
    v20(v19);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v22);
    swift_release();
    sub_1001FCC08();
  }
  else
  {
    __break(1u);
  }
}

void sub_10039BF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___CSDHandoffAudioController_routeController;
  id v7 = [*(id *)(a1 + OBJC_IVAR___CSDHandoffAudioController_routeController) routes];
  sub_1001F6204(0, (unint64_t *)&qword_10058BE00);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  id v14 = sub_10039A63C(v8, a2, a3);
  swift_bridgeObjectRelease();
  if (v14)
  {
    [*(id *)(a1 + v6) pickRoute:v14];
  }
  else
  {
    id v9 = sub_1001B1BF8();
    static os_log_type_t.error.getter();
    sub_1001F081C(&qword_100584B20);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10048F550;
    swift_bridgeObjectRetain();
    uint64_t v11 = String.init<A>(reflecting:)();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_1001F3B08();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

void HandoffAudioController.conversationManager(_:stateChangedFor:)()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_1001F2514();
  type metadata accessor for DispatchQoS();
  sub_1001F6398();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10039DCB0();
  sub_1001F6398();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001FCC70();
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR___CSDHandoffAudioController_callCenterQueue);
  void *v1 = v10;
  uint64_t v11 = sub_10039DCE0();
  v12(v11);
  id v13 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v1, v6);
  if (v10)
  {
    if ([v3 state] == (id)3)
    {
      id v14 = sub_1001B1BF8();
      sub_1001F081C(&qword_100584B20);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10048F550;
      uint64_t v16 = OBJC_IVAR___CSDHandoffAudioController_routeController;
      id v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                  + OBJC_IVAR___CSDHandoffAudioController_routeController), "pickedRoute"));
      if (v17)
      {
        v35[0] = v17;
        sub_1001F6204(0, (unint64_t *)&qword_10058BE00);
        uint64_t v18 = String.init<A>(reflecting:)();
        unint64_t v20 = v19;
      }
      else
      {
        unint64_t v20 = 0xE300000000000000;
        uint64_t v18 = 7104878;
      }
      *(void *)(v15 + 56) = &type metadata for String;
      unint64_t v21 = sub_1001F3B08();
      *(void *)(v15 + 64) = v21;
      *(void *)(v15 + 32) = v18;
      *(void *)(v15 + 40) = v20;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v22 = [*(id *)(v0 + v16) pickedRoute];
      if (v22)
      {
        uint64_t v23 = v22;
        if ([v22 isBluetooth])
        {
          uint64_t v24 = sub_10027AC68();
          swift_unknownObjectWeakInit();
          uint64_t v25 = swift_allocObject();
          *(void *)(v25 + 16) = v24;
          *(void *)(v25 + 24) = v23;
          v35[4] = sub_10039D9E0;
          v35[5] = v25;
          v35[0] = _NSConcreteStackBlock;
          sub_10021EAFC(COERCE_DOUBLE(1107296256));
          void v35[2] = sub_1002C2C88;
          void v35[3] = &unk_100517878;
          id v26 = _Block_copy(v35);
          swift_retain();
          id v27 = v23;
          static DispatchQoS.unspecified.getter();
          sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1001F081C((uint64_t *)&unk_100584B00);
          sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v26);

          sub_1001F7664();
          v28();
          sub_1001F7664();
          v29();
          swift_release();
          swift_release();
          goto LABEL_14;
        }
      }
      id v30 = sub_1001B1BF8();
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_10048F550;
      id v32 = [*(id *)(v0 + v16) pickedRoute];
      if (v32)
      {
        v35[0] = v32;
        sub_1001F6204(0, (unint64_t *)&qword_10058BE00);
        uint64_t v33 = String.init<A>(reflecting:)();
      }
      else
      {
        unint64_t v34 = 0xE300000000000000;
        uint64_t v33 = 7104878;
      }
      *(void *)(v31 + 56) = &type metadata for String;
      *(void *)(v31 + 64) = v21;
      *(void *)(v31 + 32) = v33;
      *(void *)(v31 + 40) = v34;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
LABEL_14:
    sub_1001FCC08();
    return;
  }
  __break(1u);
}

uint64_t sub_10039C630()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_10039B1C8();
    sub_10039A968(v2, v3);
    uint64_t v4 = sub_10039B1C8();
    sub_10039B5B8(v4, v5);

    return swift_bridgeObjectRelease();
  }
  return result;
}

void HandoffAudioController.routesChanged(for:)()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_1001F2514();
  type metadata accessor for DispatchQoS();
  sub_1001F6398();
  __chkstk_darwin(v5);
  sub_1001F2514();
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001FCC70();
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR___CSDHandoffAudioController_callCenterQueue);
  void *v1 = v10;
  uint64_t v11 = sub_10039DCE0();
  v12(v11);
  id v13 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v1, v6);
  if (v10)
  {
    id v14 = [v3 receiverRoute];
    id v15 = [v3 speakerRoute];
    id v16 = [v3 pickedRoute];
    uint64_t v17 = sub_10027AC68();
    swift_unknownObjectWeakInit();
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = v17;
    v18[3] = v16;
    v18[4] = v14;
    void v18[5] = v15;
    v26[4] = sub_10039DA38;
    v26[5] = v18;
    v26[0] = _NSConcreteStackBlock;
    sub_10021EAFC(COERCE_DOUBLE(1107296256));
    _OWORD v26[2] = sub_1002C2C88;
    uint64_t v26[3] = &unk_1005178C8;
    unint64_t v19 = _Block_copy(v26);
    swift_retain();
    id v20 = v16;
    id v21 = v14;
    id v22 = v15;
    static DispatchQoS.unspecified.getter();
    sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1001F081C((uint64_t *)&unk_100584B00);
    sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    uint64_t v23 = sub_10021EAE0();
    v24(v23);
    sub_1001F7664();
    v25();
    swift_release();
    swift_release();
    sub_1001FCC08();
  }
  else
  {
    __break(1u);
  }
}

void sub_10039CAA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    if ((sub_10039CC8C(a2, a3, a4) & 1) == 0)
    {
LABEL_14:

      return;
    }
    if (a2)
    {
      id v9 = a2;
      if (([v9 isReceiver] & 1) != 0 || objc_msgSend(v9, "isSpeaker"))
      {
        sub_10039A968(0, 0);

LABEL_10:
        id v12 = sub_1001B1BF8();
        sub_1001F081C(&qword_100584B20);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_10048F550;
        id v14 = (uint64_t *)&v8[OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier];
        if (*(void *)&v8[OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier + 8])
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = String.init<A>(reflecting:)();
          unint64_t v17 = v16;
        }
        else
        {
          unint64_t v17 = 0xE300000000000000;
          uint64_t v15 = 7104878;
        }
        *(void *)(v13 + 56) = &type metadata for String;
        *(void *)(v13 + 64) = sub_1001F3B08();
        *(void *)(v13 + 32) = v15;
        *(void *)(v13 + 40) = v17;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v18 = *v14;
        unint64_t v19 = (void *)v14[1];
        swift_bridgeObjectRetain();
        sub_10039B5B8(v18, v19);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }

      uint64_t v10 = sub_10039B1C8();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
    sub_10039A968(v10, v11);
    goto LABEL_10;
  }
}

uint64_t sub_10039CC8C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR___CSDHandoffAudioController_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (a1)
    {
      id v14 = a1;
      if ([v14 isBluetooth])
      {
        uint64_t v15 = *(void *)(v3 + OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier + 8);
        if (v15)
        {
          uint64_t v16 = *(void *)(v3 + OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier);
          swift_bridgeObjectRetain();
          if (v16 != sub_10039B1C8() || v15 != v17)
          {
            char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v19) {
              goto LABEL_36;
            }
            goto LABEL_35;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

LABEL_36:
          char v26 = 0;
          return v26 & 1;
        }

LABEL_35:
        char v26 = 1;
        return v26 & 1;
      }
    }
    id v20 = (uint64_t *)(v3 + OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier);
    uint64_t v21 = *(void *)(v3 + OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier + 8);
    if (!v21) {
      goto LABEL_36;
    }
    uint64_t v22 = *v20;
    if (a2)
    {
      swift_bridgeObjectRetain();
      if (v22 == sub_10039B1C8() && v21 == v23) {
        goto LABEL_28;
      }
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v26 = 0;
      if (v25) {
        return v26 & 1;
      }
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
    }
    if (a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_10039B1C8();
      if (v21)
      {
        if (v28)
        {
          if (v22 != v27 || v21 != v28)
          {
            char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v26 = v30 ^ 1;
            return v26 & 1;
          }
LABEL_28:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
      else if (!v28)
      {
        goto LABEL_36;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_36;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

char *sub_10039CFEC(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v12 = (char *)objc_allocWithZone((Class)type metadata accessor for HandoffAudioController());

  return sub_10039D4D4(a1, a2, a3, a4, a5, a6, v12);
}

char *sub_10039D074(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, char *a7)
{
  id v39 = a3;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = &a7[OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier];
  *(void *)char v19 = 0;
  *((void *)v19 + 1) = 0;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_routeController] = a4;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_queue] = a1;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_callCenterQueue] = a2;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_conversationManager] = a5;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_serverBag] = a6;
  id v20 = (objc_class *)type metadata accessor for HandoffAudioController();
  v42.receiver = a7;
  v42.super_class = v20;
  id v38 = a4;
  id v35 = a1;
  id v34 = a2;
  id v37 = a5;
  id v36 = a6;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v42, "init");
  uint64_t v22 = *(void **)&v21[OBJC_IVAR___CSDHandoffAudioController_conversationManager];
  uint64_t v23 = *(void *)&v21[OBJC_IVAR___CSDHandoffAudioController_callCenterQueue];
  uint64_t v24 = v21;
  [v22 addDelegate:v24 queue:v23];
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10039DBBC;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1002C2C88;
  id aBlock[3] = &unk_100517A08;
  char v26 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v40 = _swiftEmptyArrayStorage;
  sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v32);
  swift_release();
  swift_release();
  id v27 = [self defaultCenter];
  uint64_t v28 = qword_100583AD0;
  char v29 = v24;
  if (v28 != -1) {
    swift_once();
  }
  [v27 addObserver:v29 selector:"handleContinueHandoffAudioRouteNotification:" name:static HandoffAudioController.continueHandoffAudioRouteNotification object:0];

  return v29;
}

char *sub_10039D4D4(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, char *a7)
{
  id v38 = a3;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = &a7[OBJC_IVAR___CSDHandoffAudioController_pickedRouteUniqueIdentifier];
  *(void *)char v19 = 0;
  *((void *)v19 + 1) = 0;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_routeController] = a4;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_queue] = a1;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_callCenterQueue] = a2;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_conversationManager] = a5;
  *(void *)&a7[OBJC_IVAR___CSDHandoffAudioController_serverBag] = a6;
  id v20 = (objc_class *)type metadata accessor for HandoffAudioController();
  v42.receiver = a7;
  v42.super_class = v20;
  id v37 = a4;
  id v35 = a1;
  id v34 = a2;
  id v36 = a5;
  uint64_t v39 = a6;
  swift_unknownObjectRetain();
  uint64_t v21 = (char *)objc_msgSendSuper2(&v42, "init");
  uint64_t v22 = *(void **)&v21[OBJC_IVAR___CSDHandoffAudioController_conversationManager];
  uint64_t v23 = *(void *)&v21[OBJC_IVAR___CSDHandoffAudioController_callCenterQueue];
  uint64_t v24 = v21;
  [v22 addDelegate:v24 queue:v23];
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10039DBBC;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1002C2C88;
  id aBlock[3] = &unk_100517990;
  char v26 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v40 = _swiftEmptyArrayStorage;
  sub_10020A6C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_10020A70C((unint64_t *)&qword_100585000, (uint64_t *)&unk_100584B00);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v32);
  swift_release();
  swift_release();
  id v27 = [self defaultCenter];
  uint64_t v28 = qword_100583AD0;
  char v29 = v24;
  if (v28 != -1) {
    swift_once();
  }
  [v27 addObserver:v29 selector:"handleContinueHandoffAudioRouteNotification:" name:static HandoffAudioController.continueHandoffAudioRouteNotification object:0];

  swift_unknownObjectRelease();
  return v29;
}

uint64_t sub_10039D938()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10039D970()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR___CSDHandoffAudioController_routeController), "removeDelegate:");
}

uint64_t sub_10039D98C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10039D99C()
{
  return swift_release();
}

uint64_t sub_10039D9A4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039D9E0()
{
  return sub_10039C630();
}

uint64_t sub_10039D9E8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10039DA38()
{
  sub_10039CAA8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10039DA44()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = ((*(void *)(*(void *)(v1 - 8) + 64) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  sub_1001F7664();
  v5();
  swift_release();

  return _swift_deallocObject(v0, v4, v3);
}

uint64_t sub_10039DAE4()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notification() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10039B958(v2);
}

uint64_t sub_10039DB70()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10039DBB0()
{
  sub_10039BF80(v0[2], v0[3], v0[4]);
}

uint64_t sub_10039DBC4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10039DC04()
{
}

uint64_t sub_10039DC44()
{
  return v0;
}

uint64_t sub_10039DC68()
{
  return swift_getObjectType();
}

uint64_t sub_10039DC94()
{
  return v0 - 136;
}

uint64_t sub_10039DCB0()
{
  return type metadata accessor for DispatchPredicate();
}

void sub_10039DCD8()
{
}

uint64_t sub_10039DCE0()
{
  return v0;
}

void sub_10039DCF8(uint64_t a1)
{
  sub_1002E4D1C(v22, a1);
  uint64_t v1 = v22[0];
  uint64_t v2 = v22[1];
  int64_t v3 = v22[3];
  unint64_t v4 = v22[4];
  int64_t v5 = (unint64_t)(v22[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_20;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v9 >= v5) {
      goto LABEL_26;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v5) {
        goto LABEL_26;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v5) {
          goto LABEL_26;
        }
        unint64_t v10 = *(void *)(v2 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v5) {
            goto LABEL_26;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v3 + 5;
            if (v3 + 5 >= v5) {
              goto LABEL_26;
            }
            unint64_t v10 = *(void *)(v2 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v3 + 6;
              while (v12 < v5)
              {
                unint64_t v10 = *(void *)(v2 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v4 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v3 = v11;
LABEL_20:
    uint64_t v13 = sub_10021FC88(*(void **)(*(void *)(v1 + 56) + 8 * v8));
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        uint64_t v6 = v20;
      }
      unint64_t v17 = v6[2];
      uint64_t v18 = v6;
      if (v17 >= v6[3] >> 1)
      {
        sub_1003A47C8();
        uint64_t v18 = v21;
      }
      void v18[2] = v17 + 1;
      uint64_t v6 = v18;
      char v19 = &v18[2 * v17];
      uint64_t v19[4] = v15;
      v19[5] = v16;
    }
  }
  __break(1u);
}

void sub_10039DEC0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_1001F6204(0, (unint64_t *)&unk_100586190);
    sub_100210D5C((unint64_t *)&unk_100585430, (unint64_t *)&unk_100586190);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v28;
    uint64_t v27 = v29;
    uint64_t v2 = v30;
    int64_t v3 = v31;
    unint64_t v4 = v32;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v27 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  uint64_t v25 = v2;
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  char v26 = _swiftEmptyArrayStorage;
  while (1)
  {
    int64_t v9 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_38;
    }
    sub_1001F6204(0, (unint64_t *)&unk_100586190);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v33;
    swift_unknownObjectRelease();
    if (!v33) {
      goto LABEL_38;
    }
LABEL_31:
    id v16 = objc_msgSend(v12, "tuHandle", v25);
    if (v16)
    {
      unint64_t v17 = v16;
      uint64_t v18 = sub_10039FA00();
      uint64_t v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003A47C8();
        char v26 = v23;
      }
      unint64_t v21 = v26[2];
      if (v21 >= v26[3] >> 1)
      {
        sub_1003A47C8();
        char v26 = v24;
      }
      _OWORD v26[2] = v21 + 1;
      uint64_t v22 = &v26[2 * v21];
      v22[4] = v18;
      void v22[5] = v20;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v10 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v11 = v10 | (v3 << 6);
LABEL_30:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8) {
      goto LABEL_38;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v3;
    if (!v14)
    {
      int64_t v3 = v9 + 2;
      if (v9 + 2 >= v8) {
        goto LABEL_38;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v3);
      if (!v14)
      {
        int64_t v3 = v9 + 3;
        if (v9 + 3 >= v8) {
          goto LABEL_38;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v3);
        if (!v14)
        {
          int64_t v3 = v9 + 4;
          if (v9 + 4 >= v8) {
            goto LABEL_38;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v3);
          if (!v14)
          {
            int64_t v3 = v9 + 5;
            if (v9 + 5 >= v8) {
              goto LABEL_38;
            }
            unint64_t v14 = *(void *)(v27 + 8 * v3);
            if (!v14)
            {
              int64_t v15 = v9 + 6;
              while (v15 < v8)
              {
                unint64_t v14 = *(void *)(v27 + 8 * v15++);
                if (v14)
                {
                  int64_t v3 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_100206FA0();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_10039E238(uint64_t a1, void *a2)
{
  sub_1002E4D1C(v30, a1);
  uint64_t v27 = v30[1];
  int64_t v3 = v30[3];
  unint64_t v4 = v30[4];
  int64_t v28 = (unint64_t)(v30[2] + 64) >> 6;
  uint64_t v29 = v30[0];
  char v26 = _swiftEmptyArrayStorage;
  do
  {
    while (1)
    {
LABEL_2:
      if (v4)
      {
        unint64_t v5 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        unint64_t v6 = v5 | (v3 << 6);
      }
      else
      {
        int64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_42;
        }
        if (v7 >= v28) {
          goto LABEL_40;
        }
        unint64_t v8 = *(void *)(v27 + 8 * v7);
        int64_t v9 = v3 + 1;
        if (!v8)
        {
          int64_t v9 = v3 + 2;
          if (v3 + 2 >= v28) {
            goto LABEL_40;
          }
          unint64_t v8 = *(void *)(v27 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v3 + 3;
            if (v3 + 3 >= v28) {
              goto LABEL_40;
            }
            unint64_t v8 = *(void *)(v27 + 8 * v9);
            if (!v8)
            {
              int64_t v9 = v3 + 4;
              if (v3 + 4 >= v28) {
                goto LABEL_40;
              }
              unint64_t v8 = *(void *)(v27 + 8 * v9);
              if (!v8)
              {
                int64_t v9 = v3 + 5;
                if (v3 + 5 >= v28) {
                  goto LABEL_40;
                }
                unint64_t v8 = *(void *)(v27 + 8 * v9);
                if (!v8)
                {
                  int64_t v10 = v3 + 6;
                  while (v10 < v28)
                  {
                    unint64_t v8 = *(void *)(v27 + 8 * v10++);
                    if (v8)
                    {
                      int64_t v9 = v10 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_40:
                  swift_bridgeObjectRelease();
                  swift_release();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        unint64_t v4 = (v8 - 1) & v8;
        unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
        int64_t v3 = v9;
      }
      unint64_t v11 = (uint64_t *)(*(void *)(v29 + 48) + 16 * v6);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = a2[2];
      if (v14) {
        break;
      }
LABEL_35:
      swift_bridgeObjectRetain();
      uint64_t v22 = v26;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int64_t v31 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1002E3EC4();
        uint64_t v22 = v31;
      }
      unint64_t v24 = v22[2];
      if (v24 >= v22[3] >> 1)
      {
        sub_1002E3EC4();
        uint64_t v22 = v31;
      }
      void v22[2] = v24 + 1;
      char v26 = v22;
      uint64_t v25 = &v22[2 * v24];
      v25[4] = v12;
      void v25[5] = v13;
    }
    BOOL v15 = a2[4] == v12 && a2[5] == v13;
  }
  while (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
  if (v14 == 1) {
    goto LABEL_35;
  }
  id v16 = a2 + 7;
  uint64_t v17 = 1;
  while (1)
  {
    uint64_t v18 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    uint64_t v19 = *(v16 - 1);
    uint64_t v20 = *v16;
    v16 += 2;
    BOOL v21 = v19 == v12 && v20 == v13;
    if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_2;
    }
    ++v17;
    if (v18 == v14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_10039E4D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  int64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10039E59C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v5 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v3 = v6;
    BOOL v6 = v6 || v5 == v2;
    if (v6) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10039E5FC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_10039E628(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_10039E670(uint64_t a1, void (*a2)(uint64_t, uint64_t, id))
{
  sub_1002E4D1C(v19, a1);
  uint64_t v3 = v19[0];
  uint64_t v20 = v19[1];
  int64_t v4 = v19[3];
  unint64_t v5 = v19[4];
  int64_t v6 = (unint64_t)(v19[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v4 << 6);
  while (1)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void **)(*(void *)(v3 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    id v18 = v17;
    a2(v15, v16, v18);

    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v10 >= v6) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v20 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v6) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v20 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v6) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v20 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v6) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v20 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v6) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v20 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v4 + 6;
              while (v13 < v6)
              {
                unint64_t v11 = *(void *)(v20 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v4 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10039E818()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  qword_10058BE50 = result;
  *(void *)algn_10058BE58 = v1;
  return result;
}

void sub_10039E848()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  v32[0] = v3;
  v32[1] = v4;
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v37 = v5;
  __chkstk_darwin(v6);
  sub_1001FCCD0();
  uint64_t v33 = v7;
  type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v35 = v9;
  uint64_t v36 = v8;
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v12 = OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier;
  sub_1001F6204(0, &qword_100588498);
  int64_t v13 = v0;
  *(void *)&v0[v12] = sub_1003A3A5C();
  uint64_t v14 = OBJC_IVAR___CSDScreenTimeCallFilter_synchronousConversationsForBundleIdentifier;
  *(void *)&v13[v14] = sub_1003A3A5C();
  uint64_t v15 = OBJC_IVAR___CSDScreenTimeCallFilter_contextsForCallIdentifier;
  type metadata accessor for UUID();
  sub_1001F6204(0, (unint64_t *)&unk_1005884A8);
  sub_1003A35C4((unint64_t *)&qword_1005873E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  *(void *)&v13[v15] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v16 = OBJC_IVAR___CSDScreenTimeCallFilter_observationForCallIdentifier;
  type metadata accessor for NSKeyValueObservation();
  *(void *)&v13[v16] = Dictionary.init(dictionaryLiteral:)();
  uint64_t v17 = (void *)v32[0];
  *(void *)&v13[OBJC_IVAR___CSDScreenTimeCallFilter_providerManager] = v32[0];
  swift_unknownObjectWeakAssign();
  id v18 = v17;

  uint64_t v19 = (objc_class *)type metadata accessor for ScreenTimeCallFilter();
  v40.receiver = v13;
  v40.super_class = v19;
  uint64_t v20 = (char *)objc_msgSendSuper2(&v40, "initWithQueue:", v2);
  BOOL v21 = *(void **)&v20[OBJC_IVAR___CSDScreenTimeCallFilter_providerManager];
  uint64_t v22 = v20;
  [v21 addDelegate:v22 queue:v2];
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = v2;
  v39[4] = sub_1003A39D0;
  v39[5] = v23;
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 1107296256;
  v39[2] = sub_1002C2C88;
  v39[3] = &unk_100517C38;
  unint64_t v24 = _Block_copy(v39);
  uint64_t v25 = v22;
  id v26 = v2;
  static DispatchQoS.unspecified.getter();
  id v38 = _swiftEmptyArrayStorage;
  sub_1003A35C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  uint64_t v28 = v33;
  uint64_t v27 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v28, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  swift_release();
  id v29 = [self defaultCenter];
  uint64_t v30 = TUCallRemoteParticipantHandlesChangedNotification;
  int64_t v31 = v25;
  [v29 addObserver:v31 selector:"handleCallRemoteParticipantsChanged:" name:v30 object:0];

  swift_unknownObjectRelease();
  sub_1001FCC08();
}

void sub_10039EC84(uint64_t a1, uint64_t a2)
{
  sub_1003A1694();
  id v4 = [self sharedInstance];
  id v5 = [v4 conversationManager];

  [v5 addDelegate:a1 queue:a2];
}

void sub_10039ED80()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v48 = v4;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = __chkstk_darwin(v7);
  id v49 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)v43 - v10;
  __chkstk_darwin(v9);
  int64_t v13 = (char *)v43 - v12;
  uint64_t v14 = sub_1001F618C([v2 provider]);
  if (v15)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    id v18 = (uint64_t *)(v0 + OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier);
    sub_1002022F8();
    uint64_t v19 = *v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = (void *)sub_1002231D4(v16, v17, v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = v0;
    swift_bridgeObjectRelease();
    if (v20)
    {
      uint64_t v47 = v11;
      sub_10039F6CC();
      id v22 = [v2 uniqueProxyIdentifierUUID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1003A24F4(v2);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v24 = [v20 allowableByContactsHandles:isa];

      uint64_t v25 = (id *)(v21 + OBJC_IVAR___CSDScreenTimeCallFilter_contextsForCallIdentifier);
      sub_1002024E8();
      id v26 = v24;
      sub_10027FF7C((uint64_t)v26, (uint64_t)v13);
      swift_endAccess();
      uint64_t v45 = v21;
      id v46 = v20;
      if (qword_1005839A0 != -1) {
        swift_once();
      }
      v43[1] = qword_100594A20;
      sub_1001F081C(&qword_100584B20);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10048FB00;
      id v50 = v26;
      sub_1001F6204(0, (unint64_t *)&unk_1005884A8);
      id v28 = v26;
      id v44 = v28;
      uint64_t v29 = String.init<A>(reflecting:)();
      uint64_t v31 = v30;
      *(void *)(v27 + 56) = &type metadata for String;
      unint64_t v32 = sub_1001F3B08();
      *(void *)(v27 + 64) = v32;
      *(void *)(v27 + 32) = v29;
      *(void *)(v27 + 40) = v31;
      id v50 = *v25;
      swift_bridgeObjectRetain();
      sub_1001F081C((uint64_t *)&unk_10058BEF0);
      uint64_t v33 = String.init<A>(reflecting:)();
      *(void *)(v27 + 96) = &type metadata for String;
      *(void *)(v27 + 104) = v32;
      *(void *)(v27 + 72) = v33;
      *(void *)(v27 + 80) = v34;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t v35 = v48;
      uint64_t v36 = *(void (**)(void))(v48 + 16);
      sub_1003A3AA4();
      v36();
      id v50 = v28;
      swift_getKeyPath();
      uint64_t v37 = swift_allocObject();
      v43[0] = v13;
      swift_unknownObjectWeakInit();
      id v38 = v49;
      sub_1003A3AA4();
      v36();
      unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v37;
      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v40 + v39, v38, v3);
      uint64_t v41 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
      swift_release();
      swift_release();
      sub_1002024E8();
      sub_10027FF5C(v41, (uint64_t)v47);
      objc_super v42 = *(void (**)(void))(v35 + 8);
      sub_10024636C();
      v42();
      swift_endAccess();

      sub_10024636C();
      v42();
    }
  }
  sub_1001FCC08();
}

void sub_10039F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a4;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (void *)Strong;
    sub_1001F081C((uint64_t *)&unk_10058BF00);
    NSKeyValueObservedChange.newValue.getter();
    if (LOBYTE(aBlock[0]) == 2)
    {
    }
    else
    {
      int v23 = aBlock[0] & 1;
      id v24 = [v15 queue];
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(&v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v25, v11);
      uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v25 = v5;
      uint64_t v17 = (v16 + 25) & ~v16;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v15;
      *(unsigned char *)(v18 + 24) = v23;
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v12 + 32))(v18 + v17, &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v11);
      aBlock[4] = sub_1003A3948;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      id aBlock[2] = sub_1002C2C88;
      id aBlock[3] = &unk_100517BE8;
      uint64_t v19 = _Block_copy(aBlock);
      id v20 = v15;
      static DispatchQoS.unspecified.getter();
      id v28 = _swiftEmptyArrayStorage;
      sub_1003A35C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1001F081C((uint64_t *)&unk_100584B00);
      sub_1001F6030();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v21 = v24;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v19);

      (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v7, v4);
      (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v10, v27);
      swift_release();
    }
  }
}

uint64_t sub_10039F5D0(uint64_t a1, char a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v5 screenTimeCallFilter:a1 didChangeAllowed:a2 & 1 forCallUUID:isa];

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10039F6CC()
{
  sub_1001FCC38();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  type metadata accessor for UUID();
  sub_1001F6398();
  __chkstk_darwin(v5);
  sub_100202310();
  id v6 = [v4 uniqueProxyIdentifierUUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR___CSDScreenTimeCallFilter_observationForCallIdentifier);
  sub_1002022F8();
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_100223124(v1, v8);
  swift_bridgeObjectRelease();
  if (v9)
  {
    dispatch thunk of NSKeyValueObservation.invalidate()();
  }
  sub_1002024E8();
  uint64_t v10 = (void *)sub_1002CF324(v1);
  swift_endAccess();

  sub_1002024E8();
  uint64_t v11 = (void *)sub_1002CF224(v1);
  swift_endAccess();

  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10048FB00;
  sub_1001F6204(0, (unint64_t *)&qword_1005855B0);
  id v13 = v4;
  uint64_t v14 = String.init<A>(reflecting:)();
  uint64_t v16 = v15;
  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v17 = sub_1001F3B08();
  *(void *)(v12 + 64) = v17;
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRetain();
  sub_1001F081C((uint64_t *)&unk_10058BEF0);
  uint64_t v18 = String.init<A>(reflecting:)();
  *(void *)(v12 + 96) = &type metadata for String;
  *(void *)(v12 + 104) = v17;
  *(void *)(v12 + 72) = v18;
  *(void *)(v12 + 80) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1003A3A44();
  v21(v20);
  sub_1001FCC08();
}

uint64_t sub_10039F998(uint64_t a1)
{
  if (a1)
  {
    sub_10039FA00();
    swift_bridgeObjectRelease();
  }
  else if (qword_100583AD8 != -1)
  {
    swift_once();
  }
  return 0;
}

uint64_t sub_10039FA00()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 value];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v14[0] = v6;
  v14[1] = v8;
  static CharacterSet.controlCharacters.getter();
  sub_10030A394();
  uint64_t v9 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    if (qword_100583AD8 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_10058BE50;
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_10039FBE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a1)
  {
    uint64_t v7 = sub_10039FA00();
    uint64_t v9 = v8;
  }
  else
  {
    if (qword_100583AD8 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_10058BE50;
    uint64_t v9 = *(void *)algn_10058BE58;
    swift_bridgeObjectRetain();
  }
  sub_1001F081C((uint64_t *)&unk_100585280);
  uint64_t v10 = sub_1002B8180();
  *(_OWORD *)(v10 + 16) = xmmword_10048F550;
  *(void *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v9;
  if (a4) {
    sub_1003A3070();
  }
  else {
    char v11 = sub_1003A2D58(v10, a2, a3);
  }
  char v12 = v11;
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_10039FD68(void *a1, void *a2)
{
  uint64_t v4 = sub_1003A23BC(a1);
  uint64_t v5 = sub_10021FC88(a2);
  uint64_t v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v5 != v8 || v7 != v9)
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v12 = sub_10021FC88(a2);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_12:
  char v14 = sub_1003A2D58((uint64_t)v4, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    [a1 setFilteredOutReason:5];
  }
  return v14 & 1;
}

uint64_t sub_10039FEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(v3 + OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier);
  sub_1002022F8();
  uint64_t v7 = *v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1002231D4(a2, a3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    sub_1003A2AD4();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v8 allowableByContactsHandles:isa];

    id v11 = [v10 allowedByContactsHandle];
    sub_1001F6204(0, (unint64_t *)&qword_100585590);
    uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_1001F6204(0, (unint64_t *)&qword_100585590);
    return Dictionary.init(dictionaryLiteral:)();
  }
  return v12;
}

uint64_t sub_1003A0158()
{
  sub_1003A19E0();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_10024DF84(v2);
  sub_1003A2AD4();
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v1 allowableByContactsHandles:isa];

  unsigned int v5 = [v4 shouldBeAllowedDuringGeneralScreenTime];
  unsigned int v6 = [v4 allowedByScreenTime];
  unsigned int v7 = [v4 applicationCurrentlyLimited];
  uint64_t v8 = 1;
  if (!v7) {
    uint64_t v8 = 2;
  }
  if (v6) {
    uint64_t v8 = 0;
  }
  if (v5) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 3;
  }
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1004904F0;
  type metadata accessor for CSDCallFilterStatus(0);
  uint64_t v11 = String.init<A>(reflecting:)();
  uint64_t v13 = v12;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v14 = sub_1001F3B08();
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  swift_bridgeObjectRetain();
  sub_1001F081C(&qword_10058B600);
  uint64_t v15 = String.init<A>(reflecting:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 72) = v15;
  *(void *)(v10 + 80) = v16;
  swift_bridgeObjectRetain();
  uint64_t v17 = String.init<A>(reflecting:)();
  *(void *)(v10 + 136) = &type metadata for String;
  *(void *)(v10 + 144) = v14;
  *(void *)(v10 + 112) = v17;
  *(void *)(v10 + 120) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_1003A0430()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier);
  sub_1002022F8();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_100233664();
    if (v4)
    {
      id v5 = *(id *)(*(void *)(v2 + 56) + 8 * v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_10024DF84(v6);
      sub_1003A2AD4();
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v8 = [v5 allowableByContactsHandles:isa];

      LODWORD(isa) = [v8 shouldBeAllowedByScreenTimeWhenLimited];
      return isa ^ 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1003A05E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_10024DF84(v7);
  sub_1003A2AD4();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (a4) {
    sub_1003A3070();
  }
  else {
    char v10 = sub_1003A2D58(v9, a2, a3);
  }
  char v11 = v10;
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void sub_1003A07DC()
{
  sub_1001FCC38();
  unint64_t v3 = v2;
  type metadata accessor for UUID();
  sub_1001F6398();
  __chkstk_darwin(v4);
  sub_100202310();
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10048F550;
  v18[0] = v3;
  sub_1001F6204(0, &qword_10058BEE8);
  id v6 = v3;
  uint64_t v7 = String.init<A>(reflecting:)();
  uint64_t v9 = v8;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_1001F3B08();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if ([v6 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_100202CC4((uint64_t)v17, (uint64_t)v18);
  if (v18[3])
  {
    sub_1001F6204(0, (unint64_t *)&qword_1005855B0);
    if (swift_dynamicCast())
    {
      id v10 = [v16 uniqueProxyIdentifierUUID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      char v11 = (uint64_t *)(v0 + OBJC_IVAR___CSDScreenTimeCallFilter_contextsForCallIdentifier);
      sub_1002022F8();
      uint64_t v12 = *v11;
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_100223124(v1, v12);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1003A3A44();
      v15(v14);

      if (v13) {
        sub_10039ED80();
      }
    }
  }
  else
  {
    sub_100202D2C((uint64_t)v18);
  }
  sub_1001FCC08();
}

void sub_1003A0AC0()
{
  sub_1001FCC38();
  unint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = type metadata accessor for DispatchQoS();
  sub_1001F6398();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1002024D0();
  id v13 = [self sharedInstance];
  id v14 = [v13 queue];
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v3;
  v15[3] = v13;
  v15[4] = v0;
  void v21[4] = sub_1003A36E8;
  v21[5] = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_1002C2C88;
  v21[3] = &unk_100517AD0;
  uint64_t v16 = _Block_copy(v21);
  id v17 = v3;
  id v18 = v13;
  id v19 = v0;
  static DispatchQoS.unspecified.getter();
  v20[1] = _swiftEmptyArrayStorage;
  sub_1003A35C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  (*(void (**)(uint64_t, void))(v11 + 8))(v1, v20[0]);
  swift_release();
  sub_1001FCC08();
}

void sub_1003A0D34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v37 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v8 = swift_allocObject();
  long long v39 = xmmword_10048F550;
  *(_OWORD *)(v8 + 16) = xmmword_10048F550;
  aBlock[0] = a1;
  uint64_t v9 = sub_1001F6204(0, &qword_100585860);
  id v10 = a1;
  v36[1] = v9;
  uint64_t v11 = String.init<A>(reflecting:)();
  uint64_t v13 = v12;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v40 = sub_1001F3B08();
  *(void *)(v8 + 64) = v40;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v10;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1003A36F4;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_1003A370C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_10039E628;
  id aBlock[3] = &unk_100517B48;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v10;
  swift_retain();
  swift_release();
  id v18 = [a2 callPassingTest:v16];
  _Block_release(v16);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16)
  {
    __break(1u);
  }
  else
  {
    if (v18)
    {
      id v19 = v18;
      id v20 = [v19 uniqueProxyIdentifierUUID];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v21 = (uint64_t *)(v38 + OBJC_IVAR___CSDScreenTimeCallFilter_contextsForCallIdentifier);
      swift_beginAccess();
      uint64_t v22 = *v21;
      swift_bridgeObjectRetain();
      int v23 = (void *)sub_100223124(v7, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v37);

      if (v23)
      {
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v39;
        uint64_t v41 = (uint64_t)v17;
        id v25 = v17;
        uint64_t v26 = String.init<A>(reflecting:)();
        unint64_t v27 = v40;
        *(void *)(v24 + 56) = &type metadata for String;
        *(void *)(v24 + 64) = v27;
        *(void *)(v24 + 32) = v26;
        *(void *)(v24 + 40) = v28;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        sub_10039ED80();
        swift_release();

        return;
      }
    }
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = v39;
    id v30 = [self sharedInstance];
    id v31 = [v30 currentAudioAndVideoCalls];

    sub_1001F6204(0, (unint64_t *)&qword_1005855B0);
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v41 = v32;
    sub_1001F081C((uint64_t *)&unk_10058BED8);
    uint64_t v33 = String.init<A>(reflecting:)();
    unint64_t v34 = v40;
    *(void *)(v29 + 56) = &type metadata for String;
    *(void *)(v29 + 64) = v34;
    *(void *)(v29 + 32) = v33;
    *(void *)(v29 + 40) = v35;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_release();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003A1250(void *a1, void *a2)
{
  if (![a1 isConversation]) {
    goto LABEL_6;
  }
  id v4 = [a1 remoteParticipantHandles];
  sub_1001F6204(0, (unint64_t *)&unk_100586E00);
  sub_100210D5C((unint64_t *)&qword_100585920, (unint64_t *)&unk_100586E00);
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = sub_1002E5998(v5);
  swift_bridgeObjectRelease();
  id v7 = [a2 remoteMembers];
  sub_1001F6204(0, (unint64_t *)&unk_1005888A0);
  sub_100210D5C((unint64_t *)&qword_1005858C0, (unint64_t *)&unk_1005888A0);
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = sub_1002E5998(v8);
  swift_bridgeObjectRelease();
  if (v6 != v9)
  {
LABEL_6:
    char v18 = 0;
    return v18 & 1;
  }
  id v10 = [a1 remoteParticipantHandles];
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v11 = [a2 remoteMembers];
  uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = sub_1002E5998(v12);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    id v19 = _swiftEmptyArrayStorage;
LABEL_18:
    sub_10024E2A8((unint64_t)v19);
    sub_1002525A4();
    char v18 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18 & 1;
  }
  uint64_t v14 = v13;
  uint64_t v38 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.startIndex.getter();
    char v17 = 1;
  }
  else
  {
    uint64_t result = sub_100261A1C(v12);
    char v17 = v20 & 1;
  }
  uint64_t v35 = result;
  uint64_t v36 = v16;
  char v37 = v17;
  if ((v14 & 0x8000000000000000) == 0)
  {
    do
    {
      uint64_t v21 = v35;
      uint64_t v22 = v36;
      char v23 = v37;
      sub_10024736C(v35, v36, v37, v12);
      id v25 = v24;
      id v26 = [v24 handle];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      if ((v12 & 0xC000000000000001) != 0)
      {
        if ((v23 & 1) == 0) {
          goto LABEL_21;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1001F081C(&qword_1005858F0);
        uint64_t v32 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v32(v34, 0);
      }
      else
      {
        uint64_t v27 = sub_100261934(v21);
        uint64_t v29 = v28;
        char v31 = v30;
        sub_10023561C(v21, v22, v23);
        uint64_t v35 = v27;
        uint64_t v36 = v29;
        char v37 = v31 & 1;
      }
      --v14;
    }
    while (v14);
    sub_10023561C(v35, v36, v37);
    id v19 = v38;
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_1003A1694()
{
  sub_1001FCC38();
  id v1 = [*(id *)(v0 + OBJC_IVAR___CSDScreenTimeCallFilter_providerManager) localProvidersByIdentifierForRemoteClients:0];
  sub_1001F6204(0, &qword_10058BEC0);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10039DCF8(v2);
  id v4 = v3;
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier);
  sub_1002022F8();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_10039E238(v6, v4);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = v8 + 40;
    do
    {
      sub_1002024E8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_100233664();
      char v13 = v12;
      swift_bridgeObjectRelease();
      uint64_t v14 = 0;
      if (v13)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *v5;
        uint64_t v16 = *v5;
        *uint64_t v5 = 0x8000000000000000;
        Swift::Int v17 = *(void *)(v16 + 24);
        sub_1001F081C(&qword_100588490);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v17);
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void **)(*(void *)(v23 + 56) + 8 * v11);
        sub_1001F6204(0, &qword_100588498);
        _NativeDictionary._delete(at:)();
        *uint64_t v5 = v23;
        swift_bridgeObjectRelease();
      }
      v10 += 16;
      swift_endAccess();
      swift_bridgeObjectRelease();

      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = swift_bridgeObjectRelease();
  __chkstk_darwin(v18);
  sub_10039E670(v2, (void (*)(uint64_t, uint64_t, id))sub_1003A3678);
  swift_bridgeObjectRelease();
  if (qword_1005839A0 != -1) {
    swift_once();
  }
  sub_1001F081C(&qword_100584B20);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10048F550;
  swift_bridgeObjectRetain();
  sub_1001F081C((uint64_t *)&unk_10058BEC8);
  uint64_t v20 = String.init<A>(reflecting:)();
  uint64_t v22 = v21;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_1001F3B08();
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  sub_1001FCC08();
}

void sub_1003A19E0()
{
  sub_1001FCC38();
  uint64_t v2 = v1;
  id v4 = v3;
  uint64_t v5 = type metadata accessor for DispatchTime();
  sub_1001F6398();
  uint64_t v50 = v6;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v49 = (char *)&v42 - v11;
  type metadata accessor for DispatchWorkItemFlags();
  sub_1001F6398();
  __chkstk_darwin(v12);
  sub_100202310();
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  sub_1002024D0();
  uint64_t v48 = v0;
  uint64_t v14 = (void ***)&v0[OBJC_IVAR___CSDScreenTimeCallFilter_synchronousConversationsForBundleIdentifier];
  sub_1002022F8();
  uint64_t v15 = *v14;
  if ((*v14)[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_100233664();
    if (v17)
    {
      id v18 = *((id *)v15[7] + v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  objc_super v42 = v14;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  id v46 = (void **)(v19 + 16);
  static DispatchQoS.default.getter();
  sub_1001F081C(&qword_100587550);
  uint64_t v45 = v5;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10048FB00;
  static DispatchWorkItemFlags.inheritQoS.getter();
  static DispatchWorkItemFlags.assignCurrentContext.getter();
  uint64_t v51 = (void **)v20;
  sub_1003A35C4((unint64_t *)&qword_100584FF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1001F081C((uint64_t *)&unk_100584B00);
  sub_1001F6030();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v21 = (void *)sub_1002B8180();
  v21[2] = v19;
  v21[3] = v4;
  id v43 = v4;
  uint64_t v22 = v48;
  void v21[4] = v2;
  v21[5] = v22;
  id v55 = sub_1003A3654;
  uint64_t v56 = v21;
  uint64_t v51 = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  unsigned int v53 = sub_1002C2C88;
  id v54 = &unk_100517A80;
  _Block_copy(&v51);
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v44 = v2;
  swift_bridgeObjectRetain();
  uint64_t v47 = v19;
  swift_retain();
  id v23 = v22;
  DispatchWorkItem.init(qos:flags:block:)();
  swift_release();
  id v24 = [v23 queue];
  OS_dispatch_queue.async(execute:)();

  static DispatchTime.now()();
  id v25 = v49;
  + infix(_:_:)();
  id v26 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v27 = v45;
  v26(v10, v45);
  LOBYTE(v24) = dispatch thunk of DispatchWorkItem.wait(timeout:)();
  v26(v25, v27);
  if (v24)
  {
    if (qword_1005839A0 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    if (qword_1005839A0 != -1) {
      swift_once();
    }
    sub_1001F081C(&qword_100584B20);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1004904F0;
    uint64_t v29 = v46;
    sub_1002022F8();
    char v30 = *v29;
    uint64_t v31 = v44;
    if (*v29)
    {
      uint64_t v51 = (void **)*v29;
      sub_1001F6204(0, &qword_100588498);
      id v32 = v30;
      uint64_t v33 = String.init<A>(reflecting:)();
      unint64_t v35 = v34;
    }
    else
    {
      unint64_t v35 = 0xE300000000000000;
      uint64_t v33 = 7104878;
    }
    *(void *)(v28 + 56) = &type metadata for String;
    unint64_t v36 = sub_1001F3B08();
    *(void *)(v28 + 64) = v36;
    *(void *)(v28 + 32) = v33;
    *(void *)(v28 + 40) = v35;
    uint64_t v51 = v43;
    uint64_t v52 = v31;
    swift_bridgeObjectRetain();
    uint64_t v37 = String.init<A>(reflecting:)();
    *(void *)(v28 + 96) = &type metadata for String;
    *(void *)(v28 + 104) = v36;
    *(void *)(v28 + 72) = v37;
    *(void *)(v28 + 80) = v38;
    uint64_t v51 = *v42;
    swift_bridgeObjectRetain();
    sub_1001F081C((uint64_t *)&unk_10058BEC8);
    uint64_t v39 = String.init<A>(reflecting:)();
    *(void *)(v28 + 136) = &type metadata for String;
    *(void *)(v28 + 144) = v36;
    *(void *)(v28 + 112) = v39;
    *(void *)(v28 + 120) = v40;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  swift_release();
  sub_1002022F8();
  id v41 = *(id *)(v47 + 16);
  swift_release();
LABEL_16:
  sub_1001FCC08();
}

uint64_t sub_1003A1FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001F6204(0, &qword_100588498);
  swift_bridgeObjectRetain();
  id v6 = sub_1003A2348(a2, a3, (SEL *)&selRef_initSynchronouslyWithBundleIdentifier_);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;

  swift_beginAccess();
  uint64_t v8 = *(void **)(a1 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  if (v8)
  {
    sub_100280024((uint64_t)v8, a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = (void *)sub_1002CF340(a2, a3);
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_1003A20FC(void *a1)
{
  uint64_t result = sub_10021FC88(a1);
  if (v4)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier);
    sub_1002022F8();
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100202590();
    uint64_t v11 = (void *)sub_1002231D4(v9, v10, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v11)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1005839A0 != -1) {
        swift_once();
      }
      sub_1001F081C(&qword_100584B20);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10048FB00;
      swift_bridgeObjectRetain();
      uint64_t v13 = String.init<A>(reflecting:)();
      uint64_t v15 = v14;
      *(void *)(v12 + 56) = &type metadata for String;
      unint64_t v16 = sub_1001F3B08();
      *(void *)(v12 + 64) = v16;
      *(void *)(v12 + 32) = v13;
      *(void *)(v12 + 40) = v15;
      sub_1001F6204(0, &qword_10058BEC0);
      id v17 = a1;
      uint64_t v18 = String.init<A>(reflecting:)();
      *(void *)(v12 + 96) = &type metadata for String;
      *(void *)(v12 + 104) = v16;
      *(void *)(v12 + 72) = v18;
      *(void *)(v12 + 80) = v19;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      sub_1001F6204(0, &qword_100588498);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_100202590();
      id v23 = sub_1003A2348(v20, v21, v22);
      sub_1002024E8();
      if (v23)
      {
        sub_100280024((uint64_t)v23, v5, v6);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = sub_100202590();
        id v26 = (void *)sub_1002CF340(v24, v25);
        swift_bridgeObjectRelease();
      }
      return swift_endAccess();
    }
  }
  return result;
}

id sub_1003A2348(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, *a3, v5);

  return v6;
}

void *sub_1003A23BC(void *a1)
{
  if ([a1 isConversation])
  {
    uint64_t v2 = sub_1003A34F0(a1);
    if (v2)
    {
      sub_10039DEC0(v2);
      uint64_t v4 = v3;
      swift_bridgeObjectRelease();
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    id v5 = [a1 remoteHandle];
    if (v5 && (v6 = v5, id v7 = [v5 tuHandle], v6, v7))
    {
      uint64_t v8 = sub_10039FA00();
      uint64_t v10 = v9;
    }
    else
    {
      if (qword_100583AD8 != -1) {
        swift_once();
      }
      uint64_t v8 = qword_10058BE50;
      uint64_t v10 = *(void *)algn_10058BE58;
      swift_bridgeObjectRetain();
    }
    sub_1001F081C((uint64_t *)&unk_100585280);
    uint64_t v4 = sub_1002B8180();
    *(_OWORD *)(v4 + 16) = xmmword_10048F550;
    *(void *)(v4 + 32) = v8;
    *(void *)(v4 + 40) = v10;
  }
  return (void *)v4;
}

#error "1003A27EC: call analysis failed (funcsize=364)"

void sub_1003A2AD4()
{
  sub_1001FCC38();
  uint64_t v1 = v0;
  uint64_t v20 = type metadata accessor for CharacterSet();
  sub_1001F6398();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001FCCD0();
  uint64_t v19 = v5;
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    sub_1002E3EC4();
    uint64_t v7 = sub_100261A1C(v1);
    int v9 = v8;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v1 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_21;
      }
      if (*(_DWORD *)(v1 + 36) != v9) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      static CharacterSet.controlCharacters.getter();
      sub_10030A394();
      uint64_t v10 = StringProtocol.trimmingCharacters(in:)();
      unint64_t v12 = v11;
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v20);
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (!v13)
      {
        swift_bridgeObjectRelease();
        if (qword_100583AD8 != -1) {
          swift_once();
        }
        uint64_t v10 = qword_10058BE50;
        unint64_t v12 = *(void *)algn_10058BE58;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1002E3EC4();
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      if (v14 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1002E3EC4();
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v10;
      void v15[5] = v12;
      uint64_t v16 = sub_100261934(v7);
      uint64_t v7 = v16;
      int v9 = v17;
      if (!--v6)
      {
        sub_10023561C(v16, v17, v18 & 1);
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_19:
    sub_1001FCC08();
  }
}

uint64_t sub_1003A2D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  uint64_t v4 = (uint64_t *)(v3 + OBJC_IVAR___CSDScreenTimeCallFilter_conversationsForBundleIdentifier);
  sub_1002022F8();
  uint64_t v5 = *v4;
  if (!*(void *)(*v4 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100202590();
  unint64_t v6 = sub_100233664();
  if (v7)
  {
    id v8 = *(id *)(*(void *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v10 = [v8 allowableByContactsHandles:isa];

    char v30 = v10;
    unsigned int v11 = [v10 allowedByScreenTime];
    if (qword_1005839A0 != -1) {
      swift_once();
    }
    sub_1001F081C(&qword_100584B20);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10048FAF0;
    if (v11) {
      uint64_t v13 = 0x6465776F6C6C61;
    }
    else {
      uint64_t v13 = 0x6F6C6C6120746F6ELL;
    }
    if (v11) {
      unint64_t v14 = 0xE700000000000000;
    }
    else {
      unint64_t v14 = 0xEB00000000646577;
    }
    unint64_t v15 = v14;
    String.append(_:)(*(Swift::String *)&v13);
    swift_bridgeObjectRelease();
    uint64_t v16 = String.init<A>(reflecting:)();
    uint64_t v18 = v17;
    *(void *)(v12 + 56) = &type metadata for String;
    unint64_t v19 = sub_1001F3B08();
    *(void *)(v12 + 64) = v19;
    *(void *)(v12 + 32) = v16;
    *(void *)(v12 + 40) = v18;
    Class v20 = Array._bridgeToObjectiveC()().super.isa;
    id v21 = (id)TULoggableStringForHandles();

    if (v21)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v22 = String.init<A>(reflecting:)();
    }
    else
    {
      unint64_t v23 = 0xE300000000000000;
      uint64_t v22 = 7104878;
    }
    uint64_t v24 = v11 ^ 1;
    *(void *)(v12 + 96) = &type metadata for String;
    *(void *)(v12 + 104) = v19;
    *(void *)(v12 + 72) = v22;
    *(void *)(v12 + 80) = v23;
    uint64_t v25 = String.init<A>(reflecting:)();
    *(void *)(v12 + 136) = &type metadata for String;
    *(void *)(v12 + 144) = v19;
    *(void *)(v12 + 112) = v25;
    *(void *)(v12 + 120) = v26;
    swift_bridgeObjectRetain();
    uint64_t v27 = String.init<A>(reflecting:)();
    *(void *)(v12 + 176) = &type metadata for String;
    *(void *)(v12 + 184) = v19;
    *(void *)(v12 + 152) = v27;
    *(void *)(v12 + 160) = v28;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
  }
  swift_bridgeObjectRelease();
  return v24;
}

void sub_1003A3070()
{
  sub_1001FCC38();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  sub_1001F6398();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1002024D0();
  void *v1 = [(objc_class *)isa queue];
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  id v10 = *(void (**)(void *, uint64_t))(v6 + 8);
  int v9 = (void *)(v6 + 8);
  v10(v1, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_5;
  }
  if (!v3) {
    goto LABEL_16;
  }
  sub_100202590();
  sub_1003A19E0();
  if (!v11) {
    goto LABEL_16;
  }
  int v9 = v11;
  uint64_t v1 = &type metadata for String;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v12 = [v9 allowableByContactsHandles:isa];

  char v30 = v12;
  LODWORD(isa) = [v12 allowedByScreenTime];
  if (qword_1005839A0 != -1) {
    goto LABEL_18;
  }
LABEL_5:
  sub_1001F081C(&qword_100584B20);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10048FAF0;
  if (isa) {
    uint64_t v14 = 0x6465776F6C6C61;
  }
  else {
    uint64_t v14 = 0x6F6C6C6120746F6ELL;
  }
  if (isa) {
    unint64_t v15 = 0xE700000000000000;
  }
  else {
    unint64_t v15 = 0xEB00000000646577;
  }
  unint64_t v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease();
  uint64_t v17 = String.init<A>(reflecting:)();
  uint64_t v19 = v18;
  *(void *)(v13 + 56) = v1;
  unint64_t v20 = sub_1001F3B08();
  *(void *)(v13 + 64) = v20;
  *(void *)(v13 + 32) = v17;
  *(void *)(v13 + 40) = v19;
  Class v21 = Array._bridgeToObjectiveC()().super.isa;
  id v22 = (id)TULoggableStringForHandles();

  if (v22)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = String.init<A>(reflecting:)();
  }
  else
  {
    unint64_t v24 = 0xE300000000000000;
    uint64_t v23 = 7104878;
  }
  *(void *)(v13 + 96) = v1;
  *(void *)(v13 + 104) = v20;
  *(void *)(v13 + 72) = v23;
  *(void *)(v13 + 80) = v24;
  sub_1001F6204(0, &qword_100588498);
  id v25 = v9;
  uint64_t v26 = String.init<A>(reflecting:)();
  *(void *)(v13 + 136) = v1;
  *(void *)(v13 + 144) = v20;
  *(void *)(v13 + 112) = v26;
  *(void *)(v13 + 120) = v27;
  swift_bridgeObjectRetain();
  uint64_t v28 = String.init<A>(reflecting:)();
  *(void *)(v13 + 176) = v1;
  *(void *)(v13 + 184) = v20;
  *(void *)(v13 + 152) = v28;
  *(void *)(v13 + 160) = v29;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
LABEL_16:
  sub_1001FCC08();
}

void sub_1003A33C8()
{
}

id sub_1003A340C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenTimeCallFilter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ScreenTimeCallFilter()
{
  return self;
}

uint64_t sub_1003A34F0(void *a1)
{
  id v1 = [a1 remoteParticipantHandles];
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  sub_1001F6204(0, (unint64_t *)&unk_100586190);
  sub_100210D5C((unint64_t *)&unk_100585430, (unint64_t *)&unk_100586190);
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1003A358C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A35C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003A360C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003A3654()
{
  return sub_1003A1FD0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003A3660(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003A3670()
{
  return swift_release();
}

uint64_t sub_1003A3678(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1003A20FC(a3);
}

uint64_t sub_1003A36A0()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003A36E8()
{
  sub_1003A0D34(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003A36F4(void *a1)
{
  return sub_1003A1250(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003A36FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A370C()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

const char *sub_1003A3738()
{
  return "allowedByScreenTime";
}

id sub_1003A3744@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 allowedByScreenTime];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1003A3778()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A37B0()
{
  type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  sub_10024636C();
  v8();

  return _swift_deallocObject(v0, v6, v7);
}

void sub_1003A384C()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_1001F63E4(v0);
  uint64_t v1 = sub_100202590();

  sub_10039F1E8(v1, v2, v3, v4);
}

uint64_t sub_1003A38AC()
{
  type metadata accessor for UUID();
  sub_1001F6398();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 25) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;

  sub_10024636C();
  v8();

  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_1003A3948()
{
  uint64_t v1 = type metadata accessor for UUID();
  sub_1001F63E4(v1);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);

  return sub_10039F5D0(v2, v3);
}

uint64_t sub_1003A3990()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003A39D0()
{
  sub_10039EC84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003A39FC()
{
  sub_1002E3EC4();
}

void sub_1003A3A20()
{
  sub_1002E3EC4();
}

uint64_t sub_1003A3A44()
{
  return v0;
}

uint64_t sub_1003A3A5C()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_1003A3A7C()
{
  return v0;
}

uint64_t sub_1003A3A90()
{
  return v0;
}

char *sub_1003A3AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t sub_1003A3ACC()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

void *sub_1003A3AEC(void *a1)
{
  uint64_t v3 = sub_1001F081C(&qword_100584B40);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[5] = 0;
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC13callservicesdP33_0A1659627E4D14053DCC87F1CE1AA4A69CallTimes_jailTimeFinish;
  uint64_t v7 = type metadata accessor for Date();
  sub_1001F0530(v6, 1, 1, v7);
  sub_1001F0530((uint64_t)v5, 1, 1, v7);
  v1[3] = sub_1003A3BE8((uint64_t)v5, (uint64_t)[a1 voIPDOSCount]);
  v1[4] = a1;
  swift_unknownObjectRetain();
  sub_1003A3D24();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1003A3BE8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_1001F081C(&qword_100584B40);
      uint64_t v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      _OWORD v4[2] = a2;
      uint64_t v5 = *(void *)(sub_1001F081C(&qword_100584B40) - 8);
      unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      sub_100319018(a1, (uint64_t)v4 + v6);
      uint64_t v7 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v8 = *(void *)(v5 + 72);
        uint64_t v9 = (uint64_t)v4 + v8 + v6;
        do
        {
          sub_100319018(a1, v9);
          v9 += v8;
          --v7;
        }
        while (v7);
      }
    }
    else
    {
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    sub_100337428(a1);
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_1003A3D24()
{
  uint64_t v3 = sub_1001F081C(&qword_100584B40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  unint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v1 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v9 = *(void *)(*(void *)(v0 + 24) + 16);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v2 = v8 % v9;
  *(void *)(v0 + 16) = v8 % v9;
  static Date.now.getter();
  uint64_t v10 = type metadata accessor for Date();
  sub_1001F0530((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 24) = v11;
  if (result)
  {
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = sub_1003A6018();
  uint64_t v11 = result;
  uint64_t *v1 = result;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if (v2 < *(void *)(v11 + 16))
  {
    sub_10036F208((uint64_t)v6, v11+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2);
    return swift_endAccess();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1003A3EB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001F081C(&qword_100584B40);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v42 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v40 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  id v41 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v40 - v19;
  __chkstk_darwin(v18);
  id v22 = (char *)&v40 - v21;
  uint64_t v23 = (uint64_t)v1 + OBJC_IVAR____TtC13callservicesdP33_0A1659627E4D14053DCC87F1CE1AA4A69CallTimes_jailTimeFinish;
  swift_beginAccess();
  sub_100319018(v23, (uint64_t)v13);
  if (sub_1001F758C((uint64_t)v13, 1, v14) == 1)
  {
    uint64_t result = sub_100337428((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v13, v14);
    Date.timeIntervalSinceNow.getter();
    double v26 = v25;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    if (v26 >= 0.0)
    {
LABEL_21:
      sub_1003A3D24();
      return 0;
    }
    sub_1001F0530((uint64_t)v11, 1, 1, v14);
    swift_beginAccess();
    sub_10036F208((uint64_t)v11, v23);
    uint64_t result = swift_endAccess();
  }
  uint64_t v27 = v1[2];
  uint64_t v28 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v29 = v1[3];
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v31 = v28 % v30;
  if (v31 < 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100319018(v29+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v31, (uint64_t)v8);
  if (sub_1001F758C((uint64_t)v8, 1, v14) == 1)
  {
    sub_100337428((uint64_t)v8);
LABEL_13:
    sub_1003A3D24();
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v8, v14);
  Date.timeIntervalSinceNow.getter();
  if (v32 >= 0.0
    || (double v33 = -v32,
        unint64_t v34 = (void *)v1[4],
        uint64_t result = (uint64_t)[v34 voIPDOSTimeSeconds],
        v33 > (double)(unint64_t)result))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    goto LABEL_13;
  }
  uint64_t v35 = v1[5];
  if (!v35)
  {
    unint64_t v36 = &selRef_voIPDOSMinJailTimeSeconds;
LABEL_19:
    v1[5] = [v34 *v36];
LABEL_20:
    uint64_t v37 = v41;
    static Date.now.getter();
    static Date.+ infix(_:_:)();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v15 + 8);
    v38(v37, v14);
    v38(v20, v14);
    sub_1001F0530((uint64_t)v11, 0, 1, v14);
    uint64_t v39 = v42;
    sub_1003A611C((uint64_t)v11, v42);
    swift_beginAccess();
    sub_10036F208(v39, v23);
    swift_endAccess();
    goto LABEL_21;
  }
  if ((v35 & 0x8000000000000000) == 0)
  {
    v1[5] = 2 * v35;
    unint64_t v36 = &selRef_voIPDOSMaxJailTimeSeconds;
    if ((unint64_t)[v34 voIPDOSMaxJailTimeSeconds] >= 2 * v35) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1003A4368()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100337428(v0 + OBJC_IVAR____TtC13callservicesdP33_0A1659627E4D14053DCC87F1CE1AA4A69CallTimes_jailTimeFinish);
  return v0;
}

uint64_t sub_1003A43A0()
{
  sub_1003A4368();

  return swift_deallocClassInstance();
}

uint64_t sub_1003A43F4()
{
  return type metadata accessor for CallTimes();
}

uint64_t type metadata accessor for CallTimes()
{
  uint64_t result = qword_10058BF40;
  if (!qword_10058BF40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003A4444()
{
  sub_10026ACE0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_1003A44FC()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for SharedConversationServerBag()) init];
  uint64_t v1 = (char *)objc_allocWithZone((Class)type metadata accessor for VoIPDOSCache());
  id v2 = sub_1003A6064(v0, v1);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_1003A4590(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR___CSDVoIPDOSCache_requestCache);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100223684(a1, a2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v8 = sub_1003A3EB0();
    swift_release();
  }
  else
  {
    type metadata accessor for CallTimes();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)swift_unknownObjectRetain();
    uint64_t v10 = sub_1003A3AEC(v9);
    swift_beginAccess();
    sub_100280044((uint64_t)v10, a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    char v8 = 1;
  }
  return v8 & 1;
}

id sub_1003A4724()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VoIPDOSCache();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for VoIPDOSCache()
{
  return self;
}

void sub_1003A47C8()
{
  sub_1003A6244();
  if (v2)
  {
    sub_1002E7844();
    if (v3 != v4)
    {
      sub_1002E7C1C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61C4();
  if (v1)
  {
    sub_1001F081C((uint64_t *)&unk_100585280);
    uint64_t v5 = (const void *)sub_100254560();
    size_t v6 = j__malloc_size(v5);
    sub_1003A6214((uint64_t)(v6 - 32) / 16);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_1003A6250();
    sub_1002DE1C4(v7, v8, v9);
    sub_1003A6198();
  }
  else
  {
    uint64_t v10 = sub_1003A61D4();
    sub_1003A5484(v10, v11, v12, v13);
  }
}

void sub_1003A4878()
{
}

void sub_1003A48A0()
{
  sub_1003A6184();
  if (v3)
  {
    sub_1002E7844();
    if (v4 != v5)
    {
      sub_1002E7C1C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61E4();
  if (v2)
  {
    sub_1001F081C(v6);
    uint64_t v7 = (const void *)sub_100254560();
    size_t v8 = j__malloc_size(v7);
    sub_1003A6220((uint64_t)(v8 - 32) / 16);
  }
  if (v1)
  {
    uint64_t v9 = sub_1003A627C();
    v0(v9);
    sub_1003A6198();
  }
  else
  {
    uint64_t v10 = sub_1003A61B0();
    sub_1003A5D5C(v10, v11, v12, v13, v14);
  }
}

uint64_t sub_1003A4958(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1003A49E8(a1, a2, a3, a4, (uint64_t *)&unk_10058C0D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (void (*)(void))&type metadata accessor for URLQueryItem, (void (*)(unint64_t, uint64_t, unint64_t))sub_1002DE37C);
}

uint64_t sub_1003A49A0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1003A49E8(a1, a2, a3, a4, &qword_10058C0E8, (uint64_t (*)(void))&type metadata accessor for UUID, (void (*)(void))&type metadata accessor for UUID, (void (*)(unint64_t, uint64_t, unint64_t))sub_1002DE394);
}

uint64_t sub_1003A49E8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(unint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    sub_1002E7844();
    if (v14 != v15)
    {
      sub_1002E7C1C();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1002E7834();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_1001F081C(a5);
  uint64_t v18 = a6(0);
  sub_1002462DC(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  size_t v24 = j__malloc_size(v23);
  if (!v20 || (v24 - v22 == 0x8000000000000000 ? (BOOL v25 = v20 == -1) : (BOOL v25 = 0), v25))
  {
LABEL_23:
    sub_1002E74B4();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  long long v23[2] = v16;
  uint64_t v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v28 = (unint64_t)v23 + v27;
  if (a1)
  {
    a8(a4 + v27, v16, v28);
    sub_1003A6198();
  }
  else
  {
    sub_1003A557C(0, v16, v28, a4, a7);
  }
  return (uint64_t)v23;
}

uint64_t sub_1003A4BDC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1003A49E8(a1, a2, a3, a4, &qword_10058C148, (uint64_t (*)(void))&type metadata accessor for Utterance, (void (*)(void))&type metadata accessor for Utterance, (void (*)(unint64_t, uint64_t, unint64_t))sub_1002DE3AC);
}

void sub_1003A4C24()
{
  sub_1003A6244();
  if (v2)
  {
    sub_1002E7844();
    if (v3 != v4)
    {
      sub_1002E7C1C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61C4();
  if (v1)
  {
    sub_1001F081C(&qword_100587558);
    char v5 = (const void *)swift_allocObject();
    size_t v6 = j__malloc_size(v5);
    sub_1003A6214((uint64_t)(v6 - 32) / 24);
  }
  if (v0)
  {
    uint64_t v7 = sub_1003A6250();
    sub_1002DE4C0(v7);
    sub_1003A6198();
  }
  else
  {
    uint64_t v8 = sub_1003A61D4();
    sub_1003A5678(v8, v9, v10, v11);
  }
}

void sub_1003A4CE4()
{
}

void sub_1003A4D0C()
{
}

void sub_1003A4D34()
{
  sub_1003A6244();
  if (v2)
  {
    sub_1002E7844();
    if (v3 != v4)
    {
      sub_1002E7C1C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61C4();
  if (v1)
  {
    sub_1001F081C((uint64_t *)&unk_10058C150);
    char v5 = (const void *)swift_allocObject();
    size_t v6 = j__malloc_size(v5);
    sub_1003A6214((uint64_t)(v6 - 32) / 48);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_1003A6250();
    sub_1002DE318(v7, v8, v9);
    sub_1003A6198();
  }
  else
  {
    uint64_t v10 = sub_1003A61D4();
    sub_1003A5798(v10, v11, v12, v13);
  }
}

void sub_1003A4DF4()
{
}

void sub_1003A4E1C()
{
  sub_1003A6244();
  if (v2)
  {
    sub_1002E7844();
    if (v3 != v4)
    {
      sub_1002E7C1C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61C4();
  if (v1)
  {
    sub_1001F081C(&qword_10058C118);
    char v5 = (const void *)sub_100254560();
    size_t v6 = j__malloc_size(v5);
    sub_1003A6214((uint64_t)(v6 - 32) / 8);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_1003A6250();
    sub_1002DE524(v7, v8, v9);
    sub_1003A6198();
  }
  else
  {
    uint64_t v10 = sub_1003A61D4();
    sub_1003A5898(v10, v11, v12, v13);
  }
}

void sub_1003A4ECC()
{
  sub_1003A6244();
  if (v2)
  {
    sub_1002E7844();
    if (v3 != v4)
    {
      sub_1002E7C1C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61C4();
  if (v1)
  {
    sub_1001F081C(&qword_10058C110);
    char v5 = (const void *)sub_100254560();
    size_t v6 = j__malloc_size(v5);
    sub_1003A6214((uint64_t)(v6 - 32) / 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_1003A6250();
    sub_1002DE2BC(v7, v8, v9);
    sub_1003A6198();
  }
  else
  {
    uint64_t v10 = sub_1003A61D4();
    sub_1003A598C(v10, v11, v12, v13);
  }
}

void sub_1003A4F7C()
{
}

void sub_1003A4FB0()
{
  sub_1003A6184();
  if (v7)
  {
    sub_1002E7844();
    if (v8 != v9)
    {
      sub_1002E7C1C();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61E4();
  if (v5)
  {
    sub_1001F081C(v10);
    uint64_t v11 = (void *)sub_1003A625C();
    size_t v12 = j__malloc_size(v11);
    sub_1003A6220((uint64_t)(v12 - 32) / v6);
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  if (v3)
  {
    uint64_t v13 = sub_1003A627C();
    v2(v13);
    sub_1003A6198();
  }
  else
  {
    v1(0, v4, v11 + 4, v0);
  }
}

void sub_1003A5074()
{
}

void sub_1003A50A8()
{
}

void sub_1003A50D0()
{
  sub_1003A6184();
  if (v3)
  {
    sub_1002E7844();
    if (v4 != v5)
    {
      sub_1002E7C1C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61E4();
  if (v2)
  {
    sub_1001F081C(v6);
    char v7 = (const void *)sub_100254560();
    size_t v8 = j__malloc_size(v7);
    sub_1003A6220((uint64_t)(v8 - 32) / 8);
  }
  if (v1)
  {
    uint64_t v9 = sub_1003A627C();
    v0(v9);
    sub_1003A6198();
  }
  else
  {
    uint64_t v10 = sub_1003A61B0();
    sub_1003A5C88(v10, v11, v12, v13, v14);
  }
}

void sub_1003A5188()
{
}

uint64_t sub_1003A51B0()
{
  return sub_1003A52B8();
}

void sub_1003A51D8()
{
}

void sub_1003A5200()
{
  sub_1003A6184();
  if (v4)
  {
    sub_1002E7844();
    if (v5 != v6)
    {
      sub_1002E7C1C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1002E7834();
    }
  }
  sub_1003A61E4();
  if (v2)
  {
    sub_1001F081C(v7);
    size_t v8 = (const void *)sub_1003A625C();
    size_t v9 = j__malloc_size(v8);
    sub_1003A6220((uint64_t)(v9 - 32) / v3);
  }
  if (v1)
  {
    uint64_t v10 = sub_1003A627C();
    v0(v10);
    sub_1003A6198();
  }
  else
  {
    uint64_t v11 = sub_1003A61B0();
    sub_1003A5E30(v11, v12, v13, v14, v15);
  }
}

uint64_t sub_1003A52B8()
{
  sub_1003A6184();
  if (v6)
  {
    sub_1002E7844();
    if (v8 != v9)
    {
      sub_1002E7C1C();
      if (v8)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1002E7834();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (!v11)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_1001F081C(v5);
  uint64_t v12 = sub_1001F081C(v1);
  sub_1002462DC(v12);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v14 || (v18 - v16 == 0x8000000000000000 ? (BOOL v19 = v14 == -1) : (BOOL v19 = 0), v19))
  {
LABEL_23:
    sub_1002E74B4();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  sub_1003A6220((uint64_t)(v18 - v16) / v14);
LABEL_18:
  uint64_t v20 = *(void *)(sub_1001F081C(v1) - 8);
  if (v3)
  {
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v2(v0 + v21, v10, (char *)v17 + v21);
    sub_1003A6198();
  }
  else
  {
    uint64_t v22 = sub_1003A61B0();
    sub_1003A5F0C(v22, v23, v24, v25, v26);
  }
  return (uint64_t)v17;
}

uint64_t sub_1003A5484(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A557C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1002E74B4();
    sub_1002E75D0();
    goto LABEL_11;
  }
  a5(0);
  sub_100295ED4();
  sub_1003A622C();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_1002E74B4();
  sub_1002E75C0();
LABEL_11:
  uint64_t result = sub_1002E7564();
  __break(1u);
  return result;
}

uint64_t sub_1003A5678(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1001F081C(&qword_10058C140);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A5798(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1003A5898(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    unint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A598C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A5A88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A5B88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A5C88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1002E74B4();
    sub_1002E75D0();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 8 * a1 + 32;
  unint64_t v7 = a3 + 8 * v5;
  if (v6 >= v7 || v6 + 8 * v5 <= a3)
  {
    sub_1001F081C(a5);
    sub_1003A61F4();
    swift_bridgeObjectRelease();
    return v7;
  }
  sub_1002E74B4();
  sub_1002E75C0();
LABEL_11:
  uint64_t result = sub_1002E7564();
  __break(1u);
  return result;
}

uint64_t sub_1003A5D5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1002E74B4();
    sub_1002E75D0();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v5;
  if (v6 >= v7 || v6 + 16 * v5 <= a3)
  {
    sub_1001F081C(a5);
    sub_1003A61F4();
    swift_bridgeObjectRelease();
    return v7;
  }
  sub_1002E74B4();
  sub_1002E75C0();
LABEL_11:
  uint64_t result = sub_1002E7564();
  __break(1u);
  return result;
}

uint64_t sub_1003A5E30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1002E74B4();
    sub_1002E75D0();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v5;
  if (v6 >= v7 || v6 + 40 * v5 <= a3)
  {
    sub_1001F081C(a5);
    sub_1003A61F4();
    swift_bridgeObjectRelease();
    return v7;
  }
  sub_1002E74B4();
  sub_1002E75C0();
LABEL_11:
  uint64_t result = sub_1002E7564();
  __break(1u);
  return result;
}

uint64_t sub_1003A5F0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1002E74B4();
    sub_1002E75D0();
    goto LABEL_11;
  }
  sub_1001F081C(a5);
  sub_100295ED4();
  sub_1003A622C();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_1002E74B4();
  sub_1002E75C0();
LABEL_11:
  uint64_t result = sub_1002E7564();
  __break(1u);
  return result;
}

void sub_1003A6004()
{
}

uint64_t sub_1003A6018()
{
  return sub_1003A52B8();
}

id sub_1003A6064(void *a1, char *a2)
{
  uint64_t v4 = OBJC_IVAR___CSDVoIPDOSCache_requestCache;
  type metadata accessor for CallTimes();
  uint64_t v5 = a2;
  *(void *)&a2[v4] = Dictionary.init(dictionaryLiteral:)();
  *(void *)&v5[OBJC_IVAR___CSDVoIPDOSCache_serverBag] = a1;
  swift_unknownObjectRetain();

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for VoIPDOSCache();
  id v6 = objc_msgSendSuper2(&v8, "init");

  return v6;
}

uint64_t sub_1003A611C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001F081C(&qword_100584B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A6198()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A61B0()
{
  return 0;
}

uint64_t sub_1003A61D4()
{
  return 0;
}

uint64_t sub_1003A61F4()
{
  return swift_arrayInitWithCopy();
}

void sub_1003A6214(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

void sub_1003A6220(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t sub_1003A6250()
{
  return v0 + 32;
}

uint64_t sub_1003A625C()
{
  return swift_allocObject();
}

uint64_t sub_1003A627C()
{
  return v0 + 32;
}

uint64_t sub_1003A62BC()
{
  return swift_unknownObjectRetain();
}

id sub_1003A6300()
{
  return *(id *)(v0 + OBJC_IVAR___CSDMomentsRequest_session);
}

id sub_1003A6310(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR___CSDMomentsRequest_avcRequest] = a1;
  *(void *)&v2[OBJC_IVAR___CSDMomentsRequest_session] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "init");
}

void sub_1003A63C4()
{
}

uint64_t type metadata accessor for MomentsRequest()
{
  return self;
}

void sub_1003A6474(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[CSDDualSIMRingtoneHelper handleTLTonePreferencesDidChangeNotification]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s: defaultToneIdentifier is nil.", (uint8_t *)&v1, 0xCu);
}

void sub_1003A64F8(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[CSDDualSIMRingtoneHelper handleTLTonePreferencesDidChangeNotification]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s: toneIdentifierForTopic is nil.", (uint8_t *)&v1, 0xCu);
}

void sub_1003A657C(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "toneIdentifierForTopic or defaultToneIdentifier are nil.", v1, 2u);
}

void sub_1003A65C0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Simulated a crash report for reason: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A6638(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Wanted to file a simulated crash report for reason: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A66B0(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to create an AVConference instance. This usually happens when the AVConference SPI can't communicate with mediaserverd over XPC", v1, 2u);
}

void sub_1003A66F4(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to initialize a new call with device role %d.", (uint8_t *)v2, 8u);
}

void sub_1003A676C()
{
  sub_100018764();
  uint64_t v3 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Error fetching local invite dictionary %@: %@", v2, 0x16u);
}

void sub_1003A67E8(id *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [*a1 configuration];
  sub_100018764();
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to start connection with configuration=%@: %@", v6, 0x16u);
}

void sub_1003A6890(int *a1, int a2, os_log_t log)
{
  int v3 = *a1;
  v4[0] = 67109376;
  v4[1] = a2;
  __int16 v5 = 1024;
  int v6 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempting to set state to %d, which precedes current state %d", (uint8_t *)v4, 0xEu);
}

void sub_1003A691C(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Conference didStart timeout fired", v1, 2u);
}

void sub_1003A6960(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100018748((void *)&_mh_execute_header, a2, a3, "Failed to start session. error=%@", a5, a6, a7, a8, 2u);
}

void sub_1003A69D0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A6A3C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A6AAC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempt to retrieve application record for bundle URL %@ failed with error: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1003A6B34(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "No matching conversation found for call after handoff, not re-registering for handoff %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A6BAC(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "This chat's conferenceID and GUID are nil or empty, we cannot create a safe call history identifier", v1, 2u);
}

void sub_1003A6BF0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A6C5C(id *a1)
{
  os_log_t v1 = [*a1 handle];
  sub_10002B8B8();
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Could not initiate FaceTime call - No IM handle returned for handle %@ with account %@", v4, v5, v6, v7, v8);
}

void sub_1003A6CF0(id *a1)
{
  os_log_t v1 = [*a1 handle];
  sub_10002B8B8();
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Could not initiate FaceTime call - No chat returned for handle %@ with account %@", v4, v5, v6, v7, v8);
}

void sub_1003A6D84(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A6DF0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A6E5C()
{
  sub_10004E670();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "CSDConversation: Unable to add observer to sharePlaySystemStateObserver as it is nil", v1, 2u);
}

void sub_1003A6E9C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Error setting screenShareAttributes when screen is not enabled", v2, v3, v4, v5, v6);
}

void sub_1003A6ED0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to return to HomeScreen %@", v2, v3, v4, v5, v6);
}

void sub_1003A6F38()
{
  sub_10004E664();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "setParticipantAudioVideoMode:presentationMode:forParticipant: Failed to find participant %@ on conversation %@");
}

void sub_1003A6FAC(void *a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = [a1 pluginName];
  int v7 = 138412802;
  uint8_t v8 = v6;
  __int16 v9 = 2048;
  id v10 = [a1 identifier];
  __int16 v11 = 2112;
  uint64_t v12 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "Trying to add virtual participant for plugin %@ with different identifier %llu: %@", (uint8_t *)&v7, 0x20u);
}

void sub_1003A7074()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Couldn't find member %@ to update validation source for", v2, v3, v4, v5, v6);
}

void sub_1003A70DC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Trying to setup new AVCSession without tearing down previous session first.", v2, v3, v4, v5, v6);
}

void sub_1003A7110(void *a1)
{
  uint64_t v1 = [a1 UUID];
  sub_10004E664();
  sub_10004E67C();
  _os_log_error_impl(v2, v3, v4, v5, v6, 0xCu);
}

void sub_1003A719C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Failed to create CSDAVCSession", v2, v3, v4, v5, v6);
}

void sub_1003A71D0()
{
  sub_10004E664();
  sub_10004E68C((void *)&_mh_execute_header, v0, v1, "CSDConversationJoinContext is configured with none AV mode and presentationMode is default: %@", v2, v3, v4, v5, v6);
}

void sub_1003A7238()
{
  sub_10004E664();
  sub_10004E68C((void *)&_mh_execute_header, v0, v1, "CSDConversationJoinContext is configured with AVVideo/Audio mode while presentationMode is not Default: %@", v2, v3, v4, v5, v6);
}

void sub_1003A72A0()
{
  sub_10004E664();
  sub_10004E68C((void *)&_mh_execute_header, v0, v1, "CSDConversationJoinContext is configured with none AV mode while video is enabled: %@", v2, v3, v4, v5, v6);
}

void sub_1003A7308(void *a1)
{
  [a1 state];
  sub_10004E67C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 8u);
}

void sub_1003A738C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A73FC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to join group: %@", v2, v3, v4, v5, v6);
}

void sub_1003A7464(void *a1)
{
  [a1 avMode];
  sub_10004E67C();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0x12u);
}

void sub_1003A74F8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received callback about an updated participant type when we're not joined into the conversation %@", v2, v3, v4, v5, v6);
}

void sub_1003A7560(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 134218242;
  *(void *)&v3[4] = a2;
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = a1;
  sub_10004E6A8((void *)&_mh_execute_header, a2, a3, "for particiapntID: %llu, invalid csdParticipant from conversationParticipant: %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_1003A75D8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "didReceiveDataBlob invalid csdParticipant from conversationParticipant: %@", v2, v3, v4, v5, v6);
}

void sub_1003A7640(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Dropping unexpected data blob with type: %u", (uint8_t *)v2, 8u);
}

void sub_1003A76B8()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Couldn't find activitySession, not reporting serverErrorCode event.", v2, v3, v4, v5, v6);
}

void sub_1003A76EC()
{
  __assert_rtn("-[CSDConversation executeSessionDidStart]", "CSDConversation.m", 5486, "self.avcSession != nil");
}

void sub_1003A7718()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Not in the joining state so not moving to joined", v2, v3, v4, v5, v6);
}

void sub_1003A774C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "CSDAVCSession failed to start while we're already leaving a U+1 call. Treat this as a leave and clean up the conversation", v2, v3, v4, v5, v6);
}

void sub_1003A7780()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to start CSDAVCSession: %@", v2, v3, v4, v5, v6);
}

void sub_1003A77E8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "didDetectError: %@", v2, v3, v4, v5, v6);
}

void sub_1003A7850(uint64_t a1, void *a2)
{
  int v7 = [a2 UUID];
  sub_10004E67C();
  _os_log_error_impl(v2, v3, v4, v5, v6, 0x16u);
}

void sub_1003A78FC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Reached max retry count for setScreenEnabled, giving up", v2, v3, v4, v5, v6);
}

void sub_1003A7930()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Error updating screenShareAttributes when screen is not enabled", v2, v3, v4, v5, v6);
}

void sub_1003A7964(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "handleReceivedDTMFUpdateMessageFromHost with !hasDtmfUpdateDigits. Message:%@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A79DC(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  int v4 = 138412546;
  uint64_t v5 = v2;
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to prepare conference for pull message %@ and call %@", (uint8_t *)&v4, 0x16u);
}

void sub_1003A7A64(void *a1)
{
  [a1 endedReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v1, v2, "Setting disconnected reason to call failed because ended reason is %ld", v3, v4, v5, v6, v7);
}

void sub_1003A7ADC(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to call failed because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7B64(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to account unsupported because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7BEC(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to network unsupported because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7C74(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to provider crashed because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7CFC(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to media start failed because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7D84(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to media server crashed because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7E0C(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to other secondary device in use because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7E94(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to kicked because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7F1C(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to rejected because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A7FA4(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to invalid conversation link because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A802C(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to conversation links disabled because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A80B4(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to no destinations available because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A813C(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to unknown participant added because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A81C4(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to vision call establishment version mismatch because failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A824C(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to blocked remote participant bc failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A82D4(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to travel mode prevents calls bc failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A835C(void *a1)
{
  uint64_t v1 = [a1 failureContext];
  [v1 failureReason];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Setting disconnected reason to guest mode prevents calls bc failure reason is %ld", v4, v5, v6, v7, v8);
}

void sub_1003A83E4()
{
  sub_10004E664();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Failed to find a call source to dial with for dial request: %@", v1, 0xCu);
}

void sub_1003A8458()
{
  sub_10004E664();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "joinConversationRequest has an unspecified originating UI type: %@", v1, 0xCu);
}

void sub_1003A84CC()
{
  sub_10004E664();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Failed AVAudioSession muteSessionInput error: %@", v1, 0xCu);
}

void sub_1003A8540()
{
  sub_10004E664();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Creating sandbox extension directory '%@' failed with error %@", v2, 0x16u);
}

void sub_1003A85C4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A8630(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
    a5,
    a6,
    a7,
    a8,
    2u);
}

void sub_1003A869C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
    a5,
    a6,
    a7,
    a8,
    2u);
}

void sub_1003A8708(char a1, uint64_t a2, os_log_t log)
{
  v3[0] = 67109378;
  v3[1] = a1 & 1;
  __int16 v4 = 2112;
  uint64_t v5 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "There was an error enabling emergency mode. Enabled successfully (%d) Error: %@", (uint8_t *)v3, 0x12u);
}

void sub_1003A8794(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Encountered error while opening URL: %@", (uint8_t *)&v3, 0xCu);
}

void sub_1003A8810(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempt to open application with bundle identifier %@ failed with error %@", (uint8_t *)&v4, 0x16u);
}

void sub_1003A889C(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a2 telephonyClient];
  int v6 = 138412546;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  __int16 v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Retrieving subscription information failed with error %@ for %@.", (uint8_t *)&v6, 0x16u);
}

void sub_1003A8950(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error synchronizing NPS defaults: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A89C8(uint64_t a1, NSObject *a2)
{
  int v5 = 138412546;
  id v6 = (id)objc_opt_class();
  __int16 v7 = 2112;
  uint64_t v8 = a1;
  id v4 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Prefereces object was of unexpected class %@: %@", (uint8_t *)&v5, 0x16u);
}

void sub_1003A8A70()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Attempt to archive persistent channel identity failed with error %@", v2, v3, v4, v5, v6);
}

void sub_1003A8AD8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Attempt to unarchive persisted channel identity failed with error %@", v2, v3, v4, v5, v6);
}

void sub_1003A8B40()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Attempt to archive persisted channel identity failed with error %@", v2, v3, v4, v5, v6);
}

void sub_1003A8BA8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not determine UUID for FaceTime app bundle identifier %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A8C20(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 134218242;
  uint64_t v4 = a2;
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Setting disconnected reason to call failed because CSDAVConference ended reason is %ld for call %@", (uint8_t *)&v3, 0x16u);
}

void sub_1003A8CA8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Dropping invitation accept since there is no remote push token provided.", v1, 2u);
}

void sub_1003A8CEC(void *a1, NSObject *a2)
{
  int v3 = [a1 protoUpgradeSessionUUID];
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while creating UUID from protoUUID: %@", (uint8_t *)&v4, 0xCu);
}

void sub_1003A8D84(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Dropping invitation accept since the remote push token was not one of the ones we invited.", v1, 2u);
}

void sub_1003A8DC8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A8E00(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A8E38()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error compacting store: %@", v2, v3, v4, v5, v6);
}

void sub_1003A8EA0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error cleaning up LiveLookupData: %@", v2, v3, v4, v5, v6);
}

void sub_1003A8F08()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Extensions changed for Call Directory NSExtensionManager %@, but we do not have a CXCallDirectoryManager (perhaps because device is not yet unlocked) so cannot synchronize", v2, v3, v4, v5, v6);
}

void sub_1003A8F70()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error synchronizing call directory extensions: %@", v2, v3, v4, v5, v6);
}

void sub_1003A8FD8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "CSDMessagingCallMessage could not be read", v1, 2u);
}

void sub_1003A901C(void *a1, NSObject *a2)
{
  v3[0] = 67109120;
  v3[1] = [a1 type];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CSDMessagingCallMessage is of unsupported type: %d", (uint8_t *)v3, 8u);
}

void sub_1003A90A8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003A9114()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to prepare conference for call %@. Disconnecting call with conference failed", v2, v3, v4, v5, v6);
}

void sub_1003A9180()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to prepare conference for call %@. Disconnecting call with conference failed", v2, v3, v4, v5, v6);
}

void sub_1003A91EC()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to prepare conference for call %@. Disconnecting call with conference failed", v2, v3, v4, v5, v6);
}

void sub_1003A9258(void *a1)
{
  uint64_t v1 = [a1 groupUUID];
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "No call found for conversation with group UUID: %@ so not sending buzz members relay message", v4, v5, v6, v7, 2u);
}

void sub_1003A92E0(void *a1)
{
  uint64_t v1 = [a1 groupUUID];
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "No call found for conversation with group UUID: %@ so not sending add remote members relay message", v4, v5, v6, v7, 2u);
}

void sub_1003A9368(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not create notification for XPC event %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A93E0()
{
  __error();
  uint64_t v0 = __error();
  strerror(*v0);
  sub_10009CE6C();
  sub_10009CE84((void *)&_mh_execute_header, v1, v2, "failed to initialize temporary directory (%d): %s", v3, v4, v5, v6, v7);
}

void sub_1003A9468()
{
  __error();
  uint64_t v0 = __error();
  strerror(*v0);
  sub_10009CE6C();
  sub_10009CE84((void *)&_mh_execute_header, v1, v2, "failed to resolve temporary directory (%d): %s", v3, v4, v5, v6, v7);
}

void sub_1003A94F0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Not accepting invitation to call %@ since it is already Connected", (uint8_t *)&v2, 0xCu);
}

void sub_1003A9568(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Not holding chat %@ since it is not yet Connected", (uint8_t *)&v2, 0xCu);
}

void sub_1003A95E0()
{
  sub_1000A30AC();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Session %@ appears to have ended with a fatal reason: %d");
}

void sub_1003A9648()
{
  sub_1000A30AC();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Session %@ appears to have ended due to mismatched networks reason: %d");
}

void sub_1003A96B0(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 handle];
  sub_100018764();
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Cannot start FaceTime IDS chat using handle %@ because IDS destination was '%@'", v6, 0x16u);
}

void sub_1003A9754()
{
  sub_100018764();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Cannot start FaceTime IDS chat using service %@ because account is not active: %@");
}

void sub_1003A97C0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&v3[4] = *(void *)(a1 + 32);
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = a2;
  sub_10004E6A8((void *)&_mh_execute_header, a2, a3, "Requested transaction to answer already-ringing call with UUID %@ failed with error %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_1003A983C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to find existing chat for conversation: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003A98B4(uint8_t *a1, void *a2, void *a3, NSObject *a4)
{
  uint64_t v7 = [a2 remoteFromID];
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_ERROR, "Unable to convert to remoteIDSToken: %@", a1, 0xCu);
}

void sub_1003A992C()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Error retrieving contents of directory at URL %@: %@");
}

void sub_1003A9998()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "%@ doesn't exist at client file url: %@");
}

void sub_1003A9A1C()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to start sending resource with identifier %@: %@");
}

void sub_1003A9A84()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "failed to send file with identifier: %@, error: %@");
}

void sub_1003A9AEC()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to create directory at URL %@: %@");
}

void sub_1003A9B54()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to delete contents at URL %@: %@");
}

void sub_1003A9BBC()
{
  sub_1000AA918();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Error zipping directory at URL %@ to output URL %@", v1, 0x16u);
}

void sub_1003A9C34()
{
  sub_1000AA918();
  __int16 v4 = v0;
  uint64_t v5 = v1;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Error occurred during IMFileCopierOperation type %ld on inputURL %@ and outputURL %@", v3, 0x20u);
}

void sub_1003A9CB8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed channel connect action %@", v2, v3, v4, v5, v6);
}

void sub_1003A9D20()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed channel disconnect action %@", v2, v3, v4, v5, v6);
}

void sub_1003A9D88()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed channel transmit start action %@", v2, v3, v4, v5, v6);
}

void sub_1003A9DF0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed channel transmit stop action %@", v2, v3, v4, v5, v6);
}

void sub_1003A9E58()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed action %@", v2, v3, v4, v5, v6);
}

void sub_1003A9EC0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint8_t v6 = (objc_class *)objc_opt_class();
  uint64_t v7 = NSStringFromClass(v6);
  sub_1000B645C();
  __int16 v11 = v5;
  __int16 v12 = v8;
  uint64_t v13 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Aborting channel action %@; Expected %@ but received %@",
    v10,
    0x20u);
}

void sub_1003A9F94()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Application not found; could not restore a call from persisted channel identity %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003A9FFC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AA06C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Encountered error attempting to obtain ChannelSource process handle: %@", v2, v3, v4, v5, v6);
}

void sub_1003AA0D4(uint64_t a1, void *a2)
{
  __int16 v8 = [a2 uniqueProxyIdentifier];
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Failed to take process assertion %p for barge call %@", v4, v5, v6, v7, 2u);
}

void sub_1003AA178(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 40) uniqueProxyIdentifier];
  sub_1000B645C();
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Ending process assertion %p for barge call %@", v4, v5, v6, v7, v8);
}

void sub_1003AA20C(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *a2;
  int v5 = 138412546;
  uint64_t v6 = v3;
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempt to open application with bundle identifier %@ failed with error %@", (uint8_t *)&v5, 0x16u);
}

void sub_1003AA29C(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to start conference connection when pulling call %@: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1003AA328(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 processBundleIdentifier];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to grab assertion for process %@, reason: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1003AA3D8(void *a1, NSObject *a2)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  int v5 = 138412802;
  uint64_t v6 = v2;
  __int16 v7 = 2112;
  uint64_t v8 = v3;
  __int16 v9 = 2112;
  uint64_t v10 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Received unsuccessful didSend for message with identifier %@ using account %@: %@", (uint8_t *)&v5, 0x20u);
}

void sub_1003AA46C(id *a1, uint64_t a2, NSObject *a3)
{
  int v5 = [*a1 typeString];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to send %@ message: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1003AA520(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Attempt to unarchive PTT service update push budget failed with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AA598(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Attempt to archive PTT service update push budget failed with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AA610()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Can't perform start call action since queries did not return any destinations", v2, v3, v4, v5, v6);
}

void sub_1003AA644(id *a1)
{
  uint64_t v1 = [*a1 callUUID];
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "No longer handling call with UUID %@, requesting end", v4, v5, v6, v7, 2u);
}

void sub_1003AA6D0(id *a1)
{
  uint64_t v1 = [*a1 handle];
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Could not initiate FaceTime call - No IDS or IMAV call returned for handle %@", v4, v5, v6, v7, 2u);
}

void sub_1003AA75C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Failing join call action since it does not meet join call action requirements", v2, v3, v4, v5, v6);
}

void sub_1003AA790()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Failing join call action since we are already pending a join on this same call UUID elsewhere.", v2, v3, v4, v5, v6);
}

void sub_1003AA7C4()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Failing join call action isVideo: NO and videoEnabled: YES", v2, v3, v4, v5, v6);
}

void sub_1003AA7F8()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Can't perform join call action since queries did not return any destinations", v2, v3, v4, v5, v6);
}

void sub_1003AA82C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Attempted to prepare a new conference connection with the same identifier as an existing conference connection: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AA8A4(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a2 conferenceConnections];
  int v6 = 138412546;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Did not find conference connection to start for identifier %@. All conference connections: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1003AA958(id *a1, void **a2, NSObject *a3)
{
  [*a1 prepareToStopTimeout];
  uint64_t v6 = v5;
  uint64_t v7 = *a2;
  __int16 v8 = [v7 conference];
  int v9 = 134218498;
  uint64_t v10 = v6;
  __int16 v11 = 2112;
  __int16 v12 = v7;
  __int16 v13 = 2112;
  uint64_t v14 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "It's been %fs since asked to prepare to stop conference and conference connection still exists: %@. Forcefully cleaning up all conference connections for conference %@", (uint8_t *)&v9, 0x20u);
}

void sub_1003AAA2C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 134218242;
  uint64_t v4 = a2;
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Relay conference ended in failure (reason: %ld): %@", (uint8_t *)&v3, 0x16u);
}

void sub_1003AAAB4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "We were unable to send the PIN to the other device to be displayed, Sorry", v1, 2u);
}

void sub_1003AAAF8(uint8_t *a1, void *a2, NSObject *a3)
{
  uint64_t v6 = +[CSDThumperIDSService sharedInstance];
  *(_DWORD *)a1 = 138412290;
  *a2 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not obtain caller ID from Thumper IDS service %@", a1, 0xCu);
}

void sub_1003AAB74(void *a1, NSObject *a2)
{
  int v3 = [a1 faceTimeProvider];
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Aborting Thumper registration; could not obtain sender identities from call provider %@.",
    (uint8_t *)&v4,
    0xCu);
}

void sub_1003AAC0C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Received didSendWithSuccess=NO for message with identifier %@: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1003AAC94(uint64_t a1, id *a2, NSObject *a3)
{
  __int16 v5 = [*a2 thumperService];
  uint64_t v6 = [v5 devices];
  int v7 = 138412546;
  uint64_t v8 = a1;
  __int16 v9 = 2112;
  uint64_t v10 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "No device found for account %@. All accounts: %@", (uint8_t *)&v7, 0x16u);
}

void sub_1003AAD58(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  int v3 = "-[CSDRouteManager init]_block_invoke_2";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s: error: %@", (uint8_t *)&v2, 0x16u);
}

void sub_1003AADE4(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to fetch CarKit DND assertion: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AAE5C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error sending message: %@", v2, v3, v4, v5, v6);
}

void sub_1003AAEC4()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Could not find caller ID when creating conversation", v2, v3, v4, v5, v6);
}

void sub_1003AAEF8()
{
  sub_100137700(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Retrieving conversation links failed with error %@", v2, v3, v4, v5, v6);
}

void sub_1003AAF60()
{
  sub_100137700(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Could not decrypt let me in request with error %@", v2, v3, v4, v5, v6);
}

void sub_1003AAFC8()
{
  sub_100137700(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to persist received link to data store with error %@", v2, v3, v4, v5, v6);
}

void sub_1003AB030()
{
  sub_10004E664();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "Failed to fetch activated links with error %@", v1, 0xCu);
}

void sub_1003AB0A4()
{
  sub_100137700(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to remove received link from data store with error %@", v2, v3, v4, v5, v6);
}

void sub_1003AB10C(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 handle];
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, a2, v4, "Not adding pending member since already tracking member in remoteMembers list: %@", v5);
}

void sub_1003AB198()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed broadcasting file. Missing local member on conversation: %@", v2, v3, v4, v5, v6);
}

void sub_1003AB200()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error broadcasting image %@", v2, v3, v4, v5, v6);
}

void sub_1003AB268()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Missing local member on conversation: %@", v2, v3, v4, v5, v6);
}

void sub_1003AB2D0()
{
  sub_10013776C();
  uint64_t v1 = [v0 activity];
  uint64_t v2 = [v1 UUID];
  sub_10002B8B8();
  sub_10002B8D0((void *)&_mh_execute_header, v3, v4, "Failed to delete image file after sending image for session %@ error %@", v5, v6, v7, v8, v9);
}

void sub_1003AB36C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Invalid vouching message, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB3A0()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Message type not permitted for member type, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB3D4()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Invalid blob respnose, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB408()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Invalid activity session update, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB43C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Kick message not permitted, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB470()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Message doesn't have intent key set, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB4A4()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Update type & payload not allowed fromHandle: %@", v2, v3, v4, v5, v6);
}

void sub_1003AB50C()
{
  sub_10013770C();
  [v1 type];
  uint64_t v2 = objc_msgSend((id)sub_100137760(), "typeAsString:");
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, v0, v3, "Received an empty message of type: %@", v4);
}

void sub_1003AB5A0()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "FromHandle: %@ is trying to kick itself (%@)");
}

void sub_1003AB608()
{
  sub_10013770C();
  [v1 type];
  uint64_t v2 = objc_msgSend((id)sub_100137760(), "typeAsString:");
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, v0, v3, "Originator not set on message type: %@", v4);
}

void sub_1003AB69C()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Originator on message (%@) is not equal to fromHandle: %@");
}

void sub_1003AB704()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Message has an unrecognized type, dropping message", v2, v3, v4, v5, v6);
}

void sub_1003AB738()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "blob response verification can't function without an existing conversation", v2, v3, v4, v5, v6);
}

void sub_1003AB76C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Failed to get participant from BlobResponse message", v2, v3, v4, v5, v6);
}

void sub_1003AB7A0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "FromHandle: %@ is trying to add a lightweight participant, but we can't find the lightweightMember", v2, v3, v4, v5, v6);
}

void sub_1003AB808()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Couldn't find member for fromID: %@", v2, v3, v4, v5, v6);
}

void sub_1003AB870()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "FromHandle: %@ is trying to add a different participant handle (%@)");
}

void sub_1003AB8D8()
{
  sub_10013770C();
  [v1 type];
  uint64_t v2 = objc_msgSend((id)sub_100137760(), "typeAsString:");
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, v0, v3, "Received an invalid count of participants on type: %@", v4);
}

void sub_1003AB96C()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Rejecting update since its trying to add a lightweightMember not associated with their device, member: %@ fromHandle: %@");
}

void sub_1003AB9D4()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Rejecting join update since we don't have an existing conversation, fromHandle: %@", v2, v3, v4, v5, v6);
}

void sub_1003ABA3C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Rejecting join update since it is trying to add members to the conversation, fromHandle: %@", v2, v3, v4, v5, v6);
}

void sub_1003ABAA4()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Member verification can't function without an existing conversation", v2, v3, v4, v5, v6);
}

void sub_1003ABAD8(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 addedMembers];
  [v3 count];
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, a2, v4, "Invalid amount of members trying to be vouched (%lu)", v5);
}

void sub_1003ABB68()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Unable to create local member. Caller ID: %@", v2, v3, v4, v5, v6);
}

void sub_1003ABBD0()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "LMI: Cannot find pending conversation for pseudonym %@", v2, v3, v4, v5, v6);
}

void sub_1003ABC3C()
{
  sub_100137700(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "LMI: Could not encrypt let me in request with error %@", v2, v3, v4, v5, v6);
}

void sub_1003ABCA4()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Error sending request to join conversation", v2, v3, v4, v5, v6);
}

void sub_1003ABCD8()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "LMI: Could not encrypt let me in response", v2, v3, v4, v5, v6);
}

void sub_1003ABD0C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "oneToOneMode is not enabled - ignoring to send video upgrade message", v2, v3, v4, v5, v6);
}

void sub_1003ABD40()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Request to screen share FF is not turned on", v2, v3, v4, v5, v6);
}

void sub_1003ABD74()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Requested participant is not active in conversation %@, dropping request to screen share", v2, v3, v4, v5, v6);
}

void sub_1003ABDDC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "There is already an active screen share request to this handle %@, dropping screen share request", v2, v3, v4, v5, v6);
}

void sub_1003ABE44()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Requested participant is not active in conversation %@, dropping request to cancel screen share", v2, v3, v4, v5, v6);
}

void sub_1003ABEAC(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 UUID];
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, a2, v4, "GreenTea devices are not supported to have this GFT conversation UUID: %@", v5);
}

void sub_1003ABF38()
{
  sub_10004E670();
  sub_100137718((void *)&_mh_execute_header, v0, v1, "Attempted to add remote members without an active voucher manager.", v2, v3, v4, v5, v6);
}

void sub_1003ABF6C()
{
  sub_10013776C();
  uint64_t v1 = [*(id *)(v0 + 32) handle];
  uint64_t v2 = [v1 value];
  sub_10002B8B8();
  sub_10002B8D0((void *)&_mh_execute_header, v3, v4, "Failed to sign complementary association voucher for member %@ due to error: %@", v5, v6, v7, v8, v9);
}

void sub_1003AC00C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to create CPActivitySession for activitySession: %@\n", v2, v3, v4, v5, v6);
}

void sub_1003AC074()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to find conversation that has activitySession %@", v2, v3, v4, v5, v6);
}

void sub_1003AC0E0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to request authorization error: %@", v2, v3, v4, v5, v6);
}

void sub_1003AC148()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Couldn't find participant for update message: %@ on conversation: %@");
}

void sub_1003AC1B0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "There is already an active screen share request from handle %@, dropping screen share request", v2, v3, v4, v5, v6);
}

void sub_1003AC218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_msgSend((id)sub_100137798(a1, a2), "activity");
  _DWORD *v3 = 138412290;
  void *v2 = v4;
  sub_100137778((void *)&_mh_execute_header, v5, v6, "No image provided in update message for activity: %@");
}

void sub_1003AC274()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error while generating preview image for activity session: %@", v2, v3, v4, v5, v6);
}

void sub_1003AC2DC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Message did not contain updated guest mode state", v2, v3, v4, v5, v6);
}

void sub_1003AC310()
{
  sub_1000AA918();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to renew link %@ with error %@");
}

void sub_1003AC380()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Requested avMode -> none, but leaving instead since this is a screensharing call or AVLess SharePlay is not supported", v2, v3, v4, v5, v6);
}

void sub_1003AC3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_msgSend((id)sub_100137798(a1, a2), "uniqueProxyIdentifier");
  _DWORD *v3 = 138412290;
  void *v2 = v4;
  sub_100137778((void *)&_mh_execute_header, v5, v6, "Requesting to disconnect call %@");
}

void sub_1003AC410()
{
  sub_100137700(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Couldn't find conversation UUID %@ to register messagesGroupUUID on", v2, v3, v4, v5, v6);
}

void sub_1003AC478()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Dropping request to add highlight identifier as a nil identifier or a nil collaboration URL was provided", v2, v3, v4, v5, v6);
}

void sub_1003AC4AC()
{
  sub_100137750(__stack_chk_guard);
  sub_1000AA918();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Not adding highlight identifier %@ because no conversation could be found for UUID %@");
}

void sub_1003AC514()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Dropping request to remove highlight identifier as a nil identifier was provided", v2, v3, v4, v5, v6);
}

void sub_1003AC548()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Cannot add nil collaboration dictionary to conversation UUID %@", v2, v3, v4, v5, v6);
}

void sub_1003AC5B4()
{
  sub_100137750(__stack_chk_guard);
  sub_1000AA918();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Asked to add collaboration dictionary %@ to conversation with UUID %@, but no such conversation exists");
}

void sub_1003AC61C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Conversation is not currently tracking collaboration identifier %@ and the collaboration is not from me so we are not tracking the collaboration yet", v2, v3, v4, v5, v6);
}

void sub_1003AC684()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Gelato is not enabled- not adding collaboration dictionary to conversation", v2, v3, v4, v5, v6);
}

void sub_1003AC6B8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Not posting session ended event. Error finding participant for end session %@", v2, v3, v4, v5, v6);
}

void sub_1003AC720()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Could not find IDS destinations to send to", v2, v3, v4, v5, v6);
}

void sub_1003AC754(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 URL];
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, a2, v4, "Transfer already in progress for resource at url %@", v5);
}

void sub_1003AC7E0()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Error sending request to join conversation.", v2, v3, v4, v5, v6);
}

void sub_1003AC814()
{
  sub_10013776C();
  uint64_t v1 = TULoggableStringForHandle();
  uint64_t v2 = [v0 storageGuid];
  sub_1001376CC();
  sub_1001377AC((void *)&_mh_execute_header, v3, v4, "service:account:incomingData:fromID:context: receiving proxied IDS message from %{mask.hash}@ with ID %{mask.hash}@", v5, v6, v7, v8, v9);
}

void sub_1003AC8B4()
{
  sub_10013776C();
  uint64_t v1 = TULoggableStringForHandle();
  uint64_t v2 = [v0 storageGuid];
  sub_1001376CC();
  sub_1001377AC((void *)&_mh_execute_header, v3, v4, "service:account:incomingResourceAtURL:metadata:fromID:context: receiving proxied IDS resource from %{mask.hash}@ with ID %{mask.hash}@", v5, v6, v7, v8, v9);
}

void sub_1003AC954()
{
  sub_10004E670();
  sub_100137734((void *)&_mh_execute_header, v0, v1, "received proxied group participant update", v2, v3, v4, v5, v6);
}

void sub_1003AC988()
{
  sub_10004E670();
  sub_100137718((void *)&_mh_execute_header, v0, v1, "Could not create group UUID from string. Dropping message.", v2, v3, v4, v5, v6);
}

void sub_1003AC9BC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "fromID found in both the remoteMembers & lightweightMembers list. Rejecting message.", v2, v3, v4, v5, v6);
}

void sub_1003AC9F0()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Message verification failed, dropping message.", v2, v3, v4, v5, v6);
}

void sub_1003ACA24()
{
  sub_10013770C();
  [v1 type];
  uint64_t v2 = objc_msgSend((id)sub_100137760(), "typeAsString:");
  sub_10004E664();
  sub_1001376B4((void *)&_mh_execute_header, v0, v3, "Dropping message since the type %@ is not allowed for lightweightMembers", v4);
}

void sub_1003ACAB8()
{
  sub_10004E670();
  sub_100137734((void *)&_mh_execute_header, v0, v1, "Group participant update received", v2, v3, v4, v5, v6);
}

void sub_1003ACAEC()
{
  sub_10004E670();
  sub_100137718((void *)&_mh_execute_header, v0, v1, "Attempted to sanitize participant update without an initialized sanitizer.", v2, v3, v4, v5, v6);
}

void sub_1003ACB20()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "processJoinUpdate: Received nil when trying to convert data to participant join context", v2, v3, v4, v5, v6);
}

void sub_1003ACB54()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Received nil when trying to convert data to participant join context", v2, v3, v4, v5, v6);
}

void sub_1003ACB88()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Received empty set for remote members", v2, v3, v4, v5, v6);
}

void sub_1003ACBBC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Couldn't find existing conversation and can't create a new conversation because we couldn't find our localMember in the membership list.", v2, v3, v4, v5, v6);
}

void sub_1003ACBF0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Membership update message failed verification. Dropping fromHandle: %@", v2, v3, v4, v5, v6);
}

void sub_1003ACC58()
{
  sub_10004E664();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Join context: %@", v1, 0xCu);
}

void sub_1003ACCCC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "LMI: Unable to send delegation message without conversation or link", v2, v3, v4, v5, v6);
}

void sub_1003ACD00()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Error sending delegate to join conversation.", v2, v3, v4, v5, v6);
}

void sub_1003ACD34()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Received resource handler missing CSDConversation UUID from metadata", v2, v3, v4, v5, v6);
}

void sub_1003ACD68()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received resource handler cannot find CSDConversation with groupUUID %@", v2, v3, v4, v5, v6);
}

void sub_1003ACDD0()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Received resource handler for a participant not in this conversation", v2, v3, v4, v5, v6);
}

void sub_1003ACE04()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Received resource handler cannot decode activitySessionUUID", v2, v3, v4, v5, v6);
}

void sub_1003ACE38()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Could not find handler for this resource transfer", v2, v3, v4, v5, v6);
}

void sub_1003ACE6C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to activate remote display discovery: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003ACEE4()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Attempt to retrieve application record for application identifier %@ failed with error: %@");
}

void sub_1003ACF4C()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Attempt to retrieve application record for bundle identifier %@ failed with error: %@");
}

void sub_1003ACFB4()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Not creating outgoing screen share request because request is invalid %@", v2, v3, v4, v5, v6);
}

void sub_1003AD01C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Incoming screen sharing request did not have a valid type %@", v2, v3, v4, v5, v6);
}

void sub_1003AD084()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Incoming screen sharing request did not have a valid origin type %@", v2, v3, v4, v5, v6);
}

void sub_1003AD0EC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Incoming screen sharing request did not have a valid UUID %@", v2, v3, v4, v5, v6);
}

void sub_1003AD154()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Incoming screen sharing request was from a contact newer than 24h %@", v2, v3, v4, v5, v6);
}

void sub_1003AD1BC(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to acquire process assertion for bundle identifier %@", (uint8_t *)&v3, 0xCu);
}

void sub_1003AD238(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to initialize CXCallDirectoryStore for reading: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AD2B0()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Error checking if call directory database contains blocking entry for source address %@: %@");
}

void sub_1003AD318(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Received a malformed prominence relay message", v1, 2u);
}

void sub_1003AD35C(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "This method expects a non-nil dynamic identifier, but a nil one was providied", v1, 2u);
}

void sub_1003AD3A0(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "This method expects a non-nil dynamic identifier substring, but a nil one was providied", v1, 2u);
}

void sub_1003AD3E4()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Encountered error while opening URL: %@", v2, v3, v4, v5, v6);
}

void sub_1003AD44C(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  int v4 = 138412546;
  uint64_t v5 = v2;
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Encountered error while opening URL: %@ for call: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1003AD4D4()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Received nil call from outgoingCallFromProxyCall: for dial request %@ and displayContext %@");
}

void sub_1003AD53C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Aborting end active calls and answer ringing call; answer request does not specify a call to answer.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD570()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting end active calls and answer ringing call; ringing call %@ does not contain a data source.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD5D8()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Aborting end active calls and answer ringing call; ringing or screened call %@ is not the same as the specified call %@");
}

void sub_1003AD640()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting end active calls and answer ringing call; could not find ringing or screened call with identifier %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD6A8()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Aborting end active calls and answer ringing call; could not find any ringing or screened calls to answer.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD6DC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Aborting end held calls and answer ringing call; answer request does not specify a call to answer.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD710()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Aborting end held calls and answer ringing call; could not find any ringing calls to answer.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD744()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting end held calls and answer ringing call; could not find ringing call with identifier %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD7AC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting end held calls and answer ringing call; ringing call %@ does not contain a data source.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD814()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Aborting end held calls and answer ringing call; ringing call %@ is not the same as the specified call %@");
}

void sub_1003AD87C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Aborting hold active calls and answer ringing call; answer request does not specify a call to answer.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD8B0()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Aborting hold active calls and answer ringing call; could not find any ringing calls to answer.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD8E4()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting hold active calls and answer ringing call; could not find ringing call with identifier %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD94C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting hold active calls and answer ringing call; ringing call %@ does not contain a data source.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AD9B4()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Aborting hold active calls and answer ringing call; ringing call %@ is not the same as the specified call %@");
}

void sub_1003ADA1C()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Cannot perform recording operation, client asked to perform request on UPI that does not exist in call container %@", v2, v3, v4, v5, v6);
}

void sub_1003ADA88()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Attempting to answer a Walkie-Talkie call whose endpoint is not Apple Watch; aborting answer request %@ for call %@");
}

void sub_1003ADAF4(unsigned __int8 *a1, NSObject *a2)
{
  int v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Not updating isSendingVideo: %d since not showing in-call ui", (uint8_t *)v3, 8u);
}

void sub_1003ADB70()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Retrieving user activity with identifier %@ failed with error %@");
}

void sub_1003ADBDC()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to pull call for user activity %@", v2, v3, v4, v5, v6);
}

void sub_1003ADC44()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Messaging connection failed for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.", v2, v3, v4, v5, v6);
}

void sub_1003ADCAC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Messaging connection could not establish link for calls %@. Disconnecting calls that are hosted here and an endpoint elsewhere or that are an endpoint here and hosted elsewhere.", v2, v3, v4, v5, v6);
}

void sub_1003ADD14(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not obtain bundle identifier from user info dictionary %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003ADD8C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not obtain application state from user info dictionary %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003ADE04(uint8_t *a1, uint64_t a2, void *a3, NSObject *a4)
{
  uint64_t v7 = (objc_class *)objc_opt_class();
  uint64_t v8 = NSStringFromClass(v7);
  *(_DWORD *)a1 = 138412290;
  *a3 = v8;
  _os_log_error_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_ERROR, "handleApplicationUninstalledNotification: bundleIdentifier type: %@", a1, 0xCu);
}

void sub_1003ADE80(id *a1)
{
  uint64_t v1 = [*a1 userInfo];
  int v2 = [v1 objectForKeyedSubscript:@"bundleIDs"];
  uint64_t v3 = (objc_class *)objc_opt_class();
  uint64_t v4 = NSStringFromClass(v3);
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v5, v6, "handleApplicationUninstalledNotification: the type is: %@, not NSArray type", v7, v8, v9, v10, v11);
}

void sub_1003ADF3C()
{
  sub_10004E664();
  sub_10004E68C((void *)&_mh_execute_header, v0, v1, "We received a channel push for %@, but it's supposed to be on the ignored list. Drop this push on the floor so we don't confuse the app.", v2, v3, v4, v5, v6);
}

void sub_1003ADFA4()
{
  sub_10004E664();
  sub_10004E68C((void *)&_mh_execute_header, v0, v1, "LSApplicationRecord had error %@ when looking up bundle identifiers, can't complete nightly VOIP topic reconciliation", v2, v3, v4, v5, v6);
}

void sub_1003AE00C(uint64_t a1, void *a2, NSObject *a3)
{
  int v5 = 138412802;
  uint64_t v6 = a1;
  __int16 v7 = 1024;
  unsigned int v8 = [a2 hasVoIPBackgroundMode];
  __int16 v9 = 1024;
  unsigned int v10 = [a2 hasVoIPNetworkExtensionEntitlement];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Aborting NetworkExtension VoIP registration; application with bundle identifier %@ does not have the required entitl"
    "ement and background mode (VoIP Background Mode: %d, VoIP Network Extension Entitlement: %d)",
    (uint8_t *)&v5,
    0x18u);
}

void sub_1003AE0CC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting channel push registration registration because app %@ does not meet static requirements (sdk version, backgroundMode, or capability)", v2, v3, v4, v5, v6);
}

void sub_1003AE134()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Aborting PushKit registration for application with bundle identifier %@ because it lacks the voip background mode", v2, v3, v4, v5, v6);
}

void sub_1003AE19C()
{
  sub_10004E664();
  sub_10004E68C((void *)&_mh_execute_header, v0, v1, "We received a network extension PushToTalk message for %@, but it's supposed to be on the ignored list. Drop this push on the floor so we don't confuse the app.", v2, v3, v4, v5, v6);
}

void sub_1003AE204(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AE23C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AE274(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AE2AC()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Attempt to open application with bundle identifier %@ failed with error %@");
}

void sub_1003AE318()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Unable to terminate %@ with error %@");
}

void sub_1003AE384(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AE3F4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100018748((void *)&_mh_execute_header, a2, a3, "Killing PTT app %@ because it didn't return a valid PTPushResult in time.", a5, a6, a7, a8, 2u);
}

void sub_1003AE464(uint64_t a1, void *a2, NSObject *a3)
{
  int v4 = 138412546;
  uint64_t v5 = a1;
  __int16 v6 = 1024;
  unsigned int v7 = [a2 hasVoIPBackgroundMode];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Aborting request application with bundle identifier %@ does not have the required background mode (VoIP Background Mode: %d)", (uint8_t *)&v4, 0x12u);
}

void sub_1003AE504(void *a1)
{
  os_log_t v1 = [a1 bundleIdentifier];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Channel: can't find an application for this bundle identifier %@", v4, v5, v6, v7, v8);
}

void sub_1003AE588(void *a1)
{
  os_log_t v1 = [a1 bundleIdentifier];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Channel: could not find valid aps environment for activating channel %@", v4, v5, v6, v7, v8);
}

void sub_1003AE60C(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 bundleIdentifier];
  sub_10004E664();
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Channel: falling back to LS for determing push environment %@", v4, 0xCu);
}

void sub_1003AE6A0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "cannot checkIn with bundle identifier %@ because it lacks the required background mode, entitlement, or SDK version", v2, v3, v4, v5, v6);
}

void sub_1003AE708(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Dropping notice %@ because of invalid bundleID", (uint8_t *)&v2, 0xCu);
}

void sub_1003AE780(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = 138412802;
  uint64_t v6 = v3;
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  __int16 v9 = 2112;
  uint64_t v10 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempt to open application with bundle identifier %@ url: %@ failed with error %@", (uint8_t *)&v5, 0x20u);
}

void sub_1003AE814(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to load activated conversation links with error %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AE88C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Not creating activitySession -- bundleID not available", v1, 2u);
}

void sub_1003AE8D0()
{
  sub_10004E664();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Could not find default app call provider for bundleIdentifier %@ providers: %@", v2, 0x16u);
}

void sub_1003AE954()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "%@", v2, v3, v4, v5, v6);
}

void sub_1003AE9BC(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = 138412802;
  uint64_t v6 = v3;
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  __int16 v9 = 2112;
  uint64_t v10 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to open user activity %@ for bundle identifier %@: %@", (uint8_t *)&v5, 0x20u);
}

void sub_1003AEA50()
{
  sub_10004E664();
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Could not get LSApplicationRecord for app %{public}@ to determine intent support. Using %{public}@.", v2, 0x16u);
}

void sub_1003AEADC(id *a1, NSObject *a2)
{
  __int16 v3 = [*a1 protoUpgradeSessionUUID];
  sub_10004E664();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while creating UUID from %@", v4, 0xCu);
}

void sub_1003AEB74()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error sending message: %@", v2, v3, v4, v5, v6);
}

void sub_1003AEBDC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Unable to report outgoing call connected; Leaving conversation since could not find call UUID for conversation: %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AEC44()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Unable to report outgoing call started connecting; could not find call UUID for conversation: %@",
    v2,
    v3,
    v4,
    v5,
    v6);
}

void sub_1003AECAC()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Connection started for a conversation we are not tracking a call for", v2, v3, v4, v5, v6);
}

void sub_1003AECE0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "No conversation with UUID: %@", v2, v3, v4, v5, v6);
}

void sub_1003AED48()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Joining a FaceTime link while in lockdown mode is disabled, failing join call action", v2, v3, v4, v5, v6);
}

void sub_1003AED7C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AEDEC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AEE5C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003AEECC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "LMI: Couldn't find activated link for join call action %@", v2, v3, v4, v5, v6);
}

void sub_1003AEF34()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Couldn't find link", v2, v3, v4, v5, v6);
}

void sub_1003AEF68(void *a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = [a1 link];
  int v7 = 138412802;
  uint64_t v8 = a1;
  __int16 v9 = 2112;
  uint64_t v10 = a2;
  __int16 v11 = 2112;
  __int16 v12 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "There's already an ongoing conversation %@ with the same groupUUID as the link %@, but the conversation does not have the same link %@", (uint8_t *)&v7, 0x20u);
}

void sub_1003AF024()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to validate link for join call action %@ with error %@");
}

void sub_1003AF08C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to renew link with error %@", v2, v3, v4, v5, v6);
}

void sub_1003AF0F4()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failing action: %@ since conversation: %@ did not meet conditions");
}

void sub_1003AF15C()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "conversation is not eligible for CXSetSendingVideoCallAction since its relaying else where", v2, v3, v4, v5, v6);
}

void sub_1003AF190()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "conversation is not eligible for CXSetSendingVideoCallAction since it does not support video", v2, v3, v4, v5, v6);
}

void sub_1003AF1C4()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Device currently doesn't have ScreenSharing available.", v2, v3, v4, v5, v6);
}

void sub_1003AF1F8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "conversation %@ is not eligible for CXSetSharingScreenCallAction since its relaying else where", v2, v3, v4, v5, v6);
}

void sub_1003AF260()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "Device does not support screensharing", v2, v3, v4, v5, v6);
}

void sub_1003AF294()
{
  sub_10004E670();
  sub_10004E648((void *)&_mh_execute_header, v0, v1, "All active participants do not have minimum supported screen sharing version", v2, v3, v4, v5, v6);
}

void sub_1003AF2C8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "conversation %@ is not eligible for CXEnableVideoCallAction since its not joined yet", v2, v3, v4, v5, v6);
}

void sub_1003AF330(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to report outgoing call connected; Leaving conversation since could not find call UUID for conversation: %@",
    (uint8_t *)&v2,
    0xCu);
}

void sub_1003AF3A8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to report outgoing call started connecting; could not find call UUID for conversation: %@",
    (uint8_t *)&v2,
    0xCu);
}

void sub_1003AF420()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Transport did not become available for answered call %@", v2, v3, v4, v5, v6);
}

void sub_1003AF488()
{
  sub_10016962C(__stack_chk_guard);
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = v0;
  sub_1001936C0();
  sub_10004E6A8((void *)&_mh_execute_header, v1, v2, "Failed to start conference connection for answered call %@: %@. Disconnecting call with relay failed", (void)v3, DWORD2(v3));
}

void sub_1003AF4F8(uint64_t a1)
{
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_1001936C0();
  sub_10004E6A8((void *)&_mh_execute_header, v1, v2, "Conference connection failed for call %@: %@. Disconnecting call with relay failed", (void)v3, DWORD2(v3));
}

void sub_1003AF568(id *a1, NSObject *a2)
{
  long long v3 = [*a1 uniqueProxyIdentifier];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Nil call returned when dialing call. Notifying client of failed dial call for %@", (uint8_t *)&v4, 0xCu);
}

void sub_1003AF604(uint64_t a1)
{
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = *(void *)(a1 + 56);
  sub_1001936C0();
  sub_10004E6A8((void *)&_mh_execute_header, v1, v2, "Failed to start conference connection for dialed call uniqueProxyIdentifier %@: %@.", (void)v3, DWORD2(v3));
}

void sub_1003AF678()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Nil call returned when dialing call. Notifying client of failed dial call for %@ ", v2, v3, v4, v5, v6);
}

void sub_1003AF6E4()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Nil call returned when dialing call. Notifying client of failed join conversation request %@", v2, v3, v4, v5, v6);
}

void sub_1003AF750(uint64_t a1)
{
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = *(void *)(a1 + 40);
  sub_1001936C0();
  sub_10004E6A8((void *)&_mh_execute_header, v1, v2, "Failed to start conference connection for joinConversationRequest: %@ error: %@", (void)v3, DWORD2(v3));
}

void sub_1003AF7C4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "...and no hosted call was found with TUHardPauseDigitsStateDigitsAvailable, so not sending hard pause digits", v1, 2u);
}

void sub_1003AF808()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to prepare conference for pushing hosted call %@", v2, v3, v4, v5, v6);
}

void sub_1003AF870()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Socket did not become available when pushing call. Resetting endpointOnCurrent device to YES for %@", v2, v3, v4, v5, v6);
}

void sub_1003AF8D8()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Conference did not start successfully when pushing call. Resetting endpointOnCurrent device to YES for %@", v2, v3, v4, v5, v6);
}

void sub_1003AF940(uint64_t a1)
{
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_1001936C0();
  sub_10004E6A8((void *)&_mh_execute_header, v1, v2, "No active conversation with UUID: %@, no members found for add member message %@", (void)v3, DWORD2(v3));
}

void sub_1003AF9B0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@", (uint8_t *)&v2, 0xCu);
}

void sub_1003AFA28(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3 = 138412546;
  CFStringRef v4 = @"Ringtones";
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  sub_10019698C((void *)&_mh_execute_header, a2, a3, "Error creating '%@' sandbox extension directory: %@", (uint8_t *)&v3);
}

void sub_1003AFAAC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error while saving to keychain item: %@", v2, v3, v4, v5, v6);
}

void sub_1003AFB14()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Not opening user activity since we do not have an application record for bundle identifier %@", v2, v3, v4, v5, v6);
}

void sub_1003AFB7C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error while querying file attributes: %@", v2, v3, v4, v5, v6);
}

void sub_1003AFBE4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  sub_10019698C((void *)&_mh_execute_header, a3, (uint64_t)a3, "Error removing links for filenames not in array (%@): %@", (uint8_t *)&v3);
}

void sub_1003AFC64()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error while serializing Array to data: %@", v2, v3, v4, v5, v6);
}

void sub_1003AFCCC(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = objc_opt_class();
  id v4 = sub_100196968(v3);
  sub_10019698C((void *)&_mh_execute_header, a2, v5, "Registered providers object was of unexpected class %@: %@", v6);
}

void sub_1003AFD58()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Could not find value from keychain: %@", v2, v3, v4, v5, v6);
}

void sub_1003AFDC0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Received nil AVCSession creation block", v1, 2u);
}

void sub_1003AFE04(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "abTestConfiguration is nil", v1, 2u);
}

void sub_1003AFE48()
{
  sub_10013776C();
  uint64_t v1 = [v0 remoteParticipantsByIdentifier];
  sub_10019FB70();
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Unknown participant identifier %llu current participants: %@", v4, v5, v6, v7, v8);
}

void sub_1003AFED4()
{
  sub_10013776C();
  uint64_t v1 = [v0 remoteParticipantsByIdentifier];
  sub_10019FB70();
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Unknown participant identifier %lu current participants: %@", v4, v5, v6, v7, v8);
}

void sub_1003AFF60(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "AVCSession %@ server did disconnect", (uint8_t *)&v2, 0xCu);
}

void sub_1003AFFD8()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to add participant %@: %@");
}

void sub_1003B0040(uint64_t a1, void *a2)
{
  int v2 = [a2 remoteParticipantsByIdentifier];
  sub_10019FB70();
  sub_10002B8D0((void *)&_mh_execute_header, v3, v4, "removeParticipant: %@ Active remote participants: %@", v5, v6, v7, v8, v9);
}

void sub_1003B00D4()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to remove participant %@: %@");
}

void sub_1003B013C()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to update session with configuration %@: %@");
}

void sub_1003B01A4()
{
  sub_10019FB54();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Failed to set local audio enabled (%d): %@");
}

void sub_1003B020C()
{
  sub_10019FB54();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Failed to set local video enabled (%d): %@");
}

void sub_1003B0274()
{
  sub_10019FB54();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Failed to set local screenEnabled (%d): %@");
}

void sub_1003B02DC()
{
  sub_10019FB54();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Failed to set local audio paused (%d): %@");
}

void sub_1003B0344()
{
  sub_10019FB54();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Failed to set local video paused (%d): %@");
}

void sub_1003B03AC()
{
  sub_10019FB54();
  sub_1000A30C4((void *)&_mh_execute_header, v0, v1, "Failed to set oneToOneEnabled (%d): %@");
}

void sub_1003B0414(uint64_t a1, unsigned __int8 *a2, os_log_t log)
{
  int v3 = *a2;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = 138412802;
  uint64_t v7 = v4;
  __int16 v8 = 1024;
  int v9 = v3;
  __int16 v10 = 2112;
  uint64_t v11 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "screenCapture: %@ didStart: %d, captureWithError: %@", (uint8_t *)&v6, 0x1Cu);
}

void sub_1003B04B0(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Received error on screen capture update: %@", (uint8_t *)&v3, 0xCu);
}

void sub_1003B052C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Asked to join call %@ but the session was unavailable", v2, v3, v4, v5, v6);
}

void sub_1003B0594()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Asked to join call %@ but the host was unavailable", v2, v3, v4, v5, v6);
}

void sub_1003B05FC()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Asked to dial call %@ but the session was unavailable", v2, v3, v4, v5, v6);
}

void sub_1003B0664()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Asked to dial call %@ but the host was unavailable", v2, v3, v4, v5, v6);
}

void sub_1003B06CC()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Transport did not become available when answering call %@", v2, v3, v4, v5, v6);
}

void sub_1003B0734()
{
  sub_10016962C(__stack_chk_guard);
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Transport did not become available when pulling call. Resetting endpointOnCurrent device to NO for %@", v2, v3, v4, v5, v6);
}

void sub_1003B079C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Disconnecting call with conference failed disconnected reason: %@", v2, v3, v4, v5, v6);
}

void sub_1003B0804()
{
  sub_10004E664();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Conference connection failed for call %@: %@. Disconnecting call with relay failed", v2, 0x16u);
}

void sub_1003B0888(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while querying file attributes: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003B0900(void *a1, void *a2, NSObject *a3)
{
  uint64_t v6 = *a1;
  id v7 = [a2 validationStatusForAlias:*a1];
  id v8 = [a2 validationErrorReasonForAlias:*a1];
  int v9 = [a2 vettedAliases];
  int v10 = 138413314;
  uint64_t v11 = v6;
  __int16 v12 = 2112;
  __int16 v13 = a2;
  __int16 v14 = 2048;
  id v15 = v7;
  __int16 v16 = 2048;
  id v17 = v8;
  __int16 v18 = 2112;
  BOOL v19 = v9;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to add alias %@ to account %@. Validation status: %ld, validation error reason: %ld, vetted aliases: %@", (uint8_t *)&v10, 0x34u);
}

void sub_1003B0A00(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while saving _callerID %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003B0A78(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 client];
  int v6 = 138412546;
  id v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to get active contexts from client %@: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1003B0B28()
{
  sub_1001B8AB0();
  sub_1001B8AC8((void *)&_mh_execute_header, v0, v1, "Error getting emergency callback mode (domain=%d, code=%d)", v2, v3);
}

void sub_1003B0B90()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to get Thumper device info: %@", v2, v3, v4, v5, v6);
}

void sub_1003B0BF8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to get call capabilities: %@", v2, v3, v4, v5, v6);
}

void sub_1003B0C60()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to get capability info for subscription %@: %@");
}

void sub_1003B0CC8()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to get system capabilities for subscription %@: %@");
}

void sub_1003B0D30()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to add secondary Thumper device with IDS device identifier %@: %@");
}

void sub_1003B0D9C()
{
  sub_1000AA900();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to remove secondary Thumper device with IDS device identifier %@: %@");
}

void sub_1003B0E08()
{
  sub_1001B8AB0();
  sub_1001B8AC8((void *)&_mh_execute_header, v0, v1, "Error getting system capabilities (domain=%d, code=%d)", v2, v3);
}

void sub_1003B0E70()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Could not find a subscription matching the specified UUID %@", v2, v3, v4, v5, v6);
}

void sub_1003B0ED8()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to get mobile country code for subscription %@: %@");
}

void sub_1003B0F40()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to get ISO countrycode for subscription %@: %@");
}

void sub_1003B0FA8()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to get mobile network code for subscription %@: %@");
}

void sub_1003B1010()
{
  sub_1001B8AB0();
  sub_1001B8AC8((void *)&_mh_execute_header, v0, v1, "Error getting ISO country code (domain=%d, code=%d)", v2, v3);
}

void sub_1003B1078(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "JoinCallAction is not valid because there is not exactly one remote member %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003B10F0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error capturing snapshot: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1003B1168()
{
  sub_100018764();
  uint64_t v3 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Not starting a new session for identifier %@ because an active session for the identifier already exists: %@", v2, 0x16u);
}

void sub_1003B11E4(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 firstObject];
  sub_100018764();
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Not starting a new session for identifier %@ because an active session for the identifier already exists: %@", v6, 0x16u);
}

void sub_1003B1288()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "error: %@", v2, v3, v4, v5, v6);
}

void sub_1003B12F0()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to start AVCMomentsRequest: %@, error: %@");
}

void sub_1003B1358()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Failed to end request %@: %@");
}

void sub_1003B13C0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to start processing request: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1428(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003B1460(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003B1498(void *a1)
{
  [a1 streamToken];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v1, v2, "Failed to find session for moments stream token: %ldl", v3, v4, v5, v6, v7);
}

void sub_1003B1510()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Did not receive movie URL for request: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1578(void *a1)
{
  uint64_t v1 = [a1 transactionID];
  sub_10004E664();
  sub_100060E90((void *)&_mh_execute_header, v2, v3, "Received an invalid request transaction ID: %@", v4, v5, v6, v7, v8);
}

void sub_1003B15FC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received an error staging the movie file: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1664()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received an error creating the temporary directory: %@", v2, v3, v4, v5, v6);
}

void sub_1003B16CC(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v4 = [a2 remoteIDSDestinations];
  sub_10019FB70();
  sub_10019698C((void *)&_mh_execute_header, a3, v5, "failed to find remoteIDSDestination from request: %@ in session remoteIDSDestinations: %@", v6);
}

void sub_1003B1768()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received an error staging the still photo: %@", v2, v3, v4, v5, v6);
}

void sub_1003B17D0()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Media files for Live Photo do not have the correct path extensions. stillImageURL: %@ movieURL: %@");
}

void sub_1003B1838()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Did not receive both parts of Live Photo for request: %@", v2, v3, v4, v5, v6);
}

void sub_1003B18A0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "moment server disconnected: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1908(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003B1940()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received moments resource with missing transaction ID in metadata: %@", v2, v3, v4, v5, v6);
}

void sub_1003B19AC()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Received non-zipped resource at %@", v2, v3, v4, v5, v6);
}

void sub_1003B1A18(uint64_t *a1, void *a2, NSObject *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = [a2 remoteIDSDestinations];
  int v7 = 138412546;
  uint64_t v8 = v4;
  __int16 v9 = 2112;
  int v10 = v5;
  sub_10019698C((void *)&_mh_execute_header, a3, v6, "Received moments resource from IDS destination %@ but expected %@", (uint8_t *)&v7);
}

void sub_1003B1AC4(uint64_t a1, id *a2, NSObject *a3)
{
  uint64_t v4 = [*a2 sessionsByToken];
  sub_10019FB70();
  sub_10019698C((void *)&_mh_execute_header, a3, v5, "Received moments resource with unknown transaction ID %@. All sessions: %@", v6);
}

void sub_1003B1B60()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Failed to unzip file at URL %@", v2, v3, v4, v5, v6);
}

void sub_1003B1BCC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "file url: %@ was not sent successfully", v2, v3, v4, v5, v6);
}

void sub_1003B1C34()
{
  sub_1000AA8E8();
  sub_10004E6A8((void *)&_mh_execute_header, v0, v1, "Could not retrieve contents of dictionary at URL %@: %@");
}

void sub_1003B1C9C()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Could not determine both photo URL and video URL from contents of directory: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1D04()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Resources directory URL %@ does not exist", v2, v3, v4, v5, v6);
}

void sub_1003B1D6C()
{
  sub_10009A6B0();
  __int16 v4 = 2112;
  uint64_t v5 = v0;
  sub_10019698C((void *)&_mh_execute_header, v1, v2, "Error saving resources with photo url: %@ video url: %@", v3);
}

void sub_1003B1DE8()
{
  sub_10009A6B0();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Error saving resources with video url: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1E54(void *a1, int a2, NSObject *a3)
{
  v4[0] = 67109376;
  v4[1] = a2;
  __int16 v5 = 2048;
  id v6 = [a1 callID];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to initialize a new call with device role %d. Got callID=%ld", (uint8_t *)v4, 0x12u);
}

void sub_1003B1EF0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "AVConference server died", v1, 2u);
}

void sub_1003B1F34()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Start call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B1F9C()
{
  sub_10004E664();
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Join call action failed: %@, faceTimeIDStatus: %d", v2, 0x12u);
}

void sub_1003B2020()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Answer call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B2088()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "End call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B20F0()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Set held call action failed and reverting state is not allowed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B2158(uint64_t a1, void *a2)
{
  uint64_t v8 = [a2 calls];
  sub_10002B8D0((void *)&_mh_execute_header, v2, v3, "Could not find call to group with for set group call action: %@. All call: %@", v4, v5, v6, v7, 2u);
}

void sub_1003B21FC()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Play DTMF call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B2264()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Set sending video call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B22CC()
{
  int v0 = +[TUAudioSystemController sharedAudioSystemController];
  [v0 isUplinkMuted];
  sub_10002B8D0((void *)&_mh_execute_header, v1, v2, "Set muted call action failed: %@ %@", v3, v4, v5, v6, 2u);
}

void sub_1003B2390()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Set tty call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B23F8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Set screening call action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B2460()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Allow audio injection action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B24C8()
{
  sub_10004E664();
  sub_100018748((void *)&_mh_execute_header, v0, v1, "Action failed: %@", v2, v3, v4, v5, v6);
}

void sub_1003B2530(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1003B25A0()
{
  sub_10004E664();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Error while determining process action for callSource: %@, action: %@", v2, 0x16u);
}

void sub_1003B2624(id *a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = [*a1 machServiceName];
  uint64_t v7 = [*a1 requiredConnectionCapability];
  int v8 = 138412802;
  __int16 v9 = v6;
  __int16 v10 = 2112;
  uint64_t v11 = v7;
  __int16 v12 = 2112;
  uint64_t v13 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Rejecting client for %@ because it lacks the %@ capability: %@", (uint8_t *)&v8, 0x20u);
}

void sub_1003B26F8()
{
}

void sub_1003B2724(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Encountered error %d when setting up btSession", (uint8_t *)v2, 8u);
}

void sub_1003B279C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)__int16 v3 = 138412546;
  *(void *)&v3[4] = *(void *)(a1 + 40);
  *(_WORD *)&uint8_t v3[12] = 2112;
  *(void *)&v3[14] = a2;
  sub_10004E6A8((void *)&_mh_execute_header, a2, a3, "Could not report new multiway call from %@: %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_1003B2818(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)__int16 v3 = 138412546;
  *(void *)&v3[4] = a1;
  *(_WORD *)&uint8_t v3[12] = 2112;
  *(void *)&v3[14] = a2;
  sub_10004E6A8((void *)&_mh_execute_header, a2, a3, "Reporting call failure for conversation with conversationUUID %@ and callUUID %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t POSIXError._nsError.getter()
{
  return POSIXError._nsError.getter();
}

uint64_t type metadata accessor for POSIXError()
{
  return type metadata accessor for POSIXError();
}

uint64_t static JSONEncoder.OutputFormatting.sortedKeys.getter()
{
  return static JSONEncoder.OutputFormatting.sortedKeys.getter();
}

uint64_t type metadata accessor for JSONEncoder.OutputFormatting()
{
  return type metadata accessor for JSONEncoder.OutputFormatting();
}

uint64_t dispatch thunk of JSONEncoder.outputFormatting.setter()
{
  return dispatch thunk of JSONEncoder.outputFormatting.setter();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.controlCharacters.getter()
{
  return static CharacterSet.controlCharacters.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)Notification._bridgeToObjectiveC()();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.name.getter()
{
  return Notification.name.getter();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.path.setter()
{
  return URLComponents.path.setter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t dispatch thunk of NSKeyValueObservation.invalidate()()
{
  return dispatch thunk of NSKeyValueObservation.invalidate()();
}

uint64_t type metadata accessor for NSKeyValueObservation()
{
  return type metadata accessor for NSKeyValueObservation();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t NSKeyValueObservedChange.newValue.getter()
{
  return NSKeyValueObservedChange.newValue.getter();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t URL.relativePath.getter()
{
  return URL.relativePath.getter();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.init(fileURLWithPath:isDirectory:)()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

uint64_t static URL.temporaryDirectory.getter()
{
  return static URL.temporaryDirectory.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:isDirectory:)()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.deletingLastPathComponent()()
{
  return URL.deletingLastPathComponent()();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::String __swiftcall URL.path(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.path(percentEncoded:)(percentEncoded);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t URL.appending<A>(component:directoryHint:)()
{
  return URL.appending<A>(component:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.InlineData.init(_:)()
{
  return Data.InlineData.init(_:)();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
}

uint64_t Data.LargeSlice.init(_:)()
{
  return Data.LargeSlice.init(_:)();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

uint64_t Data.InlineSlice.init(_:)()
{
  return Data.InlineSlice.init(_:)();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t Data._Representation.init(count:)()
{
  return Data._Representation.init(count:)();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t Data._Representation.init(_:)()
{
  return Data._Representation.init(_:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.init<A>(bytes:)()
{
  return Data.init<A>(bytes:)();
}

uint64_t Data.count.getter()
{
  return Data.count.getter();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Data.copyBytes(to:count:)()
{
  return Data.copyBytes(to:count:)();
}

uint64_t Data.hashValue.getter()
{
  return Data.hashValue.getter();
}

uint64_t Date.init(timeIntervalSinceReferenceDate:)()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date.+ infix(_:_:)()
{
  return static Date.+ infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.init(timeIntervalSince1970:)()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.compare(_:)()
{
  return Date.compare(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Locale.init(identifier:)()
{
  return Locale.init(identifier:)();
}

uint64_t Locale.identifier.getter()
{
  return Locale.identifier.getter();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.date(byAdding:value:to:wrappingComponents:)()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t static AVPartialAsyncProperty<A>.timeRange.getter()
{
  return static AVPartialAsyncProperty<A>.timeRange.getter();
}

uint64_t dispatch thunk of ActivitySession.activity.getter()
{
  return dispatch thunk of ActivitySession.activity.getter();
}

uint64_t type metadata accessor for ActivitySession()
{
  return type metadata accessor for ActivitySession();
}

uint64_t CPCarPlayObserver.init(queue:)()
{
  return CPCarPlayObserver.init(queue:)();
}

uint64_t dispatch thunk of CPCarPlayObserver.delegate.setter()
{
  return dispatch thunk of CPCarPlayObserver.delegate.setter();
}

uint64_t type metadata accessor for CPCarPlayObserver()
{
  return type metadata accessor for CPCarPlayObserver();
}

uint64_t type metadata accessor for SimulatedDataCryptor()
{
  return type metadata accessor for SimulatedDataCryptor();
}

uint64_t dispatch thunk of ActivitySessionManager.requestTopicTermination(withTopicName:)()
{
  return dispatch thunk of ActivitySessionManager.requestTopicTermination(withTopicName:)();
}

uint64_t type metadata accessor for ActivitySessionManager()
{
  return type metadata accessor for ActivitySessionManager();
}

Swift::Void __swiftcall CPCarPlayObserverDelegate.carPlayStoppedConnectionAttempt()()
{
}

uint64_t Lock.withLock<A>(_:)()
{
  return Lock.withLock<A>(_:)();
}

uint64_t Lock.init()()
{
  return Lock.init()();
}

uint64_t type metadata accessor for Lock()
{
  return type metadata accessor for Lock();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t _CFObject.hash(into:)()
{
  return _CFObject.hash(into:)();
}

uint64_t _CFObject.hashValue.getter()
{
  return _CFObject.hashValue.getter();
}

uint64_t dispatch thunk of LiveCallerIDLookupManager.installedExtensions()()
{
  return dispatch thunk of LiveCallerIDLookupManager.installedExtensions()();
}

uint64_t static LiveCallerIDLookupManager.shared.getter()
{
  return static LiveCallerIDLookupManager.shared.getter();
}

uint64_t type metadata accessor for LiveCallerIDLookupManager()
{
  return type metadata accessor for LiveCallerIDLookupManager();
}

uint64_t dispatch thunk of BaseRequest.outputPath.setter()
{
  return dispatch thunk of BaseRequest.outputPath.setter();
}

uint64_t dispatch thunk of DaemonSession.keepActive.setter()
{
  return dispatch thunk of DaemonSession.keepActive.setter();
}

uint64_t dispatch thunk of DaemonSession.synthesize(request:didFinish:)()
{
  return dispatch thunk of DaemonSession.synthesize(request:didFinish:)();
}

uint64_t dispatch thunk of DaemonSession.getSynthesisVoice(matching:reply:)()
{
  return dispatch thunk of DaemonSession.getSynthesisVoice(matching:reply:)();
}

uint64_t dispatch thunk of DaemonSession.subscribe(voices:reply:)()
{
  return dispatch thunk of DaemonSession.subscribe(voices:reply:)();
}

uint64_t type metadata accessor for DaemonSession()
{
  return type metadata accessor for DaemonSession();
}

uint64_t dispatch thunk of SynthesisVoice.name.getter()
{
  return dispatch thunk of SynthesisVoice.name.getter();
}

uint64_t SynthesisVoice.init(language:name:)()
{
  return SynthesisVoice.init(language:name:)();
}

uint64_t dispatch thunk of SynthesisVoice.language.getter()
{
  return dispatch thunk of SynthesisVoice.language.getter();
}

uint64_t SynthesisVoice.Footprint.rawValue.getter()
{
  return SynthesisVoice.Footprint.rawValue.getter();
}

uint64_t dispatch thunk of SynthesisVoice.footprint.getter()
{
  return dispatch thunk of SynthesisVoice.footprint.getter();
}

uint64_t type metadata accessor for SynthesisVoice()
{
  return type metadata accessor for SynthesisVoice();
}

uint64_t SynthesisRequest.init(text:voice:)()
{
  return SynthesisRequest.init(text:voice:)();
}

uint64_t type metadata accessor for SynthesisRequest()
{
  return type metadata accessor for SynthesisRequest();
}

uint64_t SynthesizingRequestProtocol.privacySensitive.setter()
{
  return SynthesizingRequestProtocol.privacySensitive.setter();
}

uint64_t type metadata accessor for TipEventProxy()
{
  return type metadata accessor for TipEventProxy();
}

uint64_t GroupSessionObserver.init(for:queue:)()
{
  return GroupSessionObserver.init(for:queue:)();
}

uint64_t static GroupActivityMetadata.ActivityType.screenSharing.getter()
{
  return static GroupActivityMetadata.ActivityType.screenSharing.getter();
}

uint64_t type metadata accessor for GroupActivityMetadata.ActivityType()
{
  return type metadata accessor for GroupActivityMetadata.ActivityType();
}

uint64_t GroupActivityMetadata.localizedTitle.setter()
{
  return GroupActivityMetadata.localizedTitle.setter();
}

uint64_t GroupActivityMetadata.localizedSubtitle.setter()
{
  return GroupActivityMetadata.localizedSubtitle.setter();
}

uint64_t GroupActivityMetadata.sceneAssociationBehavior.setter()
{
  return GroupActivityMetadata.sceneAssociationBehavior.setter();
}

uint64_t GroupActivityMetadata.supportsContinuationOnTV.setter()
{
  return GroupActivityMetadata.supportsContinuationOnTV.setter();
}

uint64_t GroupActivityMetadata.type.setter()
{
  return GroupActivityMetadata.type.setter();
}

uint64_t GroupActivityMetadata.init()()
{
  return GroupActivityMetadata.init()();
}

uint64_t GroupSessionMessenger.MessageContext.source.getter()
{
  return GroupSessionMessenger.MessageContext.source.getter();
}

uint64_t type metadata accessor for GroupSessionMessenger.MessageContext()
{
  return type metadata accessor for GroupSessionMessenger.MessageContext();
}

uint64_t GroupSessionMessenger.send<A>(_:to:completion:)()
{
  return GroupSessionMessenger.send<A>(_:to:completion:)();
}

uint64_t GroupSessionMessenger.receive<A>(_:)()
{
  return GroupSessionMessenger.receive<A>(_:)();
}

uint64_t GroupSessionMessenger.init<A>(session:)()
{
  return GroupSessionMessenger.init<A>(session:)();
}

uint64_t type metadata accessor for GroupSessionMessenger()
{
  return type metadata accessor for GroupSessionMessenger();
}

uint64_t GroupSession.isLocallyInitiated.getter()
{
  return GroupSession.isLocallyInitiated.getter();
}

uint64_t GroupSession.id.getter()
{
  return GroupSession.id.getter();
}

Swift::Void __swiftcall GroupSession.end()()
{
}

Swift::Void __swiftcall GroupSession.join()()
{
}

uint64_t static GroupSession.State.== infix(_:_:)()
{
  return static GroupSession.State.== infix(_:_:)();
}

uint64_t GroupSession.state.getter()
{
  return GroupSession.state.getter();
}

uint64_t GroupSession.$state.getter()
{
  return GroupSession.$state.getter();
}

uint64_t GroupSession.activity.getter()
{
  return GroupSession.activity.getter();
}

uint64_t static GroupActivity._identifiable(by:)()
{
  return static GroupActivity._identifiable(by:)();
}

Swift::Void __swiftcall GroupActivity.activate()()
{
}

uint64_t Participant.id.getter()
{
  return Participant.id.getter();
}

uint64_t type metadata accessor for Participant()
{
  return type metadata accessor for Participant();
}

uint64_t type metadata accessor for Participants()
{
  return type metadata accessor for Participants();
}

uint64_t static SceneAssociationBehavior.none.getter()
{
  return static SceneAssociationBehavior.none.getter();
}

uint64_t type metadata accessor for SceneAssociationBehavior()
{
  return type metadata accessor for SceneAssociationBehavior();
}

uint64_t LanguageManager.init(featureFlags:localeOverride:)()
{
  return LanguageManager.init(featureFlags:localeOverride:)();
}

Swift::String_optional __swiftcall LanguageManager.localizedString(forKey:table:bundle:languageCode:)(Swift::String forKey, Swift::String table, NSBundle bundle, Swift::String_optional languageCode)
{
  uint64_t v4 = LanguageManager.localizedString(forKey:table:bundle:languageCode:)(forKey._countAndFlagsBits, forKey._object, table._countAndFlagsBits, table._object, bundle.super.isa, languageCode.value._countAndFlagsBits, languageCode.value._object);
  result.value._object = v5;
  result.value._uint64_t countAndFlagsBits = v4;
  return result;
}

Swift::String __swiftcall LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(Swift::OpaquePointer_optional supportedLanguages)
{
  uint64_t v1 = LanguageManager.mappedASRLanguageIdentifier(supportedLanguages:)(supportedLanguages.value._rawValue, *(void *)&supportedLanguages.is_nil);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t LanguageManager.locale.getter()
{
  return LanguageManager.locale.getter();
}

uint64_t type metadata accessor for LanguageManager()
{
  return type metadata accessor for LanguageManager();
}

uint64_t RecordingMetadata.init(locale:startTimeStamp:localHandle:remoteHandle:)()
{
  return RecordingMetadata.init(locale:startTimeStamp:localHandle:remoteHandle:)();
}

uint64_t type metadata accessor for RecordingMetadata()
{
  return type metadata accessor for RecordingMetadata();
}

uint64_t Message.__allocating_init(recordUUID:callUUID:conversationID:messageFile:messageThumbnail:messageType:from:provider:isSensitive:duration:recipient:transcript:isRTT:simID:quality:voicemailID:)()
{
  return Message.__allocating_init(recordUUID:callUUID:conversationID:messageFile:messageThumbnail:messageType:from:provider:isSensitive:duration:recipient:transcript:isRTT:simID:quality:voicemailID:)();
}

uint64_t type metadata accessor for Message()
{
  return type metadata accessor for Message();
}

uint64_t type metadata accessor for MessageQuality()
{
  return type metadata accessor for MessageQuality();
}

uint64_t static MessageStoreController.shared.getter()
{
  return static MessageStoreController.shared.getter();
}

uint64_t type metadata accessor for MessageStoreController()
{
  return type metadata accessor for MessageStoreController();
}

uint64_t MessageStoreProvider.identifierString.getter()
{
  return MessageStoreProvider.identifierString.getter();
}

uint64_t Transcript.init(utterances:)()
{
  return Transcript.init(utterances:)();
}

uint64_t type metadata accessor for Transcript()
{
  return type metadata accessor for Transcript();
}

uint64_t dispatch thunk of BadgeManager.startObservingForStoreBadgeCountUpdate()()
{
  return dispatch thunk of BadgeManager.startObservingForStoreBadgeCountUpdate()();
}

uint64_t dispatch thunk of BadgeManager.setBadgeCounts(_:shouldForceUpdate:isAmbiguous:)()
{
  return dispatch thunk of BadgeManager.setBadgeCounts(_:shouldForceUpdate:isAmbiguous:)();
}

uint64_t dispatch thunk of BadgeManager.mergeBadgeCountData(_:)()
{
  return dispatch thunk of BadgeManager.mergeBadgeCountData(_:)();
}

uint64_t BadgeManager.__allocating_init(queue:)()
{
  return BadgeManager.__allocating_init(queue:)();
}

uint64_t type metadata accessor for BadgeManager()
{
  return type metadata accessor for BadgeManager();
}

uint64_t type metadata accessor for CaptionRange()
{
  return type metadata accessor for CaptionRange();
}

uint64_t CaptionRange.init(_:)()
{
  return CaptionRange.init(_:)();
}

uint64_t type metadata accessor for BadgeCountCategory()
{
  return type metadata accessor for BadgeCountCategory();
}

uint64_t Caption.init(confidence:range:)()
{
  return Caption.init(confidence:range:)();
}

uint64_t type metadata accessor for Caption()
{
  return type metadata accessor for Caption();
}

uint64_t Utterance.init(text:captions:utteranceNumber:utteranceStartTimestamp:utteranceDuration:)()
{
  return Utterance.init(text:captions:utteranceNumber:utteranceStartTimestamp:utteranceDuration:)();
}

uint64_t type metadata accessor for Utterance()
{
  return type metadata accessor for Utterance();
}

uint64_t DeviceRestrictionController.init(profileConnection:)()
{
  return DeviceRestrictionController.init(profileConnection:)();
}

Swift::Void __swiftcall DeviceRestrictionController.resetRestrictions()()
{
}

uint64_t type metadata accessor for DeviceRestrictionController()
{
  return type metadata accessor for DeviceRestrictionController();
}

uint64_t dispatch thunk of MessagesBlastDoorInterface.generateImagePreview(for:maxPixelDimension:scale:)()
{
  return dispatch thunk of MessagesBlastDoorInterface.generateImagePreview(for:maxPixelDimension:scale:)();
}

uint64_t MessagesBlastDoorInterface.init(with:)()
{
  return MessagesBlastDoorInterface.init(with:)();
}

uint64_t type metadata accessor for MessagesBlastDoorInterface()
{
  return type metadata accessor for MessagesBlastDoorInterface();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t noErr.getter()
{
  return noErr.getter();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.dropFirst(_:)()
{
  return Publisher.dropFirst(_:)();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t static DispatchTimeoutResult.== infix(_:_:)()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t static DispatchWorkItemFlags.inheritQoS.getter()
{
  return static DispatchWorkItemFlags.inheritQoS.getter();
}

uint64_t static DispatchWorkItemFlags.assignCurrentContext.getter()
{
  return static DispatchWorkItemFlags.assignCurrentContext.getter();
}

uint64_t static DispatchWorkItemFlags.barrier.getter()
{
  return static DispatchWorkItemFlags.barrier.getter();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.background.getter()
{
  return static DispatchQoS.background.getter();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t static DispatchQoS.default.getter()
{
  return static DispatchQoS.default.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.< infix(_:_:)()
{
  return static DispatchTime.< infix(_:_:)();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t DispatchTime.advanced(by:)()
{
  return DispatchTime.advanced(by:)();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t static DispatchWallTime.now()()
{
  return static DispatchWallTime.now()();
}

uint64_t type metadata accessor for DispatchWallTime()
{
  return type metadata accessor for DispatchWallTime();
}

uint64_t DispatchWorkItem.init(qos:flags:block:)()
{
  return DispatchWorkItem.init(qos:flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.wait(timeout:)()
{
  return dispatch thunk of DispatchWorkItem.wait(timeout:)();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t dispatch thunk of DispatchWorkItem.perform()()
{
  return dispatch thunk of DispatchWorkItem.perform()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t _ObjCImageWrapper.cgImage.getter()
{
  return _ObjCImageWrapper.cgImage.getter();
}

uint64_t ATXEncodingConfiguration.init(preTwiddled:lzfseCompression:)()
{
  return ATXEncodingConfiguration.init(preTwiddled:lzfseCompression:)();
}

uint64_t dispatch thunk of _ObjCPreviewImageWrapper.image.getter()
{
  return dispatch thunk of _ObjCPreviewImageWrapper.image.getter();
}

uint64_t type metadata accessor for _ObjCPreviewImageWrapper()
{
  return type metadata accessor for _ObjCPreviewImageWrapper();
}

uint64_t Image.data(using:)()
{
  return Image.data(using:)();
}

uint64_t type metadata accessor for Image.Encoding()
{
  return type metadata accessor for Image.Encoding();
}

uint64_t Image.init(provider:maxPixelDimension:enforcedEncoding:)()
{
  return Image.init(provider:maxPixelDimension:enforcedEncoding:)();
}

uint64_t type metadata accessor for Image()
{
  return type metadata accessor for Image();
}

uint64_t type metadata accessor for CryptoKitError()
{
  return type metadata accessor for CryptoKitError();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t type metadata accessor for SharedSecret()
{
  return type metadata accessor for SharedSecret();
}

uint64_t SymmetricKey.withUnsafeBytes<A>(_:)()
{
  return SymmetricKey.withUnsafeBytes<A>(_:)();
}

uint64_t SymmetricKey.init<A>(data:)()
{
  return SymmetricKey.init<A>(data:)();
}

uint64_t type metadata accessor for SymmetricKey()
{
  return type metadata accessor for SymmetricKey();
}

uint64_t static AES.GCM.open(_:using:)()
{
  return static AES.GCM.open(_:using:)();
}

uint64_t static AES.GCM.seal<A>(_:using:nonce:)()
{
  return static AES.GCM.seal<A>(_:using:nonce:)();
}

uint64_t type metadata accessor for AES.GCM.Nonce()
{
  return type metadata accessor for AES.GCM.Nonce();
}

uint64_t AES.GCM.SealedBox.combined.getter()
{
  return AES.GCM.SealedBox.combined.getter();
}

uint64_t AES.GCM.SealedBox.init(combined:)()
{
  return AES.GCM.SealedBox.init(combined:)();
}

uint64_t type metadata accessor for AES.GCM.SealedBox()
{
  return type metadata accessor for AES.GCM.SealedBox();
}

uint64_t P256.KeyAgreement.PublicKey.compactRepresentation.getter()
{
  return P256.KeyAgreement.PublicKey.compactRepresentation.getter();
}

uint64_t P256.KeyAgreement.PublicKey.init<A>(compactRepresentation:)()
{
  return P256.KeyAgreement.PublicKey.init<A>(compactRepresentation:)();
}

uint64_t type metadata accessor for P256.KeyAgreement.PublicKey()
{
  return type metadata accessor for P256.KeyAgreement.PublicKey();
}

uint64_t P256.KeyAgreement.PrivateKey.sharedSecretFromKeyAgreement(with:)()
{
  return P256.KeyAgreement.PrivateKey.sharedSecretFromKeyAgreement(with:)();
}

uint64_t P256.KeyAgreement.PrivateKey.publicKey.getter()
{
  return P256.KeyAgreement.PrivateKey.publicKey.getter();
}

uint64_t P256.KeyAgreement.PrivateKey.rawRepresentation.getter()
{
  return P256.KeyAgreement.PrivateKey.rawRepresentation.getter();
}

uint64_t P256.KeyAgreement.PrivateKey.init<A>(rawRepresentation:)()
{
  return P256.KeyAgreement.PrivateKey.init<A>(rawRepresentation:)();
}

uint64_t P256.KeyAgreement.PrivateKey.init(compactRepresentable:)()
{
  return P256.KeyAgreement.PrivateKey.init(compactRepresentable:)();
}

uint64_t type metadata accessor for P256.KeyAgreement.PrivateKey()
{
  return type metadata accessor for P256.KeyAgreement.PrivateKey();
}

uint64_t type metadata accessor for SHA256()
{
  return type metadata accessor for SHA256();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.debugDescription.getter()
{
  return Dictionary.debugDescription.getter();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for Dictionary.Values()
{
  return type metadata accessor for Dictionary.Values();
}

uint64_t Dictionary.values.getter()
{
  return Dictionary.values.getter();
}

Swift::Void __swiftcall Dictionary._Variant.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t static String.Encoding.ascii.getter()
{
  return static String.Encoding.ascii.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

uint64_t String.utf8CString.getter()
{
  return String.utf8CString.getter();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

Swift::Void __swiftcall String.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.hashValue.getter()
{
  return String.hashValue.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t Sequence.filter(_:)()
{
  return Sequence.filter(_:)();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

{
  return RawRepresentable<>.encode(to:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.startIndex.getter()
{
  return Array.startIndex.getter();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.endIndex.getter()
{
  return Array.endIndex.getter();
}

Swift::Void __swiftcall Array.formIndex(after:)(Swift::Int *after)
{
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

uint64_t Array.init<A>(_:)()
{
  return Array.init<A>(_:)();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t Float.init(truncating:)()
{
  return Float.init(truncating:)();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)Float._bridgeToObjectiveC()();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t NSEnumerator.makeIterator()()
{
  return NSEnumerator.makeIterator()();
}

uint64_t static TTSAssetType.gryphonVoice.getter()
{
  return static TTSAssetType.gryphonVoice.getter();
}

uint64_t type metadata accessor for APApplication()
{
  return type metadata accessor for APApplication();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(wallDeadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(wallDeadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(wallDeadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(wallDeadline:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.async(execute:)()
{
  return OS_dispatch_queue.async(execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

uint64_t static TTSAssetTechnology.neural.getter()
{
  return static TTSAssetTechnology.neural.getter();
}

uint64_t OS_dispatch_semaphore.wait(timeout:)()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t CXProviderConfiguration.supportedHandleTypes.setter()
{
  return CXProviderConfiguration.supportedHandleTypes.setter();
}

uint64_t IMUserNotificationCenter.postNotification(withIdentifier:bundleIdentifier:displayInformation:showsIcon:completionHandler:)()
{
  return IMUserNotificationCenter.postNotification(withIdentifier:bundleIdentifier:displayInformation:showsIcon:completionHandler:)();
}

uint64_t static IMUserNotificationCenter.shared.getter()
{
  return static IMUserNotificationCenter.shared.getter();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t NSArray.init(arrayLiteral:)()
{
  return NSArray.init(arrayLiteral:)();
}

uint64_t NSArray.makeIterator()()
{
  return NSArray.makeIterator()();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSString.init(stringLiteral:)()
{
  return NSString.init(stringLiteral:)();
}

uint64_t static TTSAsset.bestAsset(ofTypes:matching:)()
{
  return static TTSAsset.bestAsset(ofTypes:matching:)();
}

uint64_t type metadata accessor for APSubject()
{
  return type metadata accessor for APSubject();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t Substring.distance(from:to:)()
{
  return Substring.distance(from:to:)();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

NSNumber __swiftcall UInt._bridgeToObjectiveC()()
{
  return (NSNumber)UInt._bridgeToObjectiveC()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t BinaryInteger.description.getter()
{
  return BinaryInteger.description.getter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return _HashTable.occupiedBucket(after:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts._slowWithCString<A>(_:)()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

Swift::Bool __swiftcall _NativeDictionary.ensureUnique(isUnique:capacity:)(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

uint64_t _NativeDictionary._delete(at:)()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t LazyFilterSequence.filter(_:)()
{
  return LazyFilterSequence.filter(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return static Hasher._hash(seed:bytes:count:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Int __swiftcall Hasher.finalize()()
{
  return Hasher.finalize()();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t Hasher.init()()
{
  return Hasher.init()();
}

NSNumber __swiftcall UInt32._bridgeToObjectiveC()()
{
  return (NSNumber)UInt32._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

uint64_t BKSHIDServicesGetObjectWithinProximity()
{
  return _BKSHIDServicesGetObjectWithinProximity();
}

uint64_t BKSHIDServicesRequestProximityDetectionMode()
{
  return _BKSHIDServicesRequestProximityDetectionMode();
}

uint64_t BSAuditTokenForCurrentProcess()
{
  return _BSAuditTokenForCurrentProcess();
}

uint64_t BTServiceAddCallbacksWithFilter()
{
  return _BTServiceAddCallbacksWithFilter();
}

uint64_t BTServiceRemoveCallbacks()
{
  return _BTServiceRemoveCallbacks();
}

uint64_t BTSessionAttachWithQueue()
{
  return _BTSessionAttachWithQueue();
}

uint64_t BTSessionDetachWithQueue()
{
  return _BTSessionDetachWithQueue();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

uint64_t CFPhoneNumberCreate()
{
  return _CFPhoneNumberCreate();
}

uint64_t CFPhoneNumberCreateString()
{
  return _CFPhoneNumberCreateString();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppIntegerValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t CTTelephonyCenterGetDefault()
{
  return _CTTelephonyCenterGetDefault();
}

uint64_t CUTWeakLinkClass()
{
  return _CUTWeakLinkClass();
}

uint64_t CUTWeakLinkSymbol()
{
  return _CUTWeakLinkSymbol();
}

uint64_t ICFRegisterCallFilterResultBlockWithIdentifier()
{
  return _ICFRegisterCallFilterResultBlockWithIdentifier();
}

uint64_t ICFUnregisterCallFilterResultBlockWithIdentifier()
{
  return _ICFUnregisterCallFilterResultBlockWithIdentifier();
}

uint64_t IDSCopyAddressDestinationForDestination()
{
  return _IDSCopyAddressDestinationForDestination();
}

uint64_t IDSCopyBestGuessIDForID()
{
  return _IDSCopyBestGuessIDForID();
}

uint64_t IDSCopyIDForDevice()
{
  return _IDSCopyIDForDevice();
}

uint64_t IDSCopyIDForPhoneNumberWithOptions()
{
  return _IDSCopyIDForPhoneNumberWithOptions();
}

uint64_t IDSCopyIDForTokenWithID()
{
  return _IDSCopyIDForTokenWithID();
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return _IDSCopyLocalDeviceUniqueID();
}

uint64_t IDSCopyRawAddressForDestination()
{
  return _IDSCopyRawAddressForDestination();
}

uint64_t IDSCopyTokenAndIDForTokenWithID()
{
  return _IDSCopyTokenAndIDForTokenWithID();
}

uint64_t IDSLoggableDescriptionForHandleOnService()
{
  return _IDSLoggableDescriptionForHandleOnService();
}

uint64_t IMCountryCodeForNumber()
{
  return _IMCountryCodeForNumber();
}

uint64_t IMFormattedDisplayStringForNumber()
{
  return _IMFormattedDisplayStringForNumber();
}

uint64_t IMPreferredAccountForService()
{
  return _IMPreferredAccountForService();
}

uint64_t IMRegisterForPreferredAccountChangeNotifications()
{
  return _IMRegisterForPreferredAccountChangeNotifications();
}

uint64_t IMSingleObjectArray()
{
  return _IMSingleObjectArray();
}

uint64_t IMStringIsPhoneNumber()
{
  return _IMStringIsPhoneNumber();
}

uint64_t IMWeakLinkSymbol()
{
  return _IMWeakLinkSymbol();
}

uint64_t INSupportedIntentsByExtensions()
{
  return _INSupportedIntentsByExtensions();
}

uint64_t JWDecodeDictionary()
{
  return _JWDecodeDictionary();
}

uint64_t JWEncodeDictionary()
{
  return _JWEncodeDictionary();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

uint64_t MRMediaRemoteGetLocalOrigin()
{
  return _MRMediaRemoteGetLocalOrigin();
}

uint64_t MRMediaRemoteGetPlaybackStateForPlayer()
{
  return _MRMediaRemoteGetPlaybackStateForPlayer();
}

uint64_t MRNowPlayingClientCreate()
{
  return _MRNowPlayingClientCreate();
}

uint64_t MRNowPlayingPlayerPathCreate()
{
  return _MRNowPlayingPlayerPathCreate();
}

uint64_t MSNMonitorBeginException()
{
  return _MSNMonitorBeginException();
}

uint64_t MSNMonitorEndException()
{
  return _MSNMonitorEndException();
}

NSArray *__cdecl NSAllMapTableKeys(NSMapTable *table)
{
  return _NSAllMapTableKeys(table);
}

NSArray *__cdecl NSAllMapTableValues(NSMapTable *table)
{
  return _NSAllMapTableValues(table);
}

BOOL NSEqualSizes(NSSize aSize, NSSize bSize)
{
  return _NSEqualSizes(aSize, bSize);
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *__cdecl NSStringFromSize(NSSize aSize)
{
  return _NSStringFromSize(aSize);
}

uint64_t NSStringFromTLAlertPlaybackCompletionType()
{
  return _NSStringFromTLAlertPlaybackCompletionType();
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteFloatField()
{
  return _PBDataWriterWriteFloatField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t PBRepeatedUInt32Add()
{
  return _PBRepeatedUInt32Add();
}

uint64_t PBRepeatedUInt32Clear()
{
  return _PBRepeatedUInt32Clear();
}

uint64_t PBRepeatedUInt32Copy()
{
  return _PBRepeatedUInt32Copy();
}

uint64_t PBRepeatedUInt32Hash()
{
  return _PBRepeatedUInt32Hash();
}

uint64_t PBRepeatedUInt32IsEqual()
{
  return _PBRepeatedUInt32IsEqual();
}

uint64_t PBRepeatedUInt32NSArray()
{
  return _PBRepeatedUInt32NSArray();
}

uint64_t PNDecomposeForCountry()
{
  return _PNDecomposeForCountry();
}

uint64_t SBSUndimScreen()
{
  return _SBSUndimScreen();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return _SecItemUpdate(query, attributesToUpdate);
}

uint64_t TLAlertTypeFromString()
{
  return _TLAlertTypeFromString();
}

uint64_t TUAllowCallsDuringScreenSharing()
{
  return _TUAllowCallsDuringScreenSharing();
}

uint64_t TUAllowLocalVideoRecording()
{
  return _TUAllowLocalVideoRecording();
}

uint64_t TUBinaryGCD()
{
  return _TUBinaryGCD();
}

uint64_t TUBundle()
{
  return _TUBundle();
}

uint64_t TUCTServerConnection()
{
  return _TUCTServerConnection();
}

uint64_t TUCallHandoffActivityType()
{
  return _TUCallHandoffActivityType();
}

uint64_t TUCallPhoneAppHistoryActivityType()
{
  return _TUCallPhoneAppHistoryActivityType();
}

uint64_t TUCallRecordingEnabled()
{
  return _TUCallRecordingEnabled();
}

uint64_t TUCallScreeningActivatable()
{
  return _TUCallScreeningActivatable();
}

uint64_t TUCallScreeningDisabledUserDefault()
{
  return _TUCallScreeningDisabledUserDefault();
}

uint64_t TUCallScreeningEnabled()
{
  return _TUCallScreeningEnabled();
}

uint64_t TUCallScreeningEnabledForCurrentLocale()
{
  return _TUCallScreeningEnabledForCurrentLocale();
}

uint64_t TUCallTTYTypeForTUDialRequestTTYType()
{
  return _TUCallTTYTypeForTUDialRequestTTYType();
}

uint64_t TUCaptionsLoggingEnabled()
{
  return _TUCaptionsLoggingEnabled();
}

uint64_t TUConnectionTimeoutForCallService()
{
  return _TUConnectionTimeoutForCallService();
}

uint64_t TUCopyIDSCanonicalAddressForDestinationID()
{
  return _TUCopyIDSCanonicalAddressForDestinationID();
}

uint64_t TUCopyIDSCanonicalAddressForHandle()
{
  return _TUCopyIDSCanonicalAddressForHandle();
}

uint64_t TUCopyIDSFromIDForHandle()
{
  return _TUCopyIDSFromIDForHandle();
}

uint64_t TUDefaultLog()
{
  return _TUDefaultLog();
}

uint64_t TUDeviceHasChinaSKU()
{
  return _TUDeviceHasChinaSKU();
}

uint64_t TUDialRequestTTYTypeForTUCallTTYType()
{
  return _TUDialRequestTTYTypeForTUCallTTYType();
}

uint64_t TUDisableLinks()
{
  return _TUDisableLinks();
}

uint64_t TUFormattedPhoneNumber()
{
  return _TUFormattedPhoneNumber();
}

uint64_t TUHandleForIDSCanonicalAddress()
{
  return _TUHandleForIDSCanonicalAddress();
}

uint64_t TUHandlesAreCanonicallyEqual()
{
  return _TUHandlesAreCanonicallyEqual();
}

uint64_t TUHardPauseDigitsDisplayString()
{
  return _TUHardPauseDigitsDisplayString();
}

uint64_t TUHomeCountryCode()
{
  return _TUHomeCountryCode();
}

uint64_t TUIncomingInvitationTimeout()
{
  return _TUIncomingInvitationTimeout();
}

uint64_t TUIsIDSAvailableForFaceTime()
{
  return _TUIsIDSAvailableForFaceTime();
}

uint64_t TUIsPersonaAvailable()
{
  return _TUIsPersonaAvailable();
}

uint64_t TUIsPhotosSharePlayAvailable()
{
  return _TUIsPhotosSharePlayAvailable();
}

uint64_t TUIsRequestToScreenShareAvailable()
{
  return _TUIsRequestToScreenShareAvailable();
}

uint64_t TUIsStoreDemoModeEnabled()
{
  return _TUIsStoreDemoModeEnabled();
}

uint64_t TUKickMemberTimeout()
{
  return _TUKickMemberTimeout();
}

uint64_t TULockdownModeEnabled()
{
  return _TULockdownModeEnabled();
}

uint64_t TULoggableStringForHandle()
{
  return _TULoggableStringForHandle();
}

uint64_t TULoggableStringForHandles()
{
  return _TULoggableStringForHandles();
}

uint64_t TULoggableStringForObject()
{
  return _TULoggableStringForObject();
}

uint64_t TUMultiwayMaxConcurrentStreams()
{
  return _TUMultiwayMaxConcurrentStreams();
}

uint64_t TUNormalizedHandleForTUHandle()
{
  return _TUNormalizedHandleForTUHandle();
}

uint64_t TUNotificationFromXPCObject()
{
  return _TUNotificationFromXPCObject();
}

uint64_t TUNumberToDial()
{
  return _TUNumberToDial();
}

uint64_t TUNumbersAreEqualOrNil()
{
  return _TUNumbersAreEqualOrNil();
}

uint64_t TUObjectsAreEqualOrNil()
{
  return _TUObjectsAreEqualOrNil();
}

uint64_t TUOpenHomeScreenWithCompletion()
{
  return _TUOpenHomeScreenWithCompletion();
}

uint64_t TUOpenSensitiveURL()
{
  return _TUOpenSensitiveURL();
}

uint64_t TUOpenURL()
{
  return _TUOpenURL();
}

uint64_t TUOpenURLWithCompletion()
{
  return _TUOpenURLWithCompletion();
}

uint64_t TUOpenURLWithError()
{
  return _TUOpenURLWithError();
}

uint64_t TUOutgoingInvitationTimeoutForCallProvider()
{
  return _TUOutgoingInvitationTimeoutForCallProvider();
}

uint64_t TUOutgoingInvitationTimeoutForCallProviderAndIsUpgrade()
{
  return _TUOutgoingInvitationTimeoutForCallProviderAndIsUpgrade();
}

uint64_t TUPreferredFaceTimeBundleIdentifier()
{
  return _TUPreferredFaceTimeBundleIdentifier();
}

uint64_t TURemoveEveryTelephonyCenterObserver()
{
  return _TURemoveEveryTelephonyCenterObserver();
}

uint64_t TUSharePlayForceDisabled()
{
  return _TUSharePlayForceDisabled();
}

uint64_t TUSharePlayProtocolVersion()
{
  return _TUSharePlayProtocolVersion();
}

uint64_t TUShouldCreateSuperboxProvider()
{
  return _TUShouldCreateSuperboxProvider();
}

uint64_t TUShouldForegroundLaunchForActivity()
{
  return _TUShouldForegroundLaunchForActivity();
}

uint64_t TUSilenceUnknownFaceTimeCallersDefaultValue()
{
  return _TUSilenceUnknownFaceTimeCallersDefaultValue();
}

uint64_t TUSimulatedModeEnabled()
{
  return _TUSimulatedModeEnabled();
}

uint64_t TUStringKeyForNetwork()
{
  return _TUStringKeyForNetwork();
}

uint64_t TUStringKeyForNetworkAndProduct()
{
  return _TUStringKeyForNetworkAndProduct();
}

uint64_t TUStringKeyForProduct()
{
  return _TUStringKeyForProduct();
}

uint64_t TUStringsAreCaseInsensitiveEqual()
{
  return _TUStringsAreCaseInsensitiveEqual();
}

uint64_t TUStringsAreCaseInsensitiveEqualOrNil()
{
  return _TUStringsAreCaseInsensitiveEqualOrNil();
}

uint64_t TUStringsAreEqualOrNil()
{
  return _TUStringsAreEqualOrNil();
}

uint64_t TUThumperCarrierName()
{
  return _TUThumperCarrierName();
}

uint64_t TUTransferTimeout()
{
  return _TUTransferTimeout();
}

uint64_t TUUnlockAndOpenSensitiveURL()
{
  return _TUUnlockAndOpenSensitiveURL();
}

uint64_t TUVisionCallEstablishmentVersion()
{
  return _TUVisionCallEstablishmentVersion();
}

uint64_t TUVisionFeatureVersion()
{
  return _TUVisionFeatureVersion();
}

uint64_t _AXSBrailleScreenInputEnabled()
{
  return __AXSBrailleScreenInputEnabled();
}

uint64_t _AXSDefaultRouteForCall()
{
  return __AXSDefaultRouteForCall();
}

uint64_t _AXSVoiceOverTouchEnabled()
{
  return __AXSVoiceOverTouchEnabled();
}

uint64_t _AXSVoiceOverTouchShouldRouteToSpeakerWithProximity()
{
  return __AXSVoiceOverTouchShouldRouteToSpeakerWithProximity();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFPreferencesSetFileProtectionClass()
{
  return __CFPreferencesSetFileProtectionClass();
}

uint64_t _CTServerConnectionCarrierSettingsCopyValue()
{
  return __CTServerConnectionCarrierSettingsCopyValue();
}

uint64_t _CTServerConnectionCopyISOForMCC()
{
  return __CTServerConnectionCopyISOForMCC();
}

uint64_t _CTServerConnectionCopySystemCapabilities()
{
  return __CTServerConnectionCopySystemCapabilities();
}

uint64_t _CTServerConnectionEnableEmergencyCallBackMode()
{
  return __CTServerConnectionEnableEmergencyCallBackMode();
}

uint64_t _CTServerConnectionGetEmergencyCallBackMode()
{
  return __CTServerConnectionGetEmergencyCallBackMode();
}

uint64_t _CTServerConnectionPhoneServicesAccountStatusChanged()
{
  return __CTServerConnectionPhoneServicesAccountStatusChanged();
}

uint64_t _CTServerConnectionPhoneServicesAddDevice()
{
  return __CTServerConnectionPhoneServicesAddDevice();
}

uint64_t _CTServerConnectionPhoneServicesRemoveDevice()
{
  return __CTServerConnectionPhoneServicesRemoveDevice();
}

uint64_t _CTServerConnectionRegisterBlockForNotification()
{
  return __CTServerConnectionRegisterBlockForNotification();
}

uint64_t _CTServerConnectionSendBarrier()
{
  return __CTServerConnectionSendBarrier();
}

uint64_t _CTServerConnectionSetCapabilityExtended()
{
  return __CTServerConnectionSetCapabilityExtended();
}

uint64_t _FTAreIDsEquivalent()
{
  return __FTAreIDsEquivalent();
}

uint64_t _IDSQuickRelayProtocolVersionNumber()
{
  return __IDSQuickRelayProtocolVersionNumber();
}

uint64_t _IMWarn()
{
  return __IMWarn();
}

uint64_t _PNCopyInternationalCodeForCountry()
{
  return __PNCopyInternationalCodeForCountry();
}

uint64_t _PNCopyInternationalPrefix()
{
  return __PNCopyInternationalPrefix();
}

uint64_t _TUAssertShouldCrashApplication()
{
  return __TUAssertShouldCrashApplication();
}

uint64_t _TUIsInternalInstall()
{
  return __TUIsInternalInstall();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

{
}

{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return _clock_gettime_nsec_np(__clock_id);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return _confstr(a1, a2, a3);
}

uint64_t ct_green_tea_logger_create()
{
  return _ct_green_tea_logger_create();
}

uint64_t defaultAppRelayTelephonySetting()
{
  return _defaultAppRelayTelephonySetting();
}

uint64_t defaultAppRelayTelephonySettingUserDefault()
{
  return _defaultAppRelayTelephonySettingUserDefault();
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_block_cancel(dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return _dispatch_block_create(flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return _dispatch_block_create_with_qos_class(flags, qos_class, relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return _dispatch_get_specific(key);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void exit(int a1)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

float fmodf(float a1, float a2)
{
  return _fmodf(a1, a2);
}

void free(void *a1)
{
}

uint64_t getCTGreenTeaOsLogHandle()
{
  return _getCTGreenTeaOsLogHandle();
}

pid_t getpid(void)
{
  return _getpid();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

int mkdir(const char *a1, mode_t a2)
{
  return _mkdir(a1, a2);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

uint64_t nw_activity_activate()
{
  return _nw_activity_activate();
}

uint64_t nw_activity_complete_with_reason()
{
  return _nw_activity_complete_with_reason();
}

uint64_t nw_activity_complete_with_reason_and_underlying_error()
{
  return _nw_activity_complete_with_reason_and_underlying_error();
}

uint64_t nw_activity_create()
{
  return _nw_activity_create();
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

Class object_getClass(id a1)
{
  return _object_getClass(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return _os_signpost_id_make_with_pointer(log, ptr);
}

uint64_t os_state_add_handler()
{
  return _os_state_add_handler();
}

uint64_t os_state_remove_handler()
{
  return _os_state_remove_handler();
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return _realpath_DARWIN_EXTSN(a1, a2);
}

uint64_t removeDefaultAppRelayTelephonySetting()
{
  return _removeDefaultAppRelayTelephonySetting();
}

uint64_t sandbox_extension_release()
{
  return _sandbox_extension_release();
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return _strncpy(__dst, __src, __n);
}

uint64_t supportsDefaultAppRelayTelephonySetting()
{
  return _supportsDefaultAppRelayTelephonySetting();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return _xpc_activity_copy_criteria(activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return _xpc_dictionary_create_empty();
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return _xpc_equal(object1, object2);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

uint64_t xpc_transaction_exit_clean()
{
  return _xpc_transaction_exit_clean();
}

id objc_msgSend_ABTestConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 ABTestConfiguration];
}

id objc_msgSend_AVCBlobRecoveryGracePeriod(void *a1, const char *a2, ...)
{
  return _[a1 AVCBlobRecoveryGracePeriod];
}

id objc_msgSend_AVCBlobRecoveryTimeout(void *a1, const char *a2, ...)
{
  return _[a1 AVCBlobRecoveryTimeout];
}

id objc_msgSend_CSDCallRecordingEndedNotification(void *a1, const char *a2, ...)
{
  return _[a1 CSDCallRecordingEndedNotification];
}

id objc_msgSend_DTMFKey(void *a1, const char *a2, ...)
{
  return _[a1 DTMFKey];
}

id objc_msgSend_FZIDType(void *a1, const char *a2, ...)
{
  return _[a1 FZIDType];
}

id objc_msgSend_GUID(void *a1, const char *a2, ...)
{
  return _[a1 GUID];
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _[a1 ID];
}

id objc_msgSend_IDSFormattedDestinationID(void *a1, const char *a2, ...)
{
  return _[a1 IDSFormattedDestinationID];
}

id objc_msgSend_IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IMAVChatRemoteVideoPresentationStateFromCXVideoPresentationState:");
}

id objc_msgSend_ISOCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 ISOCountryCode];
}

id objc_msgSend_ISOCountryCodeForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ISOCountryCodeForCallWithUUID:");
}

id objc_msgSend_ISOCountryCodeForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ISOCountryCodeForChat:");
}

id objc_msgSend_ISOCountryCodeForMobileCountryCode_mobileNetworkCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ISOCountryCodeForMobileCountryCode:mobileNetworkCode:");
}

id objc_msgSend_ISOCountryCodeForSubscriptionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ISOCountryCodeForSubscriptionUUID:");
}

id objc_msgSend_ITUCountryCodeForISOCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ITUCountryCodeForISOCountryCode:");
}

id objc_msgSend_SDKVersion(void *a1, const char *a2, ...)
{
  return _[a1 SDKVersion];
}

id objc_msgSend_SHA1HexString(void *a1, const char *a2, ...)
{
  return _[a1 SHA1HexString];
}

id objc_msgSend_SIMIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 SIMIdentifier];
}

id objc_msgSend_TLESampleRate(void *a1, const char *a2, ...)
{
  return _[a1 TLESampleRate];
}

id objc_msgSend_TUCallRemoteVideoPresentationStateFromCXVideoPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TUCallRemoteVideoPresentationStateFromCXVideoPresentationState:");
}

id objc_msgSend_UIBackgroundModes(void *a1, const char *a2, ...)
{
  return _[a1 UIBackgroundModes];
}

id objc_msgSend_URI(void *a1, const char *a2, ...)
{
  return _[a1 URI];
}

id objc_msgSend_URIWithPrefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithPrefixedURI:");
}

id objc_msgSend_URIWithUnprefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithUnprefixedURI:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathExtension:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLByStandardizingPath(void *a1, const char *a2, ...)
{
  return _[a1 URLByStandardizingPath];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__FTCopyGzippedData(void *a1, const char *a2, ...)
{
  return _[a1 _FTCopyGzippedData];
}

id objc_msgSend__FTDecompressData(void *a1, const char *a2, ...)
{
  return _[a1 _FTDecompressData];
}

id objc_msgSend__FTOptionallyDecompressData(void *a1, const char *a2, ...)
{
  return _[a1 _FTOptionallyDecompressData];
}

id objc_msgSend__ISOCountryCodeForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ISOCountryCodeForCall:");
}

id objc_msgSend__ISOCountryCodeForCallWithUUID_provider_callUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ISOCountryCodeForCallWithUUID:provider:callUpdate:");
}

id objc_msgSend___imArrayByApplyingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imArrayByApplyingBlock:");
}

id objc_msgSend___imSetFromArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imSetFromArray");
}

id objc_msgSend__acceptInvitationWithData_alwaysSendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acceptInvitationWithData:alwaysSendData:");
}

id objc_msgSend__accountsMatchForSecondaryCalling(void *a1, const char *a2, ...)
{
  return _[a1 _accountsMatchForSecondaryCalling];
}

id objc_msgSend__actionRequiresReasonableUserIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionRequiresReasonableUserIntent:");
}

id objc_msgSend__activeCallID(void *a1, const char *a2, ...)
{
  return _[a1 _activeCallID];
}

id objc_msgSend__activeStandardCallExists(void *a1, const char *a2, ...)
{
  return _[a1 _activeStandardCallExists];
}

id objc_msgSend__addCallToCallHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCallToCallHistory:");
}

id objc_msgSend__addParticipantsWaitingToBeAddedToAVCSession(void *a1, const char *a2, ...)
{
  return _[a1 _addParticipantsWaitingToBeAddedToAVCSession];
}

id objc_msgSend__addRemoteParticipantToAVCSessionIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRemoteParticipantToAVCSessionIfPossible:");
}

id objc_msgSend__addSupplementalActionsForRequestedTransaction_onCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSupplementalActionsForRequestedTransaction:onCallSource:");
}

id objc_msgSend__allCalls(void *a1, const char *a2, ...)
{
  return _[a1 _allCalls];
}

id objc_msgSend__allMembers(void *a1, const char *a2, ...)
{
  return _[a1 _allMembers];
}

id objc_msgSend__allowMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowMember:");
}

id objc_msgSend__allowRevertingStateForCompletedTransactionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowRevertingStateForCompletedTransactionGroup:");
}

id objc_msgSend__answerHostedCall_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_answerHostedCall:completionHandler:");
}

id objc_msgSend__answerIncomingCall_withBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_answerIncomingCall:withBehavior:");
}

id objc_msgSend__answerIncomingCallAsConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_answerIncomingCallAsConversation:");
}

id objc_msgSend__anyOtherCallHasAnEndpointElsewhere_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anyOtherCallHasAnEndpointElsewhere:");
}

id objc_msgSend__anyRoutePassesTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anyRoutePassesTest:");
}

id objc_msgSend__appHasOngoingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appHasOngoingCall:");
}

id objc_msgSend__appearsToBeDSID(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBeDSID];
}

id objc_msgSend__appearsToBePhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBePhoneNumber];
}

id objc_msgSend__applyUpdateFromDataBlobForRemoteParticipant_participantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyUpdateFromDataBlobForRemoteParticipant:participantIdentifier:");
}

id objc_msgSend__apsConnectionForEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_apsConnectionForEnvironment:");
}

id objc_msgSend__audioRouteCollectionForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioRouteCollectionForCall:");
}

id objc_msgSend__beginTimeoutForLeavingConversationWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginTimeoutForLeavingConversationWithReason:");
}

id objc_msgSend__bundleIdentifierForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bundleIdentifierForCall:");
}

id objc_msgSend__callDirectoryPhoneNumberVariantsForSourceAddress_countryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callDirectoryPhoneNumberVariantsForSourceAddress:countryCode:");
}

id objc_msgSend__callFilterBlock(void *a1, const char *a2, ...)
{
  return _[a1 _callFilterBlock];
}

id objc_msgSend__callFilterIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _callFilterIdentifier];
}

id objc_msgSend__callGroupsWithBackingCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callGroupsWithBackingCallSource:");
}

id objc_msgSend__callHistoryTransactionObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callHistoryTransactionObjectWithIdentifier:");
}

id objc_msgSend__callWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callWithUUID:");
}

id objc_msgSend__callWithUUID_backingCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callWithUUID:backingCallSource:");
}

id objc_msgSend__callWithUUID_controllableByCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callWithUUID:controllableByCallSource:");
}

id objc_msgSend__callWithUUID_providerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callWithUUID:providerIdentifier:");
}

id objc_msgSend__callsWithUniqueProxyIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callsWithUniqueProxyIdentifiers:");
}

id objc_msgSend__canAddCallToCallHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canAddCallToCallHistory:");
}

id objc_msgSend__canReceiveGuestSessionInviteForMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canReceiveGuestSessionInviteForMessageType:");
}

id objc_msgSend__cancelInFlightAVCBlobRecoveryIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _cancelInFlightAVCBlobRecoveryIfNecessary];
}

id objc_msgSend__cancelInvitationWithData_reason_alwaysSendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelInvitationWithData:reason:alwaysSendData:");
}

id objc_msgSend__cancelTimeoutForLeavingConversation(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTimeoutForLeavingConversation];
}

id objc_msgSend__channelSourceAssertionsContainsPTTTransmissionIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_channelSourceAssertionsContainsPTTTransmissionIntent:");
}

id objc_msgSend__cleanCallMediaCache(void *a1, const char *a2, ...)
{
  return _[a1 _cleanCallMediaCache];
}

id objc_msgSend__cleanUpAllConferenceConnectionsForConference_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpAllConferenceConnectionsForConference:withError:");
}

id objc_msgSend__cleanUpConferenceConnection_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpConferenceConnection:error:");
}

id objc_msgSend__cleanUpConversation(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpConversation];
}

id objc_msgSend__cleanUpFromAVCSessionFailure(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpFromAVCSessionFailure];
}

id objc_msgSend__cleanUpHandoffMetricsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpHandoffMetricsIfNecessary];
}

id objc_msgSend__cloudCallingDevices(void *a1, const char *a2, ...)
{
  return _[a1 _cloudCallingDevices];
}

id objc_msgSend__commitUncommittedTransactions(void *a1, const char *a2, ...)
{
  return _[a1 _commitUncommittedTransactions];
}

id objc_msgSend__conferenceConnectionsForConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conferenceConnectionsForConference:");
}

id objc_msgSend__conferenceTransport_didStopForCall_cleanly_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conferenceTransport:didStopForCall:cleanly:error:");
}

id objc_msgSend__connectionEndedHandlerForXPCClient_withCustomBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionEndedHandlerForXPCClient:withCustomBlock:");
}

id objc_msgSend__contactForHandle_contactStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contactForHandle:contactStore:");
}

id objc_msgSend__contextDictionaryWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextDictionaryWithCall:");
}

id objc_msgSend__conversationProviderForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversationProviderForCall:");
}

id objc_msgSend__conversationsByGroupUUIDFilteredForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversationsByGroupUUIDFilteredForClient:");
}

id objc_msgSend__createAPSConnectionForEnvironment_namedDelegatePort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAPSConnectionForEnvironment:namedDelegatePort:");
}

id objc_msgSend__createDelayedActionListIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDelayedActionListIfNecessary:");
}

id objc_msgSend__createJoinCallAction_outgoingCallerID_gftOneToOneDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createJoinCallAction:outgoingCallerID:gftOneToOneDestinations:");
}

id objc_msgSend__createSessionToDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSessionToDestinations:");
}

id objc_msgSend__createSessionToDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSessionToDevices:");
}

id objc_msgSend__createSessionsToAllDevicesSupportingProvider_requiresConversationRelaySupport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSessionsToAllDevicesSupportingProvider:requiresConversationRelaySupport:");
}

id objc_msgSend__declineInvitationWithData_alwaysSendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_declineInvitationWithData:alwaysSendData:");
}

id objc_msgSend__defaultAppProviderForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultAppProviderForRemoteClients:");
}

id objc_msgSend__defaultOverrideForDisableDefault_forceDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultOverrideForDisableDefault:forceDefault:");
}

id objc_msgSend__deferCommittingTransactionsUntilAfterRunningBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deferCommittingTransactionsUntilAfterRunningBlock:");
}

id objc_msgSend__deliverChannelPushTokenToApplication(void *a1, const char *a2, ...)
{
  return _[a1 _deliverChannelPushTokenToApplication];
}

id objc_msgSend__deliverMessageContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deliverMessageContext:");
}

id objc_msgSend__deliverPendingChannelPushPayloadsToApplication(void *a1, const char *a2, ...)
{
  return _[a1 _deliverPendingChannelPushPayloadsToApplication];
}

id objc_msgSend__deliverPendingNetworkExtensionPayloadsToApplication(void *a1, const char *a2, ...)
{
  return _[a1 _deliverPendingNetworkExtensionPayloadsToApplication];
}

id objc_msgSend__deliverPendingPushKitPayloadsToApplication(void *a1, const char *a2, ...)
{
  return _[a1 _deliverPendingPushKitPayloadsToApplication];
}

id objc_msgSend__deliverVoIPTokenToApplication(void *a1, const char *a2, ...)
{
  return _[a1 _deliverVoIPTokenToApplication];
}

id objc_msgSend__destroySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destroySession:");
}

id objc_msgSend__deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _deviceExistsThatSupportsRelayCallingWithoutLocalRelayCallingEnabled];
}

id objc_msgSend__dial_displayContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dial:displayContext:completion:");
}

id objc_msgSend__dialDelayForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dialDelayForRequest:");
}

id objc_msgSend__didReceivePushPayload_channelUUID_reply_isServiceUpdateMessage_isHighPriority_remainingHighPriorityBudget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceivePushPayload:channelUUID:reply:isServiceUpdateMessage:isHighPriority:remainingHighPriorityBudget:");
}

id objc_msgSend__didReceivePushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceivePushToken:");
}

id objc_msgSend__disconnectOrPullExistingCallsForCallIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disconnectOrPullExistingCallsForCallIfNecessary:");
}

id objc_msgSend__displaySharePlayUnableToStartWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displaySharePlayUnableToStartWithMessage:");
}

id objc_msgSend__doNotDisturbAllowsCallFromSourceAddress_providerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doNotDisturbAllowsCallFromSourceAddress:providerIdentifier:");
}

id objc_msgSend__donateUserIntentForProviderWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_donateUserIntentForProviderWithIdentifier:");
}

id objc_msgSend__emitRTCConnectionSetupEvent_participantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitRTCConnectionSetupEvent:participantIdentifier:");
}

id objc_msgSend__emitRTCConnectionSetupEventForAddActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitRTCConnectionSetupEventForAddActiveParticipant:");
}

id objc_msgSend__endCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endCall:");
}

id objc_msgSend__endCallIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _endCallIfNecessary];
}

id objc_msgSend__endChatWithUUID_withEndedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endChatWithUUID:withEndedReason:");
}

id objc_msgSend__endMutuallyExclusiveCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endMutuallyExclusiveCalls:");
}

id objc_msgSend__endProxyCallsForConnectingVideoCall(void *a1, const char *a2, ...)
{
  return _[a1 _endProxyCallsForConnectingVideoCall];
}

id objc_msgSend__endScreenCallIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _endScreenCallIfNecessary];
}

id objc_msgSend__endTransactionForObjectAfterCallHistoryDatabaseChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endTransactionForObjectAfterCallHistoryDatabaseChanges:");
}

id objc_msgSend__endedReasonForDidStopError_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endedReasonForDidStopError:error:");
}

id objc_msgSend__ensureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensureStarted];
}

id objc_msgSend__ensureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureStopped];
}

id objc_msgSend__errorToAVCProviderEndedReason_defaultProviderReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorToAVCProviderEndedReason:defaultProviderReason:");
}

id objc_msgSend__expanseEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _expanseEnabled];
}

id objc_msgSend__faceTimeAudioAvailability(void *a1, const char *a2, ...)
{
  return _[a1 _faceTimeAudioAvailability];
}

id objc_msgSend__faceTimeVideoAvailability(void *a1, const char *a2, ...)
{
  return _[a1 _faceTimeVideoAvailability];
}

id objc_msgSend__failConversation_failureReason_providerEndedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failConversation:failureReason:providerEndedReason:");
}

id objc_msgSend__fetchUserActivityWithUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUserActivityWithUUID:completionHandler:");
}

id objc_msgSend__filter_withClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filter:withClient:");
}

id objc_msgSend__findOrCreateApplicationWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findOrCreateApplicationWithBundleIdentifier:");
}

id objc_msgSend__findPendingConversationWithCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findPendingConversationWithCallUUID:");
}

id objc_msgSend__generateABTestConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _generateABTestConfiguration];
}

id objc_msgSend__generateHandoffReportIfNecessaryForUpdatedParticipantID_isAddParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateHandoffReportIfNecessaryForUpdatedParticipantID:isAddParticipant:");
}

id objc_msgSend__getActivatedLinkWithHandle_updateGroupUUID_updateInvitedHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getActivatedLinkWithHandle:updateGroupUUID:updateInvitedHandles:");
}

id objc_msgSend__handleActiveCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleActiveCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleAudioReadyForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAudioReadyForCall:");
}

id objc_msgSend__handleCallConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallConnected:");
}

id objc_msgSend__handleCallDurationTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handleCallDurationTimerFired];
}

id objc_msgSend__handleCallHasStartedOutgoingChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallHasStartedOutgoingChanged:");
}

id objc_msgSend__handleCallHistoryChanged(void *a1, const char *a2, ...)
{
  return _[a1 _handleCallHistoryChanged];
}

id objc_msgSend__handleCallMayRequireBreakBeforeMakeChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallMayRequireBreakBeforeMakeChanged:");
}

id objc_msgSend__handleCallStartedConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallStartedConnecting:");
}

id objc_msgSend__handleCallStatusChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallStatusChanged:");
}

id objc_msgSend__handleCallWantsHoldMusicChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCallWantsHoldMusicChanged:");
}

id objc_msgSend__handleConnectedCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleConnectedCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleConnectingCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleConnectingCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleDeviceFirstUnlockNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleDeviceFirstUnlockNotification];
}

id objc_msgSend__handleDeviceLockStatusNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleDeviceLockStatusNotification];
}

id objc_msgSend__handleDisconnectedCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDisconnectedCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleDisconnectedCallStatusChangeForVoicemailCall(void *a1, const char *a2, ...)
{
  return _[a1 _handleDisconnectedCallStatusChangeForVoicemailCall];
}

id objc_msgSend__handleGroupUUIDChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGroupUUIDChangeForHostedCall:");
}

id objc_msgSend__handleHeldCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleHeldCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleLockStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 _handleLockStateChanged];
}

id objc_msgSend__handleMessagingConnectionEndForCalls_withDisconnectedReason_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMessagingConnectionEndForCalls:withDisconnectedReason:didStartConnecting:");
}

id objc_msgSend__handlePairedDeviceChangedFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePairedDeviceChangedFrom:to:");
}

id objc_msgSend__handlePasscodeLockedOrBlocked(void *a1, const char *a2, ...)
{
  return _[a1 _handlePasscodeLockedOrBlocked];
}

id objc_msgSend__handlePushToTalkRecordingStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePushToTalkRecordingStateChanged:");
}

id objc_msgSend__handlePushTokensInvited_didSendInvitation_didCancelInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePushTokensInvited:didSendInvitation:didCancelInvitation:");
}

id objc_msgSend__handleReceivedResourcesAtDirectoryURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedResourcesAtDirectoryURL:");
}

id objc_msgSend__handleReceivedVideoURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedVideoURL:");
}

id objc_msgSend__handleRelayCallingChanged(void *a1, const char *a2, ...)
{
  return _[a1 _handleRelayCallingChanged];
}

id objc_msgSend__handleRingingCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRingingCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleSendingCallStatusChangeForHostedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendingCallStatusChangeForHostedCall:");
}

id objc_msgSend__handleStateChanged_oldState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStateChanged:oldState:");
}

id objc_msgSend__hasAlreadyDeniedSendingNameAndPhotoToHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasAlreadyDeniedSendingNameAndPhotoToHandles:");
}

id objc_msgSend__identifiersForCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifiersForCalls:");
}

id objc_msgSend__inactiveRemoteMemberForHandle_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inactiveRemoteMemberForHandle:conversation:");
}

id objc_msgSend__incomingPendingConversationsByGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 _incomingPendingConversationsByGroupUUID];
}

id objc_msgSend__incrementKillCountForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incrementKillCountForApplication:");
}

id objc_msgSend__initWithTypeIdentifier_suggestedActionType_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithTypeIdentifier:suggestedActionType:options:");
}

id objc_msgSend__initWithUserActivityType_dynamicActivityType_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithUserActivityType:dynamicActivityType:options:");
}

id objc_msgSend__initializeAudioRouteCollections(void *a1, const char *a2, ...)
{
  return _[a1 _initializeAudioRouteCollections];
}

id objc_msgSend__initializeAutomaticCarDNDStatusIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _initializeAutomaticCarDNDStatusIfNecessary];
}

id objc_msgSend__initializeLastKnownCallerID(void *a1, const char *a2, ...)
{
  return _[a1 _initializeLastKnownCallerID];
}

id objc_msgSend__initializePairedHostDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 _initializePairedHostDeviceState];
}

id objc_msgSend__isActiveRemoteMemberForHandle_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isActiveRemoteMemberForHandle:conversation:");
}

id objc_msgSend__isApplicationPreventedFromBeingLaunched_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isApplicationPreventedFromBeingLaunched:");
}

id objc_msgSend__isAudioAccessoryDevice(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioAccessoryDevice];
}

id objc_msgSend__isCTErrorFatal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCTErrorFatal:");
}

id objc_msgSend__isChannelSourceAppForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isChannelSourceAppForeground:");
}

id objc_msgSend__isChannelSourceAppRunningPTTTransmissionAppIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isChannelSourceAppRunningPTTTransmissionAppIntent:");
}

id objc_msgSend__isEmergencyDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEmergencyDialRequest:");
}

id objc_msgSend__isMuted(void *a1, const char *a2, ...)
{
  return _[a1 _isMuted];
}

id objc_msgSend__isNSErrorFatal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isNSErrorFatal:");
}

id objc_msgSend__isSendingAudio(void *a1, const char *a2, ...)
{
  return _[a1 _isSendingAudio];
}

id objc_msgSend__isSendingAudioData(void *a1, const char *a2, ...)
{
  return _[a1 _isSendingAudioData];
}

id objc_msgSend__isSendingVideo(void *a1, const char *a2, ...)
{
  return _[a1 _isSendingVideo];
}

id objc_msgSend__isSendingVideoExpected(void *a1, const char *a2, ...)
{
  return _[a1 _isSendingVideoExpected];
}

id objc_msgSend__isThumperCallingAllowedForCurrentDeviceUsingSenderIdentityCapabilitiesState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isThumperCallingAllowedForCurrentDeviceUsingSenderIdentityCapabilitiesState:");
}

id objc_msgSend__isWaitingToJoinForConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWaitingToJoinForConversationUUID:");
}

id objc_msgSend__isWatchDevice(void *a1, const char *a2, ...)
{
  return _[a1 _isWatchDevice];
}

id objc_msgSend__kickedOrRejectedMemberForHandle_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_kickedOrRejectedMemberForHandle:conversation:");
}

id objc_msgSend__launchApplicationDueToActivityCreation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchApplicationDueToActivityCreation:");
}

id objc_msgSend__launchApplicationForActivityIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchApplicationForActivityIfNecessary:");
}

id objc_msgSend__launchApplicationForActivityIfNecessary_shouldForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchApplicationForActivityIfNecessary:shouldForeground:");
}

id objc_msgSend__launchApplicationsForActivitiesIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _launchApplicationsForActivitiesIfNecessary];
}

id objc_msgSend__launchApplicationsForActivitiesIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchApplicationsForActivitiesIfNecessary:");
}

id objc_msgSend__launchICSForScreeningIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _launchICSForScreeningIfNeeded];
}

id objc_msgSend__launchInCallApplicationForAnsweringCallIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchInCallApplicationForAnsweringCallIfNecessary:");
}

id objc_msgSend__launchInCallApplicationForCall_withURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchInCallApplicationForCall:withURL:");
}

id objc_msgSend__launchInCallApplicationForExistingCall(void *a1, const char *a2, ...)
{
  return _[a1 _launchInCallApplicationForExistingCall];
}

id objc_msgSend__launchInCallApplicationForIncomingCallIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchInCallApplicationForIncomingCallIfNecessary:");
}

id objc_msgSend__launchInCallApplicationForOutgoingCallIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchInCallApplicationForOutgoingCallIfNecessary:");
}

id objc_msgSend__launchInCallApplicationForOutgoingCallOnHostIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _launchInCallApplicationForOutgoingCallOnHostIfNecessary];
}

id objc_msgSend__launchInCallApplicationForOutgoingConversationIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchInCallApplicationForOutgoingConversationIfNecessary:");
}

id objc_msgSend__leaveConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_leaveConversation:");
}

id objc_msgSend__leaveConversation_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_leaveConversation:withContext:");
}

id objc_msgSend__linksEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _linksEnabled];
}

id objc_msgSend__markReadRecentCallsMatchingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markReadRecentCallsMatchingHandle:");
}

id objc_msgSend__meetsRequirementsToBeginTransmitting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_meetsRequirementsToBeginTransmitting:");
}

id objc_msgSend__moveOpportunisticTopicsToIgnoredListForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveOpportunisticTopicsToIgnoredListForConnection:");
}

id objc_msgSend__nameAndPhotoSharingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _nameAndPhotoSharingEnabled];
}

id objc_msgSend__nonRingingCallExistsOnThisDevice(void *a1, const char *a2, ...)
{
  return _[a1 _nonRingingCallExistsOnThisDevice];
}

id objc_msgSend__notifyCLTMOfIncomingCall(void *a1, const char *a2, ...)
{
  return _[a1 _notifyCLTMOfIncomingCall];
}

id objc_msgSend__numberForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberForKey:");
}

id objc_msgSend__observeSignal_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_observeSignal:usingHandler:");
}

id objc_msgSend__outgoingCallerID(void *a1, const char *a2, ...)
{
  return _[a1 _outgoingCallerID];
}

id objc_msgSend__parsePauseDigitsFromDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parsePauseDigitsFromDestinationID:");
}

id objc_msgSend__performBlock_onClients_coalescedByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBlock:onClients:coalescedByIdentifier:");
}

id objc_msgSend__performDelegateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performDelegateCallback:");
}

id objc_msgSend__performRequestedTransaction_onCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performRequestedTransaction:onCallSource:");
}

id objc_msgSend__performTransaction_onChannelSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performTransaction:onChannelSource:");
}

id objc_msgSend__plugIn(void *a1, const char *a2, ...)
{
  return _[a1 _plugIn];
}

id objc_msgSend__postDidCloseNotificationForConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postDidCloseNotificationForConference:");
}

id objc_msgSend__postDidCloseNotificationForConferenceIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postDidCloseNotificationForConferenceIfNecessary:");
}

id objc_msgSend__postNotificationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postNotificationName:");
}

id objc_msgSend__prepareConferenceForConferenceConnection_remoteInviteDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareConferenceForConferenceConnection:remoteInviteDictionary:");
}

id objc_msgSend__primaryThumperAccountRequiringAvailableDeviceSlots(void *a1, const char *a2, ...)
{
  return _[a1 _primaryThumperAccountRequiringAvailableDeviceSlots];
}

id objc_msgSend__primaryThumperAccountRequiringMatchingCallerID(void *a1, const char *a2, ...)
{
  return _[a1 _primaryThumperAccountRequiringMatchingCallerID];
}

id objc_msgSend__processCompletedCallAction_forCall_allowRevertingState_isOnenessActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processCompletedCallAction:forCall:allowRevertingState:isOnenessActive:");
}

id objc_msgSend__processCompletedChannelAction_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processCompletedChannelAction:forCall:");
}

id objc_msgSend__processDelayedActionList_provider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processDelayedActionList:provider:");
}

id objc_msgSend__processPushToTalkAppStateChangedForCall_withPID_processState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processPushToTalkAppStateChangedForCall:withPID:processState:");
}

id objc_msgSend__processRequestedTransaction_fromCallSource_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processRequestedTransaction:fromCallSource:completion:");
}

id objc_msgSend__processRequestedTransaction_fromProviderSource_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processRequestedTransaction:fromProviderSource:completionHandler:");
}

id objc_msgSend__providerForCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providerForCallSource:");
}

id objc_msgSend__providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providersByIdentifierByFilteringForRemoteClientsFromProvidersByIdentifier:");
}

id objc_msgSend__providersByIdentifierForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providersByIdentifierForRemoteClients:");
}

id objc_msgSend__providersForKeychainItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providersForKeychainItem:");
}

id objc_msgSend__providersForPreferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providersForPreferenceKey:");
}

id objc_msgSend__providersPassingTest_forRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providersPassingTest:forRemoteClients:");
}

id objc_msgSend__pruneRemoteParticipantsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _pruneRemoteParticipantsIfNecessary];
}

id objc_msgSend__pruneUninstalledAppPushTopics(void *a1, const char *a2, ...)
{
  return _[a1 _pruneUninstalledAppPushTopics];
}

id objc_msgSend__pruneUninstalledAppPushTopicsForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pruneUninstalledAppPushTopicsForConnection:");
}

id objc_msgSend__pushCallToAlternateDestinationIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushCallToAlternateDestinationIfNecessary:");
}

id objc_msgSend__queue_activePersistedChannelIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_activePersistedChannelIdentity");
}

id objc_msgSend__queue_addPendingTeardownAcknowledgement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_addPendingTeardownAcknowledgement:");
}

id objc_msgSend__queue_clearPendingChannelTeardownAcknowledgementsForBundleIdentfier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_clearPendingChannelTeardownAcknowledgementsForBundleIdentfier:");
}

id objc_msgSend__queue_tearDownPersistedChannelForApplicationIdentifier_teardownType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_tearDownPersistedChannelForApplicationIdentifier:teardownType:");
}

id objc_msgSend__queue_tearDownPersistedChannelForBundleIdentifier_teardownType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queue_tearDownPersistedChannelForBundleIdentifier:teardownType:");
}

id objc_msgSend__recordingClientPIDsContainsProcessIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingClientPIDsContainsProcessIdentifier:");
}

id objc_msgSend__recordingClientPIDsNotification_containsProcessIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingClientPIDsNotification:containsProcessIdentifier:");
}

id objc_msgSend__refreshFaceTimeIDSStatus(void *a1, const char *a2, ...)
{
  return _[a1 _refreshFaceTimeIDSStatus];
}

id objc_msgSend__refreshFaceTimeIDSStatusIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _refreshFaceTimeIDSStatusIfNecessary];
}

id objc_msgSend__refreshHasBeenUnlockedSinceBoot(void *a1, const char *a2, ...)
{
  return _[a1 _refreshHasBeenUnlockedSinceBoot];
}

id objc_msgSend__registerCallBackgroundedEvent(void *a1, const char *a2, ...)
{
  return _[a1 _registerCallBackgroundedEvent];
}

id objc_msgSend__registerCallForegroundedEventForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerCallForegroundedEventForCall:");
}

id objc_msgSend__registerCallStartEventForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerCallStartEventForCall:");
}

id objc_msgSend__registerCallStopEvent(void *a1, const char *a2, ...)
{
  return _[a1 _registerCallStopEvent];
}

id objc_msgSend__registerEventWithContext_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerEventWithContext:status:");
}

id objc_msgSend__registerForPushTokenWithType_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerForPushTokenWithType:client:");
}

id objc_msgSend__registerNetworkExtensionApplicationWithBundleIdentifier_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerNetworkExtensionApplicationWithBundleIdentifier:client:");
}

id objc_msgSend__registerPluginsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _registerPluginsIfNecessary];
}

id objc_msgSend__registerPushApplicationWithBundleIdentifier_client_environment_pushType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerPushApplicationWithBundleIdentifier:client:environment:pushType:");
}

id objc_msgSend__registerUserActivityType_dynamicActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerUserActivityType:dynamicActivityType:");
}

id objc_msgSend__relayCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relayCallWithUUID:");
}

id objc_msgSend__relayCallingDisabledForDeviceIDDefault(void *a1, const char *a2, ...)
{
  return _[a1 _relayCallingDisabledForDeviceIDDefault];
}

id objc_msgSend__relayCallingEnabledDefault(void *a1, const char *a2, ...)
{
  return _[a1 _relayCallingEnabledDefault];
}

id objc_msgSend__removeAllApplicationsFromKillCountsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _removeAllApplicationsFromKillCountsDictionary];
}

id objc_msgSend__removeApplicationFromKillCountsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeApplicationFromKillCountsDictionary:");
}

id objc_msgSend__removeMemberFromPendingMemberListForParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeMemberFromPendingMemberListForParticipant:");
}

id objc_msgSend__removePendingConversationWithPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removePendingConversationWithPseudonym:");
}

id objc_msgSend__removePendingConversationsWithTemporaryGroupUUIDIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removePendingConversationsWithTemporaryGroupUUIDIfNecessary:");
}

id objc_msgSend__removeTopic_fromConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeTopic:fromConnection:");
}

id objc_msgSend__reportConversationFailedWithFailureReason_providerEndedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportConversationFailedWithFailureReason:providerEndedReason:");
}

id objc_msgSend__reportConversationFailedWithProviderEndedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportConversationFailedWithProviderEndedReason:");
}

id objc_msgSend__reportScreeningDurationEventForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reportScreeningDurationEventForCall:");
}

id objc_msgSend__requestAVCBlobsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _requestAVCBlobsIfNecessary];
}

id objc_msgSend__requestCallStateFromHost(void *a1, const char *a2, ...)
{
  return _[a1 _requestCallStateFromHost];
}

id objc_msgSend__requestPendingInvites(void *a1, const char *a2, ...)
{
  return _[a1 _requestPendingInvites];
}

id objc_msgSend__resetPTTWakingServiceUpdateCountForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetPTTWakingServiceUpdateCountForApplication:");
}

id objc_msgSend__restartIDSSessionIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _restartIDSSessionIfNecessary];
}

id objc_msgSend__ringingTimerForCallWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringingTimerForCallWithIdentifier:");
}

id objc_msgSend__routePassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_routePassingTest:");
}

id objc_msgSend__runCallbackIfNecessaryForMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runCallbackIfNecessaryForMessage:");
}

id objc_msgSend__saveLastKnownFaceTimeCallerID(void *a1, const char *a2, ...)
{
  return _[a1 _saveLastKnownFaceTimeCallerID];
}

id objc_msgSend__saveLivePhotoWithPhotoURL_videoURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveLivePhotoWithPhotoURL:videoURL:completion:");
}

id objc_msgSend__savePairedHostDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 _savePairedHostDeviceState];
}

id objc_msgSend__saveProviders_forKeychainItem_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveProviders:forKeychainItem:error:");
}

id objc_msgSend__saveVideoWithURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveVideoWithURL:completion:");
}

id objc_msgSend__sendClientsReceivedCallDTMFUpdate_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendClientsReceivedCallDTMFUpdate:forCall:");
}

id objc_msgSend__sendDTMFDigits_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendDTMFDigits:type:");
}

id objc_msgSend__sendDelegateBytesOfDataUsageChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendDelegateBytesOfDataUsageChanged:");
}

id objc_msgSend__sendDelegateConnectionClosed(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateConnectionClosed];
}

id objc_msgSend__sendDelegateFinishedPreparing(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateFinishedPreparing];
}

id objc_msgSend__sendDelegateMutedChanged(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateMutedChanged];
}

id objc_msgSend__sendDelegateReceivedFirstRemoteFrame(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateReceivedFirstRemoteFrame];
}

id objc_msgSend__sendDelegateRemoteMediaStalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendDelegateRemoteMediaStalled:");
}

id objc_msgSend__sendDelegateRemoteVideoPaused(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateRemoteVideoPaused];
}

id objc_msgSend__sendDelegateSendingAudioChanged(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateSendingAudioChanged];
}

id objc_msgSend__sendDelegateStarted(void *a1, const char *a2, ...)
{
  return _[a1 _sendDelegateStarted];
}

id objc_msgSend__sendDelegationMessageTo_conversation_link_transactionUUID_forMember_withMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendDelegationMessageTo:conversation:link:transactionUUID:forMember:withMessage:");
}

id objc_msgSend__sendInvitationWithData_declineOnError_alwaysSendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendInvitationWithData:declineOnError:alwaysSendData:");
}

id objc_msgSend__sendMessage_andCancelInvitationIfNecessaryForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:andCancelInvitationIfNecessaryForSession:");
}

id objc_msgSend__sendMessage_andDeclineInvitationIfNecessaryForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:andDeclineInvitationIfNecessaryForSession:");
}

id objc_msgSend__sendMessageOptionsWithTimeout_wantsAcknowledgement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageOptionsWithTimeout:wantsAcknowledgement:");
}

id objc_msgSend__sendSoftPauseDigitsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _sendSoftPauseDigitsIfNecessary];
}

id objc_msgSend__senderIdentityCapabilitiesStateForSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_senderIdentityCapabilitiesStateForSubscription:");
}

id objc_msgSend__service_account_incomingData_fromID_context_attemptCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_service:account:incomingData:fromID:context:attemptCount:");
}

id objc_msgSend__setAllCallsToHeldExceptCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAllCallsToHeldExceptCall:");
}

id objc_msgSend__setContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContentType:");
}

id objc_msgSend__setContentUserAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContentUserAction:");
}

id objc_msgSend__setDateEndedIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _setDateEndedIfNecessary];
}

id objc_msgSend__setEnabledTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEnabledTopics:");
}

id objc_msgSend__setEndedWithReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEndedWithReason:error:");
}

id objc_msgSend__setIgnoredTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoredTopics:");
}

id objc_msgSend__setIsOnHold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsOnHold:");
}

id objc_msgSend__setLocalAspectRatiosForVideoAspectRatioDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLocalAspectRatiosForVideoAspectRatioDescriptor:");
}

id objc_msgSend__setLocalLandscapeAspectRatio_localPortraitAspectRatio_forChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLocalLandscapeAspectRatio:localPortraitAspectRatio:forChat:");
}

id objc_msgSend__setOpportunisticTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOpportunisticTopics:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setRelayCallingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRelayCallingEnabled:");
}

id objc_msgSend__setRelayCallingEnabled_forDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRelayCallingEnabled:forDeviceWithID:");
}

id objc_msgSend__setRelayCallingEnabledDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRelayCallingEnabledDefault:");
}

id objc_msgSend__setRelayCallingEnabledDefault_forDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRelayCallingEnabledDefault:forDeviceWithID:");
}

id objc_msgSend__setRoutesFromRouteDictionaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRoutesFromRouteDictionaries:");
}

id objc_msgSend__setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSubtitle:");
}

id objc_msgSend__setThumperCallingAllowed_onSecondaryDeviceWithID_forSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:");
}

id objc_msgSend__setThumperCallingAllowedOnDefaultPairedDevice_forSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:");
}

id objc_msgSend__setThumperCallingEnabled_forSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setThumperCallingEnabled:forSenderIdentityWithUUID:");
}

id objc_msgSend__setUpCallDurationLimitIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _setUpCallDurationLimitIfNecessary];
}

id objc_msgSend__setUpDidStartTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _setUpDidStartTimeout];
}

id objc_msgSend__setUpLanguageChangeListener(void *a1, const char *a2, ...)
{
  return _[a1 _setUpLanguageChangeListener];
}

id objc_msgSend__setUpListeners(void *a1, const char *a2, ...)
{
  return _[a1 _setUpListeners];
}

id objc_msgSend__setUpSandbox(void *a1, const char *a2, ...)
{
  return _[a1 _setUpSandbox];
}

id objc_msgSend__setUpTemporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _setUpTemporaryDirectory];
}

id objc_msgSend__setVoLTECallingEnabled_forSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setVoLTECallingEnabled:forSenderIdentityWithUUID:");
}

id objc_msgSend__setWiFiCallingEnabled_forSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWiFiCallingEnabled:forSenderIdentityWithUUID:");
}

id objc_msgSend__setWiFiCallingRoamingEnabled_forSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:");
}

id objc_msgSend__sharingAudienceAllowsAutoSendNameAndPhoto(void *a1, const char *a2, ...)
{
  return _[a1 _sharingAudienceAllowsAutoSendNameAndPhoto];
}

id objc_msgSend__shouldAllowAction_forChannelSource_shouldValidateUserIntent_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAllowAction:forChannelSource:shouldValidateUserIntent:error:");
}

id objc_msgSend__shouldAllowRequestedAction_forCallSource_shouldValidateUserIntent_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAllowRequestedAction:forCallSource:shouldValidateUserIntent:error:");
}

id objc_msgSend__shouldAllowRequestedTransaction_forCallSource_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAllowRequestedTransaction:forCallSource:error:");
}

id objc_msgSend__shouldAllowTransaction_forChannelSource_shouldValidateUserIntent_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldAllowTransaction:forChannelSource:shouldValidateUserIntent:error:");
}

id objc_msgSend__shouldBlockIfScreenSharing(void *a1, const char *a2, ...)
{
  return _[a1 _shouldBlockIfScreenSharing];
}

id objc_msgSend__shouldLaunchInCallApplicationForProviderOfCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldLaunchInCallApplicationForProviderOfCall:");
}

id objc_msgSend__shouldNotifyDelegatesOfMessage_localHandleAdded_isFromStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldNotifyDelegatesOfMessage:localHandleAdded:isFromStorage:");
}

id objc_msgSend__shouldRelayJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRelayJoinConversationRequest:");
}

id objc_msgSend__shouldRingForIncomingCallWithHandle_conversation_isFromPendingMessage_isOldMessage_isLetMeInApproved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRingForIncomingCallWithHandle:conversation:isFromPendingMessage:isOldMessage:isLetMeInApproved:");
}

id objc_msgSend__shouldSend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSend:");
}

id objc_msgSend__shouldSendToPairedIDSDevice(void *a1, const char *a2, ...)
{
  return _[a1 _shouldSendToPairedIDSDevice];
}

id objc_msgSend__shouldSendToPairedIDSDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSendToPairedIDSDevice:");
}

id objc_msgSend__shouldSkipManualApprovalForHandle_conversation_responseKeyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSkipManualApprovalForHandle:conversation:responseKeyData:");
}

id objc_msgSend__showLetMeInUIIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _showLetMeInUIIfNecessary];
}

id objc_msgSend__sortedProvidersForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortedProvidersForRemoteClients:");
}

id objc_msgSend__startAVCSessionIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _startAVCSessionIfNecessary];
}

id objc_msgSend__startIDSSessionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startIDSSessionWithContext:");
}

id objc_msgSend__startMonitoringAppForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startMonitoringAppForCall:");
}

id objc_msgSend__startSession_withMessage_identifiers_timeout_declineOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startSession:withMessage:identifiers:timeout:declineOnError:");
}

id objc_msgSend__startTimeoutForMomentsRequestWithTransactionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTimeoutForMomentsRequestWithTransactionID:");
}

id objc_msgSend__stop(void *a1, const char *a2, ...)
{
  return _[a1 _stop];
}

id objc_msgSend__stopAVCSession(void *a1, const char *a2, ...)
{
  return _[a1 _stopAVCSession];
}

id objc_msgSend__stopConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopConference:");
}

id objc_msgSend__stopListeningForBestAppSuggestionIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 _stopListeningForBestAppSuggestionIfAppropriate];
}

id objc_msgSend__stopMonitoringPushToTalkAppProcess(void *a1, const char *a2, ...)
{
  return _[a1 _stopMonitoringPushToTalkAppProcess];
}

id objc_msgSend__stopScreeningEventIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopScreeningEventIfNecessaryForCall:");
}

id objc_msgSend__stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringForKey:");
}

id objc_msgSend__stripFZIDPrefix(void *a1, const char *a2, ...)
{
  return _[a1 _stripFZIDPrefix];
}

id objc_msgSend__stripPotentialTokenURIWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stripPotentialTokenURIWithToken:");
}

id objc_msgSend__subscriptionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subscriptionWithUUID:");
}

id objc_msgSend__supportsBasebandCalling(void *a1, const char *a2, ...)
{
  return _[a1 _supportsBasebandCalling];
}

id objc_msgSend__supportsCellularData(void *a1, const char *a2, ...)
{
  return _[a1 _supportsCellularData];
}

id objc_msgSend__supportsDisplayingFaceTimeAudioCalls(void *a1, const char *a2, ...)
{
  return _[a1 _supportsDisplayingFaceTimeAudioCalls];
}

id objc_msgSend__supportsDisplayingFaceTimeVideoCalls(void *a1, const char *a2, ...)
{
  return _[a1 _supportsDisplayingFaceTimeVideoCalls];
}

id objc_msgSend__supportsDisplayingTelephonyCalls(void *a1, const char *a2, ...)
{
  return _[a1 _supportsDisplayingTelephonyCalls];
}

id objc_msgSend__supportsPrimaryCalling(void *a1, const char *a2, ...)
{
  return _[a1 _supportsPrimaryCalling];
}

id objc_msgSend__supportsRelayCalling(void *a1, const char *a2, ...)
{
  return _[a1 _supportsRelayCalling];
}

id objc_msgSend__supportsThumperCallingUsingSenderIdentityCapabilitiesState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supportsThumperCallingUsingSenderIdentityCapabilitiesState:");
}

id objc_msgSend__supportslaunchingInCallApplicationForIncomingCall(void *a1, const char *a2, ...)
{
  return _[a1 _supportslaunchingInCallApplicationForIncomingCall];
}

id objc_msgSend__switchFromFailureReasonToDisconnectedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switchFromFailureReasonToDisconnectedReason:");
}

id objc_msgSend__switchToCXCallFailureReasonFromTUCallDisconnectedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switchToCXCallFailureReasonFromTUCallDisconnectedReason:");
}

id objc_msgSend__trackListenedActivityType_dynamicIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackListenedActivityType:dynamicIdentifier:");
}

id objc_msgSend__transferFileAtURL_forSession_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transferFileAtURL:forSession:request:");
}

id objc_msgSend__unregisterForPushTokenWithType_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unregisterForPushTokenWithType:client:");
}

id objc_msgSend__unregisterPushApplication_inEnvironment_pushType_destroyApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unregisterPushApplication:inEnvironment:pushType:destroyApp:");
}

id objc_msgSend__unregisterUninstalledProvidersAndNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unregisterUninstalledProvidersAndNotify:");
}

id objc_msgSend__unregisterUserActivityType_dynamicActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unregisterUserActivityType:dynamicActivityType:");
}

id objc_msgSend__untrackListenedActivityType_dynamicIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_untrackListenedActivityType:dynamicIdentifier:");
}

id objc_msgSend__untrackListenedActivityType_matchingDynamicIdentifierSubstring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_untrackListenedActivityType:matchingDynamicIdentifierSubstring:");
}

id objc_msgSend__update(void *a1, const char *a2, ...)
{
  return _[a1 _update];
}

id objc_msgSend__updateBluetoothAudioFormatIfNecessaryDueToMVMChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:");
}

id objc_msgSend__updateCTCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _updateCTCapabilities];
}

id objc_msgSend__updateCallAvailability(void *a1, const char *a2, ...)
{
  return _[a1 _updateCallAvailability];
}

id objc_msgSend__updateCallCapabilitiesForSubscription_capabilitiesState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCallCapabilitiesForSubscription:capabilitiesState:");
}

id objc_msgSend__updateCallMutingForHoldMusic(void *a1, const char *a2, ...)
{
  return _[a1 _updateCallMutingForHoldMusic];
}

id objc_msgSend__updateCarPlayDeviceConnected(void *a1, const char *a2, ...)
{
  return _[a1 _updateCarPlayDeviceConnected];
}

id objc_msgSend__updateClientsWithState(void *a1, const char *a2, ...)
{
  return _[a1 _updateClientsWithState];
}

id objc_msgSend__updateCurrentOrientationValue(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentOrientationValue];
}

id objc_msgSend__updateCurrentlyBroadcastedActivity(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentlyBroadcastedActivity];
}

id objc_msgSend__updateDefaultPairedDeviceUniqueIDDefault(void *a1, const char *a2, ...)
{
  return _[a1 _updateDefaultPairedDeviceUniqueIDDefault];
}

id objc_msgSend__updateDialingIDSDeviceWithHostIDSIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDialingIDSDeviceWithHostIDSIdentifier:");
}

id objc_msgSend__updateDynamicCapabilitiesAndUpdateClients(void *a1, const char *a2, ...)
{
  return _[a1 _updateDynamicCapabilitiesAndUpdateClients];
}

id objc_msgSend__updateEmergencyCallbackModeEnabledState(void *a1, const char *a2, ...)
{
  return _[a1 _updateEmergencyCallbackModeEnabledState];
}

id objc_msgSend__updateHostingAndDisplayingSupport(void *a1, const char *a2, ...)
{
  return _[a1 _updateHostingAndDisplayingSupport];
}

id objc_msgSend__updateOutgoingCallerID(void *a1, const char *a2, ...)
{
  return _[a1 _updateOutgoingCallerID];
}

id objc_msgSend__updateParticipantDestinationIDForParticipant_members_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateParticipantDestinationIDForParticipant:members:");
}

id objc_msgSend__updateParticipantTypesForAddedParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateParticipantTypesForAddedParticipant:");
}

id objc_msgSend__updatePickableRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _updatePickableRoutes];
}

id objc_msgSend__updateProviderForConnectedChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProviderForConnectedChat:");
}

id objc_msgSend__updateProviderForEndedChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProviderForEndedChat:");
}

id objc_msgSend__updateProvidersByIdentifierAndNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProvidersByIdentifierAndNotify:");
}

id objc_msgSend__updateRelayCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _updateRelayCapabilities];
}

id objc_msgSend__updateRoutesForDisconnectedCall(void *a1, const char *a2, ...)
{
  return _[a1 _updateRoutesForDisconnectedCall];
}

id objc_msgSend__updateSessionPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _updateSessionPreferences];
}

id objc_msgSend__updateState(void *a1, const char *a2, ...)
{
  return _[a1 _updateState];
}

id objc_msgSend__updateSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 _updateSubscriptions];
}

id objc_msgSend__updateSystemCapabilitiesStateForSubscription_capabilitiesState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSystemCapabilitiesStateForSubscription:capabilitiesState:");
}

id objc_msgSend__updateThumperAccountState(void *a1, const char *a2, ...)
{
  return _[a1 _updateThumperAccountState];
}

id objc_msgSend__updateThumperCallingPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _updateThumperCallingPreferences];
}

id objc_msgSend__updatedQOSBlockForBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatedQOSBlockForBlock:");
}

id objc_msgSend__userActivityTypeStringForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userActivityTypeStringForActivityType:");
}

id objc_msgSend__waitForCallSourceWithIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_waitForCallSourceWithIdentifier:completion:");
}

id objc_msgSend__xpcClientForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_xpcClientForConnection:");
}

id objc_msgSend_aTVHandoff(void *a1, const char *a2, ...)
{
  return _[a1 aTVHandoff];
}

id objc_msgSend_aaDeviceManager(void *a1, const char *a2, ...)
{
  return _[a1 aaDeviceManager];
}

id objc_msgSend_aaDevicesDidChange(void *a1, const char *a2, ...)
{
  return _[a1 aaDevicesDidChange];
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_abTestConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 abTestConfiguration];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accelerometer(void *a1, const char *a2, ...)
{
  return _[a1 accelerometer];
}

id objc_msgSend_acceptInvitation(void *a1, const char *a2, ...)
{
  return _[a1 acceptInvitation];
}

id objc_msgSend_acceptInvitationWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptInvitationWithData:");
}

id objc_msgSend_acceptPayloadData(void *a1, const char *a2, ...)
{
  return _[a1 acceptPayloadData];
}

id objc_msgSend_accessGroupName(void *a1, const char *a2, ...)
{
  return _[a1 accessGroupName];
}

id objc_msgSend_accessoryButtonEventsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 accessoryButtonEventsEnabled];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_account_aliasesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "account:aliasesChanged:");
}

id objc_msgSend_accountDescription(void *a1, const char *a2, ...)
{
  return _[a1 accountDescription];
}

id objc_msgSend_accountForTelephonySubscriptionLabelIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountForTelephonySubscriptionLabelIdentifier:");
}

id objc_msgSend_accountID(void *a1, const char *a2, ...)
{
  return _[a1 accountID];
}

id objc_msgSend_accountISOCountryCodeForSubscriptionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountISOCountryCodeForSubscriptionUUID:");
}

id objc_msgSend_accountInfo(void *a1, const char *a2, ...)
{
  return _[a1 accountInfo];
}

id objc_msgSend_accountMatchingSimIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountMatchingSimIdentifier:");
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return _[a1 accountStore];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accountUUID(void *a1, const char *a2, ...)
{
  return _[a1 accountUUID];
}

id objc_msgSend_accountUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 accountUUIDString];
}

id objc_msgSend_accountWithCallerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountWithCallerID:");
}

id objc_msgSend_accountWithUUID_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountWithUUID:service:");
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_accountsChanged(void *a1, const char *a2, ...)
{
  return _[a1 accountsChanged];
}

id objc_msgSend_accountsController(void *a1, const char *a2, ...)
{
  return _[a1 accountsController];
}

id objc_msgSend_accountsMatchForSecondaryCalling(void *a1, const char *a2, ...)
{
  return _[a1 accountsMatchForSecondaryCalling];
}

id objc_msgSend_accountsSupportSecondaryCalling(void *a1, const char *a2, ...)
{
  return _[a1 accountsSupportSecondaryCalling];
}

id objc_msgSend_acquire(void *a1, const char *a2, ...)
{
  return _[a1 acquire];
}

id objc_msgSend_acquireAssertionIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 acquireAssertionIfNecessary];
}

id objc_msgSend_acquireIndefiniteProcessAssertionForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireIndefiniteProcessAssertionForCall:");
}

id objc_msgSend_acquireProcessAssertionForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireProcessAssertionForBundleIdentifier:");
}

id objc_msgSend_acquireTemporaryProcessAssertionForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireTemporaryProcessAssertionForCall:");
}

id objc_msgSend_acquireWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWithCompletionHandler:");
}

id objc_msgSend_acquireWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWithError:");
}

id objc_msgSend_actionDescription(void *a1, const char *a2, ...)
{
  return _[a1 actionDescription];
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_activateConversationNoticeWithActionURL_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConversationNoticeWithActionURL:bundleIdentifier:");
}

id objc_msgSend_activateLink_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateLink:completionHandler:");
}

id objc_msgSend_activateLinkForPseudonym_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateLinkForPseudonym:completionHandler:");
}

id objc_msgSend_activateLinkForPseudonym_updateGroupUUID_updateInvitedHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateLinkForPseudonym:updateGroupUUID:updateInvitedHandles:");
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletion:");
}

id objc_msgSend_activatedConversationLinksWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activatedConversationLinksWithError:");
}

id objc_msgSend_activatedLinkForJoinCallAction_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activatedLinkForJoinCallAction:withError:");
}

id objc_msgSend_activatedLinksWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activatedLinksWithCompletionHandler:");
}

id objc_msgSend_activeAccountsChangedForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeAccountsChangedForService:");
}

id objc_msgSend_activeApprovedConversationWithLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeApprovedConversationWithLink:");
}

id objc_msgSend_activeConference(void *a1, const char *a2, ...)
{
  return _[a1 activeConference];
}

id objc_msgSend_activeConferenceConnectionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConferenceConnectionForIdentifier:");
}

id objc_msgSend_activeContexts(void *a1, const char *a2, ...)
{
  return _[a1 activeContexts];
}

id objc_msgSend_activeConversation(void *a1, const char *a2, ...)
{
  return _[a1 activeConversation];
}

id objc_msgSend_activeConversationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationForCall:");
}

id objc_msgSend_activeConversationForCall_backedByGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationForCall:backedByGroupSession:");
}

id objc_msgSend_activeConversationWithGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationWithGroupUUID:");
}

id objc_msgSend_activeConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeConversationWithUUID:");
}

id objc_msgSend_activeConversations(void *a1, const char *a2, ...)
{
  return _[a1 activeConversations];
}

id objc_msgSend_activeIDSDestination(void *a1, const char *a2, ...)
{
  return _[a1 activeIDSDestination];
}

id objc_msgSend_activeInterfaceOrientationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeInterfaceOrientationWithCompletion:");
}

id objc_msgSend_activeLightweightParticipantDestinationsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activeLightweightParticipantDestinationsByIdentifier];
}

id objc_msgSend_activeLightweightParticipants(void *a1, const char *a2, ...)
{
  return _[a1 activeLightweightParticipants];
}

id objc_msgSend_activeLightweightParticipantsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeLightweightParticipantsAtIndex:");
}

id objc_msgSend_activeLightweightParticipantsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activeLightweightParticipantsByIdentifier];
}

id objc_msgSend_activeLightweightParticipantsCount(void *a1, const char *a2, ...)
{
  return _[a1 activeLightweightParticipantsCount];
}

id objc_msgSend_activeLocalHandles(void *a1, const char *a2, ...)
{
  return _[a1 activeLocalHandles];
}

id objc_msgSend_activeLocalHandlesForProvider(void *a1, const char *a2, ...)
{
  return _[a1 activeLocalHandlesForProvider];
}

id objc_msgSend_activeParticipantDestinationsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activeParticipantDestinationsByIdentifier];
}

id objc_msgSend_activeParticipantPruningTimeout(void *a1, const char *a2, ...)
{
  return _[a1 activeParticipantPruningTimeout];
}

id objc_msgSend_activeParticipantRefreshDelay(void *a1, const char *a2, ...)
{
  return _[a1 activeParticipantRefreshDelay];
}

id objc_msgSend_activeParticipants(void *a1, const char *a2, ...)
{
  return _[a1 activeParticipants];
}

id objc_msgSend_activeParticipantsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeParticipantsAtIndex:");
}

id objc_msgSend_activeParticipantsCount(void *a1, const char *a2, ...)
{
  return _[a1 activeParticipantsCount];
}

id objc_msgSend_activePersistedChannelIdentity(void *a1, const char *a2, ...)
{
  return _[a1 activePersistedChannelIdentity];
}

id objc_msgSend_activePersistedChannelIdentityChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activePersistedChannelIdentityChangedTo:");
}

id objc_msgSend_activeRemoteParticipant(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipant];
}

id objc_msgSend_activeRemoteParticipantCXHandles(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipantCXHandles];
}

id objc_msgSend_activeRemoteParticipantCountMinusEligibleAVLess(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipantCountMinusEligibleAVLess];
}

id objc_msgSend_activeRemoteParticipantForCallUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeRemoteParticipantForCallUpdate:");
}

id objc_msgSend_activeRemoteParticipantHandles(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipantHandles];
}

id objc_msgSend_activeRemoteParticipants(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipants];
}

id objc_msgSend_activeRemoteParticipantsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeRemoteParticipantsAtIndex:");
}

id objc_msgSend_activeRemoteParticipantsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipantsByIdentifier];
}

id objc_msgSend_activeRemoteParticipantsCount(void *a1, const char *a2, ...)
{
  return _[a1 activeRemoteParticipantsCount];
}

id objc_msgSend_activeRequestCount(void *a1, const char *a2, ...)
{
  return _[a1 activeRequestCount];
}

id objc_msgSend_activeRequestsByTransactionID(void *a1, const char *a2, ...)
{
  return _[a1 activeRequestsByTransactionID];
}

id objc_msgSend_activeSessionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeSessionForIdentifier:");
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _[a1 activity];
}

id objc_msgSend_activityAuthorizationManager(void *a1, const char *a2, ...)
{
  return _[a1 activityAuthorizationManager];
}

id objc_msgSend_activityAuthorizedBundleIdentifierState(void *a1, const char *a2, ...)
{
  return _[a1 activityAuthorizedBundleIdentifierState];
}

id objc_msgSend_activityCommunicator(void *a1, const char *a2, ...)
{
  return _[a1 activityCommunicator];
}

id objc_msgSend_activityContext(void *a1, const char *a2, ...)
{
  return _[a1 activityContext];
}

id objc_msgSend_activityContextWithDescriptionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityContextWithDescriptionIdentifier:");
}

id objc_msgSend_activityContextWithTUActivityContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityContextWithTUActivityContext:");
}

id objc_msgSend_activityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifier];
}

id objc_msgSend_activityMetadata(void *a1, const char *a2, ...)
{
  return _[a1 activityMetadata];
}

id objc_msgSend_activityMetadataWithDataBlob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityMetadataWithDataBlob:");
}

id objc_msgSend_activityQueue(void *a1, const char *a2, ...)
{
  return _[a1 activityQueue];
}

id objc_msgSend_activitySession(void *a1, const char *a2, ...)
{
  return _[a1 activitySession];
}

id objc_msgSend_activitySessionManager(void *a1, const char *a2, ...)
{
  return _[a1 activitySessionManager];
}

id objc_msgSend_activitySessionManager_activitySessionChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessionManager:activitySessionChanged:");
}

id objc_msgSend_activitySessionParticipantMonitor(void *a1, const char *a2, ...)
{
  return _[a1 activitySessionParticipantMonitor];
}

id objc_msgSend_activitySessionWithCSDConversationActivitySession_fromConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessionWithCSDConversationActivitySession:fromConversation:");
}

id objc_msgSend_activitySessionWithCSDConversationActivitySession_fromConversation_forStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessionWithCSDConversationActivitySession:fromConversation:forStorage:");
}

id objc_msgSend_activitySessionWithTUConversationActivitySession_fromConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessionWithTUConversationActivitySession:fromConversation:");
}

id objc_msgSend_activitySessionWithTUConversationActivitySession_fromConversation_forStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessionWithTUConversationActivitySession:fromConversation:forStorage:");
}

id objc_msgSend_activitySessions(void *a1, const char *a2, ...)
{
  return _[a1 activitySessions];
}

id objc_msgSend_activitySessionsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activitySessionsAtIndex:");
}

id objc_msgSend_activitySessionsCount(void *a1, const char *a2, ...)
{
  return _[a1 activitySessionsCount];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_activityTypeForUserActivityTypeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTypeForUserActivityTypeString:");
}

id objc_msgSend_activityTypeRequiresBestAppSuggestionListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTypeRequiresBestAppSuggestionListener:");
}

id objc_msgSend_activityTypeSupportsDynamicIdentifierRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTypeSupportsDynamicIdentifierRegistration:");
}

id objc_msgSend_activityWithCSDConversationActivity_fromConversation_forStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityWithCSDConversationActivity:fromConversation:forStorage:");
}

id objc_msgSend_activityWithTUConversationActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityWithTUConversationActivity:");
}

id objc_msgSend_activityWithType_dynamicIdentifier_userInfo_originatingDeviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityWithType:dynamicIdentifier:userInfo:originatingDeviceType:");
}

id objc_msgSend_addAction_toUncommittedTransactionForCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:toUncommittedTransactionForCallSource:");
}

id objc_msgSend_addAction_toUncommittedTransactionForChannelSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:toUncommittedTransactionForChannelSource:");
}

id objc_msgSend_addActiveLightweightParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActiveLightweightParticipants:");
}

id objc_msgSend_addActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActiveParticipant:");
}

id objc_msgSend_addActiveParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActiveParticipants:");
}

id objc_msgSend_addActiveRemoteParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActiveRemoteParticipants:");
}

id objc_msgSend_addActivitySessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActivitySessions:");
}

id objc_msgSend_addAddedMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAddedMembers:");
}

id objc_msgSend_addAlias_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAlias:");
}

id objc_msgSend_addAliasesToConversationContainer_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAliasesToConversationContainer:forBundleIdentifier:");
}

id objc_msgSend_addAliasesToConversationContainer_withSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAliasesToConversationContainer:withSalt:");
}

id objc_msgSend_addBarrierBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBarrierBlock:");
}

id objc_msgSend_addCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCall:");
}

id objc_msgSend_addCallAllowed(void *a1, const char *a2, ...)
{
  return _[a1 addCallAllowed];
}

id objc_msgSend_addCallDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCallDescriptor:");
}

id objc_msgSend_addCallFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCallFilter:");
}

id objc_msgSend_addCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCallSource:");
}

id objc_msgSend_addCalls_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCalls:forIdentifier:");
}

id objc_msgSend_addClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClient:");
}

id objc_msgSend_addCollaborationDictionary_forConversationWithUUID_fromMe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCollaborationDictionary:forConversationWithUUID:fromMe:");
}

id objc_msgSend_addContactIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContactIdentifiers:");
}

id objc_msgSend_addConversationMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConversationMembers:");
}

id objc_msgSend_addConversations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConversations:");
}

id objc_msgSend_addDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:");
}

id objc_msgSend_addDelegate_forService_listenerID_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:forService:listenerID:queue:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDelegate_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:withQueue:");
}

id objc_msgSend_addDisclosedCollaborationInitiator_toConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDisclosedCollaborationInitiator:toConversationUUID:");
}

id objc_msgSend_addEmergencyHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEmergencyHandles:");
}

id objc_msgSend_addEmergencyLabeledHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEmergencyLabeledHandles:");
}

id objc_msgSend_addEndpointIDSDestinationURIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointIDSDestinationURIs:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addFirewallEntriesForHandleToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFirewallEntriesForHandleToDate:");
}

id objc_msgSend_addFirewallEntriesForHandles_lastSeenDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFirewallEntriesForHandles:lastSeenDate:");
}

id objc_msgSend_addGenerateDescriptorInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGenerateDescriptorInfos:");
}

id objc_msgSend_addGeneratorDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGeneratorDescriptors:");
}

id objc_msgSend_addHandlesToInvite_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandlesToInvite:");
}

id objc_msgSend_addHandoffIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandoffIdentifier:");
}

id objc_msgSend_addHighlightIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHighlightIdentifier:");
}

id objc_msgSend_addHighlightIdentifier_collaborationURL_cloudKitAppBundleIDs_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHighlightIdentifier:collaborationURL:cloudKitAppBundleIDs:forConversationUUID:");
}

id objc_msgSend_addIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIdentifier:");
}

id objc_msgSend_addIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIdentifiers:");
}

id objc_msgSend_addInvitationPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInvitationPreferences:");
}

id objc_msgSend_addInvitedHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInvitedHandles:");
}

id objc_msgSend_addInvitedHandles_pseudonym_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInvitedHandles:pseudonym:completionHandler:");
}

id objc_msgSend_addInvitedMemberHandles_toConversationLink_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInvitedMemberHandles:toConversationLink:completionHandler:");
}

id objc_msgSend_addInvitedMemberHandlesFromAddedRemoteMembers_toConversationLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInvitedMemberHandlesFromAddedRemoteMembers:toConversationLink:");
}

id objc_msgSend_addLightweightMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLightweightMembers:");
}

id objc_msgSend_addLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLink:");
}

id objc_msgSend_addListenerID_capabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListenerID:capabilities:");
}

id objc_msgSend_addListenerID_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addListenerID:forService:");
}

id objc_msgSend_addLocalClientObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLocalClientObject:");
}

id objc_msgSend_addMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMembers:");
}

id objc_msgSend_addMembers_toExistingMembers_activeParticipants_activitySessions_link_otherInvitedHandles_report_invitationPreferences_requiredCapabilities_messagesGroupUUID_messagesGroupName_addingFromLetMeIn_triggeredLocally_highlightIdentifier_stagedActivitySession_avMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMembers:toExistingMembers:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:requiredCapabilities:messagesGroupUUID:messagesGroupName:addingFromLetMeIn:triggeredLocally:highlightIdentifier:stagedActivitySession:avMode:");
}

id objc_msgSend_addMembers_toExistingMembers_participantDestinationIDs_webDestinationIDs_activeParticipants_activitySessions_link_otherInvitedHandles_report_invitationPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMembers:toExistingMembers:participantDestinationIDs:webDestinationIDs:activeParticipants:activitySessions:link:otherInvitedHandles:report:invitationPreferences:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:queue:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserver_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:withQueue:");
}

id objc_msgSend_addOrUpdateCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOrUpdateCall:");
}

id objc_msgSend_addOtherInvitedHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOtherInvitedHandles:");
}

id objc_msgSend_addOtherUniqueProxyIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOtherUniqueProxyIdentifiers:");
}

id objc_msgSend_addOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutput:");
}

id objc_msgSend_addOutstandingMessage_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutstandingMessage:forBundleIdentifier:");
}

id objc_msgSend_addParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addParticipant:");
}

id objc_msgSend_addParticipant_withVideoEnabled_audioPaused_screenEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addParticipant:withVideoEnabled:audioPaused:screenEnabled:");
}

id objc_msgSend_addParticipantFromQRTime(void *a1, const char *a2, ...)
{
  return _[a1 addParticipantFromQRTime];
}

id objc_msgSend_addPendingMembers_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingMembers:triggeredLocally:");
}

id objc_msgSend_addPrioritizedSenderIdentities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPrioritizedSenderIdentities:");
}

id objc_msgSend_addProminenceEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProminenceEntry:");
}

id objc_msgSend_addProtoCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProtoCall:");
}

id objc_msgSend_addProtoSupportedHandleType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProtoSupportedHandleType:");
}

id objc_msgSend_addProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 addProtocolVersion];
}

id objc_msgSend_addProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProviders:");
}

id objc_msgSend_addPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPseudonym:");
}

id objc_msgSend_addPseudonym_forCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPseudonym:forCallUUID:");
}

id objc_msgSend_addRegistrationDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRegistrationDelegate:queue:");
}

id objc_msgSend_addRemoteMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteMembers:");
}

id objc_msgSend_addRemoteMembers_otherInvitedHandles_invitationPreferences_addingFromLetMeIn_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteMembers:otherInvitedHandles:invitationPreferences:addingFromLetMeIn:triggeredLocally:");
}

id objc_msgSend_addRemoteMembers_otherInvitedHandles_toConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteMembers:otherInvitedHandles:toConversation:");
}

id objc_msgSend_addRemoteMembers_otherInvitedHandles_toConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteMembers:otherInvitedHandles:toConversationWithUUID:");
}

id objc_msgSend_addRemoteMembers_otherInvitedHandles_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteMembers:otherInvitedHandles:triggeredLocally:");
}

id objc_msgSend_addRemoteParticipantHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemoteParticipantHandles:");
}

id objc_msgSend_addRemovedMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRemovedMembers:");
}

id objc_msgSend_addReporter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addReporter:");
}

id objc_msgSend_addRequiredCapabilities_requiredLackOfCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRequiredCapabilities:requiredLackOfCapabilities:");
}

id objc_msgSend_addResourceWithType_fileURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addResourceWithType:fileURL:options:");
}

id objc_msgSend_addRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRoutes:");
}

id objc_msgSend_addScreenSharingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScreenSharingRequest:");
}

id objc_msgSend_addScreenSharingType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScreenSharingType:");
}

id objc_msgSend_addScreenSharingType_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScreenSharingType:forConversationUUID:");
}

id objc_msgSend_addSecondaryThumperDeviceWithIDSDeviceIdentifier_toSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSecondaryThumperDeviceWithIDSDeviceIdentifier:toSubscription:");
}

id objc_msgSend_addServiceDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addServiceDelegate:queue:");
}

id objc_msgSend_addThumperRegisteredDeviceID_forThumperAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addThumperRegisteredDeviceID:forThumperAccountID:");
}

id objc_msgSend_addToCallHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToCallHistory:");
}

id objc_msgSend_addUserInfoEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUserInfoEntriesFromDictionary:");
}

id objc_msgSend_addUserNotification_listener_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUserNotification:listener:completionHandler:");
}

id objc_msgSend_addVirtualParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVirtualParticipant:");
}

id objc_msgSend_addVoIPApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVoIPApplication:");
}

id objc_msgSend_addedHandoffParticipantToTime(void *a1, const char *a2, ...)
{
  return _[a1 addedHandoffParticipantToTime];
}

id objc_msgSend_addedHandoffParticipants(void *a1, const char *a2, ...)
{
  return _[a1 addedHandoffParticipants];
}

id objc_msgSend_addedMembers(void *a1, const char *a2, ...)
{
  return _[a1 addedMembers];
}

id objc_msgSend_addedMembersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addedMembersAtIndex:");
}

id objc_msgSend_addedMembersCount(void *a1, const char *a2, ...)
{
  return _[a1 addedMembersCount];
}

id objc_msgSend_addedRemoteParticipantWithIdentifier_updatedAudioEnabled_updatedVideoEnabled_streamToken_screenToken_captionsToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addedRemoteParticipantWithIdentifier:updatedAudioEnabled:updatedVideoEnabled:streamToken:screenToken:captionsToken:");
}

id objc_msgSend_aliasStrings(void *a1, const char *a2, ...)
{
  return _[a1 aliasStrings];
}

id objc_msgSend_aliases(void *a1, const char *a2, ...)
{
  return _[a1 aliases];
}

id objc_msgSend_allActions(void *a1, const char *a2, ...)
{
  return _[a1 allActions];
}

id objc_msgSend_allActiveConversationParticipantsSupportSharePlay(void *a1, const char *a2, ...)
{
  return _[a1 allActiveConversationParticipantsSupportSharePlay];
}

id objc_msgSend_allAliases(void *a1, const char *a2, ...)
{
  return _[a1 allAliases];
}

id objc_msgSend_allCallHistoryDeleted(void *a1, const char *a2, ...)
{
  return _[a1 allCallHistoryDeleted];
}

id objc_msgSend_allCalls(void *a1, const char *a2, ...)
{
  return _[a1 allCalls];
}

id objc_msgSend_allCallsBackgroundedForReportingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCallsBackgroundedForReportingController:");
}

id objc_msgSend_allCallsPassTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCallsPassTest:");
}

id objc_msgSend_allConversationHandoffDynamicIdentifierPossibilitiesForGroupUUID_participantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allConversationHandoffDynamicIdentifierPossibilitiesForGroupUUID:participantIdentifier:");
}

id objc_msgSend_allIDSTelephonyDevices(void *a1, const char *a2, ...)
{
  return _[a1 allIDSTelephonyDevices];
}

id objc_msgSend_allIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 allIdentifiers];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allParticipantsSupportSharePlay(void *a1, const char *a2, ...)
{
  return _[a1 allParticipantsSupportSharePlay];
}

id objc_msgSend_allTUConversationMembers(void *a1, const char *a2, ...)
{
  return _[a1 allTUConversationMembers];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowAnyNetwork(void *a1, const char *a2, ...)
{
  return _[a1 allowAnyNetwork];
}

id objc_msgSend_allowCallForDestinationID(void *a1, const char *a2, ...)
{
  return _[a1 allowCallForDestinationID];
}

id objc_msgSend_allowCallForDestinationID_providerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowCallForDestinationID:providerIdentifier:");
}

id objc_msgSend_allowMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowMember:");
}

id objc_msgSend_allowParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowParticipants:");
}

id objc_msgSend_allowScreenSharing(void *a1, const char *a2, ...)
{
  return _[a1 allowScreenSharing];
}

id objc_msgSend_allowScreenSharingInitiation(void *a1, const char *a2, ...)
{
  return _[a1 allowScreenSharingInitiation];
}

id objc_msgSend_allowSharePlay(void *a1, const char *a2, ...)
{
  return _[a1 allowSharePlay];
}

id objc_msgSend_allowedSecondaryDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 allowedSecondaryDeviceIDs];
}

id objc_msgSend_allowsScreenSharing(void *a1, const char *a2, ...)
{
  return _[a1 allowsScreenSharing];
}

id objc_msgSend_allowsScreenSharingBlock(void *a1, const char *a2, ...)
{
  return _[a1 allowsScreenSharingBlock];
}

id objc_msgSend_allowsVideo(void *a1, const char *a2, ...)
{
  return _[a1 allowsVideo];
}

id objc_msgSend_ambiguityState(void *a1, const char *a2, ...)
{
  return _[a1 ambiguityState];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_announceCalls(void *a1, const char *a2, ...)
{
  return _[a1 announceCalls];
}

id objc_msgSend_announceCallsPlatform(void *a1, const char *a2, ...)
{
  return _[a1 announceCallsPlatform];
}

id objc_msgSend_announceCallsProviderIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 announceCallsProviderIdentifier];
}

id objc_msgSend_announceProviderIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 announceProviderIdentifier];
}

id objc_msgSend_answerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerCall:");
}

id objc_msgSend_answerCall_withRequest_whileDisconnectingActiveCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerCall:withRequest:whileDisconnectingActiveCalls:");
}

id objc_msgSend_answerCall_withRequest_whileDisconnectingHeldCalls_andHoldingCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerCall:withRequest:whileDisconnectingHeldCalls:andHoldingCalls:");
}

id objc_msgSend_answerCall_withRequest_whileHoldingActiveCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerCall:withRequest:whileHoldingActiveCalls:");
}

id objc_msgSend_answerRTTCallsAsMuted(void *a1, const char *a2, ...)
{
  return _[a1 answerRTTCallsAsMuted];
}

id objc_msgSend_answerWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerWithRequest:");
}

id objc_msgSend_answerWithVideoAspectRatioDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "answerWithVideoAspectRatioDescriptor:");
}

id objc_msgSend_answeringMachineController(void *a1, const char *a2, ...)
{
  return _[a1 answeringMachineController];
}

id objc_msgSend_answeringMachineStreamToken(void *a1, const char *a2, ...)
{
  return _[a1 answeringMachineStreamToken];
}

id objc_msgSend_anyActiveAccount(void *a1, const char *a2, ...)
{
  return _[a1 anyActiveAccount];
}

id objc_msgSend_anyActiveParticipantHasAV(void *a1, const char *a2, ...)
{
  return _[a1 anyActiveParticipantHasAV];
}

id objc_msgSend_anyCallIsEndpointOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 anyCallIsEndpointOnCurrentDevice];
}

id objc_msgSend_anyCallPassesTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyCallPassesTest:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appHistoryActivityWithTitle_subtitle_keywords_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appHistoryActivityWithTitle:subtitle:keywords:userInfo:");
}

id objc_msgSend_appProtectionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 appProtectionEnabled];
}

id objc_msgSend_appShouldUseDeprecatedCallingIntents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appShouldUseDeprecatedCallingIntents:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleAccountRebrandEnabled(void *a1, const char *a2, ...)
{
  return _[a1 appleAccountRebrandEnabled];
}

id objc_msgSend_applicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationBundleIdentifier];
}

id objc_msgSend_applicationContext(void *a1, const char *a2, ...)
{
  return _[a1 applicationContext];
}

id objc_msgSend_applicationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifier];
}

id objc_msgSend_applicationInstallationObserver(void *a1, const char *a2, ...)
{
  return _[a1 applicationInstallationObserver];
}

id objc_msgSend_applicationLaunchPolicyManager(void *a1, const char *a2, ...)
{
  return _[a1 applicationLaunchPolicyManager];
}

id objc_msgSend_applicationLauncher(void *a1, const char *a2, ...)
{
  return _[a1 applicationLauncher];
}

id objc_msgSend_applicationMonitor(void *a1, const char *a2, ...)
{
  return _[a1 applicationMonitor];
}

id objc_msgSend_applicationPolicyManager(void *a1, const char *a2, ...)
{
  return _[a1 applicationPolicyManager];
}

id objc_msgSend_applicationRecord(void *a1, const char *a2, ...)
{
  return _[a1 applicationRecord];
}

id objc_msgSend_applicationShouldPostIncomingCall(void *a1, const char *a2, ...)
{
  return _[a1 applicationShouldPostIncomingCall];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationStateForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationStateForApplication:");
}

id objc_msgSend_applicationStateForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationStateForBundleIdentifier:");
}

id objc_msgSend_applicationStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 applicationStateMonitor];
}

id objc_msgSend_approvePendingMember_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "approvePendingMember:forConversationUUID:");
}

id objc_msgSend_approvedSecondaryDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 approvedSecondaryDeviceIDs];
}

id objc_msgSend_approverHandle(void *a1, const char *a2, ...)
{
  return _[a1 approverHandle];
}

id objc_msgSend_archivedDataWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithError:");
}

id objc_msgSend_areCTCapabilitiesValid(void *a1, const char *a2, ...)
{
  return _[a1 areCTCapabilitiesValid];
}

id objc_msgSend_areCapabilitiesValid(void *a1, const char *a2, ...)
{
  return _[a1 areCapabilitiesValid];
}

id objc_msgSend_areRelayCallingFeaturesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 areRelayCallingFeaturesEnabled];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayByApplyingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByApplyingSelector:");
}

id objc_msgSend_arrayOfStringsForKeyHierarchy_subscriptionContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayOfStringsForKeyHierarchy:subscriptionContext:error:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assertion(void *a1, const char *a2, ...)
{
  return _[a1 assertion];
}

id objc_msgSend_assertions(void *a1, const char *a2, ...)
{
  return _[a1 assertions];
}

id objc_msgSend_assetId(void *a1, const char *a2, ...)
{
  return _[a1 assetId];
}

id objc_msgSend_assetReaderTrackOutputWithTrack_outputSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReaderTrackOutputWithTrack:outputSettings:");
}

id objc_msgSend_assetReaderWithAsset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReaderWithAsset:error:");
}

id objc_msgSend_assistantPreferences(void *a1, const char *a2, ...)
{
  return _[a1 assistantPreferences];
}

id objc_msgSend_assistantServicesObserver(void *a1, const char *a2, ...)
{
  return _[a1 assistantServicesObserver];
}

id objc_msgSend_associateCallUUID_withConversationUUID_waitingToJoin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "associateCallUUID:withConversationUUID:waitingToJoin:");
}

id objc_msgSend_associatedPseudonym(void *a1, const char *a2, ...)
{
  return _[a1 associatedPseudonym];
}

id objc_msgSend_associatedThumperAccountID(void *a1, const char *a2, ...)
{
  return _[a1 associatedThumperAccountID];
}

id objc_msgSend_association(void *a1, const char *a2, ...)
{
  return _[a1 association];
}

id objc_msgSend_associationAVCIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 associationAVCIdentifier];
}

id objc_msgSend_associationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 associationIdentifier];
}

id objc_msgSend_associationVoucher(void *a1, const char *a2, ...)
{
  return _[a1 associationVoucher];
}

id objc_msgSend_asynchronousExportedObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 asynchronousExportedObjectProxy];
}

id objc_msgSend_attemptToPlayKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptToPlayKey:");
}

id objc_msgSend_attemptToPlaySoundType_forCall_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptToPlaySoundType:forCall:completion:");
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributeWithDomain_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeWithDomain:name:");
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return _[a1 attributes];
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioAndVideoCallsWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioAndVideoCallsWithStatus:");
}

id objc_msgSend_audioCategory(void *a1, const char *a2, ...)
{
  return _[a1 audioCategory];
}

id objc_msgSend_audioController(void *a1, const char *a2, ...)
{
  return _[a1 audioController];
}

id objc_msgSend_audioDeviceController(void *a1, const char *a2, ...)
{
  return _[a1 audioDeviceController];
}

id objc_msgSend_audioInterruptionOperationMode(void *a1, const char *a2, ...)
{
  return _[a1 audioInterruptionOperationMode];
}

id objc_msgSend_audioInterruptionProvider(void *a1, const char *a2, ...)
{
  return _[a1 audioInterruptionProvider];
}

id objc_msgSend_audioInterruptionProviderType(void *a1, const char *a2, ...)
{
  return _[a1 audioInterruptionProviderType];
}

id objc_msgSend_audioMode(void *a1, const char *a2, ...)
{
  return _[a1 audioMode];
}

id objc_msgSend_audioPriority(void *a1, const char *a2, ...)
{
  return _[a1 audioPriority];
}

id objc_msgSend_audioRouteCollections(void *a1, const char *a2, ...)
{
  return _[a1 audioRouteCollections];
}

id objc_msgSend_audioRoutePolicyManager(void *a1, const char *a2, ...)
{
  return _[a1 audioRoutePolicyManager];
}

id objc_msgSend_audioRouteUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 audioRouteUniqueIdentifier];
}

id objc_msgSend_audioRoutesByParticipantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 audioRoutesByParticipantIdentifier];
}

id objc_msgSend_audioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionID];
}

id objc_msgSend_audioSourceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 audioSourceIdentifier];
}

id objc_msgSend_audioVideoMode(void *a1, const char *a2, ...)
{
  return _[a1 audioVideoMode];
}

id objc_msgSend_authTagSampleRate(void *a1, const char *a2, ...)
{
  return _[a1 authTagSampleRate];
}

id objc_msgSend_authorizedBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 authorizedBundleIdentifiers];
}

id objc_msgSend_autoSharePlayEnabled(void *a1, const char *a2, ...)
{
  return _[a1 autoSharePlayEnabled];
}

id objc_msgSend_automaticCarDNDStatus(void *a1, const char *a2, ...)
{
  return _[a1 automaticCarDNDStatus];
}

id objc_msgSend_automaticNameAndPhotoQueue(void *a1, const char *a2, ...)
{
  return _[a1 automaticNameAndPhotoQueue];
}

id objc_msgSend_avChat(void *a1, const char *a2, ...)
{
  return _[a1 avChat];
}

id objc_msgSend_avLessSharePlayEnabled(void *a1, const char *a2, ...)
{
  return _[a1 avLessSharePlayEnabled];
}

id objc_msgSend_avMode(void *a1, const char *a2, ...)
{
  return _[a1 avMode];
}

id objc_msgSend_availability(void *a1, const char *a2, ...)
{
  return _[a1 availability];
}

id objc_msgSend_availabilityForListenerID_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityForListenerID:forService:");
}

id objc_msgSend_availabilityWithRemoteAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityWithRemoteAvailable:");
}

id objc_msgSend_availableAnnounceCallsRequestTypes(void *a1, const char *a2, ...)
{
  return _[a1 availableAnnounceCallsRequestTypes];
}

id objc_msgSend_availableDeviceSlots(void *a1, const char *a2, ...)
{
  return _[a1 availableDeviceSlots];
}

id objc_msgSend_availableOutgoingRelayCallerIDs(void *a1, const char *a2, ...)
{
  return _[a1 availableOutgoingRelayCallerIDs];
}

id objc_msgSend_avcBlobRecoveryStartedForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avcBlobRecoveryStartedForConversation:");
}

id objc_msgSend_avcBlobRecoveryTimedOutForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avcBlobRecoveryTimedOutForConversation:");
}

id objc_msgSend_avcBlobRequestMessageRetryFailedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avcBlobRequestMessageRetryFailedForConversationGroupUUID:");
}

id objc_msgSend_avcBlobRequestMessageRetryStartedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avcBlobRequestMessageRetryStartedForConversationGroupUUID:");
}

id objc_msgSend_avcBlobRequestMessageRetrySucceededForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avcBlobRequestMessageRetrySucceededForConversationGroupUUID:");
}

id objc_msgSend_avcData(void *a1, const char *a2, ...)
{
  return _[a1 avcData];
}

id objc_msgSend_avcIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 avcIdentifier];
}

id objc_msgSend_avcLocalCaptionsToken(void *a1, const char *a2, ...)
{
  return _[a1 avcLocalCaptionsToken];
}

id objc_msgSend_avcRequest(void *a1, const char *a2, ...)
{
  return _[a1 avcRequest];
}

id objc_msgSend_avcScreenCapture(void *a1, const char *a2, ...)
{
  return _[a1 avcScreenCapture];
}

id objc_msgSend_avcScreenCaptureConfigurationForScreenAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avcScreenCaptureConfigurationForScreenAttributes:");
}

id objc_msgSend_avcSession(void *a1, const char *a2, ...)
{
  return _[a1 avcSession];
}

id objc_msgSend_avcSessionCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 avcSessionCreationBlock];
}

id objc_msgSend_avcSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 avcSessionIdentifier];
}

id objc_msgSend_avcSessionInProgress(void *a1, const char *a2, ...)
{
  return _[a1 avcSessionInProgress];
}

id objc_msgSend_avcSessionParticipantCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 avcSessionParticipantCreationBlock];
}

id objc_msgSend_avcSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 avcSessionToken];
}

id objc_msgSend_backingCallSource(void *a1, const char *a2, ...)
{
  return _[a1 backingCallSource];
}

id objc_msgSend_bargeCallWithUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bargeCallWithUniqueProxyIdentifier:");
}

id objc_msgSend_bargeCalls(void *a1, const char *a2, ...)
{
  return _[a1 bargeCalls];
}

id objc_msgSend_bargeCallsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bargeCallsPassingTest:");
}

id objc_msgSend_baseDestinationID(void *a1, const char *a2, ...)
{
  return _[a1 baseDestinationID];
}

id objc_msgSend_becomeCurrent(void *a1, const char *a2, ...)
{
  return _[a1 becomeCurrent];
}

id objc_msgSend_becomeEndpointForPullFromRemoteDevice(void *a1, const char *a2, ...)
{
  return _[a1 becomeEndpointForPullFromRemoteDevice];
}

id objc_msgSend_beginDailyMaintenanceWithActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginDailyMaintenanceWithActivity:");
}

id objc_msgSend_beginListeningBlock(void *a1, const char *a2, ...)
{
  return _[a1 beginListeningBlock];
}

id objc_msgSend_beginListeningOnService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginListeningOnService:");
}

id objc_msgSend_beginMatchingExtensions(void *a1, const char *a2, ...)
{
  return _[a1 beginMatchingExtensions];
}

id objc_msgSend_beginObserving(void *a1, const char *a2, ...)
{
  return _[a1 beginObserving];
}

id objc_msgSend_beginParticipantConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 beginParticipantConfiguration];
}

id objc_msgSend_beginParticipantUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginParticipantUpdates];
}

id objc_msgSend_beginTransactionIfNecessaryForObject_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTransactionIfNecessaryForObject:withReason:");
}

id objc_msgSend_behavior(void *a1, const char *a2, ...)
{
  return _[a1 behavior];
}

id objc_msgSend_behaviorResolutionService(void *a1, const char *a2, ...)
{
  return _[a1 behaviorResolutionService];
}

id objc_msgSend_bestAppSuggestionManager(void *a1, const char *a2, ...)
{
  return _[a1 bestAppSuggestionManager];
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return _[a1 block];
}

id objc_msgSend_blockCallReasonForHandles_providerIdentifier_callDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockCallReasonForHandles:providerIdentifier:callDataSource:");
}

id objc_msgSend_blockListContainsMembers_providerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockListContainsMembers:providerIdentifier:");
}

id objc_msgSend_blockToExecuteAfterPendingCoalescingBlocksByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 blockToExecuteAfterPendingCoalescingBlocksByIdentifier];
}

id objc_msgSend_blockUtilities(void *a1, const char *a2, ...)
{
  return _[a1 blockUtilities];
}

id objc_msgSend_blockedByExtension(void *a1, const char *a2, ...)
{
  return _[a1 blockedByExtension];
}

id objc_msgSend_blockedByExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockedByExtension:");
}

id objc_msgSend_blocksPendingTransportAvailability(void *a1, const char *a2, ...)
{
  return _[a1 blocksPendingTransportAvailability];
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddress];
}

id objc_msgSend_bluetoothAudioFormat(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAudioFormat];
}

id objc_msgSend_bluetoothEndpointType(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothEndpointType];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_keyExistsAndHasValidFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:keyExistsAndHasValidFormat:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_brailleScreenInputDeterminationHandler(void *a1, const char *a2, ...)
{
  return _[a1 brailleScreenInputDeterminationHandler];
}

id objc_msgSend_breakBeforeMakeTimeout(void *a1, const char *a2, ...)
{
  return _[a1 breakBeforeMakeTimeout];
}

id objc_msgSend_broadcastActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastActivity:");
}

id objc_msgSend_broadcastActivity_withTimeout_shouldPrioritize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastActivity:withTimeout:shouldPrioritize:");
}

id objc_msgSend_broadcastAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastAttributes:");
}

id objc_msgSend_broadcastData_onConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastData:onConversation:");
}

id objc_msgSend_broadcastData_onConversation_additionalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastData:onConversation:additionalOptions:");
}

id objc_msgSend_broadcastFile_onConversation_additionalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastFile:onConversation:additionalOptions:");
}

id objc_msgSend_broadcastImageForSession_onConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastImageForSession:onConversation:");
}

id objc_msgSend_broadcastLightweightEndorsementForAddedMembers_onConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastLightweightEndorsementForAddedMembers:onConversation:");
}

id objc_msgSend_broadcastLocalParticipantData(void *a1, const char *a2, ...)
{
  return _[a1 broadcastLocalParticipantData];
}

id objc_msgSend_bs_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bs_filter:");
}

id objc_msgSend_btHangupObserver(void *a1, const char *a2, ...)
{
  return _[a1 btHangupObserver];
}

id objc_msgSend_budgetStartTime(void *a1, const char *a2, ...)
{
  return _[a1 budgetStartTime];
}

id objc_msgSend_bundleIdFromTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdFromTopic:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleIdentifierForProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifierForProvider:");
}

id objc_msgSend_bundleIdentifierToApplicationState(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierToApplicationState];
}

id objc_msgSend_bundleIdentifierToVoIPApplication(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierToVoIPApplication];
}

id objc_msgSend_bundleIdentifiersForPillDataSource(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifiersForPillDataSource];
}

id objc_msgSend_bundleRecordWithApplicationIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleRecordWithApplicationIdentifier:error:");
}

id objc_msgSend_bundleRecordWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleRecordWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_bundleURLString(void *a1, const char *a2, ...)
{
  return _[a1 bundleURLString];
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_buzzMember_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buzzMember:conversation:");
}

id objc_msgSend_buzzMember_conversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buzzMember:conversationUUID:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_bytesOfDataUsed(void *a1, const char *a2, ...)
{
  return _[a1 bytesOfDataUsed];
}

id objc_msgSend_cachedCallUUIDsToConversationAVMode(void *a1, const char *a2, ...)
{
  return _[a1 cachedCallUUIDsToConversationAVMode];
}

id objc_msgSend_cachedCalls(void *a1, const char *a2, ...)
{
  return _[a1 cachedCalls];
}

id objc_msgSend_cachedChats(void *a1, const char *a2, ...)
{
  return _[a1 cachedChats];
}

id objc_msgSend_cachedDefaultToneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 cachedDefaultToneIdentifier];
}

id objc_msgSend_call(void *a1, const char *a2, ...)
{
  return _[a1 call];
}

id objc_msgSend_callCapabilitiesClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callCapabilitiesClientXPCInterface];
}

id objc_msgSend_callCapabilitiesForCTCallCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callCapabilitiesForCTCallCapabilities:");
}

id objc_msgSend_callCapabilitiesForSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callCapabilitiesForSubscription:");
}

id objc_msgSend_callCapabilitiesServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callCapabilitiesServerXPCInterface];
}

id objc_msgSend_callCapabilitiesState(void *a1, const char *a2, ...)
{
  return _[a1 callCapabilitiesState];
}

id objc_msgSend_callCenter(void *a1, const char *a2, ...)
{
  return _[a1 callCenter];
}

id objc_msgSend_callCenterObserver(void *a1, const char *a2, ...)
{
  return _[a1 callCenterObserver];
}

id objc_msgSend_callClass(void *a1, const char *a2, ...)
{
  return _[a1 callClass];
}

id objc_msgSend_callContainer(void *a1, const char *a2, ...)
{
  return _[a1 callContainer];
}

id objc_msgSend_callController(void *a1, const char *a2, ...)
{
  return _[a1 callController];
}

id objc_msgSend_callControllerHost(void *a1, const char *a2, ...)
{
  return _[a1 callControllerHost];
}

id objc_msgSend_callDataSource(void *a1, const char *a2, ...)
{
  return _[a1 callDataSource];
}

id objc_msgSend_callDirectoryAllowsCallFromSourceAddress(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryAllowsCallFromSourceAddress];
}

id objc_msgSend_callDirectoryAllowsCallFromSourceAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDirectoryAllowsCallFromSourceAddress:");
}

id objc_msgSend_callDirectoryAllowsCallFromSourceAddress_countryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callDirectoryAllowsCallFromSourceAddress:countryCode:");
}

id objc_msgSend_callDirectoryExtensionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryExtensionIdentifier];
}

id objc_msgSend_callDirectoryIdentityExtension(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryIdentityExtension];
}

id objc_msgSend_callDirectoryIdentityType(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryIdentityType];
}

id objc_msgSend_callDirectoryLabel(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryLabel];
}

id objc_msgSend_callDirectoryLocalizedExtensionContainingAppName(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryLocalizedExtensionContainingAppName];
}

id objc_msgSend_callDirectoryManager(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryManager];
}

id objc_msgSend_callDirectoryName(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryName];
}

id objc_msgSend_callDirectorySanitizer(void *a1, const char *a2, ...)
{
  return _[a1 callDirectorySanitizer];
}

id objc_msgSend_callDirectoryStore(void *a1, const char *a2, ...)
{
  return _[a1 callDirectoryStore];
}

id objc_msgSend_callDuration(void *a1, const char *a2, ...)
{
  return _[a1 callDuration];
}

id objc_msgSend_callDurationLimitTimer(void *a1, const char *a2, ...)
{
  return _[a1 callDurationLimitTimer];
}

id objc_msgSend_callDurationUpdateTimer(void *a1, const char *a2, ...)
{
  return _[a1 callDurationUpdateTimer];
}

id objc_msgSend_callFilterController(void *a1, const char *a2, ...)
{
  return _[a1 callFilterController];
}

id objc_msgSend_callForChannelIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForChannelIdentity:");
}

id objc_msgSend_callForChannelIdentity_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForChannelIdentity:configuration:");
}

id objc_msgSend_callForChannelSource_joinAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForChannelSource:joinAction:");
}

id objc_msgSend_callForClient_usingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForClient:usingCall:");
}

id objc_msgSend_callForConversation_withSessionToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForConversation:withSessionToken:");
}

id objc_msgSend_callForConversationWithGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callForConversationWithGroupUUID:");
}

id objc_msgSend_callGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 callGroupUUID];
}

id objc_msgSend_callGroupUUIDToCalls(void *a1, const char *a2, ...)
{
  return _[a1 callGroupUUIDToCalls];
}

id objc_msgSend_callHistoryController(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryController];
}

id objc_msgSend_callHistoryControllerClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryControllerClientXPCInterface];
}

id objc_msgSend_callHistoryControllerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryControllerServerXPCInterface];
}

id objc_msgSend_callHistoryIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryIdentifier];
}

id objc_msgSend_callHistoryManager(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryManager];
}

id objc_msgSend_callHistoryManagerClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryManagerClientXPCInterface];
}

id objc_msgSend_callHistoryManagerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryManagerServerXPCInterface];
}

id objc_msgSend_callHistoryManagerXPCServer(void *a1, const char *a2, ...)
{
  return _[a1 callHistoryManagerXPCServer];
}

id objc_msgSend_callID(void *a1, const char *a2, ...)
{
  return _[a1 callID];
}

id objc_msgSend_callInfoBlob(void *a1, const char *a2, ...)
{
  return _[a1 callInfoBlob];
}

id objc_msgSend_callModel(void *a1, const char *a2, ...)
{
  return _[a1 callModel];
}

id objc_msgSend_callPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callPassingTest:");
}

id objc_msgSend_callProviderManager(void *a1, const char *a2, ...)
{
  return _[a1 callProviderManager];
}

id objc_msgSend_callProviderManagerClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callProviderManagerClientXPCInterface];
}

id objc_msgSend_callProviderManagerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callProviderManagerServerXPCInterface];
}

id objc_msgSend_callProviderManagerXPCServer(void *a1, const char *a2, ...)
{
  return _[a1 callProviderManagerXPCServer];
}

id objc_msgSend_callProviderSupportsSystemControls(void *a1, const char *a2, ...)
{
  return _[a1 callProviderSupportsSystemControls];
}

id objc_msgSend_callRecordingController(void *a1, const char *a2, ...)
{
  return _[a1 callRecordingController];
}

id objc_msgSend_callRecordingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 callRecordingEnabled];
}

id objc_msgSend_callScreenShareAttributesForAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callScreenShareAttributesForAction:");
}

id objc_msgSend_callScreeningEnabled(void *a1, const char *a2, ...)
{
  return _[a1 callScreeningEnabled];
}

id objc_msgSend_callScreeningEnabledM3(void *a1, const char *a2, ...)
{
  return _[a1 callScreeningEnabledM3];
}

id objc_msgSend_callService(void *a1, const char *a2, ...)
{
  return _[a1 callService];
}

id objc_msgSend_callServicesClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callServicesClientXPCInterface];
}

id objc_msgSend_callServicesInterface(void *a1, const char *a2, ...)
{
  return _[a1 callServicesInterface];
}

id objc_msgSend_callServicesServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 callServicesServerXPCInterface];
}

id objc_msgSend_callSource(void *a1, const char *a2, ...)
{
  return _[a1 callSource];
}

id objc_msgSend_callSource_reportedCallWithUUID_endedAtDate_privateReason_failureContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:");
}

id objc_msgSend_callSourceFetcher(void *a1, const char *a2, ...)
{
  return _[a1 callSourceFetcher];
}

id objc_msgSend_callSourceForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callSourceForDialRequest:");
}

id objc_msgSend_callSourceForJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callSourceForJoinConversationRequest:");
}

id objc_msgSend_callSourceManager(void *a1, const char *a2, ...)
{
  return _[a1 callSourceManager];
}

id objc_msgSend_callSourceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callSourceWithIdentifier:");
}

id objc_msgSend_callSources(void *a1, const char *a2, ...)
{
  return _[a1 callSources];
}

id objc_msgSend_callStateContext(void *a1, const char *a2, ...)
{
  return _[a1 callStateContext];
}

id objc_msgSend_callStateController(void *a1, const char *a2, ...)
{
  return _[a1 callStateController];
}

id objc_msgSend_callStatus(void *a1, const char *a2, ...)
{
  return _[a1 callStatus];
}

id objc_msgSend_callSubType(void *a1, const char *a2, ...)
{
  return _[a1 callSubType];
}

id objc_msgSend_callTokens(void *a1, const char *a2, ...)
{
  return _[a1 callTokens];
}

id objc_msgSend_callTypeForJoinContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callTypeForJoinContext:");
}

id objc_msgSend_callUUID(void *a1, const char *a2, ...)
{
  return _[a1 callUUID];
}

id objc_msgSend_callUUIDToGroupWith(void *a1, const char *a2, ...)
{
  return _[a1 callUUIDToGroupWith];
}

id objc_msgSend_callUUIDsByConversationUUID(void *a1, const char *a2, ...)
{
  return _[a1 callUUIDsByConversationUUID];
}

id objc_msgSend_callUUIDsUpgradedForAVMode(void *a1, const char *a2, ...)
{
  return _[a1 callUUIDsUpgradedForAVMode];
}

id objc_msgSend_callUpdate(void *a1, const char *a2, ...)
{
  return _[a1 callUpdate];
}

id objc_msgSend_callUpdateForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callUpdateForChat:");
}

id objc_msgSend_callUpdateForPendingChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callUpdateForPendingChat:");
}

id objc_msgSend_callUpdateWithDefaultValuesSet(void *a1, const char *a2, ...)
{
  return _[a1 callUpdateWithDefaultValuesSet];
}

id objc_msgSend_callWithCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithCallUUID:");
}

id objc_msgSend_callWithStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithStatus:");
}

id objc_msgSend_callWithUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithUniqueProxyIdentifier:");
}

id objc_msgSend_callWithUniqueProxyIdentifier_fromCallsToAnswer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callWithUniqueProxyIdentifier:fromCallsToAnswer:");
}

id objc_msgSend_callbackDestinationID(void *a1, const char *a2, ...)
{
  return _[a1 callbackDestinationID];
}

id objc_msgSend_callbackISOCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 callbackISOCountryCode];
}

id objc_msgSend_callerID(void *a1, const char *a2, ...)
{
  return _[a1 callerID];
}

id objc_msgSend_callerIDForLocalMember_forProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerIDForLocalMember:forProvider:");
}

id objc_msgSend_callerIDHandleForSenderIdentityUUID_callerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callerIDHandleForSenderIdentityUUID:callerID:");
}

id objc_msgSend_callerNameFromNetwork(void *a1, const char *a2, ...)
{
  return _[a1 callerNameFromNetwork];
}

id objc_msgSend_calls(void *a1, const char *a2, ...)
{
  return _[a1 calls];
}

id objc_msgSend_callsForDataSource_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsForDataSource:identifier:");
}

id objc_msgSend_callsHostedElsewhere(void *a1, const char *a2, ...)
{
  return _[a1 callsHostedElsewhere];
}

id objc_msgSend_callsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsPassingTest:");
}

id objc_msgSend_callsWithAnEndpointElsewhere(void *a1, const char *a2, ...)
{
  return _[a1 callsWithAnEndpointElsewhere];
}

id objc_msgSend_callsWithGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsWithGroupUUID:");
}

id objc_msgSend_callsWithPredicate_limit_offset_batchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callsWithPredicate:limit:offset:batchSize:");
}

id objc_msgSend_canBeAnsweredWithAudioOrVideoRelayWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeAnsweredWithAudioOrVideoRelayWithRequest:");
}

id objc_msgSend_canBeAnsweredWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeAnsweredWithRequest:");
}

id objc_msgSend_canCreateConversations(void *a1, const char *a2, ...)
{
  return _[a1 canCreateConversations];
}

id objc_msgSend_canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canOnlyBeAnsweredWithoutAudioOrVideoRelayWithRequest:");
}

id objc_msgSend_canPullBackConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPullBackConversation:");
}

id objc_msgSend_canReceiveMessagesForCallProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canReceiveMessagesForCallProvider:");
}

id objc_msgSend_canReceiveRelayedCalls(void *a1, const char *a2, ...)
{
  return _[a1 canReceiveRelayedCalls];
}

id objc_msgSend_canReceiveRelayedGFTCalls(void *a1, const char *a2, ...)
{
  return _[a1 canReceiveRelayedGFTCalls];
}

id objc_msgSend_canSend(void *a1, const char *a2, ...)
{
  return _[a1 canSend];
}

id objc_msgSend_canUpgradeChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canUpgradeChat:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelCallID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelCallID:");
}

id objc_msgSend_cancelInvitationWithAnsweredElsewhere(void *a1, const char *a2, ...)
{
  return _[a1 cancelInvitationWithAnsweredElsewhere];
}

id objc_msgSend_cancelInvitationWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelInvitationWithData:");
}

id objc_msgSend_cancelInvitationWithDeclinedElsewhere(void *a1, const char *a2, ...)
{
  return _[a1 cancelInvitationWithDeclinedElsewhere];
}

id objc_msgSend_cancelInvitationWithLocalHangup(void *a1, const char *a2, ...)
{
  return _[a1 cancelInvitationWithLocalHangup];
}

id objc_msgSend_cancelInvitationWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelInvitationWithReason:");
}

id objc_msgSend_cancelInvitationWithRemoteEndedReasonOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelInvitationWithRemoteEndedReasonOverride:");
}

id objc_msgSend_cancelOrDeclineInvitation(void *a1, const char *a2, ...)
{
  return _[a1 cancelOrDeclineInvitation];
}

id objc_msgSend_cancelOrDeclineInvitationForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelOrDeclineInvitationForIdentifier:");
}

id objc_msgSend_cancelOrDenyScreenShareRequest_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelOrDenyScreenShareRequest:forConversationUUID:");
}

id objc_msgSend_cancelPinRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelPinRequests];
}

id objc_msgSend_cancelPreviouslySentScreenShareRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviouslySentScreenShareRequests:");
}

id objc_msgSend_cannotBeAnswered(void *a1, const char *a2, ...)
{
  return _[a1 cannotBeAnswered];
}

id objc_msgSend_cannotRelayAudioOrVideo(void *a1, const char *a2, ...)
{
  return _[a1 cannotRelayAudioOrVideo];
}

id objc_msgSend_cannotRelayAudioOrVideoOnPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 cannotRelayAudioOrVideoOnPairedDevice];
}

id objc_msgSend_canonicalizedPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalizedPhoneNumber:");
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return _[a1 capabilities];
}

id objc_msgSend_capabilityInfoForSubscription_capability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capabilityInfoForSubscription:capability:");
}

id objc_msgSend_capabilitySendMessageOptions(void *a1, const char *a2, ...)
{
  return _[a1 capabilitySendMessageOptions];
}

id objc_msgSend_capabilityStateUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capabilityStateUpdated:");
}

id objc_msgSend_captionsToken(void *a1, const char *a2, ...)
{
  return _[a1 captionsToken];
}

id objc_msgSend_captureCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 captureCapabilities];
}

id objc_msgSend_captureSessionCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 captureSessionCreationBlock];
}

id objc_msgSend_captureSessionQueue(void *a1, const char *a2, ...)
{
  return _[a1 captureSessionQueue];
}

id objc_msgSend_capturingLocalVideo(void *a1, const char *a2, ...)
{
  return _[a1 capturingLocalVideo];
}

id objc_msgSend_carPlayManager(void *a1, const char *a2, ...)
{
  return _[a1 carPlayManager];
}

id objc_msgSend_carrierBundleProviderController(void *a1, const char *a2, ...)
{
  return _[a1 carrierBundleProviderController];
}

id objc_msgSend_carrierNumbersForSubscriptionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "carrierNumbersForSubscriptionContext:");
}

id objc_msgSend_carrierPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 carrierPhoneNumbers];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _[a1 category];
}

id objc_msgSend_chManager(void *a1, const char *a2, ...)
{
  return _[a1 chManager];
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_channelClientManager(void *a1, const char *a2, ...)
{
  return _[a1 channelClientManager];
}

id objc_msgSend_channelProviderForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelProviderForIdentifier:");
}

id objc_msgSend_channelProviderManager(void *a1, const char *a2, ...)
{
  return _[a1 channelProviderManager];
}

id objc_msgSend_channelProviderManagerDataSource_didChangeProviderByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelProviderManagerDataSource:didChangeProviderByIdentifier:");
}

id objc_msgSend_channelPushClient(void *a1, const char *a2, ...)
{
  return _[a1 channelPushClient];
}

id objc_msgSend_channelPushToken(void *a1, const char *a2, ...)
{
  return _[a1 channelPushToken];
}

id objc_msgSend_channelSource(void *a1, const char *a2, ...)
{
  return _[a1 channelSource];
}

id objc_msgSend_channelSource_shouldProcessAction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelSource:shouldProcessAction:error:");
}

id objc_msgSend_channelSourceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelSourceForIdentifier:");
}

id objc_msgSend_channelSourceManager(void *a1, const char *a2, ...)
{
  return _[a1 channelSourceManager];
}

id objc_msgSend_channelSources(void *a1, const char *a2, ...)
{
  return _[a1 channelSources];
}

id objc_msgSend_channelUUID(void *a1, const char *a2, ...)
{
  return _[a1 channelUUID];
}

id objc_msgSend_channelUpdate(void *a1, const char *a2, ...)
{
  return _[a1 channelUpdate];
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterIsMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIsMember:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_chat_changedBytesOfDataUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chat:changedBytesOfDataUsed:");
}

id objc_msgSend_chat_inputFrequencyLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chat:inputFrequencyLevelChangedTo:");
}

id objc_msgSend_chat_inputLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chat:inputLevelChangedTo:");
}

id objc_msgSend_chat_outputFrequencyLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chat:outputFrequencyLevelChangedTo:");
}

id objc_msgSend_chat_outputLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chat:outputLevelChangedTo:");
}

id objc_msgSend_chat_receivedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chat:receivedData:");
}

id objc_msgSend_chatConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chatConnected:");
}

id objc_msgSend_chatEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chatEnded:");
}

id objc_msgSend_chatReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chatReceived:");
}

id objc_msgSend_chatSentInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chatSentInvitation:");
}

id objc_msgSend_chatStartedConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chatStartedConnecting:");
}

id objc_msgSend_chatWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chatWithUUID:");
}

id objc_msgSend_chats(void *a1, const char *a2, ...)
{
  return _[a1 chats];
}

id objc_msgSend_chatsPendingUpgrade(void *a1, const char *a2, ...)
{
  return _[a1 chatsPendingUpgrade];
}

id objc_msgSend_checkAndSetTUActivityActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAndSetTUActivityActive:");
}

id objc_msgSend_checkLinkValidity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkLinkValidity:completionHandler:");
}

id objc_msgSend_checkLinkValidityWithPseudonym_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkLinkValidityWithPseudonym:completionHandler:");
}

id objc_msgSend_checkShouldIgnoreSessionInviteWithMessage_fromDestination_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkShouldIgnoreSessionInviteWithMessage:fromDestination:completion:");
}

id objc_msgSend_checkValidityForSelfPseudonymString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkValidityForSelfPseudonymString:");
}

id objc_msgSend_cleanUpConversationIfNecessaryForConversationUUID_failureContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpConversationIfNecessaryForConversationUUID:failureContext:");
}

id objc_msgSend_cleanUpForMomentIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpForMomentIfNecessary:");
}

id objc_msgSend_cleanUpIDSSessionState(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpIDSSessionState];
}

id objc_msgSend_cleanUpLiveLookupDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpLiveLookupDataWithCompletionHandler:");
}

id objc_msgSend_cleanUpTemporaryFileIfExistsForClientFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpTemporaryFileIfExistsForClientFileURL:");
}

id objc_msgSend_cleanup(void *a1, const char *a2, ...)
{
  return _[a1 cleanup];
}

id objc_msgSend_cleanupConversationWithCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupConversationWithCallUUID:");
}

id objc_msgSend_cleanupExpiredPendingConversations(void *a1, const char *a2, ...)
{
  return _[a1 cleanupExpiredPendingConversations];
}

id objc_msgSend_clearActiveLightweightParticipants(void *a1, const char *a2, ...)
{
  return _[a1 clearActiveLightweightParticipants];
}

id objc_msgSend_clearActiveParticipants(void *a1, const char *a2, ...)
{
  return _[a1 clearActiveParticipants];
}

id objc_msgSend_clearActiveRemoteParticipants(void *a1, const char *a2, ...)
{
  return _[a1 clearActiveRemoteParticipants];
}

id objc_msgSend_clearActivitySessions(void *a1, const char *a2, ...)
{
  return _[a1 clearActivitySessions];
}

id objc_msgSend_clearAddedMembers(void *a1, const char *a2, ...)
{
  return _[a1 clearAddedMembers];
}

id objc_msgSend_clearContactIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 clearContactIdentifiers];
}

id objc_msgSend_clearConversationMembers(void *a1, const char *a2, ...)
{
  return _[a1 clearConversationMembers];
}

id objc_msgSend_clearConversations(void *a1, const char *a2, ...)
{
  return _[a1 clearConversations];
}

id objc_msgSend_clearEmergencyHandles(void *a1, const char *a2, ...)
{
  return _[a1 clearEmergencyHandles];
}

id objc_msgSend_clearEmergencyLabeledHandles(void *a1, const char *a2, ...)
{
  return _[a1 clearEmergencyLabeledHandles];
}

id objc_msgSend_clearEndpointIDSDestinationURIs(void *a1, const char *a2, ...)
{
  return _[a1 clearEndpointIDSDestinationURIs];
}

id objc_msgSend_clearGenerateDescriptorInfos(void *a1, const char *a2, ...)
{
  return _[a1 clearGenerateDescriptorInfos];
}

id objc_msgSend_clearGeneratorDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 clearGeneratorDescriptors];
}

id objc_msgSend_clearHandlesToInvites(void *a1, const char *a2, ...)
{
  return _[a1 clearHandlesToInvites];
}

id objc_msgSend_clearHandoffIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 clearHandoffIdentifiers];
}

id objc_msgSend_clearInvitationPreferences(void *a1, const char *a2, ...)
{
  return _[a1 clearInvitationPreferences];
}

id objc_msgSend_clearInvitedHandles(void *a1, const char *a2, ...)
{
  return _[a1 clearInvitedHandles];
}

id objc_msgSend_clearLightweightMembers(void *a1, const char *a2, ...)
{
  return _[a1 clearLightweightMembers];
}

id objc_msgSend_clearLinks(void *a1, const char *a2, ...)
{
  return _[a1 clearLinks];
}

id objc_msgSend_clearMembers(void *a1, const char *a2, ...)
{
  return _[a1 clearMembers];
}

id objc_msgSend_clearMuteCacheDelay(void *a1, const char *a2, ...)
{
  return _[a1 clearMuteCacheDelay];
}

id objc_msgSend_clearNotificationsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 clearNotificationsIfNecessary];
}

id objc_msgSend_clearOtherInvitedHandles(void *a1, const char *a2, ...)
{
  return _[a1 clearOtherInvitedHandles];
}

id objc_msgSend_clearOtherUniqueProxyIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 clearOtherUniqueProxyIdentifiers];
}

id objc_msgSend_clearPendingChannelTeardownAcknowledgementsForBundleIdentfier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPendingChannelTeardownAcknowledgementsForBundleIdentfier:");
}

id objc_msgSend_clearPendingMembershipFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPendingMembershipFor:");
}

id objc_msgSend_clearPrioritizedSenderIdentities(void *a1, const char *a2, ...)
{
  return _[a1 clearPrioritizedSenderIdentities];
}

id objc_msgSend_clearProminenceEntrys(void *a1, const char *a2, ...)
{
  return _[a1 clearProminenceEntrys];
}

id objc_msgSend_clearProtoCalls(void *a1, const char *a2, ...)
{
  return _[a1 clearProtoCalls];
}

id objc_msgSend_clearProtoSupportedHandleTypes(void *a1, const char *a2, ...)
{
  return _[a1 clearProtoSupportedHandleTypes];
}

id objc_msgSend_clearProviders(void *a1, const char *a2, ...)
{
  return _[a1 clearProviders];
}

id objc_msgSend_clearPseudonyms(void *a1, const char *a2, ...)
{
  return _[a1 clearPseudonyms];
}

id objc_msgSend_clearReadNotificationsIgnoringHandleIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearReadNotificationsIgnoringHandleIds:");
}

id objc_msgSend_clearRemoteMembers(void *a1, const char *a2, ...)
{
  return _[a1 clearRemoteMembers];
}

id objc_msgSend_clearRemoteParticipantHandles(void *a1, const char *a2, ...)
{
  return _[a1 clearRemoteParticipantHandles];
}

id objc_msgSend_clearRemovedMembers(void *a1, const char *a2, ...)
{
  return _[a1 clearRemovedMembers];
}

id objc_msgSend_clearRoutes(void *a1, const char *a2, ...)
{
  return _[a1 clearRoutes];
}

id objc_msgSend_clearState(void *a1, const char *a2, ...)
{
  return _[a1 clearState];
}

id objc_msgSend_clearUplinkMutedCache(void *a1, const char *a2, ...)
{
  return _[a1 clearUplinkMutedCache];
}

id objc_msgSend_clearUplinkMutedCacheIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 clearUplinkMutedCacheIfNecessary];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return _[a1 client];
}

id objc_msgSend_client_capabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "client:capabilitiesDidChange:");
}

id objc_msgSend_client_subscription_callCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "client:subscription:callCapabilitiesDidChange:");
}

id objc_msgSend_client_subscription_capabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "client:subscription:capabilitiesDidChange:");
}

id objc_msgSend_clientContextData(void *a1, const char *a2, ...)
{
  return _[a1 clientContextData];
}

id objc_msgSend_clientFileURLByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientFileURLByIdentifier];
}

id objc_msgSend_clientInvalidationHandler(void *a1, const char *a2, ...)
{
  return _[a1 clientInvalidationHandler];
}

id objc_msgSend_clientManager(void *a1, const char *a2, ...)
{
  return _[a1 clientManager];
}

id objc_msgSend_clientMessagingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 clientMessagingDelegate];
}

id objc_msgSend_clientUUID(void *a1, const char *a2, ...)
{
  return _[a1 clientUUID];
}

id objc_msgSend_clientUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 clientUUIDString];
}

id objc_msgSend_clients(void *a1, const char *a2, ...)
{
  return _[a1 clients];
}

id objc_msgSend_clientsByObject(void *a1, const char *a2, ...)
{
  return _[a1 clientsByObject];
}

id objc_msgSend_clientsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientsPassingTest:");
}

id objc_msgSend_closeConnectionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 closeConnectionTimeout];
}

id objc_msgSend_cloudCallingDevices(void *a1, const char *a2, ...)
{
  return _[a1 cloudCallingDevices];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collaborationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 collaborationIdentifier];
}

id objc_msgSend_collaborationOpened_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collaborationOpened:");
}

id objc_msgSend_collaborationReAdded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collaborationReAdded:");
}

id objc_msgSend_collaborationRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collaborationRemoved:");
}

id objc_msgSend_collaborationStateManager(void *a1, const char *a2, ...)
{
  return _[a1 collaborationStateManager];
}

id objc_msgSend_combinedAudioStreamToken(void *a1, const char *a2, ...)
{
  return _[a1 combinedAudioStreamToken];
}

id objc_msgSend_commitParticipantUpdates(void *a1, const char *a2, ...)
{
  return _[a1 commitParticipantUpdates];
}

id objc_msgSend_commitUncommittedTransactions(void *a1, const char *a2, ...)
{
  return _[a1 commitUncommittedTransactions];
}

id objc_msgSend_commonMessagingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 commonMessagingDelegate];
}

id objc_msgSend_compactStoreWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactStoreWithCompletionHandler:");
}

id objc_msgSend_companyDepartment(void *a1, const char *a2, ...)
{
  return _[a1 companyDepartment];
}

id objc_msgSend_companyImageURL(void *a1, const char *a2, ...)
{
  return _[a1 companyImageURL];
}

id objc_msgSend_companyLogoURL(void *a1, const char *a2, ...)
{
  return _[a1 companyLogoURL];
}

id objc_msgSend_companyName(void *a1, const char *a2, ...)
{
  return _[a1 companyName];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compatibilityObject(void *a1, const char *a2, ...)
{
  return _[a1 compatibilityObject];
}

id objc_msgSend_completedDescription(void *a1, const char *a2, ...)
{
  return _[a1 completedDescription];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 completionHandler];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_conduit(void *a1, const char *a2, ...)
{
  return _[a1 conduit];
}

id objc_msgSend_conference(void *a1, const char *a2, ...)
{
  return _[a1 conference];
}

id objc_msgSend_conference_changedBytesOfDataUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:changedBytesOfDataUsed:");
}

id objc_msgSend_conference_didReceiveData_forCallID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:didReceiveData:forCallID:");
}

id objc_msgSend_conference_endedWithReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:endedWithReason:error:");
}

id objc_msgSend_conference_inputFrequencyLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:inputFrequencyLevelChangedTo:");
}

id objc_msgSend_conference_inputLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:inputLevelChangedTo:");
}

id objc_msgSend_conference_outputFrequencyLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:outputFrequencyLevelChangedTo:");
}

id objc_msgSend_conference_outputLevelChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:outputLevelChangedTo:");
}

id objc_msgSend_conference_remoteMediaStalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conference:remoteMediaStalled:");
}

id objc_msgSend_conferenceConnectionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceConnectionForIdentifier:");
}

id objc_msgSend_conferenceConnections(void *a1, const char *a2, ...)
{
  return _[a1 conferenceConnections];
}

id objc_msgSend_conferenceCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 conferenceCreationBlock];
}

id objc_msgSend_conferenceFinishedPreparing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceFinishedPreparing:");
}

id objc_msgSend_conferenceID(void *a1, const char *a2, ...)
{
  return _[a1 conferenceID];
}

id objc_msgSend_conferenceProvider(void *a1, const char *a2, ...)
{
  return _[a1 conferenceProvider];
}

id objc_msgSend_conferenceProvider_didPauseAudio_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:didPauseAudio:error:");
}

id objc_msgSend_conferenceProvider_didPauseVideo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:didPauseVideo:error:");
}

id objc_msgSend_conferenceProvider_didReceiveData_forCallID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:didReceiveData:forCallID:");
}

id objc_msgSend_conferenceProvider_didStartSession_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:didStartSession:error:");
}

id objc_msgSend_conferenceProvider_didStopWithError_callMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:didStopWithError:callMetadata:");
}

id objc_msgSend_conferenceProvider_remoteMediaStalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:remoteMediaStalled:");
}

id objc_msgSend_conferenceProvider_remoteVideoPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:remoteVideoPaused:");
}

id objc_msgSend_conferenceProvider_updateInputFrequencyLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:updateInputFrequencyLevel:");
}

id objc_msgSend_conferenceProvider_updateInputLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:updateInputLevel:");
}

id objc_msgSend_conferenceProvider_updateOutputFrequencyLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:updateOutputFrequencyLevel:");
}

id objc_msgSend_conferenceProvider_updateOutputLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProvider:updateOutputLevel:");
}

id objc_msgSend_conferenceProviderCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 conferenceProviderCreationBlock];
}

id objc_msgSend_conferenceProviderReceivedFirstRemoteFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceProviderReceivedFirstRemoteFrame:");
}

id objc_msgSend_conferenceStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conferenceStarted:");
}

id objc_msgSend_conferencesAwaitingConnectionClose(void *a1, const char *a2, ...)
{
  return _[a1 conferencesAwaitingConnectionClose];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectToDaemon(void *a1, const char *a2, ...)
{
  return _[a1 connectToDaemon];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connectionClosedForConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionClosedForConference:");
}

id objc_msgSend_connectionClosedForConferenceProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionClosedForConferenceProvider:");
}

id objc_msgSend_connectionSetupReportReceived_eventType_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionSetupReportReceived:eventType:forConversation:");
}

id objc_msgSend_connectionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 connectionTimeout];
}

id objc_msgSend_contactForDestinationId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactForDestinationId:");
}

id objc_msgSend_contactIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contactIdentifier];
}

id objc_msgSend_contactIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 contactIdentifiers];
}

id objc_msgSend_contactIdentifiersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactIdentifiersAtIndex:");
}

id objc_msgSend_contactIdentifiersCount(void *a1, const char *a2, ...)
{
  return _[a1 contactIdentifiersCount];
}

id objc_msgSend_contactLabel(void *a1, const char *a2, ...)
{
  return _[a1 contactLabel];
}

id objc_msgSend_contactName(void *a1, const char *a2, ...)
{
  return _[a1 contactName];
}

id objc_msgSend_contactStore(void *a1, const char *a2, ...)
{
  return _[a1 contactStore];
}

id objc_msgSend_containsAnyOutstandingMessageForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsAnyOutstandingMessageForBundleIdentifier:");
}

id objc_msgSend_containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:");
}

id objc_msgSend_containsMemberWithHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsMemberWithHandle:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsOutgoingRestrictedHandle_forBundleIdentifier_performSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsOutgoingRestrictedHandle:forBundleIdentifier:performSynchronously:");
}

id objc_msgSend_containsOutstandingMessage_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsOutstandingMessage:forBundleIdentifier:");
}

id objc_msgSend_containsRegisteredDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsRegisteredDeviceID:");
}

id objc_msgSend_containsRemoteParticipantWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsRemoteParticipantWithIdentifier:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _[a1 contentType];
}

id objc_msgSend_contentsOfDirectoryAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_context_addPhoneServicesDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context:addPhoneServicesDevice:withCompletion:");
}

id objc_msgSend_context_getCapability_status_with_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context:getCapability:status:with:");
}

id objc_msgSend_context_getSystemCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context:getSystemCapabilities:");
}

id objc_msgSend_context_recheckPhoneServicesAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context:recheckPhoneServicesAccountStatus:");
}

id objc_msgSend_context_removePhoneServicesDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context:removePhoneServicesDevice:withCompletion:");
}

id objc_msgSend_context_setCapability_enabled_with_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context:setCapability:enabled:with:");
}

id objc_msgSend_contextIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contextIdentifier];
}

id objc_msgSend_contextWithSlot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextWithSlot:");
}

id objc_msgSend_continueHandoffAudioRouteForIdentifier_participantLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueHandoffAudioRouteForIdentifier:participantLeft:");
}

id objc_msgSend_continueHandoffAudioRouteNotification(void *a1, const char *a2, ...)
{
  return _[a1 continueHandoffAudioRouteNotification];
}

id objc_msgSend_continuityCameraDidConnect(void *a1, const char *a2, ...)
{
  return _[a1 continuityCameraDidConnect];
}

id objc_msgSend_controlMessageOverQREnabled(void *a1, const char *a2, ...)
{
  return _[a1 controlMessageOverQREnabled];
}

id objc_msgSend_conversation_activityChangedOnSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:activityChangedOnSession:");
}

id objc_msgSend_conversation_activitySessionChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:activitySessionChanged:");
}

id objc_msgSend_conversation_activitySessionRemoved_userOriginated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:activitySessionRemoved:userOriginated:");
}

id objc_msgSend_conversation_addedActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:addedActiveParticipant:");
}

id objc_msgSend_conversation_addedMembers_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:addedMembers:triggeredLocally:");
}

id objc_msgSend_conversation_appLaunchState_forActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:appLaunchState:forActivitySession:");
}

id objc_msgSend_conversation_changedBytesOfDataUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:changedBytesOfDataUsed:");
}

id objc_msgSend_conversation_didChangeLocalParticipant_broadcastActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didChangeLocalParticipant:broadcastActivitySession:");
}

id objc_msgSend_conversation_didChangeSceneAssociationForActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didChangeSceneAssociationForActivitySession:");
}

id objc_msgSend_conversation_didChangeStateForActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didChangeStateForActivitySession:");
}

id objc_msgSend_conversation_failedWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:failedWithContext:");
}

id objc_msgSend_conversation_mediaPrioritiesChangedForParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:mediaPrioritiesChangedForParticipant:");
}

id objc_msgSend_conversation_participant_didReact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:participant:didReact:");
}

id objc_msgSend_conversation_participantDidStopReacting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:participantDidStopReacting:");
}

id objc_msgSend_conversation_receivedActivitySessionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:receivedActivitySessionEvent:");
}

id objc_msgSend_conversation_remoteMembersChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:remoteMembersChanged:");
}

id objc_msgSend_conversation_removedActiveParticipant_withLeaveReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:removedActiveParticipant:withLeaveReason:");
}

id objc_msgSend_conversation_requestBlobRecoveryForParticipantDestination_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:requestBlobRecoveryForParticipantDestination:completion:");
}

id objc_msgSend_conversation_requestedEndpointWithIdentifier_activitySession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:requestedEndpointWithIdentifier:activitySession:completion:");
}

id objc_msgSend_conversation_screenShareAttributesUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:screenShareAttributesUpdated:");
}

id objc_msgSend_conversation_sendDeclineMessageToParticipantDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:sendDeclineMessageToParticipantDestination:");
}

id objc_msgSend_conversation_sendResourceAtURL_toParticipants_metadata_activitySessionUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:sendResourceAtURL:toParticipants:metadata:activitySessionUUID:completion:");
}

id objc_msgSend_conversation_updatedActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:updatedActiveParticipant:");
}

id objc_msgSend_conversation_updatedActiveParticipantWithScreenSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:updatedActiveParticipantWithScreenSharing:");
}

id objc_msgSend_conversationChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationChanged:");
}

id objc_msgSend_conversationConnectionDidStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationConnectionDidStart:");
}

id objc_msgSend_conversationContainsScreenShareRequest_localRequest_requestHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationContainsScreenShareRequest:localRequest:requestHandle:");
}

id objc_msgSend_conversationCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 conversationCreationBlock];
}

id objc_msgSend_conversationDidLeave_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationDidLeave:");
}

id objc_msgSend_conversationDidStopScreenCapture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationDidStopScreenCapture:");
}

id objc_msgSend_conversationDidTriggerJoin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationDidTriggerJoin:");
}

id objc_msgSend_conversationGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 conversationGroupUUID];
}

id objc_msgSend_conversationGroupUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 conversationGroupUUIDString];
}

id objc_msgSend_conversationHandoffEnabled(void *a1, const char *a2, ...)
{
  return _[a1 conversationHandoffEnabled];
}

id objc_msgSend_conversationID(void *a1, const char *a2, ...)
{
  return _[a1 conversationID];
}

id objc_msgSend_conversationInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationInvalidated:");
}

id objc_msgSend_conversationLink(void *a1, const char *a2, ...)
{
  return _[a1 conversationLink];
}

id objc_msgSend_conversationLinkBaseURL(void *a1, const char *a2, ...)
{
  return _[a1 conversationLinkBaseURL];
}

id objc_msgSend_conversationLinkDescriptorsWithGroupUUIDs_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationLinkDescriptorsWithGroupUUIDs:error:");
}

id objc_msgSend_conversationLinkForGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationLinkForGroupUUID:");
}

id objc_msgSend_conversationLinkForPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationLinkForPseudonym:");
}

id objc_msgSend_conversationManager(void *a1, const char *a2, ...)
{
  return _[a1 conversationManager];
}

id objc_msgSend_conversationManager_activatedConversationLinksChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:activatedConversationLinksChanged:");
}

id objc_msgSend_conversationManager_activeParticipant_addedHighlightToConversation_highlightIdentifier_oldHighlightIdentifier_isFirstAdd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:activeParticipant:addedHighlightToConversation:highlightIdentifier:oldHighlightIdentifier:isFirstAdd:");
}

id objc_msgSend_conversationManager_activeParticipant_removedHighlightFrom_highlightIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:activeParticipant:removedHighlightFrom:highlightIdentifier:");
}

id objc_msgSend_conversationManager_addedCollaborationDictionary_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:addedCollaborationDictionary:forConversation:");
}

id objc_msgSend_conversationManager_avModeChanged_toAVMode_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:avModeChanged:toAVMode:forConversation:");
}

id objc_msgSend_conversationManager_avModeChanged_toAVMode_forParticipantWithHandle_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:avModeChanged:toAVMode:forParticipantWithHandle:forConversation:");
}

id objc_msgSend_conversationManager_connectionDidStartForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:connectionDidStartForConversation:");
}

id objc_msgSend_conversationManager_conversation_addedActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:addedActiveParticipant:");
}

id objc_msgSend_conversationManager_conversation_addedMembersLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:addedMembersLocally:");
}

id objc_msgSend_conversationManager_conversation_appLaunchState_forActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:appLaunchState:forActivitySession:");
}

id objc_msgSend_conversationManager_conversation_buzzedMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:buzzedMember:");
}

id objc_msgSend_conversationManager_conversation_changedBytesOfDataUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:changedBytesOfDataUsed:");
}

id objc_msgSend_conversationManager_conversation_collaborationStateChanged_highlightIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:collaborationStateChanged:highlightIdentifier:");
}

id objc_msgSend_conversationManager_conversation_didChangeSceneAssociationForActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:didChangeSceneAssociationForActivitySession:");
}

id objc_msgSend_conversationManager_conversation_didChangeStateForActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:didChangeStateForActivitySession:");
}

id objc_msgSend_conversationManager_conversation_failedWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:failedWithContext:");
}

id objc_msgSend_conversationManager_conversation_mediaPrioritiesDidChangeForParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:mediaPrioritiesDidChangeForParticipant:");
}

id objc_msgSend_conversationManager_conversation_participant_addedNotice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:participant:addedNotice:");
}

id objc_msgSend_conversationManager_conversation_participant_didReact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:participant:didReact:");
}

id objc_msgSend_conversationManager_conversation_participantDidStopReacting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:participantDidStopReacting:");
}

id objc_msgSend_conversationManager_conversation_receivedActivitySessionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:receivedActivitySessionEvent:");
}

id objc_msgSend_conversationManager_conversation_receivedMessage_fromHandle_withUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:receivedMessage:fromHandle:withUpdate:");
}

id objc_msgSend_conversationManager_conversation_removedActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:removedActiveParticipant:");
}

id objc_msgSend_conversationManager_conversation_removedActiveParticipant_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversation:removedActiveParticipant:withReason:");
}

id objc_msgSend_conversationManager_conversationChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversationChanged:");
}

id objc_msgSend_conversationManager_conversationScreenSharingChanged_forParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversationScreenSharingChanged:forParticipant:");
}

id objc_msgSend_conversationManager_conversationUpdateMessagesGroupPhoto_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:conversationUpdateMessagesGroupPhoto:");
}

id objc_msgSend_conversationManager_remoteMembersChanged_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:remoteMembersChanged:forConversation:");
}

id objc_msgSend_conversationManager_reportedHandedOffConversation_replacedByIdentifier_localizedHandoffRecipientDeviceCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:reportedHandedOffConversation:replacedByIdentifier:localizedHandoffRecipientDeviceCategory:");
}

id objc_msgSend_conversationManager_reportedInvalidLinkForPendingConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:reportedInvalidLinkForPendingConversation:");
}

id objc_msgSend_conversationManager_reportedLetMeInRejectedForPendingConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:reportedLetMeInRejectedForPendingConversation:");
}

id objc_msgSend_conversationManager_reportedNewIncomingConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:reportedNewIncomingConversation:fromHandle:");
}

id objc_msgSend_conversationManager_reportedRemoteDoesHandedOffForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:reportedRemoteDoesHandedOffForConversation:");
}

id objc_msgSend_conversationManager_requestedEndpointWithIdentifier_activitySession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationManager:requestedEndpointWithIdentifier:activitySession:completion:");
}

id objc_msgSend_conversationManagerClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 conversationManagerClientXPCInterface];
}

id objc_msgSend_conversationManagerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 conversationManagerServerXPCInterface];
}

id objc_msgSend_conversationManagerXPCServer(void *a1, const char *a2, ...)
{
  return _[a1 conversationManagerXPCServer];
}

id objc_msgSend_conversationMembers(void *a1, const char *a2, ...)
{
  return _[a1 conversationMembers];
}

id objc_msgSend_conversationMembersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationMembersAtIndex:");
}

id objc_msgSend_conversationMembersCount(void *a1, const char *a2, ...)
{
  return _[a1 conversationMembersCount];
}

id objc_msgSend_conversationNoticeManger(void *a1, const char *a2, ...)
{
  return _[a1 conversationNoticeManger];
}

id objc_msgSend_conversationOneToOneModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 conversationOneToOneModeEnabled];
}

id objc_msgSend_conversationProviderForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationProviderForIdentifier:");
}

id objc_msgSend_conversationProviderIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 conversationProviderIdentifier];
}

id objc_msgSend_conversationProviderManager(void *a1, const char *a2, ...)
{
  return _[a1 conversationProviderManager];
}

id objc_msgSend_conversationProviderManagerClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 conversationProviderManagerClientXPCInterface];
}

id objc_msgSend_conversationProviderManagerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 conversationProviderManagerServerXPCInterface];
}

id objc_msgSend_conversationRepresentedByRemoteMembers_andLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationRepresentedByRemoteMembers:andLink:");
}

id objc_msgSend_conversationServerBag(void *a1, const char *a2, ...)
{
  return _[a1 conversationServerBag];
}

id objc_msgSend_conversationStateSupportsSystemControls(void *a1, const char *a2, ...)
{
  return _[a1 conversationStateSupportsSystemControls];
}

id objc_msgSend_conversationUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDString];
}

id objc_msgSend_conversationUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDs];
}

id objc_msgSend_conversationUUIDsAwaitingActiveAudioSession(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDsAwaitingActiveAudioSession];
}

id objc_msgSend_conversationUUIDsByCallUUID(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDsByCallUUID];
}

id objc_msgSend_conversationUUIDsUpgradedFromAVLess(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDsUpgradedFromAVLess];
}

id objc_msgSend_conversationUUIDsWaitingForRemoteJoin(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDsWaitingForRemoteJoin];
}

id objc_msgSend_conversationUUIDsWaitingToJoin(void *a1, const char *a2, ...)
{
  return _[a1 conversationUUIDsWaitingToJoin];
}

id objc_msgSend_conversationWithGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationWithGroupUUID:");
}

id objc_msgSend_conversationWithGroupUUID_orMemberIdentifiers_orRemoteMembers_andLink_andVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationWithGroupUUID:orMemberIdentifiers:orRemoteMembers:andLink:andVideo:");
}

id objc_msgSend_conversationWithGroupUUID_orRepresentedByRemoteMembers_andLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationWithGroupUUID:orRepresentedByRemoteMembers:andLink:");
}

id objc_msgSend_conversations(void *a1, const char *a2, ...)
{
  return _[a1 conversations];
}

id objc_msgSend_conversationsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationsAtIndex:");
}

id objc_msgSend_conversationsByGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 conversationsByGroupUUID];
}

id objc_msgSend_conversationsByUUID(void *a1, const char *a2, ...)
{
  return _[a1 conversationsByUUID];
}

id objc_msgSend_conversationsCount(void *a1, const char *a2, ...)
{
  return _[a1 conversationsCount];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyCarrierBundleValue_keyHierarchy_bundleType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCarrierBundleValue:keyHierarchy:bundleType:error:");
}

id objc_msgSend_copyFileAtURL_toTemporaryFileWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyFileAtURL:toTemporaryFileWithName:");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyMobileCountryCode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMobileCountryCode:error:");
}

id objc_msgSend_copyMobileNetworkCode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMobileNetworkCode:error:");
}

id objc_msgSend_copyMobileSubscriberCountryCode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMobileSubscriberCountryCode:error:");
}

id objc_msgSend_copyMobileSubscriberIsoCountryCode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMobileSubscriberIsoCountryCode:error:");
}

id objc_msgSend_copyNextSampleBuffer(void *a1, const char *a2, ...)
{
  return _[a1 copyNextSampleBuffer];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_coreTelephonyClient(void *a1, const char *a2, ...)
{
  return _[a1 coreTelephonyClient];
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 cornerRadius];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForIdentifier:");
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForObject:");
}

id objc_msgSend_countOfCallsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfCallsPassingTest:");
}

id objc_msgSend_countOfNotificationsReceived(void *a1, const char *a2, ...)
{
  return _[a1 countOfNotificationsReceived];
}

id objc_msgSend_cpApplicationController(void *a1, const char *a2, ...)
{
  return _[a1 cpApplicationController];
}

id objc_msgSend_createActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActivitySession:");
}

id objc_msgSend_createActivitySession_onConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActivitySession:onConversation:fromHandle:");
}

id objc_msgSend_createActivitySession_onConversationWithUUID_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActivitySession:onConversationWithUUID:withCompletion:");
}

id objc_msgSend_createActivitySessionOnConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActivitySessionOnConversation:");
}

id objc_msgSend_createActivitySessionWithTuActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActivitySessionWithTuActivitySession:");
}

id objc_msgSend_createAliasForParticipantID_salt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAliasForParticipantID:salt:");
}

id objc_msgSend_createCPActivitySessionForActivitySession_onConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createCPActivitySessionForActivitySession:onConversationWithUUID:");
}

id objc_msgSend_createContentSharingSessionIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 createContentSharingSessionIfNecessary];
}

id objc_msgSend_createConversationIfNecessaryWithUUID_groupUUID_messagesGroupUUID_locallyCreated_localMember_remoteMembers_pendingMembers_otherInvitedHandles_remotePushTokens_lightweightMembers_link_activity_avMode_presentationMode_provider_screenSharingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createConversationIfNecessaryWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:link:activity:avMode:presentationMode:provider:screenSharingRequest:");
}

id objc_msgSend_createConversationReportingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createConversationReportingSession:");
}

id objc_msgSend_createConversationWithUUID_groupUUID_messagesGroupUUID_locallyCreated_localMember_initiator_remoteMembers_pendingMembers_otherInvitedHandles_remotePushTokens_lightweightMembers_activity_link_report_fromStorage_avMode_presentationMode_provider_screenSharingRequest_isInitiator_isOldMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createConversationWithUUID:groupUUID:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:remotePushTokens:lightweightMembers:activity:link:report:fromStorage:avMode:presentationMode:provider:screenSharingRequest:isInitiator:isOldMessage:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createGroupSessionProviderWithGroupID_participantDestinationIDs_callerID_account_queue_isOneToOneModeEnabled_localMember_avLess_isScreenSharingRequest_ABTestConfiguration_isInitiator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createGroupSessionProviderWithGroupID:participantDestinationIDs:callerID:account:queue:isOneToOneModeEnabled:localMember:avLess:isScreenSharingRequest:ABTestConfiguration:isInitiator:");
}

id objc_msgSend_createLinkIfNecessaryWithFilename_toURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createLinkIfNecessaryWithFilename:toURL:");
}

id objc_msgSend_createLinkIfNecessaryWithFilename_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createLinkIfNecessaryWithFilename:toURL:error:");
}

id objc_msgSend_createOneToOneFTReportingSessionForCallWithUUID_withReportingHierarchyToken_withVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:");
}

id objc_msgSend_createPTTApplicationMessageForChannel_withPayload_isWakingMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPTTApplicationMessageForChannel:withPayload:isWakingMessage:");
}

id objc_msgSend_createProcessMonitorIfNecessary_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createProcessMonitorIfNecessary:forClient:");
}

id objc_msgSend_createScreenCapturePickerIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 createScreenCapturePickerIfNecessary];
}

id objc_msgSend_createStagedActivitySessionForActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createStagedActivitySessionForActivity:");
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return _[a1 creationDate];
}

id objc_msgSend_creationDateEpochTime(void *a1, const char *a2, ...)
{
  return _[a1 creationDateEpochTime];
}

id objc_msgSend_creationRequestForAsset(void *a1, const char *a2, ...)
{
  return _[a1 creationRequestForAsset];
}

id objc_msgSend_crossDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 crossDeviceIdentifier];
}

id objc_msgSend_csCallingCapabilitiesState(void *a1, const char *a2, ...)
{
  return _[a1 csCallingCapabilitiesState];
}

id objc_msgSend_csdConversationParticipant(void *a1, const char *a2, ...)
{
  return _[a1 csdConversationParticipant];
}

id objc_msgSend_csd_ISOCountryCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_ISOCountryCode");
}

id objc_msgSend_csd_UUIDv5(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_UUIDv5");
}

id objc_msgSend_csd_UUIDv5ForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_UUIDv5ForString:");
}

id objc_msgSend_csd_aliasStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_aliasStrings");
}

id objc_msgSend_csd_applicationRecordForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_applicationRecordForApplicationIdentifier:");
}

id objc_msgSend_csd_applicationRecordForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_applicationRecordForBundleIdentifier:");
}

id objc_msgSend_csd_callUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_callUpdate");
}

id objc_msgSend_csd_destinationForAlias_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_destinationForAlias:");
}

id objc_msgSend_csd_hasPTTBackgroundMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_hasPTTBackgroundMode");
}

id objc_msgSend_csd_hasPTTSelfAddEntitlement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_hasPTTSelfAddEntitlement");
}

id objc_msgSend_csd_hasVoIPBackgroundMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_hasVoIPBackgroundMode");
}

id objc_msgSend_csd_hasVoIPNetworkExtensionEntitlement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_hasVoIPNetworkExtensionEntitlement");
}

id objc_msgSend_csd_isExpired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_isExpired");
}

id objc_msgSend_csd_isSymbolicLink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_isSymbolicLink");
}

id objc_msgSend_csd_isTelephony(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_isTelephony");
}

id objc_msgSend_csd_isUnknown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_isUnknown");
}

id objc_msgSend_csd_localizedDeviceCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_localizedDeviceCategory");
}

id objc_msgSend_csd_pseudonym(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_pseudonym");
}

id objc_msgSend_csd_stringWithCSDVoIPApplicationMessageTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_stringWithCSDVoIPApplicationMessageTransportType:");
}

id objc_msgSend_csd_unknownContextInfoForAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "csd_unknownContextInfoForAccountID:");
}

id objc_msgSend_ctEmergencyCallbackModeStatusChangedWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ctEmergencyCallbackModeStatusChangedWithUserInfo:");
}

id objc_msgSend_currentAudioAndVideoCallCount(void *a1, const char *a2, ...)
{
  return _[a1 currentAudioAndVideoCallCount];
}

id objc_msgSend_currentAudioAndVideoCalls(void *a1, const char *a2, ...)
{
  return _[a1 currentAudioAndVideoCalls];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentCallCount(void *a1, const char *a2, ...)
{
  return _[a1 currentCallCount];
}

id objc_msgSend_currentCallGroups(void *a1, const char *a2, ...)
{
  return _[a1 currentCallGroups];
}

id objc_msgSend_currentCallSet(void *a1, const char *a2, ...)
{
  return _[a1 currentCallSet];
}

id objc_msgSend_currentCalls(void *a1, const char *a2, ...)
{
  return _[a1 currentCalls];
}

id objc_msgSend_currentCallsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCallsForClient:");
}

id objc_msgSend_currentClient(void *a1, const char *a2, ...)
{
  return _[a1 currentClient];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 currentDescriptor];
}

id objc_msgSend_currentDeviceFamily(void *a1, const char *a2, ...)
{
  return _[a1 currentDeviceFamily];
}

id objc_msgSend_currentDeviceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 currentDeviceOrientation];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentIDStatusForDestination_service_listenerID_queue_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentIDStatusForDestination:service:listenerID:queue:completionBlock:");
}

id objc_msgSend_currentLocalScreenShareAttributes(void *a1, const char *a2, ...)
{
  return _[a1 currentLocalScreenShareAttributes];
}

id objc_msgSend_currentParticipantPresentationContexts(void *a1, const char *a2, ...)
{
  return _[a1 currentParticipantPresentationContexts];
}

id objc_msgSend_currentPreferredTransportMethod(void *a1, const char *a2, ...)
{
  return _[a1 currentPreferredTransportMethod];
}

id objc_msgSend_currentProxyCalls(void *a1, const char *a2, ...)
{
  return _[a1 currentProxyCalls];
}

id objc_msgSend_currentServerTimeDate(void *a1, const char *a2, ...)
{
  return _[a1 currentServerTimeDate];
}

id objc_msgSend_currentSession(void *a1, const char *a2, ...)
{
  return _[a1 currentSession];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentToneIdentifierForAlertType_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentToneIdentifierForAlertType:topic:");
}

id objc_msgSend_currentVideoCalls(void *a1, const char *a2, ...)
{
  return _[a1 currentVideoCalls];
}

id objc_msgSend_currentlyPickedRouteIdForCategory_andMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentlyPickedRouteIdForCategory:andMode:");
}

id objc_msgSend_currentlyTrackedA2DPRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentlyTrackedA2DPRouteIdentifier];
}

id objc_msgSend_customGreetingFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customGreetingFor:");
}

id objc_msgSend_customizeForProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customizeForProtocolVersion:");
}

id objc_msgSend_cxCall(void *a1, const char *a2, ...)
{
  return _[a1 cxCall];
}

id objc_msgSend_cxScreenShareAttributesForCallAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cxScreenShareAttributesForCallAttributes:");
}

id objc_msgSend_cx_channelErrorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cx_channelErrorWithCode:");
}

id objc_msgSend_cx_errorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cx_errorWithCode:");
}

id objc_msgSend_cx_incomingCallErrorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cx_incomingCallErrorWithCode:");
}

id objc_msgSend_cx_requestTransactionErrorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cx_requestTransactionErrorWithCode:");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataDownloaded(void *a1, const char *a2, ...)
{
  return _[a1 dataDownloaded];
}

id objc_msgSend_dataForProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForProviders:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSourceToIdentifierToCalls(void *a1, const char *a2, ...)
{
  return _[a1 dataSourceToIdentifierToCalls];
}

id objc_msgSend_dataSources(void *a1, const char *a2, ...)
{
  return _[a1 dataSources];
}

id objc_msgSend_dataUploaded(void *a1, const char *a2, ...)
{
  return _[a1 dataUploaded];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateAnsweredOrDialed(void *a1, const char *a2, ...)
{
  return _[a1 dateAnsweredOrDialed];
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingUnit:value:toDate:options:");
}

id objc_msgSend_dateConnected(void *a1, const char *a2, ...)
{
  return _[a1 dateConnected];
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateCreated];
}

id objc_msgSend_dateDialed(void *a1, const char *a2, ...)
{
  return _[a1 dateDialed];
}

id objc_msgSend_dateEnded(void *a1, const char *a2, ...)
{
  return _[a1 dateEnded];
}

id objc_msgSend_dateReceivedFirstRemoteFrame(void *a1, const char *a2, ...)
{
  return _[a1 dateReceivedFirstRemoteFrame];
}

id objc_msgSend_dateSentInvitation(void *a1, const char *a2, ...)
{
  return _[a1 dateSentInvitation];
}

id objc_msgSend_dateStarted(void *a1, const char *a2, ...)
{
  return _[a1 dateStarted];
}

id objc_msgSend_dateStartedConnecting(void *a1, const char *a2, ...)
{
  return _[a1 dateStartedConnecting];
}

id objc_msgSend_dateStartedOutgoing(void *a1, const char *a2, ...)
{
  return _[a1 dateStartedOutgoing];
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_deactivate(void *a1, const char *a2, ...)
{
  return _[a1 deactivate];
}

id objc_msgSend_deactivatePTTBargeCalls(void *a1, const char *a2, ...)
{
  return _[a1 deactivatePTTBargeCalls];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_declineConversation_reason_destinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineConversation:reason:destinations:");
}

id objc_msgSend_declineInvitation(void *a1, const char *a2, ...)
{
  return _[a1 declineInvitation];
}

id objc_msgSend_declineInvitationWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineInvitationWithData:");
}

id objc_msgSend_declineInvitationWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineInvitationWithResponse:");
}

id objc_msgSend_declineRemoteDevicesForConversation_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineRemoteDevicesForConversation:reason:");
}

id objc_msgSend_declineRemoteMembersForConversation_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "declineRemoteMembersForConversation:reason:");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decryptLetMeInRequest_pseudonym_fromHandle_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decryptLetMeInRequest:pseudonym:fromHandle:completionHandler:");
}

id objc_msgSend_decryptLetMeInResponse_pseudonym_requestorKeyAgreement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decryptLetMeInResponse:pseudonym:requestorKeyAgreement:");
}

id objc_msgSend_defaultAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 defaultAppBundleIdentifier];
}

id objc_msgSend_defaultAppProviderForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultAppProviderForRemoteClients:");
}

id objc_msgSend_defaultAppRelayProviderToUse(void *a1, const char *a2, ...)
{
  return _[a1 defaultAppRelayProviderToUse];
}

id objc_msgSend_defaultAppsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 defaultAppsEnabled];
}

id objc_msgSend_defaultAttributes(void *a1, const char *a2, ...)
{
  return _[a1 defaultAttributes];
}

id objc_msgSend_defaultBehavior(void *a1, const char *a2, ...)
{
  return _[a1 defaultBehavior];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultConfiguration];
}

id objc_msgSend_defaultConfigurationWithProviderIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultConfigurationWithProviderIdentifier:");
}

id objc_msgSend_defaultGreeting(void *a1, const char *a2, ...)
{
  return _[a1 defaultGreeting];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultNotificationCenter];
}

id objc_msgSend_defaultPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 defaultPairedDevice];
}

id objc_msgSend_defaultPairedDeviceExists(void *a1, const char *a2, ...)
{
  return _[a1 defaultPairedDeviceExists];
}

id objc_msgSend_defaultProviders(void *a1, const char *a2, ...)
{
  return _[a1 defaultProviders];
}

id objc_msgSend_defaultSIMLineSubscriptionContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultSIMLineSubscriptionContext];
}

id objc_msgSend_defaultScreenShareAttributes(void *a1, const char *a2, ...)
{
  return _[a1 defaultScreenShareAttributes];
}

id objc_msgSend_defaultSessionMode(void *a1, const char *a2, ...)
{
  return _[a1 defaultSessionMode];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_deferCommittingTransactions(void *a1, const char *a2, ...)
{
  return _[a1 deferCommittingTransactions];
}

id objc_msgSend_deferReportingAudioFinishedForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deferReportingAudioFinishedForCallWithUUID:");
}

id objc_msgSend_deferredTransmitStartAction(void *a1, const char *a2, ...)
{
  return _[a1 deferredTransmitStartAction];
}

id objc_msgSend_delayedActionsByCallUUID(void *a1, const char *a2, ...)
{
  return _[a1 delayedActionsByCallUUID];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegateController(void *a1, const char *a2, ...)
{
  return _[a1 delegateController];
}

id objc_msgSend_delegateQueue(void *a1, const char *a2, ...)
{
  return _[a1 delegateQueue];
}

id objc_msgSend_delegateToQueue(void *a1, const char *a2, ...)
{
  return _[a1 delegateToQueue];
}

id objc_msgSend_deleteCallsWithPredicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCallsWithPredicate:completion:");
}

id objc_msgSend_deleteContentsAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteContentsAtURL:");
}

id objc_msgSend_deleteCustomGreetingFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCustomGreetingFor:");
}

id objc_msgSend_deletedConversationLinksWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletedConversationLinksWithError:");
}

id objc_msgSend_deletedLinkForJoinCallAction_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletedLinkForJoinCallAction:withError:");
}

id objc_msgSend_deliverChannelPushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverChannelPushToken:");
}

id objc_msgSend_deliverMessage_withAssertion_applicationShouldPostIncomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverMessage:withAssertion:applicationShouldPostIncomingCall:");
}

id objc_msgSend_deliverVoIPToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverVoIPToken:");
}

id objc_msgSend_denyScreenShareRequestFrom_screenShareRequest_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "denyScreenShareRequestFrom:screenShareRequest:conversation:");
}

id objc_msgSend_dequeueAllPauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 dequeueAllPauseDigits];
}

id objc_msgSend_dequeueNextPauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 dequeueNextPauseDigits];
}

id objc_msgSend_deregisterHandoffIdentifiersForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deregisterHandoffIdentifiersForConversation:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_destinationID(void *a1, const char *a2, ...)
{
  return _[a1 destinationID];
}

id objc_msgSend_destinationIDsCanUseV2Blobs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationIDsCanUseV2Blobs:");
}

id objc_msgSend_destinationIdIsEmailAddress(void *a1, const char *a2, ...)
{
  return _[a1 destinationIdIsEmailAddress];
}

id objc_msgSend_destinationIdIsPhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 destinationIdIsPhoneNumber];
}

id objc_msgSend_destinationIdIsPseudonym(void *a1, const char *a2, ...)
{
  return _[a1 destinationIdIsPseudonym];
}

id objc_msgSend_destinationIdIsTemporary(void *a1, const char *a2, ...)
{
  return _[a1 destinationIdIsTemporary];
}

id objc_msgSend_destinationURIs(void *a1, const char *a2, ...)
{
  return _[a1 destinationURIs];
}

id objc_msgSend_destinationWithActiveSession(void *a1, const char *a2, ...)
{
  return _[a1 destinationWithActiveSession];
}

id objc_msgSend_destinationWithDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationWithDestinations:");
}

id objc_msgSend_destinationWithStringURI_isLightWeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationWithStringURI:isLightWeight:");
}

id objc_msgSend_destinationWithTUConversationMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationWithTUConversationMember:");
}

id objc_msgSend_destinationWithTUConversationParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationWithTUConversationParticipant:");
}

id objc_msgSend_destinationWithURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationWithURI:");
}

id objc_msgSend_destroyScreenCapturePickerIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 destroyScreenCapturePickerIfNecessary];
}

id objc_msgSend_developmentConnection(void *a1, const char *a2, ...)
{
  return _[a1 developmentConnection];
}

id objc_msgSend_deviceDestinationsWithCapability_localHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceDestinationsWithCapability:localHandle:");
}

id objc_msgSend_deviceFamily(void *a1, const char *a2, ...)
{
  return _[a1 deviceFamily];
}

id objc_msgSend_deviceForFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForFromID:");
}

id objc_msgSend_deviceForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForService:");
}

id objc_msgSend_deviceFoundHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceFoundHandler];
}

id objc_msgSend_deviceHomeButtonType(void *a1, const char *a2, ...)
{
  return _[a1 deviceHomeButtonType];
}

id objc_msgSend_deviceLockStateObserver(void *a1, const char *a2, ...)
{
  return _[a1 deviceLockStateObserver];
}

id objc_msgSend_deviceOrDestinationWithActiveSessionCanReceiveMessagesForCallProvider_needsConversationRelaySupport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceOrDestinationWithActiveSessionCanReceiveMessagesForCallProvider:needsConversationRelaySupport:");
}

id objc_msgSend_deviceRole(void *a1, const char *a2, ...)
{
  return _[a1 deviceRole];
}

id objc_msgSend_deviceSupport(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupport];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceWithActiveSession(void *a1, const char *a2, ...)
{
  return _[a1 deviceWithActiveSession];
}

id objc_msgSend_deviceWithUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithUniqueID:");
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_dialAssistedDialRequestForDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialAssistedDialRequestForDialRequest:");
}

id objc_msgSend_dialDelayForRequest(void *a1, const char *a2, ...)
{
  return _[a1 dialDelayForRequest];
}

id objc_msgSend_dialRequest(void *a1, const char *a2, ...)
{
  return _[a1 dialRequest];
}

id objc_msgSend_dialType(void *a1, const char *a2, ...)
{
  return _[a1 dialType];
}

id objc_msgSend_dialWithRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialWithRequest:completion:");
}

id objc_msgSend_dialWithRequest_displayContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialWithRequest:displayContext:");
}

id objc_msgSend_dialingIDSDestination(void *a1, const char *a2, ...)
{
  return _[a1 dialingIDSDestination];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForKey:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_didChangeServiceProvidersForCarrierBundlePhoneNumberProviderController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeServiceProvidersForCarrierBundlePhoneNumberProviderController:");
}

id objc_msgSend_didCleanUp(void *a1, const char *a2, ...)
{
  return _[a1 didCleanUp];
}

id objc_msgSend_didEndSession_startDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didEndSession:startDate:endDate:");
}

id objc_msgSend_didErrorOccur(void *a1, const char *a2, ...)
{
  return _[a1 didErrorOccur];
}

id objc_msgSend_didObserveBluetoothHangupCommand(void *a1, const char *a2, ...)
{
  return _[a1 didObserveBluetoothHangupCommand];
}

id objc_msgSend_didPerformUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 didPerformUplinkMuted];
}

id objc_msgSend_didPrepareHandler(void *a1, const char *a2, ...)
{
  return _[a1 didPrepareHandler];
}

id objc_msgSend_didReceiveResultsWithTransactionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveResultsWithTransactionID:");
}

id objc_msgSend_didStartHandler(void *a1, const char *a2, ...)
{
  return _[a1 didStartHandler];
}

id objc_msgSend_didStartRequestWithTransactionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didStartRequestWithTransactionID:");
}

id objc_msgSend_didStopHandler(void *a1, const char *a2, ...)
{
  return _[a1 didStopHandler];
}

id objc_msgSend_didUpdateCapabilities_forVideoStreamToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateCapabilities:forVideoStreamToken:");
}

id objc_msgSend_digits(void *a1, const char *a2, ...)
{
  return _[a1 digits];
}

id objc_msgSend_disableAssistantWhilePasscodeLocked(void *a1, const char *a2, ...)
{
  return _[a1 disableAssistantWhilePasscodeLocked];
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return _[a1 disconnect];
}

id objc_msgSend_disconnectActiveCallsBasedOnCallStatusForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectActiveCallsBasedOnCallStatusForCall:");
}

id objc_msgSend_disconnectAllCalls(void *a1, const char *a2, ...)
{
  return _[a1 disconnectAllCalls];
}

id objc_msgSend_disconnectAllCalls_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectAllCalls:withReason:");
}

id objc_msgSend_disconnectAllCallsBesides_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectAllCallsBesides:");
}

id objc_msgSend_disconnectBargeCall_bundleIdentifier_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectBargeCall:bundleIdentifier:reason:");
}

id objc_msgSend_disconnectBargeCallsWithBundleIdentifier_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectBargeCallsWithBundleIdentifier:reason:");
}

id objc_msgSend_disconnectCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCall:");
}

id objc_msgSend_disconnectCall_whileUngroupingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCall:whileUngroupingCall:");
}

id objc_msgSend_disconnectCall_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCall:withReason:");
}

id objc_msgSend_disconnectCallWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCallWithReason:");
}

id objc_msgSend_disconnectCalls_whileHoldingCalls_andUnholdingCalls_andUngroupingCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCalls:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:");
}

id objc_msgSend_disconnectCalls_withReason_whileHoldingCalls_andUnholdingCalls_andUngroupingCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectCalls:withReason:whileHoldingCalls:andUnholdingCalls:andUngroupingCalls:");
}

id objc_msgSend_disconnectCurrentCallAndActivateHeld(void *a1, const char *a2, ...)
{
  return _[a1 disconnectCurrentCallAndActivateHeld];
}

id objc_msgSend_disconnectMessagingConnectionForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectMessagingConnectionForCall:");
}

id objc_msgSend_disconnectWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectWithReason:");
}

id objc_msgSend_disconnectedReason(void *a1, const char *a2, ...)
{
  return _[a1 disconnectedReason];
}

id objc_msgSend_discoveredDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredDevices];
}

id objc_msgSend_dispatchDelay(void *a1, const char *a2, ...)
{
  return _[a1 dispatchDelay];
}

id objc_msgSend_displayContext(void *a1, const char *a2, ...)
{
  return _[a1 displayContext];
}

id objc_msgSend_displayContextByMergingWithDisplayContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayContextByMergingWithDisplayContext:");
}

id objc_msgSend_displayErrorNotificationWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayErrorNotificationWithMessage:");
}

id objc_msgSend_displayHandoffEligibleNearbyByURL(void *a1, const char *a2, ...)
{
  return _[a1 displayHandoffEligibleNearbyByURL];
}

id objc_msgSend_displayID(void *a1, const char *a2, ...)
{
  return _[a1 displayID];
}

id objc_msgSend_displayIncomingPinCode_fromID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayIncomingPinCode:fromID:completionHandler:");
}

id objc_msgSend_displayLagunaPullByURL(void *a1, const char *a2, ...)
{
  return _[a1 displayLagunaPullByURL];
}

id objc_msgSend_displayMismatchedAccountsNotification(void *a1, const char *a2, ...)
{
  return _[a1 displayMismatchedAccountsNotification];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayPTTDeprecationAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayPTTDeprecationAlert:");
}

id objc_msgSend_displayPTTServiceUpdateOverBugetAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayPTTServiceUpdateOverBugetAlert:");
}

id objc_msgSend_displayPinErrorNotification(void *a1, const char *a2, ...)
{
  return _[a1 displayPinErrorNotification];
}

id objc_msgSend_displayPinMessageForDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayPinMessageForDevice:completionHandler:");
}

id objc_msgSend_displayPinRequestFailure(void *a1, const char *a2, ...)
{
  return _[a1 displayPinRequestFailure];
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _[a1 displayScale];
}

id objc_msgSend_displayServiceConfirmationWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayServiceConfirmationWithCompletionHandler:");
}

id objc_msgSend_displaySharePlayUnableToStartAlert(void *a1, const char *a2, ...)
{
  return _[a1 displaySharePlayUnableToStartAlert];
}

id objc_msgSend_displaySlotsFullNotification(void *a1, const char *a2, ...)
{
  return _[a1 displaySlotsFullNotification];
}

id objc_msgSend_displaySystemCallControlsByURL(void *a1, const char *a2, ...)
{
  return _[a1 displaySystemCallControlsByURL];
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_dndAllowsCall(void *a1, const char *a2, ...)
{
  return _[a1 dndAllowsCall];
}

id objc_msgSend_doesHandle_correspondToConversationProvider_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesHandle:correspondToConversationProvider:completionHandler:");
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesNotRecognizeSelector:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainAccessor(void *a1, const char *a2, ...)
{
  return _[a1 domainAccessor];
}

id objc_msgSend_donateEntries_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateEntries:withCompletion:");
}

id objc_msgSend_donateEventTalkingWithPhoneAwayFromFace(void *a1, const char *a2, ...)
{
  return _[a1 donateEventTalkingWithPhoneAwayFromFace];
}

id objc_msgSend_donateHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateHandles:");
}

id objc_msgSend_donateTipsSignalIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 donateTipsSignalIfNecessary];
}

id objc_msgSend_donateUserIntentForCallProviderIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateUserIntentForCallProviderIdentifier:");
}

id objc_msgSend_donateUserIntentForProviderWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateUserIntentForProviderWithIdentifier:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downgradeToAudio(void *a1, const char *a2, ...)
{
  return _[a1 downgradeToAudio];
}

id objc_msgSend_downgradeToOneToOneAfterDelayBlock(void *a1, const char *a2, ...)
{
  return _[a1 downgradeToOneToOneAfterDelayBlock];
}

id objc_msgSend_downlinkStreamToken(void *a1, const char *a2, ...)
{
  return _[a1 downlinkStreamToken];
}

id objc_msgSend_dropUndeliveredChannelPushesOnTheFloor(void *a1, const char *a2, ...)
{
  return _[a1 dropUndeliveredChannelPushesOnTheFloor];
}

id objc_msgSend_dtmfSoundPlayer(void *a1, const char *a2, ...)
{
  return _[a1 dtmfSoundPlayer];
}

id objc_msgSend_dtmfUpdateDigits(void *a1, const char *a2, ...)
{
  return _[a1 dtmfUpdateDigits];
}

id objc_msgSend_dualSIMRingtoneEnabled(void *a1, const char *a2, ...)
{
  return _[a1 dualSIMRingtoneEnabled];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_dynamicDisplayContext(void *a1, const char *a2, ...)
{
  return _[a1 dynamicDisplayContext];
}

id objc_msgSend_dynamicIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 dynamicIdentifier];
}

id objc_msgSend_dynamicIdentifierForConversation_uplinkMuted_sendingVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dynamicIdentifierForConversation:uplinkMuted:sendingVideo:");
}

id objc_msgSend_eligibleCallsByFilteringCalls_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibleCallsByFilteringCalls:forClient:");
}

id objc_msgSend_emergencyCallbackCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 emergencyCallbackCapabilities];
}

id objc_msgSend_emergencyCallbackModeDidChangeForAllSubscriptionsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyCallbackModeDidChangeForAllSubscriptionsForClient:");
}

id objc_msgSend_emergencyCallbackPossible(void *a1, const char *a2, ...)
{
  return _[a1 emergencyCallbackPossible];
}

id objc_msgSend_emergencyHandles(void *a1, const char *a2, ...)
{
  return _[a1 emergencyHandles];
}

id objc_msgSend_emergencyHandlesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyHandlesAtIndex:");
}

id objc_msgSend_emergencyHandlesCount(void *a1, const char *a2, ...)
{
  return _[a1 emergencyHandlesCount];
}

id objc_msgSend_emergencyLabeledHandles(void *a1, const char *a2, ...)
{
  return _[a1 emergencyLabeledHandles];
}

id objc_msgSend_emergencyLabeledHandlesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emergencyLabeledHandlesAtIndex:");
}

id objc_msgSend_emergencyLabeledHandlesCount(void *a1, const char *a2, ...)
{
  return _[a1 emergencyLabeledHandlesCount];
}

id objc_msgSend_emergencyMediaItems(void *a1, const char *a2, ...)
{
  return _[a1 emergencyMediaItems];
}

id objc_msgSend_emergencyMediaType(void *a1, const char *a2, ...)
{
  return _[a1 emergencyMediaType];
}

id objc_msgSend_emergencyProvider(void *a1, const char *a2, ...)
{
  return _[a1 emergencyProvider];
}

id objc_msgSend_emergencyProviderIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 emergencyProviderIdentifier];
}

id objc_msgSend_emergencyTUHandles(void *a1, const char *a2, ...)
{
  return _[a1 emergencyTUHandles];
}

id objc_msgSend_emergencyTULabeledHandles(void *a1, const char *a2, ...)
{
  return _[a1 emergencyTULabeledHandles];
}

id objc_msgSend_emptyConversationWithGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyConversationWithGroupUUID:");
}

id objc_msgSend_enableEmergencyModeIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableEmergencyModeIfNecessaryForCall:");
}

id objc_msgSend_enableEmergencyModeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableEmergencyModeWithError:");
}

id objc_msgSend_enabledTopics(void *a1, const char *a2, ...)
{
  return _[a1 enabledTopics];
}

id objc_msgSend_enclosedEncryptedType(void *a1, const char *a2, ...)
{
  return _[a1 enclosedEncryptedType];
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encryptLetMeInRequest_link_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptLetMeInRequest:link:completionHandler:");
}

id objc_msgSend_encryptLetMeInResponse_pseudonym_responseKeyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptLetMeInResponse:pseudonym:responseKeyData:");
}

id objc_msgSend_encryptedData(void *a1, const char *a2, ...)
{
  return _[a1 encryptedData];
}

id objc_msgSend_encryptedMessage(void *a1, const char *a2, ...)
{
  return _[a1 encryptedMessage];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return _[a1 end];
}

id objc_msgSend_endActiveAndAnswerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endActiveAndAnswerCall:");
}

id objc_msgSend_endActivitySession_onConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endActivitySession:onConversationWithUUID:");
}

id objc_msgSend_endCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endCallWithUUID:");
}

id objc_msgSend_endCallWithUUIDAsAnsweredElsewhere_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endCallWithUUIDAsAnsweredElsewhere:");
}

id objc_msgSend_endCallWithUUIDAsDeclinedElsewhere_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endCallWithUUIDAsDeclinedElsewhere:");
}

id objc_msgSend_endCallWithUUIDAsLocalHangup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endCallWithUUIDAsLocalHangup:");
}

id objc_msgSend_endChatWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endChatWithReason:");
}

id objc_msgSend_endEmergencyCallbackMode(void *a1, const char *a2, ...)
{
  return _[a1 endEmergencyCallbackMode];
}

id objc_msgSend_endEndingSessions(void *a1, const char *a2, ...)
{
  return _[a1 endEndingSessions];
}

id objc_msgSend_endHandoffActivity(void *a1, const char *a2, ...)
{
  return _[a1 endHandoffActivity];
}

id objc_msgSend_endHeldAndAnswerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endHeldAndAnswerCall:");
}

id objc_msgSend_endObserving(void *a1, const char *a2, ...)
{
  return _[a1 endObserving];
}

id objc_msgSend_endParticipantConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 endParticipantConfiguration];
}

id objc_msgSend_endSession(void *a1, const char *a2, ...)
{
  return _[a1 endSession];
}

id objc_msgSend_endTransactionIfNecessaryForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTransactionIfNecessaryForObject:");
}

id objc_msgSend_endWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endWithError:");
}

id objc_msgSend_endedError(void *a1, const char *a2, ...)
{
  return _[a1 endedError];
}

id objc_msgSend_endedReason(void *a1, const char *a2, ...)
{
  return _[a1 endedReason];
}

id objc_msgSend_endedReasonUserInfoForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endedReasonUserInfoForCall:");
}

id objc_msgSend_endpointIDSDestination(void *a1, const char *a2, ...)
{
  return _[a1 endpointIDSDestination];
}

id objc_msgSend_endpointIDSDestinationURIs(void *a1, const char *a2, ...)
{
  return _[a1 endpointIDSDestinationURIs];
}

id objc_msgSend_endpointIDSDestinationURIsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointIDSDestinationURIsAtIndex:");
}

id objc_msgSend_endpointIDSDestinationURIsCount(void *a1, const char *a2, ...)
{
  return _[a1 endpointIDSDestinationURIsCount];
}

id objc_msgSend_endpointOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 endpointOnCurrentDevice];
}

id objc_msgSend_endpointRapportEffectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 endpointRapportEffectiveIdentifier];
}

id objc_msgSend_endpointRapportMediaSystemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 endpointRapportMediaSystemIdentifier];
}

id objc_msgSend_enqueueConversationWaitingForAudioWithConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueConversationWaitingForAudioWithConversationUUID:");
}

id objc_msgSend_enqueueMessageRetryAttemptForMessageID_message_attemptCount_messageProcessingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueMessageRetryAttemptForMessageID:message:attemptCount:messageProcessingBlock:");
}

id objc_msgSend_enqueueOrStartAudioForConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueOrStartAudioForConversationUUID:");
}

id objc_msgSend_enrollDefaultPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 enrollDefaultPairedDevice];
}

id objc_msgSend_enrollDefaultPairedDeviceForAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enrollDefaultPairedDeviceForAccountID:");
}

id objc_msgSend_enrollDevice_forSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enrollDevice:forSenderIdentityUUID:");
}

id objc_msgSend_entitledCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 entitledCapabilities];
}

id objc_msgSend_entitlements(void *a1, const char *a2, ...)
{
  return _[a1 entitlements];
}

id objc_msgSend_enumerateActiveConversations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateActiveConversations:");
}

id objc_msgSend_enumerateDelegatesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateDelegatesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateRoutesInvokingBlock_forRoutesPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRoutesInvokingBlock:forRoutesPassingTest:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _[a1 environment];
}

id objc_msgSend_errorForDisabledPseudonyms(void *a1, const char *a2, ...)
{
  return _[a1 errorForDisabledPseudonyms];
}

id objc_msgSend_errorForUnregisteredProviderIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorForUnregisteredProviderIdentifier:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_evaluateConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateConversation:");
}

id objc_msgSend_eventBlock(void *a1, const char *a2, ...)
{
  return _[a1 eventBlock];
}

id objc_msgSend_eventTypeNameFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventTypeNameFrom:");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_execute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "execute:");
}

id objc_msgSend_executeSessionDidStart(void *a1, const char *a2, ...)
{
  return _[a1 executeSessionDidStart];
}

id objc_msgSend_expanseBTSwitchingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 expanseBTSwitchingEnabled];
}

id objc_msgSend_expanseEnabled(void *a1, const char *a2, ...)
{
  return _[a1 expanseEnabled];
}

id objc_msgSend_expanseProvider(void *a1, const char *a2, ...)
{
  return _[a1 expanseProvider];
}

id objc_msgSend_expectedAudioEnabled(void *a1, const char *a2, ...)
{
  return _[a1 expectedAudioEnabled];
}

id objc_msgSend_expectedAudioPaused(void *a1, const char *a2, ...)
{
  return _[a1 expectedAudioPaused];
}

id objc_msgSend_expectedRelayClientDestination(void *a1, const char *a2, ...)
{
  return _[a1 expectedRelayClientDestination];
}

id objc_msgSend_expectedScreenEnabled(void *a1, const char *a2, ...)
{
  return _[a1 expectedScreenEnabled];
}

id objc_msgSend_expectedUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 expectedUplinkMuted];
}

id objc_msgSend_expectedVideoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 expectedVideoEnabled];
}

id objc_msgSend_expectedVideoPaused(void *a1, const char *a2, ...)
{
  return _[a1 expectedVideoPaused];
}

id objc_msgSend_expediteDeferredEndInterruptionForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expediteDeferredEndInterruptionForCallWithUUID:");
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_exportedInterface(void *a1, const char *a2, ...)
{
  return _[a1 exportedInterface];
}

id objc_msgSend_exportedObject(void *a1, const char *a2, ...)
{
  return _[a1 exportedObject];
}

id objc_msgSend_extensionWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extensionWithIdentifier:error:");
}

id objc_msgSend_faceTimeAppUUID(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeAppUUID];
}

id objc_msgSend_faceTimeAudioAvailable(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeAudioAvailable];
}

id objc_msgSend_faceTimeAvailabilityChanged(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeAvailabilityChanged];
}

id objc_msgSend_faceTimeCallSource(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeCallSource];
}

id objc_msgSend_faceTimeConversationProviderDelegate(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeConversationProviderDelegate];
}

id objc_msgSend_faceTimeDemuxerDelegate(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeDemuxerDelegate];
}

id objc_msgSend_faceTimeIDMatchesAppleID(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeIDMatchesAppleID];
}

id objc_msgSend_faceTimeIDSProviderDelegate(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeIDSProviderDelegate];
}

id objc_msgSend_faceTimeIDStatus(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeIDStatus];
}

id objc_msgSend_faceTimeIDStatusRefreshed(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeIDStatusRefreshed];
}

id objc_msgSend_faceTimeIMAVProviderDelegate(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeIMAVProviderDelegate];
}

id objc_msgSend_faceTimeIMAccount(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeIMAccount];
}

id objc_msgSend_faceTimeInviteDemuxer(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeInviteDemuxer];
}

id objc_msgSend_faceTimeInviteDictionary(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeInviteDictionary];
}

id objc_msgSend_faceTimeLaunchForIncomingCallURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeLaunchForIncomingCallURL];
}

id objc_msgSend_faceTimeLaunchForScreeningURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeLaunchForScreeningURL];
}

id objc_msgSend_faceTimeMultiwayAvailabilityForDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeMultiwayAvailabilityForDestination:");
}

id objc_msgSend_faceTimeNeedsBackgroundLaunchURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeNeedsBackgroundLaunchURL];
}

id objc_msgSend_faceTimeProvider(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeProvider];
}

id objc_msgSend_faceTimeProviderDelegate(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeProviderDelegate];
}

id objc_msgSend_faceTimeShowAccessoryButtonEventsNoticeUIURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeShowAccessoryButtonEventsNoticeUIURL];
}

id objc_msgSend_faceTimeShowHandoffEligibleNearbyURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeShowHandoffEligibleNearbyURL];
}

id objc_msgSend_faceTimeShowInCallUIURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeShowInCallUIURL];
}

id objc_msgSend_faceTimeShowIncomingTransmissionNoticeUIURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeShowIncomingTransmissionNoticeUIURL];
}

id objc_msgSend_faceTimeShowLagunaPullConversationURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeShowLagunaPullConversationURL];
}

id objc_msgSend_faceTimeShowSystemCallControlsURL(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeShowSystemCallControlsURL];
}

id objc_msgSend_faceTimeSupported(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeSupported];
}

id objc_msgSend_faceTimeVideoAvailable(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeVideoAvailable];
}

id objc_msgSend_facetimeIDSServiceGenerator(void *a1, const char *a2, ...)
{
  return _[a1 facetimeIDSServiceGenerator];
}

id objc_msgSend_facetimeService(void *a1, const char *a2, ...)
{
  return _[a1 facetimeService];
}

id objc_msgSend_fail(void *a1, const char *a2, ...)
{
  return _[a1 fail];
}

id objc_msgSend_failOutstandingActionsForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failOutstandingActionsForCallWithUUID:");
}

id objc_msgSend_failureContext(void *a1, const char *a2, ...)
{
  return _[a1 failureContext];
}

id objc_msgSend_failureContextForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failureContextForChat:");
}

id objc_msgSend_failureReason(void *a1, const char *a2, ...)
{
  return _[a1 failureReason];
}

id objc_msgSend_fallbackApplicationName(void *a1, const char *a2, ...)
{
  return _[a1 fallbackApplicationName];
}

id objc_msgSend_fallbackURL(void *a1, const char *a2, ...)
{
  return _[a1 fallbackURL];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_featureFlags(void *a1, const char *a2, ...)
{
  return _[a1 featureFlags];
}

id objc_msgSend_fetchActivatedLinksWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActivatedLinksWithError:");
}

id objc_msgSend_fetchApplicationStateForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchApplicationStateForBundleIdentifier:");
}

id objc_msgSend_fetchAutomaticDNDAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAutomaticDNDAssertionWithReply:");
}

id objc_msgSend_fetchAvailableAnnouncementRequestTypesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAvailableAnnouncementRequestTypesWithCompletion:");
}

id objc_msgSend_fetchCallSourceForIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCallSourceForIdentifier:completion:");
}

id objc_msgSend_fetchCurrentProcessStatesForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCurrentProcessStatesForBundleIdentifier:");
}

id objc_msgSend_fetchDeletedLinksWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchDeletedLinksWithError:");
}

id objc_msgSend_fetchLiveBlockingInfoForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLiveBlockingInfoForHandle:");
}

id objc_msgSend_fetchLiveBlockingInfoForHandle_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLiveBlockingInfoForHandle:timeout:");
}

id objc_msgSend_fetchPreferredFaceTimeAccountID(void *a1, const char *a2, ...)
{
  return _[a1 fetchPreferredFaceTimeAccountID];
}

id objc_msgSend_fetchServiceProviders(void *a1, const char *a2, ...)
{
  return _[a1 fetchServiceProviders];
}

id objc_msgSend_fetchUpcomingNoticeFromQueue(void *a1, const char *a2, ...)
{
  return _[a1 fetchUpcomingNoticeFromQueue];
}

id objc_msgSend_fetchUpcomingNoticeWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUpcomingNoticeWithCompletionHandler:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileManager(void *a1, const char *a2, ...)
{
  return _[a1 fileManager];
}

id objc_msgSend_fileTransferController(void *a1, const char *a2, ...)
{
  return _[a1 fileTransferController];
}

id objc_msgSend_fileTransferer_didReceiveResourcesAtURL_withMetadata_isZipped_fromIDSDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileTransferer:didReceiveResourcesAtURL:withMetadata:isZipped:fromIDSDestination:");
}

id objc_msgSend_fileTransferer_didTransferFileAtURL_successfully_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileTransferer:didTransferFileAtURL:successfully:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_fileURLWithPathComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPathComponents:");
}

id objc_msgSend_filterClientsEntitledForCapability_andPerformBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterClientsEntitledForCapability:andPerformBlock:");
}

id objc_msgSend_filterClientsUsingPredicate_andPerformBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterClientsUsingPredicate:andPerformBlock:");
}

id objc_msgSend_filterClientsUsingPredicate_andPerformBlock_coalescedByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterClientsUsingPredicate:andPerformBlock:coalescedByIdentifier:");
}

id objc_msgSend_filterGFTaaSCalls(void *a1, const char *a2, ...)
{
  return _[a1 filterGFTaaSCalls];
}

id objc_msgSend_filterStatusForAddresses_withBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterStatusForAddresses:withBundleIdentifier:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_filteredOutReason(void *a1, const char *a2, ...)
{
  return _[a1 filteredOutReason];
}

id objc_msgSend_filters(void *a1, const char *a2, ...)
{
  return _[a1 filters];
}

id objc_msgSend_findConversationLinkMatchingPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findConversationLinkMatchingPseudonym:");
}

id objc_msgSend_findOrCreateConversationWithGroupUUID_messagesGroupUUID_remoteMembers_otherInvitedHandles_localMember_remotePushTokens_link_activity_avMode_presentationMode_conversationProvider_screenSharingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findOrCreateConversationWithGroupUUID:messagesGroupUUID:remoteMembers:otherInvitedHandles:localMember:remotePushTokens:link:activity:avMode:presentationMode:conversationProvider:screenSharingRequest:");
}

id objc_msgSend_firewallManager(void *a1, const char *a2, ...)
{
  return _[a1 firewallManager];
}

id objc_msgSend_firstEnabledBlockingExtensionIdentifierForPhoneNumber_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstEnabledBlockingExtensionIdentifierForPhoneNumber:error:");
}

id objc_msgSend_firstEnabledLiveBlockingExtensionIdentifierForPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstEnabledLiveBlockingExtensionIdentifierForPhoneNumber:");
}

id objc_msgSend_firstEnabledLiveBlockingExtensionIdentifierForPhoneNumber_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstEnabledLiveBlockingExtensionIdentifierForPhoneNumber:timeout:");
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _[a1 firstIndex];
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstUnlockCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 firstUnlockCallbacks];
}

id objc_msgSend_firstUnlockObserver(void *a1, const char *a2, ...)
{
  return _[a1 firstUnlockObserver];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_forceExpanseEnabled(void *a1, const char *a2, ...)
{
  return _[a1 forceExpanseEnabled];
}

id objc_msgSend_formUnionWithCharacterSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formUnionWithCharacterSet:");
}

id objc_msgSend_frameRate(void *a1, const char *a2, ...)
{
  return _[a1 frameRate];
}

id objc_msgSend_fromHandle(void *a1, const char *a2, ...)
{
  return _[a1 fromHandle];
}

id objc_msgSend_fromServer(void *a1, const char *a2, ...)
{
  return _[a1 fromServer];
}

id objc_msgSend_fromServerStorage(void *a1, const char *a2, ...)
{
  return _[a1 fromServerStorage];
}

id objc_msgSend_frontmostAudioOrVideoCall(void *a1, const char *a2, ...)
{
  return _[a1 frontmostAudioOrVideoCall];
}

id objc_msgSend_frontmostBargeCall(void *a1, const char *a2, ...)
{
  return _[a1 frontmostBargeCall];
}

id objc_msgSend_frontmostCall(void *a1, const char *a2, ...)
{
  return _[a1 frontmostCall];
}

id objc_msgSend_ftAppDeletionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 ftAppDeletionEnabled];
}

id objc_msgSend_fulfill(void *a1, const char *a2, ...)
{
  return _[a1 fulfill];
}

id objc_msgSend_fulfillLocalScreenShareRequests(void *a1, const char *a2, ...)
{
  return _[a1 fulfillLocalScreenShareRequests];
}

id objc_msgSend_fulfillPendingScreenSharingRequestsForRemoteParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fulfillPendingScreenSharingRequestsForRemoteParticipant:");
}

id objc_msgSend_fulfillWithDateConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fulfillWithDateConnected:");
}

id objc_msgSend_fullfillPendingJoinActionsForCallUUIDIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullfillPendingJoinActionsForCallUUIDIfNecessary:");
}

id objc_msgSend_fuzzyPhotoRequestFailureCount(void *a1, const char *a2, ...)
{
  return _[a1 fuzzyPhotoRequestFailureCount];
}

id objc_msgSend_fuzzyPhotoRequestSuccessCount(void *a1, const char *a2, ...)
{
  return _[a1 fuzzyPhotoRequestSuccessCount];
}

id objc_msgSend_gelatoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 gelatoEnabled];
}

id objc_msgSend_generateAllInactiveLinks(void *a1, const char *a2, ...)
{
  return _[a1 generateAllInactiveLinks];
}

id objc_msgSend_generateAllInactiveLinksFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateAllInactiveLinksFor:");
}

id objc_msgSend_generateDescriptorInfosAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateDescriptorInfosAtIndex:");
}

id objc_msgSend_generateDescriptorInfosCount(void *a1, const char *a2, ...)
{
  return _[a1 generateDescriptorInfosCount];
}

id objc_msgSend_generateInactiveLinkFor_afterActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateInactiveLinkFor:afterActivation:");
}

id objc_msgSend_generateLinkForConversationUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLinkForConversationUUID:completionHandler:");
}

id objc_msgSend_generateLinkWithGroupUUID_invitedHandles_originatorHandle_linkLifetimeScope_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLinkWithGroupUUID:invitedHandles:originatorHandle:linkLifetimeScope:completionHandler:");
}

id objc_msgSend_generateLinkWithInvitedHandles_originatorHandle_linkLifetimeScope_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLinkWithInvitedHandles:originatorHandle:linkLifetimeScope:completionHandler:");
}

id objc_msgSend_generateLinkWithInvitedMemberHandles_linkLifetimeScope_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateLinkWithInvitedMemberHandles:linkLifetimeScope:completionHandler:");
}

id objc_msgSend_generatePreviewImageFromData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePreviewImageFromData:completionHandler:");
}

id objc_msgSend_generatePseudonymHandleForConversationProvider_expiryDuration_URI_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePseudonymHandleForConversationProvider:expiryDuration:URI:completionHandler:");
}

id objc_msgSend_generatePseudonymHandleForConversationWithExpiryDuration_URI_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePseudonymHandleForConversationWithExpiryDuration:URI:completionHandler:");
}

id objc_msgSend_generatorDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 generatorDescriptor];
}

id objc_msgSend_generatorDescriptorsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatorDescriptorsAtIndex:");
}

id objc_msgSend_generatorDescriptorsCount(void *a1, const char *a2, ...)
{
  return _[a1 generatorDescriptorsCount];
}

id objc_msgSend_generatorID(void *a1, const char *a2, ...)
{
  return _[a1 generatorID];
}

id objc_msgSend_generatorVersion(void *a1, const char *a2, ...)
{
  return _[a1 generatorVersion];
}

id objc_msgSend_gestureHandler(void *a1, const char *a2, ...)
{
  return _[a1 gestureHandler];
}

id objc_msgSend_getActiveContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getActiveContexts:");
}

id objc_msgSend_getActiveLinksWithCreatedOnly_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getActiveLinksWithCreatedOnly:completionHandler:");
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 getActivePairedDevice];
}

id objc_msgSend_getCallCapabilities_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCallCapabilities:error:");
}

id objc_msgSend_getInactiveLinkForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInactiveLinkForHandle:");
}

id objc_msgSend_getInactiveLinkForHandle_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInactiveLinkForHandle:completionHandler:");
}

id objc_msgSend_getInactiveLinkWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInactiveLinkWithCompletionHandler:");
}

id objc_msgSend_getIsAudioPaused_callID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIsAudioPaused:callID:error:");
}

id objc_msgSend_getIsSendingAudio_callID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIsSendingAudio:callID:error:");
}

id objc_msgSend_getIsVideoPaused_callID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIsVideoPaused:callID:error:");
}

id objc_msgSend_getLatestRemoteScreenShareAttributesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLatestRemoteScreenShareAttributesWithCompletionHandler:");
}

id objc_msgSend_getLinkDescriptorWithPseudonym_includeInactive_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLinkDescriptorWithPseudonym:includeInactive:completionHandler:");
}

id objc_msgSend_getNeedsDisclosureOfCollaborationInitiator_forConversationUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNeedsDisclosureOfCollaborationInitiator:forConversationUUID:completionHandler:");
}

id objc_msgSend_getParticipantIDForAlias_salt_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getParticipantIDForAlias:salt:completionHandler:");
}

id objc_msgSend_getPersonalNicknameBlock(void *a1, const char *a2, ...)
{
  return _[a1 getPersonalNicknameBlock];
}

id objc_msgSend_getPhoneServicesDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPhoneServicesDeviceInfo:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getRoamingStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRoamingStatus:error:");
}

id objc_msgSend_getSubscriptionInfoWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionInfoWithError:");
}

id objc_msgSend_gftDowngradeToOneToOne(void *a1, const char *a2, ...)
{
  return _[a1 gftDowngradeToOneToOne];
}

id objc_msgSend_gftOnWatch(void *a1, const char *a2, ...)
{
  return _[a1 gftOnWatch];
}

id objc_msgSend_gftaasPseudonymsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gftaasPseudonymsEnabled:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_greenTeaHandoffTimeout(void *a1, const char *a2, ...)
{
  return _[a1 greenTeaHandoffTimeout];
}

id objc_msgSend_greenTeaLeaveContext(void *a1, const char *a2, ...)
{
  return _[a1 greenTeaLeaveContext];
}

id objc_msgSend_groupActivitiesReportsReceived_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupActivitiesReportsReceived:forConversation:");
}

id objc_msgSend_groupCall_withOtherCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupCall:withOtherCall:");
}

id objc_msgSend_groupCalls_withCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupCalls:withCalls:");
}

id objc_msgSend_groupConversations(void *a1, const char *a2, ...)
{
  return _[a1 groupConversations];
}

id objc_msgSend_groupFaceTimeServiceProviderDelegate(void *a1, const char *a2, ...)
{
  return _[a1 groupFaceTimeServiceProviderDelegate];
}

id objc_msgSend_groupFaceTimeTLESampleRate(void *a1, const char *a2, ...)
{
  return _[a1 groupFaceTimeTLESampleRate];
}

id objc_msgSend_groupFacetimeAsAServiceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 groupFacetimeAsAServiceEnabled];
}

id objc_msgSend_groupID(void *a1, const char *a2, ...)
{
  return _[a1 groupID];
}

id objc_msgSend_groupSessionProviderCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionProviderCreationBlock];
}

id objc_msgSend_groupUUID(void *a1, const char *a2, ...)
{
  return _[a1 groupUUID];
}

id objc_msgSend_groupUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 groupUUIDString];
}

id objc_msgSend_groupWithOtherCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupWithOtherCall:");
}

id objc_msgSend_guestModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 guestModeEnabled];
}

id objc_msgSend_handedOff(void *a1, const char *a2, ...)
{
  return _[a1 handedOff];
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handleAddMemberMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAddMemberMessageFromClient:");
}

id objc_msgSend_handleAnswerCallMessageFromClient_destination_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAnswerCallMessageFromClient:destination:device:");
}

id objc_msgSend_handleAppUninstall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAppUninstall:");
}

id objc_msgSend_handleApplicationUninstalledNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleApplicationUninstalledNotification:");
}

id objc_msgSend_handleAudioSessionActivationStateChangedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAudioSessionActivationStateChangedTo:");
}

id objc_msgSend_handleBuzzMemberMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBuzzMemberMessageFromClient:");
}

id objc_msgSend_handleByFullyQualifyingHandle_usingCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleByFullyQualifyingHandle:usingCountryCode:");
}

id objc_msgSend_handleBytesOfDataUsedChanged_forCallWithUniqueProxyIdentifier_callHistoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleBytesOfDataUsedChanged:forCallWithUniqueProxyIdentifier:callHistoryIdentifier:");
}

id objc_msgSend_handleCallAnsweredElsewhereMessageFromHost_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCallAnsweredElsewhereMessageFromHost:fromPairedDevice:");
}

id objc_msgSend_handleCallConnectedMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCallConnectedMessageFromHost:");
}

id objc_msgSend_handleCallDialedMessageFromHost_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCallDialedMessageFromHost:fromPairedDevice:");
}

id objc_msgSend_handleCallDisconnectedMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCallDisconnectedMessageFromHost:");
}

id objc_msgSend_handleCallSourcesChanged(void *a1, const char *a2, ...)
{
  return _[a1 handleCallSourcesChanged];
}

id objc_msgSend_handleCallStartedConnectingMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCallStartedConnectingMessageFromHost:");
}

id objc_msgSend_handleClientDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClientDisconnected:");
}

id objc_msgSend_handleConversation_addHighlight_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:addHighlight:fromHandle:");
}

id objc_msgSend_handleConversation_participantUpdateMessage_fromNormalizedHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:participantUpdateMessage:fromNormalizedHandle:");
}

id objc_msgSend_handleConversation_receivedActivitySession_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:receivedActivitySession:fromHandle:");
}

id objc_msgSend_handleConversation_receivedBlobRecoveryRequest_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:receivedBlobRecoveryRequest:fromHandle:");
}

id objc_msgSend_handleConversation_receivedBlobRecoveryResponse_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:receivedBlobRecoveryResponse:fromHandle:");
}

id objc_msgSend_handleConversation_receivedEndorsementForMember_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:receivedEndorsementForMember:fromHandle:");
}

id objc_msgSend_handleConversation_registerMessagesGroupUUIDMessage_fromNormalizedHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:registerMessagesGroupUUIDMessage:fromNormalizedHandle:");
}

id objc_msgSend_handleConversation_removeActivitySession_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:removeActivitySession:fromHandle:");
}

id objc_msgSend_handleConversation_removeHighlight_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:removeHighlight:fromHandle:");
}

id objc_msgSend_handleConversation_screenShareRequest_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:screenShareRequest:fromHandle:");
}

id objc_msgSend_handleConversation_screenShareResponse_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:screenShareResponse:fromHandle:");
}

id objc_msgSend_handleConversation_updateActivity_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:updateActivity:fromHandle:");
}

id objc_msgSend_handleConversation_updateActivityImage_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:updateActivityImage:fromHandle:");
}

id objc_msgSend_handleConversation_updateGuestMode_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversation:updateGuestMode:fromHandle:");
}

id objc_msgSend_handleConversationProminenceMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleConversationProminenceMessageFromHost:");
}

id objc_msgSend_handleConversationStateUpdated(void *a1, const char *a2, ...)
{
  return _[a1 handleConversationStateUpdated];
}

id objc_msgSend_handleCurrentCallsChanged_callDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCurrentCallsChanged:callDisconnected:");
}

id objc_msgSend_handleDeclineMessage_forConversation_fromHandle_withUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeclineMessage:forConversation:fromHandle:withUpdate:");
}

id objc_msgSend_handleDelegatedPendingMember_forConversation_withGroupUUID_from_transactionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDelegatedPendingMember:forConversation:withGroupUUID:from:transactionUUID:");
}

id objc_msgSend_handleDelegatedPendingMemberIfNecessary_conversation_groupUUID_fromHandle_transactionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDelegatedPendingMemberIfNecessary:conversation:groupUUID:fromHandle:transactionUUID:");
}

id objc_msgSend_handleDeviceUnavailableMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDeviceUnavailableMessageFromHost:");
}

id objc_msgSend_handleDialCallMessageFromClient_destination_device_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDialCallMessageFromClient:destination:device:completion:");
}

id objc_msgSend_handleDisconnectAllCallsMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDisconnectAllCallsMessageFromClient:");
}

id objc_msgSend_handleDisconnectCallMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDisconnectCallMessageFromClient:");
}

id objc_msgSend_handleDisconnectCurrentCallAndActivateHeldMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDisconnectCurrentCallAndActivateHeldMessageFromClient:");
}

id objc_msgSend_handleEncryptedLetMeInRequest_fromHandle_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEncryptedLetMeInRequest:fromHandle:context:");
}

id objc_msgSend_handleEncryptedLetMeInResponse_fromHandle_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEncryptedLetMeInResponse:fromHandle:context:");
}

id objc_msgSend_handleEncryptedMessageWithin_fromHandle_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEncryptedMessageWithin:fromHandle:context:");
}

id objc_msgSend_handleEndActiveAndAnswerMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEndActiveAndAnswerMessageFromClient:");
}

id objc_msgSend_handleEndHeldAndAnswerMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEndHeldAndAnswerMessageFromClient:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleForIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForIdentifier:error:");
}

id objc_msgSend_handleForPredicate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForPredicate:error:");
}

id objc_msgSend_handleFrequencyChangedTo_inDirection_forCallsWithUniqueProxyIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:");
}

id objc_msgSend_handleFrequencyDataChanged_inDirection_forCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFrequencyDataChanged:inDirection:forCalls:");
}

id objc_msgSend_handleGroupCallMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGroupCallMessageFromClient:");
}

id objc_msgSend_handleHardPauseDigitsAvailabilityMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHardPauseDigitsAvailabilityMessageFromHost:");
}

id objc_msgSend_handleHoldActiveAndAnswerMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHoldActiveAndAnswerMessageFromClient:");
}

id objc_msgSend_handleHoldCallMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHoldCallMessageFromClient:");
}

id objc_msgSend_handleIncomingCallMessageFromHost_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIncomingCallMessageFromHost:fromPairedDevice:");
}

id objc_msgSend_handleInvitationMessage_forConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInvitationMessage:forConversation:fromHandle:");
}

id objc_msgSend_handleInvitationMessageForLetMeIn_forConversation_pendingConversation_link_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInvitationMessageForLetMeIn:forConversation:pendingConversation:link:fromHandle:");
}

id objc_msgSend_handleInvitationSentMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInvitationSentMessageFromHost:");
}

id objc_msgSend_handleInvocation_synchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInvocation:synchronously:");
}

id objc_msgSend_handleIsDeniedForSharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIsDeniedForSharing:");
}

id objc_msgSend_handleJoinConversationMessageFromClient_destination_device_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleJoinConversationMessageFromClient:destination:device:completion:");
}

id objc_msgSend_handleLocalApprovalOfMember_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLocalApprovalOfMember:forConversation:");
}

id objc_msgSend_handleLocalRejectionOfMember_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLocalRejectionOfMember:forConversation:");
}

id objc_msgSend_handleLocalRoutesByUniqueIdentifierUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLocalRoutesByUniqueIdentifierUpdated:");
}

id objc_msgSend_handleMessage_forConversation_fromHandle_withUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMessage:forConversation:fromHandle:withUpdate:");
}

id objc_msgSend_handleMeterLevelChanged_inDirection_forCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMeterLevelChanged:inDirection:forCalls:");
}

id objc_msgSend_handleMeterLevelChangedTo_inDirection_forCallsWithUniqueProxyIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:");
}

id objc_msgSend_handleNeedsManualInCallSoundsChangeMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNeedsManualInCallSoundsChangeMessageFromHost:");
}

id objc_msgSend_handleNewPendingMember_responseKey_forConversation_withLink_dateInitiatedLMI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNewPendingMember:responseKey:forConversation:withLink:dateInitiatedLMI:");
}

id objc_msgSend_handleNicknameUpdateMessage_forConversation_fromHandle_withUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNicknameUpdateMessage:forConversation:fromHandle:withUpdate:");
}

id objc_msgSend_handleNotificationName_forCallWithUniqueProxyIdentifier_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:");
}

id objc_msgSend_handleOngoingConversationMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleOngoingConversationMessageFromHost:");
}

id objc_msgSend_handlePINCodeEnteredSuccessfully_canceled_fromDevice_isPrimaryDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePINCodeEnteredSuccessfully:canceled:fromDevice:isPrimaryDevice:");
}

id objc_msgSend_handlePairedHostDeviceRoutesByUniqueIdentifierUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:");
}

id objc_msgSend_handleParticipantWithIdentifier_leftConversationWithGroupUUID_fromHandle_withGroupSessionUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleParticipantWithIdentifier:leftConversationWithGroupUUID:fromHandle:withGroupSessionUpdate:");
}

id objc_msgSend_handleParticipants_joinedConversationWithUpdate_joinContext_fromHandle_isFromPendingMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleParticipants:joinedConversationWithUpdate:joinContext:fromHandle:isFromPendingMessage:");
}

id objc_msgSend_handlePickRouteMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePickRouteMessageFromClient:");
}

id objc_msgSend_handlePlayDTMFToneForKeyMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlayDTMFToneForKeyMessage:");
}

id objc_msgSend_handlePullHostedCallsMessageFromClient_destination_fromPairedDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePullHostedCallsMessageFromClient:destination:fromPairedDevice:completion:");
}

id objc_msgSend_handlePullRelayingCallsMessageFromHost_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePullRelayingCallsMessageFromHost:fromPairedDevice:");
}

id objc_msgSend_handlePushHostedCallsMessageFromHost_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePushHostedCallsMessageFromHost:completion:");
}

id objc_msgSend_handlePushRelayingCallsMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePushRelayingCallsMessageFromClient:");
}

id objc_msgSend_handleReceivedCallDTMFUpdate_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedCallDTMFUpdate:forCall:");
}

id objc_msgSend_handleReceivedCallDTMFUpdate_forCallWithUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedCallDTMFUpdate:forCallWithUniqueProxyIdentifier:");
}

id objc_msgSend_handleReceivedDTMFUpdateMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedDTMFUpdateMessageFromHost:");
}

id objc_msgSend_handleReceivedLMIDelegateMessage_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedLMIDelegateMessage:fromHandle:");
}

id objc_msgSend_handleReceivedLetMeInRequest_toPseudonym_fromHandle_responseKeyData_dateInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedLetMeInRequest:toPseudonym:fromHandle:responseKeyData:dateInitiated:");
}

id objc_msgSend_handleReceivedLetMeInResponse_pendingConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedLetMeInResponse:pendingConversation:fromHandle:");
}

id objc_msgSend_handleReceivedLinkCreatedOrChangedMessage_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedLinkCreatedOrChangedMessage:fromHandle:");
}

id objc_msgSend_handleReceivedLinkInvalidatedMessage_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedLinkInvalidatedMessage:fromHandle:");
}

id objc_msgSend_handleReceivedUpdateJoinedMetadataMessage_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedUpdateJoinedMetadataMessage:fromHandle:");
}

id objc_msgSend_handleReceivedVideoUpgradeMessage_forConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleReceivedVideoUpgradeMessage:forConversation:fromHandle:");
}

id objc_msgSend_handleRemoteApprovalOfMember_forConversation_from_transactionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteApprovalOfMember:forConversation:from:transactionUUID:");
}

id objc_msgSend_handleRemoteRejectionOfMember_forConversation_from_transactionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteRejectionOfMember:forConversation:from:transactionUUID:");
}

id objc_msgSend_handleRemoveMembersMessage_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoveMembersMessage:forConversation:");
}

id objc_msgSend_handleRemovedLinkDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemovedLinkDescriptors:");
}

id objc_msgSend_handleRequestActionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRequestActionMessage:");
}

id objc_msgSend_handleRequestCallContextMessageFromClient_fromDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRequestCallContextMessageFromClient:fromDevice:");
}

id objc_msgSend_handleRequestedAnswerMessage_withBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRequestedAnswerMessage:withBehavior:");
}

id objc_msgSend_handleResetStateMessageFromHost_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleResetStateMessageFromHost:fromPairedDevice:");
}

id objc_msgSend_handleResetWantsHoldMusicFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleResetWantsHoldMusicFromHost:");
}

id objc_msgSend_handleRespondedElsewhereMessage_forConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRespondedElsewhereMessage:forConversation:fromHandle:");
}

id objc_msgSend_handleRespondedElsewhereMessage_forConversation_fromHandle_withAliases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRespondedElsewhereMessage:forConversation:fromHandle:withAliases:");
}

id objc_msgSend_handleSendHardPauseDigitsMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSendHardPauseDigitsMessageFromClient:");
}

id objc_msgSend_handleSetTTYTypeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetTTYTypeMessage:");
}

id objc_msgSend_handleSetUplinkMutedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetUplinkMutedMessage:");
}

id objc_msgSend_handleSpringBoardPIDChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSpringBoardPIDChanged:");
}

id objc_msgSend_handleSuppressRingtoneMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSuppressRingtoneMessage:");
}

id objc_msgSend_handleSwapCallsMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSwapCallsMessageFromClient:");
}

id objc_msgSend_handleTLTonePreferencesDidChangeNotification(void *a1, const char *a2, ...)
{
  return _[a1 handleTLTonePreferencesDidChangeNotification];
}

id objc_msgSend_handleType(void *a1, const char *a2, ...)
{
  return _[a1 handleType];
}

id objc_msgSend_handleTypeForTUHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTypeForTUHandle:");
}

id objc_msgSend_handleUIXPCEndpointChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUIXPCEndpointChanged:");
}

id objc_msgSend_handleUngroupCallMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUngroupCallMessageFromClient:");
}

id objc_msgSend_handleUnholdCallMessageFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUnholdCallMessageFromClient:");
}

id objc_msgSend_handleUpdateCallContextAvailableMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateCallContextAvailableMessageFromHost:");
}

id objc_msgSend_handleUpdateCallDisplayContextMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateCallDisplayContextMessageFromHost:");
}

id objc_msgSend_handleUpdateCallModelMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateCallModelMessageFromHost:");
}

id objc_msgSend_handleUpdateConversationsMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateConversationsMessageFromHost:");
}

id objc_msgSend_handleUpdateFailureExpectedMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateFailureExpectedMessageFromHost:");
}

id objc_msgSend_handleUpdateRemoteCallStateMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateRemoteCallStateMessageFromHost:");
}

id objc_msgSend_handleUpdateRemoteUplinkMutedMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateRemoteUplinkMutedMessageFromHost:");
}

id objc_msgSend_handleUpdateRoutesMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateRoutesMessageFromHost:");
}

id objc_msgSend_handleUpdateSupportsDTMFUpdatesMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateSupportsDTMFUpdatesMessageFromHost:");
}

id objc_msgSend_handleUpdateSupportsEmergencyFallbackMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateSupportsEmergencyFallbackMessageFromHost:");
}

id objc_msgSend_handleUpdateSupportsTTYWithVoiceMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateSupportsTTYWithVoiceMessageFromHost:");
}

id objc_msgSend_handleUpdateSystemVolumeMessageFromHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateSystemVolumeMessageFromHost:");
}

id objc_msgSend_handleUpdatedPairedHostDeviceRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdatedPairedHostDeviceRoutes:");
}

id objc_msgSend_handleUpdatedPropertiesAfterChangesInBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdatedPropertiesAfterChangesInBlock:");
}

id objc_msgSend_handleUpgradeMessage_forConversation_fromHandle_withUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpgradeMessage:forConversation:fromHandle:withUpdate:");
}

id objc_msgSend_handleUserInteractionsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUserInteractionsWithBlock:");
}

id objc_msgSend_handleWithDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWithDestinationID:");
}

id objc_msgSend_handleWithTUHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWithTUHandle:");
}

id objc_msgSend_handleWithTULabeledHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWithTULabeledHandle:");
}

id objc_msgSend_handles(void *a1, const char *a2, ...)
{
  return _[a1 handles];
}

id objc_msgSend_handlesToInviteAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlesToInviteAtIndex:");
}

id objc_msgSend_handlesToInvites(void *a1, const char *a2, ...)
{
  return _[a1 handlesToInvites];
}

id objc_msgSend_handlesToInvitesCount(void *a1, const char *a2, ...)
{
  return _[a1 handlesToInvitesCount];
}

id objc_msgSend_handoffActivity(void *a1, const char *a2, ...)
{
  return _[a1 handoffActivity];
}

id objc_msgSend_handoffActivityUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 handoffActivityUserInfo];
}

id objc_msgSend_handoffContext(void *a1, const char *a2, ...)
{
  return _[a1 handoffContext];
}

id objc_msgSend_handoffDynamicIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 handoffDynamicIdentifier];
}

id objc_msgSend_handoffEligibility(void *a1, const char *a2, ...)
{
  return _[a1 handoffEligibility];
}

id objc_msgSend_handoffEligibleConversation(void *a1, const char *a2, ...)
{
  return _[a1 handoffEligibleConversation];
}

id objc_msgSend_handoffIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 handoffIdentifier];
}

id objc_msgSend_handoffIdentifierAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handoffIdentifierAtIndex:");
}

id objc_msgSend_handoffIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 handoffIdentifiers];
}

id objc_msgSend_handoffIdentifiersCount(void *a1, const char *a2, ...)
{
  return _[a1 handoffIdentifiersCount];
}

id objc_msgSend_handoffRecipientParticipant(void *a1, const char *a2, ...)
{
  return _[a1 handoffRecipientParticipant];
}

id objc_msgSend_handoffReportReceived_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handoffReportReceived:forConversation:");
}

id objc_msgSend_handoffUPlusOneLeaveDelay(void *a1, const char *a2, ...)
{
  return _[a1 handoffUPlusOneLeaveDelay];
}

id objc_msgSend_handoffUPlusOneLeaveTimeout(void *a1, const char *a2, ...)
{
  return _[a1 handoffUPlusOneLeaveTimeout];
}

id objc_msgSend_hardPauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 hardPauseDigits];
}

id objc_msgSend_hardPauseDigitsState(void *a1, const char *a2, ...)
{
  return _[a1 hardPauseDigitsState];
}

id objc_msgSend_hardPauseState(void *a1, const char *a2, ...)
{
  return _[a1 hardPauseState];
}

id objc_msgSend_hasActionDescription(void *a1, const char *a2, ...)
{
  return _[a1 hasActionDescription];
}

id objc_msgSend_hasActiveAudioSession(void *a1, const char *a2, ...)
{
  return _[a1 hasActiveAudioSession];
}

id objc_msgSend_hasAlias_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAlias:");
}

id objc_msgSend_hasAudioInterruption(void *a1, const char *a2, ...)
{
  return _[a1 hasAudioInterruption];
}

id objc_msgSend_hasAvMode(void *a1, const char *a2, ...)
{
  return _[a1 hasAvMode];
}

id objc_msgSend_hasBeenExpiredForAtLeast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBeenExpiredForAtLeast:");
}

id objc_msgSend_hasBeenRedirected(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenRedirected];
}

id objc_msgSend_hasBeenUnlockedSinceBoot(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenUnlockedSinceBoot];
}

id objc_msgSend_hasBeenUnlockedSinceBootBlock(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenUnlockedSinceBootBlock];
}

id objc_msgSend_hasCallStartedConnectingWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCallStartedConnectingWithUUID:");
}

id objc_msgSend_hasCalledStop(void *a1, const char *a2, ...)
{
  return _[a1 hasCalledStop];
}

id objc_msgSend_hasCellularSettingsRemediation(void *a1, const char *a2, ...)
{
  return _[a1 hasCellularSettingsRemediation];
}

id objc_msgSend_hasCleanedUp(void *a1, const char *a2, ...)
{
  return _[a1 hasCleanedUp];
}

id objc_msgSend_hasCompletedDescription(void *a1, const char *a2, ...)
{
  return _[a1 hasCompletedDescription];
}

id objc_msgSend_hasConnected(void *a1, const char *a2, ...)
{
  return _[a1 hasConnected];
}

id objc_msgSend_hasContextIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hasContextIdentifier];
}

id objc_msgSend_hasConversationGroupUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 hasConversationGroupUUIDString];
}

id objc_msgSend_hasConversationID(void *a1, const char *a2, ...)
{
  return _[a1 hasConversationID];
}

id objc_msgSend_hasCreationDateEpochTime(void *a1, const char *a2, ...)
{
  return _[a1 hasCreationDateEpochTime];
}

id objc_msgSend_hasCurrentCalls(void *a1, const char *a2, ...)
{
  return _[a1 hasCurrentCalls];
}

id objc_msgSend_hasCurrentVideoCalls(void *a1, const char *a2, ...)
{
  return _[a1 hasCurrentVideoCalls];
}

id objc_msgSend_hasCustomGreetingFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCustomGreetingFor:");
}

id objc_msgSend_hasDateAndTimeSettingsRemediation(void *a1, const char *a2, ...)
{
  return _[a1 hasDateAndTimeSettingsRemediation];
}

id objc_msgSend_hasDtmfUpdateDigits(void *a1, const char *a2, ...)
{
  return _[a1 hasDtmfUpdateDigits];
}

id objc_msgSend_hasEmergencyVideoStream(void *a1, const char *a2, ...)
{
  return _[a1 hasEmergencyVideoStream];
}

id objc_msgSend_hasEnclosedEncryptedType(void *a1, const char *a2, ...)
{
  return _[a1 hasEnclosedEncryptedType];
}

id objc_msgSend_hasEncryptedMessage(void *a1, const char *a2, ...)
{
  return _[a1 hasEncryptedMessage];
}

id objc_msgSend_hasEnded(void *a1, const char *a2, ...)
{
  return _[a1 hasEnded];
}

id objc_msgSend_hasGeneratorDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 hasGeneratorDescriptor];
}

id objc_msgSend_hasGeneratorID(void *a1, const char *a2, ...)
{
  return _[a1 hasGeneratorID];
}

id objc_msgSend_hasGeneratorVersion(void *a1, const char *a2, ...)
{
  return _[a1 hasGeneratorVersion];
}

id objc_msgSend_hasGroupUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupUUIDString];
}

id objc_msgSend_hasGuestModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasGuestModeEnabled];
}

id objc_msgSend_hasHandleType(void *a1, const char *a2, ...)
{
  return _[a1 hasHandleType];
}

id objc_msgSend_hasIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hasIdentifier];
}

id objc_msgSend_hasIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasIdentifier:");
}

id objc_msgSend_hasImage(void *a1, const char *a2, ...)
{
  return _[a1 hasImage];
}

id objc_msgSend_hasInEarRouteInTipiWithAndSmartRoutedToCompanionWatch(void *a1, const char *a2, ...)
{
  return _[a1 hasInEarRouteInTipiWithAndSmartRoutedToCompanionWatch];
}

id objc_msgSend_hasInEarRouteInTipiWithCompanionWatch(void *a1, const char *a2, ...)
{
  return _[a1 hasInEarRouteInTipiWithCompanionWatch];
}

id objc_msgSend_hasIsActivated(void *a1, const char *a2, ...)
{
  return _[a1 hasIsActivated];
}

id objc_msgSend_hasIsLetMeInApproved(void *a1, const char *a2, ...)
{
  return _[a1 hasIsLetMeInApproved];
}

id objc_msgSend_hasJoined(void *a1, const char *a2, ...)
{
  return _[a1 hasJoined];
}

id objc_msgSend_hasLink(void *a1, const char *a2, ...)
{
  return _[a1 hasLink];
}

id objc_msgSend_hasLinkName(void *a1, const char *a2, ...)
{
  return _[a1 hasLinkName];
}

id objc_msgSend_hasListenerForID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasListenerForID:");
}

id objc_msgSend_hasLocationSettingsRemediation(void *a1, const char *a2, ...)
{
  return _[a1 hasLocationSettingsRemediation];
}

id objc_msgSend_hasMessagesGroupUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 hasMessagesGroupUUIDString];
}

id objc_msgSend_hasNickname(void *a1, const char *a2, ...)
{
  return _[a1 hasNickname];
}

id objc_msgSend_hasNotificationStyles(void *a1, const char *a2, ...)
{
  return _[a1 hasNotificationStyles];
}

id objc_msgSend_hasOngoingDescription(void *a1, const char *a2, ...)
{
  return _[a1 hasOngoingDescription];
}

id objc_msgSend_hasOptions(void *a1, const char *a2, ...)
{
  return _[a1 hasOptions];
}

id objc_msgSend_hasOriginatorHandle(void *a1, const char *a2, ...)
{
  return _[a1 hasOriginatorHandle];
}

id objc_msgSend_hasPTTBackgroundMode(void *a1, const char *a2, ...)
{
  return _[a1 hasPTTBackgroundMode];
}

id objc_msgSend_hasPTTSelfAddEntitlement(void *a1, const char *a2, ...)
{
  return _[a1 hasPTTSelfAddEntitlement];
}

id objc_msgSend_hasPaddingForHashedValue(void *a1, const char *a2, ...)
{
  return _[a1 hasPaddingForHashedValue];
}

id objc_msgSend_hasParticipantAssociation(void *a1, const char *a2, ...)
{
  return _[a1 hasParticipantAssociation];
}

id objc_msgSend_hasPendingChannelPushMessagesToDeliver(void *a1, const char *a2, ...)
{
  return _[a1 hasPendingChannelPushMessagesToDeliver];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPresentationMode(void *a1, const char *a2, ...)
{
  return _[a1 hasPresentationMode];
}

id objc_msgSend_hasPrivateKey(void *a1, const char *a2, ...)
{
  return _[a1 hasPrivateKey];
}

id objc_msgSend_hasProtoProvider(void *a1, const char *a2, ...)
{
  return _[a1 hasProtoProvider];
}

id objc_msgSend_hasProtoUpgradeSessionUUID(void *a1, const char *a2, ...)
{
  return _[a1 hasProtoUpgradeSessionUUID];
}

id objc_msgSend_hasProtoVideo(void *a1, const char *a2, ...)
{
  return _[a1 hasProtoVideo];
}

id objc_msgSend_hasProtoWantsVideo(void *a1, const char *a2, ...)
{
  return _[a1 hasProtoWantsVideo];
}

id objc_msgSend_hasPseudonymExpirationDateEpochTime(void *a1, const char *a2, ...)
{
  return _[a1 hasPseudonymExpirationDateEpochTime];
}

id objc_msgSend_hasQueuedHardPauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 hasQueuedHardPauseDigits];
}

id objc_msgSend_hasReceivedAccept(void *a1, const char *a2, ...)
{
  return _[a1 hasReceivedAccept];
}

id objc_msgSend_hasReceivedLetMeInRequest(void *a1, const char *a2, ...)
{
  return _[a1 hasReceivedLetMeInRequest];
}

id objc_msgSend_hasRelaySupport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRelaySupport:");
}

id objc_msgSend_hasRequestBlobRecoveryOptions(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestBlobRecoveryOptions];
}

id objc_msgSend_hasRestrictionsInRetailEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 hasRestrictionsInRetailEnvironment];
}

id objc_msgSend_hasSceneAssociationBehavior(void *a1, const char *a2, ...)
{
  return _[a1 hasSceneAssociationBehavior];
}

id objc_msgSend_hasScreenSharingRequest(void *a1, const char *a2, ...)
{
  return _[a1 hasScreenSharingRequest];
}

id objc_msgSend_hasSentInvitation(void *a1, const char *a2, ...)
{
  return _[a1 hasSentInvitation];
}

id objc_msgSend_hasSet(void *a1, const char *a2, ...)
{
  return _[a1 hasSet];
}

id objc_msgSend_hasSourceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hasSourceIdentifier];
}

id objc_msgSend_hasStarted(void *a1, const char *a2, ...)
{
  return _[a1 hasStarted];
}

id objc_msgSend_hasStartedConnecting(void *a1, const char *a2, ...)
{
  return _[a1 hasStartedConnecting];
}

id objc_msgSend_hasStartedOutgoing(void *a1, const char *a2, ...)
{
  return _[a1 hasStartedOutgoing];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasSystemVolume(void *a1, const char *a2, ...)
{
  return _[a1 hasSystemVolume];
}

id objc_msgSend_hasTimestampAsTimeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 hasTimestampAsTimeIntervalSinceReferenceDate];
}

id objc_msgSend_hasType(void *a1, const char *a2, ...)
{
  return _[a1 hasType];
}

id objc_msgSend_hasVideo(void *a1, const char *a2, ...)
{
  return _[a1 hasVideo];
}

id objc_msgSend_hasVideoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasVideoEnabled];
}

id objc_msgSend_hasVoIPBackgroundMode(void *a1, const char *a2, ...)
{
  return _[a1 hasVoIPBackgroundMode];
}

id objc_msgSend_hasVoIPNetworkExtensionEntitlement(void *a1, const char *a2, ...)
{
  return _[a1 hasVoIPNetworkExtensionEntitlement];
}

id objc_msgSend_hasWiFiSettingsRemediation(void *a1, const char *a2, ...)
{
  return _[a1 hasWiFiSettingsRemediation];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashForParticipantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashForParticipantIdentifier:");
}

id objc_msgSend_highlightIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 highlightIdentifier];
}

id objc_msgSend_highlightIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 highlightIdentifiers];
}

id objc_msgSend_hold(void *a1, const char *a2, ...)
{
  return _[a1 hold];
}

id objc_msgSend_holdActiveAndAnswerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdActiveAndAnswerCall:");
}

id objc_msgSend_holdAllowed(void *a1, const char *a2, ...)
{
  return _[a1 holdAllowed];
}

id objc_msgSend_holdCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdCall:");
}

id objc_msgSend_holdCalls_whileUnholdingCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdCalls:whileUnholdingCalls:");
}

id objc_msgSend_holdOrEndOtherCallsBecauseCallWillBeginOutgoing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "holdOrEndOtherCallsBecauseCallWillBeginOutgoing:");
}

id objc_msgSend_hostCallCreationTime(void *a1, const char *a2, ...)
{
  return _[a1 hostCallCreationTime];
}

id objc_msgSend_hostIDSIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hostIDSIdentifier];
}

id objc_msgSend_hostMessagingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 hostMessagingDelegate];
}

id objc_msgSend_hostOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 hostOnCurrentDevice];
}

id objc_msgSend_hostedOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 hostedOnCurrentDevice];
}

id objc_msgSend_iCloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 iCloudAccount];
}

id objc_msgSend_iMessageService(void *a1, const char *a2, ...)
{
  return _[a1 iMessageService];
}

id objc_msgSend_iconTemplateImageData(void *a1, const char *a2, ...)
{
  return _[a1 iconTemplateImageData];
}

id objc_msgSend_idQueryController(void *a1, const char *a2, ...)
{
  return _[a1 idQueryController];
}

id objc_msgSend_identificationCategory(void *a1, const char *a2, ...)
{
  return _[a1 identificationCategory];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 identifierUUIDString];
}

id objc_msgSend_identifierWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierWithPid:");
}

id objc_msgSend_identifiers(void *a1, const char *a2, ...)
{
  return _[a1 identifiers];
}

id objc_msgSend_identifiersForSessionInvitationWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifiersForSessionInvitationWithMessage:");
}

id objc_msgSend_identifiersWaitingForAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 identifiersWaitingForAcknowledgement];
}

id objc_msgSend_identifiersWithPendingCoalescingBlocks(void *a1, const char *a2, ...)
{
  return _[a1 identifiersWithPendingCoalescingBlocks];
}

id objc_msgSend_identities(void *a1, const char *a2, ...)
{
  return _[a1 identities];
}

id objc_msgSend_identityForEmbeddedApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForEmbeddedApplicationIdentifier:");
}

id objc_msgSend_idsDestination(void *a1, const char *a2, ...)
{
  return _[a1 idsDestination];
}

id objc_msgSend_idsDestinationForActiveParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDestinationForActiveParticipant:");
}

id objc_msgSend_idsDestinations(void *a1, const char *a2, ...)
{
  return _[a1 idsDestinations];
}

id objc_msgSend_idsDeviceFromUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsDeviceFromUniqueID:");
}

id objc_msgSend_idsFirewallBatchSize(void *a1, const char *a2, ...)
{
  return _[a1 idsFirewallBatchSize];
}

id objc_msgSend_idsFirewallCHExpiryTimeDays(void *a1, const char *a2, ...)
{
  return _[a1 idsFirewallCHExpiryTimeDays];
}

id objc_msgSend_idsFromID(void *a1, const char *a2, ...)
{
  return _[a1 idsFromID];
}

id objc_msgSend_idsPeersForHandle_video_fromID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsPeersForHandle:video:fromID:completionHandler:");
}

id objc_msgSend_idsQueryController(void *a1, const char *a2, ...)
{
  return _[a1 idsQueryController];
}

id objc_msgSend_idsReportsReceived_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsReportsReceived:forConversation:");
}

id objc_msgSend_idsReportsReceived_forSessionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsReportsReceived:forSessionWithUUID:");
}

id objc_msgSend_idsService(void *a1, const char *a2, ...)
{
  return _[a1 idsService];
}

id objc_msgSend_idsSession(void *a1, const char *a2, ...)
{
  return _[a1 idsSession];
}

id objc_msgSend_ignoreLMIRequests(void *a1, const char *a2, ...)
{
  return _[a1 ignoreLMIRequests];
}

id objc_msgSend_ignoredTopics(void *a1, const char *a2, ...)
{
  return _[a1 ignoredTopics];
}

id objc_msgSend_ignoresBluetoothDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 ignoresBluetoothDeviceUID];
}

id objc_msgSend_imAccountForActionBlock(void *a1, const char *a2, ...)
{
  return _[a1 imAccountForActionBlock];
}

id objc_msgSend_imHandleWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imHandleWithID:");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return _[a1 imageData];
}

id objc_msgSend_imageTranscoder(void *a1, const char *a2, ...)
{
  return _[a1 imageTranscoder];
}

id objc_msgSend_imageURL(void *a1, const char *a2, ...)
{
  return _[a1 imageURL];
}

id objc_msgSend_imageURLForCXSandboxExtendedURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageURLForCXSandboxExtendedURL:");
}

id objc_msgSend_inCallServiceProcessObserver(void *a1, const char *a2, ...)
{
  return _[a1 inCallServiceProcessObserver];
}

id objc_msgSend_inCallServiceProcessState(void *a1, const char *a2, ...)
{
  return _[a1 inCallServiceProcessState];
}

id objc_msgSend_inCallSoundRegion(void *a1, const char *a2, ...)
{
  return _[a1 inCallSoundRegion];
}

id objc_msgSend_inFrequencyLevel(void *a1, const char *a2, ...)
{
  return _[a1 inFrequencyLevel];
}

id objc_msgSend_inProcess_isCallingSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inProcess_isCallingSupported");
}

id objc_msgSend_includesCallsInRecents(void *a1, const char *a2, ...)
{
  return _[a1 includesCallsInRecents];
}

id objc_msgSend_incomingCall(void *a1, const char *a2, ...)
{
  return _[a1 incomingCall];
}

id objc_msgSend_incomingCallAndNotificationInvitationPreferences(void *a1, const char *a2, ...)
{
  return _[a1 incomingCallAndNotificationInvitationPreferences];
}

id objc_msgSend_incomingCallFilter(void *a1, const char *a2, ...)
{
  return _[a1 incomingCallFilter];
}

id objc_msgSend_incomingCallInvitationPreferences(void *a1, const char *a2, ...)
{
  return _[a1 incomingCallInvitationPreferences];
}

id objc_msgSend_incomingChatGenerator(void *a1, const char *a2, ...)
{
  return _[a1 incomingChatGenerator];
}

id objc_msgSend_incomingPendingConversationsByGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 incomingPendingConversationsByGroupUUID];
}

id objc_msgSend_incomingPendingMessageGUIDs(void *a1, const char *a2, ...)
{
  return _[a1 incomingPendingMessageGUIDs];
}

id objc_msgSend_incomingScreenShareRequestFromParticipant_handleEligibilityBlock_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incomingScreenShareRequestFromParticipant:handleEligibilityBlock:error:");
}

id objc_msgSend_incomingSessionProviderGenerator(void *a1, const char *a2, ...)
{
  return _[a1 incomingSessionProviderGenerator];
}

id objc_msgSend_incrementPTTWakingServiceUpdateCountForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementPTTWakingServiceUpdateCountForApplication:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_inflightAVCBlobRecoveryBlocksByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 inflightAVCBlobRecoveryBlocksByIdentifier];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initAddRemoteMemberMessageWithMembers_otherInvitedHandles_conversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAddRemoteMemberMessageWithMembers:otherInvitedHandles:conversationWithUUID:");
}

id objc_msgSend_initAsInitiatorWithSessionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAsInitiatorWithSessionProvider:");
}

id objc_msgSend_initAsInitiatorWithSessionProvider_identifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAsInitiatorWithSessionProvider:identifiers:");
}

id objc_msgSend_initAsReceiverWithSessionProvider_remoteDestination_remoteDevice_remoteProtocolVersion_identifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAsReceiverWithSessionProvider:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:");
}

id objc_msgSend_initAsReceiverWithSessionProvider_remoteFromID_remoteProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAsReceiverWithSessionProvider:remoteFromID:remoteProtocolVersion:");
}

id objc_msgSend_initFileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:");
}

id objc_msgSend_initForReadingWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingWithError:");
}

id objc_msgSend_initIncomingWithBackingCallSource_UUID_update_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initIncomingWithBackingCallSource:UUID:update:");
}

id objc_msgSend_initIncomingWithSession_remoteHandle_wantsVideo_remoteInviteDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initIncomingWithSession:remoteHandle:wantsVideo:remoteInviteDictionary:");
}

id objc_msgSend_initOutgoingRequestWithScreenSharingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingRequestWithScreenSharingRequest:");
}

id objc_msgSend_initOutgoingTo_isVideo_isRelayed_GUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingTo:isVideo:isRelayed:GUID:");
}

id objc_msgSend_initOutgoingWithDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithDialRequest:");
}

id objc_msgSend_initOutgoingWithJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithJoinConversationRequest:");
}

id objc_msgSend_initOutgoingWithRequestedStartCallAction_backingCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithRequestedStartCallAction:backingCallSource:");
}

id objc_msgSend_initOutgoingWithSession_UUID_remoteHandle_wantsVideo_isRelaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithSession:UUID:remoteHandle:wantsVideo:isRelaying:");
}

id objc_msgSend_initOutgoingWithUniqueProxyIdentifier_backingCallSourceIdentifier_callUpdate_isVideo_endpointOnCurrentDevice_originatingUIType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:originatingUIType:");
}

id objc_msgSend_initOutgoingWithUniqueProxyIdentifier_backingCallSourceIdentifier_callUpdate_isVideo_endpointOnCurrentDevice_originatingUIType_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithUniqueProxyIdentifier:backingCallSourceIdentifier:callUpdate:isVideo:endpointOnCurrentDevice:originatingUIType:configuration:");
}

id objc_msgSend_initOutgoingWithUpdate_callUUID_backingCallSource_isExpanseProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initOutgoingWithUpdate:callUUID:backingCallSource:isExpanseProvider:");
}

id objc_msgSend_initWith_speechAssetManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWith:speechAssetManager:");
}

id objc_msgSend_initWithAVCRequest_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVCRequest:session:");
}

id objc_msgSend_initWithAccount_destinations_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:destinations:options:");
}

id objc_msgSend_initWithAccount_destinations_transportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:destinations:transportType:");
}

id objc_msgSend_initWithAccount_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:options:");
}

id objc_msgSend_initWithAccountID_primaryDeviceID_phoneNumberURI_availableDeviceSlots_allowedSecondaryDeviceIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountID:primaryDeviceID:phoneNumberURI:availableDeviceSlots:allowedSecondaryDeviceIDs:");
}

id objc_msgSend_initWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:");
}

id objc_msgSend_initWithActivity_locallyInitiated_timestamp_isFirstJoin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivity:locallyInitiated:timestamp:isFirstJoin:");
}

id objc_msgSend_initWithActivity_uuid_locallyInitiated_timestamp_isFirstJoin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:");
}

id objc_msgSend_initWithActivitySessionManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivitySessionManager:");
}

id objc_msgSend_initWithApplicationBundleIdentifier_budgetStartTime_serviceUpdatesDelivered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationBundleIdentifier:budgetStartTime:serviceUpdatesDelivered:");
}

id objc_msgSend_initWithApplicationController_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationController:queue:");
}

id objc_msgSend_initWithApplicationIdentifier_bundleIdentifier_channelUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationIdentifier:bundleIdentifier:channelUUID:");
}

id objc_msgSend_initWithApplicationRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationRecord:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssetId_mediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetId:mediaType:");
}

id objc_msgSend_initWithAvailability_photoRequestSuccessCount_photoRequestFailureCount_medianRequestDuration_meanRequestDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAvailability:photoRequestSuccessCount:photoRequestFailureCount:medianRequestDuration:meanRequestDuration:");
}

id objc_msgSend_initWithAvailability_supportedMediaTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAvailability:supportedMediaTypes:");
}

id objc_msgSend_initWithBundleIDs_states_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIDs:states:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifier_flags_reason_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:flags:reason:name:");
}

id objc_msgSend_initWithBundleIdentifier_flags_reason_name_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:flags:reason:name:withHandler:");
}

id objc_msgSend_initWithBundleIdentifier_metadata_applicationContext_activityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:metadata:applicationContext:activityIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_metadata_applicationContext_uuid_activityIdentifier_fallbackApplicationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:fallbackApplicationName:");
}

id objc_msgSend_initWithBundleIdentifier_pid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:pid:");
}

id objc_msgSend_initWithBundleIdentifiers_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifiers:queue:");
}

id objc_msgSend_initWithBundleType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleType:");
}

id objc_msgSend_initWithCHManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCHManager:");
}

id objc_msgSend_initWithCHManager_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCHManager:queue:");
}

id objc_msgSend_initWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:");
}

id objc_msgSend_initWithCall_contactIdentifier_serialQueue_cacheOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCall:contactIdentifier:serialQueue:cacheOnly:");
}

id objc_msgSend_initWithCallCapabilitiesState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCapabilitiesState:");
}

id objc_msgSend_initWithCallCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenter:");
}

id objc_msgSend_initWithCallCenter_featureFlags_serverBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenter:featureFlags:serverBag:");
}

id objc_msgSend_initWithCallCenterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenterObserver:");
}

id objc_msgSend_initWithCallCenterObserver_inCallServiceProcessObserver_springBoardProcessObserver_callCenter_featureFlags_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenterObserver:inCallServiceProcessObserver:springBoardProcessObserver:callCenter:featureFlags:queue:");
}

id objc_msgSend_initWithCallCenterObserver_transactionManager_queue_chManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallCenterObserver:transactionManager:queue:chManager:");
}

id objc_msgSend_initWithCallDisplayContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallDisplayContext:");
}

id objc_msgSend_initWithCallFilterController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallFilterController:");
}

id objc_msgSend_initWithCallHistoryController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallHistoryController:");
}

id objc_msgSend_initWithCallProviderManager_delegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallProviderManager:delegate:queue:");
}

id objc_msgSend_initWithCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallSource:");
}

id objc_msgSend_initWithCallSource_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallSource:configuration:");
}

id objc_msgSend_initWithCallSource_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallSource:queue:");
}

id objc_msgSend_initWithCallSource_queue_chManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallSource:queue:chManager:");
}

id objc_msgSend_initWithCallSource_queue_featureFlags_blockUtilities_shouldUseIDSDemuxer_chManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallSource:queue:featureFlags:blockUtilities:shouldUseIDSDemuxer:chManager:");
}

id objc_msgSend_initWithCallSource_withCallUpdate_withProvider_callUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallSource:withCallUpdate:withProvider:callUUID:");
}

id objc_msgSend_initWithCallStateController_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallStateController:queue:");
}

id objc_msgSend_initWithCallStateController_queue_assistantServicesObserver_coreTelephonyClient_chManager_callSourceManager_protectedAppsUtilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallStateController:queue:assistantServicesObserver:coreTelephonyClient:chManager:callSourceManager:protectedAppsUtilities:");
}

id objc_msgSend_initWithCallType_callState_copresenceActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallType:callState:copresenceActivityType:");
}

id objc_msgSend_initWithCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:");
}

id objc_msgSend_initWithCallUUID_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:attributes:");
}

id objc_msgSend_initWithCallUUID_callUUIDToGroupWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:callUUIDToGroupWith:");
}

id objc_msgSend_initWithCallUUID_digits_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:digits:type:");
}

id objc_msgSend_initWithCallUUID_groupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:groupUUID:");
}

id objc_msgSend_initWithCallUUID_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:handle:");
}

id objc_msgSend_initWithCallUUID_muted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:muted:");
}

id objc_msgSend_initWithCallUUID_muted_bottomUpMute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:muted:bottomUpMute:");
}

id objc_msgSend_initWithCallUUID_onHold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:onHold:");
}

id objc_msgSend_initWithCallUUID_relaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:relaying:");
}

id objc_msgSend_initWithCallUUID_screening_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:screening:");
}

id objc_msgSend_initWithCallUUID_sendingVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:sendingVideo:");
}

id objc_msgSend_initWithCallUUID_sharingScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:sharingScreen:");
}

id objc_msgSend_initWithCallUUID_ttyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:ttyType:");
}

id objc_msgSend_initWithCallUUID_videoEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:videoEnabled:");
}

id objc_msgSend_initWithCallUUID_videoPresentationSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:videoPresentationSize:");
}

id objc_msgSend_initWithCallUUID_videoPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:videoPresentationState:");
}

id objc_msgSend_initWithCallUUID_willInject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallUUID:willInject:");
}

id objc_msgSend_initWithCapabilities_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapabilities:queue:");
}

id objc_msgSend_initWithCapabilityInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapabilityInfo:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCategory_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCategory:mode:");
}

id objc_msgSend_initWithCategory_mode_routeManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCategory:mode:routeManager:");
}

id objc_msgSend_initWithChManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChManager:");
}

id objc_msgSend_initWithChannelUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChannelUUID:");
}

id objc_msgSend_initWithClientUUID_serialQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientUUID:serialQueue:");
}

id objc_msgSend_initWithClientUUID_transportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientUUID:transportType:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_callSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:callSource:");
}

id objc_msgSend_initWithConnection_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:queue:");
}

id objc_msgSend_initWithContactsDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContactsDataSource:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContext_linkMetadata_fallbackURL_invitationURL_supportsContinuationOnTV_title_subTitle_imageData_preferredBroadcastingAttributes_sceneAssociationBehavior_supportsActivityPreviews_lifetimePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:preferredBroadcastingAttributes:sceneAssociationBehavior:supportsActivityPreviews:lifetimePolicy:");
}

id objc_msgSend_initWithContextIdentifier_actionDescription_ongoingDescription_completedDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContextIdentifier:actionDescription:ongoingDescription:completedDescription:");
}

id objc_msgSend_initWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversation:");
}

id objc_msgSend_initWithConversation_idsGroupSession_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversation:idsGroupSession:queue:");
}

id objc_msgSend_initWithConversation_originatingUIType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversation:originatingUIType:");
}

id objc_msgSend_initWithConversation_startDate_avMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversation:startDate:avMode:");
}

id objc_msgSend_initWithConversationID_padding_timebase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationID:padding:timebase:");
}

id objc_msgSend_initWithConversationLink_localMember_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationLink:localMember:queue:");
}

id objc_msgSend_initWithConversationManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationManager:delegate:");
}

id objc_msgSend_initWithConversationManager_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationManager:featureFlags:");
}

id objc_msgSend_initWithConversationManager_queue_invitationResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationManager:queue:invitationResolver:");
}

id objc_msgSend_initWithConversationProviderManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversationProviderManager:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:");
}

id objc_msgSend_initWithDataSource_deviceLockObserver_callCenterObserver_callDirectoryStoreBuilder_callDirectoryManager_contactStore_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:deviceLockObserver:callCenterObserver:callDirectoryStoreBuilder:callDirectoryManager:contactStore:queue:");
}

id objc_msgSend_initWithDataSource_parentQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:parentQueue:");
}

id objc_msgSend_initWithDataSource_queue_appPolicyManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:queue:appPolicyManager:");
}

id objc_msgSend_initWithDataSource_serialQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:serialQueue:");
}

id objc_msgSend_initWithDataSource_serialQueue_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:serialQueue:featureFlags:");
}

id objc_msgSend_initWithDataSources_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSources:queue:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:delegateQueue:");
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:");
}

id objc_msgSend_initWithDelegate_queue_videoEnabled_oneToOneModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:videoEnabled:oneToOneModeEnabled:");
}

id objc_msgSend_initWithDelegate_withConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:withConfig:");
}

id objc_msgSend_initWithDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDescriptor:");
}

id objc_msgSend_initWithDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDestination:");
}

id objc_msgSend_initWithDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDestinationID:");
}

id objc_msgSend_initWithDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDialRequest:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionaryRepresentation:");
}

id objc_msgSend_initWithDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDigits:");
}

id objc_msgSend_initWithDigits_countryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDigits:countryCode:");
}

id objc_msgSend_initWithDigits_isHardPause_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDigits:isHardPause:");
}

id objc_msgSend_initWithDisplayContext_call_serialQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDisplayContext:call:serialQueue:");
}

id objc_msgSend_initWithDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithEncryptedMessage_enclosedType_link_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEncryptedMessage:enclosedType:link:");
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironmentName:namedDelegatePort:queue:");
}

id objc_msgSend_initWithExplanation_target_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExplanation:target:attributes:");
}

id objc_msgSend_initWithExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExportedObject:");
}

id objc_msgSend_initWithFaceTimeIDSChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFaceTimeIDSChat:");
}

id objc_msgSend_initWithFaceTimeInviteDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFaceTimeInviteDictionary:");
}

id objc_msgSend_initWithFeatureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFeatureFlags:");
}

id objc_msgSend_initWithFirstUnlockObserver_whenUnlockedObserver_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFirstUnlockObserver:whenUnlockedObserver:queue:");
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:arguments:");
}

id objc_msgSend_initWithGroupID_participantDestinationIDs_callerID_account_queue_isOneToOneModeEnabled_isLightweightMember_avLess_isScreenSharingRequest_ABTestConfiguration_isInitiator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupID:participantDestinationIDs:callerID:account:queue:isOneToOneModeEnabled:isLightweightMember:avLess:isScreenSharingRequest:ABTestConfiguration:isInitiator:");
}

id objc_msgSend_initWithGroupSessionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSessionProvider:");
}

id objc_msgSend_initWithGroupSessionProvider_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSessionProvider:featureFlags:");
}

id objc_msgSend_initWithGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupUUID:");
}

id objc_msgSend_initWithGroupUUID_originator_pseudonym_publicKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupUUID:originator:pseudonym:publicKey:");
}

id objc_msgSend_initWithHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:");
}

id objc_msgSend_initWithHandle_label_isSuggested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:label:isSuggested:");
}

id objc_msgSend_initWithHandle_nickname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:nickname:");
}

id objc_msgSend_initWithHandle_nickname_joinedFromLetMeIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:nickname:joinedFromLetMeIn:");
}

id objc_msgSend_initWithHandle_shareMyScreen_originType_shouldSendLegacyInvite_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:shareMyScreen:originType:shouldSendLegacyInvite:");
}

id objc_msgSend_initWithHandle_tokenPrefixedURI_data_encryptedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:tokenPrefixedURI:data:encryptedData:");
}

id objc_msgSend_initWithHandle_type_originType_UUID_participantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandle:type:originType:UUID:participantIdentifier:");
}

id objc_msgSend_initWithHandleType_notificationStyles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandleType:notificationStyles:");
}

id objc_msgSend_initWithHandoffActivityUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandoffActivityUserInfo:");
}

id objc_msgSend_initWithHandoffContext_backingCallSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandoffContext:backingCallSource:");
}

id objc_msgSend_initWithHandoffIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandoffIdentifier:");
}

id objc_msgSend_initWithIDSChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSChat:");
}

id objc_msgSend_initWithIDSDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIDSDevice:");
}

id objc_msgSend_initWithIMAVChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIMAVChat:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:bundleIdentifier:");
}

id objc_msgSend_initWithIdentifier_bundleIdentifier_fallbackLocalizedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:bundleIdentifier:fallbackLocalizedName:");
}

id objc_msgSend_initWithIdentifier_groupUUID_activities_applicationController_delegate_queue_systemStateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:groupUUID:activities:applicationController:delegate:queue:systemStateObserver:");
}

id objc_msgSend_initWithIdentifier_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:handle:");
}

id objc_msgSend_initWithIdentifier_handle_avcData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:handle:avcData:");
}

id objc_msgSend_initWithIdentifier_handle_avcData_senderCorrelationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:handle:avcData:senderCorrelationIdentifier:");
}

id objc_msgSend_initWithIdentifier_handle_senderCorrelationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:handle:senderCorrelationIdentifier:");
}

id objc_msgSend_initWithIdentifier_pluginName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:pluginName:");
}

id objc_msgSend_initWithIdentifier_revision_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:revision:handle:");
}

id objc_msgSend_initWithIdentifier_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:version:");
}

id objc_msgSend_initWithIdsService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdsService:");
}

id objc_msgSend_initWithInputURL_outputURL_identifier_operation_completionBlock_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputURL:outputURL:identifier:operation:completionBlock:queue:");
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInt:");
}

id objc_msgSend_initWithJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithJoinConversationRequest:");
}

id objc_msgSend_initWithLeaveReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLeaveReason:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManager:");
}

id objc_msgSend_initWithMessage_assertion_applicationShouldPostIncomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessage:assertion:applicationShouldPostIncomingCall:");
}

id objc_msgSend_initWithMetadata_applicationContext_uuid_activityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMetadata:applicationContext:uuid:activityIdentifier:");
}

id objc_msgSend_initWithMoments_remoteIDSDestinations_callCenterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMoments:remoteIDSDestinations:callCenterObserver:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:error:");
}

id objc_msgSend_initWithName_fileManager_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:fileManager:error:");
}

id objc_msgSend_initWithName_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:service:");
}

id objc_msgSend_initWithName_service_queryController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:service:queryController:");
}

id objc_msgSend_initWithNotificationCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotificationCenter:");
}

id objc_msgSend_initWithNotificationName_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotificationName:queue:");
}

id objc_msgSend_initWithNotificationName_queue_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotificationName:queue:callback:");
}

id objc_msgSend_initWithObject_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:queue:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithParticipantID_data_delegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithParticipantID:data:delegate:queue:");
}

id objc_msgSend_initWithPersonNameComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersonNameComponents:");
}

id objc_msgSend_initWithPhotosAppAssetIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPhotosAppAssetIdentifier:");
}

id objc_msgSend_initWithPlatform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlatform:");
}

id objc_msgSend_initWithPredicate_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPredicate:context:");
}

id objc_msgSend_initWithPrefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrefixedURI:");
}

id objc_msgSend_initWithPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPriority:");
}

id objc_msgSend_initWithProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProvider:");
}

id objc_msgSend_initWithProviderIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProviderIdentifier:");
}

id objc_msgSend_initWithProviderManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProviderManager:");
}

id objc_msgSend_initWithPseudonym_publicKey_groupUUID_originatorHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPseudonym:publicKey:groupUUID:originatorHandle:");
}

id objc_msgSend_initWithPseudonym_publicKey_groupUUID_originatorHandle_creationDate_deletionDate_expirationDate_invitedMemberHandles_locallyCreated_linkName_linkLifetimeScope_deleteReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPseudonym:publicKey:groupUUID:originatorHandle:creationDate:deletionDate:expirationDate:invitedMemberHandles:locallyCreated:linkName:linkLifetimeScope:deleteReason:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithQueue_UUID_groupUUID_groupSession_messagesGroupUUID_locallyCreated_localMember_initiator_remoteMembers_pendingMembers_otherInvitedHandles_lightweightMembers_remotePushTokens_activity_link_report_fromStorage_avMode_presentationMode_applicationController_featureFlags_systemStateObserver_applicationPolicyManager_screenSharingRequest_testConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:remotePushTokens:activity:link:report:fromStorage:avMode:presentationMode:applicationController:featureFlags:systemStateObserver:applicationPolicyManager:screenSharingRequest:testConfiguration:");
}

id objc_msgSend_initWithQueue_UUID_groupUUID_groupSession_messagesGroupUUID_locallyCreated_localMember_initiator_remoteMembers_pendingMembers_otherInvitedHandles_lightweightMembers_remotePushTokens_activity_link_report_fromStorage_avMode_presentationMode_applicationController_featureFlags_systemStateObserver_applicationPolicyManager_screenSharingRequest_testConfiguration_isOldMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:UUID:groupUUID:groupSession:messagesGroupUUID:locallyCreated:localMember:initiator:remoteMembers:pendingMembers:otherInvitedHandles:lightweightMembers:remotePushTokens:activity:link:report:fromStorage:avMode:presentationMode:applicationController:featureFlags:systemStateObserver:applicationPolicyManager:screenSharingRequest:testConfiguration:isOldMessage:");
}

id objc_msgSend_initWithQueue_activityCommunicator_callCenter_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:activityCommunicator:callCenter:featureFlags:");
}

id objc_msgSend_initWithQueue_assistantServicesObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:assistantServicesObserver:");
}

id objc_msgSend_initWithQueue_assistantServicesObserver_chManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:assistantServicesObserver:chManager:");
}

id objc_msgSend_initWithQueue_assistantServicesObserver_featureFlags_serverBag_chManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:assistantServicesObserver:featureFlags:serverBag:chManager:");
}

id objc_msgSend_initWithQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:block:");
}

id objc_msgSend_initWithQueue_callContainer_sessionMessenger_localRouteController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:callContainer:sessionMessenger:localRouteController:");
}

id objc_msgSend_initWithQueue_chManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:chManager:");
}

id objc_msgSend_initWithQueue_conversationManager_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:conversationManager:featureFlags:");
}

id objc_msgSend_initWithQueue_conversationManager_networkSupport_serverBag_featureFlags_invitationResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:conversationManager:networkSupport:serverBag:featureFlags:invitationResolver:");
}

id objc_msgSend_initWithQueue_coreTelephonyClient_emergencyCallbackCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:coreTelephonyClient:emergencyCallbackCapabilities:");
}

id objc_msgSend_initWithQueue_fileTransferController_mediaAssetManager_callCenterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:fileTransferController:mediaAssetManager:callCenterObserver:");
}

id objc_msgSend_initWithQueue_localRouteController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:localRouteController:");
}

id objc_msgSend_initWithQueue_messenger_callCenter_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:messenger:callCenter:featureFlags:");
}

id objc_msgSend_initWithQueue_proximitySensorObserver_voiceOverObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:proximitySensorObserver:voiceOverObserver:");
}

id objc_msgSend_initWithQueue_reportingController_persistenceController_linkManager_cpApplicationController_invitationResolver_pendingMembershipTracker_featureFlags_applicationPolicyManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:reportingController:persistenceController:linkManager:cpApplicationController:invitationResolver:pendingMembershipTracker:featureFlags:applicationPolicyManager:");
}

id objc_msgSend_initWithQueue_routeController_callCenterObserver_interfaceOrientationObserver_proximitySensorObserver_voiceOverObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:routeController:callCenterObserver:interfaceOrientationObserver:proximitySensorObserver:voiceOverObserver:");
}

id objc_msgSend_initWithQueue_shouldRegisterForECBMNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:shouldRegisterForECBMNotification:");
}

id objc_msgSend_initWithQueue_speechAssetManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:speechAssetManager:");
}

id objc_msgSend_initWithRelayInviteDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRelayInviteDictionary:");
}

id objc_msgSend_initWithRelayMessage_outgoing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRelayMessage:outgoing:");
}

id objc_msgSend_initWithRelayService_thumperService_featureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRelayService:thumperService:featureFlags:");
}

id objc_msgSend_initWithRemoteMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRemoteMembers:");
}

id objc_msgSend_initWithReportingController_cpApplicationController_invitationResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReportingController:cpApplicationController:invitationResolver:");
}

id objc_msgSend_initWithRequiredCapabilities_requiredMissingCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequiredCapabilities:requiredMissingCapabilities:");
}

id objc_msgSend_initWithResolver_withSystemStatusPublisher_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResolver:withSystemStatusPublisher:queue:");
}

id objc_msgSend_initWithScreenCaptureAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithScreenCaptureAttributes:");
}

id objc_msgSend_initWithSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSenderIdentityUUID:");
}

id objc_msgSend_initWithSerialQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSerialQueue:");
}

id objc_msgSend_initWithSerialQueue_localKeychainItem_pairedHostKeychainItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSerialQueue:localKeychainItem:pairedHostKeychainItem:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithService_account_accessGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:account:accessGroup:");
}

id objc_msgSend_initWithService_chManager_featureFlags_serverBag_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:chManager:featureFlags:serverBag:queue:");
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:");
}

id objc_msgSend_initWithServiceUpdatePushBudgetDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceUpdatePushBudgetDataSource:");
}

id objc_msgSend_initWithSession_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSession:queue:");
}

id objc_msgSend_initWithSession_remoteHandle_wantsVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSession:remoteHandle:wantsVideo:");
}

id objc_msgSend_initWithSessionCreationBlock_transportToken_delegate_queue_reportingHierarchyToken_avMode_videoEnabled_captureSessionCreationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionCreationBlock:transportToken:delegate:queue:reportingHierarchyToken:avMode:videoEnabled:captureSessionCreationBlock:");
}

id objc_msgSend_initWithSessionProvider_isInitiator_remoteDestination_remoteDevice_remoteProtocolVersion_identifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionProvider:isInitiator:remoteDestination:remoteDevice:remoteProtocolVersion:identifiers:");
}

id objc_msgSend_initWithSessionProvider_isInitiator_remoteFromID_remoteProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionProvider:isInitiator:remoteFromID:remoteProtocolVersion:");
}

id objc_msgSend_initWithSessionProvider_isInitiator_remoteProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionProvider:isInitiator:remoteProtocolVersion:");
}

id objc_msgSend_initWithSessionUUID_originator_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionUUID:originator:type:");
}

id objc_msgSend_initWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSet:");
}

id objc_msgSend_initWithSocket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSocket:");
}

id objc_msgSend_initWithSource_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSource:configuration:");
}

id objc_msgSend_initWithStartCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartCallAction:");
}

id objc_msgSend_initWithStreamToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStreamToken:");
}

id objc_msgSend_initWithStreamToken_requesterID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStreamToken:requesterID:");
}

id objc_msgSend_initWithStreamToken_requesterID_delegate_dispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStreamToken:requesterID:delegate:dispatchQueue:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTUConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTUConversation:");
}

id objc_msgSend_initWithTUConversationReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTUConversationReport:");
}

id objc_msgSend_initWithTURoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTURoute:");
}

id objc_msgSend_initWithTUSenderIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTUSenderIdentity:");
}

id objc_msgSend_initWithTargetContentIdentifier_shouldAssociateScene_preferredSceneSessionRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetContentIdentifier:shouldAssociateScene:preferredSceneSessionRole:");
}

id objc_msgSend_initWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSince1970:");
}

id objc_msgSend_initWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_initWithTransportToken_configuration_delegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransportToken:configuration:delegate:queue:");
}

id objc_msgSend_initWithTransportToken_delegate_queue_reportingHierarchyToken_oneToOneModeEnabled_avMode_videoEnabled_report_serviceName_ABTestConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransportToken:delegate:queue:reportingHierarchyToken:oneToOneModeEnabled:avMode:videoEnabled:report:serviceName:ABTestConfiguration:");
}

id objc_msgSend_initWithTransportType_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransportType:payload:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_groupUUID_link_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:groupUUID:link:");
}

id objc_msgSend_initWithType_uniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:uniqueProxyIdentifier:");
}

id objc_msgSend_initWithType_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:value:");
}

id objc_msgSend_initWithType_value_siriDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:value:siriDisplayName:");
}

id objc_msgSend_initWithURI_andLastSeenDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURI:andLastSeenDate:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:allowPlaceholder:error:");
}

id objc_msgSend_initWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:options:");
}

id objc_msgSend_initWithURL_withExtensionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:withExtensionType:");
}

id objc_msgSend_initWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:");
}

id objc_msgSend_initWithUUID_accountUUID_ISOCountryCode_localizedName_localizedShortName_localizedServiceName_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:");
}

id objc_msgSend_initWithUUID_andAccountID_andSlot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:andAccountID:andSlot:");
}

id objc_msgSend_initWithUUID_carrierPhoneNumbers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:carrierPhoneNumbers:");
}

id objc_msgSend_initWithUUID_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:configuration:");
}

id objc_msgSend_initWithUUID_description_serviceName_isoCountryCode_handle_shortLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:description:serviceName:isoCountryCode:handle:shortLabel:");
}

id objc_msgSend_initWithUUID_groupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:groupUUID:");
}

id objc_msgSend_initWithUUID_groupUUID_provider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:groupUUID:provider:");
}

id objc_msgSend_initWithUUID_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:handle:");
}

id objc_msgSend_initWithUUID_isVideo_handle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUID:isVideo:handle:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUniqueIdentifier_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueIdentifier:name:");
}

id objc_msgSend_initWithUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueProxyIdentifier:");
}

id objc_msgSend_initWithUniqueProxyIdentifier_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueProxyIdentifier:configuration:");
}

id objc_msgSend_initWithUniqueProxyIdentifier_configuration_idQueryController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueProxyIdentifier:configuration:idQueryController:");
}

id objc_msgSend_initWithUniqueProxyIdentifier_endpointOnCurrentDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueProxyIdentifier:endpointOnCurrentDevice:");
}

id objc_msgSend_initWithUnprefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnprefixedURI:");
}

id objc_msgSend_initWithUserDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserDefaults:");
}

id objc_msgSend_initWithUserDefaults_observerQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserDefaults:observerQueue:");
}

id objc_msgSend_initWithVoiceOverObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVoiceOverObserver:");
}

id objc_msgSend_initWithVoucherManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVoucherManager:");
}

id objc_msgSend_initialLinkType(void *a1, const char *a2, ...)
{
  return _[a1 initialLinkType];
}

id objc_msgSend_initializeNewCallWithDeviceRole_reportingHierarchyToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeNewCallWithDeviceRole:reportingHierarchyToken:");
}

id objc_msgSend_initiateModernFTInviteForAction_destinations_excludedIMAVDestinations_joinCallActionToFulfill_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiateModernFTInviteForAction:destinations:excludedIMAVDestinations:joinCallActionToFulfill:");
}

id objc_msgSend_initiatePendingConversationForLink_localMember_isVideoEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiatePendingConversationForLink:localMember:isVideoEnabled:");
}

id objc_msgSend_initiator(void *a1, const char *a2, ...)
{
  return _[a1 initiator];
}

id objc_msgSend_inputAudioPowerSpectrumToken(void *a1, const char *a2, ...)
{
  return _[a1 inputAudioPowerSpectrumToken];
}

id objc_msgSend_inputAudioPowerSpectrumTokenForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputAudioPowerSpectrumTokenForIdentifier:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_installedProvidersChangedForDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installedProvidersChangedForDataSource:");
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_interruptionHandler(void *a1, const char *a2, ...)
{
  return _[a1 interruptionHandler];
}

id objc_msgSend_interruptionSuppression(void *a1, const char *a2, ...)
{
  return _[a1 interruptionSuppression];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateAndRefreshThumperCallingCapabilitiesForSenderIdentityWithUUID:");
}

id objc_msgSend_invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateAndRefreshWiFiCallingCapabilitiesForSenderIdentityWithUUID:");
}

id objc_msgSend_invalidateIndefiniteProcessAssertionForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIndefiniteProcessAssertionForCall:");
}

id objc_msgSend_invalidateLink_deleteReason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateLink:deleteReason:completionHandler:");
}

id objc_msgSend_invalidateLinkWithPseudonym_deleteReason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateLinkWithPseudonym:deleteReason:completionHandler:");
}

id objc_msgSend_invalidateLocalParticipantBlobWantsDeliveryOverPush_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateLocalParticipantBlobWantsDeliveryOverPush:");
}

id objc_msgSend_invalidateProcessAssertionForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateProcessAssertionForBundleIdentifier:");
}

id objc_msgSend_invalidateProvisioningURL(void *a1, const char *a2, ...)
{
  return _[a1 invalidateProvisioningURL];
}

id objc_msgSend_invalidateTokenForTopic_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateTokenForTopic:identifier:");
}

id objc_msgSend_invalidationHandler(void *a1, const char *a2, ...)
{
  return _[a1 invalidationHandler];
}

id objc_msgSend_invitationPreferenceWithTUConversationInvitationPreference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationPreferenceWithTUConversationInvitationPreference:");
}

id objc_msgSend_invitationPreferences(void *a1, const char *a2, ...)
{
  return _[a1 invitationPreferences];
}

id objc_msgSend_invitationPreferencesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationPreferencesAtIndex:");
}

id objc_msgSend_invitationPreferencesCount(void *a1, const char *a2, ...)
{
  return _[a1 invitationPreferencesCount];
}

id objc_msgSend_invitationResolver(void *a1, const char *a2, ...)
{
  return _[a1 invitationResolver];
}

id objc_msgSend_invitationTimeOut(void *a1, const char *a2, ...)
{
  return _[a1 invitationTimeOut];
}

id objc_msgSend_invitationTimeout(void *a1, const char *a2, ...)
{
  return _[a1 invitationTimeout];
}

id objc_msgSend_invite_additionalPeers_excludingPushTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invite:additionalPeers:excludingPushTokens:");
}

id objc_msgSend_inviteCompletion(void *a1, const char *a2, ...)
{
  return _[a1 inviteCompletion];
}

id objc_msgSend_inviteData(void *a1, const char *a2, ...)
{
  return _[a1 inviteData];
}

id objc_msgSend_inviteDictionaryForCallID_remoteInviteDictionary_nonCellularCandidateTimeout_block_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:");
}

id objc_msgSend_inviteIDSPeersWithAction_destinations_joinCallActionToFulfill_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inviteIDSPeersWithAction:destinations:joinCallActionToFulfill:completion:");
}

id objc_msgSend_inviteIMAVPeersWithAction_tokensToExclude_joinCallActionToFulfill_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inviteIMAVPeersWithAction:tokensToExclude:joinCallActionToFulfill:");
}

id objc_msgSend_invitedHandles(void *a1, const char *a2, ...)
{
  return _[a1 invitedHandles];
}

id objc_msgSend_invitedHandlesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitedHandlesAtIndex:");
}

id objc_msgSend_invitedHandlesCount(void *a1, const char *a2, ...)
{
  return _[a1 invitedHandlesCount];
}

id objc_msgSend_invitedMemberHandles(void *a1, const char *a2, ...)
{
  return _[a1 invitedMemberHandles];
}

id objc_msgSend_invitedPushTokens(void *a1, const char *a2, ...)
{
  return _[a1 invitedPushTokens];
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _[a1 invoke];
}

id objc_msgSend_invokeDidPrepareIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeDidPrepareIfNecessary:");
}

id objc_msgSend_invokeDidStartIfNecessary_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeDidStartIfNecessary:error:");
}

id objc_msgSend_invokeDidStopIfNecessary_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeDidStopIfNecessary:error:");
}

id objc_msgSend_isA2DPRoute(void *a1, const char *a2, ...)
{
  return _[a1 isA2DPRoute];
}

id objc_msgSend_isAVLess(void *a1, const char *a2, ...)
{
  return _[a1 isAVLess];
}

id objc_msgSend_isAccountActive(void *a1, const char *a2, ...)
{
  return _[a1 isAccountActive];
}

id objc_msgSend_isActivated(void *a1, const char *a2, ...)
{
  return _[a1 isActivated];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAirplaneModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAirplaneModeEnabled];
}

id objc_msgSend_isAnyBluetoothHeadphoneRouteAvailableForAnyCall(void *a1, const char *a2, ...)
{
  return _[a1 isAnyBluetoothHeadphoneRouteAvailableForAnyCall];
}

id objc_msgSend_isAnyOtherAccountDeviceActive(void *a1, const char *a2, ...)
{
  return _[a1 isAnyOtherAccountDeviceActive];
}

id objc_msgSend_isAnyRouteAvailableWithBluetoothEndpointType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnyRouteAvailableWithBluetoothEndpointType:");
}

id objc_msgSend_isAnyRouteAvailableWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnyRouteAvailableWithUniqueIdentifier:");
}

id objc_msgSend_isAnyRouteAvailableWithUniqueIdentifier_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnyRouteAvailableWithUniqueIdentifier:forCall:");
}

id objc_msgSend_isAnyVehicleRouteAvailableForAnyCall(void *a1, const char *a2, ...)
{
  return _[a1 isAnyVehicleRouteAvailableForAnyCall];
}

id objc_msgSend_isAnyVehicleRouteAvailableForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnyVehicleRouteAvailableForCall:");
}

id objc_msgSend_isAppForegroundForChannelSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAppForegroundForChannelSource:");
}

id objc_msgSend_isApplicationInstalledWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isApplicationInstalledWithBundleID:");
}

id objc_msgSend_isApproved(void *a1, const char *a2, ...)
{
  return _[a1 isApproved];
}

id objc_msgSend_isAssistantAvailableWhenLocked(void *a1, const char *a2, ...)
{
  return _[a1 isAssistantAvailableWhenLocked];
}

id objc_msgSend_isAssociated(void *a1, const char *a2, ...)
{
  return _[a1 isAssociated];
}

id objc_msgSend_isAudioAccessoryDevice(void *a1, const char *a2, ...)
{
  return _[a1 isAudioAccessoryDevice];
}

id objc_msgSend_isAudioDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isAudioDisabled];
}

id objc_msgSend_isAudioEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAudioEnabled];
}

id objc_msgSend_isAudioInjectionAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAudioInjectionAllowed];
}

id objc_msgSend_isAudioMuted(void *a1, const char *a2, ...)
{
  return _[a1 isAudioMuted];
}

id objc_msgSend_isAudioMutedForHoldMusic(void *a1, const char *a2, ...)
{
  return _[a1 isAudioMutedForHoldMusic];
}

id objc_msgSend_isAudioPaused(void *a1, const char *a2, ...)
{
  return _[a1 isAudioPaused];
}

id objc_msgSend_isAudioReady(void *a1, const char *a2, ...)
{
  return _[a1 isAudioReady];
}

id objc_msgSend_isAudioSessionActive(void *a1, const char *a2, ...)
{
  return _[a1 isAudioSessionActive];
}

id objc_msgSend_isAuthTagEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAuthTagEnabled];
}

id objc_msgSend_isAutomaticUpgradingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAutomaticUpgradingEnabled];
}

id objc_msgSend_isAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isAvailable];
}

id objc_msgSend_isBeforeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeforeDate:");
}

id objc_msgSend_isBeta(void *a1, const char *a2, ...)
{
  return _[a1 isBeta];
}

id objc_msgSend_isBlocked(void *a1, const char *a2, ...)
{
  return _[a1 isBlocked];
}

id objc_msgSend_isBluetoothLE(void *a1, const char *a2, ...)
{
  return _[a1 isBluetoothLE];
}

id objc_msgSend_isBottomUpMute(void *a1, const char *a2, ...)
{
  return _[a1 isBottomUpMute];
}

id objc_msgSend_isBrailleScreenInputEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBrailleScreenInputEnabled];
}

id objc_msgSend_isCSCallingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isCSCallingAvailable];
}

id objc_msgSend_isCallEligible_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCallEligible:forClient:");
}

id objc_msgSend_isCallRecordingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isCallRecordingEnabled];
}

id objc_msgSend_isCaller(void *a1, const char *a2, ...)
{
  return _[a1 isCaller];
}

id objc_msgSend_isCameraMixedWithScreen(void *a1, const char *a2, ...)
{
  return _[a1 isCameraMixedWithScreen];
}

id objc_msgSend_isCarModeActive(void *a1, const char *a2, ...)
{
  return _[a1 isCarModeActive];
}

id objc_msgSend_isCarPlayConnected(void *a1, const char *a2, ...)
{
  return _[a1 isCarPlayConnected];
}

id objc_msgSend_isCarPlayDeviceConnected(void *a1, const char *a2, ...)
{
  return _[a1 isCarPlayDeviceConnected];
}

id objc_msgSend_isCarPlayRouteAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isCarPlayRouteAvailable];
}

id objc_msgSend_isCellularDataAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isCellularDataAllowed];
}

id objc_msgSend_isCellularDataAllowedForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCellularDataAllowedForChat:");
}

id objc_msgSend_isCellularDataAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isCellularDataAvailable];
}

id objc_msgSend_isCellularDataPreferred(void *a1, const char *a2, ...)
{
  return _[a1 isCellularDataPreferred];
}

id objc_msgSend_isCellularDataPreferredForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCellularDataPreferredForChat:");
}

id objc_msgSend_isClarityBoardEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isClarityBoardEnabled];
}

id objc_msgSend_isClientAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isClientAllowed:");
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return _[a1 isComplete];
}

id objc_msgSend_isConferenceActive(void *a1, const char *a2, ...)
{
  return _[a1 isConferenceActive];
}

id objc_msgSend_isConferenced(void *a1, const char *a2, ...)
{
  return _[a1 isConferenced];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isConnecting(void *a1, const char *a2, ...)
{
  return _[a1 isConnecting];
}

id objc_msgSend_isContinuitySession(void *a1, const char *a2, ...)
{
  return _[a1 isContinuitySession];
}

id objc_msgSend_isControlMessageOverQREnabled(void *a1, const char *a2, ...)
{
  return _[a1 isControlMessageOverQREnabled];
}

id objc_msgSend_isConversation(void *a1, const char *a2, ...)
{
  return _[a1 isConversation];
}

id objc_msgSend_isConversationJoiningOrJoined_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConversationJoiningOrJoined:");
}

id objc_msgSend_isConversationWithUUIDRedirectingAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConversationWithUUIDRedirectingAudio:");
}

id objc_msgSend_isConversationWithUUIDRelaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConversationWithUUIDRelaying:");
}

id objc_msgSend_isConversationWithUUIDScreening_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConversationWithUUIDScreening:");
}

id objc_msgSend_isCurrentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentlyPicked];
}

id objc_msgSend_isDefaultPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultPairedDevice];
}

id objc_msgSend_isDefaultProvider(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultProvider];
}

id objc_msgSend_isDestinationIDAllowedThroughDoNotDisturb_providerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDestinationIDAllowedThroughDoNotDisturb:providerIdentifier:");
}

id objc_msgSend_isDevelopmentOrTestFlightApp(void *a1, const char *a2, ...)
{
  return _[a1 isDevelopmentOrTestFlightApp];
}

id objc_msgSend_isDevicePasscodeLocked(void *a1, const char *a2, ...)
{
  return _[a1 isDevicePasscodeLocked];
}

id objc_msgSend_isDeviceSupported(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceSupported];
}

id objc_msgSend_isDialAssisted(void *a1, const char *a2, ...)
{
  return _[a1 isDialAssisted];
}

id objc_msgSend_isDirectFaceTimeAudioCallingCurrentlyAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isDirectFaceTimeAudioCallingCurrentlyAvailable];
}

id objc_msgSend_isDirectFaceTimeVideoCallingCurrentlyAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isDirectFaceTimeVideoCallingCurrentlyAvailable];
}

id objc_msgSend_isDirectTelephonyCallingCurrentlyAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isDirectTelephonyCallingCurrentlyAvailable];
}

id objc_msgSend_isDownlinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 isDownlinkMuted];
}

id objc_msgSend_isEligibleForCall(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForCall];
}

id objc_msgSend_isEligibleForPTTEntitlementDeprecationNotice(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForPTTEntitlementDeprecationNotice];
}

id objc_msgSend_isEligibleRouteAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleRouteAvailable];
}

id objc_msgSend_isEligibleRouteAvailableForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEligibleRouteAvailableForCall:");
}

id objc_msgSend_isEmergency(void *a1, const char *a2, ...)
{
  return _[a1 isEmergency];
}

id objc_msgSend_isEmergencyCallbackModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEmergencyCallbackModeEnabled];
}

id objc_msgSend_isEmergencyCallbackPossible(void *a1, const char *a2, ...)
{
  return _[a1 isEmergencyCallbackPossible];
}

id objc_msgSend_isEmergencyCallingOnWifiAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isEmergencyCallingOnWifiAllowed];
}

id objc_msgSend_isEmergencyCallingOnWifiAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isEmergencyCallingOnWifiAvailable];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEndpointOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 isEndpointOnCurrentDevice];
}

id objc_msgSend_isEntitledForCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEntitledForCapability:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToAccount:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToAssociation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToAssociation:");
}

id objc_msgSend_isEqualToCSDPTTServiceUpdatePushBudget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToCSDPTTServiceUpdatePushBudget:");
}

id objc_msgSend_isEqualToCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToCall:");
}

id objc_msgSend_isEqualToCallProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToCallProvider:");
}

id objc_msgSend_isEqualToCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToCapabilities:");
}

id objc_msgSend_isEqualToConversationLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToConversationLink:");
}

id objc_msgSend_isEqualToConversationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToConversationProvider:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToHandle:");
}

id objc_msgSend_isEqualToIgnoringCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToIgnoringCase:");
}

id objc_msgSend_isEqualToMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToMessage:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToParticipant:");
}

id objc_msgSend_isEqualToPersistedChannelIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToPersistedChannelIdentity:");
}

id objc_msgSend_isEqualToScreenShareAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToScreenShareAttributes:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEqualToTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToTransport:");
}

id objc_msgSend_isEquivalentToConversationLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEquivalentToConversationLink:");
}

id objc_msgSend_isEquivalentToHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEquivalentToHandle:");
}

id objc_msgSend_isEquivalentToPseudonym_andPublicKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEquivalentToPseudonym:andPublicKey:");
}

id objc_msgSend_isExhausted(void *a1, const char *a2, ...)
{
  return _[a1 isExhausted];
}

id objc_msgSend_isExpanseProvider(void *a1, const char *a2, ...)
{
  return _[a1 isExpanseProvider];
}

id objc_msgSend_isExpectedEndpointOnMessagingDevice(void *a1, const char *a2, ...)
{
  return _[a1 isExpectedEndpointOnMessagingDevice];
}

id objc_msgSend_isFaceTimeAudioAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isFaceTimeAudioAvailable];
}

id objc_msgSend_isFaceTimeInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isFaceTimeInstalled];
}

id objc_msgSend_isFaceTimeMyselfEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isFaceTimeMyselfEnabled];
}

id objc_msgSend_isFaceTimePhotosAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isFaceTimePhotosAvailable];
}

id objc_msgSend_isFaceTimeProvider(void *a1, const char *a2, ...)
{
  return _[a1 isFaceTimeProvider];
}

id objc_msgSend_isFaceTimeVideoAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isFaceTimeVideoAvailable];
}

id objc_msgSend_isFailureExpected(void *a1, const char *a2, ...)
{
  return _[a1 isFailureExpected];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFromBlockList(void *a1, const char *a2, ...)
{
  return _[a1 isFromBlockList];
}

id objc_msgSend_isFromStorage(void *a1, const char *a2, ...)
{
  return _[a1 isFromStorage];
}

id objc_msgSend_isGFTDowngradeToOneToOneAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isGFTDowngradeToOneToOneAvailable];
}

id objc_msgSend_isGestureServiceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isGestureServiceAvailable];
}

id objc_msgSend_isGondolaCallingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isGondolaCallingAvailable];
}

id objc_msgSend_isGreenTea(void *a1, const char *a2, ...)
{
  return _[a1 isGreenTea];
}

id objc_msgSend_isGuest(void *a1, const char *a2, ...)
{
  return _[a1 isGuest];
}

id objc_msgSend_isGuestModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isGuestModeEnabled];
}

id objc_msgSend_isGuestModeSupported(void *a1, const char *a2, ...)
{
  return _[a1 isGuestModeSupported];
}

id objc_msgSend_isHSATrusted(void *a1, const char *a2, ...)
{
  return _[a1 isHSATrusted];
}

id objc_msgSend_isHandleEligibleForScreenSharingRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHandleEligibleForScreenSharingRequests:");
}

id objc_msgSend_isHandleLocalPseudonym_provider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHandleLocalPseudonym:provider:");
}

id objc_msgSend_isHandleStringLocalPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHandleStringLocalPseudonym:");
}

id objc_msgSend_isHandleStringLocalPseudonym_provider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHandleStringLocalPseudonym:provider:");
}

id objc_msgSend_isHardPause(void *a1, const char *a2, ...)
{
  return _[a1 isHardPause];
}

id objc_msgSend_isHeld(void *a1, const char *a2, ...)
{
  return _[a1 isHeld];
}

id objc_msgSend_isHoldAndAnswerAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isHoldAndAnswerAllowed];
}

id objc_msgSend_isHost(void *a1, const char *a2, ...)
{
  return _[a1 isHost];
}

id objc_msgSend_isHostedOnCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 isHostedOnCurrentDevice];
}

id objc_msgSend_isIMDaemonConnected(void *a1, const char *a2, ...)
{
  return _[a1 isIMDaemonConnected];
}

id objc_msgSend_isInCallUIActive(void *a1, const char *a2, ...)
{
  return _[a1 isInCallUIActive];
}

id objc_msgSend_isInCanvas(void *a1, const char *a2, ...)
{
  return _[a1 isInCanvas];
}

id objc_msgSend_isInEarAudioRouteAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isInEarAudioRouteAvailable];
}

id objc_msgSend_isInHomeCountryForSubscriptionUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInHomeCountryForSubscriptionUUID:");
}

id objc_msgSend_isIncoming(void *a1, const char *a2, ...)
{
  return _[a1 isIncoming];
}

id objc_msgSend_isIncomingCommunicationBlockedForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIncomingCommunicationBlockedForHandle:");
}

id objc_msgSend_isInitiator(void *a1, const char *a2, ...)
{
  return _[a1 isInitiator];
}

id objc_msgSend_isInjectingAudio(void *a1, const char *a2, ...)
{
  return _[a1 isInjectingAudio];
}

id objc_msgSend_isInputFrequencyMeteringEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isInputFrequencyMeteringEnabled];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isInterfaceOrientationPortrait(void *a1, const char *a2, ...)
{
  return _[a1 isInterfaceOrientationPortrait];
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _[a1 isInternalInstall];
}

id objc_msgSend_isInternational(void *a1, const char *a2, ...)
{
  return _[a1 isInternational];
}

id objc_msgSend_isInvitation(void *a1, const char *a2, ...)
{
  return _[a1 isInvitation];
}

id objc_msgSend_isJoined(void *a1, const char *a2, ...)
{
  return _[a1 isJoined];
}

id objc_msgSend_isJoiningConversationWithLink(void *a1, const char *a2, ...)
{
  return _[a1 isJoiningConversationWithLink];
}

id objc_msgSend_isJunk(void *a1, const char *a2, ...)
{
  return _[a1 isJunk];
}

id objc_msgSend_isKnownCaller(void *a1, const char *a2, ...)
{
  return _[a1 isKnownCaller];
}

id objc_msgSend_isLetMeIn(void *a1, const char *a2, ...)
{
  return _[a1 isLetMeIn];
}

id objc_msgSend_isLetMeInApproved(void *a1, const char *a2, ...)
{
  return _[a1 isLetMeInApproved];
}

id objc_msgSend_isLetMeInRequestUIForUnknownParticipantEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isLetMeInRequestUIForUnknownParticipantEnabled];
}

id objc_msgSend_isLightweight(void *a1, const char *a2, ...)
{
  return _[a1 isLightweight];
}

id objc_msgSend_isLightweightMember(void *a1, const char *a2, ...)
{
  return _[a1 isLightweightMember];
}

id objc_msgSend_isLightweightPrimaryInitiated(void *a1, const char *a2, ...)
{
  return _[a1 isLightweightPrimaryInitiated];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isLoaded];
}

id objc_msgSend_isLocalAccountHandle(void *a1, const char *a2, ...)
{
  return _[a1 isLocalAccountHandle];
}

id objc_msgSend_isLocalClientActive(void *a1, const char *a2, ...)
{
  return _[a1 isLocalClientActive];
}

id objc_msgSend_isLocalMemberOf_associatedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocalMemberOf:associatedTo:");
}

id objc_msgSend_isLocalParticipant(void *a1, const char *a2, ...)
{
  return _[a1 isLocalParticipant];
}

id objc_msgSend_isLocallyCreated(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyCreated];
}

id objc_msgSend_isLocallyInitiated(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyInitiated];
}

id objc_msgSend_isLocallyOriginated(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyOriginated];
}

id objc_msgSend_isLowPowerModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isLowPowerModeEnabled];
}

id objc_msgSend_isMSNPillDataSourceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isMSNPillDataSourceEnabled];
}

id objc_msgSend_isManagingCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManagingCallWithUUID:");
}

id objc_msgSend_isManagingPendingConversationForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManagingPendingConversationForCallWithUUID:");
}

id objc_msgSend_isMediaAllowedForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMediaAllowedForChat:");
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMicrophoneMuted(void *a1, const char *a2, ...)
{
  return _[a1 isMicrophoneMuted];
}

id objc_msgSend_isMomentsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isMomentsAvailable];
}

id objc_msgSend_isMomentsAvailableForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMomentsAvailableForChat:");
}

id objc_msgSend_isMomentsDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isMomentsDisabled];
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _[a1 isMuted];
}

id objc_msgSend_isMutedForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMutedForIdentifier:");
}

id objc_msgSend_isMutuallyExclusiveCall(void *a1, const char *a2, ...)
{
  return _[a1 isMutuallyExclusiveCall];
}

id objc_msgSend_isNearby(void *a1, const char *a2, ...)
{
  return _[a1 isNearby];
}

id objc_msgSend_isNoConversationParticipantEndCallEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isNoConversationParticipantEndCallEnabled];
}

id objc_msgSend_isObserving(void *a1, const char *a2, ...)
{
  return _[a1 isObserving];
}

id objc_msgSend_isOnEmergencyCall(void *a1, const char *a2, ...)
{
  return _[a1 isOnEmergencyCall];
}

id objc_msgSend_isOnHold(void *a1, const char *a2, ...)
{
  return _[a1 isOnHold];
}

id objc_msgSend_isOneToOneEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isOneToOneEnabled];
}

id objc_msgSend_isOneToOneHandoffOngoing(void *a1, const char *a2, ...)
{
  return _[a1 isOneToOneHandoffOngoing];
}

id objc_msgSend_isOneToOneModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isOneToOneModeEnabled];
}

id objc_msgSend_isOnenessActiveBlock(void *a1, const char *a2, ...)
{
  return _[a1 isOnenessActiveBlock];
}

id objc_msgSend_isOutgoing(void *a1, const char *a2, ...)
{
  return _[a1 isOutgoing];
}

id objc_msgSend_isOutputFrequencyMeteringEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isOutputFrequencyMeteringEnabled];
}

id objc_msgSend_isPTT(void *a1, const char *a2, ...)
{
  return _[a1 isPTT];
}

id objc_msgSend_isPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 isPairedDevice];
}

id objc_msgSend_isParticipantIDToURIIncludedInPush(void *a1, const char *a2, ...)
{
  return _[a1 isParticipantIDToURIIncludedInPush];
}

id objc_msgSend_isPayloadPTTServiceUpdateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPayloadPTTServiceUpdateMessage:");
}

id objc_msgSend_isPendingConversation(void *a1, const char *a2, ...)
{
  return _[a1 isPendingConversation];
}

id objc_msgSend_isPermittedToUseBluetoothAccessories(void *a1, const char *a2, ...)
{
  return _[a1 isPermittedToUseBluetoothAccessories];
}

id objc_msgSend_isPersonaAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isPersonaAvailable];
}

id objc_msgSend_isPhotosSharePlayAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isPhotosSharePlayAvailable];
}

id objc_msgSend_isPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 isPlaceholder];
}

id objc_msgSend_isPlaceholderActivity(void *a1, const char *a2, ...)
{
  return _[a1 isPlaceholderActivity];
}

id objc_msgSend_isPlayingSystemSound(void *a1, const char *a2, ...)
{
  return _[a1 isPlayingSystemSound];
}

id objc_msgSend_isPreferred(void *a1, const char *a2, ...)
{
  return _[a1 isPreferred];
}

id objc_msgSend_isPreferredAndActive(void *a1, const char *a2, ...)
{
  return _[a1 isPreferredAndActive];
}

id objc_msgSend_isPreferredDevice(void *a1, const char *a2, ...)
{
  return _[a1 isPreferredDevice];
}

id objc_msgSend_isPreparedToStop(void *a1, const char *a2, ...)
{
  return _[a1 isPreparedToStop];
}

id objc_msgSend_isPrimary(void *a1, const char *a2, ...)
{
  return _[a1 isPrimary];
}

id objc_msgSend_isProcessSuspended(void *a1, const char *a2, ...)
{
  return _[a1 isProcessSuspended];
}

id objc_msgSend_isProviderForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProviderForeground:");
}

id objc_msgSend_isProviderInstalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProviderInstalled:");
}

id objc_msgSend_isProximitySensorCovered(void *a1, const char *a2, ...)
{
  return _[a1 isProximitySensorCovered];
}

id objc_msgSend_isPseudonym(void *a1, const char *a2, ...)
{
  return _[a1 isPseudonym];
}

id objc_msgSend_isPseudonymHandleForProvider_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPseudonymHandleForProvider:completionHandler:");
}

id objc_msgSend_isQuickRelaySupported(void *a1, const char *a2, ...)
{
  return _[a1 isQuickRelaySupported];
}

id objc_msgSend_isRTT(void *a1, const char *a2, ...)
{
  return _[a1 isRTT];
}

id objc_msgSend_isRaiseToEarGestureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRaiseToEarGestureEnabled];
}

id objc_msgSend_isRaiseToEarGestureSupported(void *a1, const char *a2, ...)
{
  return _[a1 isRaiseToEarGestureSupported];
}

id objc_msgSend_isReRing(void *a1, const char *a2, ...)
{
  return _[a1 isReRing];
}

id objc_msgSend_isReceiver(void *a1, const char *a2, ...)
{
  return _[a1 isReceiver];
}

id objc_msgSend_isReceivingTransmission(void *a1, const char *a2, ...)
{
  return _[a1 isReceivingTransmission];
}

id objc_msgSend_isRedial(void *a1, const char *a2, ...)
{
  return _[a1 isRedial];
}

id objc_msgSend_isRedirectingAudio(void *a1, const char *a2, ...)
{
  return _[a1 isRedirectingAudio];
}

id objc_msgSend_isRegionBlocked(void *a1, const char *a2, ...)
{
  return _[a1 isRegionBlocked];
}

id objc_msgSend_isRegistered(void *a1, const char *a2, ...)
{
  return _[a1 isRegistered];
}

id objc_msgSend_isRelay(void *a1, const char *a2, ...)
{
  return _[a1 isRelay];
}

id objc_msgSend_isRelayCallingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRelayCallingEnabled];
}

id objc_msgSend_isRelayCallingEnabledForDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRelayCallingEnabledForDeviceWithID:");
}

id objc_msgSend_isRelayCallingGuaranteed(void *a1, const char *a2, ...)
{
  return _[a1 isRelayCallingGuaranteed];
}

id objc_msgSend_isRelaying(void *a1, const char *a2, ...)
{
  return _[a1 isRelaying];
}

id objc_msgSend_isRemote(void *a1, const char *a2, ...)
{
  return _[a1 isRemote];
}

id objc_msgSend_isRemoteMomentsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteMomentsAvailable];
}

id objc_msgSend_isRemoteScreenEnabledForParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRemoteScreenEnabledForParticipant:");
}

id objc_msgSend_isRemoteUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteUplinkMuted];
}

id objc_msgSend_isRepresentedByRemoteMembers_andLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRepresentedByRemoteMembers:andLink:");
}

id objc_msgSend_isRetry(void *a1, const char *a2, ...)
{
  return _[a1 isRetry];
}

id objc_msgSend_isRoamingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRoamingEnabled];
}

id objc_msgSend_isRunningForegroundForVoIPApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunningForegroundForVoIPApplication:");
}

id objc_msgSend_isSIMRemoved(void *a1, const char *a2, ...)
{
  return _[a1 isSIMRemoved];
}

id objc_msgSend_isSOS(void *a1, const char *a2, ...)
{
  return _[a1 isSOS];
}

id objc_msgSend_isScreenEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isScreenEnabled];
}

id objc_msgSend_isScreenSharingActivity(void *a1, const char *a2, ...)
{
  return _[a1 isScreenSharingActivity];
}

id objc_msgSend_isScreenSharingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isScreenSharingAvailable];
}

id objc_msgSend_isScreenSharingInitiationAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isScreenSharingInitiationAvailable];
}

id objc_msgSend_isScreenSharingRequest(void *a1, const char *a2, ...)
{
  return _[a1 isScreenSharingRequest];
}

id objc_msgSend_isScreenTimeDisabledByOtherFeatures(void *a1, const char *a2, ...)
{
  return _[a1 isScreenTimeDisabledByOtherFeatures];
}

id objc_msgSend_isScreening(void *a1, const char *a2, ...)
{
  return _[a1 isScreening];
}

id objc_msgSend_isScreeningDueToUserInteraction(void *a1, const char *a2, ...)
{
  return _[a1 isScreeningDueToUserInteraction];
}

id objc_msgSend_isSendingAudio(void *a1, const char *a2, ...)
{
  return _[a1 isSendingAudio];
}

id objc_msgSend_isSendingAudioData(void *a1, const char *a2, ...)
{
  return _[a1 isSendingAudioData];
}

id objc_msgSend_isSendingAudioForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSendingAudioForIdentifier:");
}

id objc_msgSend_isSendingTransmission(void *a1, const char *a2, ...)
{
  return _[a1 isSendingTransmission];
}

id objc_msgSend_isSendingVideo(void *a1, const char *a2, ...)
{
  return _[a1 isSendingVideo];
}

id objc_msgSend_isServiceEnabledForTelephonySubscriptionLabelIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isServiceEnabledForTelephonySubscriptionLabelIdentifier:");
}

id objc_msgSend_isServiceUpdateMessage(void *a1, const char *a2, ...)
{
  return _[a1 isServiceUpdateMessage];
}

id objc_msgSend_isSharePlayAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isSharePlayAvailable];
}

id objc_msgSend_isSharingScreen(void *a1, const char *a2, ...)
{
  return _[a1 isSharingScreen];
}

id objc_msgSend_isShortMKIEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isShortMKIEnabled];
}

id objc_msgSend_isSignificantChangeFromAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSignificantChangeFromAttributes:");
}

id objc_msgSend_isSilenceUnknownFaceTimeCallersEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSilenceUnknownFaceTimeCallersEnabled];
}

id objc_msgSend_isSilenceUnknownTelephonyCallersEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSilenceUnknownTelephonyCallersEnabled];
}

id objc_msgSend_isSimDataOnly(void *a1, const char *a2, ...)
{
  return _[a1 isSimDataOnly];
}

id objc_msgSend_isSimHidden(void *a1, const char *a2, ...)
{
  return _[a1 isSimHidden];
}

id objc_msgSend_isSpatialPersonaEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSpatialPersonaEnabled];
}

id objc_msgSend_isSpeaker(void *a1, const char *a2, ...)
{
  return _[a1 isSpeaker];
}

id objc_msgSend_isStaticActivity(void *a1, const char *a2, ...)
{
  return _[a1 isStaticActivity];
}

id objc_msgSend_isSuperboxProvider(void *a1, const char *a2, ...)
{
  return _[a1 isSuperboxProvider];
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_isSymbolicLinkAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSymbolicLinkAtURL:");
}

id objc_msgSend_isSynchronous(void *a1, const char *a2, ...)
{
  return _[a1 isSynchronous];
}

id objc_msgSend_isSystemActivity(void *a1, const char *a2, ...)
{
  return _[a1 isSystemActivity];
}

id objc_msgSend_isSystemProvider(void *a1, const char *a2, ...)
{
  return _[a1 isSystemProvider];
}

id objc_msgSend_isTLEEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isTLEEnabled];
}

id objc_msgSend_isTTY(void *a1, const char *a2, ...)
{
  return _[a1 isTTY];
}

id objc_msgSend_isTelephonyDevice(void *a1, const char *a2, ...)
{
  return _[a1 isTelephonyDevice];
}

id objc_msgSend_isTelephonyProvider(void *a1, const char *a2, ...)
{
  return _[a1 isTelephonyProvider];
}

id objc_msgSend_isThirdPartyVideo(void *a1, const char *a2, ...)
{
  return _[a1 isThirdPartyVideo];
}

id objc_msgSend_isThumperCallingSupportedForAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isThumperCallingSupportedForAccountID:");
}

id objc_msgSend_isThumperRegisteredDeviceID_forThumperAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isThumperRegisteredDeviceID:forThumperAccountID:");
}

id objc_msgSend_isTinCan(void *a1, const char *a2, ...)
{
  return _[a1 isTinCan];
}

id objc_msgSend_isTinCanProvider(void *a1, const char *a2, ...)
{
  return _[a1 isTinCanProvider];
}

id objc_msgSend_isTrackingMSNException(void *a1, const char *a2, ...)
{
  return _[a1 isTrackingMSNException];
}

id objc_msgSend_isTrackingVoIPCallForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTrackingVoIPCallForBundleIdentifier:");
}

id objc_msgSend_isUPlusNDowngradeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isUPlusNDowngradeAvailable];
}

id objc_msgSend_isUPlusOneAVLessAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isUPlusOneAVLessAvailable];
}

id objc_msgSend_isUPlusOneScreenShareAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isUPlusOneScreenShareAvailable];
}

id objc_msgSend_isUPlusOneScreenSharingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isUPlusOneScreenSharingAvailable];
}

id objc_msgSend_isUPlusOneSessionCapabilitiesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isUPlusOneSessionCapabilitiesEnabled];
}

id objc_msgSend_isUPlusOneVisionToVisionAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isUPlusOneVisionToVisionAvailable];
}

id objc_msgSend_isUnansweredOutgoingOneToOneConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnansweredOutgoingOneToOneConversation:");
}

id objc_msgSend_isUnderlyingLinksConnected(void *a1, const char *a2, ...)
{
  return _[a1 isUnderlyingLinksConnected];
}

id objc_msgSend_isUnderlyingUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 isUnderlyingUplinkMuted];
}

id objc_msgSend_isUnknownAddress_normalizedAddress_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnknownAddress:normalizedAddress:forBundleIdentifier:");
}

id objc_msgSend_isUnknownCaller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnknownCaller:");
}

id objc_msgSend_isUpgrade(void *a1, const char *a2, ...)
{
  return _[a1 isUpgrade];
}

id objc_msgSend_isUpgradingCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUpgradingCallWithUUID:");
}

id objc_msgSend_isUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 isUplinkMuted];
}

id objc_msgSend_isUsingAirplay(void *a1, const char *a2, ...)
{
  return _[a1 isUsingAirplay];
}

id objc_msgSend_isUsingBaseband(void *a1, const char *a2, ...)
{
  return _[a1 isUsingBaseband];
}

id objc_msgSend_isUsingPTTEligibleSDK(void *a1, const char *a2, ...)
{
  return _[a1 isUsingPTTEligibleSDK];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isValidLocalHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidLocalHandle:");
}

id objc_msgSend_isValidLocalHandle_activeLocalHandles_provider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidLocalHandle:activeLocalHandles:provider:");
}

id objc_msgSend_isValidLocalHandle_forProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidLocalHandle:forProvider:");
}

id objc_msgSend_isValidOutgoingCallerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidOutgoingCallerID:");
}

id objc_msgSend_isValidScreenSharingRequest(void *a1, const char *a2, ...)
{
  return _[a1 isValidScreenSharingRequest];
}

id objc_msgSend_isValidated(void *a1, const char *a2, ...)
{
  return _[a1 isValidated];
}

id objc_msgSend_isVideo(void *a1, const char *a2, ...)
{
  return _[a1 isVideo];
}

id objc_msgSend_isVideoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isVideoEnabled];
}

id objc_msgSend_isVideoPaused(void *a1, const char *a2, ...)
{
  return _[a1 isVideoPaused];
}

id objc_msgSend_isVideoPausedToStart(void *a1, const char *a2, ...)
{
  return _[a1 isVideoPausedToStart];
}

id objc_msgSend_isVideoUpgradeFromCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVideoUpgradeFromCall:");
}

id objc_msgSend_isVisible(void *a1, const char *a2, ...)
{
  return _[a1 isVisible];
}

id objc_msgSend_isVoLTECallingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isVoLTECallingAvailable];
}

id objc_msgSend_isVoiceRoaming(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceRoaming];
}

id objc_msgSend_isVoicemail(void *a1, const char *a2, ...)
{
  return _[a1 isVoicemail];
}

id objc_msgSend_isWaitingForRemoteJoinForConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWaitingForRemoteJoinForConversationUUID:");
}

id objc_msgSend_isWaitingToPruneParticipants(void *a1, const char *a2, ...)
{
  return _[a1 isWaitingToPruneParticipants];
}

id objc_msgSend_isWakingMessage(void *a1, const char *a2, ...)
{
  return _[a1 isWakingMessage];
}

id objc_msgSend_isWatchDevice(void *a1, const char *a2, ...)
{
  return _[a1 isWatchDevice];
}

id objc_msgSend_isWebCapableFaceTimeAvailableForDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWebCapableFaceTimeAvailableForDestination:");
}

id objc_msgSend_isWiFiAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiAllowed];
}

id objc_msgSend_isWiFiAllowedForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWiFiAllowedForChat:");
}

id objc_msgSend_isWiFiAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiAvailable];
}

id objc_msgSend_isWiFiCallingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiCallingAvailable];
}

id objc_msgSend_isWiFiCallingCurrentlyAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiCallingCurrentlyAvailable];
}

id objc_msgSend_isWiFiEmergencyCallingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiEmergencyCallingAllowed];
}

id objc_msgSend_isWiFiEmergencyCallingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiEmergencyCallingAvailable];
}

id objc_msgSend_isWifiCallingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isWifiCallingAvailable];
}

id objc_msgSend_isWindowed(void *a1, const char *a2, ...)
{
  return _[a1 isWindowed];
}

id objc_msgSend_isoCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 isoCountryCode];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_joinCallAction(void *a1, const char *a2, ...)
{
  return _[a1 joinCallAction];
}

id objc_msgSend_joinCallActivity(void *a1, const char *a2, ...)
{
  return _[a1 joinCallActivity];
}

id objc_msgSend_joinConversationRequest(void *a1, const char *a2, ...)
{
  return _[a1 joinConversationRequest];
}

id objc_msgSend_joinConversationRequestURLString(void *a1, const char *a2, ...)
{
  return _[a1 joinConversationRequestURLString];
}

id objc_msgSend_joinConversationWithConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinConversationWithConversationRequest:");
}

id objc_msgSend_joinConversationWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinConversationWithRequest:");
}

id objc_msgSend_joinExistingConversationWithUUID_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinExistingConversationWithUUID:context:");
}

id objc_msgSend_joinUsingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinUsingContext:");
}

id objc_msgSend_joinUsingContext_localParticipantAVCData_members_otherInvitedHandles_participantDestinationIDs_link_report_stagedActivitySession_personaHandshakeBlob_activitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinUsingContext:localParticipantAVCData:members:otherInvitedHandles:participantDestinationIDs:link:report:stagedActivitySession:personaHandshakeBlob:activitySession:");
}

id objc_msgSend_joinWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinWithOptions:");
}

id objc_msgSend_joinedFromLetMeIn(void *a1, const char *a2, ...)
{
  return _[a1 joinedFromLetMeIn];
}

id objc_msgSend_joinedMetadata(void *a1, const char *a2, ...)
{
  return _[a1 joinedMetadata];
}

id objc_msgSend_junkConfidence(void *a1, const char *a2, ...)
{
  return _[a1 junkConfidence];
}

id objc_msgSend_keychainItem(void *a1, const char *a2, ...)
{
  return _[a1 keychainItem];
}

id objc_msgSend_kickMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kickMember:");
}

id objc_msgSend_kickMember_conversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kickMember:conversationUUID:");
}

id objc_msgSend_kickMemberRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 kickMemberRetryCount];
}

id objc_msgSend_kickParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kickParticipants:");
}

id objc_msgSend_kickedMembers(void *a1, const char *a2, ...)
{
  return _[a1 kickedMembers];
}

id objc_msgSend_kickedParticipants(void *a1, const char *a2, ...)
{
  return _[a1 kickedParticipants];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_labelID(void *a1, const char *a2, ...)
{
  return _[a1 labelID];
}

id objc_msgSend_lagunaEnabled(void *a1, const char *a2, ...)
{
  return _[a1 lagunaEnabled];
}

id objc_msgSend_lagunaPullBackEnabled(void *a1, const char *a2, ...)
{
  return _[a1 lagunaPullBackEnabled];
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastRebroadcastTime(void *a1, const char *a2, ...)
{
  return _[a1 lastRebroadcastTime];
}

id objc_msgSend_lastSavedAccountIDByCapability(void *a1, const char *a2, ...)
{
  return _[a1 lastSavedAccountIDByCapability];
}

id objc_msgSend_latestRecentOutgoingFacetimeCallWithRemoteParticipantHandle_sinceDate_noDeletedCallsPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latestRecentOutgoingFacetimeCallWithRemoteParticipantHandle:sinceDate:noDeletedCallsPredicate:");
}

id objc_msgSend_latestRemoteAttributes(void *a1, const char *a2, ...)
{
  return _[a1 latestRemoteAttributes];
}

id objc_msgSend_launchAppForActivitySession_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchAppForActivitySession:options:completion:");
}

id objc_msgSend_launchAppForDialRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchAppForDialRequest:completion:");
}

id objc_msgSend_launchApplicationForActivitySessionUUID_authorizedExternally_forceBackground_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchApplicationForActivitySessionUUID:authorizedExternally:forceBackground:completionHandler:");
}

id objc_msgSend_launchScreenSharingAppIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 launchScreenSharingAppIfNecessary];
}

id objc_msgSend_leave(void *a1, const char *a2, ...)
{
  return _[a1 leave];
}

id objc_msgSend_leaveAVLessConversationsIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveAVLessConversationsIfNecessaryForCall:");
}

id objc_msgSend_leaveActivitySession_onConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveActivitySession:onConversationWithUUID:");
}

id objc_msgSend_leaveActivitySessionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveActivitySessionWithUUID:");
}

id objc_msgSend_leaveAllConversations(void *a1, const char *a2, ...)
{
  return _[a1 leaveAllConversations];
}

id objc_msgSend_leaveConversation_withCallUUID_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveConversation:withCallUUID:reason:");
}

id objc_msgSend_leaveConversationForCallUUID_endedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveConversationForCallUUID:endedReason:");
}

id objc_msgSend_leaveConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveConversationWithUUID:");
}

id objc_msgSend_leaveConversationWithUUID_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveConversationWithUUID:withContext:");
}

id objc_msgSend_leaveDate(void *a1, const char *a2, ...)
{
  return _[a1 leaveDate];
}

id objc_msgSend_leaveGroupSession(void *a1, const char *a2, ...)
{
  return _[a1 leaveGroupSession];
}

id objc_msgSend_leaveGroupSessionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveGroupSessionWithContext:");
}

id objc_msgSend_leaveGroupSessionWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveGroupSessionWithOptions:");
}

id objc_msgSend_leaveReason(void *a1, const char *a2, ...)
{
  return _[a1 leaveReason];
}

id objc_msgSend_leaveUsingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveUsingContext:");
}

id objc_msgSend_leaveWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveWithOptions:");
}

id objc_msgSend_leaveWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveWithReason:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_letMeInDelegationHandle(void *a1, const char *a2, ...)
{
  return _[a1 letMeInDelegationHandle];
}

id objc_msgSend_letMeInDelegationUUID(void *a1, const char *a2, ...)
{
  return _[a1 letMeInDelegationUUID];
}

id objc_msgSend_letMeInKeyAgreement(void *a1, const char *a2, ...)
{
  return _[a1 letMeInKeyAgreement];
}

id objc_msgSend_letMeInRequestState(void *a1, const char *a2, ...)
{
  return _[a1 letMeInRequestState];
}

id objc_msgSend_letMeInRequestUINotificationBlock(void *a1, const char *a2, ...)
{
  return _[a1 letMeInRequestUINotificationBlock];
}

id objc_msgSend_letMeInRequestUINotificationGracePeriod(void *a1, const char *a2, ...)
{
  return _[a1 letMeInRequestUINotificationGracePeriod];
}

id objc_msgSend_letMeInResponseInvitationPreferences(void *a1, const char *a2, ...)
{
  return _[a1 letMeInResponseInvitationPreferences];
}

id objc_msgSend_lifetimePolicy(void *a1, const char *a2, ...)
{
  return _[a1 lifetimePolicy];
}

id objc_msgSend_lightweightMembers(void *a1, const char *a2, ...)
{
  return _[a1 lightweightMembers];
}

id objc_msgSend_lightweightMembersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightweightMembersAtIndex:");
}

id objc_msgSend_lightweightMembersCount(void *a1, const char *a2, ...)
{
  return _[a1 lightweightMembersCount];
}

id objc_msgSend_lightweightPrimary(void *a1, const char *a2, ...)
{
  return _[a1 lightweightPrimary];
}

id objc_msgSend_lightweightPrimaryParticipantID(void *a1, const char *a2, ...)
{
  return _[a1 lightweightPrimaryParticipantID];
}

id objc_msgSend_lightweightPrimaryParticipantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 lightweightPrimaryParticipantIdentifier];
}

id objc_msgSend_lightweightRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 lightweightRetryCount];
}

id objc_msgSend_link(void *a1, const char *a2, ...)
{
  return _[a1 link];
}

id objc_msgSend_linkAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkAtIndex:");
}

id objc_msgSend_linkForJoinCallAction_inLinks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkForJoinCallAction:inLinks:");
}

id objc_msgSend_linkForJoinCallAction_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkForJoinCallAction:withError:");
}

id objc_msgSend_linkLifetimeScope(void *a1, const char *a2, ...)
{
  return _[a1 linkLifetimeScope];
}

id objc_msgSend_linkManager(void *a1, const char *a2, ...)
{
  return _[a1 linkManager];
}

id objc_msgSend_linkName(void *a1, const char *a2, ...)
{
  return _[a1 linkName];
}

id objc_msgSend_linkSyncStateIncludeLinks_WithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkSyncStateIncludeLinks:WithCompletion:");
}

id objc_msgSend_linkSyncStateWithIncludeLinks_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkSyncStateWithIncludeLinks:completion:");
}

id objc_msgSend_linkWithTUConversationLink_includeGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkWithTUConversationLink:includeGroupUUID:");
}

id objc_msgSend_linkedUserURIs(void *a1, const char *a2, ...)
{
  return _[a1 linkedUserURIs];
}

id objc_msgSend_linksCount(void *a1, const char *a2, ...)
{
  return _[a1 linksCount];
}

id objc_msgSend_listenForActivityType_dynamicIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenForActivityType:dynamicIdentifier:");
}

id objc_msgSend_listeningIdentifiersByActivityType(void *a1, const char *a2, ...)
{
  return _[a1 listeningIdentifiersByActivityType];
}

id objc_msgSend_liveIDLookupEnabled(void *a1, const char *a2, ...)
{
  return _[a1 liveIDLookupEnabled];
}

id objc_msgSend_liveLookupTimeoutSeconds(void *a1, const char *a2, ...)
{
  return _[a1 liveLookupTimeoutSeconds];
}

id objc_msgSend_liveVoicemailUnavailableReason(void *a1, const char *a2, ...)
{
  return _[a1 liveVoicemailUnavailableReason];
}

id objc_msgSend_localBundleIDForActivityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localBundleIDForActivityIdentifier:");
}

id objc_msgSend_localCSDConversationParticipant(void *a1, const char *a2, ...)
{
  return _[a1 localCSDConversationParticipant];
}

id objc_msgSend_localCallerID(void *a1, const char *a2, ...)
{
  return _[a1 localCallerID];
}

id objc_msgSend_localCallerIDForProvider(void *a1, const char *a2, ...)
{
  return _[a1 localCallerIDForProvider];
}

id objc_msgSend_localCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 localCapabilities];
}

id objc_msgSend_localCaptionToken(void *a1, const char *a2, ...)
{
  return _[a1 localCaptionToken];
}

id objc_msgSend_localCaptionsToken(void *a1, const char *a2, ...)
{
  return _[a1 localCaptionsToken];
}

id objc_msgSend_localConversationParticipantWithDataToSendToDestinationIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localConversationParticipantWithDataToSendToDestinationIDs:");
}

id objc_msgSend_localDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceID];
}

id objc_msgSend_localIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localIdentifier];
}

id objc_msgSend_localInviteDictionary(void *a1, const char *a2, ...)
{
  return _[a1 localInviteDictionary];
}

id objc_msgSend_localLandscapeAspectRatio(void *a1, const char *a2, ...)
{
  return _[a1 localLandscapeAspectRatio];
}

id objc_msgSend_localLightweightSecondaryMember(void *a1, const char *a2, ...)
{
  return _[a1 localLightweightSecondaryMember];
}

id objc_msgSend_localMember(void *a1, const char *a2, ...)
{
  return _[a1 localMember];
}

id objc_msgSend_localMemberForProvider_fromHandle_members_lightweightMembers_activeLocalHandles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localMemberForProvider:fromHandle:members:lightweightMembers:activeLocalHandles:");
}

id objc_msgSend_localMemberHandleValue(void *a1, const char *a2, ...)
{
  return _[a1 localMemberHandleValue];
}

id objc_msgSend_localParticipant(void *a1, const char *a2, ...)
{
  return _[a1 localParticipant];
}

id objc_msgSend_localParticipantAssociation(void *a1, const char *a2, ...)
{
  return _[a1 localParticipantAssociation];
}

id objc_msgSend_localParticipantBlobTracker(void *a1, const char *a2, ...)
{
  return _[a1 localParticipantBlobTracker];
}

id objc_msgSend_localParticipantCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 localParticipantCapabilities];
}

id objc_msgSend_localParticipantData(void *a1, const char *a2, ...)
{
  return _[a1 localParticipantData];
}

id objc_msgSend_localParticipantDataToSendToDestinationIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localParticipantDataToSendToDestinationIDs:");
}

id objc_msgSend_localParticipantDataWithVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localParticipantDataWithVersion:");
}

id objc_msgSend_localParticipantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localParticipantIdentifier];
}

id objc_msgSend_localParticipantType(void *a1, const char *a2, ...)
{
  return _[a1 localParticipantType];
}

id objc_msgSend_localPortraitAspectRatio(void *a1, const char *a2, ...)
{
  return _[a1 localPortraitAspectRatio];
}

id objc_msgSend_localPortraitAspectRatioForChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localPortraitAspectRatioForChat:");
}

id objc_msgSend_localProviderWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localProviderWithIdentifier:");
}

id objc_msgSend_localProvidersByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localProvidersByIdentifier];
}

id objc_msgSend_localProvidersByIdentifierForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localProvidersByIdentifierForClient:");
}

id objc_msgSend_localProvidersByIdentifierForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localProvidersByIdentifierForRemoteClients:");
}

id objc_msgSend_localRouteController(void *a1, const char *a2, ...)
{
  return _[a1 localRouteController];
}

id objc_msgSend_localScreenShareAttributes(void *a1, const char *a2, ...)
{
  return _[a1 localScreenShareAttributes];
}

id objc_msgSend_localScreenSharingRequest(void *a1, const char *a2, ...)
{
  return _[a1 localScreenSharingRequest];
}

id objc_msgSend_localSenderIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localSenderIdentity];
}

id objc_msgSend_localSenderIdentityAccountUUID(void *a1, const char *a2, ...)
{
  return _[a1 localSenderIdentityAccountUUID];
}

id objc_msgSend_localSenderIdentityAccountUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 localSenderIdentityAccountUUIDString];
}

id objc_msgSend_localSenderIdentityUUID(void *a1, const char *a2, ...)
{
  return _[a1 localSenderIdentityUUID];
}

id objc_msgSend_localSenderIdentityUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 localSenderIdentityUUIDString];
}

id objc_msgSend_localSenderSubscriptionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localSenderSubscriptionIdentifier];
}

id objc_msgSend_localThumperAccounts(void *a1, const char *a2, ...)
{
  return _[a1 localThumperAccounts];
}

id objc_msgSend_localThumperDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 localThumperDeviceID];
}

id objc_msgSend_localizedAppName(void *a1, const char *a2, ...)
{
  return _[a1 localizedAppName];
}

id objc_msgSend_localizedCallerImageURL(void *a1, const char *a2, ...)
{
  return _[a1 localizedCallerImageURL];
}

id objc_msgSend_localizedCallerName(void *a1, const char *a2, ...)
{
  return _[a1 localizedCallerName];
}

id objc_msgSend_localizedContainingName(void *a1, const char *a2, ...)
{
  return _[a1 localizedContainingName];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedLabel(void *a1, const char *a2, ...)
{
  return _[a1 localizedLabel];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedServiceName(void *a1, const char *a2, ...)
{
  return _[a1 localizedServiceName];
}

id objc_msgSend_localizedShortName(void *a1, const char *a2, ...)
{
  return _[a1 localizedShortName];
}

id objc_msgSend_localizedStandardCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStandardCompare:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_locallyInitiated(void *a1, const char *a2, ...)
{
  return _[a1 locallyInitiated];
}

id objc_msgSend_locallyPersistedMetadata(void *a1, const char *a2, ...)
{
  return _[a1 locallyPersistedMetadata];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_lockStateObserver(void *a1, const char *a2, ...)
{
  return _[a1 lockStateObserver];
}

id objc_msgSend_lockdownModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 lockdownModeEnabled];
}

id objc_msgSend_loginID(void *a1, const char *a2, ...)
{
  return _[a1 loginID];
}

id objc_msgSend_lowPowerModeEnabledBlock(void *a1, const char *a2, ...)
{
  return _[a1 lowPowerModeEnabledBlock];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_machOUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 machOUUIDs];
}

id objc_msgSend_machServiceName(void *a1, const char *a2, ...)
{
  return _[a1 machServiceName];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainDisplay(void *a1, const char *a2, ...)
{
  return _[a1 mainDisplay];
}

id objc_msgSend_makeLocalRouteController(void *a1, const char *a2, ...)
{
  return _[a1 makeLocalRouteController];
}

id objc_msgSend_makePairedHostDeviceRouteController(void *a1, const char *a2, ...)
{
  return _[a1 makePairedHostDeviceRouteController];
}

id objc_msgSend_manageDesignatedMembers_withType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manageDesignatedMembers:withType:");
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return _[a1 manager];
}

id objc_msgSend_mappedLifetimePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mappedLifetimePolicy:");
}

id objc_msgSend_markCollaborationWithIdentifierOpened_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markCollaborationWithIdentifierOpened:forConversationUUID:");
}

id objc_msgSend_matchesDefaultProviderIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesDefaultProviderIdentifier:");
}

id objc_msgSend_matchingSim(void *a1, const char *a2, ...)
{
  return _[a1 matchingSim];
}

id objc_msgSend_maxActiveParticipantFetchRetries(void *a1, const char *a2, ...)
{
  return _[a1 maxActiveParticipantFetchRetries];
}

id objc_msgSend_maxJunkLevel(void *a1, const char *a2, ...)
{
  return _[a1 maxJunkLevel];
}

id objc_msgSend_maxKickMemberRetries(void *a1, const char *a2, ...)
{
  return _[a1 maxKickMemberRetries];
}

id objc_msgSend_maxVideoDecodesAllowed(void *a1, const char *a2, ...)
{
  return _[a1 maxVideoDecodesAllowed];
}

id objc_msgSend_maximumCallGroups(void *a1, const char *a2, ...)
{
  return _[a1 maximumCallGroups];
}

id objc_msgSend_maximumCallsPerCallGroup(void *a1, const char *a2, ...)
{
  return _[a1 maximumCallsPerCallGroup];
}

id objc_msgSend_maximumNumberOfInvitedMembers(void *a1, const char *a2, ...)
{
  return _[a1 maximumNumberOfInvitedMembers];
}

id objc_msgSend_mayRequireBreakBeforeMake(void *a1, const char *a2, ...)
{
  return _[a1 mayRequireBreakBeforeMake];
}

id objc_msgSend_maybeAddComplementaryAssociationVoucherFor_toLocalMemberOf_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeAddComplementaryAssociationVoucherFor:toLocalMemberOf:completion:");
}

id objc_msgSend_meanFromDoubleNumbers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "meanFromDoubleNumbers:");
}

id objc_msgSend_meanRequestDuration(void *a1, const char *a2, ...)
{
  return _[a1 meanRequestDuration];
}

id objc_msgSend_mediaAssetManager(void *a1, const char *a2, ...)
{
  return _[a1 mediaAssetManager];
}

id objc_msgSend_mediaBlob(void *a1, const char *a2, ...)
{
  return _[a1 mediaBlob];
}

id objc_msgSend_mediaController(void *a1, const char *a2, ...)
{
  return _[a1 mediaController];
}

id objc_msgSend_mediaPlaybackOnExternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 mediaPlaybackOnExternalDevice];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_medianFromNumbers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "medianFromNumbers:");
}

id objc_msgSend_medianRequestDuration(void *a1, const char *a2, ...)
{
  return _[a1 medianRequestDuration];
}

id objc_msgSend_meetsRequirementsForPTT(void *a1, const char *a2, ...)
{
  return _[a1 meetsRequirementsForPTT];
}

id objc_msgSend_memberExistsForParticipantDestination_groupSessionParticipantUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "memberExistsForParticipantDestination:groupSessionParticipantUpdate:");
}

id objc_msgSend_memberExistsForParticipantDestination_members_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "memberExistsForParticipantDestination:members:");
}

id objc_msgSend_memberHandlesAwaitingInvitesToLink(void *a1, const char *a2, ...)
{
  return _[a1 memberHandlesAwaitingInvitesToLink];
}

id objc_msgSend_memberHandlesEligibleForLinkApproval(void *a1, const char *a2, ...)
{
  return _[a1 memberHandlesEligibleForLinkApproval];
}

id objc_msgSend_memberIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 memberIdentifiers];
}

id objc_msgSend_memberWithHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "memberWithHandle:");
}

id objc_msgSend_memberWithTUConversationMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "memberWithTUConversationMember:");
}

id objc_msgSend_members(void *a1, const char *a2, ...)
{
  return _[a1 members];
}

id objc_msgSend_membersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "membersAtIndex:");
}

id objc_msgSend_membersCount(void *a1, const char *a2, ...)
{
  return _[a1 membersCount];
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_mergeSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeSession:");
}

id objc_msgSend_mergeable(void *a1, const char *a2, ...)
{
  return _[a1 mergeable];
}

id objc_msgSend_mergedActiveRemoteParticipants(void *a1, const char *a2, ...)
{
  return _[a1 mergedActiveRemoteParticipants];
}

id objc_msgSend_mergedCallUpdate(void *a1, const char *a2, ...)
{
  return _[a1 mergedCallUpdate];
}

id objc_msgSend_mergedRemoteMembers(void *a1, const char *a2, ...)
{
  return _[a1 mergedRemoteMembers];
}

id objc_msgSend_mergedRemoteMembers_withLocalMember_removingLocallyAssociatedMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergedRemoteMembers:withLocalMember:removingLocallyAssociatedMember:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_messageProxy(void *a1, const char *a2, ...)
{
  return _[a1 messageProxy];
}

id objc_msgSend_messageRetryFailedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageRetryFailedForConversationGroupUUID:");
}

id objc_msgSend_messageRetryIntervalMillis(void *a1, const char *a2, ...)
{
  return _[a1 messageRetryIntervalMillis];
}

id objc_msgSend_messageRetryMaxAttempts(void *a1, const char *a2, ...)
{
  return _[a1 messageRetryMaxAttempts];
}

id objc_msgSend_messageRetryStartedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageRetryStartedForConversationGroupUUID:");
}

id objc_msgSend_messageRetrySucceededForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageRetrySucceededForConversationGroupUUID:");
}

id objc_msgSend_messageSendTime(void *a1, const char *a2, ...)
{
  return _[a1 messageSendTime];
}

id objc_msgSend_messagesGroupName(void *a1, const char *a2, ...)
{
  return _[a1 messagesGroupName];
}

id objc_msgSend_messagesGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 messagesGroupUUID];
}

id objc_msgSend_messagesGroupUUIDString(void *a1, const char *a2, ...)
{
  return _[a1 messagesGroupUUIDString];
}

id objc_msgSend_messagingConnectionCouldNotEstablishLinkForCalls_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagingConnectionCouldNotEstablishLinkForCalls:didStartConnecting:");
}

id objc_msgSend_messagingConnectionEndedForCalls_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagingConnectionEndedForCalls:didStartConnecting:");
}

id objc_msgSend_messagingConnectionFailedForCalls_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagingConnectionFailedForCalls:didStartConnecting:");
}

id objc_msgSend_messagingController(void *a1, const char *a2, ...)
{
  return _[a1 messagingController];
}

id objc_msgSend_messagingHandleTypeFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagingHandleTypeFor:");
}

id objc_msgSend_messenger_handledMessage_fromDestination_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messenger:handledMessage:fromDestination:device:");
}

id objc_msgSend_messengerConnectionCouldNotEstablishLink_forIdentifiers_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messengerConnectionCouldNotEstablishLink:forIdentifiers:didStartConnecting:");
}

id objc_msgSend_messengerConnectionEnded_forIdentifiers_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messengerConnectionEnded:forIdentifiers:didStartConnecting:");
}

id objc_msgSend_messengerConnectionFailed_forIdentifiers_didStartConnecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messengerConnectionFailed:forIdentifiers:didStartConnecting:");
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodSignatureForSelector:");
}

id objc_msgSend_middleName(void *a1, const char *a2, ...)
{
  return _[a1 middleName];
}

id objc_msgSend_migrateAnnounceCalls(void *a1, const char *a2, ...)
{
  return _[a1 migrateAnnounceCalls];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_mixesVoiceWithMedia(void *a1, const char *a2, ...)
{
  return _[a1 mixesVoiceWithMedia];
}

id objc_msgSend_mobileCodesToISOCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 mobileCodesToISOCountryCode];
}

id objc_msgSend_mobileCountryCodeForSubscription_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mobileCountryCodeForSubscription:error:");
}

id objc_msgSend_mobileKeyLockState(void *a1, const char *a2, ...)
{
  return _[a1 mobileKeyLockState];
}

id objc_msgSend_mobileKeyLockStateBlock(void *a1, const char *a2, ...)
{
  return _[a1 mobileKeyLockStateBlock];
}

id objc_msgSend_mobileNetworkCodeForSubscription_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mobileNetworkCodeForSubscription:error:");
}

id objc_msgSend_mochiEnabled(void *a1, const char *a2, ...)
{
  return _[a1 mochiEnabled];
}

id objc_msgSend_mockCallWithNotificationCenter_fromBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mockCallWithNotificationCenter:fromBlock:");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _[a1 mode];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 modelIdentifier];
}

id objc_msgSend_moments(void *a1, const char *a2, ...)
{
  return _[a1 moments];
}

id objc_msgSend_momentsController_didCleanUpForStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "momentsController:didCleanUpForStream:");
}

id objc_msgSend_momentsController_didReceiveResultsForStream_withTransactionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "momentsController:didReceiveResultsForStream:withTransactionID:");
}

id objc_msgSend_momentsController_didStartRequestForStream_withTransactionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "momentsController:didStartRequestForStream:withTransactionID:");
}

id objc_msgSend_momentsController_registeredStream_withAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "momentsController:registeredStream:withAvailability:");
}

id objc_msgSend_momentsControllerClientXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 momentsControllerClientXPCInterface];
}

id objc_msgSend_momentsControllerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 momentsControllerServerXPCInterface];
}

id objc_msgSend_momentsGenerator(void *a1, const char *a2, ...)
{
  return _[a1 momentsGenerator];
}

id objc_msgSend_momentsReportingSession_didGenerateUsageReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "momentsReportingSession:didGenerateUsageReport:");
}

id objc_msgSend_momentsRequestTimeout(void *a1, const char *a2, ...)
{
  return _[a1 momentsRequestTimeout];
}

id objc_msgSend_monitorForDeath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorForDeath:");
}

id objc_msgSend_mostRecentBestAppSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentBestAppSuggestion];
}

id objc_msgSend_mostRecentCompletedOneToOneEnabledValue(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentCompletedOneToOneEnabledValue];
}

id objc_msgSend_mostRecentScreenShareAttributes(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentScreenShareAttributes];
}

id objc_msgSend_moveExistingPreferencesToKeychain(void *a1, const char *a2, ...)
{
  return _[a1 moveExistingPreferencesToKeychain];
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveItemAtURL:toURL:error:");
}

id objc_msgSend_msnPillRegister(void *a1, const char *a2, ...)
{
  return _[a1 msnPillRegister];
}

id objc_msgSend_multipleCallsActiveOrHeld(void *a1, const char *a2, ...)
{
  return _[a1 multipleCallsActiveOrHeld];
}

id objc_msgSend_mutableChats(void *a1, const char *a2, ...)
{
  return _[a1 mutableChats];
}

id objc_msgSend_mutableConversationsByUUID(void *a1, const char *a2, ...)
{
  return _[a1 mutableConversationsByUUID];
}

id objc_msgSend_mutableConversationsRequestingUpgradeWithPreferences(void *a1, const char *a2, ...)
{
  return _[a1 mutableConversationsRequestingUpgradeWithPreferences];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_mutablePendingConversationsByPseudonym(void *a1, const char *a2, ...)
{
  return _[a1 mutablePendingConversationsByPseudonym];
}

id objc_msgSend_mutableProviderByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mutableProviderByIdentifier];
}

id objc_msgSend_mutablePseudonymsByCallUUID(void *a1, const char *a2, ...)
{
  return _[a1 mutablePseudonymsByCallUUID];
}

id objc_msgSend_mutablePseudonymsByRequestIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 mutablePseudonymsByRequestIdentifiers];
}

id objc_msgSend_mutableSendDataCallbacksByRequestIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 mutableSendDataCallbacksByRequestIdentifiers];
}

id objc_msgSend_muteSessionInput_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteSessionInput:error:");
}

id objc_msgSend_mutedChangedForConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutedChangedForConference:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameAndPhotoBackwardsCompatibilityEnabled(void *a1, const char *a2, ...)
{
  return _[a1 nameAndPhotoBackwardsCompatibilityEnabled];
}

id objc_msgSend_nameAndPhotoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 nameAndPhotoEnabled];
}

id objc_msgSend_namePrefix(void *a1, const char *a2, ...)
{
  return _[a1 namePrefix];
}

id objc_msgSend_nameSuffix(void *a1, const char *a2, ...)
{
  return _[a1 nameSuffix];
}

id objc_msgSend_needsConversationOrVideoRelaySupport(void *a1, const char *a2, ...)
{
  return _[a1 needsConversationOrVideoRelaySupport];
}

id objc_msgSend_needsConversationRelaySupport(void *a1, const char *a2, ...)
{
  return _[a1 needsConversationRelaySupport];
}

id objc_msgSend_needsManualInCallSounds(void *a1, const char *a2, ...)
{
  return _[a1 needsManualInCallSounds];
}

id objc_msgSend_negotiationDataForProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "negotiationDataForProtocolVersion:");
}

id objc_msgSend_neighborhoodActivityConduit(void *a1, const char *a2, ...)
{
  return _[a1 neighborhoodActivityConduit];
}

id objc_msgSend_networkCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 networkCountryCode];
}

id objc_msgSend_networkExtensionClient(void *a1, const char *a2, ...)
{
  return _[a1 networkExtensionClient];
}

id objc_msgSend_networkExtensionClientManager(void *a1, const char *a2, ...)
{
  return _[a1 networkExtensionClientManager];
}

id objc_msgSend_networkSupport(void *a1, const char *a2, ...)
{
  return _[a1 networkSupport];
}

id objc_msgSend_newHierarchyTokenFromParentToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newHierarchyTokenFromParentToken:");
}

id objc_msgSend_newProcessAssertion(void *a1, const char *a2, ...)
{
  return _[a1 newProcessAssertion];
}

id objc_msgSend_newRequestWithMediaType_mode_requesteeID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newRequestWithMediaType:mode:requesteeID:");
}

id objc_msgSend_nextPauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 nextPauseDigits];
}

id objc_msgSend_nickname(void *a1, const char *a2, ...)
{
  return _[a1 nickname];
}

id objc_msgSend_nicknameProvider(void *a1, const char *a2, ...)
{
  return _[a1 nicknameProvider];
}

id objc_msgSend_noConversationParticipantTimeout(void *a1, const char *a2, ...)
{
  return _[a1 noConversationParticipantTimeout];
}

id objc_msgSend_noConversationParticipantTimeoutBlock(void *a1, const char *a2, ...)
{
  return _[a1 noConversationParticipantTimeoutBlock];
}

id objc_msgSend_nonWifiFaceTimeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 nonWifiFaceTimeAvailable];
}

id objc_msgSend_normalizedDeviceType(void *a1, const char *a2, ...)
{
  return _[a1 normalizedDeviceType];
}

id objc_msgSend_normalizedEmailAddressHandleForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedEmailAddressHandleForValue:");
}

id objc_msgSend_normalizedGenericHandleForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedGenericHandleForValue:");
}

id objc_msgSend_normalizedHandleWithDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedHandleWithDestinationID:");
}

id objc_msgSend_normalizedPhoneNumberHandleForValue_isoCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizedPhoneNumberHandleForValue:isoCountryCode:");
}

id objc_msgSend_normalizedValue(void *a1, const char *a2, ...)
{
  return _[a1 normalizedValue];
}

id objc_msgSend_notPredicateWithSubpredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notPredicateWithSubpredicate:");
}

id objc_msgSend_noteDismissedHandle_completionHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteDismissedHandle:completionHandle:");
}

id objc_msgSend_notePushToTalkChannelConnectedForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notePushToTalkChannelConnectedForCall:");
}

id objc_msgSend_noteReportedNewIncomingVoIPCallForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteReportedNewIncomingVoIPCallForBundleIdentifier:");
}

id objc_msgSend_notesApplicationBundleID(void *a1, const char *a2, ...)
{
  return _[a1 notesApplicationBundleID];
}

id objc_msgSend_noticeManager_conversation_participant_addedNotice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noticeManager:conversation:participant:addedNotice:");
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 notificationCenter];
}

id objc_msgSend_notificationDisplayInformationForAudioPolicyManager_activity_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationDisplayInformationForAudioPolicyManager:activity:conversation:");
}

id objc_msgSend_notificationStyles(void *a1, const char *a2, ...)
{
  return _[a1 notificationStyles];
}

id objc_msgSend_notificationStylesByHandleType(void *a1, const char *a2, ...)
{
  return _[a1 notificationStylesByHandleType];
}

id objc_msgSend_notifyClientsToConnectIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 notifyClientsToConnectIfNecessary];
}

id objc_msgSend_notifyDelegateOfHighlightAddedForConversation_highlightIdentifier_oldHighlightIdentifier_byParticipant_isFirstAdd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegateOfHighlightAddedForConversation:highlightIdentifier:oldHighlightIdentifier:byParticipant:isFirstAdd:");
}

id objc_msgSend_notifyDelegateOfHighlightRemovedFromConversation_highlightIdentifier_byParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegateOfHighlightRemovedFromConversation:highlightIdentifier:byParticipant:");
}

id objc_msgSend_notifyDelegateProviderByIdentifierChanged(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegateProviderByIdentifierChanged];
}

id objc_msgSend_notifyDelegatesOfAVModeChanged_toAVMode_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfAVModeChanged:toAVMode:forConversation:");
}

id objc_msgSend_notifyDelegatesOfChangedLink_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfChangedLink:conversation:");
}

id objc_msgSend_notifyDelegatesOfChangedLinkDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfChangedLinkDescriptors:");
}

id objc_msgSend_notifyDelegatesOfInvalidLinkForPendingConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfInvalidLinkForPendingConversation:");
}

id objc_msgSend_notifyDelegatesOfLetMeInRejectedForPendingConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfLetMeInRejectedForPendingConversation:");
}

id objc_msgSend_notifyDelegatesOfMessage_fromHandle_forConversation_withUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfMessage:fromHandle:forConversation:withUpdate:");
}

id objc_msgSend_notifyDelegatesOfNewConversation_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfNewConversation:fromHandle:");
}

id objc_msgSend_notifyDelegatesOfRemoteScreenShareAttributes_isLocallySharing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfRemoteScreenShareAttributes:isLocallySharing:");
}

id objc_msgSend_notifyDelegatesOfRemoteScreenShareEndedWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfRemoteScreenShareEndedWithReason:");
}

id objc_msgSend_notifyDelegatesOfRemovedConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfRemovedConversationWithUUID:");
}

id objc_msgSend_notifyDelegatesOfTrackedPendingMember_forConversationLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegatesOfTrackedPendingMember:forConversationLink:");
}

id objc_msgSend_notifyDelegatesOfUpdatePendingConversations(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegatesOfUpdatePendingConversations];
}

id objc_msgSend_notifyPendingMembershipTrackerOfDelegatedMember(void *a1, const char *a2, ...)
{
  return _[a1 notifyPendingMembershipTrackerOfDelegatedMember];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFromString:");
}

id objc_msgSend_numberValue(void *a1, const char *a2, ...)
{
  return _[a1 numberValue];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForBlock(void *a1, const char *a2, ...)
{
  return _[a1 objectForBlock];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKey_ofClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:ofClass:");
}

id objc_msgSend_objectForKey_ofClass_valuesOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:ofClass:valuesOfClass:");
}

id objc_msgSend_objectForKeyHierarchy_subscriptionContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyHierarchy:subscriptionContext:error:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsPassingTest:");
}

id objc_msgSend_observerToQueue(void *a1, const char *a2, ...)
{
  return _[a1 observerToQueue];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_offrampEnabled(void *a1, const char *a2, ...)
{
  return _[a1 offrampEnabled];
}

id objc_msgSend_oneToOneFaceTimeMyselfEnabled(void *a1, const char *a2, ...)
{
  return _[a1 oneToOneFaceTimeMyselfEnabled];
}

id objc_msgSend_oneToOneModeSwitchFailureForConversation_isOneToOneMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oneToOneModeSwitchFailureForConversation:isOneToOneMode:");
}

id objc_msgSend_ongoingDescription(void *a1, const char *a2, ...)
{
  return _[a1 ongoingDescription];
}

id objc_msgSend_onlyAvailableSessionConversationParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onlyAvailableSessionConversationParticipant:");
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openApplicationWithBundleIdentifier_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplicationWithBundleIdentifier:configuration:completionHandler:");
}

id objc_msgSend_openApplicationWithBundleIdentifier_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplicationWithBundleIdentifier:message:");
}

id objc_msgSend_openInCallServiceByURL(void *a1, const char *a2, ...)
{
  return _[a1 openInCallServiceByURL];
}

id objc_msgSend_openTransactions(void *a1, const char *a2, ...)
{
  return _[a1 openTransactions];
}

id objc_msgSend_openUIServiceWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openUIServiceWithURL:");
}

id objc_msgSend_openUserActivity_usingApplicationRecord_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openUserActivity:usingApplicationRecord:configuration:completionHandler:");
}

id objc_msgSend_openUserActivity_usingApplicationWithBundleIdentifier_frontBoardOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openUserActivity:usingApplicationWithBundleIdentifier:frontBoardOptions:completion:");
}

id objc_msgSend_openVoIPApplicationForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openVoIPApplicationForCall:");
}

id objc_msgSend_opportunisticTopics(void *a1, const char *a2, ...)
{
  return _[a1 opportunisticTopics];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_optionsWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionsWithDictionary:");
}

id objc_msgSend_orderedSet(void *a1, const char *a2, ...)
{
  return _[a1 orderedSet];
}

id objc_msgSend_orderedSetWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orderedSetWithCapacity:");
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _[a1 orientation];
}

id objc_msgSend_originType(void *a1, const char *a2, ...)
{
  return _[a1 originType];
}

id objc_msgSend_originalGUID(void *a1, const char *a2, ...)
{
  return _[a1 originalGUID];
}

id objc_msgSend_originalPauseDigitsString(void *a1, const char *a2, ...)
{
  return _[a1 originalPauseDigitsString];
}

id objc_msgSend_originalResolution(void *a1, const char *a2, ...)
{
  return _[a1 originalResolution];
}

id objc_msgSend_originalRingtoneSoundURL(void *a1, const char *a2, ...)
{
  return _[a1 originalRingtoneSoundURL];
}

id objc_msgSend_originalRingtoneSoundURLString(void *a1, const char *a2, ...)
{
  return _[a1 originalRingtoneSoundURLString];
}

id objc_msgSend_originatingDeviceType(void *a1, const char *a2, ...)
{
  return _[a1 originatingDeviceType];
}

id objc_msgSend_originatingUIType(void *a1, const char *a2, ...)
{
  return _[a1 originatingUIType];
}

id objc_msgSend_originator(void *a1, const char *a2, ...)
{
  return _[a1 originator];
}

id objc_msgSend_originatorHandle(void *a1, const char *a2, ...)
{
  return _[a1 originatorHandle];
}

id objc_msgSend_originatorTUHandle(void *a1, const char *a2, ...)
{
  return _[a1 originatorTUHandle];
}

id objc_msgSend_otherIMHandle(void *a1, const char *a2, ...)
{
  return _[a1 otherIMHandle];
}

id objc_msgSend_otherInvitedHandles(void *a1, const char *a2, ...)
{
  return _[a1 otherInvitedHandles];
}

id objc_msgSend_otherInvitedHandlesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "otherInvitedHandlesAtIndex:");
}

id objc_msgSend_otherInvitedHandlesCount(void *a1, const char *a2, ...)
{
  return _[a1 otherInvitedHandlesCount];
}

id objc_msgSend_otherInvitedTUHandles(void *a1, const char *a2, ...)
{
  return _[a1 otherInvitedTUHandles];
}

id objc_msgSend_otherUniqueProxyIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 otherUniqueProxyIdentifiers];
}

id objc_msgSend_otherUniqueProxyIdentifiersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "otherUniqueProxyIdentifiersAtIndex:");
}

id objc_msgSend_otherUniqueProxyIdentifiersCount(void *a1, const char *a2, ...)
{
  return _[a1 otherUniqueProxyIdentifiersCount];
}

id objc_msgSend_outFrequencyLevel(void *a1, const char *a2, ...)
{
  return _[a1 outFrequencyLevel];
}

id objc_msgSend_outIdentifierToConversationInfo(void *a1, const char *a2, ...)
{
  return _[a1 outIdentifierToConversationInfo];
}

id objc_msgSend_outOfProcessCodecsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 outOfProcessCodecsEnabled];
}

id objc_msgSend_outgoingCallFromDialRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outgoingCallFromDialRequest:");
}

id objc_msgSend_outgoingCallFromJoinRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outgoingCallFromJoinRequest:");
}

id objc_msgSend_outgoingCallerID(void *a1, const char *a2, ...)
{
  return _[a1 outgoingCallerID];
}

id objc_msgSend_outgoingCallerIDChanged(void *a1, const char *a2, ...)
{
  return _[a1 outgoingCallerIDChanged];
}

id objc_msgSend_outgoingChatGenerator(void *a1, const char *a2, ...)
{
  return _[a1 outgoingChatGenerator];
}

id objc_msgSend_outgoingPinRequestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 outgoingPinRequestIdentifier];
}

id objc_msgSend_outgoingRelayCallerID(void *a1, const char *a2, ...)
{
  return _[a1 outgoingRelayCallerID];
}

id objc_msgSend_outgoingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 outgoingResponseIdentifier];
}

id objc_msgSend_outgoingSessionProviderGenerator(void *a1, const char *a2, ...)
{
  return _[a1 outgoingSessionProviderGenerator];
}

id objc_msgSend_outputAudioPowerSpectrumToken(void *a1, const char *a2, ...)
{
  return _[a1 outputAudioPowerSpectrumToken];
}

id objc_msgSend_outputAudioPowerSpectrumTokenForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputAudioPowerSpectrumTokenForIdentifier:");
}

id objc_msgSend_outstandingMessages(void *a1, const char *a2, ...)
{
  return _[a1 outstandingMessages];
}

id objc_msgSend_paddingForHashedValue(void *a1, const char *a2, ...)
{
  return _[a1 paddingForHashedValue];
}

id objc_msgSend_pairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevice];
}

id objc_msgSend_pairedDeviceExists(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceExists];
}

id objc_msgSend_pairedDeviceMessenger(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceMessenger];
}

id objc_msgSend_pairedDeviceUniqueIDOverride(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceUniqueIDOverride];
}

id objc_msgSend_pairedDeviceUniqueIDOverrideExists(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceUniqueIDOverrideExists];
}

id objc_msgSend_pairedHostDeviceProvidersByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 pairedHostDeviceProvidersByIdentifier];
}

id objc_msgSend_pairedHostDeviceProvidersByIdentifierForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairedHostDeviceProvidersByIdentifierForClient:");
}

id objc_msgSend_pairedHostDeviceProvidersByIdentifierForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairedHostDeviceProvidersByIdentifierForRemoteClients:");
}

id objc_msgSend_pairedHostDeviceRouteController(void *a1, const char *a2, ...)
{
  return _[a1 pairedHostDeviceRouteController];
}

id objc_msgSend_pairedHostDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 pairedHostDeviceState];
}

id objc_msgSend_pairedHostKeychainItem(void *a1, const char *a2, ...)
{
  return _[a1 pairedHostKeychainItem];
}

id objc_msgSend_participantAssociation(void *a1, const char *a2, ...)
{
  return _[a1 participantAssociation];
}

id objc_msgSend_participantAssociationWithTUConversationParticipantAssociation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantAssociationWithTUConversationParticipantAssociation:");
}

id objc_msgSend_participantData(void *a1, const char *a2, ...)
{
  return _[a1 participantData];
}

id objc_msgSend_participantDestinationID(void *a1, const char *a2, ...)
{
  return _[a1 participantDestinationID];
}

id objc_msgSend_participantDestinationIDs(void *a1, const char *a2, ...)
{
  return _[a1 participantDestinationIDs];
}

id objc_msgSend_participantGroupUUID(void *a1, const char *a2, ...)
{
  return _[a1 participantGroupUUID];
}

id objc_msgSend_participantID(void *a1, const char *a2, ...)
{
  return _[a1 participantID];
}

id objc_msgSend_participantIDForAlias_salt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantIDForAlias:salt:");
}

id objc_msgSend_participantIDForAlias_salt_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantIDForAlias:salt:completion:");
}

id objc_msgSend_participantIDToURIRemovedEnabled(void *a1, const char *a2, ...)
{
  return _[a1 participantIDToURIRemovedEnabled];
}

id objc_msgSend_participantIDs(void *a1, const char *a2, ...)
{
  return _[a1 participantIDs];
}

id objc_msgSend_participantIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 participantIdentifier];
}

id objc_msgSend_participantPushToken(void *a1, const char *a2, ...)
{
  return _[a1 participantPushToken];
}

id objc_msgSend_participantRefreshBlock(void *a1, const char *a2, ...)
{
  return _[a1 participantRefreshBlock];
}

id objc_msgSend_participantURI(void *a1, const char *a2, ...)
{
  return _[a1 participantURI];
}

id objc_msgSend_participantUpdateSanitizer(void *a1, const char *a2, ...)
{
  return _[a1 participantUpdateSanitizer];
}

id objc_msgSend_participantUpdateSubtype(void *a1, const char *a2, ...)
{
  return _[a1 participantUpdateSubtype];
}

id objc_msgSend_participantUpdateType(void *a1, const char *a2, ...)
{
  return _[a1 participantUpdateType];
}

id objc_msgSend_participantWithCSDConversationJoinContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantWithCSDConversationJoinContext:");
}

id objc_msgSend_participantWithCSDConversationParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantWithCSDConversationParticipant:");
}

id objc_msgSend_participantWithTUConversationParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "participantWithTUConversationParticipant:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 pauseDigits];
}

id objc_msgSend_pauseDigitsQueue(void *a1, const char *a2, ...)
{
  return _[a1 pauseDigitsQueue];
}

id objc_msgSend_pauseDigitsQueueChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseDigitsQueueChanged:");
}

id objc_msgSend_pauseVideoToStart(void *a1, const char *a2, ...)
{
  return _[a1 pauseVideoToStart];
}

id objc_msgSend_payload(void *a1, const char *a2, ...)
{
  return _[a1 payload];
}

id objc_msgSend_pendData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendData:completion:");
}

id objc_msgSend_pendingAllowedMembers(void *a1, const char *a2, ...)
{
  return _[a1 pendingAllowedMembers];
}

id objc_msgSend_pendingCallActionsOfClass_withCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingCallActionsOfClass:withCallUUID:");
}

id objc_msgSend_pendingCallInfoDict(void *a1, const char *a2, ...)
{
  return _[a1 pendingCallInfoDict];
}

id objc_msgSend_pendingCallsToChatUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 pendingCallsToChatUUIDs];
}

id objc_msgSend_pendingChannelDelegateMessageContexts(void *a1, const char *a2, ...)
{
  return _[a1 pendingChannelDelegateMessageContexts];
}

id objc_msgSend_pendingCodesToDevicesForApproval(void *a1, const char *a2, ...)
{
  return _[a1 pendingCodesToDevicesForApproval];
}

id objc_msgSend_pendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 pendingCompletions];
}

id objc_msgSend_pendingConversationCleanupTimer(void *a1, const char *a2, ...)
{
  return _[a1 pendingConversationCleanupTimer];
}

id objc_msgSend_pendingConversationParticipantsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 pendingConversationParticipantsByIdentifier];
}

id objc_msgSend_pendingConversationUUIDForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingConversationUUIDForCallWithUUID:");
}

id objc_msgSend_pendingConversationUUIDWithPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingConversationUUIDWithPseudonym:");
}

id objc_msgSend_pendingConversationWithPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingConversationWithPseudonym:");
}

id objc_msgSend_pendingData(void *a1, const char *a2, ...)
{
  return _[a1 pendingData];
}

id objc_msgSend_pendingKickedMembersByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 pendingKickedMembersByIdentifier];
}

id objc_msgSend_pendingMemberHandles(void *a1, const char *a2, ...)
{
  return _[a1 pendingMemberHandles];
}

id objc_msgSend_pendingMembers(void *a1, const char *a2, ...)
{
  return _[a1 pendingMembers];
}

id objc_msgSend_pendingMembersByGroup(void *a1, const char *a2, ...)
{
  return _[a1 pendingMembersByGroup];
}

id objc_msgSend_pendingMembershipTracker(void *a1, const char *a2, ...)
{
  return _[a1 pendingMembershipTracker];
}

id objc_msgSend_pendingNetworkExtensionMessageContexts(void *a1, const char *a2, ...)
{
  return _[a1 pendingNetworkExtensionMessageContexts];
}

id objc_msgSend_pendingPulledCallContexts(void *a1, const char *a2, ...)
{
  return _[a1 pendingPulledCallContexts];
}

id objc_msgSend_pendingPushKitVoIPMessageContexts(void *a1, const char *a2, ...)
{
  return _[a1 pendingPushKitVoIPMessageContexts];
}

id objc_msgSend_pendingRemoteMembers(void *a1, const char *a2, ...)
{
  return _[a1 pendingRemoteMembers];
}

id objc_msgSend_pendingRemovedParticipantsByID(void *a1, const char *a2, ...)
{
  return _[a1 pendingRemovedParticipantsByID];
}

id objc_msgSend_pendingRemovedRemoteParticipantByIdentififer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingRemovedRemoteParticipantByIdentififer:");
}

id objc_msgSend_pendingRequestCount(void *a1, const char *a2, ...)
{
  return _[a1 pendingRequestCount];
}

id objc_msgSend_pendingTransactions(void *a1, const char *a2, ...)
{
  return _[a1 pendingTransactions];
}

id objc_msgSend_perform(void *a1, const char *a2, ...)
{
  return _[a1 perform];
}

id objc_msgSend_performAnswerCall_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAnswerCall:withRequest:");
}

id objc_msgSend_performAnswerCallAsAudioDowngrade_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAnswerCallAsAudioDowngrade:withRequest:");
}

id objc_msgSend_performAnswerCallAsVideoUpgrade_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAnswerCallAsVideoUpgrade:withRequest:");
}

id objc_msgSend_performAsynchronousBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAsynchronousBlock:");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlock_coalescedByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:coalescedByIdentifier:");
}

id objc_msgSend_performBlockAfterCoalescing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAfterCoalescing:");
}

id objc_msgSend_performBlockAfterFirstUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAfterFirstUnlock:");
}

id objc_msgSend_performBlockOnClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnClients:");
}

id objc_msgSend_performBlockOnClients_coalescedByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnClients:coalescedByIdentifier:");
}

id objc_msgSend_performBlockOnQueue_andWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnQueue:andWait:");
}

id objc_msgSend_performBlockOnTransportAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnTransportAvailability:");
}

id objc_msgSend_performBlockOnTransportAvailability_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnTransportAvailability:forIdentifier:");
}

id objc_msgSend_performCallAction_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performCallAction:forCall:");
}

id objc_msgSend_performChanges_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performChanges:completionHandler:");
}

id objc_msgSend_performChannelAction_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performChannelAction:forCall:");
}

id objc_msgSend_performDialCall_displayContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDialCall:displayContext:");
}

id objc_msgSend_performDisconnectAllCallsWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDisconnectAllCallsWithReason:");
}

id objc_msgSend_performDisconnectCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDisconnectCall:");
}

id objc_msgSend_performDisconnectCurrentCallAndActivateHeld(void *a1, const char *a2, ...)
{
  return _[a1 performDisconnectCurrentCallAndActivateHeld];
}

id objc_msgSend_performEndActiveAndAnswerCall_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performEndActiveAndAnswerCall:withRequest:");
}

id objc_msgSend_performEndHeldAndAnswerCall_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performEndHeldAndAnswerCall:withRequest:");
}

id objc_msgSend_performFileCopierOperation_onInputURL_outputURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performFileCopierOperation:onInputURL:outputURL:completion:");
}

id objc_msgSend_performGroupCall_withCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performGroupCall:withCall:");
}

id objc_msgSend_performHoldActiveAndAnswerCall_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performHoldActiveAndAnswerCall:withRequest:");
}

id objc_msgSend_performHoldCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performHoldCall:");
}

id objc_msgSend_performJoinCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performJoinCallAction:");
}

id objc_msgSend_performJoinConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performJoinConversation:");
}

id objc_msgSend_performPlayDTMFToneForCall_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPlayDTMFToneForCall:key:");
}

id objc_msgSend_performPullCallFromClientUsingHandoffActivityUserInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPullCallFromClientUsingHandoffActivityUserInfo:completion:");
}

id objc_msgSend_performPullHostedCallsFromPairedHostDevice(void *a1, const char *a2, ...)
{
  return _[a1 performPullHostedCallsFromPairedHostDevice];
}

id objc_msgSend_performPullRelayingCallsFromClientAndUpdateEndpoint_updateExpectedDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:");
}

id objc_msgSend_performPullRelayingCallsFromClientAndUpdateEndpoint_updateExpectedDestination_onlyIfNeedsEndpointConversationRelaySupport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPullRelayingCallsFromClientAndUpdateEndpoint:updateExpectedDestination:onlyIfNeedsEndpointConversationRelaySupport:");
}

id objc_msgSend_performPushHostedCallsToDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPushHostedCallsToDestination:");
}

id objc_msgSend_performPushRelayingCallsToHostWithSourceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performPushRelayingCallsToHostWithSourceIdentifier:");
}

id objc_msgSend_performRequest_forCall_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequest:forCall:completion:");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:");
}

id objc_msgSend_performSelector_withObject_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:withObject:");
}

id objc_msgSend_performSendMMIOrUSSDCodeWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSendMMIOrUSSDCodeWithRequest:");
}

id objc_msgSend_performSetLiveVoicemailUnavailableReason_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSetLiveVoicemailUnavailableReason:forCall:");
}

id objc_msgSend_performSetTTYType_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSetTTYType:forCall:");
}

id objc_msgSend_performSetUplinkMuted_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSetUplinkMuted:forCall:");
}

id objc_msgSend_performStartCallAction_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performStartCallAction:forCall:");
}

id objc_msgSend_performSwapCalls(void *a1, const char *a2, ...)
{
  return _[a1 performSwapCalls];
}

id objc_msgSend_performSynchronousBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSynchronousBlock:");
}

id objc_msgSend_performUngroupCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUngroupCall:");
}

id objc_msgSend_performUnholdCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUnholdCall:");
}

id objc_msgSend_performUpdateCallWithProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUpdateCallWithProxy:");
}

id objc_msgSend_permitJoin(void *a1, const char *a2, ...)
{
  return _[a1 permitJoin];
}

id objc_msgSend_persistedChannelRegistry(void *a1, const char *a2, ...)
{
  return _[a1 persistedChannelRegistry];
}

id objc_msgSend_persistedTornDownChannelUUIDForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistedTornDownChannelUUIDForBundleIdentifier:");
}

id objc_msgSend_persistenceController(void *a1, const char *a2, ...)
{
  return _[a1 persistenceController];
}

id objc_msgSend_personNameComponents(void *a1, const char *a2, ...)
{
  return _[a1 personNameComponents];
}

id objc_msgSend_personaHandshakeBlobCreationBlock(void *a1, const char *a2, ...)
{
  return _[a1 personaHandshakeBlobCreationBlock];
}

id objc_msgSend_personalNickname(void *a1, const char *a2, ...)
{
  return _[a1 personalNickname];
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumber];
}

id objc_msgSend_phoneNumberMCCToISOCountryCodeTransformBlock(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumberMCCToISOCountryCodeTransformBlock];
}

id objc_msgSend_phoneNumberURI(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumberURI];
}

id objc_msgSend_phoneNumberWithDigits_countryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneNumberWithDigits:countryCode:");
}

id objc_msgSend_phoneticRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 phoneticRepresentation];
}

id objc_msgSend_photoRequestDurations(void *a1, const char *a2, ...)
{
  return _[a1 photoRequestDurations];
}

id objc_msgSend_photoRequestFailureCount(void *a1, const char *a2, ...)
{
  return _[a1 photoRequestFailureCount];
}

id objc_msgSend_photoRequestSuccessCount(void *a1, const char *a2, ...)
{
  return _[a1 photoRequestSuccessCount];
}

id objc_msgSend_pickInitiatorFromActiveParticipants_forUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickInitiatorFromActiveParticipants:forUpdate:");
}

id objc_msgSend_pickRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickRoute:");
}

id objc_msgSend_pickRouteForRapportDeviceWithMediaSystemIdentifier_effectiveIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:");
}

id objc_msgSend_pickRouteWithUniqueIdentifier_shouldWaitUntilAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickRouteWithUniqueIdentifier:shouldWaitUntilAvailable:");
}

id objc_msgSend_pickableRoutesForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:");
}

id objc_msgSend_pickableRoutesForCategory_andMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:andMode:");
}

id objc_msgSend_pickedRoute(void *a1, const char *a2, ...)
{
  return _[a1 pickedRoute];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pidToCachedProviderIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 pidToCachedProviderIdentifiers];
}

id objc_msgSend_pidToProcessHandle(void *a1, const char *a2, ...)
{
  return _[a1 pidToProcessHandle];
}

id objc_msgSend_pidToProviderIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 pidToProviderIdentifiers];
}

id objc_msgSend_pillDataSourceRegistrationChangedForResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pillDataSourceRegistrationChangedForResolver:");
}

id objc_msgSend_pinCodeEnteredSuccessfully_cancelled_onPrimaryDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinCodeEnteredSuccessfully:cancelled:onPrimaryDevice:");
}

id objc_msgSend_pinExchangeDelegate(void *a1, const char *a2, ...)
{
  return _[a1 pinExchangeDelegate];
}

id objc_msgSend_placeholderForCreatedAsset(void *a1, const char *a2, ...)
{
  return _[a1 placeholderForCreatedAsset];
}

id objc_msgSend_playLocalDTMFToneForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playLocalDTMFToneForKey:");
}

id objc_msgSend_playRemoteDTMFToneForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playRemoteDTMFToneForKey:");
}

id objc_msgSend_playSoundForSoundType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playSoundForSoundType:completion:");
}

id objc_msgSend_playSoundForTransmissionState_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playSoundForTransmissionState:completion:");
}

id objc_msgSend_plugInKitPlugins(void *a1, const char *a2, ...)
{
  return _[a1 plugInKitPlugins];
}

id objc_msgSend_pluginName(void *a1, const char *a2, ...)
{
  return _[a1 pluginName];
}

id objc_msgSend_policyForAddresses_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "policyForAddresses:forBundleIdentifier:");
}

id objc_msgSend_postEndEventForSession_originator_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postEndEventForSession:originator:conversation:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postSessionStartedForSession_originator_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSessionStartedForSession:originator:conversation:");
}

id objc_msgSend_postSharePlayActivityDidChangeNotificationIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSharePlayActivityDidChangeNotificationIfNecessary:");
}

id objc_msgSend_postUserNotificationForUnsupportedScreenSharingActivity_alternateReponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postUserNotificationForUnsupportedScreenSharingActivity:alternateReponseHandler:");
}

id objc_msgSend_predicateForCallsLessThanDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsLessThanDate:");
}

id objc_msgSend_predicateForCallsWithAnyServiceProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsWithAnyServiceProviders:");
}

id objc_msgSend_predicateForCallsWithRemoteParticipantCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsWithRemoteParticipantCount:");
}

id objc_msgSend_predicateForCallsWithRemoteParticipantHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsWithRemoteParticipantHandle:");
}

id objc_msgSend_predicateForCallsWithServiceProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsWithServiceProvider:");
}

id objc_msgSend_predicateForCallsWithStatusOriginated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsWithStatusOriginated:");
}

id objc_msgSend_predicateForCallsWithStatusRead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForCallsWithStatusRead:");
}

id objc_msgSend_predicateForInEarAudioRoute(void *a1, const char *a2, ...)
{
  return _[a1 predicateForInEarAudioRoute];
}

id objc_msgSend_predicateForInEarRouteInTipiWithAndSmartRoutedToCompanionWatch(void *a1, const char *a2, ...)
{
  return _[a1 predicateForInEarRouteInTipiWithAndSmartRoutedToCompanionWatch];
}

id objc_msgSend_predicateForInEarRouteInTipiWithCompanionWatch(void *a1, const char *a2, ...)
{
  return _[a1 predicateForInEarRouteInTipiWithCompanionWatch];
}

id objc_msgSend_predicateForPreferredRoute(void *a1, const char *a2, ...)
{
  return _[a1 predicateForPreferredRoute];
}

id objc_msgSend_predicateForUpgrade(void *a1, const char *a2, ...)
{
  return _[a1 predicateForUpgrade];
}

id objc_msgSend_predicateFormat(void *a1, const char *a2, ...)
{
  return _[a1 predicateFormat];
}

id objc_msgSend_predicateMatchingBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingBundleIdentifier:");
}

id objc_msgSend_predicateMatchingIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingIdentity:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_preferences(void *a1, const char *a2, ...)
{
  return _[a1 preferences];
}

id objc_msgSend_preferencesForKeyBlock(void *a1, const char *a2, ...)
{
  return _[a1 preferencesForKeyBlock];
}

id objc_msgSend_preferencesURL(void *a1, const char *a2, ...)
{
  return _[a1 preferencesURL];
}

id objc_msgSend_preferredAndActiveRoute(void *a1, const char *a2, ...)
{
  return _[a1 preferredAndActiveRoute];
}

id objc_msgSend_preferredBroadcastingAttributes(void *a1, const char *a2, ...)
{
  return _[a1 preferredBroadcastingAttributes];
}

id objc_msgSend_preferredRoute(void *a1, const char *a2, ...)
{
  return _[a1 preferredRoute];
}

id objc_msgSend_preferredRouteForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredRouteForCall:");
}

id objc_msgSend_preferredSceneSessionRole(void *a1, const char *a2, ...)
{
  return _[a1 preferredSceneSessionRole];
}

id objc_msgSend_preferredVoiceSubscriptionUUID(void *a1, const char *a2, ...)
{
  return _[a1 preferredVoiceSubscriptionUUID];
}

id objc_msgSend_prefersExclusiveAccessToCellularNetwork(void *a1, const char *a2, ...)
{
  return _[a1 prefersExclusiveAccessToCellularNetwork];
}

id objc_msgSend_prefersToPlayDuringWombat(void *a1, const char *a2, ...)
{
  return _[a1 prefersToPlayDuringWombat];
}

id objc_msgSend_prefixedURI(void *a1, const char *a2, ...)
{
  return _[a1 prefixedURI];
}

id objc_msgSend_prepareAdditionOfActiveParticipant_toInvitedMembersForLinkOnConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareAdditionOfActiveParticipant:toInvitedMembersForLinkOnConversation:");
}

id objc_msgSend_prepareConference(void *a1, const char *a2, ...)
{
  return _[a1 prepareConference];
}

id objc_msgSend_prepareConferenceConnection_remoteInviteDictionary_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareConferenceConnection:remoteInviteDictionary:completion:");
}

id objc_msgSend_prepareConferenceForCall_remoteInviteDictionary_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareConferenceForCall:remoteInviteDictionary:completion:");
}

id objc_msgSend_prepareConnectedSessionsToEnd(void *a1, const char *a2, ...)
{
  return _[a1 prepareConnectedSessionsToEnd];
}

id objc_msgSend_prepareConversationWithUUID_withHandoffContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareConversationWithUUID:withHandoffContext:");
}

id objc_msgSend_prepareSessionToEndForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareSessionToEndForIdentifier:");
}

id objc_msgSend_prepareToDisconnectMessagingConnectionForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareToDisconnectMessagingConnectionForCall:");
}

id objc_msgSend_prepareToEnd(void *a1, const char *a2, ...)
{
  return _[a1 prepareToEnd];
}

id objc_msgSend_prepareToStopConferenceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareToStopConferenceForIdentifier:");
}

id objc_msgSend_prepareToStopTimeout(void *a1, const char *a2, ...)
{
  return _[a1 prepareToStopTimeout];
}

id objc_msgSend_prepareWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareWithConfiguration:");
}

id objc_msgSend_presentAccessoryButtonEventsEnabledNotice(void *a1, const char *a2, ...)
{
  return _[a1 presentAccessoryButtonEventsEnabledNotice];
}

id objc_msgSend_presentDismissalAlertForActivitySessionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDismissalAlertForActivitySessionWithUUID:");
}

id objc_msgSend_presentDismissalAlertForActivitySessionWithUUID_onConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentDismissalAlertForActivitySessionWithUUID:onConversationWithUUID:");
}

id objc_msgSend_presentIncomingTransmissionNotice(void *a1, const char *a2, ...)
{
  return _[a1 presentIncomingTransmissionNotice];
}

id objc_msgSend_presentSessionDismissalAlertForActivitySessionUUID_allowingCancellation_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentSessionDismissalAlertForActivitySessionUUID:allowingCancellation:completionHandler:");
}

id objc_msgSend_presentationContext(void *a1, const char *a2, ...)
{
  return _[a1 presentationContext];
}

id objc_msgSend_presentationInfo(void *a1, const char *a2, ...)
{
  return _[a1 presentationInfo];
}

id objc_msgSend_presentationLayoutForGridDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationLayoutForGridDisplayMode:");
}

id objc_msgSend_presentationMode(void *a1, const char *a2, ...)
{
  return _[a1 presentationMode];
}

id objc_msgSend_presentationRect(void *a1, const char *a2, ...)
{
  return _[a1 presentationRect];
}

id objc_msgSend_presentationState(void *a1, const char *a2, ...)
{
  return _[a1 presentationState];
}

id objc_msgSend_presentationStateForConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationStateForConversationWithUUID:");
}

id objc_msgSend_primaryAvcIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 primaryAvcIdentifier];
}

id objc_msgSend_primaryDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 primaryDeviceID];
}

id objc_msgSend_primaryHandle(void *a1, const char *a2, ...)
{
  return _[a1 primaryHandle];
}

id objc_msgSend_primaryIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 primaryIdentifier];
}

id objc_msgSend_primaryThumperAccountUsingDevices_outgoingCallerIDURI_requireMatchingCallerIDURI_requireAvailableDeviceSlots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryThumperAccountUsingDevices:outgoingCallerIDURI:requireMatchingCallerIDURI:requireAvailableDeviceSlots:");
}

id objc_msgSend_prioritizedSenderIdentities(void *a1, const char *a2, ...)
{
  return _[a1 prioritizedSenderIdentities];
}

id objc_msgSend_prioritizedSenderIdentitiesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prioritizedSenderIdentitiesAtIndex:");
}

id objc_msgSend_prioritizedSenderIdentitiesCount(void *a1, const char *a2, ...)
{
  return _[a1 prioritizedSenderIdentitiesCount];
}

id objc_msgSend_prioritizedTUSenderIdentities(void *a1, const char *a2, ...)
{
  return _[a1 prioritizedTUSenderIdentities];
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _[a1 priority];
}

id objc_msgSend_privateKey(void *a1, const char *a2, ...)
{
  return _[a1 privateKey];
}

id objc_msgSend_proceedToJoinForConversation_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proceedToJoinForConversation:action:");
}

id objc_msgSend_proceedToNewPendingConversationForLink_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proceedToNewPendingConversationForLink:action:");
}

id objc_msgSend_processAssertion(void *a1, const char *a2, ...)
{
  return _[a1 processAssertion];
}

id objc_msgSend_processAssertionManager(void *a1, const char *a2, ...)
{
  return _[a1 processAssertionManager];
}

id objc_msgSend_processAssertionNameForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAssertionNameForBundleIdentifier:");
}

id objc_msgSend_processAssertionWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAssertionWithBundleIdentifier:");
}

id objc_msgSend_processAssertions(void *a1, const char *a2, ...)
{
  return _[a1 processAssertions];
}

id objc_msgSend_processBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processBundleIdentifier];
}

id objc_msgSend_processGroupSessionParticipantUpdate_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processGroupSessionParticipantUpdate:context:");
}

id objc_msgSend_processHandle(void *a1, const char *a2, ...)
{
  return _[a1 processHandle];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processIdentifiersForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processIdentifiersForBundleIdentifier:");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processJoinUpdate_fromHandle_senderCorrelationIdentifier_isFromPendingMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processJoinUpdate:fromHandle:senderCorrelationIdentifier:isFromPendingMessage:");
}

id objc_msgSend_processName(void *a1, const char *a2, ...)
{
  return _[a1 processName];
}

id objc_msgSend_processObserver(void *a1, const char *a2, ...)
{
  return _[a1 processObserver];
}

id objc_msgSend_processObserverQueue(void *a1, const char *a2, ...)
{
  return _[a1 processObserverQueue];
}

id objc_msgSend_processOverBudgetPTTServiceUpdateMessage_forApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processOverBudgetPTTServiceUpdateMessage:forApplication:");
}

id objc_msgSend_processParticipantDataUpdate_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processParticipantDataUpdate:fromHandle:");
}

id objc_msgSend_processStatesForBundleIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processStatesForBundleIdentifier:completion:");
}

id objc_msgSend_processStatusChangeAsHandedOffIfNecessaryForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processStatusChangeAsHandedOffIfNecessaryForCall:");
}

id objc_msgSend_processUpdateMembersUpdate_fromHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processUpdateMembersUpdate:fromHandle:");
}

id objc_msgSend_processUpdatedNickname_forHandle_conversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processUpdatedNickname:forHandle:conversationUUID:");
}

id objc_msgSend_productionConnection(void *a1, const char *a2, ...)
{
  return _[a1 productionConnection];
}

id objc_msgSend_profileID(void *a1, const char *a2, ...)
{
  return _[a1 profileID];
}

id objc_msgSend_prominence(void *a1, const char *a2, ...)
{
  return _[a1 prominence];
}

id objc_msgSend_prominenceEntryAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prominenceEntryAtIndex:");
}

id objc_msgSend_prominenceEntrys(void *a1, const char *a2, ...)
{
  return _[a1 prominenceEntrys];
}

id objc_msgSend_prominenceEntrysCount(void *a1, const char *a2, ...)
{
  return _[a1 prominenceEntrysCount];
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_propertiesChanged(void *a1, const char *a2, ...)
{
  return _[a1 propertiesChanged];
}

id objc_msgSend_propertiesChangedForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertiesChangedForCall:");
}

id objc_msgSend_propertiesDescription(void *a1, const char *a2, ...)
{
  return _[a1 propertiesDescription];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_protectedAppsUtilities(void *a1, const char *a2, ...)
{
  return _[a1 protectedAppsUtilities];
}

id objc_msgSend_protoCallAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protoCallAtIndex:");
}

id objc_msgSend_protoCallCapabilitiesState(void *a1, const char *a2, ...)
{
  return _[a1 protoCallCapabilitiesState];
}

id objc_msgSend_protoCallModel(void *a1, const char *a2, ...)
{
  return _[a1 protoCallModel];
}

id objc_msgSend_protoCallModelState(void *a1, const char *a2, ...)
{
  return _[a1 protoCallModelState];
}

id objc_msgSend_protoCalls(void *a1, const char *a2, ...)
{
  return _[a1 protoCalls];
}

id objc_msgSend_protoCallsCount(void *a1, const char *a2, ...)
{
  return _[a1 protoCallsCount];
}

id objc_msgSend_protoCannotBeAnswered(void *a1, const char *a2, ...)
{
  return _[a1 protoCannotBeAnswered];
}

id objc_msgSend_protoCannotRelayAudioOrVideoOnPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 protoCannotRelayAudioOrVideoOnPairedDevice];
}

id objc_msgSend_protoConferenced(void *a1, const char *a2, ...)
{
  return _[a1 protoConferenced];
}

id objc_msgSend_protoCurrentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 protoCurrentlyPicked];
}

id objc_msgSend_protoDTMFKey(void *a1, const char *a2, ...)
{
  return _[a1 protoDTMFKey];
}

id objc_msgSend_protoDisconnectedReason(void *a1, const char *a2, ...)
{
  return _[a1 protoDisconnectedReason];
}

id objc_msgSend_protoDisplayContext(void *a1, const char *a2, ...)
{
  return _[a1 protoDisplayContext];
}

id objc_msgSend_protoEmergency(void *a1, const char *a2, ...)
{
  return _[a1 protoEmergency];
}

id objc_msgSend_protoExpectedEndpointOnMessagingDevice(void *a1, const char *a2, ...)
{
  return _[a1 protoExpectedEndpointOnMessagingDevice];
}

id objc_msgSend_protoFailureExpected(void *a1, const char *a2, ...)
{
  return _[a1 protoFailureExpected];
}

id objc_msgSend_protoGuest(void *a1, const char *a2, ...)
{
  return _[a1 protoGuest];
}

id objc_msgSend_protoHasSentInvitation(void *a1, const char *a2, ...)
{
  return _[a1 protoHasSentInvitation];
}

id objc_msgSend_protoMomentsV2Available(void *a1, const char *a2, ...)
{
  return _[a1 protoMomentsV2Available];
}

id objc_msgSend_protoNeedsManualInCallSounds(void *a1, const char *a2, ...)
{
  return _[a1 protoNeedsManualInCallSounds];
}

id objc_msgSend_protoOriginatingUIType(void *a1, const char *a2, ...)
{
  return _[a1 protoOriginatingUIType];
}

id objc_msgSend_protoOutgoing(void *a1, const char *a2, ...)
{
  return _[a1 protoOutgoing];
}

id objc_msgSend_protoPersonNameComponents(void *a1, const char *a2, ...)
{
  return _[a1 protoPersonNameComponents];
}

id objc_msgSend_protoProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 protoProtocolVersion];
}

id objc_msgSend_protoProvider(void *a1, const char *a2, ...)
{
  return _[a1 protoProvider];
}

id objc_msgSend_protoRemoteUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 protoRemoteUplinkMuted];
}

id objc_msgSend_protoSOS(void *a1, const char *a2, ...)
{
  return _[a1 protoSOS];
}

id objc_msgSend_protoSenderMuteUplink(void *a1, const char *a2, ...)
{
  return _[a1 protoSenderMuteUplink];
}

id objc_msgSend_protoService(void *a1, const char *a2, ...)
{
  return _[a1 protoService];
}

id objc_msgSend_protoShouldSuppressInCallUI(void *a1, const char *a2, ...)
{
  return _[a1 protoShouldSuppressInCallUI];
}

id objc_msgSend_protoShouldSuppressRingtone(void *a1, const char *a2, ...)
{
  return _[a1 protoShouldSuppressRingtone];
}

id objc_msgSend_protoStatus(void *a1, const char *a2, ...)
{
  return _[a1 protoStatus];
}

id objc_msgSend_protoSupportedHandleTypeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protoSupportedHandleTypeAtIndex:");
}

id objc_msgSend_protoSupportedHandleTypesCount(void *a1, const char *a2, ...)
{
  return _[a1 protoSupportedHandleTypesCount];
}

id objc_msgSend_protoSupportsDTMFUpdates(void *a1, const char *a2, ...)
{
  return _[a1 protoSupportsDTMFUpdates];
}

id objc_msgSend_protoSupportsEmergencyFallback(void *a1, const char *a2, ...)
{
  return _[a1 protoSupportsEmergencyFallback];
}

id objc_msgSend_protoSupportsRelay(void *a1, const char *a2, ...)
{
  return _[a1 protoSupportsRelay];
}

id objc_msgSend_protoSupportsTTYWithVoice(void *a1, const char *a2, ...)
{
  return _[a1 protoSupportsTTYWithVoice];
}

id objc_msgSend_protoTTYType(void *a1, const char *a2, ...)
{
  return _[a1 protoTTYType];
}

id objc_msgSend_protoTimeConnected(void *a1, const char *a2, ...)
{
  return _[a1 protoTimeConnected];
}

id objc_msgSend_protoUUID(void *a1, const char *a2, ...)
{
  return _[a1 protoUUID];
}

id objc_msgSend_protoUpgradeSessionUUID(void *a1, const char *a2, ...)
{
  return _[a1 protoUpgradeSessionUUID];
}

id objc_msgSend_protoUplinkMuted(void *a1, const char *a2, ...)
{
  return _[a1 protoUplinkMuted];
}

id objc_msgSend_protoVoicemail(void *a1, const char *a2, ...)
{
  return _[a1 protoVoicemail];
}

id objc_msgSend_protoWantsHoldMusic(void *a1, const char *a2, ...)
{
  return _[a1 protoWantsHoldMusic];
}

id objc_msgSend_protoWantsVideo(void *a1, const char *a2, ...)
{
  return _[a1 protoWantsVideo];
}

id objc_msgSend_protocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 protocolVersion];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _[a1 provider];
}

id objc_msgSend_provider_didActivateAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:didActivateAudioSession:");
}

id objc_msgSend_provider_didDeactivateAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:didDeactivateAudioSession:");
}

id objc_msgSend_provider_performAnswerCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performAnswerCallAction:");
}

id objc_msgSend_provider_performEnableVideoCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performEnableVideoCallAction:");
}

id objc_msgSend_provider_performEndCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performEndCallAction:");
}

id objc_msgSend_provider_performJoinCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performJoinCallAction:");
}

id objc_msgSend_provider_performJoinCallAction_shouldUseIDSDemuxer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performJoinCallAction:shouldUseIDSDemuxer:");
}

id objc_msgSend_provider_performSetAllowUplinkAudioInjectionAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetAllowUplinkAudioInjectionAction:");
}

id objc_msgSend_provider_performSetHeldCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetHeldCallAction:");
}

id objc_msgSend_provider_performSetMutedCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetMutedCallAction:");
}

id objc_msgSend_provider_performSetRelayingCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetRelayingCallAction:");
}

id objc_msgSend_provider_performSetScreenShareAttributesCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetScreenShareAttributesCallAction:");
}

id objc_msgSend_provider_performSetScreeningCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetScreeningCallAction:");
}

id objc_msgSend_provider_performSetSendingVideoCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetSendingVideoCallAction:");
}

id objc_msgSend_provider_performSetSharingScreenCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetSharingScreenCallAction:");
}

id objc_msgSend_provider_performSetVideoPresentationSizeCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetVideoPresentationSizeCallAction:");
}

id objc_msgSend_provider_performSetVideoPresentationStateCallAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performSetVideoPresentationStateCallAction:");
}

id objc_msgSend_provider_performStartCallAction_shouldUseIDSDemuxer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provider:performStartCallAction:shouldUseIDSDemuxer:");
}

id objc_msgSend_providerBargeCallDelegate(void *a1, const char *a2, ...)
{
  return _[a1 providerBargeCallDelegate];
}

id objc_msgSend_providerByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 providerByIdentifier];
}

id objc_msgSend_providerCallDataSource(void *a1, const char *a2, ...)
{
  return _[a1 providerCallDataSource];
}

id objc_msgSend_providerCallDelegate(void *a1, const char *a2, ...)
{
  return _[a1 providerCallDelegate];
}

id objc_msgSend_providerConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 providerConfiguration];
}

id objc_msgSend_providerContext(void *a1, const char *a2, ...)
{
  return _[a1 providerContext];
}

id objc_msgSend_providerDelegate_callWithUUID_connectedAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:callWithUUID:connectedAtDate:");
}

id objc_msgSend_providerDelegate_callWithUUID_endedAtDate_withReason_failureContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:callWithUUID:endedAtDate:withReason:failureContext:");
}

id objc_msgSend_providerDelegate_callWithUUID_startedConnectingAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:callWithUUID:startedConnectingAtDate:");
}

id objc_msgSend_providerDelegate_endOtherProvidersCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:endOtherProvidersCallWithUUID:");
}

id objc_msgSend_providerDelegate_isExclusivelyManagingCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:isExclusivelyManagingCallWithUUID:");
}

id objc_msgSend_providerDelegate_isManagingCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:isManagingCallWithUUID:");
}

id objc_msgSend_providerDelegate_requestedTransaction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:requestedTransaction:completion:");
}

id objc_msgSend_providerDelegate_requestedUpgradeToExistingCallForConversation_withSessionToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDelegate:requestedUpgradeToExistingCallForConversation:withSessionToken:completion:");
}

id objc_msgSend_providerDidBegin(void *a1, const char *a2, ...)
{
  return _[a1 providerDidBegin];
}

id objc_msgSend_providerDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDidBegin:");
}

id objc_msgSend_providerDidReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerDidReset:");
}

id objc_msgSend_providerDisplayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 providerDisplayMonitor];
}

id objc_msgSend_providerEndedReason(void *a1, const char *a2, ...)
{
  return _[a1 providerEndedReason];
}

id objc_msgSend_providerErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 providerErrorCode];
}

id objc_msgSend_providerForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerForIdentifier:");
}

id objc_msgSend_providerForRecentCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerForRecentCall:");
}

id objc_msgSend_providerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 providerIdentifier];
}

id objc_msgSend_providerIdentifierForHandoffActivityUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerIdentifierForHandoffActivityUserInfo:");
}

id objc_msgSend_providerIdentifierToProvider(void *a1, const char *a2, ...)
{
  return _[a1 providerIdentifierToProvider];
}

id objc_msgSend_providerIdentifiersForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerIdentifiersForClient:");
}

id objc_msgSend_providerIdentifiersForExistingCalls(void *a1, const char *a2, ...)
{
  return _[a1 providerIdentifiersForExistingCalls];
}

id objc_msgSend_providerManager(void *a1, const char *a2, ...)
{
  return _[a1 providerManager];
}

id objc_msgSend_providerSource(void *a1, const char *a2, ...)
{
  return _[a1 providerSource];
}

id objc_msgSend_providerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerWithIdentifier:");
}

id objc_msgSend_providerWithService_video_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerWithService:video:");
}

id objc_msgSend_providers(void *a1, const char *a2, ...)
{
  return _[a1 providers];
}

id objc_msgSend_providersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providersAtIndex:");
}

id objc_msgSend_providersByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 providersByIdentifier];
}

id objc_msgSend_providersByIdentifierForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providersByIdentifierForClient:");
}

id objc_msgSend_providersByIdentifierForRemoteClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providersByIdentifierForRemoteClients:");
}

id objc_msgSend_providersCount(void *a1, const char *a2, ...)
{
  return _[a1 providersCount];
}

id objc_msgSend_provisionPseudonymForHandle_featureID_scopeID_expiryDuration_allowedServices_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provisionPseudonymForHandle:featureID:scopeID:expiryDuration:allowedServices:completionHandler:");
}

id objc_msgSend_provisionPseudonymForURI_withProperties_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provisionPseudonymForURI:withProperties:completion:");
}

id objc_msgSend_proximityChangeHandler(void *a1, const char *a2, ...)
{
  return _[a1 proximityChangeHandler];
}

id objc_msgSend_proximityDetectionMode(void *a1, const char *a2, ...)
{
  return _[a1 proximityDetectionMode];
}

id objc_msgSend_proximitySensorObserver(void *a1, const char *a2, ...)
{
  return _[a1 proximitySensorObserver];
}

id objc_msgSend_proxyAVAudioSession(void *a1, const char *a2, ...)
{
  return _[a1 proxyAVAudioSession];
}

id objc_msgSend_proxyCallWithCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxyCallWithCall:");
}

id objc_msgSend_proxyGroupUpdate_forConversationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxyGroupUpdate:forConversationManager:");
}

id objc_msgSend_pseudonym(void *a1, const char *a2, ...)
{
  return _[a1 pseudonym];
}

id objc_msgSend_pseudonymAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pseudonymAtIndex:");
}

id objc_msgSend_pseudonymExpirationDateEpochTime(void *a1, const char *a2, ...)
{
  return _[a1 pseudonymExpirationDateEpochTime];
}

id objc_msgSend_pseudonymFeatureID(void *a1, const char *a2, ...)
{
  return _[a1 pseudonymFeatureID];
}

id objc_msgSend_pseudonymForPseudonymString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pseudonymForPseudonymString:");
}

id objc_msgSend_pseudonymForPseudonymURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pseudonymForPseudonymURI:");
}

id objc_msgSend_pseudonymPropertiesWithFeatureID_scopeID_expiryDurationInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:");
}

id objc_msgSend_pseudonymURIMap(void *a1, const char *a2, ...)
{
  return _[a1 pseudonymURIMap];
}

id objc_msgSend_pseudonyms(void *a1, const char *a2, ...)
{
  return _[a1 pseudonyms];
}

id objc_msgSend_pseudonymsByCallUUID(void *a1, const char *a2, ...)
{
  return _[a1 pseudonymsByCallUUID];
}

id objc_msgSend_pseudonymsCount(void *a1, const char *a2, ...)
{
  return _[a1 pseudonymsCount];
}

id objc_msgSend_pttDeprecationAlertWaitingPeriodHasPassedForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pttDeprecationAlertWaitingPeriodHasPassedForApplication:");
}

id objc_msgSend_pttServiceUpdatePushMonitor(void *a1, const char *a2, ...)
{
  return _[a1 pttServiceUpdatePushMonitor];
}

id objc_msgSend_publicIntentAction(void *a1, const char *a2, ...)
{
  return _[a1 publicIntentAction];
}

id objc_msgSend_publicKey(void *a1, const char *a2, ...)
{
  return _[a1 publicKey];
}

id objc_msgSend_publiclyAccessibleCopy(void *a1, const char *a2, ...)
{
  return _[a1 publiclyAccessibleCopy];
}

id objc_msgSend_pullCallWithHandoffActivityUserInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pullCallWithHandoffActivityUserInfo:completion:");
}

id objc_msgSend_pullRelayingCallsFromClient(void *a1, const char *a2, ...)
{
  return _[a1 pullRelayingCallsFromClient];
}

id objc_msgSend_pullRelayingGFTCallsFromClientIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 pullRelayingGFTCallsFromClientIfNecessary];
}

id objc_msgSend_pullRemotelyHostedCallsForMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pullRemotelyHostedCallsForMessage:completion:");
}

id objc_msgSend_pushEnvironmentAccordingToLaunchServices(void *a1, const char *a2, ...)
{
  return _[a1 pushEnvironmentAccordingToLaunchServices];
}

id objc_msgSend_pushHostedCallsForRemoteInviteDictionary_destination_toPairedDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushHostedCallsForRemoteInviteDictionary:destination:toPairedDevice:completion:");
}

id objc_msgSend_pushHostedCallsToDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushHostedCallsToDestination:");
}

id objc_msgSend_pushKitClient(void *a1, const char *a2, ...)
{
  return _[a1 pushKitClient];
}

id objc_msgSend_pushKitClientManager(void *a1, const char *a2, ...)
{
  return _[a1 pushKitClientManager];
}

id objc_msgSend_pushToken(void *a1, const char *a2, ...)
{
  return _[a1 pushToken];
}

id objc_msgSend_pushTokenForSelf(void *a1, const char *a2, ...)
{
  return _[a1 pushTokenForSelf];
}

id objc_msgSend_queryHasWebOnlyEndpointsForDestinations_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryHasWebOnlyEndpointsForDestinations:completionBlock:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueAddParticipantRetryBlock_withVideoEnabled_audioPaused_screenEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queueAddParticipantRetryBlock:withVideoEnabled:audioPaused:screenEnabled:");
}

id objc_msgSend_queueContext(void *a1, const char *a2, ...)
{
  return _[a1 queueContext];
}

id objc_msgSend_queueItemType(void *a1, const char *a2, ...)
{
  return _[a1 queueItemType];
}

id objc_msgSend_queuedActivitiesOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queuedActivitiesOfType:");
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return _[a1 raise];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_raiseToEarGestureHandler(void *a1, const char *a2, ...)
{
  return _[a1 raiseToEarGestureHandler];
}

id objc_msgSend_raiseToEarGestureManager(void *a1, const char *a2, ...)
{
  return _[a1 raiseToEarGestureManager];
}

id objc_msgSend_randomSixDigitCode(void *a1, const char *a2, ...)
{
  return _[a1 randomSixDigitCode];
}

id objc_msgSend_rangeOfCharacterFromSet_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:range:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_readDataAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDataAndReturnError:");
}

id objc_msgSend_readPasswordAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readPasswordAndReturnError:");
}

id objc_msgSend_rebroadcastTimeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 rebroadcastTimeThreshold];
}

id objc_msgSend_receivedBroadcastedActivityType_dynamicIdentifier_originatingDeviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedBroadcastedActivityType:dynamicIdentifier:originatingDeviceType:");
}

id objc_msgSend_receivedFirstRemoteFrameForConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedFirstRemoteFrameForConference:");
}

id objc_msgSend_receivedInvitationAccept(void *a1, const char *a2, ...)
{
  return _[a1 receivedInvitationAccept];
}

id objc_msgSend_receivedLetMeInRequestForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedLetMeInRequestForConversation:");
}

id objc_msgSend_receivedMessageType(void *a1, const char *a2, ...)
{
  return _[a1 receivedMessageType];
}

id objc_msgSend_receivedResourceAtURL_withMetadata_fromParticipantIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "receivedResourceAtURL:withMetadata:fromParticipantIdentifier:");
}

id objc_msgSend_receivedSuccessfulDidStart(void *a1, const char *a2, ...)
{
  return _[a1 receivedSuccessfulDidStart];
}

id objc_msgSend_receiverRoute(void *a1, const char *a2, ...)
{
  return _[a1 receiverRoute];
}

id objc_msgSend_recentCallJunkIdentificationCategoryString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentCallJunkIdentificationCategoryString:");
}

id objc_msgSend_recentCallsDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentCallsDeleted:");
}

id objc_msgSend_recentlyDeletedCallUUIDsByConversationUUID(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDeletedCallUUIDsByConversationUUID];
}

id objc_msgSend_recentlyLeftParticipantIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 recentlyLeftParticipantIdentifiers];
}

id objc_msgSend_recentsController(void *a1, const char *a2, ...)
{
  return _[a1 recentsController];
}

id objc_msgSend_recentsManager(void *a1, const char *a2, ...)
{
  return _[a1 recentsManager];
}

id objc_msgSend_recheckAccountStatusForSubscription_capability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recheckAccountStatusForSubscription:capability:");
}

id objc_msgSend_reconcileChannelTopicFilters(void *a1, const char *a2, ...)
{
  return _[a1 reconcileChannelTopicFilters];
}

id objc_msgSend_reconnect(void *a1, const char *a2, ...)
{
  return _[a1 reconnect];
}

id objc_msgSend_reconnectSession(void *a1, const char *a2, ...)
{
  return _[a1 reconnectSession];
}

id objc_msgSend_recordingAllowedError(void *a1, const char *a2, ...)
{
  return _[a1 recordingAllowedError];
}

id objc_msgSend_recordingDisabledError(void *a1, const char *a2, ...)
{
  return _[a1 recordingDisabledError];
}

id objc_msgSend_recordingSession(void *a1, const char *a2, ...)
{
  return _[a1 recordingSession];
}

id objc_msgSend_recordingState(void *a1, const char *a2, ...)
{
  return _[a1 recordingState];
}

id objc_msgSend_recoverLinksForPseudonyms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recoverLinksForPseudonyms:");
}

id objc_msgSend_reducedInfoMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reducedInfoMembers:");
}

id objc_msgSend_refreshActiveParticipantsList(void *a1, const char *a2, ...)
{
  return _[a1 refreshActiveParticipantsList];
}

id objc_msgSend_refreshActivitySessionActiveParticipants(void *a1, const char *a2, ...)
{
  return _[a1 refreshActivitySessionActiveParticipants];
}

id objc_msgSend_refreshDataCryptors(void *a1, const char *a2, ...)
{
  return _[a1 refreshDataCryptors];
}

id objc_msgSend_refreshIDStatusForDestination_service_listenerID_queue_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshIDStatusForDestination:service:listenerID:queue:completionBlock:");
}

id objc_msgSend_refreshSubscriptionsInUse(void *a1, const char *a2, ...)
{
  return _[a1 refreshSubscriptionsInUse];
}

id objc_msgSend_refreshToneForDefaultSIM(void *a1, const char *a2, ...)
{
  return _[a1 refreshToneForDefaultSIM];
}

id objc_msgSend_refreshToneForSIMIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshToneForSIMIdentifier:");
}

id objc_msgSend_regionBasePhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 regionBasePhoneNumber];
}

id objc_msgSend_registerActivityType_dynamicIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerActivityType:dynamicIdentifier:");
}

id objc_msgSend_registerCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerCall:");
}

id objc_msgSend_registerChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerChat:");
}

id objc_msgSend_registerConversationProvider_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerConversationProvider:completionHandler:");
}

id objc_msgSend_registerForSecureMicEvents(void *a1, const char *a2, ...)
{
  return _[a1 registerForSecureMicEvents];
}

id objc_msgSend_registerLocalProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerLocalProvider:");
}

id objc_msgSend_registerMessagesGroupAssociation(void *a1, const char *a2, ...)
{
  return _[a1 registerMessagesGroupAssociation];
}

id objc_msgSend_registerMessagesGroupUUIDForConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerMessagesGroupUUIDForConversationUUID:");
}

id objc_msgSend_registerPairedHostDeviceProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerPairedHostDeviceProviders:");
}

id objc_msgSend_registerPluginWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerPluginWithOptions:");
}

id objc_msgSend_registerProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerProvider:");
}

id objc_msgSend_registerSecureMicrophoneEngagedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerSecureMicrophoneEngagedHandler:");
}

id objc_msgSend_registerWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWithCompletionHandler:");
}

id objc_msgSend_registerWithIDSWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerWithIDSWithCompletionHandler:");
}

id objc_msgSend_registeredLocalProvidersByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 registeredLocalProvidersByIdentifier];
}

id objc_msgSend_registeredPairedHostDeviceProvidersByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 registeredPairedHostDeviceProvidersByIdentifier];
}

id objc_msgSend_registeredStreamWithAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredStreamWithAvailability:");
}

id objc_msgSend_registrationRestrictionReason(void *a1, const char *a2, ...)
{
  return _[a1 registrationRestrictionReason];
}

id objc_msgSend_rejectPendingMember_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rejectPendingMember:forConversationUUID:");
}

id objc_msgSend_rejectedMembers(void *a1, const char *a2, ...)
{
  return _[a1 rejectedMembers];
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _[a1 relativePath];
}

id objc_msgSend_relayCall_didAnswerWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCall:didAnswerWithRequest:");
}

id objc_msgSend_relayCall_didGroupWithOtherCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCall:didGroupWithOtherCall:");
}

id objc_msgSend_relayCall_didPlayLocalDTMFToneForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCall:didPlayLocalDTMFToneForKey:");
}

id objc_msgSend_relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallConferenceDidStartSuccessfullyForIncomingAnsweredCall:");
}

id objc_msgSend_relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallConferenceDidStartSuccessfullyForOutgoingDialedCall:");
}

id objc_msgSend_relayCallConferenceDidStartSuccessfullyForPulledCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallConferenceDidStartSuccessfullyForPulledCall:");
}

id objc_msgSend_relayCallConferenceDidStop_cleanly_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallConferenceDidStop:cleanly:error:");
}

id objc_msgSend_relayCallConferenceFailedToStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallConferenceFailedToStart:");
}

id objc_msgSend_relayCallDataSource(void *a1, const char *a2, ...)
{
  return _[a1 relayCallDataSource];
}

id objc_msgSend_relayCallDelegate(void *a1, const char *a2, ...)
{
  return _[a1 relayCallDelegate];
}

id objc_msgSend_relayCallDidBecomeEndpointForPull_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidBecomeEndpointForPull:");
}

id objc_msgSend_relayCallDidDial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidDial:");
}

id objc_msgSend_relayCallDidDisconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidDisconnect:");
}

id objc_msgSend_relayCallDidHold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidHold:");
}

id objc_msgSend_relayCallDidJoin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidJoin:");
}

id objc_msgSend_relayCallDidPerformUplinkMuted_uplinkMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidPerformUplinkMuted:uplinkMuted:");
}

id objc_msgSend_relayCallDidSendHardPauseDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidSendHardPauseDigits:");
}

id objc_msgSend_relayCallDidUngroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidUngroup:");
}

id objc_msgSend_relayCallDidUnhold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallDidUnhold:");
}

id objc_msgSend_relayCallingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 relayCallingAvailability];
}

id objc_msgSend_relayCallingDisabledForDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 relayCallingDisabledForDeviceID];
}

id objc_msgSend_relayCallingStateChangedForDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayCallingStateChangedForDataSource:");
}

id objc_msgSend_relayCapableDeviceExists(void *a1, const char *a2, ...)
{
  return _[a1 relayCapableDeviceExists];
}

id objc_msgSend_relayClientController(void *a1, const char *a2, ...)
{
  return _[a1 relayClientController];
}

id objc_msgSend_relayClientTransport(void *a1, const char *a2, ...)
{
  return _[a1 relayClientTransport];
}

id objc_msgSend_relayCommonController(void *a1, const char *a2, ...)
{
  return _[a1 relayCommonController];
}

id objc_msgSend_relayDelegate(void *a1, const char *a2, ...)
{
  return _[a1 relayDelegate];
}

id objc_msgSend_relayHostController(void *a1, const char *a2, ...)
{
  return _[a1 relayHostController];
}

id objc_msgSend_relayInviteDictionary(void *a1, const char *a2, ...)
{
  return _[a1 relayInviteDictionary];
}

id objc_msgSend_relayMessagingController(void *a1, const char *a2, ...)
{
  return _[a1 relayMessagingController];
}

id objc_msgSend_relayService(void *a1, const char *a2, ...)
{
  return _[a1 relayService];
}

id objc_msgSend_remainingHighPriorityServiceUpdateBudget(void *a1, const char *a2, ...)
{
  return _[a1 remainingHighPriorityServiceUpdateBudget];
}

id objc_msgSend_remainingPTTWakingServiceUpdateBudgetForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remainingPTTWakingServiceUpdateBudgetForApplication:");
}

id objc_msgSend_remoteDestination(void *a1, const char *a2, ...)
{
  return _[a1 remoteDestination];
}

id objc_msgSend_remoteDevice(void *a1, const char *a2, ...)
{
  return _[a1 remoteDevice];
}

id objc_msgSend_remoteDeviceForUPI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteDeviceForUPI:");
}

id objc_msgSend_remoteFromID(void *a1, const char *a2, ...)
{
  return _[a1 remoteFromID];
}

id objc_msgSend_remoteHandle(void *a1, const char *a2, ...)
{
  return _[a1 remoteHandle];
}

id objc_msgSend_remoteIDSDestinations(void *a1, const char *a2, ...)
{
  return _[a1 remoteIDSDestinations];
}

id objc_msgSend_remoteInviteDictionary(void *a1, const char *a2, ...)
{
  return _[a1 remoteInviteDictionary];
}

id objc_msgSend_remoteMemberForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteMemberForHandle:");
}

id objc_msgSend_remoteMemberHandles(void *a1, const char *a2, ...)
{
  return _[a1 remoteMemberHandles];
}

id objc_msgSend_remoteMemberNotInMemberListForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteMemberNotInMemberListForConversation:");
}

id objc_msgSend_remoteMembers(void *a1, const char *a2, ...)
{
  return _[a1 remoteMembers];
}

id objc_msgSend_remoteMembersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteMembersAtIndex:");
}

id objc_msgSend_remoteMembersCount(void *a1, const char *a2, ...)
{
  return _[a1 remoteMembersCount];
}

id objc_msgSend_remoteObjectInterface(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectInterface];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteParticipantForHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantForHandle:");
}

id objc_msgSend_remoteParticipantForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantForIdentifier:");
}

id objc_msgSend_remoteParticipantForLightweightParticipantHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantForLightweightParticipantHandle:");
}

id objc_msgSend_remoteParticipantHandles(void *a1, const char *a2, ...)
{
  return _[a1 remoteParticipantHandles];
}

id objc_msgSend_remoteParticipantHandlesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantHandlesAtIndex:");
}

id objc_msgSend_remoteParticipantHandlesCount(void *a1, const char *a2, ...)
{
  return _[a1 remoteParticipantHandlesCount];
}

id objc_msgSend_remoteParticipantTUHandles(void *a1, const char *a2, ...)
{
  return _[a1 remoteParticipantTUHandles];
}

id objc_msgSend_remoteParticipantWithIdentifier_cameraMixedWithScreenDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:cameraMixedWithScreenDidChange:");
}

id objc_msgSend_remoteParticipantWithIdentifier_didChangeAudioPriority_videoPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:didChangeAudioPriority:videoPriority:");
}

id objc_msgSend_remoteParticipantWithIdentifier_didReact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:didReact:");
}

id objc_msgSend_remoteParticipantWithIdentifier_updatedAudioEnabled_streamToken_screenToken_captionsToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:updatedAudioEnabled:streamToken:screenToken:captionsToken:");
}

id objc_msgSend_remoteParticipantWithIdentifier_updatedAudioPaused_streamToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:updatedAudioPaused:streamToken:");
}

id objc_msgSend_remoteParticipantWithIdentifier_updatedScreenEnabled_streamToken_screenToken_captionsToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:updatedScreenEnabled:streamToken:screenToken:captionsToken:");
}

id objc_msgSend_remoteParticipantWithIdentifier_updatedVideoEnabled_streamToken_screenToken_captionsToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteParticipantWithIdentifier:updatedVideoEnabled:streamToken:screenToken:captionsToken:");
}

id objc_msgSend_remoteParticipantsByIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 remoteParticipantsByIdentifier];
}

id objc_msgSend_remoteProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 remoteProtocolVersion];
}

id objc_msgSend_remoteProtocolVersionNumber(void *a1, const char *a2, ...)
{
  return _[a1 remoteProtocolVersionNumber];
}

id objc_msgSend_remotePushTokens(void *a1, const char *a2, ...)
{
  return _[a1 remotePushTokens];
}

id objc_msgSend_remoteRequesteeIDSDestinationFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteRequesteeIDSDestinationFor:");
}

id objc_msgSend_remoteRequesterIDSDestinationFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteRequesterIDSDestinationFor:");
}

id objc_msgSend_remoteUplinkMutedSetTime(void *a1, const char *a2, ...)
{
  return _[a1 remoteUplinkMutedSetTime];
}

id objc_msgSend_remoteVideoPausedForConference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteVideoPausedForConference:");
}

id objc_msgSend_removeActiveAudioSessionObjectForConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeActiveAudioSessionObjectForConversationWithUUID:");
}

id objc_msgSend_removeActiveRequestForTransactionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeActiveRequestForTransactionID:");
}

id objc_msgSend_removeActivitySessionIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 removeActivitySessionIfNecessary];
}

id objc_msgSend_removeActivitySessionWithUUID_usingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeActivitySessionWithUUID:usingHandle:");
}

id objc_msgSend_removeActivitySessionWithUUID_usingTerminatingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeActivitySessionWithUUID:usingTerminatingHandle:");
}

id objc_msgSend_removeAllConversations(void *a1, const char *a2, ...)
{
  return _[a1 removeAllConversations];
}

id objc_msgSend_removeAllEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllEntries:");
}

id objc_msgSend_removeAllFirewallEntries(void *a1, const char *a2, ...)
{
  return _[a1 removeAllFirewallEntries];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllPendingConversations(void *a1, const char *a2, ...)
{
  return _[a1 removeAllPendingConversations];
}

id objc_msgSend_removeApplicationFromPTTDeprecationAlertDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeApplicationFromPTTDeprecationAlertDictionary:");
}

id objc_msgSend_removeApplicationFromPTTWakingServiceUpdateDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeApplicationFromPTTWakingServiceUpdateDictionary:");
}

id objc_msgSend_removeCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCall:");
}

id objc_msgSend_removeCallDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCallDescriptor:");
}

id objc_msgSend_removeCallerIDFromPreferences(void *a1, const char *a2, ...)
{
  return _[a1 removeCallerIDFromPreferences];
}

id objc_msgSend_removeClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClient:");
}

id objc_msgSend_removeConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConversation:");
}

id objc_msgSend_removeConversationNoticeWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConversationNoticeWithUUID:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeEmergencyAddressDisclaimerOnSecondaryDevice(void *a1, const char *a2, ...)
{
  return _[a1 removeEmergencyAddressDisclaimerOnSecondaryDevice];
}

id objc_msgSend_removeEntries_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEntries:withCompletion:");
}

id objc_msgSend_removeErrorNotifications(void *a1, const char *a2, ...)
{
  return _[a1 removeErrorNotifications];
}

id objc_msgSend_removeFirewallEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFirewallEntries:");
}

id objc_msgSend_removeFromRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 removeFromRunLoop];
}

id objc_msgSend_removeHighlightIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightIdentifier:");
}

id objc_msgSend_removeHighlightIdentifier_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightIdentifier:forConversationUUID:");
}

id objc_msgSend_removeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeIdentifier:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeLink_deleteReason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLink:deleteReason:completionHandler:");
}

id objc_msgSend_removeLink_reason_withConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLink:reason:withConversation:");
}

id objc_msgSend_removeLinksForFilenamesNotInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLinksForFilenamesNotInArray:");
}

id objc_msgSend_removeLinksForFilenamesNotInArray_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLinksForFilenamesNotInArray:error:");
}

id objc_msgSend_removeListenerID_forService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeListenerID:forService:");
}

id objc_msgSend_removeLocalClientObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLocalClientObject:");
}

id objc_msgSend_removeLocalScreenSharingSessions(void *a1, const char *a2, ...)
{
  return _[a1 removeLocalScreenSharingSessions];
}

id objc_msgSend_removeMembers_fromExistingMembers_activeParticipants_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMembers:fromExistingMembers:activeParticipants:triggeredLocally:");
}

id objc_msgSend_removeNonIndefiniteLinks(void *a1, const char *a2, ...)
{
  return _[a1 removeNonIndefiniteLinks];
}

id objc_msgSend_removeNotificationsForServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNotificationsForServiceIdentifier:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeOutstandingMessagesForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutstandingMessagesForBundleIdentifier:");
}

id objc_msgSend_removeParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipant:");
}

id objc_msgSend_removeParticipantWithIdentifier_fromHandle_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipantWithIdentifier:fromHandle:withReason:");
}

id objc_msgSend_removeParticipantsForMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipantsForMember:");
}

id objc_msgSend_removePendingConversationWithPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingConversationWithPseudonym:");
}

id objc_msgSend_removePendingData(void *a1, const char *a2, ...)
{
  return _[a1 removePendingData];
}

id objc_msgSend_removePendingMemberMatchingActiveParticipant_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingMemberMatchingActiveParticipant:conversation:");
}

id objc_msgSend_removePendingMembers_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingMembers:triggeredLocally:");
}

id objc_msgSend_removePseudonym_forCallUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePseudonym:forCallUUID:");
}

id objc_msgSend_removeReminderNotificationOnSecondaryDevice(void *a1, const char *a2, ...)
{
  return _[a1 removeReminderNotificationOnSecondaryDevice];
}

id objc_msgSend_removeRemoteMembers_fromConversationWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRemoteMembers:fromConversationWithUUID:");
}

id objc_msgSend_removeRemoteMembers_triggeredLocally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRemoteMembers:triggeredLocally:");
}

id objc_msgSend_removeRequiredCapabilities_requiredLackOfCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRequiredCapabilities:requiredLackOfCapabilities:");
}

id objc_msgSend_removeScreenShareRequestFromParticipant_conversation_screenShareContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeScreenShareRequestFromParticipant:conversation:screenShareContext:");
}

id objc_msgSend_removeScreenSharingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeScreenSharingRequest:");
}

id objc_msgSend_removeScreenSharingSessions(void *a1, const char *a2, ...)
{
  return _[a1 removeScreenSharingSessions];
}

id objc_msgSend_removeSecondaryThumperDeviceWithIDSDeviceIdentifier_fromSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSecondaryThumperDeviceWithIDSDeviceIdentifier:fromSubscription:");
}

id objc_msgSend_removeServiceDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeServiceDelegate:");
}

id objc_msgSend_removeThumperRegisteredDeviceID_forThumperAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeThumperRegisteredDeviceID:forThumperAccountID:");
}

id objc_msgSend_removeVirtualParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeVirtualParticipant:");
}

id objc_msgSend_removedHandoffParticipantToTime(void *a1, const char *a2, ...)
{
  return _[a1 removedHandoffParticipantToTime];
}

id objc_msgSend_removedHandoffParticipants(void *a1, const char *a2, ...)
{
  return _[a1 removedHandoffParticipants];
}

id objc_msgSend_removedMembers(void *a1, const char *a2, ...)
{
  return _[a1 removedMembers];
}

id objc_msgSend_removedMembersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removedMembersAtIndex:");
}

id objc_msgSend_removedMembersCount(void *a1, const char *a2, ...)
{
  return _[a1 removedMembersCount];
}

id objc_msgSend_removedRemoteParticipantWithIdentifier_didSucceed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removedRemoteParticipantWithIdentifier:didSucceed:");
}

id objc_msgSend_renamedResourceURL_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renamedResourceURL:withName:");
}

id objc_msgSend_renewLink_expirationDate_reason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewLink:expirationDate:reason:completionHandler:");
}

id objc_msgSend_renewLinkIfNeeded_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewLinkIfNeeded:completionHandler:");
}

id objc_msgSend_renewLinkWithPseudonym_expirationDate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewLinkWithPseudonym:expirationDate:completionHandler:");
}

id objc_msgSend_renewPseudonym_expirationDate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewPseudonym:expirationDate:completionHandler:");
}

id objc_msgSend_renewPseudonym_forUpdatedExpiryEpoch_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewPseudonym:forUpdatedExpiryEpoch:completion:");
}

id objc_msgSend_renewPseudonymHandle_expirationDate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewPseudonymHandle:expirationDate:completionHandler:");
}

id objc_msgSend_renewPseudonymHandle_forConversationProvider_expirationDate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewPseudonymHandle:forConversationProvider:expirationDate:completionHandler:");
}

id objc_msgSend_renewPseudonymIfNeeded_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewPseudonymIfNeeded:completionHandler:");
}

id objc_msgSend_renewPseudonymString_expirationDate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewPseudonymString:expirationDate:completionHandler:");
}

id objc_msgSend_reply(void *a1, const char *a2, ...)
{
  return _[a1 reply];
}

id objc_msgSend_report(void *a1, const char *a2, ...)
{
  return _[a1 report];
}

id objc_msgSend_reportAction_ofTempURI_fromURI_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportAction:ofTempURI:fromURI:withCompletion:");
}

id objc_msgSend_reportAllCallsBackgrounded(void *a1, const char *a2, ...)
{
  return _[a1 reportAllCallsBackgrounded];
}

id objc_msgSend_reportAudioFinishedForCallWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportAudioFinishedForCallWithUUID:");
}

id objc_msgSend_reportCallEnteredForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallEnteredForeground:");
}

id objc_msgSend_reportCallWithUUID_changedFrequencyData_forDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:changedFrequencyData:forDirection:");
}

id objc_msgSend_reportCallWithUUID_changedMeterLevel_forDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:changedMeterLevel:forDirection:");
}

id objc_msgSend_reportCallWithUUID_crossDeviceIdentifier_changedBytesOfDataUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:");
}

id objc_msgSend_reportCallWithUUID_endedAtDate_privateReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:endedAtDate:privateReason:");
}

id objc_msgSend_reportCallWithUUID_endedAtDate_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:endedAtDate:reason:");
}

id objc_msgSend_reportCallWithUUID_failedAtDate_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:failedAtDate:withContext:");
}

id objc_msgSend_reportCallWithUUID_updated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportCallWithUUID:updated:");
}

id objc_msgSend_reportData(void *a1, const char *a2, ...)
{
  return _[a1 reportData];
}

id objc_msgSend_reportDataCollectionCompleteIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 reportDataCollectionCompleteIfNecessary];
}

id objc_msgSend_reportFailureForReason_provider_callUUID_actionToFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportFailureForReason:provider:callUUID:actionToFail:");
}

id objc_msgSend_reportJoinDurationLongerThanThreasholdForCallUUID_report_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportJoinDurationLongerThanThreasholdForCallUUID:report:");
}

id objc_msgSend_reportNewIncomingCallForConversation_fromHandle_callUUID_isReRing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportNewIncomingCallForConversation:fromHandle:callUUID:isReRing:");
}

id objc_msgSend_reportNewIncomingCallForConversation_fromHandle_isReRing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportNewIncomingCallForConversation:fromHandle:isReRing:");
}

id objc_msgSend_reportNewIncomingCallWithUUID_update_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportNewIncomingCallWithUUID:update:completion:");
}

id objc_msgSend_reportNewOutgoingCallWithUUID_update_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportNewOutgoingCallWithUUID:update:");
}

id objc_msgSend_reportOutgoingCallWithUUID_connectedAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportOutgoingCallWithUUID:connectedAtDate:");
}

id objc_msgSend_reportOutgoingCallWithUUID_sentInvitationAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportOutgoingCallWithUUID:sentInvitationAtDate:");
}

id objc_msgSend_reportOutgoingCallWithUUID_startedConnectingAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportOutgoingCallWithUUID:startedConnectingAtDate:");
}

id objc_msgSend_reportProviderFailedWithAction_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportProviderFailedWithAction:forCall:");
}

id objc_msgSend_reportRecentCallForConversation_withStartDate_avMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportRecentCallForConversation:withStartDate:avMode:");
}

id objc_msgSend_reportRelayMessageReceived_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportRelayMessageReceived:fromPairedDevice:");
}

id objc_msgSend_reportRouteWasPicked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportRouteWasPicked:");
}

id objc_msgSend_reportRouteWasPickedByAnyTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportRouteWasPickedByAnyTrigger:");
}

id objc_msgSend_reportTimedOutPickingRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportTimedOutPickingRoute:");
}

id objc_msgSend_reportTransactionGroupCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportTransactionGroupCompleted:");
}

id objc_msgSend_reporters(void *a1, const char *a2, ...)
{
  return _[a1 reporters];
}

id objc_msgSend_reportingController(void *a1, const char *a2, ...)
{
  return _[a1 reportingController];
}

id objc_msgSend_reportingController_AVCBlobRecoveryStartedForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:AVCBlobRecoveryStartedForConversation:");
}

id objc_msgSend_reportingController_AVCBlobRecoveryTimedOutForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:AVCBlobRecoveryTimedOutForConversation:");
}

id objc_msgSend_reportingController_activeRemoteParticipantsChangedForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:activeRemoteParticipantsChangedForConversation:");
}

id objc_msgSend_reportingController_addedActivatedLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:addedActivatedLink:");
}

id objc_msgSend_reportingController_addedActiveConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:addedActiveConversation:");
}

id objc_msgSend_reportingController_avcBlobRequestMessageRetryFailedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:avcBlobRequestMessageRetryFailedForConversationGroupUUID:");
}

id objc_msgSend_reportingController_avcBlobRequestMessageRetryStartedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:avcBlobRequestMessageRetryStartedForConversationGroupUUID:");
}

id objc_msgSend_reportingController_avcBlobRequestMessageRetrySucceededForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:avcBlobRequestMessageRetrySucceededForConversationGroupUUID:");
}

id objc_msgSend_reportingController_callEnteredForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:callEnteredForeground:");
}

id objc_msgSend_reportingController_callUUID_withUserScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:callUUID:withUserScore:");
}

id objc_msgSend_reportingController_capturedMomentsUsageReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:capturedMomentsUsageReport:");
}

id objc_msgSend_reportingController_createConversationReportingSessionForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:createConversationReportingSessionForConversation:");
}

id objc_msgSend_reportingController_createOneToOneFTReportingSessionForCallWithUUID_withReportingHierarchyToken_withVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:createOneToOneFTReportingSessionForCallWithUUID:withReportingHierarchyToken:withVideo:");
}

id objc_msgSend_reportingController_didEndSession_startDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:didEndSession:startDate:endDate:");
}

id objc_msgSend_reportingController_forCallUUID_report_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:forCallUUID:report:");
}

id objc_msgSend_reportingController_letMeInRequestStateChangedForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:letMeInRequestStateChangedForConversation:");
}

id objc_msgSend_reportingController_messageRetryFailedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:messageRetryFailedForConversationGroupUUID:");
}

id objc_msgSend_reportingController_messageRetryStartedForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:messageRetryStartedForConversationGroupUUID:");
}

id objc_msgSend_reportingController_messageRetrySucceededForConversationGroupUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:messageRetrySucceededForConversationGroupUUID:");
}

id objc_msgSend_reportingController_oneToOneModeSwitchFailureForConversation_isOneToOneMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:oneToOneModeSwitchFailureForConversation:isOneToOneMode:");
}

id objc_msgSend_reportingController_pickedRoute_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:pickedRoute:forCall:");
}

id objc_msgSend_reportingController_pickedRoute_updatedByAnyTriggerForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:pickedRoute:updatedByAnyTriggerForCall:");
}

id objc_msgSend_reportingController_providerFailedWithAction_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:providerFailedWithAction:forCall:");
}

id objc_msgSend_reportingController_receivedConnectionSetupReport_eventType_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedConnectionSetupReport:eventType:forConversation:");
}

id objc_msgSend_reportingController_receivedGroupActivitiesReports_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedGroupActivitiesReports:forConversation:");
}

id objc_msgSend_reportingController_receivedHandoffReport_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedHandoffReport:forConversation:");
}

id objc_msgSend_reportingController_receivedIDSChat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedIDSChat:");
}

id objc_msgSend_reportingController_receivedIDSReports_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedIDSReports:forConversation:");
}

id objc_msgSend_reportingController_receivedIDSReports_forSessionWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedIDSReports:forSessionWithUUID:");
}

id objc_msgSend_reportingController_receivedLetMeInRequestForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:receivedLetMeInRequestForConversation:");
}

id objc_msgSend_reportingController_recordingEndedForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:recordingEndedForSession:");
}

id objc_msgSend_reportingController_relayMessageReceived_fromPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:relayMessageReceived:fromPairedDevice:");
}

id objc_msgSend_reportingController_remoteMemberNotInMemberListForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:remoteMemberNotInMemberListForConversation:");
}

id objc_msgSend_reportingController_remoteMembersChangedForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:remoteMembersChangedForConversation:");
}

id objc_msgSend_reportingController_removedActiveConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:removedActiveConversation:");
}

id objc_msgSend_reportingController_screeningChangedForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:screeningChangedForCall:");
}

id objc_msgSend_reportingController_sentLetMeInResponseForConversation_isApproved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:sentLetMeInResponseForConversation:isApproved:");
}

id objc_msgSend_reportingController_stateChangedForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:stateChangedForConversation:");
}

id objc_msgSend_reportingController_statusChangedForCall_totalCallCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:statusChangedForCall:totalCallCount:");
}

id objc_msgSend_reportingController_timedOutPickingRoute_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:timedOutPickingRoute:forCall:");
}

id objc_msgSend_reportingController_transactionGroupCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:transactionGroupCompleted:");
}

id objc_msgSend_reportingController_transitionAttemptForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:transitionAttemptForConversation:");
}

id objc_msgSend_reportingController_voipAppBecameDisabledFromLaunching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:voipAppBecameDisabledFromLaunching:");
}

id objc_msgSend_reportingController_voipAppFailedToPostIncomingCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:voipAppFailedToPostIncomingCall:");
}

id objc_msgSend_reportingController_voipDOSCallIgnored_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:voipDOSCallIgnored:");
}

id objc_msgSend_reportingController_voipPushDroppedOnTheFloor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportingController:voipPushDroppedOnTheFloor:");
}

id objc_msgSend_reportingControllerServerXPCInterface(void *a1, const char *a2, ...)
{
  return _[a1 reportingControllerServerXPCInterface];
}

id objc_msgSend_reportingHierarchySubToken(void *a1, const char *a2, ...)
{
  return _[a1 reportingHierarchySubToken];
}

id objc_msgSend_reportingHierarchyToken(void *a1, const char *a2, ...)
{
  return _[a1 reportingHierarchyToken];
}

id objc_msgSend_reportingSessionByStreamToken(void *a1, const char *a2, ...)
{
  return _[a1 reportingSessionByStreamToken];
}

id objc_msgSend_representsTransitionFromPending(void *a1, const char *a2, ...)
{
  return _[a1 representsTransitionFromPending];
}

id objc_msgSend_requestActionType(void *a1, const char *a2, ...)
{
  return _[a1 requestActionType];
}

id objc_msgSend_requestActiveParticipants(void *a1, const char *a2, ...)
{
  return _[a1 requestActiveParticipants];
}

id objc_msgSend_requestAnswerForRequest_forCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAnswerForRequest:forCall:");
}

id objc_msgSend_requestAuthorizationForApplicationLaunchWithActivity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAuthorizationForApplicationLaunchWithActivity:completionHandler:");
}

id objc_msgSend_requestAuthorizationForApplicationWithBundleIdentifier_preparing_overrides_currentScreenShareAttributes_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAuthorizationForApplicationWithBundleIdentifier:preparing:overrides:currentScreenShareAttributes:completionHandler:");
}

id objc_msgSend_requestBlobRecoveryOptions(void *a1, const char *a2, ...)
{
  return _[a1 requestBlobRecoveryOptions];
}

id objc_msgSend_requestCLTMThrottleUncapToken(void *a1, const char *a2, ...)
{
  return _[a1 requestCLTMThrottleUncapToken];
}

id objc_msgSend_requestDataCryptorForTopic_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDataCryptorForTopic:completionHandler:");
}

id objc_msgSend_requestEncryptionKeyForParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestEncryptionKeyForParticipants:");
}

id objc_msgSend_requestEncryptionKeyForParticipants_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestEncryptionKeyForParticipants:topic:");
}

id objc_msgSend_requestLetMeInApprovalForPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestLetMeInApprovalForPseudonym:");
}

id objc_msgSend_requestParticipant_toCancelScreenShareRequest_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestParticipant:toCancelScreenShareRequest:conversation:");
}

id objc_msgSend_requestParticipant_toScreenShareWithRequest_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestParticipant:toScreenShareWithRequest:conversation:");
}

id objc_msgSend_requestParticipantToShareScreen_forConversationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestParticipantToShareScreen:forConversationUUID:");
}

id objc_msgSend_requestPendingACInvitations(void *a1, const char *a2, ...)
{
  return _[a1 requestPendingACInvitations];
}

id objc_msgSend_requestPendingVCInvitations(void *a1, const char *a2, ...)
{
  return _[a1 requestPendingVCInvitations];
}

id objc_msgSend_requestPinFromDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestPinFromDevice:");
}

id objc_msgSend_requestPinFromPrimaryDevice(void *a1, const char *a2, ...)
{
  return _[a1 requestPinFromPrimaryDevice];
}

id objc_msgSend_requestStartDateByTransactionID(void *a1, const char *a2, ...)
{
  return _[a1 requestStartDateByTransactionID];
}

id objc_msgSend_requestTimeoutBlockByTransactionID(void *a1, const char *a2, ...)
{
  return _[a1 requestTimeoutBlockByTransactionID];
}

id objc_msgSend_requestToScreenShareEnabled(void *a1, const char *a2, ...)
{
  return _[a1 requestToScreenShareEnabled];
}

id objc_msgSend_requestToShareMyScreen(void *a1, const char *a2, ...)
{
  return _[a1 requestToShareMyScreen];
}

id objc_msgSend_requestToShareScreen(void *a1, const char *a2, ...)
{
  return _[a1 requestToShareScreen];
}

id objc_msgSend_requestTokenForTopic_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTokenForTopic:identifier:");
}

id objc_msgSend_requestTransaction_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestTransaction:completion:");
}

id objc_msgSend_requesterID(void *a1, const char *a2, ...)
{
  return _[a1 requesterID];
}

id objc_msgSend_requiredCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 requiredCapabilities];
}

id objc_msgSend_requiredConnectionCapability(void *a1, const char *a2, ...)
{
  return _[a1 requiredConnectionCapability];
}

id objc_msgSend_requiredLackOfCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 requiredLackOfCapabilities];
}

id objc_msgSend_requiresAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 requiresAuthentication];
}

id objc_msgSend_requiresInCallSounds(void *a1, const char *a2, ...)
{
  return _[a1 requiresInCallSounds];
}

id objc_msgSend_requiresInviteDictionary(void *a1, const char *a2, ...)
{
  return _[a1 requiresInviteDictionary];
}

id objc_msgSend_requiresStrictPolicyEnforcement(void *a1, const char *a2, ...)
{
  return _[a1 requiresStrictPolicyEnforcement];
}

id objc_msgSend_resetActivitySessionSceneAssociationsForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetActivitySessionSceneAssociationsForBundleID:");
}

id objc_msgSend_resetClientCallProvisionalStates(void *a1, const char *a2, ...)
{
  return _[a1 resetClientCallProvisionalStates];
}

id objc_msgSend_resetContentSharingSessionContent(void *a1, const char *a2, ...)
{
  return _[a1 resetContentSharingSessionContent];
}

id objc_msgSend_resetNonScreenSharingSessions(void *a1, const char *a2, ...)
{
  return _[a1 resetNonScreenSharingSessions];
}

id objc_msgSend_resetOneTimeMessage(void *a1, const char *a2, ...)
{
  return _[a1 resetOneTimeMessage];
}

id objc_msgSend_resetSceneAssociationsForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetSceneAssociationsForBundleID:");
}

id objc_msgSend_resetSessions(void *a1, const char *a2, ...)
{
  return _[a1 resetSessions];
}

id objc_msgSend_resignCurrent(void *a1, const char *a2, ...)
{
  return _[a1 resignCurrent];
}

id objc_msgSend_resolutionChangedForResolver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolutionChangedForResolver:");
}

id objc_msgSend_resolveBehaviorForEventDetails_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveBehaviorForEventDetails:error:");
}

id objc_msgSend_resolvedAVLessConversation(void *a1, const char *a2, ...)
{
  return _[a1 resolvedAVLessConversation];
}

id objc_msgSend_resolvedAudioVideoMode(void *a1, const char *a2, ...)
{
  return _[a1 resolvedAudioVideoMode];
}

id objc_msgSend_resolvedCall(void *a1, const char *a2, ...)
{
  return _[a1 resolvedCall];
}

id objc_msgSend_resolvedCallForActiveDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 resolvedCallForActiveDescriptor];
}

id objc_msgSend_resolvedCallForActiveDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedCallForActiveDescriptor:");
}

id objc_msgSend_resolvedConversation(void *a1, const char *a2, ...)
{
  return _[a1 resolvedConversation];
}

id objc_msgSend_resolvedDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 resolvedDescriptor];
}

id objc_msgSend_resolvedHandoffEligibleConversation(void *a1, const char *a2, ...)
{
  return _[a1 resolvedHandoffEligibleConversation];
}

id objc_msgSend_resolvedPresentationMode(void *a1, const char *a2, ...)
{
  return _[a1 resolvedPresentationMode];
}

id objc_msgSend_resolver(void *a1, const char *a2, ...)
{
  return _[a1 resolver];
}

id objc_msgSend_resourceTransferCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 resourceTransferCallbacks];
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_responseInformation(void *a1, const char *a2, ...)
{
  return _[a1 responseInformation];
}

id objc_msgSend_restart(void *a1, const char *a2, ...)
{
  return _[a1 restart];
}

id objc_msgSend_restorePersistedBargeCallsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 restorePersistedBargeCallsIfNecessary];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_retainArguments(void *a1, const char *a2, ...)
{
  return _[a1 retainArguments];
}

id objc_msgSend_retreiveActiveConversations(void *a1, const char *a2, ...)
{
  return _[a1 retreiveActiveConversations];
}

id objc_msgSend_retrieveFirewallAndAddEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveFirewallAndAddEntries:");
}

id objc_msgSend_retrieveFirewallWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveFirewallWithQueue:completion:");
}

id objc_msgSend_retrievePendingMembersFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrievePendingMembersFor:");
}

id objc_msgSend_retrieveSavedProvidersByIdentifierAndNotify_unregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveSavedProvidersByIdentifierAndNotify:unregister:");
}

id objc_msgSend_retrieveSessionWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveSessionWithID:");
}

id objc_msgSend_retryCount(void *a1, const char *a2, ...)
{
  return _[a1 retryCount];
}

id objc_msgSend_reviveOrInvalidateCachedConversationIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 reviveOrInvalidateCachedConversationIfNecessary];
}

id objc_msgSend_revokeBackgroundAuthorizationForBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeBackgroundAuthorizationForBundleID:");
}

id objc_msgSend_revokePseudonym_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokePseudonym:completion:");
}

id objc_msgSend_revokePseudonym_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokePseudonym:completionHandler:");
}

id objc_msgSend_revokePseudonymHandle_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokePseudonymHandle:completionHandler:");
}

id objc_msgSend_revokePseudonymHandle_forConversationProvider_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokePseudonymHandle:forConversationProvider:completionHandler:");
}

id objc_msgSend_revokePseudonymString_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokePseudonymString:completionHandler:");
}

id objc_msgSend_ringtoneSoundURL(void *a1, const char *a2, ...)
{
  return _[a1 ringtoneSoundURL];
}

id objc_msgSend_ringtoneSoundURLString(void *a1, const char *a2, ...)
{
  return _[a1 ringtoneSoundURLString];
}

id objc_msgSend_ringtoneSuppressedRemotely(void *a1, const char *a2, ...)
{
  return _[a1 ringtoneSuppressedRemotely];
}

id objc_msgSend_ringtonesSandboxExtensionDirectory(void *a1, const char *a2, ...)
{
  return _[a1 ringtonesSandboxExtensionDirectory];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_routeController(void *a1, const char *a2, ...)
{
  return _[a1 routeController];
}

id objc_msgSend_routeIdentifierChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 routeIdentifierChangedNotification];
}

id objc_msgSend_routeManager(void *a1, const char *a2, ...)
{
  return _[a1 routeManager];
}

id objc_msgSend_routes(void *a1, const char *a2, ...)
{
  return _[a1 routes];
}

id objc_msgSend_routesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routesAtIndex:");
}

id objc_msgSend_routesByUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 routesByUniqueIdentifier];
}

id objc_msgSend_routesCount(void *a1, const char *a2, ...)
{
  return _[a1 routesCount];
}

id objc_msgSend_rtcKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rtcKey:");
}

id objc_msgSend_rttSettings(void *a1, const char *a2, ...)
{
  return _[a1 rttSettings];
}

id objc_msgSend_runBlocksPendingTransportAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runBlocksPendingTransportAvailability:");
}

id objc_msgSend_runBlocksPendingTransportAvailabilityIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runBlocksPendingTransportAvailabilityIfNecessary:");
}

id objc_msgSend_sKEBlob(void *a1, const char *a2, ...)
{
  return _[a1 sKEBlob];
}

id objc_msgSend_sandboxExtendedImageURL(void *a1, const char *a2, ...)
{
  return _[a1 sandboxExtendedImageURL];
}

id objc_msgSend_sandboxExtensionHandle(void *a1, const char *a2, ...)
{
  return _[a1 sandboxExtensionHandle];
}

id objc_msgSend_sanitize_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitize:completion:");
}

id objc_msgSend_sanitizeAndProcessParticipantUpdate_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitizeAndProcessParticipantUpdate:context:");
}

id objc_msgSend_sanitizeJoinConversationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sanitizeJoinConversationRequest:");
}

id objc_msgSend_sanitizedCallUpdate(void *a1, const char *a2, ...)
{
  return _[a1 sanitizedCallUpdate];
}

id objc_msgSend_sanitizedCopy(void *a1, const char *a2, ...)
{
  return _[a1 sanitizedCopy];
}

id objc_msgSend_sanitizedHandles(void *a1, const char *a2, ...)
{
  return _[a1 sanitizedHandles];
}

id objc_msgSend_saveCustomGreeting_for_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveCustomGreeting:for:");
}

id objc_msgSend_saveData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveData:error:");
}

id objc_msgSend_saveImageToDisk(void *a1, const char *a2, ...)
{
  return _[a1 saveImageToDisk];
}

id objc_msgSend_saveLivePhotoWithPhotoURL_videoURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveLivePhotoWithPhotoURL:videoURL:completion:");
}

id objc_msgSend_savePassword_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savePassword:error:");
}

id objc_msgSend_saveServiceUpdatePushBudget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveServiceUpdatePushBudget:");
}

id objc_msgSend_saveThumperCapabilitiesStates_forPreferenceKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveThumperCapabilitiesStates:forPreferenceKey:");
}

id objc_msgSend_saveVideoWithURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveVideoWithURL:completion:");
}

id objc_msgSend_scaleFactor(void *a1, const char *a2, ...)
{
  return _[a1 scaleFactor];
}

id objc_msgSend_sceneAssociationBehavior(void *a1, const char *a2, ...)
{
  return _[a1 sceneAssociationBehavior];
}

id objc_msgSend_scheduleConversationLinkCheckInInitial_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleConversationLinkCheckInInitial:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_sckSystemPickerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 sckSystemPickerEnabled];
}

id objc_msgSend_screenCaptureQueue(void *a1, const char *a2, ...)
{
  return _[a1 screenCaptureQueue];
}

id objc_msgSend_screenShareAttributes(void *a1, const char *a2, ...)
{
  return _[a1 screenShareAttributes];
}

id objc_msgSend_screenShareContext(void *a1, const char *a2, ...)
{
  return _[a1 screenShareContext];
}

id objc_msgSend_screenShareRequestType(void *a1, const char *a2, ...)
{
  return _[a1 screenShareRequestType];
}

id objc_msgSend_screenShareUUID(void *a1, const char *a2, ...)
{
  return _[a1 screenShareUUID];
}

id objc_msgSend_screenSharingActivityManager(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingActivityManager];
}

id objc_msgSend_screenSharingDeskViewEnabled(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingDeskViewEnabled];
}

id objc_msgSend_screenSharingIntention(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingIntention];
}

id objc_msgSend_screenSharingRequest(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingRequest];
}

id objc_msgSend_screenSharingRequests(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingRequests];
}

id objc_msgSend_screenSharingRequestsByUUID(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingRequestsByUUID];
}

id objc_msgSend_screenSharingType(void *a1, const char *a2, ...)
{
  return _[a1 screenSharingType];
}

id objc_msgSend_screenTimeCallFilter(void *a1, const char *a2, ...)
{
  return _[a1 screenTimeCallFilter];
}

id objc_msgSend_screenToken(void *a1, const char *a2, ...)
{
  return _[a1 screenToken];
}

id objc_msgSend_screenUpdate_withProvider_callSource_callUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenUpdate:withProvider:callSource:callUUID:");
}

id objc_msgSend_screening(void *a1, const char *a2, ...)
{
  return _[a1 screening];
}

id objc_msgSend_screeningAnnouncementHasFinished(void *a1, const char *a2, ...)
{
  return _[a1 screeningAnnouncementHasFinished];
}

id objc_msgSend_screeningCall(void *a1, const char *a2, ...)
{
  return _[a1 screeningCall];
}

id objc_msgSend_screeningCalls(void *a1, const char *a2, ...)
{
  return _[a1 screeningCalls];
}

id objc_msgSend_secondaryThumperAccountForAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryThumperAccountForAccountID:");
}

id objc_msgSend_secondaryThumperAccounts(void *a1, const char *a2, ...)
{
  return _[a1 secondaryThumperAccounts];
}

id objc_msgSend_selectiveSharingSessionUUID(void *a1, const char *a2, ...)
{
  return _[a1 selectiveSharingSessionUUID];
}

id objc_msgSend_sendAnswerCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAnswerCallMessageToHostForCall:");
}

id objc_msgSend_sendApprovalDisplayPinToDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendApprovalDisplayPinToDevice:");
}

id objc_msgSend_sendApprovalResponseToDevice_enteredCorrectly_wasCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendApprovalResponseToDevice:enteredCorrectly:wasCancelled:");
}

id objc_msgSend_sendAutomaticNameAndPhotoUsingDialRequestIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAutomaticNameAndPhotoUsingDialRequestIfPossible:");
}

id objc_msgSend_sendAutomaticNameAndPhotoUsingJoinRequestIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendAutomaticNameAndPhotoUsingJoinRequestIfPossible:");
}

id objc_msgSend_sendCallAnsweredElsewhereMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCallAnsweredElsewhereMessageToClientForCall:");
}

id objc_msgSend_sendCallConnectedMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCallConnectedMessageToClientForCall:");
}

id objc_msgSend_sendCallDialedMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCallDialedMessageToClientForCall:");
}

id objc_msgSend_sendCallDisconnectedMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCallDisconnectedMessageToClientForCall:");
}

id objc_msgSend_sendCallStartedConnectingMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCallStartedConnectingMessageToClientForCall:");
}

id objc_msgSend_sendClientsNotificationName_forCall_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendClientsNotificationName:forCall:userInfo:");
}

id objc_msgSend_sendConversationAudioPriorityToClientForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendConversationAudioPriorityToClientForConversation:");
}

id objc_msgSend_sendConversationToClientForConversation_withConversationMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendConversationToClientForConversation:withConversationMessageType:");
}

id objc_msgSend_sendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:");
}

id objc_msgSend_sendData_forCallID_encrypted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:forCallID:encrypted:");
}

id objc_msgSend_sendData_fromAccount_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:fromAccount:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendData_onConversation_toDestinationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:onConversation:toDestinationID:");
}

id objc_msgSend_sendData_onConversation_toDestinationID_fromMember_additionalOptions_isBlobResponse_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:onConversation:toDestinationID:fromMember:additionalOptions:isBlobResponse:callback:");
}

id objc_msgSend_sendData_onConversation_toHandle_isBlobResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:onConversation:toHandle:isBlobResponse:");
}

id objc_msgSend_sendData_onConversation_toMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:onConversation:toMember:");
}

id objc_msgSend_sendData_onConversation_toMember_additionalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:onConversation:toMember:additionalOptions:");
}

id objc_msgSend_sendData_throughConferenceForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:throughConferenceForIdentifier:");
}

id objc_msgSend_sendData_toDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:toDestinations:");
}

id objc_msgSend_sendData_toDestinations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:toDestinations:completion:");
}

id objc_msgSend_sendData_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendData_waitUntilConnected_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendData:waitUntilConnected:completion:");
}

id objc_msgSend_sendDataAndAcceptInvitationIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDataAndAcceptInvitationIfNecessary:");
}

id objc_msgSend_sendDataAndCancelInvitationIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDataAndCancelInvitationIfNecessary:");
}

id objc_msgSend_sendDataAndDeclineInvitationIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDataAndDeclineInvitationIfNecessary:");
}

id objc_msgSend_sendDataAndSendInvitationIfNecessary_declineOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDataAndSendInvitationIfNecessary:declineOnError:");
}

id objc_msgSend_sendDataBlock(void *a1, const char *a2, ...)
{
  return _[a1 sendDataBlock];
}

id objc_msgSend_sendDataForScreenShareMessage_toParticipant_conversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDataForScreenShareMessage:toParticipant:conversation:");
}

id objc_msgSend_sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDeviceUnavailableMessageToClientForUniqueProxyIdentifier:");
}

id objc_msgSend_sendDialCallFailedForScreenTimeForUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDialCallFailedForScreenTimeForUniqueProxyIdentifier:");
}

id objc_msgSend_sendDialCallFailedForUniqueProxyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDialCallFailedForUniqueProxyIdentifier:");
}

id objc_msgSend_sendDialCallFailedForUniqueProxyIdentifier_withDisconnectedReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDialCallFailedForUniqueProxyIdentifier:withDisconnectedReason:");
}

id objc_msgSend_sendDialCallMessageToHostForCall_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDialCallMessageToHostForCall:completionHandler:");
}

id objc_msgSend_sendDisconnectAllCallsMessageToHostForDisconnectedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDisconnectAllCallsMessageToHostForDisconnectedCall:");
}

id objc_msgSend_sendDisconnectCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDisconnectCallMessageToHostForCall:");
}

id objc_msgSend_sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDisconnectCurrentCallAndActivateHeldMessageToHostForDisconnectedCall:");
}

id objc_msgSend_sendDualSIMRingtoneMetrics(void *a1, const char *a2, ...)
{
  return _[a1 sendDualSIMRingtoneMetrics];
}

id objc_msgSend_sendDualSIMRingtoneStateEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendDualSIMRingtoneStateEvent:");
}

id objc_msgSend_sendEndActiveAndAnswerCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEndActiveAndAnswerCallMessageToHostForCall:");
}

id objc_msgSend_sendEndHeldAndAnswerCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEndHeldAndAnswerCallMessageToHostForCall:");
}

id objc_msgSend_sendGroupCallMessageToHostForCall_otherCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendGroupCallMessageToHostForCall:otherCall:");
}

id objc_msgSend_sendHardPauseAvailabilityMessageToClientForState_digits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendHardPauseAvailabilityMessageToClientForState:digits:");
}

id objc_msgSend_sendHardPauseDigits(void *a1, const char *a2, ...)
{
  return _[a1 sendHardPauseDigits];
}

id objc_msgSend_sendHighlightMessageForConversation_highlightIdentifier_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendHighlightMessageForConversation:highlightIdentifier:type:");
}

id objc_msgSend_sendHoldActiveAndAnswerCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendHoldActiveAndAnswerCallMessageToHostForCall:");
}

id objc_msgSend_sendHoldCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendHoldCallMessageToHostForCall:");
}

id objc_msgSend_sendIDSAction_toDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendIDSAction:toDevice:");
}

id objc_msgSend_sendIDSAction_toDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendIDSAction:toDevices:");
}

id objc_msgSend_sendIncomingCallMessageToClientForCall_cannotBeAnswered_cannotRelayAudioOrVideoOnPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendIncomingCallMessageToClientForCall:cannotBeAnswered:cannotRelayAudioOrVideoOnPairedDevice:");
}

id objc_msgSend_sendInvitationMessageToMember_forConversation_includeAllAttributes_invitationPreferences_additionalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInvitationMessageToMember:forConversation:includeAllAttributes:invitationPreferences:additionalOptions:");
}

id objc_msgSend_sendInvitationSentMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInvitationSentMessageToClientForCall:");
}

id objc_msgSend_sendInvitationWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInvitationWithData:");
}

id objc_msgSend_sendInvitationWithData_declineOnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendInvitationWithData:declineOnError:");
}

id objc_msgSend_sendJoinConversationMessageToHostForCall_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendJoinConversationMessageToHostForCall:completionHandler:");
}

id objc_msgSend_sendLetMeInRequest(void *a1, const char *a2, ...)
{
  return _[a1 sendLetMeInRequest];
}

id objc_msgSend_sendLetMeInResponseToPendingMember_forConversation_usingResponseKeyData_approved_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendLetMeInResponseToPendingMember:forConversation:usingResponseKeyData:approved:callback:");
}

id objc_msgSend_sendMMIOrUSSDCodeWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMMIOrUSSDCodeWithRequest:");
}

id objc_msgSend_sendManualLaunchAttemptEventWithActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendManualLaunchAttemptEventWithActivitySession:");
}

id objc_msgSend_sendManualLaunchNeededEventWithActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendManualLaunchNeededEventWithActivitySession:");
}

id objc_msgSend_sendMessage_andAcceptInvitationIfNecessaryForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:andAcceptInvitationIfNecessaryForIdentifier:");
}

id objc_msgSend_sendMessage_andCancelOrDeclineInvitationIfNecessaryForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:andCancelOrDeclineInvitationIfNecessaryForIdentifier:");
}

id objc_msgSend_sendMessage_andStartSessionIfNecessaryForIdentifier_toDestination_timeout_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:andStartSessionIfNecessaryForIdentifier:toDestination:timeout:completionHandler:");
}

id objc_msgSend_sendMessage_andStartSessionIfNecessaryForIdentifier_toDevicesSupportingProvider_requiresConversationRelay_withTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:andStartSessionIfNecessaryForIdentifier:toDevicesSupportingProvider:requiresConversationRelay:withTimeout:");
}

id objc_msgSend_sendMessage_andStartSessionIfNecessaryForIdentifiers_toDestination_timeout_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:andStartSessionIfNecessaryForIdentifiers:toDestination:timeout:completionHandler:");
}

id objc_msgSend_sendMessage_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:completionHandler:");
}

id objc_msgSend_sendMessage_forConversation_withActivitySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:forConversation:withActivitySession:");
}

id objc_msgSend_sendMessage_forConversation_withActivitySession_additionalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:forConversation:withActivitySession:additionalOptions:");
}

id objc_msgSend_sendMessage_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:forIdentifier:");
}

id objc_msgSend_sendMessage_forIdentifier_customizedForRemoteProtocolVersion_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:forIdentifier:customizedForRemoteProtocolVersion:completionHandler:");
}

id objc_msgSend_sendMessage_forIdentifier_customizedForRemoteProtocolVersion_waitUntilConnected_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:forIdentifier:customizedForRemoteProtocolVersion:waitUntilConnected:completionHandler:");
}

id objc_msgSend_sendMessage_forIdentifier_toDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:forIdentifier:toDestinations:");
}

id objc_msgSend_sendMessage_fromAccount_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:fromAccount:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendMessage_timeout_wantsAcknowledgement_maximumRetryAttempts_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:timeout:wantsAcknowledgement:maximumRetryAttempts:completionHandler:");
}

id objc_msgSend_sendMessage_wantsAcknowledgement_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:wantsAcknowledgement:completionHandler:");
}

id objc_msgSend_sendMessagesForCreatedOrChangedLink_conversation_messageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessagesForCreatedOrChangedLink:conversation:messageType:");
}

id objc_msgSend_sendMessagesForInvalidatedLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessagesForInvalidatedLink:");
}

id objc_msgSend_sendNameAndPhotoToHandles_fromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendNameAndPhotoToHandles:fromID:");
}

id objc_msgSend_sendNeedsManualInCallSoundsChangeMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendNeedsManualInCallSoundsChangeMessageToClientForCall:");
}

id objc_msgSend_sendParticipantData_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendParticipantData:withContext:");
}

id objc_msgSend_sendPendingData(void *a1, const char *a2, ...)
{
  return _[a1 sendPendingData];
}

id objc_msgSend_sendPersonalNicknameToHandleID_fromHandleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPersonalNicknameToHandleID:fromHandleID:");
}

id objc_msgSend_sendPickRouteMessageToHostForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPickRouteMessageToHostForRoute:");
}

id objc_msgSend_sendPinCodeAndPromptForResponseToDevice_forSenderIdentityUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPinCodeAndPromptForResponseToDevice:forSenderIdentityUUID:");
}

id objc_msgSend_sendPlayDTMFToneForKeyMessageForCall_DTMFKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPlayDTMFToneForKeyMessageForCall:DTMFKey:");
}

id objc_msgSend_sendPullCallsMessageToHost(void *a1, const char *a2, ...)
{
  return _[a1 sendPullCallsMessageToHost];
}

id objc_msgSend_sendPullRelayingCallsMessageToClientAndDisconnectCallsWithUPI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPullRelayingCallsMessageToClientAndDisconnectCallsWithUPI:");
}

id objc_msgSend_sendPushCallsMessageToClientDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPushCallsMessageToClientDestination:");
}

id objc_msgSend_sendPushRelayingCallsMessageToHostForSourceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPushRelayingCallsMessageToHostForSourceIdentifier:");
}

id objc_msgSend_sendReceivedDTMFUpdateForCall_dtmfUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendReceivedDTMFUpdateForCall:dtmfUpdate:");
}

id objc_msgSend_sendResetStateMessageToClient(void *a1, const char *a2, ...)
{
  return _[a1 sendResetStateMessageToClient];
}

id objc_msgSend_sendResetWantsHoldMusicMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResetWantsHoldMusicMessageToClientForCall:");
}

id objc_msgSend_sendResourceAtURL_metadata_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendSendHardPauseDigitsMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSendHardPauseDigitsMessageToHostForCall:");
}

id objc_msgSend_sendSessionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSessionMessage:");
}

id objc_msgSend_sendSessionMessage_toDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSessionMessage:toDestinations:");
}

id objc_msgSend_sendSessionServerTerminatedEventWithActivitySession_code_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSessionServerTerminatedEventWithActivitySession:code:");
}

id objc_msgSend_sendSetTTYTypeCallMessageForCall_ttyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetTTYTypeCallMessageForCall:ttyType:");
}

id objc_msgSend_sendSetUplinkMutedCallMessageForCall_uplinkMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSetUplinkMutedCallMessageForCall:uplinkMuted:");
}

id objc_msgSend_sendSuppressRingtoneMessageForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSuppressRingtoneMessageForCall:");
}

id objc_msgSend_sendSwapCallsMessageToHost(void *a1, const char *a2, ...)
{
  return _[a1 sendSwapCallsMessageToHost];
}

id objc_msgSend_sendToScreening(void *a1, const char *a2, ...)
{
  return _[a1 sendToScreening];
}

id objc_msgSend_sendToVoicemailAllowed(void *a1, const char *a2, ...)
{
  return _[a1 sendToVoicemailAllowed];
}

id objc_msgSend_sendUngroupCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUngroupCallMessageToHostForCall:");
}

id objc_msgSend_sendUnholdCallMessageToHostForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUnholdCallMessageToHostForCall:");
}

id objc_msgSend_sendUpdateCallContextMessageToClientForCallProviderManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateCallContextMessageToClientForCallProviderManager:");
}

id objc_msgSend_sendUpdateCallDisplayContextMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateCallDisplayContextMessageToClientForCall:");
}

id objc_msgSend_sendUpdateCallModelMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateCallModelMessageToClientForCall:");
}

id objc_msgSend_sendUpdateConversationsMessageToClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateConversationsMessageToClient:");
}

id objc_msgSend_sendUpdateFailureExpectedMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateFailureExpectedMessageToClientForCall:");
}

id objc_msgSend_sendUpdateRemoteCallStateMessageToClient(void *a1, const char *a2, ...)
{
  return _[a1 sendUpdateRemoteCallStateMessageToClient];
}

id objc_msgSend_sendUpdateRemoteCallStateMessageToClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateRemoteCallStateMessageToClient:");
}

id objc_msgSend_sendUpdateRemoteUplinkMutedCallMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateRemoteUplinkMutedCallMessageToClientForCall:");
}

id objc_msgSend_sendUpdateSupportsDTMFUpdatesToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateSupportsDTMFUpdatesToClientForCall:");
}

id objc_msgSend_sendUpdateSupportsEmergencyFallbackToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateSupportsEmergencyFallbackToClientForCall:");
}

id objc_msgSend_sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUpdateSupportsTTYWithVoiceCallMessageToClientForCall:");
}

id objc_msgSend_sendUserScoreToRTCReporting_withScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendUserScoreToRTCReporting:withScore:");
}